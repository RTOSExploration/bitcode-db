; ModuleID = 'build/96b_argonkey/echo_bot/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type {}
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.z_heap_bucket }
%struct.z_heap_bucket = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.z_heap_bucket }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.z_heap_bucket, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.z_heap_bucket, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config*, void (%struct.device*)* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device*, void (%struct.device*, i8*)*, i8* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type { [2 x i32], i32, i32, [0 x %struct.z_heap_bucket] }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.str_context = type { i8*, i32, i32 }
%struct.chunk_unit_t = type { [8 x i8] }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.z_heap_bucket, %struct.z_heap_bucket }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, %struct.z_heap_bucket, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.z_heap_bucket*, %struct.z_heap_bucket* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229287 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229267 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229257 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229357 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229347 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229337 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229327 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229317 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229307 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231872 to i8*), void (i8*)* inttoptr (i32 134230633 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229297 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134231656 to i8*), void (i8*)* inttoptr (i32 134229277 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [40 x i8*] [i8* bitcast (%struct.k_msgq* @uart_msgq to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct._isr_list* @uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.init_entry* @__init_statics_init_pre to i8*)], section "llvm.metadata"
@uart_msgq = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @uart_msgq, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 32, i32 10, i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i64 1, i64 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i8* getelementptr inbounds ([320 x i8], [320 x i8]* @_k_fifo_buf_uart_msgq, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.uart_msgq", align 4, !dbg !25
@_k_fifo_buf_uart_msgq = internal global [320 x i8] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 4, !dbg !211
@rx_buf_pos = internal unnamed_addr global i32 0, align 4, !dbg !221
@rx_buf = internal global [32 x i8] zeroinitializer, align 1, !dbg !216
@.str = private unnamed_addr constant [23 x i8] c"UART device not found!\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Hello! I'm your echo bot.\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Tell me something and press enter:\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Echo: \00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !262
@.str.5 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !272
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !316
@_vector_start = external dso_local global [0 x i8], align 1
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.z_heap_bucket { i32 101384192 } }], align 4, !dbg !345
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !351
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !490
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !526
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), %struct.z_heap_bucket { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.30, i32 0, i32 0), %struct.z_heap_bucket { i32 285933602 } }], align 4, !dbg !536
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !541
@.str.29 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.30 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !561
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !754
@.str.31 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !715
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !698
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.31, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !671
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !687
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !717
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !731
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !733
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !735
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !737
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !739
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !741
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !743
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !745
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !747
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !749
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !759
@.str.33 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !786
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !881
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !870
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !922
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !779
@.str.46 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1016
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1297
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1267
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1253
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1195
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !777
@.str.1.47 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1299
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1271
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1269
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1209
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !775
@.str.2.48 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1312
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1275
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1273
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1218
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !773
@.str.3.49 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1314
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1279
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1277
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1227
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !771
@.str.4.50 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1316
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1283
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1281
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1233
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !769
@.str.5.51 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1318
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1287
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1285
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1239
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !767
@.str.6 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1320
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1291
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1289
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1245
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !765
@.str.7 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.z_heap_bucket { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1322
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1295
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1293
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1251
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !781
@.str.57 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44, void (%struct.device*)* @uart_stm32_irq_config_func_0 }, align 4, !dbg !1324
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_fill, i32 (%struct.device*, i8*, i32)* @uart_stm32_fifo_read, void (%struct.device*)* @uart_stm32_irq_tx_enable, void (%struct.device*)* @uart_stm32_irq_tx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_ready, void (%struct.device*)* @uart_stm32_irq_rx_enable, void (%struct.device*)* @uart_stm32_irq_rx_disable, i32 (%struct.device*)* @uart_stm32_irq_tx_complete, i32 (%struct.device*)* @uart_stm32_irq_rx_ready, void (%struct.device*)* @uart_stm32_irq_err_enable, void (%struct.device*)* @uart_stm32_irq_err_disable, i32 (%struct.device*)* @uart_stm32_irq_is_pending, i32 (%struct.device*)* @uart_stm32_irq_update, void (%struct.device*, void (%struct.device*, i8*)*, i8*)* @uart_stm32_irq_callback_set }, align 4, !dbg !1560
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1510
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null, void (%struct.device*, i8*)* null, i8* null }, align 4, !dbg !1562
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1501
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1503
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1512
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1520
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1543
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1546
@uart_stm32_irq_config_func_0.__isr_uart_stm32_isr_irq_0 = internal global %struct._isr_list { i32 37, i32 0, i8* bitcast (void (%struct.device*)* @uart_stm32_isr to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*) }, section ".intList", align 4, !dbg !1549
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !854
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1588
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1695
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1697
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1693
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1664
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1699
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1193
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.47, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1207
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.48, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1216
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.49, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1225
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.50, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1231
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.51, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1237
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1243
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1249
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1789
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1830
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1833
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1839
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !1845
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2054
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2063
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2070
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2075
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.107 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.110, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.111, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.112, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.113, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.114, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.108, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.115, i32 0, i32 0)], align 4, !dbg !2101
@.str.109 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.110 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.111 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.112 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.113 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.114 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.108 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.115 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2213
@.str.8 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2226
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2334
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2337
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2339
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2068
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2065
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2341
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2377
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1932
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2375
@.str.183 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1
@__init_statics_init_pre = internal constant %struct.init_entry { i32 (%struct.device*)* @statics_init, %struct.device* null }, section ".z_init_PRE_KERNEL_130_", align 4, !dbg !2380
@_k_heap_list_start = external dso_local global [0 x %struct.k_heap], align 4
@_k_heap_list_end = external dso_local global [0 x %struct.k_heap], align 4

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3128 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3132, !srcloc !3133
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3134, !srcloc !3135
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3136, !srcloc !3137
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3138, !srcloc !3139
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3140, !srcloc !3141
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3142, !srcloc !3143
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3144, !srcloc !3145
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3146, !srcloc !3147
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3148, !srcloc !3149
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3150, !srcloc !3151
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3152, !srcloc !3153
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3154, !srcloc !3155
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3156, !srcloc !3157
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3158, !srcloc !3159
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3160, !srcloc !3161
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3162, !srcloc !3163
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3164, !srcloc !3165
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3166, !srcloc !3167
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3168, !srcloc !3169
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3170, !srcloc !3171
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3172, !srcloc !3173
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3174, !srcloc !3175
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3176, !srcloc !3177
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3178, !srcloc !3179
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3180, !srcloc !3181
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3182, !srcloc !3183
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3184, !srcloc !3185
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3186, !srcloc !3189
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3190, !srcloc !3191
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3192, !srcloc !3193
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3194, !srcloc !3195
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3196, !srcloc !3197
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3198, !srcloc !3199
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3200, !srcloc !3201
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3202, !srcloc !3203
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3204, !srcloc !3205
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3206, !srcloc !3207
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3208, !srcloc !3209
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3210, !srcloc !3211
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3212, !srcloc !3213
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3214, !srcloc !3215
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3216, !srcloc !3217
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3218, !srcloc !3219
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3220, !srcloc !3221
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3222, !srcloc !3223
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3224, !srcloc !3225
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3226, !srcloc !3227
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3228, !srcloc !3229
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3230, !srcloc !3231
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3232, !srcloc !3233
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3234, !srcloc !3235
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3236, !srcloc !3237
  ret void, !dbg !3238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @serial_cb(%struct.device* nocapture readnone %0, i8* nocapture readnone %1) #1 !dbg !3241 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !3243, metadata !DIExpression()), !dbg !3246
  call void @llvm.dbg.value(metadata i8* undef, metadata !3244, metadata !DIExpression()), !dbg !3246
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3247
  %4 = tail call fastcc i32 @uart_irq_update() #26, !dbg !3248
  %5 = icmp eq i32 %4, 0, !dbg !3248
  br i1 %5, label %27, label %6, !dbg !3250

6:                                                ; preds = %2
  %7 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3251
  %8 = icmp eq i32 %7, 0, !dbg !3252
  br i1 %8, label %27, label %9, !dbg !3252

9:                                                ; preds = %6, %24
  call void @llvm.dbg.value(metadata i8* %3, metadata !3245, metadata !DIExpression(DW_OP_deref)), !dbg !3246
  call fastcc void @uart_fifo_read(i8* noundef nonnull %3) #26, !dbg !3253
  %10 = load i8, i8* %3, align 1, !dbg !3255
  call void @llvm.dbg.value(metadata i8 %10, metadata !3245, metadata !DIExpression()), !dbg !3246
  %11 = icmp eq i8 %10, 10, !dbg !3257
  %12 = icmp eq i8 %10, 13
  %13 = or i1 %11, %12, !dbg !3258
  %14 = load i32, i32* @rx_buf_pos, align 4
  %15 = icmp sgt i32 %14, 0
  %16 = select i1 %13, i1 %15, i1 false, !dbg !3258
  br i1 %16, label %17, label %19, !dbg !3258

17:                                               ; preds = %9
  %18 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3259
  store i8 0, i8* %18, align 1, !dbg !3261
  call fastcc void @k_msgq_put() #26, !dbg !3262
  store i32 0, i32* @rx_buf_pos, align 4, !dbg !3263
  br label %24, !dbg !3264

19:                                               ; preds = %9
  %20 = icmp ult i32 %14, 31, !dbg !3265
  br i1 %20, label %21, label %24, !dbg !3267

21:                                               ; preds = %19
  %22 = add nuw nsw i32 %14, 1, !dbg !3268
  store i32 %22, i32* @rx_buf_pos, align 4, !dbg !3268
  %23 = getelementptr inbounds [32 x i8], [32 x i8]* @rx_buf, i32 0, i32 %14, !dbg !3270
  store i8 %10, i8* %23, align 1, !dbg !3271
  br label %24, !dbg !3272

24:                                               ; preds = %19, %21, %17
  %25 = call fastcc i32 @uart_irq_rx_ready() #26, !dbg !3251
  %26 = icmp eq i32 %25, 0, !dbg !3252
  br i1 %26, label %27, label %9, !dbg !3252, !llvm.loop !3273

27:                                               ; preds = %24, %6, %2
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #25, !dbg !3275
  ret void, !dbg !3275
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_update() unnamed_addr #1 !dbg !3276 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3279, metadata !DIExpression()), !dbg !3280
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3281, !srcloc !3283
  %1 = tail call fastcc i32 @z_impl_uart_irq_update() #26, !dbg !3284
  ret i32 %1, !dbg !3285
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @uart_irq_rx_ready() unnamed_addr #1 !dbg !3286 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3288, metadata !DIExpression()), !dbg !3290
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3291
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3289, metadata !DIExpression()), !dbg !3290
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 13, !dbg !3292
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3292
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3294
  br i1 %4, label %7, label %5, !dbg !3295

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !3296
  br label %7, !dbg !3297

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3290
  ret i32 %8, !dbg !3298
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_fifo_read(i8* noundef %0) unnamed_addr #1 !dbg !3299 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3301, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i8* %0, metadata !3302, metadata !DIExpression()), !dbg !3305
  call void @llvm.dbg.value(metadata i32 1, metadata !3303, metadata !DIExpression()), !dbg !3305
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3306
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3304, metadata !DIExpression()), !dbg !3305
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 6, !dbg !3307
  %4 = load i32 (%struct.device*, i8*, i32)*, i32 (%struct.device*, i8*, i32)** %3, align 4, !dbg !3307
  %5 = icmp eq i32 (%struct.device*, i8*, i32)* %4, null, !dbg !3309
  br i1 %5, label %8, label %6, !dbg !3310

6:                                                ; preds = %1
  %7 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8* noundef %0, i32 noundef 1) #27, !dbg !3311
  br label %8, !dbg !3312

8:                                                ; preds = %1, %6
  ret void, !dbg !3313
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_msgq_put() unnamed_addr #1 !dbg !3314 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3326, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3324, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), metadata !3325, metadata !DIExpression()), !dbg !3327
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3328, !srcloc !3330
  %1 = tail call i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @rx_buf, i32 0, i32 0), [1 x i64] zeroinitializer) #27, !dbg !3331
  ret void, !dbg !3332
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_impl_uart_irq_update() unnamed_addr #1 !dbg !3333 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3335, metadata !DIExpression()), !dbg !3337
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3338
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3336, metadata !DIExpression()), !dbg !3337
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 17, !dbg !3339
  %3 = load i32 (%struct.device*)*, i32 (%struct.device*)** %2, align 4, !dbg !3339
  %4 = icmp eq i32 (%struct.device*)* %3, null, !dbg !3341
  br i1 %4, label %7, label %5, !dbg !3342

5:                                                ; preds = %0
  %6 = tail call i32 %3(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !3343
  br label %7, !dbg !3344

7:                                                ; preds = %0, %5
  %8 = phi i32 [ %6, %5 ], [ -88, %0 ], !dbg !3337
  ret i32 %8, !dbg !3345
}

; Function Attrs: noinline nounwind optsize
define dso_local void @print_uart(i8* noundef %0) local_unnamed_addr #1 !dbg !3346 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3350, metadata !DIExpression()), !dbg !3354
  %2 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !3355
  call void @llvm.dbg.value(metadata i32 %2, metadata !3351, metadata !DIExpression()), !dbg !3354
  call void @llvm.dbg.value(metadata i32 0, metadata !3352, metadata !DIExpression()), !dbg !3356
  %3 = icmp sgt i32 %2, 0, !dbg !3357
  br i1 %3, label %5, label %4, !dbg !3359

4:                                                ; preds = %5, %1
  ret void, !dbg !3360

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %9, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3352, metadata !DIExpression()), !dbg !3356
  %7 = getelementptr inbounds i8, i8* %0, i32 %6, !dbg !3361
  %8 = load i8, i8* %7, align 1, !dbg !3361
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %8) #26, !dbg !3363
  %9 = add nuw nsw i32 %6, 1, !dbg !3364
  call void @llvm.dbg.value(metadata i32 %9, metadata !3352, metadata !DIExpression()), !dbg !3356
  %10 = icmp eq i32 %9, %2, !dbg !3357
  br i1 %10, label %4, label %5, !dbg !3359, !llvm.loop !3365
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3367 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3369, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.value(metadata i8 %0, metadata !3370, metadata !DIExpression()), !dbg !3371
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3372, !srcloc !3374
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !3375
  ret void, !dbg !3376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !3377 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3379, metadata !DIExpression()), !dbg !3382
  call void @llvm.dbg.value(metadata i8 %0, metadata !3380, metadata !DIExpression()), !dbg !3382
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3383
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !3381, metadata !DIExpression()), !dbg !3382
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !3384
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !3384
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #27, !dbg !3385
  ret void, !dbg !3386
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3387 {
  %1 = alloca [32 x i8], align 1
  %2 = getelementptr inbounds [32 x i8], [32 x i8]* %1, i32 0, i32 0, !dbg !3390
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3390
  call void @llvm.dbg.declare(metadata [32 x i8]* %1, metadata !3389, metadata !DIExpression()), !dbg !3391
  %3 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !3392
  br i1 %3, label %5, label %4, !dbg !3394

4:                                                ; preds = %0
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0)) #27, !dbg !3395
  br label %11, !dbg !3397

5:                                                ; preds = %0
  tail call fastcc void @uart_irq_callback_user_data_set() #26, !dbg !3398
  tail call fastcc void @uart_irq_rx_enable() #26, !dbg !3399
  tail call void @print_uart(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i32 0, i32 0)) #26, !dbg !3400
  tail call void @print_uart(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i32 0, i32 0)) #26, !dbg !3401
  %6 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3402
  %7 = icmp eq i32 %6, 0, !dbg !3403
  br i1 %7, label %8, label %11, !dbg !3404

8:                                                ; preds = %5, %8
  call void @print_uart(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0)) #26, !dbg !3405
  call void @print_uart(i8* noundef nonnull %2) #26, !dbg !3407
  call void @print_uart(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i32 0, i32 0)) #26, !dbg !3408
  %9 = call fastcc i32 @k_msgq_get(i8* noundef nonnull %2) #26, !dbg !3402
  %10 = icmp eq i32 %9, 0, !dbg !3403
  br i1 %10, label %8, label %11, !dbg !3404, !llvm.loop !3409

11:                                               ; preds = %8, %5, %4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #25, !dbg !3411
  ret void, !dbg !3411
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !3412 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3417, metadata !DIExpression()), !dbg !3418
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3419, !srcloc !3421
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !3422
  ret i1 %1, !dbg !3423
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_callback_user_data_set() unnamed_addr #1 !dbg !3424 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3426, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* @serial_cb, metadata !3427, metadata !DIExpression()), !dbg !3430
  call void @llvm.dbg.value(metadata i8* null, metadata !3428, metadata !DIExpression()), !dbg !3430
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3431
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3429, metadata !DIExpression()), !dbg !3430
  %2 = icmp eq %struct.uart_driver_api* %1, null, !dbg !3432
  br i1 %2, label %8, label %3, !dbg !3434

3:                                                ; preds = %0
  %4 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 18, !dbg !3435
  %5 = load void (%struct.device*, void (%struct.device*, i8*)*, i8*)*, void (%struct.device*, void (%struct.device*, i8*)*, i8*)** %4, align 4, !dbg !3435
  %6 = icmp eq void (%struct.device*, void (%struct.device*, i8*)*, i8*)* %5, null, !dbg !3436
  br i1 %6, label %8, label %7, !dbg !3437

7:                                                ; preds = %3
  tail call void %5(%struct.device* noundef nonnull @__device_dts_ord_44, void (%struct.device*, i8*)* noundef nonnull @serial_cb, i8* noundef null) #27, !dbg !3438
  br label %8, !dbg !3440

8:                                                ; preds = %7, %3, %0
  ret void, !dbg !3441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_irq_rx_enable() unnamed_addr #1 !dbg !3442 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3444, metadata !DIExpression()), !dbg !3445
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3446, !srcloc !3448
  tail call fastcc void @z_impl_uart_irq_rx_enable() #26, !dbg !3449
  ret void, !dbg !3450
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_msgq_get(i8* noundef %0) unnamed_addr #1 !dbg !3451 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3457, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata %struct.k_msgq* @uart_msgq, metadata !3455, metadata !DIExpression()), !dbg !3458
  call void @llvm.dbg.value(metadata i8* %0, metadata !3456, metadata !DIExpression()), !dbg !3458
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3459, !srcloc !3461
  %2 = tail call i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef nonnull @uart_msgq, i8* noundef %0, [1 x i64] [i64 -1]) #27, !dbg !3462
  ret i32 %2, !dbg !3463
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_irq_rx_enable() unnamed_addr #1 !dbg !3464 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3466, metadata !DIExpression()), !dbg !3468
  %1 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !3469
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %1, metadata !3467, metadata !DIExpression()), !dbg !3468
  %2 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %1, i32 0, i32 10, !dbg !3470
  %3 = load void (%struct.device*)*, void (%struct.device*)** %2, align 4, !dbg !3470
  %4 = icmp eq void (%struct.device*)* %3, null, !dbg !3472
  br i1 %4, label %6, label %5, !dbg !3473

5:                                                ; preds = %0
  tail call void %3(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !3474
  br label %6, !dbg !3476

6:                                                ; preds = %5, %0
  ret void, !dbg !3477
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !3478 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !3480, metadata !DIExpression()), !dbg !3481
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !3482
  ret i1 %1, !dbg !3483
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !3484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3486, metadata !DIExpression()), !dbg !3487
  ret i32 0, !dbg !3488
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !3489 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !3493, metadata !DIExpression()), !dbg !3494
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !3495
  ret void, !dbg !3496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #5 !dbg !3497 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !3500
  ret i8* %1, !dbg !3501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !3502 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3514, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i8* %0, metadata !3513, metadata !DIExpression()), !dbg !3523
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !3524
  ret void, !dbg !3526
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !3527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3533
  call void @llvm.dbg.value(metadata i8* %1, metadata !3532, metadata !DIExpression()), !dbg !3533
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3534
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !3534
  ret i32 %4, !dbg !3535
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !3536 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !3548, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3545, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata i8* %1, metadata !3546, metadata !DIExpression()), !dbg !3549
  call void @llvm.dbg.value(metadata i8* %2, metadata !3547, metadata !DIExpression()), !dbg !3549
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !3550
  ret void, !dbg !3551
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !3552 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3556, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.value(metadata i32 %1, metadata !3557, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.value(metadata i32 0, metadata !3558, metadata !DIExpression()), !dbg !3559
  %3 = icmp eq i32 %1, 0, !dbg !3560
  br i1 %3, label %13, label %4, !dbg !3563

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !3558, metadata !DIExpression()), !dbg !3559
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !3564
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !3566
  %8 = load i8, i8* %7, align 1, !dbg !3566
  %9 = zext i8 %8 to i32, !dbg !3566
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !3564
  %11 = add nuw i32 %5, 1, !dbg !3567
  call void @llvm.dbg.value(metadata i32 %11, metadata !3558, metadata !DIExpression()), !dbg !3559
  %12 = icmp eq i32 %11, %1, !dbg !3560
  br i1 %12, label %13, label %4, !dbg !3563, !llvm.loop !3568

13:                                               ; preds = %4, %2
  ret void, !dbg !3570
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !3571 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3575, metadata !DIExpression()), !dbg !3577
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !3578
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3578
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !3576, metadata !DIExpression()), !dbg !3579
  call void @llvm.va_start(i8* nonnull %3), !dbg !3580
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !3581
  %5 = load i32, i32* %4, align 4, !dbg !3581
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !3581
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !3581
  call void @llvm.va_end(i8* nonnull %3), !dbg !3582
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !3583
  ret void, !dbg !3583
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #6

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !3584 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3588, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i32 %1, metadata !3589, metadata !DIExpression()), !dbg !3593
  call void @llvm.dbg.value(metadata i8* %2, metadata !3590, metadata !DIExpression()), !dbg !3593
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !3594
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3594
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !3591, metadata !DIExpression()), !dbg !3595
  call void @llvm.va_start(i8* nonnull %5), !dbg !3596
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !3597
  %7 = load i32, i32* %6, align 4, !dbg !3597
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !3597
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %9, metadata !3592, metadata !DIExpression()), !dbg !3593
  call void @llvm.va_end(i8* nonnull %5), !dbg !3598
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !3599
  ret i32 %9, !dbg !3600
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !3601 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3608, metadata !DIExpression()), !dbg !3615
  call void @llvm.dbg.value(metadata i8* %0, metadata !3605, metadata !DIExpression()), !dbg !3615
  call void @llvm.dbg.value(metadata i32 %1, metadata !3606, metadata !DIExpression()), !dbg !3615
  call void @llvm.dbg.value(metadata i8* %2, metadata !3607, metadata !DIExpression()), !dbg !3615
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !3616
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3616
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !3609, metadata !DIExpression()), !dbg !3617
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !3618
  store i8* %0, i8** %7, align 4, !dbg !3618
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !3618
  store i32 %1, i32* %8, align 4, !dbg !3618
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !3618
  store i32 0, i32* %9, align 4, !dbg !3618
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !3619
  %10 = load i32, i32* %9, align 4, !dbg !3620
  %11 = load i32, i32* %8, align 4, !dbg !3622
  %12 = icmp slt i32 %10, %11, !dbg !3623
  br i1 %12, label %13, label %15, !dbg !3624

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !3625
  store i8 0, i8* %14, align 1, !dbg !3627
  br label %15, !dbg !3628

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !3629
  ret i32 %10, !dbg !3630
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #7 !dbg !3631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3636, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !3637, metadata !DIExpression()), !dbg !3638
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !3639
  %4 = load i8*, i8** %3, align 4, !dbg !3639
  %5 = icmp eq i8* %4, null, !dbg !3641
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !3642
  br i1 %5, label %12, label %8, !dbg !3643

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !3644
  %10 = load i32, i32* %9, align 4, !dbg !3644
  %11 = icmp slt i32 %7, %10, !dbg !3645
  br i1 %11, label %15, label %12, !dbg !3646

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !3647
  %14 = add nsw i32 %7, 1, !dbg !3649
  store i32 %14, i32* %13, align 4, !dbg !3649
  br label %25, !dbg !3650

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !3651
  %17 = icmp eq i32 %7, %16, !dbg !3653
  br i1 %17, label %18, label %21, !dbg !3654

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !3655
  store i32 %19, i32* %6, align 4, !dbg !3655
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3657
  store i8 0, i8* %20, align 1, !dbg !3658
  br label %25, !dbg !3659

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !3660
  %23 = add nsw i32 %7, 1, !dbg !3662
  store i32 %23, i32* %6, align 4, !dbg !3662
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !3663
  store i8 %22, i8* %24, align 1, !dbg !3664
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !3665
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #8 !dbg !3666 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !3676, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i8* %1, metadata !3677, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i8* %2, metadata !3678, metadata !DIExpression()), !dbg !3680
  call void @llvm.dbg.value(metadata i8* %3, metadata !3679, metadata !DIExpression()), !dbg !3680
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !3681
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !3682
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !3683
  unreachable, !dbg !3684
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #9 !dbg !3685 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !3789
  ret %struct.k_thread* %1, !dbg !3790
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !3791 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3795, metadata !DIExpression()), !dbg !3796
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3797, !srcloc !3799
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !3800
  ret void, !dbg !3801
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #9 !dbg !3802 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !3803, !srcloc !3805
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !3806
  ret %struct.k_thread* %1, !dbg !3807
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @sys_heap_free(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #10 !dbg !3808 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !3819, metadata !DIExpression()), !dbg !3823
  call void @llvm.dbg.value(metadata i8* %1, metadata !3820, metadata !DIExpression()), !dbg !3823
  %3 = icmp eq i8* %1, null, !dbg !3824
  br i1 %3, label %8, label %4, !dbg !3826

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !3827
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !3827
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !3821, metadata !DIExpression()), !dbg !3823
  %7 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !3828, !range !3829
  call void @llvm.dbg.value(metadata i32 %7, metadata !3822, metadata !DIExpression()), !dbg !3823
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %7, i1 noundef zeroext false) #26, !dbg !3830
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %7) #26, !dbg !3831
  br label %8

8:                                                ; preds = %2, %4
  ret void, !dbg !3832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %0, i8* noundef %1) unnamed_addr #11 !dbg !3833 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3837, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %1, metadata !3838, metadata !DIExpression()), !dbg !3841
  call void @llvm.dbg.value(metadata i8* %1, metadata !3839, metadata !DIExpression()), !dbg !3841
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3842
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !3840, metadata !DIExpression()), !dbg !3841
  %4 = getelementptr inbounds i8, i8* %1, i32 -4, !dbg !3843
  %5 = ptrtoint i8* %4 to i32, !dbg !3844
  %6 = ptrtoint %struct.chunk_unit_t* %3 to i32, !dbg !3844
  %7 = sub i32 %5, %6, !dbg !3844
  %8 = lshr i32 %7, 3, !dbg !3845
  ret i32 %8, !dbg !3846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @set_chunk_used(%struct.z_heap* noundef %0, i32 noundef %1, i1 noundef zeroext %2) unnamed_addr #7 !dbg !3847 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3851, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata i32 %1, metadata !3852, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata i1 %2, metadata !3853, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3856
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !3857
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !3854, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !3855, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3856
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 2, !dbg !3858
  %6 = bitcast i8* %5 to i16*, !dbg !3858
  %7 = load i16, i16* %6, align 2, !dbg !3858
  %8 = and i16 %7, -2, !dbg !3862
  %9 = zext i1 %2 to i16, !dbg !3862
  %10 = or i16 %8, %9, !dbg !3862
  store i16 %10, i16* %6, align 2, !dbg !3858
  ret void, !dbg !3863
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3864 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3868, metadata !DIExpression()), !dbg !3870
  call void @llvm.dbg.value(metadata i32 %1, metadata !3869, metadata !DIExpression()), !dbg !3870
  %3 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3871
  %4 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3873
  br i1 %4, label %7, label %5, !dbg !3874

5:                                                ; preds = %2
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3875
  %6 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3877
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3878
  br label %7, !dbg !3879

7:                                                ; preds = %5, %2
  %8 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3880, !range !3882
  %9 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3883
  br i1 %9, label %13, label %10, !dbg !3884

10:                                               ; preds = %7
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %8) #26, !dbg !3885
  %11 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3887, !range !3882
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %11, i32 noundef %1) #26, !dbg !3888
  %12 = tail call fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3889
  call void @llvm.dbg.value(metadata i32 %12, metadata !3869, metadata !DIExpression()), !dbg !3870
  br label %13, !dbg !3890

13:                                               ; preds = %10, %7
  %14 = phi i32 [ %1, %7 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !3869, metadata !DIExpression()), !dbg !3870
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %14) #26, !dbg !3891
  ret void, !dbg !3892
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3893 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3897, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.value(metadata i32 %1, metadata !3898, metadata !DIExpression()), !dbg !3899
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3900
  %4 = add i32 %3, %1, !dbg !3901
  ret i32 %4, !dbg !3902
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3903 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3907, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.value(metadata i32 %1, metadata !3908, metadata !DIExpression()), !dbg !3909
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3910
  %4 = and i32 %3, 1, !dbg !3911
  %5 = icmp ne i32 %4, 0, !dbg !3910
  ret i1 %5, !dbg !3912
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3913 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3915, metadata !DIExpression()), !dbg !3920
  call void @llvm.dbg.value(metadata i32 %1, metadata !3916, metadata !DIExpression()), !dbg !3920
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3921, !range !3922
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %4, metadata !3917, metadata !DIExpression()), !dbg !3924
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3925
  ret void, !dbg !3926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @merge_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3927 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3931, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %1, metadata !3932, metadata !DIExpression()), !dbg !3936
  call void @llvm.dbg.value(metadata i32 %2, metadata !3933, metadata !DIExpression()), !dbg !3936
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3937
  %5 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3938
  %6 = add i32 %5, %4, !dbg !3939
  call void @llvm.dbg.value(metadata i32 %6, metadata !3934, metadata !DIExpression()), !dbg !3936
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %6) #26, !dbg !3940
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !3941
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !3942
  ret void, !dbg !3943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @left_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3944 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3946, metadata !DIExpression()), !dbg !3948
  call void @llvm.dbg.value(metadata i32 %1, metadata !3947, metadata !DIExpression()), !dbg !3948
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0) #26, !dbg !3949
  %4 = sub i32 %1, %3, !dbg !3950
  ret i32 %4, !dbg !3951
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @free_list_add(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !3952 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3954, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i32 %1, metadata !3955, metadata !DIExpression()), !dbg !3959
  %3 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !3960, !range !3922
  %4 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %3) #26, !dbg !3961
  call void @llvm.dbg.value(metadata i32 %4, metadata !3956, metadata !DIExpression()), !dbg !3962
  tail call fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %4) #26, !dbg !3963
  ret void, !dbg !3964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #5 !dbg !3965 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3969, metadata !DIExpression()), !dbg !3971
  call void @llvm.dbg.value(metadata i32 %1, metadata !3970, metadata !DIExpression()), !dbg !3971
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1) #26, !dbg !3972
  %4 = lshr i32 %3, 1, !dbg !3973
  ret i32 %4, !dbg !3974
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bucket_idx(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #9 !dbg !3975 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3979, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.value(metadata i32 %1, metadata !3980, metadata !DIExpression()), !dbg !3982
  %3 = tail call fastcc i32 @min_chunk_size(%struct.z_heap* noundef %0) #26, !dbg !3983
  %4 = add i32 %1, 1, !dbg !3984
  %5 = sub i32 %4, %3, !dbg !3985
  call void @llvm.dbg.value(metadata i32 %5, metadata !3981, metadata !DIExpression()), !dbg !3982
  %6 = tail call i32 @llvm.ctlz.i32(i32 %5, i1 false), !dbg !3986, !range !3987
  %7 = sub nsw i32 31, %6, !dbg !3988
  ret i32 %7, !dbg !3989
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_add_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !3990 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !3994, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %1, metadata !3995, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata i32 %2, metadata !3996, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %2), metadata !3997, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4003
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, i32 0, !dbg !4004
  %5 = load i32, i32* %4, align 4, !dbg !4004
  %6 = icmp eq i32 %5, 0, !dbg !4005
  br i1 %6, label %7, label %12, !dbg !4006

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4007
  %9 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4009
  %10 = load i32, i32* %9, align 4, !dbg !4010
  %11 = or i32 %10, %8, !dbg !4010
  store i32 %11, i32* %9, align 4, !dbg !4010
  store i32 %1, i32* %4, align 4, !dbg !4011
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4012
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %1) #26, !dbg !4013
  br label %14, !dbg !4014

12:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !3999, metadata !DIExpression()), !dbg !4015
  %13 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5) #26, !dbg !4016, !range !4017
  call void @llvm.dbg.value(metadata i32 %13, metadata !4002, metadata !DIExpression()), !dbg !4015
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %13) #26, !dbg !4018
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4019
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %13, i32 noundef %1) #26, !dbg !4020
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %5, i32 noundef %1) #26, !dbg !4021
  br label %14

14:                                               ; preds = %12, %7
  ret void, !dbg !4022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4023 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4025, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 %1, metadata !4026, metadata !DIExpression()), !dbg !4028
  call void @llvm.dbg.value(metadata i32 %2, metadata !4027, metadata !DIExpression()), !dbg !4028
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2, i32 noundef %2) #26, !dbg !4029
  ret void, !dbg !4030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4031 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4033, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.value(metadata i32 %1, metadata !4034, metadata !DIExpression()), !dbg !4036
  call void @llvm.dbg.value(metadata i32 %2, metadata !4035, metadata !DIExpression()), !dbg !4036
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3, i32 noundef %2) #26, !dbg !4037
  ret void, !dbg !4038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @prev_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4039 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4041, metadata !DIExpression()), !dbg !4043
  call void @llvm.dbg.value(metadata i32 %1, metadata !4042, metadata !DIExpression()), !dbg !4043
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 2) #26, !dbg !4044
  ret i32 %3, !dbg !4045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @chunk_field(%struct.z_heap* noundef readonly %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 !dbg !4046 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4050, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %1, metadata !4051, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata i32 %2, metadata !4052, metadata !DIExpression()), !dbg !4055
  %4 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4056
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %4, metadata !4053, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4054, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4055
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %4, i32 %1), metadata !4054, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4055
  %5 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %4, i32 %1, i32 0, i32 0, !dbg !4057
  call void @llvm.dbg.value(metadata i8* %5, metadata !4054, metadata !DIExpression()), !dbg !4055
  %6 = bitcast i8* %5 to i16*, !dbg !4058
  %7 = getelementptr inbounds i16, i16* %6, i32 %2, !dbg !4061
  %8 = load i16, i16* %7, align 2, !dbg !4061
  %9 = zext i16 %8 to i32, !dbg !4061
  ret i32 %9, !dbg !4062
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef readnone %0) unnamed_addr #11 !dbg !4063 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4067, metadata !DIExpression()), !dbg !4068
  %2 = bitcast %struct.z_heap* %0 to %struct.chunk_unit_t*, !dbg !4069
  ret %struct.chunk_unit_t* %2, !dbg !4070
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @chunk_set(%struct.z_heap* noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #4 !dbg !4071 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4075, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.value(metadata i32 %1, metadata !4076, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.value(metadata i32 %2, metadata !4077, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.value(metadata i32 %3, metadata !4078, metadata !DIExpression()), !dbg !4081
  %5 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4082
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %5, metadata !4079, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.value(metadata !DIArgList(%struct.chunk_unit_t* %5, i32 %1), metadata !4080, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4081
  %6 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %5, i32 %1, i32 0, i32 0, !dbg !4083
  call void @llvm.dbg.value(metadata i8* %6, metadata !4080, metadata !DIExpression()), !dbg !4081
  %7 = trunc i32 %3 to i16, !dbg !4084
  %8 = bitcast i8* %6 to i16*, !dbg !4087
  %9 = getelementptr inbounds i16, i16* %8, i32 %2, !dbg !4088
  store i16 %7, i16* %9, align 2, !dbg !4089
  ret void, !dbg !4090
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @min_chunk_size(%struct.z_heap* nocapture noundef readnone %0) unnamed_addr #11 !dbg !4091 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4095, metadata !DIExpression()), !dbg !4096
  %2 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %0, i32 noundef 1) #26, !dbg !4097
  ret i32 %2, !dbg !4098
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @bytes_to_chunksz(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4099 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4103, metadata !DIExpression()), !dbg !4105
  call void @llvm.dbg.value(metadata i32 %1, metadata !4104, metadata !DIExpression()), !dbg !4105
  %3 = add i32 %1, 4, !dbg !4106
  %4 = tail call fastcc i32 @chunksz(i32 noundef %3) #26, !dbg !4107
  ret i32 %4, !dbg !4108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz(i32 noundef %0) unnamed_addr #11 !dbg !4109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4113, metadata !DIExpression()), !dbg !4114
  %2 = add i32 %0, 7, !dbg !4115
  %3 = lshr i32 %2, 3, !dbg !4116
  ret i32 %3, !dbg !4117
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4118 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4122, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %1, metadata !4123, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.value(metadata i32 %2, metadata !4124, metadata !DIExpression()), !dbg !4125
  %4 = shl i32 %2, 1, !dbg !4126
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 1, i32 noundef %4) #26, !dbg !4127
  ret void, !dbg !4128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !4129 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4131, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 %1, metadata !4132, metadata !DIExpression()), !dbg !4134
  call void @llvm.dbg.value(metadata i32 %2, metadata !4133, metadata !DIExpression()), !dbg !4134
  tail call fastcc void @chunk_set(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 0, i32 noundef %2) #26, !dbg !4135
  ret void, !dbg !4136
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @free_list_remove_bidx(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4137 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4139, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i32 %1, metadata !4140, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i32 %2, metadata !4141, metadata !DIExpression()), !dbg !4147
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %2, !dbg !4148
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %4, metadata !4142, metadata !DIExpression()), !dbg !4147
  %5 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4149
  %6 = icmp eq i32 %5, %1, !dbg !4150
  br i1 %6, label %7, label %14, !dbg !4151

7:                                                ; preds = %3
  %8 = shl nuw i32 1, %2, !dbg !4152
  %9 = xor i32 %8, -1, !dbg !4154
  %10 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4155
  %11 = load i32, i32* %10, align 4, !dbg !4156
  %12 = and i32 %11, %9, !dbg !4156
  store i32 %12, i32* %10, align 4, !dbg !4156
  %13 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4157
  store i32 0, i32* %13, align 4, !dbg !4158
  br label %17, !dbg !4159

14:                                               ; preds = %3
  %15 = tail call fastcc i32 @prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4160
  call void @llvm.dbg.value(metadata i32 %15, metadata !4143, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i32 %5, metadata !4146, metadata !DIExpression()), !dbg !4161
  %16 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %4, i32 0, i32 0, !dbg !4162
  store i32 %5, i32* %16, align 4, !dbg !4163
  tail call fastcc void @set_next_free_chunk(%struct.z_heap* noundef %0, i32 noundef %15, i32 noundef %5) #26, !dbg !4164
  tail call fastcc void @set_prev_free_chunk(%struct.z_heap* noundef %0, i32 noundef %5, i32 noundef %15) #26, !dbg !4165
  br label %17

17:                                               ; preds = %14, %7
  ret void, !dbg !4166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @next_free_chunk(%struct.z_heap* noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4167 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4169, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.value(metadata i32 %1, metadata !4170, metadata !DIExpression()), !dbg !4171
  %3 = tail call fastcc i32 @chunk_field(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef 3) #26, !dbg !4172
  ret i32 %3, !dbg !4173
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @sys_heap_usable_size(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #5 !dbg !4174 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4178, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i8* %1, metadata !4179, metadata !DIExpression()), !dbg !4185
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4186
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4186
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4180, metadata !DIExpression()), !dbg !4185
  %5 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %4, i8* noundef %1) #26, !dbg !4187
  call void @llvm.dbg.value(metadata i32 %5, metadata !4181, metadata !DIExpression()), !dbg !4185
  %6 = ptrtoint i8* %1 to i32, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %6, metadata !4182, metadata !DIExpression()), !dbg !4185
  %7 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %4) #26, !dbg !4189
  %8 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %7, i32 %5, !dbg !4189
  %9 = ptrtoint %struct.chunk_unit_t* %8 to i32, !dbg !4190
  call void @llvm.dbg.value(metadata i32 %9, metadata !4183, metadata !DIExpression()), !dbg !4185
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %5) #26, !dbg !4191
  %11 = shl i32 %10, 3, !dbg !4192
  call void @llvm.dbg.value(metadata i32 %11, metadata !4184, metadata !DIExpression()), !dbg !4185
  %12 = sub i32 %9, %6, !dbg !4193
  %13 = add i32 %12, %11, !dbg !4194
  ret i32 %13, !dbg !4195
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 !dbg !4196 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4200, metadata !DIExpression()), !dbg !4206
  call void @llvm.dbg.value(metadata i32 %1, metadata !4201, metadata !DIExpression()), !dbg !4206
  %3 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4207
  %4 = load %struct.z_heap*, %struct.z_heap** %3, align 4, !dbg !4207
  call void @llvm.dbg.value(metadata %struct.z_heap* %4, metadata !4202, metadata !DIExpression()), !dbg !4206
  %5 = icmp eq i32 %1, 0, !dbg !4208
  br i1 %5, label %19, label %6, !dbg !4210

6:                                                ; preds = %2
  %7 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4211
  br i1 %7, label %19, label %8, !dbg !4212

8:                                                ; preds = %6
  %9 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %4, i32 noundef %1) #26, !dbg !4213, !range !3829
  call void @llvm.dbg.value(metadata i32 %9, metadata !4204, metadata !DIExpression()), !dbg !4206
  %10 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %4, i32 noundef %9) #26, !dbg !4214
  call void @llvm.dbg.value(metadata i32 %10, metadata !4205, metadata !DIExpression()), !dbg !4206
  %11 = icmp eq i32 %10, 0, !dbg !4215
  br i1 %11, label %19, label %12, !dbg !4217

12:                                               ; preds = %8
  %13 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4218
  %14 = icmp ugt i32 %13, %9, !dbg !4220
  br i1 %14, label %15, label %17, !dbg !4221

15:                                               ; preds = %12
  %16 = add i32 %10, %9, !dbg !4222
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %4, i32 noundef %10, i32 noundef %16) #26, !dbg !4224
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %4, i32 noundef %16) #26, !dbg !4225
  br label %17, !dbg !4226

17:                                               ; preds = %15, %12
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %4, i32 noundef %10, i1 noundef zeroext true) #26, !dbg !4227
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %4, i32 noundef %10) #26, !dbg !4228
  call void @llvm.dbg.value(metadata i8* %18, metadata !4203, metadata !DIExpression()), !dbg !4206
  br label %19, !dbg !4229

19:                                               ; preds = %17, %8, %2, %6
  %20 = phi i8* [ null, %6 ], [ null, %2 ], [ %18, %17 ], [ null, %8 ], !dbg !4206
  ret i8* %20, !dbg !4230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @size_too_big(%struct.z_heap* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #5 !dbg !4231 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4235, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.value(metadata i32 %1, metadata !4236, metadata !DIExpression()), !dbg !4237
  %3 = lshr i32 %1, 3, !dbg !4238
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 1, !dbg !4239
  %5 = load i32, i32* %4, align 4, !dbg !4239
  %6 = icmp uge i32 %3, %5, !dbg !4240
  ret i1 %6, !dbg !4241
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @alloc_chunk(%struct.z_heap* noundef %0, i32 noundef %1) unnamed_addr #12 !dbg !4242 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4246, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.value(metadata i32 %1, metadata !4247, metadata !DIExpression()), !dbg !4261
  %3 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %3, metadata !4248, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.value(metadata !DIArgList(%struct.z_heap* %0, i32 %3), metadata !4249, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 4, DW_OP_mul, DW_OP_plus, DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !4261
  %4 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %3, i32 0, !dbg !4263
  %5 = load i32, i32* %4, align 4, !dbg !4263
  %6 = icmp eq i32 %5, 0, !dbg !4264
  br i1 %6, label %19, label %7, !dbg !4265

7:                                                ; preds = %2, %13
  %8 = phi i32 [ %14, %13 ], [ %5, %2 ], !dbg !4266
  %9 = phi i32 [ %15, %13 ], [ 3, %2 ], !dbg !4267
  call void @llvm.dbg.value(metadata i32 %9, metadata !4253, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.value(metadata i32 %8, metadata !4254, metadata !DIExpression()), !dbg !4268
  %10 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4269
  %11 = icmp ult i32 %10, %1, !dbg !4271
  br i1 %11, label %13, label %12, !dbg !4272

12:                                               ; preds = %7
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %8, i32 noundef %3) #26, !dbg !4273
  br label %30

13:                                               ; preds = %7
  %14 = tail call fastcc i32 @next_free_chunk(%struct.z_heap* noundef nonnull %0, i32 noundef %8) #26, !dbg !4275
  store i32 %14, i32* %4, align 4, !dbg !4276
  %15 = add nsw i32 %9, -1, !dbg !4277
  call void @llvm.dbg.value(metadata i32 %15, metadata !4253, metadata !DIExpression()), !dbg !4267
  %16 = icmp eq i32 %15, 0, !dbg !4277
  %17 = icmp eq i32 %14, %5
  %18 = select i1 %16, i1 true, i1 %17, !dbg !4278
  br i1 %18, label %19, label %7, !dbg !4278, !llvm.loop !4279

19:                                               ; preds = %13, %2
  %20 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 2, !dbg !4282
  %21 = load i32, i32* %20, align 4, !dbg !4282
  %22 = add nsw i32 %3, 1, !dbg !4283
  %23 = shl nsw i32 -1, %22, !dbg !4283
  %24 = and i32 %21, %23, !dbg !4284
  call void @llvm.dbg.value(metadata i32 %24, metadata !4256, metadata !DIExpression()), !dbg !4261
  %25 = icmp eq i32 %24, 0, !dbg !4285
  br i1 %25, label %30, label %26, !dbg !4286

26:                                               ; preds = %19
  %27 = tail call i32 @llvm.cttz.i32(i32 %24, i1 true), !dbg !4287, !range !3987
  call void @llvm.dbg.value(metadata i32 %27, metadata !4257, metadata !DIExpression()), !dbg !4288
  %28 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %0, i32 0, i32 3, i32 %27, i32 0, !dbg !4289
  %29 = load i32, i32* %28, align 4, !dbg !4289
  call void @llvm.dbg.value(metadata i32 %29, metadata !4260, metadata !DIExpression()), !dbg !4288
  tail call fastcc void @free_list_remove_bidx(%struct.z_heap* noundef nonnull %0, i32 noundef %29, i32 noundef %27) #26, !dbg !4290
  br label %30

30:                                               ; preds = %12, %26, %19
  %31 = phi i32 [ %29, %26 ], [ 0, %19 ], [ %8, %12 ], !dbg !4261
  ret i32 %31, !dbg !4291
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @split_chunks(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !4292 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4294, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata i32 %1, metadata !4295, metadata !DIExpression()), !dbg !4300
  call void @llvm.dbg.value(metadata i32 %2, metadata !4296, metadata !DIExpression()), !dbg !4300
  %4 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %0, i32 noundef %1) #26, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %4, metadata !4297, metadata !DIExpression()), !dbg !4300
  %5 = sub i32 %2, %1, !dbg !4302
  call void @llvm.dbg.value(metadata i32 %5, metadata !4298, metadata !DIExpression()), !dbg !4300
  %6 = sub i32 %4, %5, !dbg !4303
  call void @llvm.dbg.value(metadata i32 %6, metadata !4299, metadata !DIExpression()), !dbg !4300
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %1, i32 noundef %5) #26, !dbg !4304
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %6) #26, !dbg !4305
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %2, i32 noundef %5) #26, !dbg !4306
  %7 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %0, i32 noundef %2) #26, !dbg !4307
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef %0, i32 noundef %7, i32 noundef %6) #26, !dbg !4308
  ret void, !dbg !4309
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @chunk_mem(%struct.z_heap* noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4310 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4314, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 %1, metadata !4315, metadata !DIExpression()), !dbg !4318
  %3 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %0) #26, !dbg !4319
  call void @llvm.dbg.value(metadata %struct.chunk_unit_t* %3, metadata !4316, metadata !DIExpression()), !dbg !4318
  %4 = getelementptr inbounds %struct.chunk_unit_t, %struct.chunk_unit_t* %3, i32 %1, i32 0, i32 4, !dbg !4320
  call void @llvm.dbg.value(metadata i8* %4, metadata !4317, metadata !DIExpression()), !dbg !4318
  ret i8* %4, !dbg !4321
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i8* @sys_heap_aligned_alloc(%struct.sys_heap* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4322 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4326, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i32 %1, metadata !4327, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i32 %2, metadata !4328, metadata !DIExpression()), !dbg !4338
  %4 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4339
  %5 = load %struct.z_heap*, %struct.z_heap** %4, align 4, !dbg !4339
  call void @llvm.dbg.value(metadata %struct.z_heap* %5, metadata !4329, metadata !DIExpression()), !dbg !4338
  %6 = sub i32 0, %1, !dbg !4340
  %7 = and i32 %6, %1, !dbg !4341
  call void @llvm.dbg.value(metadata i32 %7, metadata !4331, metadata !DIExpression()), !dbg !4338
  %8 = icmp eq i32 %7, %1, !dbg !4342
  br i1 %8, label %13, label %9, !dbg !4344

9:                                                ; preds = %3
  %10 = sub i32 %1, %7, !dbg !4345
  call void @llvm.dbg.value(metadata i32 %10, metadata !4327, metadata !DIExpression()), !dbg !4338
  %11 = icmp ult i32 %7, 4, !dbg !4347
  %12 = select i1 %11, i32 %7, i32 4, !dbg !4347
  br label %17, !dbg !4347

13:                                               ; preds = %3
  %14 = icmp ult i32 %1, 5, !dbg !4348
  br i1 %14, label %15, label %17, !dbg !4351

15:                                               ; preds = %13
  %16 = tail call i8* @sys_heap_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2) #26, !dbg !4352
  br label %57, !dbg !4354

17:                                               ; preds = %9, %13
  %18 = phi i32 [ 0, %13 ], [ %7, %9 ], !dbg !4338
  %19 = phi i32 [ 4, %13 ], [ %12, %9 ], !dbg !4355
  %20 = phi i32 [ %1, %13 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !4327, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i32 %19, metadata !4330, metadata !DIExpression()), !dbg !4338
  call void @llvm.dbg.value(metadata i32 %18, metadata !4331, metadata !DIExpression()), !dbg !4338
  %21 = icmp eq i32 %2, 0, !dbg !4356
  br i1 %21, label %57, label %22, !dbg !4358

22:                                               ; preds = %17
  %23 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %5, i32 noundef %2) #26, !dbg !4359
  br i1 %23, label %57, label %24, !dbg !4360

24:                                               ; preds = %22
  %25 = sub i32 %2, %19, !dbg !4361
  %26 = add i32 %25, %20, !dbg !4362
  %27 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %5, i32 noundef %26) #26, !dbg !4363, !range !3829
  call void @llvm.dbg.value(metadata i32 %27, metadata !4332, metadata !DIExpression()), !dbg !4338
  %28 = tail call fastcc i32 @alloc_chunk(%struct.z_heap* noundef %5, i32 noundef %27) #26, !dbg !4364
  call void @llvm.dbg.value(metadata i32 %28, metadata !4333, metadata !DIExpression()), !dbg !4338
  %29 = icmp eq i32 %28, 0, !dbg !4365
  br i1 %29, label %57, label %30, !dbg !4367

30:                                               ; preds = %24
  %31 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4368
  call void @llvm.dbg.value(metadata i8* %31, metadata !4334, metadata !DIExpression()), !dbg !4338
  %32 = getelementptr inbounds i8, i8* %31, i32 %18, !dbg !4369
  %33 = ptrtoint i8* %32 to i32, !dbg !4369
  %34 = add i32 %20, -1, !dbg !4369
  %35 = add i32 %34, %33, !dbg !4369
  %36 = sub i32 0, %20, !dbg !4369
  %37 = and i32 %35, %36, !dbg !4369
  %38 = inttoptr i32 %37 to i8*, !dbg !4370
  %39 = sub i32 0, %18, !dbg !4371
  %40 = getelementptr inbounds i8, i8* %38, i32 %39, !dbg !4371
  call void @llvm.dbg.value(metadata i8* %40, metadata !4334, metadata !DIExpression()), !dbg !4338
  %41 = getelementptr inbounds i8, i8* %40, i32 %2, !dbg !4372
  %42 = ptrtoint i8* %41 to i32, !dbg !4372
  %43 = add i32 %42, 7, !dbg !4372
  %44 = and i32 %43, -8, !dbg !4372
  call void @llvm.dbg.value(metadata i32 %44, metadata !4335, metadata !DIExpression()), !dbg !4338
  %45 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %5, i8* noundef %40) #26, !dbg !4373
  call void @llvm.dbg.value(metadata i32 %45, metadata !4336, metadata !DIExpression()), !dbg !4338
  %46 = tail call fastcc %struct.chunk_unit_t* @chunk_buf(%struct.z_heap* noundef %5) #26, !dbg !4374
  %47 = ptrtoint %struct.chunk_unit_t* %46 to i32, !dbg !4375
  %48 = sub i32 %44, %47, !dbg !4375
  %49 = ashr exact i32 %48, 3, !dbg !4375
  call void @llvm.dbg.value(metadata i32 %49, metadata !4337, metadata !DIExpression()), !dbg !4338
  %50 = icmp ugt i32 %45, %28, !dbg !4376
  br i1 %50, label %51, label %52, !dbg !4378

51:                                               ; preds = %30
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %28, i32 noundef %45) #26, !dbg !4379
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %28) #26, !dbg !4381
  br label %52, !dbg !4382

52:                                               ; preds = %51, %30
  %53 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %5, i32 noundef %45) #26, !dbg !4383
  %54 = icmp ugt i32 %53, %49, !dbg !4385
  br i1 %54, label %55, label %56, !dbg !4386

55:                                               ; preds = %52
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %5, i32 noundef %45, i32 noundef %49) #26, !dbg !4387
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %5, i32 noundef %49) #26, !dbg !4389
  br label %56, !dbg !4390

56:                                               ; preds = %55, %52
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %5, i32 noundef %45, i1 noundef zeroext true) #26, !dbg !4391
  br label %57

57:                                               ; preds = %56, %24, %17, %22, %15
  %58 = phi i8* [ %16, %15 ], [ null, %22 ], [ null, %17 ], [ %40, %56 ], [ null, %24 ], !dbg !4338
  ret i8* %58, !dbg !4392
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @sys_heap_aligned_realloc(%struct.sys_heap* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !4393 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4397, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.value(metadata i8* %1, metadata !4398, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.value(metadata i32 %2, metadata !4399, metadata !DIExpression()), !dbg !4416
  call void @llvm.dbg.value(metadata i32 %3, metadata !4400, metadata !DIExpression()), !dbg !4416
  %5 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4417
  %6 = load %struct.z_heap*, %struct.z_heap** %5, align 4, !dbg !4417
  call void @llvm.dbg.value(metadata %struct.z_heap* %6, metadata !4401, metadata !DIExpression()), !dbg !4416
  %7 = icmp eq i8* %1, null, !dbg !4418
  br i1 %7, label %8, label %10, !dbg !4420

8:                                                ; preds = %4
  %9 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4421
  br label %59, !dbg !4423

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0, !dbg !4424
  br i1 %11, label %12, label %13, !dbg !4426

12:                                               ; preds = %10
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4427
  br label %59, !dbg !4429

13:                                               ; preds = %10
  %14 = tail call fastcc zeroext i1 @size_too_big(%struct.z_heap* noundef %6, i32 noundef %3) #26, !dbg !4430
  br i1 %14, label %59, label %15, !dbg !4432

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @mem_to_chunkid(%struct.z_heap* noundef %6, i8* noundef nonnull %1) #26, !dbg !4433, !range !3829
  call void @llvm.dbg.value(metadata i32 %16, metadata !4402, metadata !DIExpression()), !dbg !4416
  %17 = tail call fastcc i32 @right_chunk(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %17, metadata !4403, metadata !DIExpression()), !dbg !4416
  %18 = tail call fastcc i8* @chunk_mem(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4435
  %19 = ptrtoint i8* %1 to i32, !dbg !4436
  %20 = ptrtoint i8* %18 to i32, !dbg !4436
  %21 = sub i32 %19, %20, !dbg !4436
  call void @llvm.dbg.value(metadata i32 %21, metadata !4404, metadata !DIExpression()), !dbg !4416
  %22 = add i32 %21, %3, !dbg !4437
  %23 = tail call fastcc i32 @bytes_to_chunksz(%struct.z_heap* noundef %6, i32 noundef %22) #26, !dbg !4438
  call void @llvm.dbg.value(metadata i32 %23, metadata !4405, metadata !DIExpression()), !dbg !4416
  %24 = icmp eq i32 %2, 0, !dbg !4439
  br i1 %24, label %29, label %25, !dbg !4440

25:                                               ; preds = %15
  %26 = add i32 %2, -1, !dbg !4441
  %27 = and i32 %26, %19, !dbg !4442
  %28 = icmp eq i32 %27, 0, !dbg !4442
  br i1 %28, label %29, label %49, !dbg !4443

29:                                               ; preds = %25, %15
  %30 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4444
  %31 = icmp eq i32 %23, %30, !dbg !4445
  br i1 %31, label %59, label %32, !dbg !4446

32:                                               ; preds = %29
  %33 = icmp ult i32 %23, %30, !dbg !4447
  br i1 %33, label %34, label %36, !dbg !4448

34:                                               ; preds = %32
  %35 = add i32 %23, %16, !dbg !4449
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %35) #26, !dbg !4451
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4452
  tail call fastcc void @free_chunk(%struct.z_heap* noundef %6, i32 noundef %35) #26, !dbg !4453
  br label %59, !dbg !4454

36:                                               ; preds = %32
  %37 = tail call fastcc zeroext i1 @chunk_used(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4455
  br i1 %37, label %49, label %38, !dbg !4456

38:                                               ; preds = %36
  %39 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4457
  %40 = add i32 %39, %30, !dbg !4458
  %41 = icmp ult i32 %40, %23, !dbg !4459
  br i1 %41, label %49, label %42, !dbg !4460

42:                                               ; preds = %38
  %43 = sub i32 %23, %30, !dbg !4461
  call void @llvm.dbg.value(metadata i32 %43, metadata !4406, metadata !DIExpression()), !dbg !4462
  tail call fastcc void @free_list_remove(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4463
  %44 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %17) #26, !dbg !4464
  %45 = icmp ult i32 %43, %44, !dbg !4466
  br i1 %45, label %46, label %48, !dbg !4467

46:                                               ; preds = %42
  %47 = add i32 %43, %17, !dbg !4468
  tail call fastcc void @split_chunks(%struct.z_heap* noundef %6, i32 noundef %17, i32 noundef %47) #26, !dbg !4470
  tail call fastcc void @free_list_add(%struct.z_heap* noundef %6, i32 noundef %47) #26, !dbg !4471
  br label %48, !dbg !4472

48:                                               ; preds = %46, %42
  tail call fastcc void @merge_chunks(%struct.z_heap* noundef %6, i32 noundef %16, i32 noundef %17) #26, !dbg !4473
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef %6, i32 noundef %16, i1 noundef zeroext true) #26, !dbg !4474
  br label %59

49:                                               ; preds = %38, %36, %25
  %50 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef nonnull %0, i32 noundef %2, i32 noundef %3) #26, !dbg !4475
  call void @llvm.dbg.value(metadata i8* %50, metadata !4412, metadata !DIExpression()), !dbg !4416
  %51 = icmp eq i8* %50, null, !dbg !4476
  br i1 %51, label %59, label %52, !dbg !4477

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @chunk_size(%struct.z_heap* noundef %6, i32 noundef %16) #26, !dbg !4478, !range !3922
  %54 = tail call fastcc i32 @chunksz_to_bytes(%struct.z_heap* noundef %6, i32 noundef %53) #26, !dbg !4479
  %55 = sub i32 %54, %21, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %55, metadata !4413, metadata !DIExpression()), !dbg !4481
  %56 = icmp ult i32 %55, %3, !dbg !4482
  %57 = select i1 %56, i32 %55, i32 %3, !dbg !4482
  %58 = tail call i8* @memcpy(i8* noundef nonnull %50, i8* noundef nonnull %1, i32 noundef %57) #27, !dbg !4483
  tail call void @sys_heap_free(%struct.sys_heap* noundef nonnull %0, i8* noundef nonnull %1) #26, !dbg !4484
  br label %59, !dbg !4485

59:                                               ; preds = %34, %48, %29, %52, %49, %13, %12, %8
  %60 = phi i8* [ %9, %8 ], [ null, %12 ], [ null, %13 ], [ %1, %34 ], [ %1, %48 ], [ %1, %29 ], [ %50, %52 ], [ null, %49 ], !dbg !4416
  ret i8* %60, !dbg !4486
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @chunksz_to_bytes(%struct.z_heap* nocapture noundef readnone %0, i32 noundef %1) unnamed_addr #11 !dbg !4487 {
  call void @llvm.dbg.value(metadata %struct.z_heap* %0, metadata !4491, metadata !DIExpression()), !dbg !4493
  call void @llvm.dbg.value(metadata i32 %1, metadata !4492, metadata !DIExpression()), !dbg !4493
  %3 = shl i32 %1, 3, !dbg !4494
  %4 = add i32 %3, -4, !dbg !4495
  ret i32 %4, !dbg !4496
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local void @sys_heap_init(%struct.sys_heap* nocapture noundef writeonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 !dbg !4497 {
  call void @llvm.dbg.value(metadata %struct.sys_heap* %0, metadata !4501, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i8* %1, metadata !4502, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i32 %2, metadata !4503, metadata !DIExpression()), !dbg !4512
  %4 = add i32 %2, -4, !dbg !4513
  call void @llvm.dbg.value(metadata i32 %4, metadata !4503, metadata !DIExpression()), !dbg !4512
  %5 = ptrtoint i8* %1 to i32, !dbg !4514
  %6 = add i32 %5, 7, !dbg !4514
  %7 = and i32 %6, -8, !dbg !4514
  call void @llvm.dbg.value(metadata i32 %7, metadata !4504, metadata !DIExpression()), !dbg !4512
  %8 = getelementptr inbounds i8, i8* %1, i32 %4, !dbg !4515
  %9 = ptrtoint i8* %8 to i32, !dbg !4515
  %10 = and i32 %9, -8, !dbg !4515
  call void @llvm.dbg.value(metadata i32 %10, metadata !4505, metadata !DIExpression()), !dbg !4512
  %11 = sub i32 %10, %7, !dbg !4516
  %12 = lshr exact i32 %11, 3, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %12, metadata !4506, metadata !DIExpression()), !dbg !4512
  %13 = inttoptr i32 %7 to %struct.z_heap*, !dbg !4518
  call void @llvm.dbg.value(metadata %struct.z_heap* %13, metadata !4507, metadata !DIExpression()), !dbg !4512
  %14 = getelementptr inbounds %struct.sys_heap, %struct.sys_heap* %0, i32 0, i32 0, !dbg !4519
  store %struct.z_heap* %13, %struct.z_heap** %14, align 4, !dbg !4520
  %15 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 1, !dbg !4521
  store i32 %12, i32* %15, align 8, !dbg !4522
  %16 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 2, !dbg !4523
  store i32 0, i32* %16, align 4, !dbg !4524
  %17 = tail call fastcc i32 @bucket_idx(%struct.z_heap* noundef %13, i32 noundef %12) #26, !dbg !4525
  call void @llvm.dbg.value(metadata i32 %17, metadata !4508, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4512
  %18 = shl i32 %17, 2, !dbg !4526
  %19 = add i32 %18, 20, !dbg !4527
  %20 = tail call fastcc i32 @chunksz(i32 noundef %19) #26, !dbg !4528
  call void @llvm.dbg.value(metadata i32 %20, metadata !4509, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.value(metadata i32 0, metadata !4510, metadata !DIExpression()), !dbg !4529
  %21 = icmp slt i32 %17, 0, !dbg !4530
  br i1 %21, label %22, label %24, !dbg !4532

22:                                               ; preds = %24, %3
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef %20) #26, !dbg !4533
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i32 noundef 0) #26, !dbg !4534
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef 0, i1 noundef zeroext true) #26, !dbg !4535
  %23 = sub i32 %12, %20, !dbg !4536
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %23) #26, !dbg !4537
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %20, i32 noundef %20) #26, !dbg !4538
  tail call fastcc void @set_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef 0) #26, !dbg !4539
  tail call fastcc void @set_left_chunk_size(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i32 noundef %23) #26, !dbg !4540
  tail call fastcc void @set_chunk_used(%struct.z_heap* noundef nonnull %13, i32 noundef %12, i1 noundef zeroext true) #26, !dbg !4541
  tail call fastcc void @free_list_add(%struct.z_heap* noundef nonnull %13, i32 noundef %20) #26, !dbg !4542
  ret void, !dbg !4543

24:                                               ; preds = %3, %24
  %25 = phi i32 [ %27, %24 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %25, metadata !4510, metadata !DIExpression()), !dbg !4529
  %26 = getelementptr inbounds %struct.z_heap, %struct.z_heap* %13, i32 0, i32 3, i32 %25, i32 0, !dbg !4544
  store i32 0, i32* %26, align 4, !dbg !4546
  %27 = add nuw i32 %25, 1, !dbg !4547
  call void @llvm.dbg.value(metadata i32 %27, metadata !4510, metadata !DIExpression()), !dbg !4529
  %28 = icmp eq i32 %25, %17, !dbg !4530
  br i1 %28, label %22, label %24, !dbg !4532, !llvm.loop !4548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4550 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4563, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4560, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %1, metadata !4561, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %2, metadata !4562, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %4, metadata !4564, metadata !DIExpression()), !dbg !4691
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4692
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4692
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4565, metadata !DIExpression()), !dbg !4693
  call void @llvm.dbg.value(metadata i32 0, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i1 undef, metadata !4571, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4691
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4694

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4694

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4695
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4563, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %30, metadata !4562, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %29, metadata !4569, metadata !DIExpression()), !dbg !4691
  %31 = load i8, i8* %30, align 1, !dbg !4696
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4694

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4696
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4697
  call void @llvm.dbg.value(metadata i8* %34, metadata !4562, metadata !DIExpression()), !dbg !4691
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !4697
  call void @llvm.dbg.value(metadata i32 %35, metadata !4573, metadata !DIExpression()), !dbg !4698
  %36 = icmp slt i32 %35, 0, !dbg !4699
  %37 = add i32 %29, 1, !dbg !4697
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %36, label %365, label %28, !llvm.loop !4701

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4703
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4578, metadata !DIExpression()), !dbg !4704
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4704
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4623, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4626, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8* %30, metadata !4629, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i32 -1, metadata !4630, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i32 -1, metadata !4631, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8* null, metadata !4632, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8* %14, metadata !4633, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8 0, metadata !4634, metadata !DIExpression()), !dbg !4705
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !4706
  call void @llvm.dbg.value(metadata i8* %39, metadata !4562, metadata !DIExpression()), !dbg !4691
  %40 = load i24, i24* %15, align 8, !dbg !4707
  %41 = and i24 %40, 256, !dbg !4707
  %42 = icmp eq i24 %41, 0, !dbg !4707
  br i1 %42, label %51, label %43, !dbg !4709

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4710
  call void @llvm.dbg.value(metadata i8* %44, metadata !4563, metadata !DIExpression()), !dbg !4691
  %45 = bitcast i8* %27 to i32*, !dbg !4710
  %46 = load i32, i32* %45, align 4, !dbg !4710
  call void @llvm.dbg.value(metadata i32 %46, metadata !4630, metadata !DIExpression()), !dbg !4705
  %47 = icmp slt i32 %46, 0, !dbg !4712
  br i1 %47, label %48, label %56, !dbg !4714

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4715
  store i24 %49, i24* %15, align 8, !dbg !4715
  %50 = sub nsw i32 0, %46, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %50, metadata !4630, metadata !DIExpression()), !dbg !4705
  br label %56, !dbg !4718

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4719
  %53 = icmp eq i24 %52, 0, !dbg !4719
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4721
  br label %56, !dbg !4721

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4722
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4705
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4563, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %58, metadata !4630, metadata !DIExpression()), !dbg !4705
  %60 = and i24 %57, 1024, !dbg !4722
  %61 = icmp eq i24 %60, 0, !dbg !4722
  br i1 %61, label %69, label %62, !dbg !4723

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4724
  call void @llvm.dbg.value(metadata i8* %63, metadata !4563, metadata !DIExpression()), !dbg !4691
  %64 = bitcast i8* %59 to i32*, !dbg !4724
  %65 = load i32, i32* %64, align 4, !dbg !4724
  call void @llvm.dbg.value(metadata i32 %65, metadata !4635, metadata !DIExpression()), !dbg !4725
  %66 = icmp slt i32 %65, 0, !dbg !4726
  br i1 %66, label %67, label %74, !dbg !4728

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4729
  store i24 %68, i24* %15, align 8, !dbg !4729
  br label %74, !dbg !4731

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4732
  %71 = icmp eq i24 %70, 0, !dbg !4732
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4734
  br label %74, !dbg !4734

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4735
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4705
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4705
  call void @llvm.dbg.value(metadata i8* %77, metadata !4563, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %76, metadata !4631, metadata !DIExpression()), !dbg !4705
  store i32 0, i32* %16, align 4, !dbg !4736
  store i32 0, i32* %17, align 8, !dbg !4737
  %78 = lshr i24 %75, 16, !dbg !4735
  call void @llvm.dbg.value(metadata i24 %78, metadata !4638, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4705
  %79 = lshr i24 %75, 11, !dbg !4738
  %80 = and i24 %79, 15, !dbg !4738
  %81 = zext i24 %80 to i32, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %81, metadata !4639, metadata !DIExpression()), !dbg !4705
  %82 = trunc i24 %78 to i3, !dbg !4739
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4739

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4740

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4743
  call void @llvm.dbg.value(metadata i8* %85, metadata !4563, metadata !DIExpression()), !dbg !4691
  %86 = bitcast i8* %77 to i32*, !dbg !4743
  %87 = load i32, i32* %86, align 4, !dbg !4743
  %88 = sext i32 %87 to i64, !dbg !4743
  store i64 %88, i64* %20, align 8, !dbg !4745
  br label %115, !dbg !4746

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4747
  call void @llvm.dbg.value(metadata i8* %90, metadata !4563, metadata !DIExpression()), !dbg !4691
  %91 = bitcast i8* %77 to i32*, !dbg !4747
  %92 = load i32, i32* %91, align 4, !dbg !4747
  %93 = sext i32 %92 to i64, !dbg !4747
  store i64 %93, i64* %20, align 8, !dbg !4750
  br label %115, !dbg !4751

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4752
  %96 = add i32 %95, 7, !dbg !4752
  %97 = and i32 %96, -8, !dbg !4752
  %98 = inttoptr i32 %97 to i8*, !dbg !4752
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4752
  call void @llvm.dbg.value(metadata i8* %99, metadata !4563, metadata !DIExpression()), !dbg !4691
  %100 = inttoptr i32 %97 to i64*, !dbg !4752
  %101 = load i64, i64* %100, align 8, !dbg !4752
  store i64 %101, i64* %20, align 8, !dbg !4753
  br label %115, !dbg !4754

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4755
  %104 = add i32 %103, 7, !dbg !4755
  %105 = and i32 %104, -8, !dbg !4755
  %106 = inttoptr i32 %105 to i8*, !dbg !4755
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4755
  call void @llvm.dbg.value(metadata i8* %107, metadata !4563, metadata !DIExpression()), !dbg !4691
  %108 = inttoptr i32 %105 to i64*, !dbg !4755
  %109 = load i64, i64* %108, align 8, !dbg !4755
  store i64 %109, i64* %20, align 8, !dbg !4756
  br label %115, !dbg !4757

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4758
  call void @llvm.dbg.value(metadata i8* %111, metadata !4563, metadata !DIExpression()), !dbg !4691
  %112 = bitcast i8* %77 to i32*, !dbg !4758
  %113 = load i32, i32* %112, align 4, !dbg !4758
  %114 = sext i32 %113 to i64, !dbg !4759
  store i64 %114, i64* %20, align 8, !dbg !4760
  br label %115, !dbg !4761

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4762
  call void @llvm.dbg.value(metadata i8* %117, metadata !4563, metadata !DIExpression()), !dbg !4691
  %118 = trunc i24 %79 to i4, !dbg !4763
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4763

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4764
  %121 = ashr exact i64 %120, 56, !dbg !4764
  store i64 %121, i64* %20, align 8, !dbg !4767
  br label %177, !dbg !4768

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4769
  %124 = ashr exact i64 %123, 48, !dbg !4769
  store i64 %124, i64* %20, align 8, !dbg !4772
  br label %177, !dbg !4773

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4774

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4777
  call void @llvm.dbg.value(metadata i8* %127, metadata !4563, metadata !DIExpression()), !dbg !4691
  %128 = bitcast i8* %77 to i32*, !dbg !4777
  %129 = load i32, i32* %128, align 4, !dbg !4777
  %130 = zext i32 %129 to i64, !dbg !4777
  store i64 %130, i64* %20, align 8, !dbg !4779
  br label %157, !dbg !4780

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4781
  call void @llvm.dbg.value(metadata i8* %132, metadata !4563, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %132, metadata !4563, metadata !DIExpression()), !dbg !4691
  %133 = bitcast i8* %77 to i32*, !dbg !4781
  %134 = load i32, i32* %133, align 4, !dbg !4781
  %135 = zext i32 %134 to i64, !dbg !4781
  store i64 %135, i64* %20, align 8, !dbg !4781
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4783
  %138 = add i32 %137, 7, !dbg !4783
  %139 = and i32 %138, -8, !dbg !4783
  %140 = inttoptr i32 %139 to i8*, !dbg !4783
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %141, metadata !4563, metadata !DIExpression()), !dbg !4691
  %142 = inttoptr i32 %139 to i64*, !dbg !4783
  %143 = load i64, i64* %142, align 8, !dbg !4783
  store i64 %143, i64* %20, align 8, !dbg !4784
  br label %157, !dbg !4785

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4786
  %146 = add i32 %145, 7, !dbg !4786
  %147 = and i32 %146, -8, !dbg !4786
  %148 = inttoptr i32 %147 to i8*, !dbg !4786
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4786
  call void @llvm.dbg.value(metadata i8* %149, metadata !4563, metadata !DIExpression()), !dbg !4691
  %150 = inttoptr i32 %147 to i64*, !dbg !4786
  %151 = load i64, i64* %150, align 8, !dbg !4786
  store i64 %151, i64* %20, align 8, !dbg !4787
  br label %157, !dbg !4788

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4789
  call void @llvm.dbg.value(metadata i8* %153, metadata !4563, metadata !DIExpression()), !dbg !4691
  %154 = bitcast i8* %77 to i32*, !dbg !4789
  %155 = load i32, i32* %154, align 4, !dbg !4789
  %156 = zext i32 %155 to i64, !dbg !4790
  store i64 %156, i64* %20, align 8, !dbg !4791
  br label %157, !dbg !4792

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4793
  call void @llvm.dbg.value(metadata i8* %159, metadata !4563, metadata !DIExpression()), !dbg !4691
  %160 = trunc i24 %79 to i4, !dbg !4794
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4794

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4795
  store i64 %162, i64* %20, align 8, !dbg !4798
  br label %177, !dbg !4799

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4800
  store i64 %164, i64* %20, align 8, !dbg !4803
  br label %177, !dbg !4804

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4805
  %167 = add i32 %166, 7, !dbg !4805
  %168 = and i32 %167, -8, !dbg !4805
  %169 = inttoptr i32 %168 to i8*, !dbg !4805
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4805
  call void @llvm.dbg.value(metadata i8* %170, metadata !4563, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %170, metadata !4563, metadata !DIExpression()), !dbg !4691
  %171 = inttoptr i32 %168 to double*, !dbg !4805
  %172 = load double, double* %171, align 8, !dbg !4805
  store double %172, double* %19, align 8, !dbg !4805
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4809
  call void @llvm.dbg.value(metadata i8* %174, metadata !4563, metadata !DIExpression()), !dbg !4691
  %175 = bitcast i8* %77 to i8**, !dbg !4809
  %176 = load i8*, i8** %175, align 4, !dbg !4809
  store i8* %176, i8** %18, align 8, !dbg !4812
  br label %177, !dbg !4813

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4705
  call void @llvm.dbg.value(metadata i8* %178, metadata !4563, metadata !DIExpression()), !dbg !4691
  %179 = and i24 %75, 3, !dbg !4814
  %180 = icmp eq i24 %179, 0, !dbg !4814
  br i1 %180, label %185, label %181, !dbg !4814

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !4815
  call void @llvm.dbg.value(metadata i32 %182, metadata !4640, metadata !DIExpression()), !dbg !4816
  %183 = icmp slt i32 %182, 0, !dbg !4817
  %184 = add i32 %182, %29, !dbg !4815
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4819
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4820

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !4821
  call void @llvm.dbg.value(metadata i32 %188, metadata !4644, metadata !DIExpression()), !dbg !4822
  %189 = icmp slt i32 %188, 0, !dbg !4823
  %190 = add i32 %29, 1, !dbg !4821
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4825
  call void @llvm.dbg.value(metadata i8* %192, metadata !4632, metadata !DIExpression()), !dbg !4705
  %193 = icmp sgt i32 %76, -1, !dbg !4826
  br i1 %193, label %194, label %196, !dbg !4828

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !4829
  call void @llvm.dbg.value(metadata i32 %195, metadata !4647, metadata !DIExpression()), !dbg !4831
  br label %241, !dbg !4832

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %197, metadata !4647, metadata !DIExpression()), !dbg !4831
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4632, metadata !DIExpression()), !dbg !4705
  %199 = load i64, i64* %20, align 8, !dbg !4835
  %200 = trunc i64 %199 to i8, !dbg !4836
  store i8 %200, i8* %10, align 1, !dbg !4837
  call void @llvm.dbg.value(metadata i8* %23, metadata !4633, metadata !DIExpression()), !dbg !4705
  br label %245, !dbg !4838

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4839
  %203 = icmp eq i24 %202, 0, !dbg !4839
  %204 = trunc i24 %75 to i8, !dbg !4841
  %205 = shl i8 %204, 1, !dbg !4841
  %206 = and i8 %205, 32, !dbg !4841
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4841
  call void @llvm.dbg.value(metadata i8 %207, metadata !4634, metadata !DIExpression()), !dbg !4705
  %208 = load i64, i64* %20, align 8, !dbg !4842
  call void @llvm.dbg.value(metadata i64 %208, metadata !4570, metadata !DIExpression()), !dbg !4691
  %209 = icmp slt i64 %208, 0, !dbg !4843
  br i1 %209, label %210, label %212, !dbg !4845

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4634, metadata !DIExpression()), !dbg !4705
  %211 = sub nsw i64 0, %208, !dbg !4846
  store i64 %211, i64* %20, align 8, !dbg !4848
  br label %212, !dbg !4849

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4705
  call void @llvm.dbg.value(metadata i8 %213, metadata !4634, metadata !DIExpression()), !dbg !4705
  %214 = load i64, i64* %20, align 8, !dbg !4850
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4851
  call void @llvm.dbg.value(metadata i8* %215, metadata !4632, metadata !DIExpression()), !dbg !4705
  br label %216, !dbg !4852

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4853
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4854
  call void @llvm.dbg.value(metadata i8* %218, metadata !4632, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8 %217, metadata !4634, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.label(metadata !4690), !dbg !4855
  %219 = icmp sgt i32 %76, -1, !dbg !4856
  br i1 %219, label %222, label %220, !dbg !4857

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4858
  br label %245, !dbg !4857

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4860
  %224 = sub i32 %22, %223, !dbg !4860
  call void @llvm.dbg.value(metadata i32 %224, metadata !4649, metadata !DIExpression()), !dbg !4861
  %225 = load i24, i24* %15, align 8, !dbg !4862
  %226 = and i24 %225, -65, !dbg !4862
  store i24 %226, i24* %15, align 8, !dbg !4862
  %227 = icmp ugt i32 %76, %224, !dbg !4863
  br i1 %227, label %228, label %245, !dbg !4865

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4866
  store i32 %229, i32* %16, align 4, !dbg !4868
  br label %245, !dbg !4869

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4870
  %232 = icmp eq i8* %231, null, !dbg !4872
  br i1 %232, label %245, label %233, !dbg !4873

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4874
  %235 = zext i32 %234 to i64, !dbg !4874
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !4876
  call void @llvm.dbg.value(metadata i8* %236, metadata !4632, metadata !DIExpression()), !dbg !4705
  %237 = load i24, i24* %15, align 8, !dbg !4877
  %238 = or i24 %237, 1048576, !dbg !4877
  store i24 %238, i24* %15, align 8, !dbg !4877
  store i8 120, i8* %21, align 1, !dbg !4878
  br label %216, !dbg !4879

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4880
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !4883
  br label %363, !dbg !4884

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4885
  call void @llvm.dbg.value(metadata i32 %242, metadata !4647, metadata !DIExpression()), !dbg !4831
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4886
  call void @llvm.dbg.value(metadata i32 -1, metadata !4631, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i32 %29, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8* %192, metadata !4632, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8* %243, metadata !4633, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8 0, metadata !4634, metadata !DIExpression()), !dbg !4705
  %244 = icmp eq i8* %192, null, !dbg !4887
  br i1 %244, label %363, label %245, !dbg !4889, !llvm.loop !4701

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4858
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4705
  call void @llvm.dbg.value(metadata i32 0, metadata !4653, metadata !DIExpression()), !dbg !4705
  %250 = zext i8 %249 to i32, !dbg !4890
  %251 = icmp eq i8 %249, 0, !dbg !4892
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  call void @llvm.dbg.value(metadata i32 undef, metadata !4652, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  call void @llvm.dbg.value(metadata i32 undef, metadata !4652, metadata !DIExpression()), !dbg !4705
  %252 = icmp sgt i32 %58, 0, !dbg !4893
  br i1 %252, label %253, label %302, !dbg !4894

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4858
  %255 = icmp eq i24 %254, 0, !dbg !4858
  %256 = ptrtoint i8* %248 to i32, !dbg !4895
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  %257 = ptrtoint i8* %247 to i32, !dbg !4895
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  %258 = xor i1 %251, true, !dbg !4896
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  %259 = sext i1 %258 to i32, !dbg !4896
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  %260 = lshr i24 %246, 19, !dbg !4897
  %261 = and i24 %260, 1, !dbg !4897
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4897
  %263 = zext i24 %262 to i32, !dbg !4897
  %264 = add i32 %257, %259, !dbg !4897
  %265 = add i32 %256, %263, !dbg !4897
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  %266 = and i24 %246, 4194304, !dbg !4898
  %267 = icmp eq i24 %266, 0, !dbg !4898
  %268 = load i32, i32* %16, align 4, !dbg !4900
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4652, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4705
  call void @llvm.dbg.value(metadata i32 undef, metadata !4652, metadata !DIExpression()), !dbg !4705
  %269 = load i32, i32* %17, align 8, !dbg !4901
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4901
  call void @llvm.dbg.value(metadata i32 undef, metadata !4652, metadata !DIExpression()), !dbg !4705
  %271 = add i32 %264, %58, !dbg !4901
  %272 = add i32 %265, %268, !dbg !4901
  %273 = add i32 %272, %270, !dbg !4902
  %274 = sub i32 %271, %273, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %274, metadata !4630, metadata !DIExpression()), !dbg !4705
  %275 = and i24 %246, 4, !dbg !4903
  %276 = icmp eq i24 %275, 0, !dbg !4903
  br i1 %276, label %277, label %302, !dbg !4904

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4654, metadata !DIExpression()), !dbg !4905
  %278 = and i24 %246, 64, !dbg !4906
  %279 = icmp eq i24 %278, 0, !dbg !4906
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4907
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4907
  %282 = select i1 %279, i32 32, i32 48, !dbg !4907
  br i1 %280, label %287, label %283, !dbg !4907

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !4908
  call void @llvm.dbg.value(metadata i32 %284, metadata !4659, metadata !DIExpression()), !dbg !4909
  %285 = icmp slt i32 %284, 0, !dbg !4910
  %286 = add i32 %29, 1, !dbg !4908
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4705
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4695
  call void @llvm.dbg.value(metadata i32 %290, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i8 undef, metadata !4654, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.value(metadata i8 %288, metadata !4634, metadata !DIExpression()), !dbg !4705
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4912
  %292 = add i32 %291, -1, !dbg !4912
  br label %293, !dbg !4912

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4913
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4695
  call void @llvm.dbg.value(metadata i32 %295, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %294, metadata !4630, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i32 %294, metadata !4630, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4705
  %296 = icmp sgt i32 %294, 0, !dbg !4914
  br i1 %296, label %297, label %302, !dbg !4912

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4915
  call void @llvm.dbg.value(metadata i32 %298, metadata !4630, metadata !DIExpression()), !dbg !4705
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !4916
  call void @llvm.dbg.value(metadata i32 %299, metadata !4665, metadata !DIExpression()), !dbg !4917
  %300 = icmp slt i32 %299, 0, !dbg !4918
  %301 = add i32 %295, 1, !dbg !4916
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %300, label %361, label %293, !llvm.loop !4920

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4705
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4705
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4695
  call void @llvm.dbg.value(metadata i32 %305, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %304, metadata !4630, metadata !DIExpression()), !dbg !4705
  call void @llvm.dbg.value(metadata i8 %303, metadata !4634, metadata !DIExpression()), !dbg !4705
  %306 = icmp eq i8 %303, 0, !dbg !4922
  br i1 %306, label %312, label %307, !dbg !4923

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4924
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !4925
  call void @llvm.dbg.value(metadata i32 %309, metadata !4668, metadata !DIExpression()), !dbg !4926
  %310 = icmp slt i32 %309, 0, !dbg !4927
  %311 = add i32 %305, 1, !dbg !4925
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4695
  call void @llvm.dbg.value(metadata i32 %313, metadata !4569, metadata !DIExpression()), !dbg !4691
  %314 = lshr i24 %246, 20, !dbg !4929
  %315 = lshr i24 %246, 19, !dbg !4930
  %316 = or i24 %314, %315, !dbg !4931
  %317 = and i24 %316, 1, !dbg !4931
  %318 = icmp eq i24 %317, 0, !dbg !4931
  br i1 %318, label %323, label %319, !dbg !4932

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4933
  call void @llvm.dbg.value(metadata i32 %320, metadata !4672, metadata !DIExpression()), !dbg !4934
  %321 = icmp slt i32 %320, 0, !dbg !4935
  %322 = add i32 %313, 1, !dbg !4933
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4695
  call void @llvm.dbg.value(metadata i32 %324, metadata !4569, metadata !DIExpression()), !dbg !4691
  %325 = and i24 %246, 1048576, !dbg !4937
  %326 = icmp eq i24 %325, 0, !dbg !4937
  br i1 %326, label %333, label %327, !dbg !4938

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !4939
  %329 = zext i8 %328 to i32, !dbg !4939
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !4939
  call void @llvm.dbg.value(metadata i32 %330, metadata !4678, metadata !DIExpression()), !dbg !4940
  %331 = icmp slt i32 %330, 0, !dbg !4941
  %332 = add i32 %324, 1, !dbg !4939
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4695
  call void @llvm.dbg.value(metadata i32 %334, metadata !4569, metadata !DIExpression()), !dbg !4691
  %335 = load i32, i32* %16, align 4, !dbg !4943
  call void @llvm.dbg.value(metadata i32 %335, metadata !4653, metadata !DIExpression()), !dbg !4705
  br label %336, !dbg !4944

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !4945
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4695
  call void @llvm.dbg.value(metadata i32 %338, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %337, metadata !4653, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4705
  %339 = icmp sgt i32 %337, 0, !dbg !4946
  br i1 %339, label %340, label %345, !dbg !4944

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %341, metadata !4653, metadata !DIExpression()), !dbg !4705
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !4948
  call void @llvm.dbg.value(metadata i32 %342, metadata !4682, metadata !DIExpression()), !dbg !4949
  %343 = icmp slt i32 %342, 0, !dbg !4950
  %344 = add i32 %338, 1, !dbg !4948
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %343, label %361, label %336, !llvm.loop !4952

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %346, metadata !4685, metadata !DIExpression()), !dbg !4955
  %347 = icmp slt i32 %346, 0, !dbg !4956
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !4954
  call void @llvm.dbg.value(metadata i32 %349, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %304, metadata !4630, metadata !DIExpression()), !dbg !4705
  %350 = icmp sgt i32 %304, 0, !dbg !4958
  br i1 %350, label %351, label %363, !dbg !4959

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !4959
  %353 = add i32 %352, %338, !dbg !4959
  br label %354, !dbg !4959

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %355, metadata !4630, metadata !DIExpression()), !dbg !4705
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !4960
  call void @llvm.dbg.value(metadata i32 %356, metadata !4687, metadata !DIExpression()), !dbg !4961
  %357 = icmp slt i32 %356, 0, !dbg !4962
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !4964
  call void @llvm.dbg.value(metadata i32 undef, metadata !4569, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4691
  call void @llvm.dbg.value(metadata i32 %359, metadata !4630, metadata !DIExpression()), !dbg !4705
  %360 = icmp sgt i32 %355, 1, !dbg !4958
  br i1 %360, label %354, label %363, !dbg !4959, !llvm.loop !4965

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4702
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4695
  call void @llvm.dbg.value(metadata i32 %364, metadata !4569, metadata !DIExpression()), !dbg !4691
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !4702
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4691
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !4967
  ret i32 %366, !dbg !4967
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !4968 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !4972, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i8* %1, metadata !4973, metadata !DIExpression()), !dbg !4974
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !4975
  store i24 0, i24* %3, align 4, !dbg !4975
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !4975
  store i8 0, i8* %4, align 1, !dbg !4975
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !4975
  store i32 0, i32* %5, align 4, !dbg !4975
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !4975
  store i32 0, i32* %6, align 4, !dbg !4975
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4976
  call void @llvm.dbg.value(metadata i8* %7, metadata !4973, metadata !DIExpression()), !dbg !4974
  %8 = load i8, i8* %7, align 1, !dbg !4977
  %9 = icmp eq i8 %8, 37, !dbg !4979
  br i1 %9, label %10, label %12, !dbg !4980

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4981
  call void @llvm.dbg.value(metadata i8* %11, metadata !4973, metadata !DIExpression()), !dbg !4974
  store i8 37, i8* %4, align 1, !dbg !4983
  br label %18, !dbg !4984

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !4985
  call void @llvm.dbg.value(metadata i8* %13, metadata !4973, metadata !DIExpression()), !dbg !4974
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !4986
  call void @llvm.dbg.value(metadata i8* %14, metadata !4973, metadata !DIExpression()), !dbg !4974
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !4987
  call void @llvm.dbg.value(metadata i8* %15, metadata !4973, metadata !DIExpression()), !dbg !4974
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !4988
  call void @llvm.dbg.value(metadata i8* %16, metadata !4973, metadata !DIExpression()), !dbg !4974
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !4989
  call void @llvm.dbg.value(metadata i8* %17, metadata !4973, metadata !DIExpression()), !dbg !4974
  br label %18, !dbg !4990

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !4974
  ret i8* %19, !dbg !4991
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !4992 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4996, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %1, metadata !4997, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %2, metadata !4998, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %3, metadata !4999, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i32 0, metadata !5000, metadata !DIExpression()), !dbg !5003
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5004

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5005
  call void @llvm.dbg.value(metadata i32 %9, metadata !5000, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.value(metadata i8* %8, metadata !4998, metadata !DIExpression()), !dbg !5003
  %10 = icmp ult i8* %8, %3, !dbg !5006
  br i1 %10, label %11, label %13, !dbg !5007

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5008
  br label %17, !dbg !5007

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5009

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5010
  %16 = icmp eq i8 %15, 0, !dbg !5009
  br i1 %16, label %24, label %17, !dbg !5004

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5008
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5011
  call void @llvm.dbg.value(metadata i8* %19, metadata !4998, metadata !DIExpression()), !dbg !5003
  %20 = zext i8 %18 to i32, !dbg !5012
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5013
  call void @llvm.dbg.value(metadata i32 %21, metadata !5001, metadata !DIExpression()), !dbg !5014
  %22 = icmp slt i32 %21, 0, !dbg !5015
  %23 = add i32 %9, 1, !dbg !5017
  call void @llvm.dbg.value(metadata i32 undef, metadata !5000, metadata !DIExpression()), !dbg !5003
  br i1 %22, label %24, label %7, !llvm.loop !5018

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5003
  ret i32 %25, !dbg !5020
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5021 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5025, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5026, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %2, metadata !5027, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %3, metadata !5028, metadata !DIExpression()), !dbg !5035
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5036
  %6 = load i8, i8* %5, align 1, !dbg !5036
  %7 = zext i8 %6 to i32, !dbg !5037
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5038
  %9 = icmp eq i32 %8, 0, !dbg !5038
  call void @llvm.dbg.value(metadata i1 %9, metadata !5029, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5035
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5039
  call void @llvm.dbg.value(metadata i32 %10, metadata !5030, metadata !DIExpression()), !dbg !5035
  %11 = ptrtoint i8* %3 to i32, !dbg !5040
  %12 = ptrtoint i8* %2 to i32, !dbg !5040
  %13 = sub i32 %11, %12, !dbg !5040
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5041
  call void @llvm.dbg.value(metadata i8* %14, metadata !5032, metadata !DIExpression()), !dbg !5035
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5042

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5035
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5025, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.value(metadata i8* %18, metadata !5032, metadata !DIExpression()), !dbg !5035
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5043
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5044
  call void @llvm.dbg.value(metadata i32 %25, metadata !5033, metadata !DIExpression()), !dbg !5045
  %26 = icmp ult i32 %25, 10, !dbg !5046
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5047
  %28 = add i32 %27, %25, !dbg !5045
  %29 = trunc i32 %28 to i8, !dbg !5047
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5048
  call void @llvm.dbg.value(metadata i8* %30, metadata !5032, metadata !DIExpression()), !dbg !5035
  store i8 %29, i8* %30, align 1, !dbg !5049
  call void @llvm.dbg.value(metadata i64 %22, metadata !5025, metadata !DIExpression()), !dbg !5035
  %31 = icmp uge i64 %19, %15, !dbg !5050
  %32 = icmp ugt i8* %30, %2, !dbg !5051
  %33 = and i1 %31, %32, !dbg !5051
  br i1 %33, label %17, label %34, !dbg !5052, !llvm.loop !5053

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5055
  %36 = load i24, i24* %35, align 4, !dbg !5055
  %37 = and i24 %36, 32, !dbg !5055
  %38 = icmp eq i24 %37, 0, !dbg !5055
  br i1 %38, label %44, label %39, !dbg !5057

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5058

40:                                               ; preds = %39
  br label %41, !dbg !5060

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5064
  store i24 %43, i24* %35, align 4, !dbg !5064
  br label %44, !dbg !5065

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5065
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #7 !dbg !5066 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5072, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i8* %1, metadata !5073, metadata !DIExpression()), !dbg !5075
  call void @llvm.dbg.value(metadata i32 %2, metadata !5074, metadata !DIExpression()), !dbg !5075
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5076
  %5 = load i24, i24* %4, align 4, !dbg !5076
  %6 = lshr i24 %5, 11, !dbg !5076
  %7 = and i24 %6, 15, !dbg !5076
  %8 = zext i24 %7 to i32, !dbg !5076
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5077

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5078
  store i32 %2, i32* %10, align 4, !dbg !5080
  br label %28, !dbg !5081

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5082
  store i8 %12, i8* %1, align 1, !dbg !5083
  br label %28, !dbg !5084

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5085
  %15 = bitcast i8* %1 to i16*, !dbg !5086
  store i16 %14, i16* %15, align 2, !dbg !5087
  br label %28, !dbg !5088

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5089
  store i32 %2, i32* %17, align 4, !dbg !5090
  br label %28, !dbg !5091

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5092
  %20 = bitcast i8* %1 to i64*, !dbg !5093
  store i64 %19, i64* %20, align 8, !dbg !5094
  br label %28, !dbg !5095

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5096
  %23 = bitcast i8* %1 to i64*, !dbg !5097
  store i64 %22, i64* %23, align 8, !dbg !5098
  br label %28, !dbg !5099

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5100
  store i32 %2, i32* %25, align 4, !dbg !5101
  br label %28, !dbg !5102

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5103
  store i32 %2, i32* %27, align 4, !dbg !5104
  br label %28, !dbg !5105

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5106
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #11 !dbg !5107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5110, metadata !DIExpression()), !dbg !5111
  %2 = add i32 %0, -65, !dbg !5112
  %3 = icmp ult i32 %2, 26, !dbg !5113
  %4 = zext i1 %3 to i32, !dbg !5113
  ret i32 %4, !dbg !5114
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #11 !dbg !5115 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5119, metadata !DIExpression()), !dbg !5120
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5121

2:                                                ; preds = %1
  br label %4, !dbg !5122

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5124

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5125
  ret i32 %5, !dbg !5126
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5127 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5129, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i8* %1, metadata !5130, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i8 1, metadata !5131, metadata !DIExpression()), !dbg !5132
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5133

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5131, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i8* %5, metadata !5130, metadata !DIExpression()), !dbg !5132
  %6 = load i8, i8* %5, align 1, !dbg !5134
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5136

7:                                                ; preds = %4
  br label %11, !dbg !5137

8:                                                ; preds = %4
  br label %11, !dbg !5139

9:                                                ; preds = %4
  br label %11, !dbg !5140

10:                                               ; preds = %4
  br label %11, !dbg !5141

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5142
  %14 = or i24 %13, %12, !dbg !5142
  store i24 %14, i24* %3, align 4, !dbg !5142
  call void @llvm.dbg.value(metadata i8 poison, metadata !5131, metadata !DIExpression()), !dbg !5132
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5130, metadata !DIExpression()), !dbg !5132
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5131, metadata !DIExpression()), !dbg !5132
  call void @llvm.dbg.value(metadata i8* %15, metadata !5130, metadata !DIExpression()), !dbg !5132
  %17 = load i24, i24* %3, align 4, !dbg !5143
  %18 = and i24 %17, 68, !dbg !5145
  %19 = icmp eq i24 %18, 68, !dbg !5145
  br i1 %19, label %20, label %22, !dbg !5145

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5146
  store i24 %21, i24* %3, align 4, !dbg !5146
  br label %22, !dbg !5148

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5149
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5150 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5152, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.value(metadata i8* %1, metadata !5153, metadata !DIExpression()), !dbg !5156
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5157
  %5 = load i24, i24* %4, align 4, !dbg !5158
  %6 = or i24 %5, 128, !dbg !5158
  store i24 %6, i24* %4, align 4, !dbg !5158
  call void @llvm.dbg.value(metadata i8* %1, metadata !5153, metadata !DIExpression()), !dbg !5156
  %7 = load i8, i8* %1, align 1, !dbg !5159
  %8 = icmp eq i8 %7, 42, !dbg !5161
  br i1 %8, label %9, label %12, !dbg !5162

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5163
  store i24 %10, i24* %4, align 4, !dbg !5163
  call void @llvm.dbg.value(metadata i8* %1, metadata !5153, metadata !DIExpression()), !dbg !5156
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5165
  call void @llvm.dbg.value(metadata i8* %11, metadata !5153, metadata !DIExpression()), !dbg !5156
  store i8* %11, i8** %3, align 4, !dbg !5165
  br label %29, !dbg !5166

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5154, metadata !DIExpression()), !dbg !5156
  call void @llvm.dbg.value(metadata i8** %3, metadata !5153, metadata !DIExpression(DW_OP_deref)), !dbg !5156
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5167
  call void @llvm.dbg.value(metadata i32 %13, metadata !5155, metadata !DIExpression()), !dbg !5156
  %14 = load i8*, i8** %3, align 4, !dbg !5168
  call void @llvm.dbg.value(metadata i8* %14, metadata !5153, metadata !DIExpression()), !dbg !5156
  %15 = icmp eq i8* %14, %1, !dbg !5170
  br i1 %15, label %29, label %16, !dbg !5171

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5172
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5174
  store i32 %13, i32* %18, align 4, !dbg !5175
  %19 = lshr i32 %13, 31, !dbg !5176
  %20 = lshr i24 %17, 1, !dbg !5177
  %21 = and i24 %20, 1, !dbg !5177
  %22 = zext i24 %21 to i32, !dbg !5177
  %23 = or i32 %19, %22, !dbg !5177
  %24 = trunc i32 %23 to i24, !dbg !5177
  %25 = shl nuw nsw i24 %24, 1, !dbg !5177
  %26 = and i24 %17, -131, !dbg !5177
  %27 = or i24 %26, 128, !dbg !5177
  %28 = or i24 %25, %27, !dbg !5177
  store i24 %28, i24* %4, align 4, !dbg !5177
  br label %29, !dbg !5178

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5156
  ret i8* %30, !dbg !5179
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5180 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5182, metadata !DIExpression()), !dbg !5185
  call void @llvm.dbg.value(metadata i8* %1, metadata !5183, metadata !DIExpression()), !dbg !5185
  %4 = load i8, i8* %1, align 1, !dbg !5186
  %5 = icmp eq i8 %4, 46, !dbg !5187
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5188
  %7 = load i24, i24* %6, align 4, !dbg !5189
  %8 = select i1 %5, i24 512, i24 0, !dbg !5189
  %9 = and i24 %7, -513, !dbg !5189
  %10 = or i24 %9, %8, !dbg !5189
  store i24 %10, i24* %6, align 4, !dbg !5189
  br i1 %5, label %11, label %32, !dbg !5190

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5183, metadata !DIExpression()), !dbg !5185
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5191
  call void @llvm.dbg.value(metadata i8* %12, metadata !5183, metadata !DIExpression()), !dbg !5185
  store i8* %12, i8** %3, align 4, !dbg !5191
  %13 = load i8, i8* %12, align 1, !dbg !5192
  %14 = icmp eq i8 %13, 42, !dbg !5194
  br i1 %14, label %15, label %18, !dbg !5195

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5196
  store i24 %16, i24* %6, align 4, !dbg !5196
  call void @llvm.dbg.value(metadata i8* %12, metadata !5183, metadata !DIExpression()), !dbg !5185
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5198
  call void @llvm.dbg.value(metadata i8* %17, metadata !5183, metadata !DIExpression()), !dbg !5185
  store i8* %17, i8** %3, align 4, !dbg !5198
  br label %32, !dbg !5199

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5183, metadata !DIExpression(DW_OP_deref)), !dbg !5185
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !5200
  call void @llvm.dbg.value(metadata i32 %19, metadata !5184, metadata !DIExpression()), !dbg !5185
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5201
  store i32 %19, i32* %20, align 4, !dbg !5202
  %21 = lshr i32 %19, 31, !dbg !5203
  %22 = load i24, i24* %6, align 4, !dbg !5204
  %23 = lshr i24 %22, 1, !dbg !5204
  %24 = and i24 %23, 1, !dbg !5204
  %25 = zext i24 %24 to i32, !dbg !5204
  %26 = or i32 %21, %25, !dbg !5204
  %27 = trunc i32 %26 to i24, !dbg !5204
  %28 = shl nuw nsw i24 %27, 1, !dbg !5204
  %29 = and i24 %22, -3, !dbg !5204
  %30 = or i24 %28, %29, !dbg !5204
  store i24 %30, i24* %6, align 4, !dbg !5204
  %31 = load i8*, i8** %3, align 4, !dbg !5205
  call void @llvm.dbg.value(metadata i8* %31, metadata !5183, metadata !DIExpression()), !dbg !5185
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5185
  ret i8* %33, !dbg !5206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5207 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5209, metadata !DIExpression()), !dbg !5211
  call void @llvm.dbg.value(metadata i8* %1, metadata !5210, metadata !DIExpression()), !dbg !5211
  %3 = load i8, i8* %1, align 1, !dbg !5212
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5213

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5214
  call void @llvm.dbg.value(metadata i8* %5, metadata !5210, metadata !DIExpression()), !dbg !5211
  %6 = load i8, i8* %5, align 1, !dbg !5217
  %7 = icmp eq i8 %6, 104, !dbg !5218
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5219
  %9 = load i24, i24* %8, align 4, !dbg !5219
  %10 = and i24 %9, -30721, !dbg !5219
  br i1 %7, label %11, label %14, !dbg !5220

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5221
  store i24 %12, i24* %8, align 4, !dbg !5221
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5223
  call void @llvm.dbg.value(metadata i8* %13, metadata !5210, metadata !DIExpression()), !dbg !5211
  br label %56, !dbg !5224

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5225
  store i24 %15, i24* %8, align 4, !dbg !5225
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5227
  call void @llvm.dbg.value(metadata i8* %17, metadata !5210, metadata !DIExpression()), !dbg !5211
  %18 = load i8, i8* %17, align 1, !dbg !5229
  %19 = icmp eq i8 %18, 108, !dbg !5230
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5231
  %21 = load i24, i24* %20, align 4, !dbg !5231
  %22 = and i24 %21, -30721, !dbg !5231
  br i1 %19, label %23, label %26, !dbg !5232

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5233
  store i24 %24, i24* %20, align 4, !dbg !5233
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5235
  call void @llvm.dbg.value(metadata i8* %25, metadata !5210, metadata !DIExpression()), !dbg !5211
  br label %56, !dbg !5236

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5237
  store i24 %27, i24* %20, align 4, !dbg !5237
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5239
  %30 = load i24, i24* %29, align 4, !dbg !5240
  %31 = and i24 %30, -30721, !dbg !5240
  %32 = or i24 %31, 10240, !dbg !5240
  store i24 %32, i24* %29, align 4, !dbg !5240
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5241
  call void @llvm.dbg.value(metadata i8* %33, metadata !5210, metadata !DIExpression()), !dbg !5211
  br label %56, !dbg !5242

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5243
  %36 = load i24, i24* %35, align 4, !dbg !5244
  %37 = and i24 %36, -30721, !dbg !5244
  %38 = or i24 %37, 12288, !dbg !5244
  store i24 %38, i24* %35, align 4, !dbg !5244
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5245
  call void @llvm.dbg.value(metadata i8* %39, metadata !5210, metadata !DIExpression()), !dbg !5211
  br label %56, !dbg !5246

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5247
  %42 = load i24, i24* %41, align 4, !dbg !5248
  %43 = and i24 %42, -30721, !dbg !5248
  %44 = or i24 %43, 14336, !dbg !5248
  store i24 %44, i24* %41, align 4, !dbg !5248
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5249
  call void @llvm.dbg.value(metadata i8* %45, metadata !5210, metadata !DIExpression()), !dbg !5211
  br label %56, !dbg !5250

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5251
  %48 = load i24, i24* %47, align 4, !dbg !5252
  %49 = and i24 %48, -30723, !dbg !5252
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5253
  call void @llvm.dbg.value(metadata i8* %50, metadata !5210, metadata !DIExpression()), !dbg !5211
  %51 = or i24 %49, 16386, !dbg !5254
  store i24 %51, i24* %47, align 4, !dbg !5254
  br label %56, !dbg !5255

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5256
  %54 = load i24, i24* %53, align 4, !dbg !5257
  %55 = and i24 %54, -30721, !dbg !5257
  store i24 %55, i24* %53, align 4, !dbg !5257
  br label %56, !dbg !5258

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5210, metadata !DIExpression()), !dbg !5211
  ret i8* %57, !dbg !5259
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #7 !dbg !5260 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5262, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8* %1, metadata !5263, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8 0, metadata !5264, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8* %1, metadata !5263, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5267
  %3 = load i8, i8* %1, align 1, !dbg !5268
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5269
  store i8 %3, i8* %4, align 1, !dbg !5270
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5271

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5272

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5273
  %9 = load i24, i24* %8, align 4, !dbg !5273
  %10 = and i24 %9, -458753, !dbg !5273
  %11 = or i24 %10, %7, !dbg !5273
  call void @llvm.dbg.label(metadata !5265), !dbg !5274
  %12 = and i24 %9, 30720, !dbg !5275
  %13 = icmp eq i24 %12, 16384, !dbg !5275
  %14 = zext i1 %13 to i24, !dbg !5277
  %15 = or i24 %11, %14, !dbg !5277
  %16 = icmp eq i8 %3, 99, !dbg !5278
  br i1 %16, label %17, label %43, !dbg !5280

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5281
  %19 = icmp ne i24 %18, 0, !dbg !5281
  call void @llvm.dbg.value(metadata i1 %19, metadata !5264, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5267
  br label %43, !dbg !5283

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5284
  %22 = load i24, i24* %21, align 4, !dbg !5285
  %23 = and i24 %22, -458753, !dbg !5285
  %24 = or i24 %23, 262144, !dbg !5285
  call void @llvm.dbg.value(metadata i8 1, metadata !5264, metadata !DIExpression()), !dbg !5267
  br label %43, !dbg !5286

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5289
  %27 = load i24, i24* %26, align 4, !dbg !5290
  %28 = and i24 %27, -458753, !dbg !5290
  %29 = or i24 %28, 196608, !dbg !5290
  %30 = and i24 %27, 30720, !dbg !5291
  %31 = icmp eq i24 %30, 16384, !dbg !5291
  br label %43, !dbg !5293

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5294
  %34 = load i24, i24* %33, align 4, !dbg !5295
  %35 = and i24 %34, -458753, !dbg !5295
  %36 = or i24 %35, 196608, !dbg !5295
  %37 = and i24 %34, 30720, !dbg !5296
  %38 = icmp ne i24 %37, 0, !dbg !5296
  br label %43, !dbg !5298

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5299
  %41 = load i24, i24* %40, align 4, !dbg !5300
  %42 = or i24 %41, 1, !dbg !5300
  br label %43, !dbg !5301

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5302
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5303
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5304
  call void @llvm.dbg.value(metadata i8* %48, metadata !5263, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8 poison, metadata !5264, metadata !DIExpression()), !dbg !5267
  %49 = lshr i24 %44, 1, !dbg !5302
  %50 = and i24 %49, 1, !dbg !5302
  %51 = zext i24 %50 to i32, !dbg !5302
  %52 = or i32 %51, %47, !dbg !5302
  %53 = trunc i32 %52 to i24, !dbg !5302
  %54 = shl nuw nsw i24 %53, 1, !dbg !5302
  %55 = and i24 %44, -3, !dbg !5302
  %56 = or i24 %54, %55, !dbg !5302
  store i24 %56, i24* %46, align 4, !dbg !5302
  ret i8* %48, !dbg !5305
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !5306 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5311, metadata !DIExpression()), !dbg !5314
  %2 = load i8*, i8** %0, align 4, !dbg !5315
  call void @llvm.dbg.value(metadata i8* %2, metadata !5312, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.value(metadata i32 0, metadata !5313, metadata !DIExpression()), !dbg !5314
  %3 = load i8, i8* %2, align 1, !dbg !5316
  %4 = zext i8 %3 to i32, !dbg !5317
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !5318
  %6 = icmp eq i32 %5, 0, !dbg !5319
  br i1 %6, label %19, label %7, !dbg !5319

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5313, metadata !DIExpression()), !dbg !5314
  call void @llvm.dbg.value(metadata i8* %10, metadata !5312, metadata !DIExpression()), !dbg !5314
  %11 = mul i32 %9, 10, !dbg !5320
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5322
  call void @llvm.dbg.value(metadata i8* %12, metadata !5312, metadata !DIExpression()), !dbg !5314
  %13 = add i32 %11, -48, !dbg !5323
  %14 = add i32 %13, %8, !dbg !5324
  call void @llvm.dbg.value(metadata i32 %14, metadata !5313, metadata !DIExpression()), !dbg !5314
  %15 = load i8, i8* %12, align 1, !dbg !5316
  %16 = zext i8 %15 to i32, !dbg !5317
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !5318
  %18 = icmp eq i32 %17, 0, !dbg !5319
  br i1 %18, label %19, label %7, !dbg !5319, !llvm.loop !5325

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5314
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5314
  store i8* %20, i8** %0, align 4, !dbg !5327
  ret i32 %21, !dbg !5328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #11 !dbg !5329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5331, metadata !DIExpression()), !dbg !5332
  %2 = add i32 %0, -48, !dbg !5333
  %3 = icmp ult i32 %2, 10, !dbg !5334
  %4 = zext i1 %3 to i32, !dbg !5334
  ret i32 %4, !dbg !5335
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5336 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !5338, !srcloc !5339
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !5340, !srcloc !5341
  tail call void asm sideeffect ".globl\09CONFIG_UART_INTERRUPT_DRIVEN\0A\09.equ\09CONFIG_UART_INTERRUPT_DRIVEN,1\0A\09.type\09CONFIG_UART_INTERRUPT_DRIVEN,%object", ""() #25, !dbg !5342, !srcloc !5343
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !5344, !srcloc !5345
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !5346, !srcloc !5347
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !5348, !srcloc !5349
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !5350, !srcloc !5351
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !5352, !srcloc !5353
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !5354, !srcloc !5355
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !5356, !srcloc !5357
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !5358, !srcloc !5359
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !5360, !srcloc !5361
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !5362, !srcloc !5363
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !5364, !srcloc !5365
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !5366, !srcloc !5367
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !5368, !srcloc !5369
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !5370, !srcloc !5371
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !5372, !srcloc !5373
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !5374, !srcloc !5375
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !5376, !srcloc !5377
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !5378, !srcloc !5379
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !5380, !srcloc !5381
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !5382, !srcloc !5383
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !5384, !srcloc !5385
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !5386, !srcloc !5387
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !5388, !srcloc !5389
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !5390, !srcloc !5391
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !5392, !srcloc !5393
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !5394, !srcloc !5395
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !5396, !srcloc !5397
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !5398, !srcloc !5399
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !5400, !srcloc !5401
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !5402, !srcloc !5403
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5404, !srcloc !5405
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #25, !dbg !5406, !srcloc !5407
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !5408, !srcloc !5409
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #25, !dbg !5410, !srcloc !5411
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !5412, !srcloc !5413
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !5414, !srcloc !5415
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !5416, !srcloc !5417
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5418, !srcloc !5419
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !5420, !srcloc !5421
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !5422, !srcloc !5423
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !5424, !srcloc !5425
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !5426, !srcloc !5427
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !5428, !srcloc !5429
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !5430, !srcloc !5431
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !5432, !srcloc !5433
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !5434, !srcloc !5435
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !5436, !srcloc !5437
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !5438, !srcloc !5439
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !5440, !srcloc !5441
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !5442, !srcloc !5443
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !5444, !srcloc !5445
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #25, !dbg !5446, !srcloc !5447
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !5448, !srcloc !5449
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !5450, !srcloc !5451
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !5452, !srcloc !5453
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !5454, !srcloc !5455
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !5456, !srcloc !5457
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !5458, !srcloc !5459
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !5460, !srcloc !5461
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !5462, !srcloc !5463
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !5464, !srcloc !5465
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !5466, !srcloc !5467
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !5468, !srcloc !5469
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !5470, !srcloc !5471
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !5472, !srcloc !5473
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !5474, !srcloc !5475
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !5476, !srcloc !5477
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !5478, !srcloc !5479
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !5480, !srcloc !5481
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !5482, !srcloc !5483
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !5484, !srcloc !5485
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !5486, !srcloc !5487
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !5488, !srcloc !5489
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !5490, !srcloc !5491
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !5492, !srcloc !5493
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !5494, !srcloc !5495
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !5496, !srcloc !5497
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !5498, !srcloc !5499
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !5500, !srcloc !5501
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !5502, !srcloc !5503
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !5504, !srcloc !5505
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !5506, !srcloc !5507
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !5508, !srcloc !5509
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !5510, !srcloc !5511
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !5512, !srcloc !5513
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !5514, !srcloc !5515
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !5516, !srcloc !5517
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #25, !dbg !5518, !srcloc !5519
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !5520, !srcloc !5521
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !5522, !srcloc !5523
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !5524, !srcloc !5525
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !5526, !srcloc !5527
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !5528, !srcloc !5529
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #25, !dbg !5530, !srcloc !5531
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !5532, !srcloc !5533
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !5534, !srcloc !5535
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !5536, !srcloc !5537
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !5538, !srcloc !5539
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !5540, !srcloc !5541
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !5542, !srcloc !5543
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !5544, !srcloc !5545
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !5546, !srcloc !5547
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !5548, !srcloc !5549
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !5550, !srcloc !5551
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !5552, !srcloc !5553
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !5554, !srcloc !5555
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !5556, !srcloc !5557
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !5558, !srcloc !5559
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !5560, !srcloc !5561
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !5562, !srcloc !5563
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !5564, !srcloc !5565
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !5566, !srcloc !5567
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !5568, !srcloc !5569
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !5570, !srcloc !5571
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !5572, !srcloc !5573
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !5574, !srcloc !5575
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !5576, !srcloc !5577
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !5578, !srcloc !5579
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !5580, !srcloc !5581
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !5582, !srcloc !5583
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !5584, !srcloc !5585
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !5586, !srcloc !5587
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !5588, !srcloc !5589
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !5590, !srcloc !5591
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !5592, !srcloc !5593
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !5594, !srcloc !5595
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !5596, !srcloc !5597
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !5598, !srcloc !5599
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !5600, !srcloc !5601
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !5602, !srcloc !5603
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !5604, !srcloc !5605
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !5606, !srcloc !5607
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !5608, !srcloc !5609
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !5610, !srcloc !5611
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !5612, !srcloc !5613
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !5614, !srcloc !5615
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !5616, !srcloc !5617
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !5618, !srcloc !5619
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !5620, !srcloc !5621
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !5622, !srcloc !5623
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !5624, !srcloc !5625
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !5626, !srcloc !5627
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !5628, !srcloc !5629
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !5630, !srcloc !5631
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !5632, !srcloc !5633
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !5634, !srcloc !5635
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5636, !srcloc !5637
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !5638, !srcloc !5639
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !5640, !srcloc !5641
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !5642, !srcloc !5643
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !5644, !srcloc !5645
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !5646, !srcloc !5647
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !5648, !srcloc !5649
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !5650, !srcloc !5651
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !5652, !srcloc !5653
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !5654, !srcloc !5655
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !5656, !srcloc !5657
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !5658, !srcloc !5659
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !5660, !srcloc !5661
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !5662, !srcloc !5663
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !5664, !srcloc !5665
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !5666, !srcloc !5667
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !5668, !srcloc !5669
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !5670, !srcloc !5671
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !5672, !srcloc !5673
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !5674, !srcloc !5675
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !5676, !srcloc !5677
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !5678, !srcloc !5679
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !5680, !srcloc !5681
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !5682, !srcloc !5683
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !5684, !srcloc !5685
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !5686, !srcloc !5687
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !5688, !srcloc !5689
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !5690, !srcloc !5691
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !5692, !srcloc !5693
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !5694, !srcloc !5695
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !5696, !srcloc !5697
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !5698, !srcloc !5699
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !5700, !srcloc !5701
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !5702, !srcloc !5703
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !5704, !srcloc !5705
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !5706, !srcloc !5707
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !5708, !srcloc !5709
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !5710, !srcloc !5711
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !5712, !srcloc !5713
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !5714, !srcloc !5715
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !5716, !srcloc !5717
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !5718, !srcloc !5719
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !5720, !srcloc !5721
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !5722, !srcloc !5723
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !5724, !srcloc !5725
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !5726, !srcloc !5727
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5728, !srcloc !5729
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !5730, !srcloc !5731
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !5732, !srcloc !5733
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !5734, !srcloc !5735
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !5736, !srcloc !5737
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !5738, !srcloc !5739
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !5740, !srcloc !5741
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !5742, !srcloc !5743
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !5744, !srcloc !5745
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !5746, !srcloc !5747
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !5748, !srcloc !5749
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !5750, !srcloc !5751
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !5752, !srcloc !5753
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !5754, !srcloc !5755
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !5756, !srcloc !5757
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !5758, !srcloc !5759
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !5760, !srcloc !5761
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !5762, !srcloc !5763
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !5764, !srcloc !5765
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !5766, !srcloc !5767
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !5768, !srcloc !5769
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !5770, !srcloc !5771
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !5772, !srcloc !5773
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5774, !srcloc !5775
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !5776, !srcloc !5777
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !5778, !srcloc !5779
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !5780, !srcloc !5781
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !5782, !srcloc !5783
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !5784, !srcloc !5785
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !5786, !srcloc !5787
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !5788, !srcloc !5789
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !5790, !srcloc !5791
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !5792, !srcloc !5793
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !5794, !srcloc !5795
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !5796, !srcloc !5797
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !5798, !srcloc !5799
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !5800, !srcloc !5801
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !5802, !srcloc !5803
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !5804, !srcloc !5805
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !5806, !srcloc !5807
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !5808, !srcloc !5809
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !5810, !srcloc !5811
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !5812, !srcloc !5813
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !5814, !srcloc !5815
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !5816, !srcloc !5817
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !5818, !srcloc !5819
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !5820, !srcloc !5821
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !5822, !srcloc !5823
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !5824, !srcloc !5825
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !5826, !srcloc !5827
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !5828, !srcloc !5829
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !5830, !srcloc !5831
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !5832, !srcloc !5833
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !5834, !srcloc !5835
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !5836, !srcloc !5837
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !5838, !srcloc !5839
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !5840, !srcloc !5841
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !5842, !srcloc !5843
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !5844, !srcloc !5845
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !5846, !srcloc !5847
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !5848, !srcloc !5849
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !5850, !srcloc !5851
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !5852, !srcloc !5853
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !5854, !srcloc !5855
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5856, !srcloc !5857
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !5858, !srcloc !5859
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !5860, !srcloc !5861
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !5862, !srcloc !5863
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !5864, !srcloc !5865
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !5866, !srcloc !5867
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !5868, !srcloc !5869
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !5870, !srcloc !5871
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !5872, !srcloc !5873
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !5874, !srcloc !5875
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !5876, !srcloc !5877
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !5878, !srcloc !5879
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !5880, !srcloc !5881
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !5882, !srcloc !5883
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !5884, !srcloc !5885
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !5886, !srcloc !5887
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !5888, !srcloc !5889
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !5890, !srcloc !5891
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !5892, !srcloc !5893
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !5894, !srcloc !5895
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !5896, !srcloc !5897
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !5898, !srcloc !5899
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !5900, !srcloc !5901
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !5902, !srcloc !5903
  ret void, !dbg !5904
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !5905 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5907, metadata !DIExpression()), !dbg !5909
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !5910
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !5911
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !5912, !srcloc !5921
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %3, metadata !5918, metadata !DIExpression()) #25, !dbg !5922
  call void @llvm.dbg.value(metadata i32 undef, metadata !5919, metadata !DIExpression()) #25, !dbg !5922
  call void @llvm.dbg.value(metadata i32 %3, metadata !5908, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i32 %3, metadata !5923, metadata !DIExpression()) #25, !dbg !5928
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !5930, !srcloc !5931
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !5932
  ret i32 0, !dbg !5933
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !5934 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5936
  %2 = or i32 %1, 512, !dbg !5936
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5936
  ret void, !dbg !5937
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !5938 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5939
  %2 = or i32 %1, 1024, !dbg !5939
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !5939
  ret void, !dbg !5940
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #11 !dbg !5941 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !5943, metadata !DIExpression()), !dbg !5944
  ret i32 0, !dbg !5945
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !5946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5995, metadata !DIExpression()), !dbg !5997
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !5996, metadata !DIExpression()), !dbg !5997
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !5998
  ret void, !dbg !5999
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6000 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6017, metadata !DIExpression()), !dbg !6020
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6018, metadata !DIExpression()), !dbg !6020
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6021
  %4 = load i32, i32* %3, align 4, !dbg !6021
  call void @llvm.dbg.value(metadata i32 %4, metadata !6019, metadata !DIExpression()), !dbg !6020
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !6022
  ret void, !dbg !6023
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !6024 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6028, metadata !DIExpression()), !dbg !6031
  call void @llvm.dbg.value(metadata i8* %0, metadata !6029, metadata !DIExpression()), !dbg !6031
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6032
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !6032
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6030, metadata !DIExpression()), !dbg !6033
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6033
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6034
  %5 = bitcast i8* %4 to i32*, !dbg !6034
  %6 = load i32, i32* %5, align 4, !dbg !6034
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6035
  store i32 %6, i32* %7, align 4, !dbg !6036
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !6037
  unreachable, !dbg !6038
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6039 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6042, metadata !DIExpression()), !dbg !6043
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !6044
  ret void, !dbg !6045
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6046 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6050, metadata !DIExpression()), !dbg !6051
  %2 = icmp sgt i32 %0, -1, !dbg !6052
  br i1 %2, label %3, label %8, !dbg !6054

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6055, !srcloc !6057
  %4 = and i32 %0, 31, !dbg !6058
  %5 = shl nuw i32 1, %4, !dbg !6059
  %6 = lshr i32 %0, 5, !dbg !6060
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6061
  store volatile i32 %5, i32* %7, align 4, !dbg !6062
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !6063, !srcloc !6064
  br label %8, !dbg !6065

8:                                                ; preds = %3, %1
  ret void, !dbg !6066
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6067 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6069, metadata !DIExpression()), !dbg !6070
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !6071
  ret void, !dbg !6072
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6073 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6075, metadata !DIExpression()), !dbg !6076
  %2 = icmp sgt i32 %0, -1, !dbg !6077
  br i1 %2, label %3, label %8, !dbg !6079

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6080
  %5 = shl nuw i32 1, %4, !dbg !6082
  %6 = lshr i32 %0, 5, !dbg !6083
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6084
  store volatile i32 %5, i32* %7, align 4, !dbg !6085
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6086, !srcloc !6090
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6091, !srcloc !6094
  br label %8, !dbg !6095

8:                                                ; preds = %3, %1
  ret void, !dbg !6096
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #16 !dbg !6097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6101, metadata !DIExpression()), !dbg !6102
  %2 = lshr i32 %0, 5, !dbg !6103
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6104
  %4 = load volatile i32, i32* %3, align 4, !dbg !6104
  %5 = and i32 %0, 31, !dbg !6105
  %6 = shl nuw i32 1, %5, !dbg !6105
  %7 = and i32 %4, %6, !dbg !6106
  ret i32 %7, !dbg !6107
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !6108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6112, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 %1, metadata !6113, metadata !DIExpression()), !dbg !6115
  call void @llvm.dbg.value(metadata i32 %2, metadata !6114, metadata !DIExpression()), !dbg !6115
  %4 = add i32 %1, 1, !dbg !6116
  call void @llvm.dbg.value(metadata i32 %4, metadata !6113, metadata !DIExpression()), !dbg !6115
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !6119
  ret void, !dbg !6120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !6121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6125, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.value(metadata i32 %1, metadata !6126, metadata !DIExpression()), !dbg !6127
  %3 = trunc i32 %1 to i8, !dbg !6128
  %4 = shl i8 %3, 4, !dbg !6128
  %5 = and i32 %0, 15, !dbg !6130
  %6 = add nsw i32 %5, -4, !dbg !6130
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6130
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6130
  %9 = icmp slt i32 %0, 0, !dbg !6130
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6130
  store volatile i8 %4, i8* %10, align 1, !dbg !6128
  ret void, !dbg !6131
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6132 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6134, metadata !DIExpression()), !dbg !6135
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !6136
  ret void, !dbg !6137
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6138 {
  tail call void @z_SysNmiOnReset() #27, !dbg !6140
  tail call void @z_arm_int_exit() #27, !dbg !6141
  ret void, !dbg !6142
}

; Function Attrs: optsize
declare !dbg !6143 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6144 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #8 !dbg !6146 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !6148
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !6149
  tail call void @z_bss_zero() #27, !dbg !6150
  tail call void @z_data_copy() #27, !dbg !6151
  tail call void @z_arm_interrupt_init() #27, !dbg !6152
  tail call void @z_cstart() #29, !dbg !6153
  unreachable, !dbg !6153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6154 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6155
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6156, !srcloc !6159
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6160, !srcloc !6163
  ret void, !dbg !6164
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6165 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6166
  %2 = and i32 %1, -15728641, !dbg !6166
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6166
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !6167, !srcloc !6174
  call void @llvm.dbg.value(metadata i32 %3, metadata !6172, metadata !DIExpression()) #25, !dbg !6175
  %4 = and i32 %3, -5, !dbg !6176
  call void @llvm.dbg.value(metadata i32 %4, metadata !6177, metadata !DIExpression()) #25, !dbg !6182
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !6184, !srcloc !6185
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6186, !srcloc !6163
  ret void, !dbg !6188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6189 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6192, metadata !DIExpression()), !dbg !6193
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6194
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !6195
  store i32 %0, i32* %3, align 4, !dbg !6196
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6197
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !6198
  store i32 %4, i32* %5, align 4, !dbg !6199
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6200
  %7 = or i32 %6, 268435456, !dbg !6200
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6200
  call void @llvm.dbg.value(metadata i32 0, metadata !6201, metadata !DIExpression()) #25, !dbg !6204
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6206, !srcloc !6207
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6208
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !6209
  %10 = load i32, i32* %9, align 4, !dbg !6209
  ret i32 %10, !dbg !6210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #4 !dbg !6211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6321, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6322, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i8* %2, metadata !6323, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6324, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i8* %4, metadata !6325, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i8* %5, metadata !6326, metadata !DIExpression()), !dbg !6329
  call void @llvm.dbg.value(metadata i8* %6, metadata !6327, metadata !DIExpression()), !dbg !6329
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6330
  call void @llvm.dbg.value(metadata i8* %8, metadata !6328, metadata !DIExpression()), !dbg !6329
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6331
  %10 = bitcast i8* %9 to i32*, !dbg !6331
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6332
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6333
  %12 = bitcast i8* %8 to i32*, !dbg !6334
  store i32 %11, i32* %12, align 4, !dbg !6335
  %13 = ptrtoint i8* %4 to i32, !dbg !6336
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6337
  %15 = bitcast i8* %14 to i32*, !dbg !6337
  store i32 %13, i32* %15, align 4, !dbg !6338
  %16 = ptrtoint i8* %5 to i32, !dbg !6339
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6340
  %18 = bitcast i8* %17 to i32*, !dbg !6340
  store i32 %16, i32* %18, align 4, !dbg !6341
  %19 = ptrtoint i8* %6 to i32, !dbg !6342
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6343
  %21 = bitcast i8* %20 to i32*, !dbg !6343
  store i32 %19, i32* %21, align 4, !dbg !6344
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6345
  %23 = bitcast i8* %22 to i32*, !dbg !6345
  store i32 16777216, i32* %23, align 4, !dbg !6346
  %24 = ptrtoint i8* %8 to i32, !dbg !6347
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6348
  store i32 %24, i32* %25, align 8, !dbg !6349
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !6350
  store i32 0, i32* %26, align 4, !dbg !6351
  ret void, !dbg !6352
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #5 !dbg !6353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6358, metadata !DIExpression()), !dbg !6364
  call void @llvm.dbg.value(metadata i32 %1, metadata !6359, metadata !DIExpression()), !dbg !6364
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6365
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6360, metadata !DIExpression()), !dbg !6364
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6366
  br i1 %4, label %19, label %5, !dbg !6368

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6363, metadata !DIExpression()), !dbg !6364
  %6 = icmp eq i32 %0, -22, !dbg !6369
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !6369
  %8 = load i32, i32* %7, align 4, !dbg !6369
  br i1 %6, label %16, label %9, !dbg !6371

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6369
  %11 = icmp ule i32 %10, %0, !dbg !6369
  %12 = icmp ugt i32 %8, %0, !dbg !6369
  %13 = and i1 %12, %11, !dbg !6369
  %14 = icmp ugt i32 %8, %1, !dbg !6369
  %15 = and i1 %14, %13, !dbg !6369
  br i1 %15, label %18, label %19, !dbg !6369

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6369
  br i1 %17, label %18, label %19, !dbg !6371

18:                                               ; preds = %9, %16
  br label %19, !dbg !6372

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6364
  ret i32 %20, !dbg !6374
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #8 !dbg !6375 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6379, metadata !DIExpression()), !dbg !6382
  call void @llvm.dbg.value(metadata i8* %1, metadata !6380, metadata !DIExpression()), !dbg !6382
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6381, metadata !DIExpression()), !dbg !6382
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6383
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !6384
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !6385, !srcloc !6386
  unreachable, !dbg !6387
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6388 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6406, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.value(metadata i32 %1, metadata !6407, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.value(metadata i32 %2, metadata !6408, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6409, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.value(metadata i32 0, metadata !6410, metadata !DIExpression()), !dbg !6416
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6417
  %9 = and i32 %8, 511, !dbg !6418
  call void @llvm.dbg.value(metadata i32 %9, metadata !6411, metadata !DIExpression()), !dbg !6416
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6419
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6419
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !6420
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6420
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6415, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.value(metadata i32 0, metadata !6422, metadata !DIExpression()) #25, !dbg !6425
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !6427, !srcloc !6428
  call void @llvm.dbg.value(metadata i8* %6, metadata !6413, metadata !DIExpression(DW_OP_deref)), !dbg !6416
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !6429
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !6414, metadata !DIExpression()), !dbg !6416
  call void @llvm.dbg.value(metadata i8* %5, metadata !6412, metadata !DIExpression(DW_OP_deref)), !dbg !6416
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !6430
  call void @llvm.dbg.value(metadata i32 %12, metadata !6410, metadata !DIExpression()), !dbg !6416
  %13 = load i8, i8* %5, align 1, !dbg !6431, !range !6433
  call void @llvm.dbg.value(metadata i8 %13, metadata !6412, metadata !DIExpression()), !dbg !6416
  %14 = icmp eq i8 %13, 0, !dbg !6431
  br i1 %14, label %15, label %32, !dbg !6434

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !6435
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !6436
  %18 = load i8, i8* %6, align 1, !dbg !6437, !range !6433
  call void @llvm.dbg.value(metadata i8 %18, metadata !6413, metadata !DIExpression()), !dbg !6416
  %19 = icmp eq i8 %18, 0, !dbg !6437
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6439
  %21 = load i32, i32* %20, align 4, !dbg !6439
  br i1 %19, label %27, label %22, !dbg !6440

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !6441
  %24 = icmp eq i32 %23, 0, !dbg !6444
  br i1 %24, label %25, label %31, !dbg !6445

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !6446
  br label %29, !dbg !6448

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !6449
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !6439
  br label %31, !dbg !6451

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !6451
  br label %32, !dbg !6452

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !6452
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !6452
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !6452
  ret void, !dbg !6452
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #4 !dbg !6453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6458, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i32 %1, metadata !6459, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i32 %2, metadata !6460, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i8* %3, metadata !6461, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata i8 0, metadata !6462, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6463, metadata !DIExpression()), !dbg !6464
  store i8 0, i8* %3, align 1, !dbg !6465
  %5 = icmp ult i32 %2, -16777216, !dbg !6466
  %6 = and i32 %2, 12
  %7 = icmp eq i32 %6, 8
  %8 = or i1 %5, %7, !dbg !6468
  br i1 %8, label %16, label %9, !dbg !6468

9:                                                ; preds = %4
  %10 = and i32 %2, 8, !dbg !6469
  %11 = icmp eq i32 %10, 0, !dbg !6469
  br i1 %11, label %12, label %13, !dbg !6471

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %0, metadata !6463, metadata !DIExpression()), !dbg !6464
  store i8 1, i8* %3, align 1, !dbg !6474
  br label %13

13:                                               ; preds = %9, %12
  %14 = phi i32 [ %0, %12 ], [ %1, %9 ]
  %15 = inttoptr i32 %14 to %struct.__esf*, !dbg !6464
  call void @llvm.dbg.value(metadata %struct.__esf* %15, metadata !6463, metadata !DIExpression()), !dbg !6464
  br label %16, !dbg !6477

16:                                               ; preds = %4, %13
  %17 = phi %struct.__esf* [ %15, %13 ], [ null, %4 ], !dbg !6464
  ret %struct.__esf* %17, !dbg !6478
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6479 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6483, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 %1, metadata !6484, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i8* %2, metadata !6485, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.value(metadata i32 0, metadata !6486, metadata !DIExpression()), !dbg !6487
  store i8 0, i8* %2, align 1, !dbg !6488
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6489

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !6490
  call void @llvm.dbg.value(metadata i32 %5, metadata !6486, metadata !DIExpression()), !dbg !6487
  br label %11, !dbg !6492

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6493
  call void @llvm.dbg.value(metadata i32 %7, metadata !6486, metadata !DIExpression()), !dbg !6487
  br label %11, !dbg !6494

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !6495
  call void @llvm.dbg.value(metadata i32 0, metadata !6486, metadata !DIExpression()), !dbg !6487
  br label %11, !dbg !6496

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !6497
  call void @llvm.dbg.value(metadata i32 0, metadata !6486, metadata !DIExpression()), !dbg !6487
  br label %11, !dbg !6498

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !6499
  br label %11, !dbg !6500

11:                                               ; preds = %4, %6, %8, %9, %10, %3
  %12 = phi i32 [ 0, %3 ], [ %5, %4 ], [ %7, %6 ], [ 0, %8 ], [ 0, %9 ], [ 0, %10 ]
  ret i32 %12, !dbg !6501
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6502 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6506, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i8* %1, metadata !6507, metadata !DIExpression()), !dbg !6509
  call void @llvm.dbg.value(metadata i32 0, metadata !6508, metadata !DIExpression()), !dbg !6509
  store i8 0, i8* %1, align 1, !dbg !6510
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6511
  %4 = and i32 %3, 2, !dbg !6513
  %5 = icmp eq i32 %4, 0, !dbg !6514
  br i1 %5, label %6, label %33, !dbg !6515

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6516
  %8 = icmp sgt i32 %7, -1, !dbg !6518
  br i1 %8, label %9, label %33, !dbg !6519

9:                                                ; preds = %6
  %10 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6520
  %11 = and i32 %10, 1073741824, !dbg !6522
  %12 = icmp eq i32 %11, 0, !dbg !6523
  br i1 %12, label %33, label %13, !dbg !6524

13:                                               ; preds = %9
  %14 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !6525
  br i1 %14, label %15, label %18, !dbg !6528

15:                                               ; preds = %13
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6529
  %17 = load i32, i32* %16, align 4, !dbg !6529
  call void @llvm.dbg.value(metadata i32 %17, metadata !6508, metadata !DIExpression()), !dbg !6509
  br label %33, !dbg !6531

18:                                               ; preds = %13
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6532
  %20 = and i32 %19, 255, !dbg !6534
  %21 = icmp eq i32 %20, 0, !dbg !6535
  br i1 %21, label %24, label %22, !dbg !6536

22:                                               ; preds = %18
  %23 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6537
  call void @llvm.dbg.value(metadata i32 %23, metadata !6508, metadata !DIExpression()), !dbg !6509
  br label %33, !dbg !6539

24:                                               ; preds = %18
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6540
  %26 = and i32 %25, 65280, !dbg !6542
  %27 = icmp eq i32 %26, 0, !dbg !6543
  br i1 %27, label %29, label %28, !dbg !6544

28:                                               ; preds = %24
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !6545
  call void @llvm.dbg.value(metadata i32 0, metadata !6508, metadata !DIExpression()), !dbg !6509
  br label %33, !dbg !6547

29:                                               ; preds = %24
  %30 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6548
  %31 = icmp ult i32 %30, 65536, !dbg !6550
  br i1 %31, label %33, label %32, !dbg !6551

32:                                               ; preds = %29
  tail call fastcc void @usage_fault() #26, !dbg !6552
  call void @llvm.dbg.value(metadata i32 0, metadata !6508, metadata !DIExpression()), !dbg !6509
  br label %33, !dbg !6554

33:                                               ; preds = %6, %9, %15, %28, %29, %32, %22, %2
  %34 = phi i32 [ 0, %2 ], [ 0, %6 ], [ %17, %15 ], [ %23, %22 ], [ 0, %28 ], [ 0, %32 ], [ 0, %29 ], [ 0, %9 ], !dbg !6509
  call void @llvm.dbg.value(metadata i32 %34, metadata !6508, metadata !DIExpression()), !dbg !6509
  ret i32 %34, !dbg !6555
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6556 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6558, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i32 %1, metadata !6559, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i8* %2, metadata !6560, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i32 0, metadata !6561, metadata !DIExpression()), !dbg !6571
  call void @llvm.dbg.value(metadata i32 -22, metadata !6562, metadata !DIExpression()), !dbg !6571
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6572
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6574
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6576
  %7 = and i32 %6, 2, !dbg !6577
  %8 = icmp eq i32 %7, 0, !dbg !6578
  br i1 %8, label %19, label %9, !dbg !6579

9:                                                ; preds = %3
  %10 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !6580
  call void @llvm.dbg.value(metadata i32 %10, metadata !6563, metadata !DIExpression()), !dbg !6581
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6582
  %12 = and i32 %11, 128, !dbg !6584
  %13 = icmp eq i32 %12, 0, !dbg !6585
  br i1 %13, label %19, label %14, !dbg !6586

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !6562, metadata !DIExpression()), !dbg !6571
  %15 = icmp eq i32 %1, 0, !dbg !6587
  br i1 %15, label %19, label %16, !dbg !6590

16:                                               ; preds = %14
  %17 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6591
  %18 = and i32 %17, -129, !dbg !6591
  store volatile i32 %18, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6591
  br label %19, !dbg !6593

19:                                               ; preds = %9, %16, %14, %3
  %20 = phi i32 [ -22, %3 ], [ %10, %16 ], [ %10, %14 ], [ -22, %9 ], !dbg !6571
  call void @llvm.dbg.value(metadata i32 %20, metadata !6562, metadata !DIExpression()), !dbg !6571
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6594
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6596
  %23 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6598
  %24 = and i32 %23, 16, !dbg !6599
  %25 = icmp eq i32 %24, 0, !dbg !6599
  br i1 %25, label %26, label %30, !dbg !6600

26:                                               ; preds = %19
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6601
  %28 = and i32 %27, 2, !dbg !6602
  %29 = icmp eq i32 %28, 0, !dbg !6602
  br i1 %29, label %39, label %30, !dbg !6603

30:                                               ; preds = %26, %19
  %31 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6604
  %32 = and i32 %31, 2048, !dbg !6605
  %33 = icmp eq i32 %32, 0, !dbg !6605
  br i1 %33, label %39, label %34, !dbg !6606

34:                                               ; preds = %30
  %35 = ptrtoint %struct.__esf* %0 to i32, !dbg !6607
  %36 = tail call i32 @z_check_thread_stack_fail(i32 noundef %20, i32 noundef %35) #27, !dbg !6608
  call void @llvm.dbg.value(metadata i32 %36, metadata !6566, metadata !DIExpression()), !dbg !6609
  %37 = icmp eq i32 %36, 0, !dbg !6610
  br i1 %37, label %39, label %38, !dbg !6612

38:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i32 %36, metadata !6613, metadata !DIExpression()) #25, !dbg !6616
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %36) #25, !dbg !6619, !srcloc !6620
  call void @llvm.dbg.value(metadata i32 2, metadata !6561, metadata !DIExpression()), !dbg !6571
  br label %39, !dbg !6621

39:                                               ; preds = %38, %34, %30, %26
  %40 = phi i32 [ 0, %30 ], [ 0, %26 ], [ 2, %38 ], [ 0, %34 ], !dbg !6571
  call void @llvm.dbg.value(metadata i32 %40, metadata !6561, metadata !DIExpression()), !dbg !6571
  %41 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6622
  %42 = and i32 %41, 32, !dbg !6624
  %43 = icmp eq i32 %42, 0, !dbg !6625
  br i1 %43, label %47, label %44, !dbg !6626

44:                                               ; preds = %39
  %45 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6627
  %46 = and i32 %45, -8193, !dbg !6627
  store volatile i32 %46, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6627
  br label %47, !dbg !6629

47:                                               ; preds = %44, %39
  %48 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6630
  %49 = or i32 %48, 255, !dbg !6630
  store volatile i32 %49, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6630
  store i8 0, i8* %2, align 1, !dbg !6631
  ret i32 %40, !dbg !6632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #15 !dbg !6633 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6637, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32 %0, metadata !6638, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i8* %1, metadata !6639, metadata !DIExpression()), !dbg !6644
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6644
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6645
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6647
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6649
  %6 = and i32 %5, 512, !dbg !6650
  %7 = icmp eq i32 %6, 0, !dbg !6650
  br i1 %7, label %18, label %8, !dbg !6651

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !6652
  call void @llvm.dbg.value(metadata i32 %9, metadata !6641, metadata !DIExpression()), !dbg !6653
  %10 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6654
  %11 = and i32 %10, 32768, !dbg !6656
  %12 = icmp ne i32 %11, 0, !dbg !6657
  %13 = icmp ne i32 %0, 0
  %14 = and i1 %13, %12, !dbg !6658
  br i1 %14, label %15, label %18, !dbg !6658

15:                                               ; preds = %8
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6659
  %17 = and i32 %16, -32769, !dbg !6659
  store volatile i32 %17, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6659
  br label %18, !dbg !6663

18:                                               ; preds = %8, %15, %2
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6664
  %20 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6666
  %21 = and i32 %20, 256, !dbg !6668
  %22 = icmp eq i32 %21, 0, !dbg !6669
  br i1 %22, label %23, label %25, !dbg !6670

23:                                               ; preds = %18
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6671
  br label %25

25:                                               ; preds = %18, %23
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6673
  %27 = or i32 %26, 65280, !dbg !6673
  store volatile i32 %27, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6673
  store i8 0, i8* %1, align 1, !dbg !6674
  ret void, !dbg !6675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #15 !dbg !6676 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 0, metadata !6683, metadata !DIExpression()), !dbg !6684
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6685
  %2 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6687
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6689
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6691
  %5 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6693
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6695
  %7 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6697
  %8 = or i32 %7, -65536, !dbg !6697
  store volatile i32 %8, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6697
  ret void, !dbg !6698
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !6699 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !6703, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i8* %0, metadata !6704, metadata !DIExpression()), !dbg !6705
  store i8 0, i8* %0, align 1, !dbg !6706
  ret void, !dbg !6707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6708 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6712, metadata !DIExpression()), !dbg !6715
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6716
  %3 = load i32, i32* %2, align 4, !dbg !6716
  %4 = inttoptr i32 %3 to i16*, !dbg !6717
  call void @llvm.dbg.value(metadata i16* %4, metadata !6713, metadata !DIExpression()), !dbg !6715
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6718
  %6 = or i32 %5, 256, !dbg !6718
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6718
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6719, !srcloc !6722
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6723, !srcloc !6726
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !6727
  %8 = load i16, i16* %7, align 2, !dbg !6728
  call void @llvm.dbg.value(metadata i16 %8, metadata !6714, metadata !DIExpression()), !dbg !6715
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6729
  %10 = and i32 %9, -257, !dbg !6729
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6729
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6730, !srcloc !6722
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6732, !srcloc !6726
  %11 = icmp eq i16 %8, -8446, !dbg !6734
  ret i1 %11, !dbg !6736
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !6737 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6738
  %2 = or i32 %1, 16, !dbg !6738
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !6738
  ret void, !dbg !6739
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !6740 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6743, metadata !DIExpression()), !dbg !6744
  br label %1, !dbg !6745

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6743, metadata !DIExpression()), !dbg !6744
  tail call fastcc void @__NVIC_SetPriority.12(i32 noundef %2) #26, !dbg !6747
  %3 = add nuw nsw i32 %2, 1, !dbg !6750
  call void @llvm.dbg.value(metadata i32 %3, metadata !6743, metadata !DIExpression()), !dbg !6744
  %4 = icmp eq i32 %3, 97, !dbg !6751
  br i1 %4, label %5, label %1, !dbg !6745, !llvm.loop !6752

5:                                                ; preds = %1
  ret void, !dbg !6754
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.12(i32 noundef %0) unnamed_addr #15 !dbg !6755 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6757, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 1, metadata !6758, metadata !DIExpression()), !dbg !6759
  %2 = and i32 %0, 15, !dbg !6760
  %3 = add nsw i32 %2, -4, !dbg !6760
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !6760
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6760
  %6 = icmp slt i32 %0, 0, !dbg !6760
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !6760
  store volatile i8 16, i8* %7, align 1, !dbg !6761
  ret void, !dbg !6763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !6764 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6870, metadata !DIExpression()), !dbg !6871
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6872
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !6874
  br i1 %3, label %4, label %12, !dbg !6875

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !6876, !srcloc !6888
  call void @llvm.dbg.value(metadata i32 %5, metadata !6879, metadata !DIExpression()) #25, !dbg !6889
  %6 = icmp eq i32 %5, 0, !dbg !6890
  br i1 %6, label %12, label %7, !dbg !6891

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6892
  %9 = or i32 %8, 268435456, !dbg !6892
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6892
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6894
  %11 = and i32 %10, -32769, !dbg !6894
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !6894
  br label %12, !dbg !6895

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !6896
  ret void, !dbg !6897
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !6898 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !6899
  ret void, !dbg !6900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !470, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i8 0, metadata !471, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 64, metadata !473, metadata !DIExpression()), !dbg !6901
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !6902
  %3 = load i32, i32* %2, align 4, !dbg !6902
  %4 = add i32 %3, -64, !dbg !6904
  call void @llvm.dbg.value(metadata i32 %4, metadata !472, metadata !DIExpression()), !dbg !6901
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !6905
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !6906
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !6907
  call void @llvm.dbg.value(metadata i8 1, metadata !471, metadata !DIExpression()), !dbg !6901
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !6908
  ret void, !dbg !6909
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !6910 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6911
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !6912, !srcloc !6915
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !6916, !srcloc !6919
  ret void, !dbg !6920
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !6921 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !6922, !srcloc !6925
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !6926
  ret void, !dbg !6927
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #17 !dbg !6928 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6943, metadata !DIExpression()), !dbg !6947
  call void @llvm.dbg.value(metadata i8 %1, metadata !6944, metadata !DIExpression()), !dbg !6947
  call void @llvm.dbg.value(metadata i32 %2, metadata !6945, metadata !DIExpression()), !dbg !6947
  call void @llvm.dbg.value(metadata i32 %3, metadata !6946, metadata !DIExpression()), !dbg !6947
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !6948
  ret void, !dbg !6950
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !6951 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6956, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata i8 %1, metadata !6957, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata i32 undef, metadata !6958, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata i32 undef, metadata !6959, metadata !DIExpression()), !dbg !6961
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !6962
  call void @llvm.dbg.value(metadata i8 %3, metadata !6960, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6961
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !6963
  call void @llvm.dbg.value(metadata i32 %4, metadata !6960, metadata !DIExpression()), !dbg !6961
  %5 = trunc i32 %4 to i8, !dbg !6964
  store i8 %5, i8* @static_regions_num, align 1, !dbg !6965
  ret void, !dbg !6966
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #17 !dbg !6967 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !6971, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i8 %1, metadata !6972, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i8 %2, metadata !6973, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i1 %3, metadata !6974, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6977
  %5 = zext i8 %2 to i32, !dbg !6978
  call void @llvm.dbg.value(metadata i32 %5, metadata !6976, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 0, metadata !6975, metadata !DIExpression()), !dbg !6977
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !6976, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 0, metadata !6975, metadata !DIExpression()), !dbg !6977
  %7 = icmp eq i8 %1, 0, !dbg !6979
  br i1 %7, label %29, label %8, !dbg !6982

8:                                                ; preds = %4, %25
  %9 = phi i32 [ %26, %25 ], [ %5, %4 ]
  %10 = phi i32 [ %27, %25 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6976, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.value(metadata i32 %10, metadata !6975, metadata !DIExpression()), !dbg !6977
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !6983
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !6986
  %13 = load i32, i32* %12, align 4, !dbg !6986
  %14 = icmp eq i32 %13, 0, !dbg !6987
  br i1 %14, label %25, label %15, !dbg !6988

15:                                               ; preds = %8
  br i1 %3, label %16, label %19, !dbg !6989

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6991
  %18 = icmp eq i32 %17, 0, !dbg !6991
  br i1 %18, label %29, label %19, !dbg !6992

19:                                               ; preds = %16, %15
  %20 = trunc i32 %9 to i8, !dbg !6993
  %21 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %20, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !6994
  call void @llvm.dbg.value(metadata i32 %21, metadata !6976, metadata !DIExpression()), !dbg !6977
  %22 = icmp eq i32 %21, -22, !dbg !6995
  br i1 %22, label %29, label %23, !dbg !6997

23:                                               ; preds = %19
  %24 = add nsw i32 %21, 1, !dbg !6998
  call void @llvm.dbg.value(metadata i32 %24, metadata !6976, metadata !DIExpression()), !dbg !6977
  br label %25, !dbg !6999

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %9, %8 ], [ %24, %23 ], !dbg !6977
  call void @llvm.dbg.value(metadata i32 %26, metadata !6976, metadata !DIExpression()), !dbg !6977
  %27 = add nuw nsw i32 %10, 1, !dbg !7000
  call void @llvm.dbg.value(metadata i32 %27, metadata !6975, metadata !DIExpression()), !dbg !6977
  %28 = icmp eq i32 %27, %6, !dbg !6979
  br i1 %28, label %29, label %8, !dbg !6982, !llvm.loop !7001

29:                                               ; preds = %16, %19, %25, %4
  %30 = phi i32 [ %5, %4 ], [ %26, %25 ], [ -22, %19 ], [ -22, %16 ], !dbg !6977
  ret i32 %30, !dbg !7003
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !7004 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7008, metadata !DIExpression()), !dbg !7010
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7011
  %3 = load i32, i32* %2, align 4, !dbg !7011
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7012, !range !3987
  %5 = icmp ult i32 %4, 2, !dbg !7012
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7013
  br i1 %7, label %8, label %15, !dbg !7013

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7014
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7015
  %11 = load i32, i32* %10, align 4, !dbg !7015
  %12 = and i32 %11, %9, !dbg !7016
  %13 = icmp eq i32 %12, 0, !dbg !7017
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7009, metadata !DIExpression()), !dbg !7010
  ret i32 %16, !dbg !7018
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #17 !dbg !7019 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7023, metadata !DIExpression()), !dbg !7026
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7024, metadata !DIExpression()), !dbg !7026
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7027
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7027
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7025, metadata !DIExpression()), !dbg !7028
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7029
  %6 = load i32, i32* %5, align 4, !dbg !7029
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7030
  store i32 %6, i32* %7, align 4, !dbg !7031
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7032
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7033
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7034
  %11 = load i32, i32* %10, align 4, !dbg !7034
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* noundef nonnull %8, %struct.z_heap_bucket* noundef nonnull %9, i32 noundef %11) #26, !dbg !7035
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !7036
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !7037
  ret i32 %12, !dbg !7038
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.z_heap_bucket* nocapture noundef writeonly %0, %struct.z_heap_bucket* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #10 !dbg !7039 {
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %0, metadata !7046, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata %struct.z_heap_bucket* %1, metadata !7047, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 undef, metadata !7048, metadata !DIExpression()), !dbg !7050
  call void @llvm.dbg.value(metadata i32 %2, metadata !7049, metadata !DIExpression()), !dbg !7050
  %4 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %1, i32 0, i32 0, !dbg !7051
  %5 = load i32, i32* %4, align 4, !dbg !7051
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !7052
  %7 = or i32 %6, %5, !dbg !7053
  %8 = getelementptr inbounds %struct.z_heap_bucket, %struct.z_heap_bucket* %0, i32 0, i32 0, !dbg !7054
  store i32 %7, i32* %8, align 4, !dbg !7055
  ret void, !dbg !7056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7057 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7061, metadata !DIExpression()), !dbg !7063
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7062, metadata !DIExpression()), !dbg !7063
  %3 = zext i8 %0 to i32, !dbg !7064
  %4 = icmp ugt i8 %0, 7, !dbg !7066
  br i1 %4, label %6, label %5, !dbg !7067

5:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !7068
  br label %6, !dbg !7069

6:                                                ; preds = %2, %5
  %7 = phi i32 [ %3, %5 ], [ -22, %2 ], !dbg !7063
  ret i32 %7, !dbg !7070
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !7071 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7075, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7076, metadata !DIExpression()), !dbg !7077
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !7078
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7079
  %4 = load i32, i32* %3, align 4, !dbg !7079
  %5 = and i32 %4, -32, !dbg !7080
  %6 = or i32 %5, %0, !dbg !7081
  %7 = or i32 %6, 16, !dbg !7081
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7082
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7083
  %9 = load i32, i32* %8, align 4, !dbg !7083
  %10 = or i32 %9, 1, !dbg !7084
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7085
  ret void, !dbg !7086
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !7087 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7090, metadata !DIExpression()), !dbg !7091
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7092
  ret void, !dbg !7093
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #9 !dbg !7094 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7098, metadata !DIExpression()), !dbg !7099
  %2 = icmp ult i32 %0, 33, !dbg !7100
  br i1 %2, label %11, label %3, !dbg !7102

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7103
  br i1 %4, label %11, label %5, !dbg !7105

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7106
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7107, !range !3987
  %8 = mul nsw i32 %7, -2, !dbg !7108
  %9 = add nsw i32 %8, 62, !dbg !7108
  %10 = and i32 %9, 62, !dbg !7109
  br label %11, !dbg !7110

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7099
  ret i32 %12, !dbg !7111
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #17 !dbg !7112 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7116, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.value(metadata i8 %1, metadata !7117, metadata !DIExpression()), !dbg !7118
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !7119
  ret void, !dbg !7121
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #17 !dbg !7122 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7126, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata i8 %1, metadata !7127, metadata !DIExpression()), !dbg !7133
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7134
  call void @llvm.dbg.value(metadata i8 %3, metadata !7128, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7133
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !7135
  call void @llvm.dbg.value(metadata i32 %4, metadata !7128, metadata !DIExpression()), !dbg !7133
  %5 = icmp ne i32 %4, -22, !dbg !7136
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7137
  call void @llvm.dbg.value(metadata i32 %4, metadata !7129, metadata !DIExpression()), !dbg !7138
  br i1 %7, label %8, label %12, !dbg !7137

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7129, metadata !DIExpression()), !dbg !7138
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !7139
  %10 = add i32 %9, 1, !dbg !7142
  call void @llvm.dbg.value(metadata i32 %10, metadata !7129, metadata !DIExpression()), !dbg !7138
  %11 = icmp eq i32 %10, 8, !dbg !7143
  br i1 %11, label %12, label %8, !dbg !7144, !llvm.loop !7145

12:                                               ; preds = %8, %2
  ret void, !dbg !7147
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !7148 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7151, metadata !DIExpression()), !dbg !7152
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7153
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7154
  ret void, !dbg !7155
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7156 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7161
  %2 = icmp ugt i32 %1, 8, !dbg !7163
  br i1 %2, label %14, label %3, !dbg !7164

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !7165
  call void @llvm.dbg.value(metadata i32 0, metadata !7160, metadata !DIExpression()), !dbg !7166
  %4 = icmp eq i32 %1, 0, !dbg !7167
  br i1 %4, label %12, label %5, !dbg !7170

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !7170

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7160, metadata !DIExpression()), !dbg !7166
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !7171
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !7173
  %10 = add nuw i32 %8, 1, !dbg !7174
  call void @llvm.dbg.value(metadata i32 %10, metadata !7160, metadata !DIExpression()), !dbg !7166
  %11 = icmp eq i32 %10, %1, !dbg !7167
  br i1 %11, label %12, label %7, !dbg !7170, !llvm.loop !7175

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !7177
  store i8 %13, i8* @static_regions_num, align 1, !dbg !7178
  tail call void @arm_core_mpu_enable() #26, !dbg !7179
  br label %14, !dbg !7180

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !7166
  ret i32 %15, !dbg !7181
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7182 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7189, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i8* %1, metadata !7190, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i8* %0, metadata !7191, metadata !DIExpression()), !dbg !7192
  %3 = load i8, i8* %1, align 1, !dbg !7193
  %4 = icmp eq i8 %3, 0, !dbg !7194
  br i1 %4, label %13, label %5, !dbg !7195

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7189, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.value(metadata i8* %8, metadata !7190, metadata !DIExpression()), !dbg !7192
  store i8 %6, i8* %7, align 1, !dbg !7196
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7198
  call void @llvm.dbg.value(metadata i8* %9, metadata !7189, metadata !DIExpression()), !dbg !7192
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7199
  call void @llvm.dbg.value(metadata i8* %10, metadata !7190, metadata !DIExpression()), !dbg !7192
  %11 = load i8, i8* %10, align 1, !dbg !7193
  %12 = icmp eq i8 %11, 0, !dbg !7194
  br i1 %12, label %13, label %5, !dbg !7195, !llvm.loop !7200

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7202
  ret i8* %0, !dbg !7203
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7204 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7208, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i8* %1, metadata !7209, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i32 %2, metadata !7210, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i8* %0, metadata !7211, metadata !DIExpression()), !dbg !7212
  %4 = icmp eq i32 %2, 0, !dbg !7213
  br i1 %4, label %22, label %5, !dbg !7214

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7208, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i32 %7, metadata !7210, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i8* %8, metadata !7209, metadata !DIExpression()), !dbg !7212
  %9 = load i8, i8* %8, align 1, !dbg !7215
  %10 = icmp eq i8 %9, 0, !dbg !7216
  br i1 %10, label %16, label %11, !dbg !7217

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7218
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7220
  call void @llvm.dbg.value(metadata i8* %12, metadata !7209, metadata !DIExpression()), !dbg !7212
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7221
  call void @llvm.dbg.value(metadata i8* %13, metadata !7208, metadata !DIExpression()), !dbg !7212
  %14 = add i32 %7, -1, !dbg !7222
  call void @llvm.dbg.value(metadata i32 %14, metadata !7210, metadata !DIExpression()), !dbg !7212
  %15 = icmp eq i32 %14, 0, !dbg !7213
  br i1 %15, label %22, label %5, !dbg !7214, !llvm.loop !7223

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7208, metadata !DIExpression()), !dbg !7212
  call void @llvm.dbg.value(metadata i32 %18, metadata !7210, metadata !DIExpression()), !dbg !7212
  store i8 0, i8* %17, align 1, !dbg !7225
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7227
  call void @llvm.dbg.value(metadata i8* %19, metadata !7208, metadata !DIExpression()), !dbg !7212
  %20 = add i32 %18, -1, !dbg !7228
  call void @llvm.dbg.value(metadata i32 %20, metadata !7210, metadata !DIExpression()), !dbg !7212
  %21 = icmp eq i32 %20, 0, !dbg !7229
  br i1 %21, label %22, label %16, !dbg !7230, !llvm.loop !7231

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7233
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7234 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7238, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i32 %1, metadata !7239, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.value(metadata i32 %1, metadata !7240, metadata !DIExpression()), !dbg !7241
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7242

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7238, metadata !DIExpression()), !dbg !7241
  %6 = load i8, i8* %5, align 1, !dbg !7243
  %7 = icmp eq i8 %6, %3, !dbg !7244
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7245
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7246
  call void @llvm.dbg.value(metadata i8* %10, metadata !7238, metadata !DIExpression()), !dbg !7241
  br i1 %9, label %11, label %4, !dbg !7245, !llvm.loop !7248

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7250
  ret i8* %12, !dbg !7251
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7252 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7254, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i32 %1, metadata !7255, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i8* null, metadata !7256, metadata !DIExpression()), !dbg !7257
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7258

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7257
  call void @llvm.dbg.value(metadata i8* %6, metadata !7256, metadata !DIExpression()), !dbg !7257
  call void @llvm.dbg.value(metadata i8* %5, metadata !7254, metadata !DIExpression()), !dbg !7257
  %7 = load i8, i8* %5, align 1, !dbg !7259
  %8 = icmp eq i8 %7, %3, !dbg !7262
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7263
  call void @llvm.dbg.value(metadata i8* %9, metadata !7256, metadata !DIExpression()), !dbg !7257
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7264
  call void @llvm.dbg.value(metadata i8* %10, metadata !7254, metadata !DIExpression()), !dbg !7257
  %11 = icmp eq i8 %7, 0, !dbg !7265
  br i1 %11, label %12, label %4, !dbg !7265, !llvm.loop !7266

12:                                               ; preds = %4
  ret i8* %9, !dbg !7268
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #19 !dbg !7269 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7273, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata i32 0, metadata !7274, metadata !DIExpression()), !dbg !7275
  %2 = load i8, i8* %0, align 1, !dbg !7276
  %3 = icmp eq i8 %2, 0, !dbg !7277
  br i1 %3, label %11, label %4, !dbg !7278

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7274, metadata !DIExpression()), !dbg !7275
  call void @llvm.dbg.value(metadata i8* %6, metadata !7273, metadata !DIExpression()), !dbg !7275
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7279
  call void @llvm.dbg.value(metadata i8* %7, metadata !7273, metadata !DIExpression()), !dbg !7275
  %8 = add i32 %5, 1, !dbg !7281
  call void @llvm.dbg.value(metadata i32 %8, metadata !7274, metadata !DIExpression()), !dbg !7275
  %9 = load i8, i8* %7, align 1, !dbg !7276
  %10 = icmp eq i8 %9, 0, !dbg !7277
  br i1 %10, label %11, label %4, !dbg !7278, !llvm.loop !7282

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7275
  ret i32 %12, !dbg !7284
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #19 !dbg !7285 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7289, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i32 %1, metadata !7290, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i32 0, metadata !7291, metadata !DIExpression()), !dbg !7292
  %3 = load i8, i8* %0, align 1, !dbg !7293
  %4 = icmp ne i8 %3, 0, !dbg !7294
  %5 = icmp ne i32 %1, 0, !dbg !7295
  %6 = and i1 %4, %5, !dbg !7295
  br i1 %6, label %7, label %16, !dbg !7296

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7291, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.value(metadata i8* %9, metadata !7289, metadata !DIExpression()), !dbg !7292
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7297
  call void @llvm.dbg.value(metadata i8* %10, metadata !7289, metadata !DIExpression()), !dbg !7292
  %11 = add nuw i32 %8, 1, !dbg !7299
  call void @llvm.dbg.value(metadata i32 %11, metadata !7291, metadata !DIExpression()), !dbg !7292
  %12 = load i8, i8* %10, align 1, !dbg !7293
  %13 = icmp ne i8 %12, 0, !dbg !7294
  %14 = icmp ult i32 %11, %1, !dbg !7295
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7295
  br i1 %15, label %7, label %16, !dbg !7296, !llvm.loop !7300

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7292
  ret i32 %17, !dbg !7302
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #19 !dbg !7303 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7307, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i8* %1, metadata !7308, metadata !DIExpression()), !dbg !7309
  %3 = load i8, i8* %0, align 1, !dbg !7310
  %4 = load i8, i8* %1, align 1, !dbg !7311
  %5 = icmp ne i8 %3, %4, !dbg !7312
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7313
  br i1 %7, label %18, label %8, !dbg !7313

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7308, metadata !DIExpression()), !dbg !7309
  call void @llvm.dbg.value(metadata i8* %10, metadata !7307, metadata !DIExpression()), !dbg !7309
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7314
  call void @llvm.dbg.value(metadata i8* %11, metadata !7307, metadata !DIExpression()), !dbg !7309
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7316
  call void @llvm.dbg.value(metadata i8* %12, metadata !7308, metadata !DIExpression()), !dbg !7309
  %13 = load i8, i8* %11, align 1, !dbg !7310
  %14 = load i8, i8* %12, align 1, !dbg !7311
  %15 = icmp ne i8 %13, %14, !dbg !7312
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7313
  br i1 %17, label %18, label %8, !dbg !7313, !llvm.loop !7317

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7310
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7311
  %21 = zext i8 %19 to i32, !dbg !7320
  %22 = zext i8 %20 to i32, !dbg !7321
  %23 = sub nsw i32 %21, %22, !dbg !7322
  ret i32 %23, !dbg !7323
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7324 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7328, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.value(metadata i8* %1, metadata !7329, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.value(metadata i32 %2, metadata !7330, metadata !DIExpression()), !dbg !7331
  %4 = icmp eq i32 %2, 0, !dbg !7332
  br i1 %4, label %23, label %5, !dbg !7332

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7330, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.value(metadata i8* %7, metadata !7329, metadata !DIExpression()), !dbg !7331
  call void @llvm.dbg.value(metadata i8* %8, metadata !7328, metadata !DIExpression()), !dbg !7331
  %9 = load i8, i8* %8, align 1, !dbg !7333
  %10 = load i8, i8* %7, align 1, !dbg !7334
  %11 = icmp ne i8 %9, %10, !dbg !7335
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7336
  br i1 %13, label %19, label %14, !dbg !7336

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7337
  call void @llvm.dbg.value(metadata i8* %15, metadata !7328, metadata !DIExpression()), !dbg !7331
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7339
  call void @llvm.dbg.value(metadata i8* %16, metadata !7329, metadata !DIExpression()), !dbg !7331
  %17 = add i32 %6, -1, !dbg !7340
  call void @llvm.dbg.value(metadata i32 %17, metadata !7330, metadata !DIExpression()), !dbg !7331
  %18 = icmp eq i32 %17, 0, !dbg !7332
  br i1 %18, label %23, label %5, !dbg !7332, !llvm.loop !7341

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7344
  %21 = zext i8 %10 to i32, !dbg !7345
  %22 = sub nsw i32 %20, %21, !dbg !7346
  br label %23, !dbg !7347

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7347
  ret i32 %24, !dbg !7348
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !7349 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7354, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i8* %1, metadata !7355, metadata !DIExpression()), !dbg !7359
  call void @llvm.dbg.value(metadata i8** %2, metadata !7356, metadata !DIExpression()), !dbg !7359
  %4 = icmp eq i8* %0, null, !dbg !7360
  br i1 %4, label %5, label %7, !dbg !7360

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7361
  br label %7, !dbg !7360

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7360
  call void @llvm.dbg.value(metadata i8* %8, metadata !7357, metadata !DIExpression()), !dbg !7359
  %9 = load i8, i8* %8, align 1, !dbg !7362
  %10 = icmp eq i8 %9, 0, !dbg !7362
  br i1 %10, label %33, label %11, !dbg !7363

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7357, metadata !DIExpression()), !dbg !7359
  %14 = zext i8 %12 to i32, !dbg !7362
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !7364
  %16 = icmp eq i8* %15, null, !dbg !7363
  br i1 %16, label %21, label %17, !dbg !7365

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7366
  call void @llvm.dbg.value(metadata i8* %18, metadata !7357, metadata !DIExpression()), !dbg !7359
  %19 = load i8, i8* %18, align 1, !dbg !7362
  %20 = icmp eq i8 %19, 0, !dbg !7362
  br i1 %20, label %33, label %11, !dbg !7363, !llvm.loop !7368

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7358, metadata !DIExpression()), !dbg !7359
  %24 = zext i8 %22 to i32, !dbg !7370
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !7371
  %26 = icmp eq i8* %25, null, !dbg !7372
  br i1 %26, label %27, label %31, !dbg !7373

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7374
  call void @llvm.dbg.value(metadata i8* %28, metadata !7358, metadata !DIExpression()), !dbg !7359
  %29 = load i8, i8* %28, align 1, !dbg !7370
  %30 = icmp eq i8 %29, 0, !dbg !7370
  br i1 %30, label %33, label %21, !dbg !7376, !llvm.loop !7377

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !7379
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7382
  br label %33, !dbg !7383

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7359
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7359
  store i8* %34, i8** %2, align 4, !dbg !7359
  ret i8* %35, !dbg !7384
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !7385 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7387, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.value(metadata i8* %1, metadata !7388, metadata !DIExpression()), !dbg !7389
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7390
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7391
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !7392
  ret i8* %0, !dbg !7393
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7396, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i8* %1, metadata !7397, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i32 %2, metadata !7398, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i8* %0, metadata !7399, metadata !DIExpression()), !dbg !7401
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !7402
  call void @llvm.dbg.value(metadata i32 %4, metadata !7400, metadata !DIExpression()), !dbg !7401
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !7403
  call void @llvm.dbg.value(metadata i8* %5, metadata !7396, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i8* %1, metadata !7397, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i32 %2, metadata !7398, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i32 %2, metadata !7398, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7401
  %6 = icmp eq i32 %2, 0, !dbg !7404
  br i1 %6, label %18, label %7, !dbg !7405

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !7406
  call void @llvm.dbg.value(metadata i8* %9, metadata !7396, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i8* %10, metadata !7397, metadata !DIExpression()), !dbg !7401
  %12 = load i8, i8* %10, align 1, !dbg !7407
  %13 = icmp eq i8 %12, 0, !dbg !7408
  br i1 %13, label %18, label %14, !dbg !7409

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7410
  call void @llvm.dbg.value(metadata i8* %15, metadata !7397, metadata !DIExpression()), !dbg !7401
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7412
  call void @llvm.dbg.value(metadata i8* %16, metadata !7396, metadata !DIExpression()), !dbg !7401
  store i8 %12, i8* %9, align 1, !dbg !7413
  call void @llvm.dbg.value(metadata i32 %11, metadata !7398, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.value(metadata i32 %11, metadata !7398, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7401
  %17 = icmp eq i32 %11, 0, !dbg !7404
  br i1 %17, label %18, label %7, !dbg !7405, !llvm.loop !7414

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !7401
  store i8 0, i8* %19, align 1, !dbg !7416
  ret i8* %0, !dbg !7417
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7418 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7422, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %1, metadata !7423, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 %2, metadata !7424, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %0, metadata !7425, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %1, metadata !7426, metadata !DIExpression()), !dbg !7427
  %4 = icmp eq i32 %2, 0, !dbg !7428
  br i1 %4, label %31, label %5, !dbg !7430

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %0, metadata !7425, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 %2, metadata !7424, metadata !DIExpression()), !dbg !7427
  %6 = add i32 %2, -1, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %6, metadata !7424, metadata !DIExpression()), !dbg !7427
  %7 = icmp eq i32 %6, 0, !dbg !7432
  br i1 %7, label %23, label %8, !dbg !7433

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !7434
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !7434
  br label %11, !dbg !7434

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i8* %14, metadata !7425, metadata !DIExpression()), !dbg !7427
  %15 = load i8, i8* %14, align 1, !dbg !7435
  %16 = load i8, i8* %13, align 1, !dbg !7436
  %17 = icmp eq i8 %15, %16, !dbg !7437
  br i1 %17, label %18, label %23, !dbg !7434

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !7438
  call void @llvm.dbg.value(metadata i8* %19, metadata !7425, metadata !DIExpression()), !dbg !7427
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7440
  call void @llvm.dbg.value(metadata i8* %20, metadata !7426, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.value(metadata i32 %12, metadata !7424, metadata !DIExpression()), !dbg !7427
  %21 = add i32 %12, -1, !dbg !7431
  call void @llvm.dbg.value(metadata i32 %21, metadata !7424, metadata !DIExpression()), !dbg !7427
  %22 = icmp eq i32 %21, 0, !dbg !7432
  br i1 %22, label %23, label %11, !dbg !7433, !llvm.loop !7441

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !7427
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !7427
  %26 = load i8, i8* %24, align 1, !dbg !7443
  %27 = zext i8 %26 to i32, !dbg !7443
  %28 = load i8, i8* %25, align 1, !dbg !7444
  %29 = zext i8 %28 to i32, !dbg !7444
  %30 = sub nsw i32 %27, %29, !dbg !7445
  br label %31, !dbg !7446

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !7427
  ret i32 %32, !dbg !7447
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7452, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i8* %1, metadata !7453, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i32 %2, metadata !7454, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i8* %0, metadata !7455, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i8* %1, metadata !7456, metadata !DIExpression()), !dbg !7457
  %4 = ptrtoint i8* %0 to i32, !dbg !7458
  %5 = ptrtoint i8* %1 to i32, !dbg !7458
  %6 = sub i32 %4, %5, !dbg !7458
  %7 = icmp ult i32 %6, %2, !dbg !7460
  br i1 %7, label %10, label %8, !dbg !7461

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7456, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i8* %0, metadata !7455, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i32 %2, metadata !7454, metadata !DIExpression()), !dbg !7457
  %9 = icmp eq i32 %2, 0, !dbg !7462
  br i1 %9, label %26, label %17, !dbg !7464

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !7454, metadata !DIExpression()), !dbg !7457
  %12 = add i32 %11, -1, !dbg !7465
  call void @llvm.dbg.value(metadata i32 %12, metadata !7454, metadata !DIExpression()), !dbg !7457
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !7468
  %14 = load i8, i8* %13, align 1, !dbg !7468
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !7469
  store i8 %14, i8* %15, align 1, !dbg !7470
  %16 = icmp eq i32 %12, 0, !dbg !7471
  br i1 %16, label %26, label %10, !dbg !7472, !llvm.loop !7473

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !7456, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i8* %19, metadata !7455, metadata !DIExpression()), !dbg !7457
  call void @llvm.dbg.value(metadata i32 %20, metadata !7454, metadata !DIExpression()), !dbg !7457
  %21 = load i8, i8* %18, align 1, !dbg !7475
  store i8 %21, i8* %19, align 1, !dbg !7477
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !7478
  call void @llvm.dbg.value(metadata i8* %22, metadata !7455, metadata !DIExpression()), !dbg !7457
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !7479
  call void @llvm.dbg.value(metadata i8* %23, metadata !7456, metadata !DIExpression()), !dbg !7457
  %24 = add i32 %20, -1, !dbg !7480
  call void @llvm.dbg.value(metadata i32 %24, metadata !7454, metadata !DIExpression()), !dbg !7457
  %25 = icmp eq i32 %24, 0, !dbg !7462
  br i1 %25, label %26, label %17, !dbg !7464, !llvm.loop !7481

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !7483
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !7484 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7490, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i8* %1, metadata !7491, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i32 %2, metadata !7492, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i8* %0, metadata !7493, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i8* %1, metadata !7494, metadata !DIExpression()), !dbg !7495
  %4 = icmp eq i32 %2, 0, !dbg !7496
  br i1 %4, label %14, label %5, !dbg !7497

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7494, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i8* %7, metadata !7493, metadata !DIExpression()), !dbg !7495
  call void @llvm.dbg.value(metadata i32 %8, metadata !7492, metadata !DIExpression()), !dbg !7495
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7498
  call void @llvm.dbg.value(metadata i8* %9, metadata !7494, metadata !DIExpression()), !dbg !7495
  %10 = load i8, i8* %6, align 1, !dbg !7500
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7501
  call void @llvm.dbg.value(metadata i8* %11, metadata !7493, metadata !DIExpression()), !dbg !7495
  store i8 %10, i8* %7, align 1, !dbg !7502
  %12 = add i32 %8, -1, !dbg !7503
  call void @llvm.dbg.value(metadata i32 %12, metadata !7492, metadata !DIExpression()), !dbg !7495
  %13 = icmp eq i32 %12, 0, !dbg !7496
  br i1 %13, label %14, label %5, !dbg !7497, !llvm.loop !7504

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !7506
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !7507 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7511, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.value(metadata i32 %1, metadata !7512, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.value(metadata i32 %2, metadata !7513, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.value(metadata i8* %0, metadata !7514, metadata !DIExpression()), !dbg !7516
  %4 = trunc i32 %1 to i8, !dbg !7517
  call void @llvm.dbg.value(metadata i8 %4, metadata !7515, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.value(metadata i32 %2, metadata !7513, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.value(metadata i8* %0, metadata !7514, metadata !DIExpression()), !dbg !7516
  %5 = icmp eq i32 %2, 0, !dbg !7518
  br i1 %5, label %12, label %6, !dbg !7519

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7513, metadata !DIExpression()), !dbg !7516
  call void @llvm.dbg.value(metadata i8* %8, metadata !7514, metadata !DIExpression()), !dbg !7516
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7520
  call void @llvm.dbg.value(metadata i8* %9, metadata !7514, metadata !DIExpression()), !dbg !7516
  store i8 %4, i8* %8, align 1, !dbg !7522
  %10 = add i32 %7, -1, !dbg !7523
  call void @llvm.dbg.value(metadata i32 %10, metadata !7513, metadata !DIExpression()), !dbg !7516
  %11 = icmp eq i32 %10, 0, !dbg !7518
  br i1 %11, label %12, label %6, !dbg !7519, !llvm.loop !7524

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !7526
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #19 !dbg !7527 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7531, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i32 %1, metadata !7532, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i32 %2, metadata !7533, metadata !DIExpression()), !dbg !7537
  %4 = icmp eq i32 %2, 0, !dbg !7538
  br i1 %4, label %17, label %5, !dbg !7539

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !7540

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !7541
  call void @llvm.dbg.value(metadata i8* %9, metadata !7534, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i32 %8, metadata !7533, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata i8* %9, metadata !7534, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7541
  %10 = load i8, i8* %9, align 1, !dbg !7542
  %11 = icmp eq i8 %10, %6, !dbg !7545
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !7546
  call void @llvm.dbg.value(metadata i8* %12, metadata !7534, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.value(metadata i32 %13, metadata !7533, metadata !DIExpression()), !dbg !7537
  br i1 %15, label %16, label %7, !dbg !7546, !llvm.loop !7547

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !7549

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !7537
  ret i8* %19, !dbg !7550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #4 !dbg !7551 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !7553, metadata !DIExpression()), !dbg !7554
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !7555
  ret void, !dbg !7556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #11 !dbg !7557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7559, metadata !DIExpression()), !dbg !7560
  ret i32 -1, !dbg !7561
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7566, metadata !DIExpression()), !dbg !7568
  call void @llvm.dbg.value(metadata i32* %1, metadata !7567, metadata !DIExpression()), !dbg !7568
  %3 = ptrtoint i32* %1 to i32, !dbg !7569
  %4 = and i32 %3, -2, !dbg !7569
  %5 = icmp eq i32 %4, 2, !dbg !7569
  br i1 %5, label %6, label %9, !dbg !7569

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7570
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !7570
  br label %9, !dbg !7571

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !7571
  ret i32 %10, !dbg !7572
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !7573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7575, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata i32* %1, metadata !7576, metadata !DIExpression()), !dbg !7577
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7578
  ret i32 %3, !dbg !7579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !7580 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7583, metadata !DIExpression()), !dbg !7585
  call void @llvm.dbg.value(metadata i32* %1, metadata !7584, metadata !DIExpression()), !dbg !7585
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7586, !srcloc !7588
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !7589
  ret i32 %3, !dbg !7590
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !7591 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7596, metadata !DIExpression()), !dbg !7600
  call void @llvm.dbg.value(metadata i32* %1, metadata !7597, metadata !DIExpression()), !dbg !7600
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !7601
  call void @llvm.dbg.value(metadata i32 %3, metadata !7598, metadata !DIExpression()), !dbg !7600
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !7602
  call void @llvm.dbg.value(metadata i32 %4, metadata !7599, metadata !DIExpression()), !dbg !7600
  %5 = icmp ne i32 %3, %4, !dbg !7603
  %6 = sext i1 %5 to i32, !dbg !7604
  ret i32 %6, !dbg !7605
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !7606 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7610, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32 %1, metadata !7611, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32 %2, metadata !7612, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata i32* %3, metadata !7613, metadata !DIExpression()), !dbg !7614
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7615
  ret i32 %5, !dbg !7616
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !7617 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7619, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i32 %2, metadata !7621, metadata !DIExpression()), !dbg !7623
  call void @llvm.dbg.value(metadata i32* %3, metadata !7622, metadata !DIExpression()), !dbg !7623
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !7624, !srcloc !7626
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !7627
  ret i32 %5, !dbg !7628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !7629 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7631, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %1, metadata !7632, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %2, metadata !7633, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32* %3, metadata !7634, metadata !DIExpression()), !dbg !7639
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !7640
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !7642
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !7642
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !7642
  br i1 %11, label %33, label %12, !dbg !7642

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !7639
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !7639
  call void @llvm.dbg.value(metadata i8* %14, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %13, metadata !7635, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %1, metadata !7636, metadata !DIExpression()), !dbg !7639
  br label %15, !dbg !7643

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !7645
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !7639
  call void @llvm.dbg.value(metadata i8* %17, metadata !7637, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.value(metadata i32 %16, metadata !7636, metadata !DIExpression()), !dbg !7639
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !7646
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7649
  call void @llvm.dbg.value(metadata i8* %19, metadata !7637, metadata !DIExpression()), !dbg !7639
  %20 = load i8, i8* %17, align 1, !dbg !7650
  %21 = zext i8 %20 to i32, !dbg !7651
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !7646
  %23 = icmp eq i32 %22, -1, !dbg !7652
  br i1 %23, label %30, label %24, !dbg !7653

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !7654
  call void @llvm.dbg.value(metadata i32 %25, metadata !7636, metadata !DIExpression()), !dbg !7639
  %26 = icmp eq i32 %25, 0, !dbg !7655
  br i1 %26, label %27, label %15, !dbg !7656, !llvm.loop !7657

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !7659
  call void @llvm.dbg.value(metadata i32 %28, metadata !7635, metadata !DIExpression()), !dbg !7639
  %29 = icmp eq i32 %28, 0, !dbg !7660
  br i1 %29, label %30, label %12, !dbg !7661, !llvm.loop !7662

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !7639
  call void @llvm.dbg.value(metadata i32 %31, metadata !7635, metadata !DIExpression()), !dbg !7639
  call void @llvm.dbg.label(metadata !7638), !dbg !7665
  %32 = sub i32 %2, %31, !dbg !7666
  br label %33, !dbg !7667

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !7639
  ret i32 %34, !dbg !7668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !7669 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7673, metadata !DIExpression()), !dbg !7674
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7675
  %3 = icmp eq i32 %2, -1, !dbg !7677
  br i1 %3, label %8, label %4, !dbg !7678

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !7679
  %6 = icmp eq i32 %5, -1, !dbg !7680
  %7 = sext i1 %6 to i32, !dbg !7679
  br label %8, !dbg !7681

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !7674
  ret i32 %9, !dbg !7682
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !7683 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7685, metadata !DIExpression()), !dbg !7686
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !7687
  ret void, !dbg !7688
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !7689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7693, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i32 %1, metadata !7694, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !7695, metadata !DIExpression()), !dbg !7699
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !7700
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !7700
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !7700
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !7696, metadata !DIExpression()), !dbg !7699
  call void @llvm.dbg.value(metadata i32 %0, metadata !7698, metadata !DIExpression()), !dbg !7699
  %7 = icmp slt i32 %0, %1, !dbg !7701
  br i1 %7, label %8, label %22, !dbg !7704

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7698, metadata !DIExpression()), !dbg !7699
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !7705
  %11 = icmp eq i32 %10, 0, !dbg !7705
  br i1 %11, label %19, label %12, !dbg !7708

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !7709
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !7711
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !7711
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !7713
  br i1 %15, label %19, label %16, !dbg !7714

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !7715
  %18 = load i8*, i8** %17, align 4, !dbg !7715
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !7716
  br label %19, !dbg !7717

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %20, metadata !7698, metadata !DIExpression()), !dbg !7699
  %21 = icmp eq i32 %20, %1, !dbg !7701
  br i1 %21, label %22, label %8, !dbg !7704, !llvm.loop !7719

22:                                               ; preds = %19, %3
  ret void, !dbg !7721
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #16 !dbg !7722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7724, metadata !DIExpression()), !dbg !7725
  %2 = shl nuw i32 1, %0, !dbg !7726
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !7729
  ret i32 %3, !dbg !7730
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !7731 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7735, metadata !DIExpression()), !dbg !7736
  %2 = shl nuw i32 1, %0, !dbg !7737
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !7740
  ret void, !dbg !7741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7745, metadata !DIExpression()), !dbg !7746
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7747
  ret void, !dbg !7748
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #16 !dbg !7749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7751, metadata !DIExpression()), !dbg !7752
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !7753
  %3 = and i32 %2, %0, !dbg !7753
  %4 = icmp eq i32 %3, %0, !dbg !7754
  %5 = zext i1 %4 to i32, !dbg !7754
  ret i32 %5, !dbg !7755
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !7756 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7758, metadata !DIExpression()), !dbg !7759
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !7760
  ret void, !dbg !7761
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !7762 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7764, metadata !DIExpression()), !dbg !7765
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !7766
  ret void, !dbg !7767
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !7768 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7770, metadata !DIExpression()), !dbg !7771
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !7772
  ret void, !dbg !7773
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !7774 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7776, metadata !DIExpression()), !dbg !7777
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !7778
  ret void, !dbg !7779
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !7780 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7782, metadata !DIExpression()), !dbg !7783
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !7784
  ret void, !dbg !7785
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !7786 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7788, metadata !DIExpression()), !dbg !7789
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !7790
  ret void, !dbg !7791
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !7792 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7794, metadata !DIExpression()), !dbg !7795
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !7796
  ret void, !dbg !7797
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !7798 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7800, metadata !DIExpression()), !dbg !7801
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !7802
  ret void, !dbg !7803
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !7804 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7806, metadata !DIExpression()), !dbg !7807
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !7808
  ret void, !dbg !7809
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !7810 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7812, metadata !DIExpression()), !dbg !7813
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !7814
  ret void, !dbg !7815
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !7816 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7818, metadata !DIExpression()), !dbg !7819
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !7820
  ret i32 0, !dbg !7821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !719 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !723, metadata !DIExpression()), !dbg !7822
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !7823
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !7825
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !7827
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !7829
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !7831
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !7833
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !7835
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !7837
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !7839
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !7841
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !7843
  ret void, !dbg !7845
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !7846 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7848, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i32 0, metadata !7849, metadata !DIExpression()), !dbg !7850
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !7851
  %3 = load i32, i32* %2, align 4, !dbg !7851
  call void @llvm.dbg.value(metadata i32 %3, metadata !7849, metadata !DIExpression()), !dbg !7850
  %4 = shl nuw i32 1, %0, !dbg !7852
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !7853
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !7854
  ret void, !dbg !7855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7858, metadata !DIExpression()), !dbg !7859
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7860
  %3 = or i32 %2, %0, !dbg !7860
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7860
  ret void, !dbg !7861
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !7862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7864, metadata !DIExpression()), !dbg !7865
  %2 = icmp slt i32 %0, 32, !dbg !7866
  br i1 %2, label %3, label %5, !dbg !7868

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !7869
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !7871
  br label %5, !dbg !7872

5:                                                ; preds = %1, %3
  ret void, !dbg !7873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7876, metadata !DIExpression()), !dbg !7877
  %2 = xor i32 %0, -1, !dbg !7878
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7878
  %4 = and i32 %3, %2, !dbg !7878
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !7878
  ret void, !dbg !7879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !7880 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7884, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata i32 %1, metadata !7885, metadata !DIExpression()), !dbg !7886
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !7887

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !7888
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !7890
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !7891
  br label %11, !dbg !7892

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !7893
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !7894
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !7895
  br label %11, !dbg !7896

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !7897
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !7898
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !7899
  br label %11, !dbg !7900

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !7901
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !7902
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !7903
  br label %11, !dbg !7904

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !7905
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7908, metadata !DIExpression()), !dbg !7909
  %2 = xor i32 %0, -1, !dbg !7910
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7910
  %4 = and i32 %3, %2, !dbg !7910
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7910
  ret void, !dbg !7911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7912 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7914, metadata !DIExpression()), !dbg !7915
  %2 = xor i32 %0, -1, !dbg !7916
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7916
  %4 = and i32 %3, %2, !dbg !7916
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7916
  ret void, !dbg !7917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7920, metadata !DIExpression()), !dbg !7921
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7922
  %3 = or i32 %2, %0, !dbg !7922
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !7922
  ret void, !dbg !7923
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !7924 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7926, metadata !DIExpression()), !dbg !7927
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7928
  %3 = or i32 %2, %0, !dbg !7928
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !7928
  ret void, !dbg !7929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !7930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7934, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !7935, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i8* %2, metadata !7936, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !7937, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7939, metadata !DIExpression()), !dbg !7940
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7941
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !7941
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !7943
  br i1 %6, label %7, label %9, !dbg !7944

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !7945
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7946
  store i8* %2, i8** %8, align 4, !dbg !7947
  br label %9, !dbg !7948

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !7940
  ret i32 %10, !dbg !7949
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #4 !dbg !7950 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7952, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !7953, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !7954, metadata !DIExpression()), !dbg !7955
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !7956
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !7957
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !7958
  store i8* null, i8** %3, align 4, !dbg !7959
  ret void, !dbg !7960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7961 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7963, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata i8* %1, metadata !7964, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.value(metadata i8* %1, metadata !7965, metadata !DIExpression()), !dbg !7968
  %3 = bitcast i8* %1 to i32*, !dbg !7969
  %4 = load i32, i32* %3, align 4, !dbg !7969
  %5 = add i32 %4, -169, !dbg !7969
  %6 = icmp ult i32 %5, -121, !dbg !7969
  br i1 %6, label %15, label %7, !dbg !7971

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7972
  %9 = inttoptr i32 %8 to i32*, !dbg !7973
  call void @llvm.dbg.value(metadata i32* %9, metadata !7966, metadata !DIExpression()), !dbg !7968
  %10 = load volatile i32, i32* %9, align 4, !dbg !7974
  call void @llvm.dbg.value(metadata i32 %10, metadata !7967, metadata !DIExpression()), !dbg !7968
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7975
  %12 = bitcast i8* %11 to i32*, !dbg !7975
  %13 = load i32, i32* %12, align 4, !dbg !7975
  %14 = or i32 %13, %10, !dbg !7976
  call void @llvm.dbg.value(metadata i32 %14, metadata !7967, metadata !DIExpression()), !dbg !7968
  store volatile i32 %14, i32* %9, align 4, !dbg !7977
  br label %15, !dbg !7978

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7968
  ret i32 %16, !dbg !7979
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !7980 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !7982, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i8* %1, metadata !7983, metadata !DIExpression()), !dbg !7987
  call void @llvm.dbg.value(metadata i8* %1, metadata !7984, metadata !DIExpression()), !dbg !7987
  %3 = bitcast i8* %1 to i32*, !dbg !7988
  %4 = load i32, i32* %3, align 4, !dbg !7988
  %5 = add i32 %4, -169, !dbg !7988
  %6 = icmp ult i32 %5, -121, !dbg !7988
  br i1 %6, label %16, label %7, !dbg !7990

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !7991
  %9 = inttoptr i32 %8 to i32*, !dbg !7992
  call void @llvm.dbg.value(metadata i32* %9, metadata !7985, metadata !DIExpression()), !dbg !7987
  %10 = load volatile i32, i32* %9, align 4, !dbg !7993
  call void @llvm.dbg.value(metadata i32 %10, metadata !7986, metadata !DIExpression()), !dbg !7987
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !7994
  %12 = bitcast i8* %11 to i32*, !dbg !7994
  %13 = load i32, i32* %12, align 4, !dbg !7994
  %14 = xor i32 %13, -1, !dbg !7995
  %15 = and i32 %10, %14, !dbg !7996
  call void @llvm.dbg.value(metadata i32 %15, metadata !7986, metadata !DIExpression()), !dbg !7987
  store volatile i32 %15, i32* %9, align 4, !dbg !7997
  br label %16, !dbg !7998

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !7987
  ret i32 %17, !dbg !7999
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8000 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8002, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i8* %1, metadata !8003, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i32* %2, metadata !8004, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i8* %1, metadata !8005, metadata !DIExpression()), !dbg !8010
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8011
  call void @llvm.dbg.value(metadata i32 %4, metadata !8006, metadata !DIExpression()), !dbg !8010
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #26, !dbg !8012
  call void @llvm.dbg.value(metadata i32 %5, metadata !8007, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i32 %5, metadata !8008, metadata !DIExpression()), !dbg !8010
  call void @llvm.dbg.value(metadata i32 %4, metadata !8009, metadata !DIExpression()), !dbg !8010
  %6 = bitcast i8* %1 to i32*, !dbg !8013
  %7 = load i32, i32* %6, align 4, !dbg !8013
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8014

8:                                                ; preds = %3
  br label %18, !dbg !8015

9:                                                ; preds = %3
  br label %18, !dbg !8017

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8018
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #26, !dbg !8019
  br label %18, !dbg !8020

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #27, !dbg !8021
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #26, !dbg !8022
  br label %18, !dbg !8023

16:                                               ; preds = %3
  br label %18, !dbg !8024

17:                                               ; preds = %3
  br label %18, !dbg !8025

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8026
  br label %20, !dbg !8027

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8010
  ret i32 %21, !dbg !8027
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !8028 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8030, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %1, metadata !8031, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %2, metadata !8032, metadata !DIExpression()), !dbg !8038
  call void @llvm.dbg.value(metadata i8* %1, metadata !8033, metadata !DIExpression()), !dbg !8038
  %4 = bitcast i8* %1 to i32*, !dbg !8039
  %5 = load i32, i32* %4, align 4, !dbg !8039
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !8040
  call void @llvm.dbg.value(metadata i32 %6, metadata !8037, metadata !DIExpression()), !dbg !8038
  %7 = icmp slt i32 %6, 0, !dbg !8041
  br i1 %7, label %22, label %8, !dbg !8043

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8033, metadata !DIExpression()), !dbg !8038
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8044
  %10 = bitcast i8* %9 to i32*, !dbg !8044
  %11 = load i32, i32* %10, align 4, !dbg !8044
  %12 = lshr i32 %11, 16, !dbg !8044
  %13 = and i32 %12, 7, !dbg !8044
  %14 = lshr i32 %11, 8, !dbg !8045
  %15 = and i32 %14, 31, !dbg !8045
  %16 = shl i32 %13, %15, !dbg !8046
  call void @llvm.dbg.value(metadata i32 %16, metadata !8036, metadata !DIExpression()), !dbg !8038
  %17 = and i32 %11, 255, !dbg !8047
  %18 = or i32 %17, 1073887232, !dbg !8048
  %19 = inttoptr i32 %18 to i32*, !dbg !8049
  call void @llvm.dbg.value(metadata i32* %19, metadata !8034, metadata !DIExpression()), !dbg !8038
  %20 = load volatile i32, i32* %19, align 4, !dbg !8050
  call void @llvm.dbg.value(metadata i32 %20, metadata !8035, metadata !DIExpression()), !dbg !8038
  %21 = or i32 %16, %20, !dbg !8051
  call void @llvm.dbg.value(metadata i32 %21, metadata !8035, metadata !DIExpression()), !dbg !8038
  store volatile i32 %21, i32* %19, align 4, !dbg !8052
  br label %22, !dbg !8053

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8038
  ret i32 %23, !dbg !8054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #11 !dbg !8055 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8059, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.value(metadata i32 0, metadata !8060, metadata !DIExpression()), !dbg !8061
  %2 = add i32 %0, -1, !dbg !8062
  %3 = icmp ult i32 %2, 6, !dbg !8062
  br i1 %3, label %4, label %7, !dbg !8062

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8062
  %6 = load i32, i32* %5, align 4, !dbg !8062
  call void @llvm.dbg.value(metadata i32 %6, metadata !8060, metadata !DIExpression()), !dbg !8061
  br label %7, !dbg !8063

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8061
  ret i32 %8, !dbg !8064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #11 !dbg !8065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8069, metadata !DIExpression()), !dbg !8071
  call void @llvm.dbg.value(metadata i32 2, metadata !8070, metadata !DIExpression()), !dbg !8071
  %2 = lshr i32 %0, 1, !dbg !8072
  ret i32 %2, !dbg !8073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !8074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8078, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 8, metadata !8079, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 84, metadata !8080, metadata !DIExpression()), !dbg !8082
  call void @llvm.dbg.value(metadata i32 %1, metadata !8081, metadata !DIExpression()), !dbg !8082
  %3 = mul i32 %0, 84, !dbg !8083
  %4 = shl nsw i32 %1, 3, !dbg !8084
  %5 = udiv i32 %3, %4, !dbg !8085
  ret i32 %5, !dbg !8086
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8087 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8089, metadata !DIExpression()), !dbg !8092
  tail call void @config_enable_default_clocks() #27, !dbg !8093
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !8094
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !8094
  %4 = lshr i32 %3, 4, !dbg !8094
  %5 = and i32 %4, 15, !dbg !8094
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8094
  %7 = load i8, i8* %6, align 1, !dbg !8094
  %8 = zext i8 %7 to i32, !dbg !8094
  %9 = lshr i32 %2, %8, !dbg !8094
  call void @llvm.dbg.value(metadata i32 %9, metadata !8090, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8091, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8092
  %10 = icmp ult i32 %9, 84000000, !dbg !8095
  br i1 %10, label %11, label %13, !dbg !8097

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8098
  br label %13, !dbg !8100

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !8101
  tail call fastcc void @set_up_plls() #26, !dbg !8102
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8103
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !8106
  br label %14, !dbg !8107

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8108
  %16 = icmp eq i32 %15, 8, !dbg !8109
  br i1 %16, label %17, label %14, !dbg !8107, !llvm.loop !8110

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8112
  br i1 %18, label %19, label %21, !dbg !8114

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !8115
  br label %21, !dbg !8117

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8118
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !8119
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !8120
  ret i32 0, !dbg !8121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #16 !dbg !8122 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8124
  %2 = and i32 %1, 240, !dbg !8124
  ret i32 %2, !dbg !8125
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !8126 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !8127
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !8132
  br label %1, !dbg !8133

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !8134
  %3 = icmp eq i32 %2, 1, !dbg !8135
  br i1 %3, label %4, label %1, !dbg !8133, !llvm.loop !8136

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !8138
  br label %5, !dbg !8141

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !8142
  %7 = icmp eq i32 %6, 1, !dbg !8143
  br i1 %7, label %8, label %5, !dbg !8141, !llvm.loop !8144

8:                                                ; preds = %5
  ret void, !dbg !8146
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8147 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8148
  %2 = icmp eq i32 %1, 8, !dbg !8150
  br i1 %2, label %3, label %4, !dbg !8151

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !8152
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !8154
  br label %4, !dbg !8155

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !8156
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8157
  %6 = and i32 %5, -196609, !dbg !8157
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8157
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8158
  %8 = and i32 %7, -251658241, !dbg !8158
  %9 = or i32 %8, 134217728, !dbg !8158
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8158
  tail call void @config_pll_sysclock() #27, !dbg !8159
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !8160
  br label %10, !dbg !8161

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !8162
  %12 = icmp eq i32 %11, 1, !dbg !8163
  br i1 %12, label %13, label %10, !dbg !8161, !llvm.loop !8164

13:                                               ; preds = %10
  ret void, !dbg !8166
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !8167 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8169, metadata !DIExpression()), !dbg !8170
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8171
  %2 = and i32 %1, -241, !dbg !8171
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8171
  ret void, !dbg !8172
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !8173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8175, metadata !DIExpression()), !dbg !8176
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8177
  %3 = and i32 %2, -4, !dbg !8177
  %4 = or i32 %3, %0, !dbg !8177
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8177
  ret void, !dbg !8178
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #16 !dbg !8179 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8180
  %2 = and i32 %1, 12, !dbg !8180
  ret i32 %2, !dbg !8181
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !8182 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8184, metadata !DIExpression()), !dbg !8185
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8186
  %2 = and i32 %1, -7169, !dbg !8186
  %3 = or i32 %2, 4096, !dbg !8186
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8186
  ret void, !dbg !8187
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !8188 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8190, metadata !DIExpression()), !dbg !8191
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8192
  %2 = and i32 %1, -57345, !dbg !8192
  %3 = or i32 %2, 32768, !dbg !8192
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8192
  ret void, !dbg !8193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !8194 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8195
  %2 = icmp eq i32 %1, 1, !dbg !8197
  br i1 %2, label %7, label %3, !dbg !8198

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !8199
  br label %4, !dbg !8201

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !8202
  %6 = icmp eq i32 %5, 1, !dbg !8203
  br i1 %6, label %7, label %4, !dbg !8201, !llvm.loop !8204

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !8206
  br label %8, !dbg !8207

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !8208
  %10 = icmp eq i32 %9, 0, !dbg !8209
  br i1 %10, label %11, label %8, !dbg !8207, !llvm.loop !8210

11:                                               ; preds = %8
  ret void, !dbg !8212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !8213 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8214
  %2 = and i32 %1, -16777217, !dbg !8214
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8214
  ret void, !dbg !8215
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !8216 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8217
  %2 = or i32 %1, 16777216, !dbg !8217
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8217
  ret void, !dbg !8218
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #16 !dbg !8219 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8220
  %2 = lshr i32 %1, 25, !dbg !8221
  %3 = and i32 %2, 1, !dbg !8221
  ret i32 %3, !dbg !8222
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #16 !dbg !8223 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8224
  %2 = lshr i32 %1, 1, !dbg !8225
  %3 = and i32 %2, 1, !dbg !8225
  ret i32 %3, !dbg !8226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !8227 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8228
  %2 = or i32 %1, 1, !dbg !8228
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8228
  ret void, !dbg !8229
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !8230 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8231
  %2 = and i32 %1, -262145, !dbg !8231
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8231
  ret void, !dbg !8232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !8233 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8234
  %2 = or i32 %1, 65536, !dbg !8234
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8234
  ret void, !dbg !8235
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #16 !dbg !8236 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8237
  %2 = lshr i32 %1, 17, !dbg !8238
  %3 = and i32 %2, 1, !dbg !8238
  ret i32 %3, !dbg !8239
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !8240 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8241
  %2 = or i32 %1, 1, !dbg !8241
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8241
  ret void, !dbg !8242
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #16 !dbg !8243 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8244
  %2 = lshr i32 %1, 1, !dbg !8245
  %3 = and i32 %2, 1, !dbg !8245
  ret i32 %3, !dbg !8246
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #11 !dbg !8247 {
  ret i32 16000000, !dbg !8249
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !8253 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !8254
  ret void, !dbg !8255
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !8256 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8260, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 8, metadata !8261, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 84, metadata !8262, metadata !DIExpression()), !dbg !8264
  call void @llvm.dbg.value(metadata i32 0, metadata !8263, metadata !DIExpression()), !dbg !8264
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8265
  %2 = and i32 %1, -4227072, !dbg !8265
  %3 = or i32 %2, 4199688, !dbg !8265
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8265
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8266
  %5 = and i32 %4, -196609, !dbg !8266
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8266
  ret void, !dbg !8267
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #17 !dbg !8268 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !8269
  ret void, !dbg !8270
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #17 !dbg !8271 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8274, metadata !DIExpression()), !dbg !8276
  %2 = bitcast i32* %1 to i8*, !dbg !8277
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8277
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8275, metadata !DIExpression()), !dbg !8278
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8279
  %4 = or i32 %3, 268435456, !dbg !8279
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8279
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8280
  %6 = and i32 %5, 268435456, !dbg !8280
  store volatile i32 %6, i32* %1, align 4, !dbg !8281
  %7 = load volatile i32, i32* %1, align 4, !dbg !8282
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8283
  ret void, !dbg !8283
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8284 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8286, metadata !DIExpression()), !dbg !8287
  %2 = tail call fastcc zeroext i1 @device_is_ready.42() #26, !dbg !8288
  br i1 %2, label %3, label %4, !dbg !8290

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !8291
  br label %4, !dbg !8292

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8287
  ret i32 %5, !dbg !8293
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.42() unnamed_addr #1 !dbg !8294 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8298, metadata !DIExpression()), !dbg !8299
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8300, !srcloc !8302
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.45() #26, !dbg !8303
  ret i1 %1, !dbg !8304
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8305 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8306
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !8307
  ret void, !dbg !8308
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8309 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8311, metadata !DIExpression()), !dbg !8312
  %2 = icmp eq i32 %0, 10, !dbg !8313
  br i1 %2, label %3, label %4, !dbg !8315

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext 13) #26, !dbg !8316
  br label %4, !dbg !8318

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8319
  tail call fastcc void @uart_poll_out.43(i8 noundef zeroext %5) #26, !dbg !8320
  ret i32 %0, !dbg !8321
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out.43(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8322 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8324, metadata !DIExpression()), !dbg !8326
  call void @llvm.dbg.value(metadata i8 %0, metadata !8325, metadata !DIExpression()), !dbg !8326
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8327, !srcloc !8329
  tail call fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) #26, !dbg !8330
  ret void, !dbg !8331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out.44(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8332 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8334, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i8 %0, metadata !8335, metadata !DIExpression()), !dbg !8337
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8338
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8336, metadata !DIExpression()), !dbg !8337
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8339
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8339
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #27, !dbg !8340
  ret void, !dbg !8341
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.45() unnamed_addr #1 !dbg !8342 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8344, metadata !DIExpression()), !dbg !8345
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !8346
  ret i1 %1, !dbg !8347
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #11 !dbg !8348 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !8395, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !8396, metadata !DIExpression()), !dbg !8398
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !8397, metadata !DIExpression()), !dbg !8398
  ret void, !dbg !8399
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !8400 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8402, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata i8 %1, metadata !8403, metadata !DIExpression()), !dbg !8407
  call void @llvm.dbg.value(metadata i32 %2, metadata !8404, metadata !DIExpression()), !dbg !8407
  %5 = bitcast i32* %4 to i8*, !dbg !8408
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8408
  call void @llvm.dbg.value(metadata i32* %4, metadata !8406, metadata !DIExpression(DW_OP_deref)), !dbg !8407
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !8409
  call void @llvm.dbg.value(metadata i32 %6, metadata !8405, metadata !DIExpression()), !dbg !8407
  %7 = icmp eq i32 %6, 0, !dbg !8410
  br i1 %7, label %8, label %31, !dbg !8412

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !8405, metadata !DIExpression()), !dbg !8407
  %9 = and i32 %2, 131072, !dbg !8413
  %10 = icmp eq i32 %9, 0, !dbg !8415
  br i1 %10, label %28, label %11, !dbg !8416

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !8417
  %13 = icmp eq i32 %12, 0, !dbg !8420
  br i1 %13, label %18, label %14, !dbg !8421

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !8422
  %16 = shl nuw i32 1, %15, !dbg !8422
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !8424
  br label %25, !dbg !8425

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !8426
  %20 = icmp eq i32 %19, 0, !dbg !8428
  %21 = zext i8 %1 to i32, !dbg !8407
  br i1 %20, label %25, label %22, !dbg !8429

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !8430
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !8432
  br label %25, !dbg !8433

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !8434
  %27 = load i32, i32* %4, align 4, !dbg !8435
  call void @llvm.dbg.value(metadata i32 %30, metadata !8406, metadata !DIExpression()), !dbg !8407
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !8436
  br label %31, !dbg !8437

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !8434
  %30 = load i32, i32* %4, align 4, !dbg !8435
  call void @llvm.dbg.value(metadata i32 %30, metadata !8406, metadata !DIExpression()), !dbg !8407
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !8436
  call void @llvm.dbg.value(metadata i32 0, metadata !8405, metadata !DIExpression()), !dbg !8407
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !8438
  ret i32 %6, !dbg !8438
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #16 !dbg !8439 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8443, metadata !DIExpression()), !dbg !8448
  call void @llvm.dbg.value(metadata i32* %1, metadata !8444, metadata !DIExpression()), !dbg !8448
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8449
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8449
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8449
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8445, metadata !DIExpression()), !dbg !8448
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8450
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8450
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8450
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8447, metadata !DIExpression()), !dbg !8448
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !8451
  store i32 %9, i32* %1, align 4, !dbg !8452
  ret i32 0, !dbg !8453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !8454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8456, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 %1, metadata !8457, metadata !DIExpression()), !dbg !8462
  call void @llvm.dbg.value(metadata i32 %2, metadata !8458, metadata !DIExpression()), !dbg !8462
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8463
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !8463
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !8463
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !8459, metadata !DIExpression()), !dbg !8462
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !8464
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !8464
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !8464
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !8460, metadata !DIExpression()), !dbg !8462
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !8465
  call void @llvm.dbg.value(metadata i32 %10, metadata !8461, metadata !DIExpression()), !dbg !8462
  %11 = xor i32 %1, -1, !dbg !8466
  %12 = and i32 %10, %11, !dbg !8467
  %13 = and i32 %2, %1, !dbg !8468
  %14 = or i32 %12, %13, !dbg !8469
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !8470
  ret i32 0, !dbg !8471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8472 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8474, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.value(metadata i32 %1, metadata !8475, metadata !DIExpression()), !dbg !8478
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8479
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8479
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8479
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8476, metadata !DIExpression()), !dbg !8478
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8480
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8480
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8480
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8477, metadata !DIExpression()), !dbg !8478
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !8481
  store volatile i32 %1, i32* %9, align 4, !dbg !8481
  ret i32 0, !dbg !8482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8483 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8485, metadata !DIExpression()), !dbg !8489
  call void @llvm.dbg.value(metadata i32 %1, metadata !8486, metadata !DIExpression()), !dbg !8489
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8490
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8490
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8490
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8487, metadata !DIExpression()), !dbg !8489
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8491
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8491
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8491
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8488, metadata !DIExpression()), !dbg !8489
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !8492
  ret i32 0, !dbg !8493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !8494 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8496, metadata !DIExpression()), !dbg !8500
  call void @llvm.dbg.value(metadata i32 %1, metadata !8497, metadata !DIExpression()), !dbg !8500
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8501
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !8501
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !8501
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !8498, metadata !DIExpression()), !dbg !8500
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !8502
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !8502
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !8502
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !8499, metadata !DIExpression()), !dbg !8500
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !8503
  %10 = load volatile i32, i32* %9, align 4, !dbg !8503
  %11 = xor i32 %10, %1, !dbg !8503
  store volatile i32 %11, i32* %9, align 4, !dbg !8503
  ret i32 0, !dbg !8504
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !8505 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8507, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i8 %1, metadata !8508, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 %2, metadata !8509, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 %3, metadata !8510, metadata !DIExpression()), !dbg !8517
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8518
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8518
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8518
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8511, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i8* undef, metadata !8512, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8514, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.value(metadata i32 0, metadata !8515, metadata !DIExpression()), !dbg !8517
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !8519

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !8520
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !8524
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8525
  %12 = load i32, i32* %11, align 4, !dbg !8525
  %13 = icmp eq i32 %10, %12, !dbg !8526
  br i1 %13, label %14, label %29, !dbg !8527

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !8528
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !8530
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !8531
  br label %29, !dbg !8532

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8533
  %17 = load i8*, i8** %16, align 4, !dbg !8533
  call void @llvm.dbg.value(metadata i8* %17, metadata !8512, metadata !DIExpression()), !dbg !8517
  %18 = zext i8 %1 to i32, !dbg !8534
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !8536
  %20 = icmp eq i32 %19, 0, !dbg !8537
  br i1 %20, label %21, label %29, !dbg !8538

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !8539
  %23 = load i32, i32* %22, align 4, !dbg !8539
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !8540
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !8541

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !8514, metadata !DIExpression()), !dbg !8517
  br label %27, !dbg !8542

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !8514, metadata !DIExpression()), !dbg !8517
  br label %27, !dbg !8544

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !8514, metadata !DIExpression()), !dbg !8517
  br label %27, !dbg !8545

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !8517
  call void @llvm.dbg.value(metadata i32 %28, metadata !8514, metadata !DIExpression()), !dbg !8517
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !8546
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !8547
  br label %29, !dbg !8547

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !8517
  call void @llvm.dbg.value(metadata i32 %30, metadata !8515, metadata !DIExpression()), !dbg !8517
  call void @llvm.dbg.label(metadata !8516), !dbg !8548
  ret i32 %30, !dbg !8549
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !8550 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8552, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8553, metadata !DIExpression()), !dbg !8556
  call void @llvm.dbg.value(metadata i1 %2, metadata !8554, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8556
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !8557
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !8557
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !8557
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !8555, metadata !DIExpression()), !dbg !8556
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !8558
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !8559
  ret i32 %8, !dbg !8560
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !8561 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8567, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !8568, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata i1 %2, metadata !8569, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8570
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !8571
  br i1 %4, label %10, label %5, !dbg !8573

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8574
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !8577
  %8 = or i1 %7, %2, !dbg !8578
  %9 = select i1 %8, i32 0, i32 -22, !dbg !8578
  br i1 %2, label %11, label %13, !dbg !8578

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !8579

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !8580
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !8583
  br label %13, !dbg !8584

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !8570
  ret i32 %14, !dbg !8585
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8586 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8590, metadata !DIExpression()), !dbg !8591
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8592
  %3 = icmp eq %struct._snode* %2, null, !dbg !8592
  ret i1 %3, !dbg !8592
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !8593 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8597, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8598, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8599, metadata !DIExpression()), !dbg !8601
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8602
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8599, metadata !DIExpression()), !dbg !8601
  %4 = icmp eq %struct._snode* %3, null, !dbg !8604
  br i1 %4, label %15, label %5, !dbg !8602

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !8599, metadata !DIExpression()), !dbg !8601
  %6 = icmp eq %struct._snode* %3, %1, !dbg !8606
  br i1 %6, label %9, label %11, !dbg !8609

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8599, metadata !DIExpression()), !dbg !8601
  %8 = icmp eq %struct._snode* %13, %1, !dbg !8606
  br i1 %8, label %9, label %11, !dbg !8609, !llvm.loop !8610

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !8611
  br label %15, !dbg !8611

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8600, metadata !DIExpression()), !dbg !8601
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !8599, metadata !DIExpression()), !dbg !8601
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !8604
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !8600, metadata !DIExpression()), !dbg !8601
  %14 = icmp eq %struct._snode* %13, null, !dbg !8604
  br i1 %14, label %15, label %7, !dbg !8602, !llvm.loop !8610

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !8613
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !8614 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8618, metadata !DIExpression()), !dbg !8620
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8619, metadata !DIExpression()), !dbg !8620
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8621
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !8621
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !8621
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8622
  %5 = icmp eq %struct._snode* %4, null, !dbg !8622
  br i1 %5, label %6, label %8, !dbg !8621

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8624
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !8624
  br label %8, !dbg !8624

8:                                                ; preds = %6, %2
  ret void, !dbg !8621
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8626 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8630, metadata !DIExpression()), !dbg !8631
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8632
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8632
  ret %struct._snode* %3, !dbg !8633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8634 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8639, metadata !DIExpression()), !dbg !8640
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8641
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8642
  ret void, !dbg !8643
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8644 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8646, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8647, metadata !DIExpression()), !dbg !8648
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !8649
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8650
  ret void, !dbg !8651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8652 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8654, metadata !DIExpression()), !dbg !8655
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8656
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8656
  ret %struct._snode* %3, !dbg !8657
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #4 !dbg !8658 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8660, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8661, metadata !DIExpression()), !dbg !8662
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !8663
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !8664
  ret void, !dbg !8665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #7 !dbg !8666 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8670, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !8671, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !8672, metadata !DIExpression()), !dbg !8673
  %4 = icmp eq %struct._snode* %1, null, !dbg !8674
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !8676
  br i1 %4, label %6, label %11, !dbg !8677

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !8678
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8680
  %8 = icmp eq %struct._snode* %7, %2, !dbg !8680
  br i1 %8, label %9, label %15, !dbg !8678

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8682
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !8682
  br label %15, !dbg !8682

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !8684
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !8686
  %13 = icmp eq %struct._snode* %12, %2, !dbg !8686
  br i1 %13, label %14, label %15, !dbg !8684

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !8688
  br label %15, !dbg !8688

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !8677
  ret void, !dbg !8677
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #5 !dbg !8690 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8694, metadata !DIExpression()), !dbg !8695
  %2 = icmp eq %struct._snode* %0, null, !dbg !8696
  br i1 %2, label %5, label %3, !dbg !8696

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !8696
  br label %5, !dbg !8696

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !8696
  ret %struct._snode* %6, !dbg !8696
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8697 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8699, metadata !DIExpression()), !dbg !8700
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !8701
  ret %struct._snode* %2, !dbg !8701
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !8702 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !8704, metadata !DIExpression()), !dbg !8705
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !8706
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !8706
  ret %struct._snode* %3, !dbg !8707
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !8708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8710, metadata !DIExpression()), !dbg !8713
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !8714, !range !8715
  call void @llvm.dbg.value(metadata i32 %2, metadata !8711, metadata !DIExpression()), !dbg !8713
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !8716
  call void @llvm.dbg.value(metadata i32 %3, metadata !8712, metadata !DIExpression()), !dbg !8713
  ret i32 %3, !dbg !8717
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !8718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8720, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i8* %1, metadata !8721, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i8* %1, metadata !8722, metadata !DIExpression()), !dbg !8723
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !8724
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !8724
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8725
  %6 = bitcast i8* %5 to %struct.device**, !dbg !8725
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !8725
  %8 = shl nuw i32 1, %0, !dbg !8726
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !8727
  ret void, !dbg !8728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8729 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !8733, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata i32 %1, metadata !8734, metadata !DIExpression()), !dbg !8739
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8735, metadata !DIExpression()), !dbg !8739
  %4 = bitcast i64* %3 to i8*, !dbg !8740
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8740
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !8737, metadata !DIExpression()), !dbg !8739
  store i64 70368744177732, i64* %3, align 8, !dbg !8741
  call void @llvm.dbg.value(metadata i64* %3, metadata !8737, metadata !DIExpression(DW_OP_deref)), !dbg !8739
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !8742
  call void @llvm.dbg.value(metadata i32 %5, metadata !8738, metadata !DIExpression()), !dbg !8739
  %6 = icmp eq i32 %5, 0, !dbg !8743
  br i1 %6, label %7, label %8, !dbg !8745

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !8746
  br label %8, !dbg !8747

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !8748
  ret void, !dbg !8748
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !8749 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !8751, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.value(metadata i8* %0, metadata !8752, metadata !DIExpression()), !dbg !8754
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !8755
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !8753, metadata !DIExpression()), !dbg !8754
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !8756
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !8756
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !8757
  ret i32 %5, !dbg !8758
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8761, metadata !DIExpression()), !dbg !8764
  call void @llvm.dbg.value(metadata i32 %1, metadata !8762, metadata !DIExpression()), !dbg !8764
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !8765
  call void @llvm.dbg.value(metadata i32 %3, metadata !8763, metadata !DIExpression()), !dbg !8764
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !8766
  ret void, !dbg !8767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #11 !dbg !8768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8772, metadata !DIExpression()), !dbg !8773
  %2 = sdiv i32 %0, 4, !dbg !8774
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !8775
  %6 = add nsw i32 %5, 16, !dbg !8776
  %7 = shl i32 15, %6, !dbg !8777
  %8 = or i32 %7, %2, !dbg !8778
  ret i32 %8, !dbg !8779
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !8780 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8784, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata i32 %1, metadata !8785, metadata !DIExpression()), !dbg !8786
  %3 = and i32 %1, 255, !dbg !8787
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !8787
  %5 = load volatile i32, i32* %4, align 4, !dbg !8787
  %6 = lshr i32 %1, 16, !dbg !8787
  %7 = xor i32 %6, -1, !dbg !8787
  %8 = and i32 %5, %7, !dbg !8787
  call void @llvm.dbg.value(metadata i32 %6, metadata !8788, metadata !DIExpression()) #25, !dbg !8792
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !8794, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %9, metadata !8791, metadata !DIExpression()) #25, !dbg !8792
  call void @llvm.dbg.value(metadata i32 %9, metadata !8796, metadata !DIExpression()) #25, !dbg !8801
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !8803, !range !3987
  %11 = shl i32 %0, %10, !dbg !8787
  %12 = or i32 %11, %8, !dbg !8787
  store volatile i32 %12, i32* %4, align 4, !dbg !8787
  ret void, !dbg !8804
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8805 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !8809, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !8810, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata i32 %2, metadata !8811, metadata !DIExpression()), !dbg !8814
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !8815
  %5 = icmp eq %struct._snode* %4, null, !dbg !8815
  br i1 %5, label %21, label %6, !dbg !8815

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !8817
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8813, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !8812, metadata !DIExpression()), !dbg !8814
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !8818
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !8818
  %11 = load i32, i32* %10, align 4, !dbg !8818
  %12 = and i32 %11, %2, !dbg !8822
  %13 = icmp eq i32 %12, 0, !dbg !8822
  br i1 %13, label %19, label %14, !dbg !8823

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !8812, metadata !DIExpression()), !dbg !8814
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !8824
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !8824
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !8824
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !8826
  br label %19, !dbg !8827

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !8812, metadata !DIExpression()), !dbg !8814
  %20 = icmp eq %struct._snode* %8, null, !dbg !8828
  br i1 %20, label %21, label %6, !dbg !8828

21:                                               ; preds = %19, %3
  ret void, !dbg !8829
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !8830 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8832, metadata !DIExpression()), !dbg !8833
  %2 = and i32 %0, 255, !dbg !8834
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !8834
  %4 = load volatile i32, i32* %3, align 4, !dbg !8834
  %5 = lshr i32 %0, 16, !dbg !8834
  %6 = and i32 %4, %5, !dbg !8834
  call void @llvm.dbg.value(metadata i32 %5, metadata !8788, metadata !DIExpression()) #25, !dbg !8835
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !8837, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %7, metadata !8791, metadata !DIExpression()) #25, !dbg !8835
  call void @llvm.dbg.value(metadata i32 %7, metadata !8796, metadata !DIExpression()) #25, !dbg !8838
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !8840, !range !3987
  %9 = lshr i32 %6, %8, !dbg !8841
  ret i32 %9, !dbg !8842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8843 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8848, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.value(metadata i32 %1, metadata !8849, metadata !DIExpression()), !dbg !8850
  %3 = shl i32 %1, 16, !dbg !8851
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !8851
  store volatile i32 %3, i32* %4, align 4, !dbg !8851
  ret void, !dbg !8852
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8853 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8857, metadata !DIExpression()), !dbg !8858
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8859
  %3 = load volatile i32, i32* %2, align 4, !dbg !8859
  ret i32 %3, !dbg !8860
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8861 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8863, metadata !DIExpression()), !dbg !8865
  call void @llvm.dbg.value(metadata i32 %1, metadata !8864, metadata !DIExpression()), !dbg !8865
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !8866
  store volatile i32 %1, i32* %3, align 4, !dbg !8866
  ret void, !dbg !8867
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #16 !dbg !8868 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8870, metadata !DIExpression()), !dbg !8871
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !8872
  %3 = load volatile i32, i32* %2, align 4, !dbg !8872
  ret i32 %3, !dbg !8873
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #7 !dbg !8874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8878, metadata !DIExpression()), !dbg !8880
  call void @llvm.dbg.value(metadata i32* %1, metadata !8879, metadata !DIExpression()), !dbg !8880
  %3 = and i32 %0, 131072, !dbg !8881
  %4 = icmp eq i32 %3, 0, !dbg !8883
  br i1 %4, label %22, label %5, !dbg !8884

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !8885
  %6 = and i32 %0, 2, !dbg !8887
  %7 = icmp eq i32 %6, 0, !dbg !8889
  br i1 %7, label %11, label %8, !dbg !8890

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !8891
  %10 = icmp eq i32 %9, 0, !dbg !8891
  br i1 %10, label %33, label %11, !dbg !8894

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !8895
  store i32 %12, i32* %1, align 4, !dbg !8895
  %13 = and i32 %0, 16, !dbg !8896
  %14 = icmp eq i32 %13, 0, !dbg !8898
  br i1 %14, label %17, label %15, !dbg !8899

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !8900
  br label %31, !dbg !8902

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !8903
  %19 = icmp eq i32 %18, 0, !dbg !8905
  br i1 %19, label %33, label %20, !dbg !8906

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !8907
  br label %31, !dbg !8909

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !8910
  %24 = icmp eq i32 %23, 0, !dbg !8912
  br i1 %24, label %31, label %25, !dbg !8913

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !8914
  %27 = icmp eq i32 %26, 0, !dbg !8917
  br i1 %27, label %28, label %31, !dbg !8918

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !8919
  br label %33, !dbg !8920

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !8880
  ret i32 %34, !dbg !8920
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !8921 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8925, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %1, metadata !8926, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8927, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %3, metadata !8928, metadata !DIExpression()), !dbg !8936
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !8937
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !8937
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !8937
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !8929, metadata !DIExpression()), !dbg !8936
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !8938
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !8938
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !8938
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !8930, metadata !DIExpression()), !dbg !8936
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !8939
  call void @llvm.dbg.value(metadata i32 %11, metadata !8931, metadata !DIExpression()), !dbg !8936
  %12 = and i32 %2, 48, !dbg !8940
  call void @llvm.dbg.value(metadata i32 %12, metadata !8932, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8933, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8934, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !8936
  call void @llvm.dbg.value(metadata i32 %2, metadata !8935, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !8936
  %13 = lshr i32 %2, 6, !dbg !8941
  %14 = and i32 %13, 1, !dbg !8941
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !8942
  %15 = lshr i32 %2, 7, !dbg !8943
  %16 = and i32 %15, 3, !dbg !8943
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !8944
  %17 = lshr i32 %2, 9, !dbg !8945
  %18 = and i32 %17, 3, !dbg !8945
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !8946
  %19 = icmp eq i32 %12, 32, !dbg !8947
  br i1 %19, label %20, label %24, !dbg !8949

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !8950
  br i1 %21, label %22, label %23, !dbg !8953

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8954
  br label %24, !dbg !8956

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !8957
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !8959
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !8960
  ret void, !dbg !8961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #11 !dbg !8962 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8964, metadata !DIExpression()), !dbg !8966
  %2 = shl nuw i32 1, %0, !dbg !8967
  call void @llvm.dbg.value(metadata i32 %2, metadata !8965, metadata !DIExpression()), !dbg !8966
  ret i32 %2, !dbg !8968
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !8969 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8973, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i32 %1, metadata !8974, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.value(metadata i32 %2, metadata !8975, metadata !DIExpression()), !dbg !8976
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !8977
  %5 = load volatile i32, i32* %4, align 4, !dbg !8977
  %6 = xor i32 %1, -1, !dbg !8977
  %7 = and i32 %5, %6, !dbg !8977
  %8 = mul i32 %2, %1, !dbg !8977
  %9 = or i32 %7, %8, !dbg !8977
  store volatile i32 %9, i32* %4, align 4, !dbg !8977
  ret void, !dbg !8978
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8979 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8981, metadata !DIExpression()), !dbg !8984
  call void @llvm.dbg.value(metadata i32 %1, metadata !8982, metadata !DIExpression()), !dbg !8984
  call void @llvm.dbg.value(metadata i32 %2, metadata !8983, metadata !DIExpression()), !dbg !8984
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !8985
  %5 = load volatile i32, i32* %4, align 4, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !8986
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !8988, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !8986
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !8989
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !8991, !range !3987
  %8 = shl nuw nsw i32 %7, 1, !dbg !8985
  %9 = shl i32 3, %8, !dbg !8985
  %10 = xor i32 %9, -1, !dbg !8985
  %11 = and i32 %5, %10, !dbg !8985
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !8992
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !8994
  %12 = shl i32 %2, %8, !dbg !8985
  %13 = or i32 %11, %12, !dbg !8985
  store volatile i32 %13, i32* %4, align 4, !dbg !8985
  ret void, !dbg !8996
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !8997 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !8999, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i32 %1, metadata !9000, metadata !DIExpression()), !dbg !9002
  call void @llvm.dbg.value(metadata i32 %2, metadata !9001, metadata !DIExpression()), !dbg !9002
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9003
  %5 = load volatile i32, i32* %4, align 4, !dbg !9003
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9004
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9006, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9004
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9007
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9009, !range !3987
  %8 = shl nuw nsw i32 %7, 1, !dbg !9003
  %9 = shl i32 3, %8, !dbg !9003
  %10 = xor i32 %9, -1, !dbg !9003
  %11 = and i32 %5, %10, !dbg !9003
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9010
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9012
  %12 = shl i32 %2, %8, !dbg !9003
  %13 = or i32 %11, %12, !dbg !9003
  store volatile i32 %13, i32* %4, align 4, !dbg !9003
  ret void, !dbg !9014
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9015 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9017, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i32 %1, metadata !9018, metadata !DIExpression()), !dbg !9020
  call void @llvm.dbg.value(metadata i32 %2, metadata !9019, metadata !DIExpression()), !dbg !9020
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9021
  %5 = load volatile i32, i32* %4, align 4, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9022
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9024, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9025
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9027, !range !3987
  %8 = shl nuw nsw i32 %7, 2, !dbg !9021
  %9 = shl i32 15, %8, !dbg !9021
  %10 = xor i32 %9, -1, !dbg !9021
  %11 = and i32 %5, %10, !dbg !9021
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9028
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9028
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9030
  %12 = shl i32 %2, %8, !dbg !9021
  %13 = or i32 %11, %12, !dbg !9021
  store volatile i32 %13, i32* %4, align 4, !dbg !9021
  ret void, !dbg !9032
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9033 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9035, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata i32 %1, metadata !9036, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.value(metadata i32 %2, metadata !9037, metadata !DIExpression()), !dbg !9038
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9039
  %5 = load volatile i32, i32* %4, align 4, !dbg !9039
  %6 = lshr i32 %1, 8, !dbg !9039
  call void @llvm.dbg.value(metadata i32 %6, metadata !8788, metadata !DIExpression()) #25, !dbg !9040
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !9042, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %7, metadata !8791, metadata !DIExpression()) #25, !dbg !9040
  call void @llvm.dbg.value(metadata i32 %7, metadata !8796, metadata !DIExpression()) #25, !dbg !9043
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !9045, !range !3987
  %9 = shl nuw nsw i32 %8, 2, !dbg !9039
  %10 = shl i32 15, %9, !dbg !9039
  %11 = xor i32 %10, -1, !dbg !9039
  %12 = and i32 %5, %11, !dbg !9039
  call void @llvm.dbg.value(metadata i32 %6, metadata !8788, metadata !DIExpression()) #25, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %7, metadata !8791, metadata !DIExpression()) #25, !dbg !9046
  call void @llvm.dbg.value(metadata i32 %7, metadata !8796, metadata !DIExpression()) #25, !dbg !9048
  %13 = shl i32 %2, %9, !dbg !9039
  %14 = or i32 %12, %13, !dbg !9039
  store volatile i32 %14, i32* %4, align 4, !dbg !9039
  ret void, !dbg !9050
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9051 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9053, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %1, metadata !9054, metadata !DIExpression()), !dbg !9056
  call void @llvm.dbg.value(metadata i32 %2, metadata !9055, metadata !DIExpression()), !dbg !9056
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9057
  %5 = load volatile i32, i32* %4, align 4, !dbg !9057
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9058
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !9060, !srcloc !8795
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9058
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9061
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !9063, !range !3987
  %8 = shl nuw nsw i32 %7, 1, !dbg !9057
  %9 = shl i32 3, %8, !dbg !9057
  %10 = xor i32 %9, -1, !dbg !9057
  %11 = and i32 %5, %10, !dbg !9057
  call void @llvm.dbg.value(metadata i32 %1, metadata !8788, metadata !DIExpression()) #25, !dbg !9064
  call void @llvm.dbg.value(metadata i32 %6, metadata !8791, metadata !DIExpression()) #25, !dbg !9064
  call void @llvm.dbg.value(metadata i32 %6, metadata !8796, metadata !DIExpression()) #25, !dbg !9066
  %12 = shl i32 %2, %8, !dbg !9057
  %13 = or i32 %11, %12, !dbg !9057
  store volatile i32 %13, i32* %4, align 4, !dbg !9057
  ret void, !dbg !9068
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9069 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9071, metadata !DIExpression()), !dbg !9074
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9075
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9075
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9075
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9072, metadata !DIExpression()), !dbg !9074
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9076
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9077
  %6 = tail call fastcc zeroext i1 @device_is_ready.53() #26, !dbg !9078
  br i1 %6, label %7, label %11, !dbg !9080

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !9081
  call void @llvm.dbg.value(metadata i32 %8, metadata !9073, metadata !DIExpression()), !dbg !9074
  %9 = icmp slt i32 %8, 0, !dbg !9082
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9084
  br label %11, !dbg !9084

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9074
  ret i32 %12, !dbg !9085
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.53() unnamed_addr #1 !dbg !9086 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9090, metadata !DIExpression()), !dbg !9091
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !9092, !srcloc !9094
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.54() #26, !dbg !9095
  ret i1 %1, !dbg !9096
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9097 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9101, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i8 1, metadata !9102, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !9103, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 0, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9105, metadata !DIExpression()), !dbg !9106
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9107
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9107
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9107
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9103, metadata !DIExpression()), !dbg !9106
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9108
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9111
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !9112
  call void @llvm.dbg.value(metadata i32 %7, metadata !9104, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 %7, metadata !9104, metadata !DIExpression()), !dbg !9106
  ret i32 %7, !dbg !9113
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.54() unnamed_addr #1 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9116, metadata !DIExpression()), !dbg !9117
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !9118
  ret i1 %1, !dbg !9119
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9120 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9124, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %1, metadata !9125, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %2, metadata !9126, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %3, metadata !9127, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 0, metadata !9128, metadata !DIExpression()), !dbg !9132
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !9133
  %5 = icmp eq i32 %3, 17, !dbg !9134
  br i1 %5, label %6, label %14, !dbg !9135

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9136
  call void @llvm.dbg.value(metadata i32 %7, metadata !9129, metadata !DIExpression()), !dbg !9137
  %8 = icmp eq i32 %7, 0, !dbg !9138
  %9 = shl nuw i32 1, %1, !dbg !9140
  br i1 %8, label %12, label %10, !dbg !9141

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9142
  br label %14, !dbg !9144

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !9145
  br label %14, !dbg !9148

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9149
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #17 !dbg !9150 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9152, metadata !DIExpression()), !dbg !9156
  call void @llvm.dbg.value(metadata i8* %1, metadata !9153, metadata !DIExpression()), !dbg !9156
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9157
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9157
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9157
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9154, metadata !DIExpression()), !dbg !9156
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9158
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9158
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !9160
  %9 = icmp eq i32 %8, 0, !dbg !9160
  br i1 %9, label %12, label %10, !dbg !9161

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9162
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !9164
  br label %12, !dbg !9165

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9166
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9168
  %15 = icmp eq i32 %14, 0, !dbg !9168
  br i1 %15, label %19, label %16, !dbg !9169

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9170
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !9171
  store i8 %18, i8* %1, align 1, !dbg !9172
  br label %19, !dbg !9173

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9156
  ret i32 %20, !dbg !9174
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9175 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9177, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i8 %1, metadata !9178, metadata !DIExpression()), !dbg !9181
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9182
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9182
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9182
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9179, metadata !DIExpression()), !dbg !9181
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9183

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9184
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9187
  %10 = icmp eq i32 %9, 0, !dbg !9187
  br i1 %10, label %18, label %11, !dbg !9188

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9189, !srcloc !9196
  call void @llvm.dbg.value(metadata i32 undef, metadata !9192, metadata !DIExpression()) #25, !dbg !9197
  call void @llvm.dbg.value(metadata i32 undef, metadata !9193, metadata !DIExpression()) #25, !dbg !9197
  call void @llvm.dbg.value(metadata i32 undef, metadata !9180, metadata !DIExpression()), !dbg !9181
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9198
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !9200
  %15 = icmp eq i32 %14, 0, !dbg !9200
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9189
  br i1 %15, label %17, label %19, !dbg !9201

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9192, metadata !DIExpression()) #25, !dbg !9197
  call void @llvm.dbg.value(metadata i32 %16, metadata !9180, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.value(metadata i32 undef, metadata !9202, metadata !DIExpression()) #25, !dbg !9205
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !9207, !srcloc !9208
  br label %18, !dbg !9209

18:                                               ; preds = %17, %7
  br label %7, !dbg !9184, !llvm.loop !9210

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9189
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9212
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !9213
  call void @llvm.dbg.value(metadata i32 %20, metadata !9202, metadata !DIExpression()) #25, !dbg !9214
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !9216, !srcloc !9208
  ret void, !dbg !9217
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #17 !dbg !9218 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9220, metadata !DIExpression()), !dbg !9223
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9224
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9224
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9224
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9221, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.value(metadata i32 0, metadata !9222, metadata !DIExpression()), !dbg !9223
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9225
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9225
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9227
  %8 = icmp ne i32 %7, 0, !dbg !9227
  %9 = zext i1 %8 to i32, !dbg !9228
  call void @llvm.dbg.value(metadata i32 %9, metadata !9222, metadata !DIExpression()), !dbg !9223
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9229
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9231
  %12 = icmp eq i32 %11, 0, !dbg !9231
  %13 = or i32 %9, 2, !dbg !9232
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9232
  call void @llvm.dbg.value(metadata i32 %14, metadata !9222, metadata !DIExpression()), !dbg !9223
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9233
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !9235
  %17 = icmp eq i32 %16, 0, !dbg !9235
  %18 = or i32 %14, 4, !dbg !9236
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9236
  call void @llvm.dbg.value(metadata i32 %19, metadata !9222, metadata !DIExpression()), !dbg !9223
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9237
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !9239
  %22 = icmp eq i32 %21, 0, !dbg !9239
  %23 = or i32 %19, 8, !dbg !9240
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9240
  call void @llvm.dbg.value(metadata i32 %24, metadata !9222, metadata !DIExpression()), !dbg !9223
  %25 = and i32 %24, 8, !dbg !9241
  %26 = icmp eq i32 %25, 0, !dbg !9241
  br i1 %26, label %29, label %27, !dbg !9243

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9244
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !9246
  br label %29, !dbg !9247

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9248
  %31 = icmp eq i32 %30, 0, !dbg !9248
  br i1 %31, label %34, label %32, !dbg !9250

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9251
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !9253
  br label %34, !dbg !9254

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9255
  %36 = icmp eq i32 %35, 0, !dbg !9255
  br i1 %36, label %39, label %37, !dbg !9257

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9258
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !9260
  br label %39, !dbg !9261

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9262
  %41 = icmp eq i32 %40, 0, !dbg !9262
  br i1 %41, label %44, label %42, !dbg !9264

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9265
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !9267
  br label %44, !dbg !9268

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9269
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !9270
  ret i32 %24, !dbg !9271
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9272 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9274, metadata !DIExpression()), !dbg !9283
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9275, metadata !DIExpression()), !dbg !9283
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9284
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9284
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9284
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9276, metadata !DIExpression()), !dbg !9283
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9285
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9285
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9285
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9277, metadata !DIExpression()), !dbg !9283
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9286
  %10 = load i8, i8* %9, align 4, !dbg !9286
  %11 = zext i8 %10 to i32, !dbg !9287
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !9288
  call void @llvm.dbg.value(metadata i32 %12, metadata !9279, metadata !DIExpression()), !dbg !9283
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9289
  %14 = load i8, i8* %13, align 1, !dbg !9289
  %15 = zext i8 %14 to i32, !dbg !9290
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !9291
  call void @llvm.dbg.value(metadata i32 %16, metadata !9280, metadata !DIExpression()), !dbg !9283
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9292
  %18 = load i8, i8* %17, align 2, !dbg !9292
  %19 = zext i8 %18 to i32, !dbg !9293
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !9294
  call void @llvm.dbg.value(metadata i32 %20, metadata !9281, metadata !DIExpression()), !dbg !9283
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9295
  %22 = load i8, i8* %21, align 1, !dbg !9295
  %23 = zext i8 %22 to i32, !dbg !9296
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !9297
  call void @llvm.dbg.value(metadata i32 %24, metadata !9282, metadata !DIExpression()), !dbg !9283
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9298

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9300
  br i1 %26, label %69, label %27, !dbg !9302

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9303

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9304
  br i1 %29, label %65, label %30, !dbg !9304

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9306
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9283
  br i1 %31, label %38, label %34, !dbg !9308

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9309
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9309

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9312
  br i1 %37, label %38, label %69, !dbg !9313

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9314
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !9315
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !9316
  %41 = icmp eq i32 %12, %40, !dbg !9318
  br i1 %41, label %43, label %42, !dbg !9319

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !9320
  br label %43, !dbg !9322

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !9323
  %45 = icmp eq i32 %16, %44, !dbg !9325
  br i1 %45, label %47, label %46, !dbg !9326

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !9327
  br label %47, !dbg !9329

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !9330
  %49 = icmp eq i32 %20, %48, !dbg !9332
  br i1 %49, label %51, label %50, !dbg !9333

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !9334
  br label %51, !dbg !9336

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !9337
  %53 = icmp eq i32 %24, %52, !dbg !9339
  br i1 %53, label %55, label %54, !dbg !9340

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !9341
  br label %55, !dbg !9343

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9344
  %57 = load i32, i32* %56, align 4, !dbg !9344
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !9346
  %59 = load i32, i32* %58, align 4, !dbg !9346
  %60 = icmp eq i32 %57, %59, !dbg !9347
  br i1 %60, label %63, label %61, !dbg !9348

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !9349
  %62 = load i32, i32* %56, align 4, !dbg !9351
  store i32 %62, i32* %58, align 4, !dbg !9352
  br label %63, !dbg !9353

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !9354
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !9355
  br label %69, !dbg !9356

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9304
  %67 = and i8 %66, 1, !dbg !9304
  %68 = icmp eq i8 %67, 0, !dbg !9304
  br i1 %68, label %30, label %69, !dbg !9304

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9283
  ret i32 %70, !dbg !9357
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #21 !dbg !9358 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9360, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9361, metadata !DIExpression()), !dbg !9363
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9364
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !9364
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !9364
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !9362, metadata !DIExpression()), !dbg !9363
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !9365
  %7 = load i32, i32* %6, align 4, !dbg !9365
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !9366
  store i32 %7, i32* %8, align 4, !dbg !9367
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9368, !range !9369
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !9370
  %11 = trunc i32 %10 to i8, !dbg !9370
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9371
  store i8 %11, i8* %12, align 4, !dbg !9372
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !9373, !range !9374
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !9375
  %15 = trunc i32 %14 to i8, !dbg !9375
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9376
  store i8 %15, i8* %16, align 1, !dbg !9377
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !9378
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !9379, !range !9369
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !9380
  %20 = trunc i32 %19 to i8, !dbg !9380
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9381
  store i8 %20, i8* %21, align 2, !dbg !9382
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !9383, !range !9384
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !9385
  %24 = trunc i32 %23 to i8, !dbg !9385
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9386
  store i8 %24, i8* %25, align 1, !dbg !9387
  ret i32 0, !dbg !9388
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_fifo_fill(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) #1 !dbg !9389 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9391, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i8* %1, metadata !9392, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i32 %2, metadata !9393, metadata !DIExpression()), !dbg !9397
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9398
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9398
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9398
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9394, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i8 0, metadata !9395, metadata !DIExpression()), !dbg !9397
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9399
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9399
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !9401
  %10 = icmp eq i32 %9, 0, !dbg !9401
  br i1 %10, label %30, label %11, !dbg !9402

11:                                               ; preds = %3
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !9403, !srcloc !9196
  %13 = extractvalue { i32, i32 } %12, 0, !dbg !9403
  call void @llvm.dbg.value(metadata i32 %13, metadata !9192, metadata !DIExpression()) #25, !dbg !9405
  call void @llvm.dbg.value(metadata i32 undef, metadata !9193, metadata !DIExpression()) #25, !dbg !9405
  call void @llvm.dbg.value(metadata i32 %13, metadata !9396, metadata !DIExpression()), !dbg !9397
  call void @llvm.dbg.value(metadata i8 0, metadata !9395, metadata !DIExpression()), !dbg !9397
  %14 = icmp sgt i32 %2, 0, !dbg !9406
  br i1 %14, label %15, label %28, !dbg !9407

15:                                               ; preds = %11, %21
  %16 = phi i32 [ %26, %21 ], [ 0, %11 ]
  %17 = phi i8 [ %23, %21 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8 %17, metadata !9395, metadata !DIExpression()), !dbg !9397
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9408
  %19 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %18) #26, !dbg !9409
  %20 = icmp eq i32 %19, 0, !dbg !9407
  br i1 %20, label %28, label %21, !dbg !9410

21:                                               ; preds = %15
  %22 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9411
  %23 = add i8 %17, 1, !dbg !9413
  call void @llvm.dbg.value(metadata i8 %23, metadata !9395, metadata !DIExpression()), !dbg !9397
  %24 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !9414
  %25 = load i8, i8* %24, align 1, !dbg !9414
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %22, i8 noundef zeroext %25) #26, !dbg !9415
  %26 = zext i8 %23 to i32, !dbg !9416
  %27 = icmp slt i32 %26, %2, !dbg !9406
  br i1 %27, label %15, label %28, !dbg !9407, !llvm.loop !9417

28:                                               ; preds = %15, %21, %11
  %29 = phi i32 [ 0, %11 ], [ %26, %21 ], [ %16, %15 ], !dbg !9416
  call void @llvm.dbg.value(metadata i32 %13, metadata !9202, metadata !DIExpression()) #25, !dbg !9419
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !9421, !srcloc !9208
  br label %30, !dbg !9422

30:                                               ; preds = %3, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %3 ], !dbg !9397
  ret i32 %31, !dbg !9423
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_fifo_read(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) #17 !dbg !9424 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9426, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8* %1, metadata !9427, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i32 %2, metadata !9428, metadata !DIExpression()), !dbg !9431
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9432
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !9432
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !9432
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !9429, metadata !DIExpression()), !dbg !9431
  call void @llvm.dbg.value(metadata i8 0, metadata !9430, metadata !DIExpression()), !dbg !9431
  %7 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !9433
  call void @llvm.dbg.value(metadata i8 0, metadata !9430, metadata !DIExpression()), !dbg !9431
  %8 = icmp sgt i32 %2, 0, !dbg !9434
  br i1 %8, label %9, label %28, !dbg !9435

9:                                                ; preds = %3, %25
  %10 = phi i32 [ %26, %25 ], [ 0, %3 ]
  %11 = phi i8 [ %18, %25 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i8 %11, metadata !9430, metadata !DIExpression()), !dbg !9431
  %12 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9433
  %13 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9436
  %14 = icmp eq i32 %13, 0, !dbg !9435
  br i1 %14, label %28, label %15, !dbg !9437

15:                                               ; preds = %9
  %16 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9438
  %17 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %16) #26, !dbg !9440
  %18 = add i8 %11, 1, !dbg !9441
  call void @llvm.dbg.value(metadata i8 %18, metadata !9430, metadata !DIExpression()), !dbg !9431
  %19 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !9442
  store i8 %17, i8* %19, align 1, !dbg !9443
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9444
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %20) #26, !dbg !9446
  %22 = icmp eq i32 %21, 0, !dbg !9446
  br i1 %22, label %25, label %23, !dbg !9447

23:                                               ; preds = %15
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %7, align 4, !dbg !9448
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %24) #26, !dbg !9450
  br label %25, !dbg !9451

25:                                               ; preds = %23, %15
  call void @llvm.dbg.value(metadata i8 %18, metadata !9430, metadata !DIExpression()), !dbg !9431
  %26 = zext i8 %18 to i32, !dbg !9452
  %27 = icmp slt i32 %26, %2, !dbg !9434
  br i1 %27, label %9, label %28, !dbg !9435, !llvm.loop !9453

28:                                               ; preds = %9, %25, %3
  %29 = phi i32 [ 0, %3 ], [ %26, %25 ], [ %10, %9 ], !dbg !9452
  ret i32 %29, !dbg !9455
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9456 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9458, metadata !DIExpression()), !dbg !9460
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9461
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9461
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9461
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9459, metadata !DIExpression()), !dbg !9460
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9462
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9462
  tail call fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9463
  ret void, !dbg !9464
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_tx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9465 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9467, metadata !DIExpression()), !dbg !9469
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9470
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9470
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9470
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9468, metadata !DIExpression()), !dbg !9469
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9471
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9471
  tail call fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9472
  ret void, !dbg !9473
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9474 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9476, metadata !DIExpression()), !dbg !9478
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9479
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9479
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9479
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9477, metadata !DIExpression()), !dbg !9478
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9480
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9480
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9481
  %8 = icmp eq i32 %7, 0, !dbg !9481
  br i1 %8, label %14, label %9, !dbg !9482

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9483
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %10) #26, !dbg !9484
  %12 = icmp ne i32 %11, 0, !dbg !9482
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i32 [ 0, %1 ], [ %13, %9 ]
  ret i32 %15, !dbg !9485
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9486 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9488, metadata !DIExpression()), !dbg !9490
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9491
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9491
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9491
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9489, metadata !DIExpression()), !dbg !9490
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9492
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9492
  tail call fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9493
  ret void, !dbg !9494
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_rx_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9495 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9497, metadata !DIExpression()), !dbg !9499
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9500
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9500
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9500
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9498, metadata !DIExpression()), !dbg !9499
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9501
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9501
  tail call fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9502
  ret void, !dbg !9503
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_tx_complete(%struct.device* nocapture noundef readonly %0) #16 !dbg !9504 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9506, metadata !DIExpression()), !dbg !9508
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9509
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9509
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9509
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9507, metadata !DIExpression()), !dbg !9508
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9510
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9510
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %6) #26, !dbg !9511
  ret i32 %7, !dbg !9512
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_rx_ready(%struct.device* nocapture noundef readonly %0) #16 !dbg !9513 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9515, metadata !DIExpression()), !dbg !9517
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9518
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9518
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9518
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9516, metadata !DIExpression()), !dbg !9517
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9519
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9519
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9520
  ret i32 %7, !dbg !9521
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_enable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9522 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9524, metadata !DIExpression()), !dbg !9526
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9527
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9527
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9527
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9525, metadata !DIExpression()), !dbg !9526
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9528
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9528
  tail call fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9529
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9530
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9530
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073812480, label %9
  ], !dbg !9530

9:                                                ; preds = %1, %1, %1, %1
  tail call fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9532
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9534
  br label %11, !dbg !9535

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9534
  tail call fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9536
  ret void, !dbg !9537
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_err_disable(%struct.device* nocapture noundef readonly %0) #1 !dbg !9538 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9540, metadata !DIExpression()), !dbg !9542
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9543
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9543
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9543
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9541, metadata !DIExpression()), !dbg !9542
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9544
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9544
  tail call fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %6) #26, !dbg !9545
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9546
  %8 = ptrtoint %struct.USART_TypeDef* %7 to i32, !dbg !9546
  switch i32 %8, label %11 [
    i32 1073811456, label %9
    i32 1073759232, label %9
    i32 1073760256, label %9
    i32 1073812480, label %9
  ], !dbg !9546

9:                                                ; preds = %1, %1, %1, %1
  tail call fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %7) #26, !dbg !9548
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9550
  br label %11, !dbg !9551

11:                                               ; preds = %1, %9
  %12 = phi %struct.USART_TypeDef* [ %7, %1 ], [ %10, %9 ], !dbg !9550
  tail call fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %12) #26, !dbg !9552
  ret void, !dbg !9553
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @uart_stm32_irq_is_pending(%struct.device* nocapture noundef readonly %0) #16 !dbg !9554 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9556, metadata !DIExpression()), !dbg !9558
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9559
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9559
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9559
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9557, metadata !DIExpression()), !dbg !9558
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9560
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9560
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %6) #26, !dbg !9561
  %8 = icmp eq i32 %7, 0, !dbg !9561
  br i1 %8, label %13, label %9, !dbg !9562

9:                                                ; preds = %1
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9563
  %11 = tail call fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %10) #26, !dbg !9564
  %12 = icmp eq i32 %11, 0, !dbg !9564
  br i1 %12, label %13, label %22, !dbg !9565

13:                                               ; preds = %9, %1
  %14 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9566
  %15 = tail call fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %14) #26, !dbg !9567
  %16 = icmp eq i32 %15, 0, !dbg !9567
  br i1 %16, label %22, label %17, !dbg !9568

17:                                               ; preds = %13
  %18 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9569
  %19 = tail call fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %18) #26, !dbg !9570
  %20 = icmp ne i32 %19, 0, !dbg !9568
  %21 = zext i1 %20 to i32
  br label %22

22:                                               ; preds = %13, %17, %9
  %23 = phi i32 [ 1, %9 ], [ 0, %13 ], [ %21, %17 ]
  ret i32 %23, !dbg !9571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @uart_stm32_irq_update(%struct.device* nocapture noundef readnone %0) #11 !dbg !9572 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9574, metadata !DIExpression()), !dbg !9575
  ret i32 1, !dbg !9576
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal void @uart_stm32_irq_callback_set(%struct.device* nocapture noundef readonly %0, void (%struct.device*, i8*)* noundef %1, i8* noundef %2) #7 !dbg !9577 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9579, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata void (%struct.device*, i8*)* %1, metadata !9580, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i8* %2, metadata !9581, metadata !DIExpression()), !dbg !9583
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9584
  %5 = bitcast i8** %4 to %struct.uart_stm32_data**, !dbg !9584
  %6 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %5, align 4, !dbg !9584
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %6, metadata !9582, metadata !DIExpression()), !dbg !9583
  %7 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 2, !dbg !9585
  store void (%struct.device*, i8*)* %1, void (%struct.device*, i8*)** %7, align 4, !dbg !9586
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %6, i32 0, i32 3, !dbg !9587
  store i8* %2, i8** %8, align 4, !dbg !9588
  ret void, !dbg !9589
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9590 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9595, metadata !DIExpression()), !dbg !9596
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9597
  %3 = load volatile i32, i32* %2, align 4, !dbg !9597
  %4 = lshr i32 %3, 5, !dbg !9598
  %5 = and i32 %4, 1, !dbg !9598
  ret i32 %5, !dbg !9599
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9600 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9602, metadata !DIExpression()), !dbg !9603
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9604
  %3 = load volatile i32, i32* %2, align 4, !dbg !9604
  %4 = lshr i32 %3, 5, !dbg !9605
  %5 = and i32 %4, 1, !dbg !9605
  ret i32 %5, !dbg !9606
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9607 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9609, metadata !DIExpression()), !dbg !9610
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9611
  %3 = load volatile i32, i32* %2, align 4, !dbg !9611
  %4 = lshr i32 %3, 6, !dbg !9612
  %5 = and i32 %4, 1, !dbg !9612
  ret i32 %5, !dbg !9613
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsEnabledIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9614 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9616, metadata !DIExpression()), !dbg !9617
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9618
  %3 = load volatile i32, i32* %2, align 4, !dbg !9618
  %4 = lshr i32 %3, 6, !dbg !9619
  %5 = and i32 %4, 1, !dbg !9619
  ret i32 %5, !dbg !9620
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9621 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9625, metadata !DIExpression()), !dbg !9628
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9629

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9636
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9639, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9636
  %5 = and i32 %4, -2, !dbg !9641
  call void @llvm.dbg.value(metadata i32 %5, metadata !9626, metadata !DIExpression()), !dbg !9642
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9650
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9650
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9652, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9650
  %7 = icmp eq i32 %6, 0, !dbg !9629
  br i1 %7, label %8, label %3, !dbg !9641, !llvm.loop !9654

8:                                                ; preds = %3
  ret void, !dbg !9655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_DisableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9656 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9658, metadata !DIExpression()), !dbg !9659
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9660
  %3 = load volatile i32, i32* %2, align 4, !dbg !9660
  %4 = and i32 %3, -65, !dbg !9660
  store volatile i32 %4, i32* %2, align 4, !dbg !9660
  ret void, !dbg !9661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9662 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9664, metadata !DIExpression()), !dbg !9667
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9668

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9669
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9672, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9669
  %5 = and i32 %4, -257, !dbg !9673
  call void @llvm.dbg.value(metadata i32 %5, metadata !9665, metadata !DIExpression()), !dbg !9674
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9675
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9675
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9677, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9675
  %7 = icmp eq i32 %6, 0, !dbg !9668
  br i1 %7, label %8, label %3, !dbg !9673, !llvm.loop !9678

8:                                                ; preds = %3
  ret void, !dbg !9679
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_ERROR(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9680 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9682, metadata !DIExpression()), !dbg !9685
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5
  br label %3, !dbg !9686

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9687
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9690, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9687
  %5 = or i32 %4, 1, !dbg !9691
  call void @llvm.dbg.value(metadata i32 %5, metadata !9683, metadata !DIExpression()), !dbg !9692
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9693
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9693
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9695, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9693
  %7 = icmp eq i32 %6, 0, !dbg !9686
  br i1 %7, label %8, label %3, !dbg !9691, !llvm.loop !9696

8:                                                ; preds = %3
  ret void, !dbg !9697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableIT_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9698 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9700, metadata !DIExpression()), !dbg !9701
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9702
  %3 = load volatile i32, i32* %2, align 4, !dbg !9702
  %4 = or i32 %3, 64, !dbg !9702
  store volatile i32 %4, i32* %2, align 4, !dbg !9702
  ret void, !dbg !9703
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9704 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9706, metadata !DIExpression()), !dbg !9709
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9710

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9711
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9714, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9711
  %5 = or i32 %4, 256, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %5, metadata !9707, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9717
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9717
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9719, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9717
  %7 = icmp eq i32 %6, 0, !dbg !9710
  br i1 %7, label %8, label %3, !dbg !9715, !llvm.loop !9720

8:                                                ; preds = %3
  ret void, !dbg !9721
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9722 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9724, metadata !DIExpression()), !dbg !9727
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9728

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9729
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9732, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9729
  %5 = and i32 %4, -33, !dbg !9733
  call void @llvm.dbg.value(metadata i32 %5, metadata !9725, metadata !DIExpression()), !dbg !9734
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9735
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9735
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9737, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9735
  %7 = icmp eq i32 %6, 0, !dbg !9728
  br i1 %7, label %8, label %3, !dbg !9733, !llvm.loop !9738

8:                                                ; preds = %3
  ret void, !dbg !9739
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9740 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9742, metadata !DIExpression()), !dbg !9745
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9746

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9747
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9750, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9747
  %5 = or i32 %4, 32, !dbg !9751
  call void @llvm.dbg.value(metadata i32 %5, metadata !9743, metadata !DIExpression()), !dbg !9752
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9753
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9753
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9755, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9753
  %7 = icmp eq i32 %6, 0, !dbg !9746
  br i1 %7, label %8, label %3, !dbg !9751, !llvm.loop !9756

8:                                                ; preds = %3
  ret void, !dbg !9757
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9758 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9760, metadata !DIExpression()), !dbg !9761
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9762
  %3 = load volatile i32, i32* %2, align 4, !dbg !9762
  %4 = lshr i32 %3, 7, !dbg !9763
  %5 = and i32 %4, 1, !dbg !9763
  ret i32 %5, !dbg !9764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_DisableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9765 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9767, metadata !DIExpression()), !dbg !9770
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9771

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9772
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9775, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9772
  %5 = and i32 %4, -65, !dbg !9776
  call void @llvm.dbg.value(metadata i32 %5, metadata !9768, metadata !DIExpression()), !dbg !9777
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9778
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9778
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9780, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9778
  %7 = icmp eq i32 %6, 0, !dbg !9771
  br i1 %7, label %8, label %3, !dbg !9776, !llvm.loop !9781

8:                                                ; preds = %3
  ret void, !dbg !9782
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_EnableIT_TC(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !9783 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9785, metadata !DIExpression()), !dbg !9788
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !9789

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !9790
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !9793, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !9790
  %5 = or i32 %4, 64, !dbg !9794
  call void @llvm.dbg.value(metadata i32 %5, metadata !9786, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !9796
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !9796
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !9798, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !9796
  %7 = icmp eq i32 %6, 0, !dbg !9789
  br i1 %7, label %8, label %3, !dbg !9794, !llvm.loop !9799

8:                                                ; preds = %3
  ret void, !dbg !9800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9801 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9805, metadata !DIExpression()), !dbg !9806
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9807
  %3 = load volatile i32, i32* %2, align 4, !dbg !9807
  %4 = trunc i32 %3 to i8, !dbg !9808
  ret i8 %4, !dbg !9809
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9810 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9812, metadata !DIExpression()), !dbg !9813
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9814
  %3 = load volatile i32, i32* %2, align 4, !dbg !9814
  %4 = lshr i32 %3, 3, !dbg !9815
  %5 = and i32 %4, 1, !dbg !9815
  ret i32 %5, !dbg !9816
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !9817 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9819, metadata !DIExpression()), !dbg !9821
  %3 = bitcast i32* %2 to i8*, !dbg !9822
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !9822
  call void @llvm.dbg.declare(metadata i32* %2, metadata !9820, metadata !DIExpression()), !dbg !9823
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !9824
  %5 = load volatile i32, i32* %4, align 4, !dbg !9824
  store volatile i32 %5, i32* %2, align 4, !dbg !9825
  %6 = load volatile i32, i32* %2, align 4, !dbg !9826
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9827
  %8 = load volatile i32, i32* %7, align 4, !dbg !9827
  store volatile i32 %8, i32* %2, align 4, !dbg !9828
  %9 = load volatile i32, i32* %2, align 4, !dbg !9829
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !9830
  ret void, !dbg !9830
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !9831 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9835, metadata !DIExpression()), !dbg !9837
  call void @llvm.dbg.value(metadata i8 %1, metadata !9836, metadata !DIExpression()), !dbg !9837
  %3 = zext i8 %1 to i32, !dbg !9838
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !9839
  store volatile i32 %3, i32* %4, align 4, !dbg !9840
  ret void, !dbg !9841
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9842 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9846, metadata !DIExpression()), !dbg !9848
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9849
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9849
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9849
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9847, metadata !DIExpression()), !dbg !9848
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9850
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9850
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !9851
  ret i32 %7, !dbg !9852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #11 !dbg !9853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9857, metadata !DIExpression()), !dbg !9858
  %2 = icmp eq i32 %0, 1024, !dbg !9859
  %3 = select i1 %2, i32 2, i32 0, !dbg !9859
  %4 = icmp eq i32 %0, 1536, !dbg !9859
  %5 = select i1 %4, i32 1, i32 %3, !dbg !9859
  ret i32 %5, !dbg !9860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9863, metadata !DIExpression()), !dbg !9865
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9866
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9866
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9866
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9864, metadata !DIExpression()), !dbg !9865
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9867
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9867
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !9868
  ret i32 %7, !dbg !9869
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #9 !dbg !9870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9874, metadata !DIExpression()), !dbg !9875
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !9876
  %3 = icmp ult i32 %2, 4, !dbg !9876
  br i1 %3, label %4, label %7, !dbg !9876

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !9876
  %6 = load i32, i32* %5, align 4, !dbg !9876
  br label %7, !dbg !9876

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !9877
  ret i32 %8, !dbg !9879
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9880 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9882, metadata !DIExpression()), !dbg !9884
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9885
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9885
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9885
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9883, metadata !DIExpression()), !dbg !9884
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9886
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9886
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !9887
  ret i32 %7, !dbg !9888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9893, metadata !DIExpression()), !dbg !9895
  call void @llvm.dbg.value(metadata i32 %1, metadata !9894, metadata !DIExpression()), !dbg !9895
  %3 = icmp eq i32 %0, 4096, !dbg !9896
  %4 = icmp eq i32 %1, 0, !dbg !9896
  %5 = select i1 %4, i32 4, i32 3, !dbg !9896
  %6 = select i1 %4, i32 3, i32 2, !dbg !9896
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !9896
  ret i32 %7, !dbg !9897
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #16 !dbg !9898 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9900, metadata !DIExpression()), !dbg !9902
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9903
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9903
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9903
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9901, metadata !DIExpression()), !dbg !9902
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9904
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9904
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !9905
  ret i32 %7, !dbg !9906
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9907 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9911, metadata !DIExpression()), !dbg !9912
  %2 = icmp eq i32 %0, 768, !dbg !9913
  %3 = zext i1 %2 to i32, !dbg !9912
  ret i32 %3, !dbg !9915
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9916 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9918, metadata !DIExpression()), !dbg !9919
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !9920
  %3 = load volatile i32, i32* %2, align 4, !dbg !9920
  %4 = and i32 %3, 768, !dbg !9920
  ret i32 %4, !dbg !9921
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9922 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9924, metadata !DIExpression()), !dbg !9925
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9926
  %3 = load volatile i32, i32* %2, align 4, !dbg !9926
  %4 = and i32 %3, 4096, !dbg !9926
  ret i32 %4, !dbg !9927
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9928 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9930, metadata !DIExpression()), !dbg !9931
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !9932
  %3 = load volatile i32, i32* %2, align 4, !dbg !9932
  %4 = and i32 %3, 12288, !dbg !9932
  ret i32 %4, !dbg !9933
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !9934 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9936, metadata !DIExpression()), !dbg !9937
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9938
  %3 = load volatile i32, i32* %2, align 4, !dbg !9938
  %4 = and i32 %3, 1536, !dbg !9938
  ret i32 %4, !dbg !9939
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #11 !dbg !9940 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9944, metadata !DIExpression()), !dbg !9945
  %2 = icmp eq i32 %0, 2, !dbg !9946
  %3 = select i1 %2, i32 1024, i32 0, !dbg !9946
  %4 = icmp eq i32 %0, 1, !dbg !9946
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !9946
  ret i32 %5, !dbg !9947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !9948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9952, metadata !DIExpression()), !dbg !9953
  %2 = icmp ult i32 %0, 3, !dbg !9954
  br i1 %2, label %3, label %6, !dbg !9954

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !9954
  %5 = load i32, i32* %4, align 4, !dbg !9954
  br label %6, !dbg !9954

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !9955
  ret i32 %7, !dbg !9957
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !9958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9962, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %1, metadata !9963, metadata !DIExpression()), !dbg !9964
  %3 = icmp eq i32 %0, 4, !dbg !9965
  %4 = icmp eq i32 %1, 0, !dbg !9965
  %5 = select i1 %4, i32 0, i32 4096, !dbg !9965
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !9965
  ret i32 %6, !dbg !9966
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #11 !dbg !9967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9971, metadata !DIExpression()), !dbg !9972
  %2 = icmp eq i32 %0, 1, !dbg !9973
  %3 = select i1 %2, i32 768, i32 0, !dbg !9972
  ret i32 %3, !dbg !9975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !9976 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !9978, metadata !DIExpression()), !dbg !9979
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !9980
  %3 = load volatile i32, i32* %2, align 4, !dbg !9980
  %4 = and i32 %3, -8193, !dbg !9980
  store volatile i32 %4, i32* %2, align 4, !dbg !9980
  ret void, !dbg !9981
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9982 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9986, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.value(metadata i32 %1, metadata !9987, metadata !DIExpression()), !dbg !9989
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9990
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9990
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9990
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9988, metadata !DIExpression()), !dbg !9989
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9991
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9991
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !9992
  ret void, !dbg !9993
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !9994 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9996, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.value(metadata i32 %1, metadata !9997, metadata !DIExpression()), !dbg !9999
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10000
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10000
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10000
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9998, metadata !DIExpression()), !dbg !9999
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10001
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10001
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10002
  ret void, !dbg !10003
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10004 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10006, metadata !DIExpression()), !dbg !10009
  call void @llvm.dbg.value(metadata i32 %1, metadata !10007, metadata !DIExpression()), !dbg !10009
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10010
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10010
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10010
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10008, metadata !DIExpression()), !dbg !10009
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10011
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10011
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10012
  ret void, !dbg !10013
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !10014 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10016, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 %1, metadata !10017, metadata !DIExpression()), !dbg !10019
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10020
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10020
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10020
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10018, metadata !DIExpression()), !dbg !10019
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10021
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10021
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !10022
  ret void, !dbg !10023
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10024 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10026, metadata !DIExpression()), !dbg !10031
  call void @llvm.dbg.value(metadata i32 %1, metadata !10027, metadata !DIExpression()), !dbg !10031
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10032
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10032
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10032
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10028, metadata !DIExpression()), !dbg !10031
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10033
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10033
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10033
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10029, metadata !DIExpression()), !dbg !10031
  %10 = bitcast i32* %3 to i8*, !dbg !10034
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10034
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10035
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10035
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10039
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10039
  %15 = load i8*, i8** %14, align 4, !dbg !10039
  call void @llvm.dbg.value(metadata i32* %3, metadata !10030, metadata !DIExpression(DW_OP_deref)), !dbg !10031
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !10040
  %17 = icmp slt i32 %16, 0, !dbg !10041
  br i1 %17, label %23, label %18, !dbg !10042

18:                                               ; preds = %2
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10043
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10043
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %20) #26, !dbg !10044
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %19, align 4, !dbg !10045
  %22 = load i32, i32* %3, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata i32 %22, metadata !10030, metadata !DIExpression()), !dbg !10031
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %21, i32 noundef %22, i32 noundef %1) #26, !dbg !10047
  br label %23, !dbg !10048

23:                                               ; preds = %2, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !10048
  ret void, !dbg !10048
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10049 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10051, metadata !DIExpression()), !dbg !10052
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10053
  %3 = load volatile i32, i32* %2, align 4, !dbg !10053
  %4 = or i32 %3, 8192, !dbg !10053
  store volatile i32 %4, i32* %2, align 4, !dbg !10053
  ret void, !dbg !10054
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10055 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10057, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i8* %1, metadata !10058, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.value(metadata i32* %2, metadata !10059, metadata !DIExpression()), !dbg !10061
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10062
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10062
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10062
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10060, metadata !DIExpression()), !dbg !10061
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10063
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10063
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10065
  br i1 %9, label %12, label %10, !dbg !10066

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !10067
  br label %12, !dbg !10068

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10061
  ret i32 %13, !dbg !10069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10070 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10074, metadata !DIExpression()), !dbg !10076
  call void @llvm.dbg.value(metadata i32 0, metadata !10075, metadata !DIExpression()), !dbg !10076
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10077
  %3 = load volatile i32, i32* %2, align 4, !dbg !10077
  %4 = and i32 %3, -32769, !dbg !10077
  store volatile i32 %4, i32* %2, align 4, !dbg !10077
  ret void, !dbg !10078
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10079 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10083, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 %1, metadata !10084, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 0, metadata !10085, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.value(metadata i32 %2, metadata !10086, metadata !DIExpression()), !dbg !10087
  %4 = zext i32 %1 to i64, !dbg !10088
  %5 = mul nuw nsw i64 %4, 25, !dbg !10088
  %6 = zext i32 %2 to i64, !dbg !10088
  %7 = shl nuw nsw i64 %6, 2, !dbg !10088
  %8 = udiv i64 %5, %7, !dbg !10088
  %9 = trunc i64 %8 to i32, !dbg !10088
  %10 = udiv i32 %9, 100, !dbg !10088
  %11 = shl nuw nsw i32 %10, 4, !dbg !10088
  %12 = mul i32 %10, -100, !dbg !10088
  %13 = add i32 %12, %9, !dbg !10088
  %14 = shl i32 %13, 4, !dbg !10088
  %15 = add i32 %14, 50, !dbg !10088
  %16 = udiv i32 %15, 100, !dbg !10088
  %17 = and i32 %16, 240, !dbg !10088
  %18 = add nuw nsw i32 %17, %11, !dbg !10088
  %19 = and i32 %16, 15, !dbg !10088
  %20 = and i32 %18, 65520, !dbg !10091
  %21 = or i32 %20, %19, !dbg !10091
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10092
  store volatile i32 %21, i32* %22, align 4, !dbg !10093
  ret void, !dbg !10094
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10095 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10097, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32 %1, metadata !10098, metadata !DIExpression()), !dbg !10099
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10100
  %4 = load volatile i32, i32* %3, align 4, !dbg !10100
  %5 = and i32 %4, -769, !dbg !10100
  %6 = or i32 %5, %1, !dbg !10100
  store volatile i32 %6, i32* %3, align 4, !dbg !10100
  ret void, !dbg !10101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10102 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10104, metadata !DIExpression()), !dbg !10106
  call void @llvm.dbg.value(metadata i32 %1, metadata !10105, metadata !DIExpression()), !dbg !10106
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10107
  %4 = load volatile i32, i32* %3, align 4, !dbg !10107
  %5 = and i32 %4, -4097, !dbg !10107
  %6 = or i32 %5, %1, !dbg !10107
  store volatile i32 %6, i32* %3, align 4, !dbg !10107
  ret void, !dbg !10108
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10111, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.value(metadata i32 %1, metadata !10112, metadata !DIExpression()), !dbg !10113
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10114
  %4 = load volatile i32, i32* %3, align 4, !dbg !10114
  %5 = and i32 %4, -12289, !dbg !10114
  %6 = or i32 %5, %1, !dbg !10114
  store volatile i32 %6, i32* %3, align 4, !dbg !10114
  ret void, !dbg !10115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !10116 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10118, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.value(metadata i32 %1, metadata !10119, metadata !DIExpression()), !dbg !10120
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10121
  %4 = load volatile i32, i32* %3, align 4, !dbg !10121
  %5 = and i32 %4, -1537, !dbg !10121
  %6 = or i32 %5, %1, !dbg !10121
  store volatile i32 %6, i32* %3, align 4, !dbg !10121
  ret void, !dbg !10122
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10123 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10125, metadata !DIExpression()), !dbg !10126
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10127
  %3 = load volatile i32, i32* %2, align 4, !dbg !10127
  %4 = and i32 %3, 1, !dbg !10127
  ret i32 %4, !dbg !10128
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10129 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10131, metadata !DIExpression()), !dbg !10132
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10133
  %3 = load volatile i32, i32* %2, align 4, !dbg !10133
  %4 = lshr i32 %3, 1, !dbg !10134
  %5 = and i32 %4, 1, !dbg !10134
  ret i32 %5, !dbg !10135
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #16 !dbg !10136 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10138, metadata !DIExpression()), !dbg !10139
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10140
  %3 = load volatile i32, i32* %2, align 4, !dbg !10140
  %4 = lshr i32 %3, 8, !dbg !10141
  %5 = and i32 %4, 1, !dbg !10141
  ret i32 %5, !dbg !10142
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10145, metadata !DIExpression()), !dbg !10146
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10147
  store volatile i32 -257, i32* %2, align 4, !dbg !10147
  ret void, !dbg !10148
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10149 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10151, metadata !DIExpression()), !dbg !10153
  %3 = bitcast i32* %2 to i8*, !dbg !10154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10154
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10152, metadata !DIExpression()), !dbg !10155
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10156
  %5 = load volatile i32, i32* %4, align 4, !dbg !10156
  store volatile i32 %5, i32* %2, align 4, !dbg !10157
  %6 = load volatile i32, i32* %2, align 4, !dbg !10158
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10159
  %8 = load volatile i32, i32* %7, align 4, !dbg !10159
  store volatile i32 %8, i32* %2, align 4, !dbg !10160
  %9 = load volatile i32, i32* %2, align 4, !dbg !10161
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10162
  ret void, !dbg !10162
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10163 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10165, metadata !DIExpression()), !dbg !10167
  %3 = bitcast i32* %2 to i8*, !dbg !10168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10168
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10166, metadata !DIExpression()), !dbg !10169
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10170
  %5 = load volatile i32, i32* %4, align 4, !dbg !10170
  store volatile i32 %5, i32* %2, align 4, !dbg !10171
  %6 = load volatile i32, i32* %2, align 4, !dbg !10172
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10173
  %8 = load volatile i32, i32* %7, align 4, !dbg !10173
  store volatile i32 %8, i32* %2, align 4, !dbg !10174
  %9 = load volatile i32, i32* %2, align 4, !dbg !10175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10176
  ret void, !dbg !10176
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !10177 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10179, metadata !DIExpression()), !dbg !10181
  %3 = bitcast i32* %2 to i8*, !dbg !10182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10182
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10180, metadata !DIExpression()), !dbg !10183
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10184
  %5 = load volatile i32, i32* %4, align 4, !dbg !10184
  store volatile i32 %5, i32* %2, align 4, !dbg !10185
  %6 = load volatile i32, i32* %2, align 4, !dbg !10186
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10187
  %8 = load volatile i32, i32* %7, align 4, !dbg !10187
  store volatile i32 %8, i32* %2, align 4, !dbg !10188
  %9 = load volatile i32, i32* %2, align 4, !dbg !10189
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10190
  ret void, !dbg !10190
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_irq_config_func_0(%struct.device* nocapture noundef readnone %0) #1 !dbg !1551 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !1553, metadata !DIExpression()), !dbg !10191
  tail call void @z_arm_irq_priority_set(i32 noundef 37, i32 noundef 0, i32 noundef 0) #27, !dbg !10192
  tail call void @arch_irq_enable(i32 noundef 37) #27, !dbg !10194
  ret void, !dbg !10194
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_isr(%struct.device* noundef %0) #1 !dbg !10195 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10197, metadata !DIExpression()), !dbg !10199
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10200
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10200
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10200
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10198, metadata !DIExpression()), !dbg !10199
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 2, !dbg !10201
  %6 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %5, align 4, !dbg !10201
  %7 = icmp eq void (%struct.device*, i8*)* %6, null, !dbg !10203
  br i1 %7, label %11, label %8, !dbg !10204

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 3, !dbg !10205
  %10 = load i8*, i8** %9, align 4, !dbg !10205
  tail call void %6(%struct.device* noundef nonnull %0, i8* noundef %10) #27, !dbg !10207
  br label %11, !dbg !10208

11:                                               ; preds = %8, %1
  ret void, !dbg !10209
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* noundef %0) #1 !dbg !10210 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10212, metadata !DIExpression()), !dbg !10218
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10219
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10219
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10219
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10213, metadata !DIExpression()), !dbg !10218
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10220
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10220
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10220
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10214, metadata !DIExpression()), !dbg !10218
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !10221
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10222
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10222
  %10 = tail call fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %9) #26, !dbg !10224
  br i1 %10, label %11, label %51, !dbg !10225

11:                                               ; preds = %1
  %12 = load %struct.device*, %struct.device** %8, align 4, !dbg !10226
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10227
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10227
  %15 = load i8*, i8** %14, align 4, !dbg !10227
  %16 = tail call fastcc i32 @clock_control_on.60(%struct.device* noundef %12, i8* noundef %15) #26, !dbg !10228
  call void @llvm.dbg.value(metadata i32 %16, metadata !10217, metadata !DIExpression()), !dbg !10218
  %17 = icmp eq i32 %16, 0, !dbg !10229
  br i1 %17, label %18, label %51, !dbg !10231

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10232
  %20 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %19, align 4, !dbg !10232
  %21 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %20) #26, !dbg !10233
  call void @llvm.dbg.value(metadata i32 %21, metadata !10217, metadata !DIExpression()), !dbg !10218
  %22 = icmp slt i32 %21, 0, !dbg !10234
  br i1 %22, label %51, label %23, !dbg !10236

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10237
  %25 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10237
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %25) #26, !dbg !10238
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10239
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %26) #26, !dbg !10240
  %27 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10241
  %28 = load i32, i32* %27, align 4, !dbg !10241
  switch i32 %28, label %30 [
    i32 2, label %31
    i32 1, label %29
  ], !dbg !10243

29:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 1536, metadata !10215, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 4096, metadata !10216, metadata !DIExpression()), !dbg !10218
  br label %31, !dbg !10244

30:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 0, metadata !10215, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 0, metadata !10216, metadata !DIExpression()), !dbg !10218
  br label %31

31:                                               ; preds = %23, %29, %30
  %32 = phi i32 [ 1536, %29 ], [ 0, %30 ], [ 1024, %23 ], !dbg !10247
  %33 = phi i32 [ 4096, %29 ], [ 0, %30 ], [ 4096, %23 ], !dbg !10247
  call void @llvm.dbg.value(metadata i32 %33, metadata !10216, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata i32 %32, metadata !10215, metadata !DIExpression()), !dbg !10218
  %34 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10248
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %34, i32 noundef %33, i32 noundef %32) #26, !dbg !10249
  %35 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10250
  %36 = load i8, i8* %35, align 4, !dbg !10250, !range !6433
  %37 = icmp eq i8 %36, 0, !dbg !10250
  br i1 %37, label %39, label %38, !dbg !10252

38:                                               ; preds = %31
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !10253
  br label %39, !dbg !10255

39:                                               ; preds = %38, %31
  %40 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10256
  %41 = load i32, i32* %40, align 4, !dbg !10256
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %41) #26, !dbg !10257
  %42 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10258
  %43 = load i8, i8* %42, align 4, !dbg !10258, !range !6433
  %44 = icmp eq i8 %43, 0, !dbg !10258
  br i1 %44, label %47, label %45, !dbg !10260

45:                                               ; preds = %39
  %46 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10261
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %46) #26, !dbg !10263
  br label %47, !dbg !10264

47:                                               ; preds = %45, %39
  %48 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %24, align 4, !dbg !10265
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %48) #26, !dbg !10266
  %49 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 10, !dbg !10267
  %50 = load void (%struct.device*)*, void (%struct.device*)** %49, align 4, !dbg !10267
  tail call void %50(%struct.device* noundef nonnull %0) #27, !dbg !10268
  br label %51, !dbg !10269

51:                                               ; preds = %18, %11, %1, %47
  %52 = phi i32 [ 0, %47 ], [ -19, %1 ], [ %16, %11 ], [ %21, %18 ], !dbg !10218
  ret i32 %52, !dbg !10270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #7 !dbg !10271 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10273, metadata !DIExpression()), !dbg !10277
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10278
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10278
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10278
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10274, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10275, metadata !DIExpression()), !dbg !10277
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10279
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10280
  ret void, !dbg !10281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.59(%struct.device* noundef %0) unnamed_addr #1 !dbg !10282 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10286, metadata !DIExpression()), !dbg !10287
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10288, !srcloc !10290
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.61(%struct.device* noundef %0) #26, !dbg !10291
  ret i1 %2, !dbg !10292
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.60(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10293 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10295, metadata !DIExpression()), !dbg !10298
  call void @llvm.dbg.value(metadata i8* %1, metadata !10296, metadata !DIExpression()), !dbg !10298
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10299
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10299
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10299
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10297, metadata !DIExpression()), !dbg !10298
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10300
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10300
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !10301
  ret i32 %8, !dbg !10302
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10303 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10307, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i8 0, metadata !10308, metadata !DIExpression()), !dbg !10311
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10312
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10312
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10310, metadata !DIExpression(DW_OP_deref)), !dbg !10311
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %4, metadata !10309, metadata !DIExpression()), !dbg !10311
  %5 = icmp slt i32 %4, 0, !dbg !10314
  br i1 %5, label %9, label %6, !dbg !10316

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10317
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10310, metadata !DIExpression()), !dbg !10311
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !10318
  br label %9, !dbg !10319

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10311
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !10320
  ret i32 %10, !dbg !10320
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10321 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10323, metadata !DIExpression()), !dbg !10327
  call void @llvm.dbg.value(metadata i32 12, metadata !10324, metadata !DIExpression()), !dbg !10327
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10328

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !9630, metadata !DIExpression()) #25, !dbg !10329
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !10332, !srcloc !9640
  call void @llvm.dbg.value(metadata i32 %4, metadata !9635, metadata !DIExpression()) #25, !dbg !10329
  %5 = or i32 %4, 12, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %5, metadata !10325, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.value(metadata i32 %5, metadata !9643, metadata !DIExpression()) #25, !dbg !10335
  call void @llvm.dbg.value(metadata i32* %2, metadata !9648, metadata !DIExpression()) #25, !dbg !10335
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !10337, !srcloc !9653
  call void @llvm.dbg.value(metadata i32 %6, metadata !9649, metadata !DIExpression()) #25, !dbg !10335
  %7 = icmp eq i32 %6, 0, !dbg !10328
  br i1 %7, label %8, label %3, !dbg !10333, !llvm.loop !10338

8:                                                ; preds = %3
  ret void, !dbg !10339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !10340 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10342, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10343, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %2, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 0, metadata !10345, metadata !DIExpression()), !dbg !10346
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10347
  %5 = load volatile i32, i32* %4, align 4, !dbg !10347
  %6 = and i32 %5, -5633, !dbg !10347
  %7 = or i32 %2, %1, !dbg !10347
  %8 = or i32 %7, %6, !dbg !10347
  store volatile i32 %8, i32* %4, align 4, !dbg !10347
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10348
  %10 = load volatile i32, i32* %9, align 4, !dbg !10348
  %11 = and i32 %10, -12289, !dbg !10348
  store volatile i32 %11, i32* %9, align 4, !dbg !10348
  ret void, !dbg !10349
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10350 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10352, metadata !DIExpression()), !dbg !10353
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10354
  %3 = load volatile i32, i32* %2, align 4, !dbg !10354
  %4 = or i32 %3, 8, !dbg !10354
  store volatile i32 %4, i32* %2, align 4, !dbg !10354
  ret void, !dbg !10355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10356 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10360, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10361, metadata !DIExpression()), !dbg !10363
  call void @llvm.dbg.value(metadata i32 0, metadata !10362, metadata !DIExpression()), !dbg !10363
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10364
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10364
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10365
  %5 = load i8, i8* %4, align 4, !dbg !10365
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !10366
  ret i32 %6, !dbg !10367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.61(%struct.device* noundef %0) unnamed_addr #1 !dbg !10368 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10370, metadata !DIExpression()), !dbg !10371
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10372
  ret i1 %2, !dbg !10373
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !10374 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10376, metadata !DIExpression()), !dbg !10377
  tail call fastcc void @__NVIC_SetPriority.63() #26, !dbg !10378
  store i32 8399, i32* @last_load, align 4, !dbg !10379
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10380
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10381
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10382
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10383
  %3 = or i32 %2, 7, !dbg !10383
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10383
  ret i32 0, !dbg !10384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.63() unnamed_addr #15 !dbg !10385 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10387, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata i32 1, metadata !10388, metadata !DIExpression()), !dbg !10389
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10390
  ret void, !dbg !10393
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10394 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10396, metadata !DIExpression()), !dbg !10398
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !10399
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10400
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10401
  %5 = add i32 %4, %3, !dbg !10401
  store i32 %5, i32* @cycle_count, align 4, !dbg !10401
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10402
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10403
  %7 = sub i32 %5, %6, !dbg !10406
  %8 = udiv i32 %7, 8400, !dbg !10407
  call void @llvm.dbg.value(metadata i32 %8, metadata !10397, metadata !DIExpression()), !dbg !10398
  %9 = mul nuw i32 %8, 8400, !dbg !10408
  %10 = add i32 %9, %6, !dbg !10409
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10409
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !10410
  tail call void @z_arm_int_exit() #27, !dbg !10411
  ret void, !dbg !10412
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !10413 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10418
  call void @llvm.dbg.value(metadata i32 %1, metadata !10415, metadata !DIExpression()), !dbg !10419
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10420
  call void @llvm.dbg.value(metadata i32 %2, metadata !10416, metadata !DIExpression()), !dbg !10419
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10421
  call void @llvm.dbg.value(metadata i32 %3, metadata !10417, metadata !DIExpression()), !dbg !10419
  %4 = and i32 %2, 65536, !dbg !10422
  %5 = icmp ne i32 %4, 0, !dbg !10422
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10424
  %8 = load i32, i32* @last_load, align 4, !dbg !10419
  br i1 %7, label %9, label %13, !dbg !10424

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10425
  %11 = add i32 %10, %8, !dbg !10425
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10425
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10427
  br label %13, !dbg !10428

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10429
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10430
  %16 = add i32 %14, %15, !dbg !10431
  ret i32 %16, !dbg !10432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10433 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10437, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata i1 %1, metadata !10438, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10450
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10451
  br i1 %4, label %5, label %8, !dbg !10451

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10453
  %7 = and i32 %6, -2, !dbg !10453
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10453
  store i32 -16777216, i32* @last_load, align 4, !dbg !10455
  br label %54, !dbg !10456

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10457
  call void @llvm.dbg.value(metadata i32 %9, metadata !10442, metadata !DIExpression()), !dbg !10450
  br i1 %3, label %18, label %10, !dbg !10458

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10458
  call void @llvm.dbg.value(metadata i32 undef, metadata !10437, metadata !DIExpression()), !dbg !10450
  %12 = icmp slt i32 %11, 1, !dbg !10459
  br i1 %12, label %18, label %13, !dbg !10459

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10459
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10459
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10459
  %17 = add nuw nsw i32 %16, 8399, !dbg !10459
  br label %18, !dbg !10459

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10437, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10460, metadata !DIExpression()) #25, !dbg !10467
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10469, !srcloc !10475
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !10469
  call void @llvm.dbg.value(metadata i32 %21, metadata !10472, metadata !DIExpression()) #25, !dbg !10476
  call void @llvm.dbg.value(metadata i32 undef, metadata !10473, metadata !DIExpression()) #25, !dbg !10476
  call void @llvm.dbg.value(metadata i32 %21, metadata !10466, metadata !DIExpression()) #25, !dbg !10467
  call void @llvm.dbg.value(metadata i32 %21, metadata !10443, metadata !DIExpression()), !dbg !10450
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !10477
  call void @llvm.dbg.value(metadata i32 %22, metadata !10448, metadata !DIExpression()), !dbg !10450
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %23, metadata !10440, metadata !DIExpression()), !dbg !10450
  %24 = load i32, i32* @cycle_count, align 4, !dbg !10479
  %25 = add i32 %24, %22, !dbg !10479
  store i32 %25, i32* @cycle_count, align 4, !dbg !10479
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10480
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !10481
  %27 = sub i32 %25, %26, !dbg !10482
  call void @llvm.dbg.value(metadata i32 %27, metadata !10449, metadata !DIExpression()), !dbg !10450
  %28 = icmp slt i32 %27, 0, !dbg !10483
  br i1 %28, label %38, label %29, !dbg !10485

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !10439, metadata !DIExpression()), !dbg !10450
  call void @llvm.dbg.value(metadata i32 undef, metadata !10439, metadata !DIExpression()), !dbg !10450
  %30 = add nuw i32 %19, %27, !dbg !10486
  %31 = urem i32 %30, 8400, !dbg !10488
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !10439, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10450
  %32 = sub nuw nsw i32 %19, %31, !dbg !10489
  call void @llvm.dbg.value(metadata i32 %32, metadata !10439, metadata !DIExpression()), !dbg !10450
  %33 = icmp ugt i32 %32, 1024, !dbg !10490
  br i1 %33, label %34, label %36, !dbg !10490

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !10439, metadata !DIExpression()), !dbg !10450
  %35 = icmp ugt i32 %32, 16766400, !dbg !10491
  br i1 %35, label %38, label %36, !dbg !10493

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !10494
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %40, metadata !10441, metadata !DIExpression()), !dbg !10450
  %41 = add nsw i32 %39, -1, !dbg !10496
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10497
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10498
  %42 = icmp ult i32 %23, %40, !dbg !10499
  br i1 %42, label %43, label %48, !dbg !10501

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !10502
  %45 = add i32 %23, %9, !dbg !10504
  %46 = sub i32 %45, %40, !dbg !10505
  %47 = add i32 %46, %44, !dbg !10502
  br label %52, !dbg !10506

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !10507
  %50 = load i32, i32* @cycle_count, align 4, !dbg !10509
  %51 = add i32 %49, %50, !dbg !10509
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !10510
  store i32 %53, i32* @cycle_count, align 4, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %21, metadata !10511, metadata !DIExpression()) #25, !dbg !10517
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10516, metadata !DIExpression()) #25, !dbg !10517
  call void @llvm.dbg.value(metadata i32 %21, metadata !10519, metadata !DIExpression()) #25, !dbg !10522
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !10524, !srcloc !10525
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !10526
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10527 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10460, metadata !DIExpression()) #25, !dbg !10531
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10533, !srcloc !10475
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10533
  call void @llvm.dbg.value(metadata i32 %2, metadata !10472, metadata !DIExpression()) #25, !dbg !10535
  call void @llvm.dbg.value(metadata i32 undef, metadata !10473, metadata !DIExpression()) #25, !dbg !10535
  call void @llvm.dbg.value(metadata i32 %2, metadata !10466, metadata !DIExpression()) #25, !dbg !10531
  call void @llvm.dbg.value(metadata i32 %2, metadata !10529, metadata !DIExpression()), !dbg !10536
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10537
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10538
  %5 = add i32 %4, %3, !dbg !10539
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10540
  %7 = sub i32 %5, %6, !dbg !10541
  call void @llvm.dbg.value(metadata i32 %7, metadata !10530, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.value(metadata i32 %2, metadata !10511, metadata !DIExpression()) #25, !dbg !10542
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10516, metadata !DIExpression()) #25, !dbg !10542
  call void @llvm.dbg.value(metadata i32 %2, metadata !10519, metadata !DIExpression()) #25, !dbg !10544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10546, !srcloc !10525
  %8 = udiv i32 %7, 8400, !dbg !10547
  ret i32 %8, !dbg !10548
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10549 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10460, metadata !DIExpression()) #25, !dbg !10553
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !10555, !srcloc !10475
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %2, metadata !10472, metadata !DIExpression()) #25, !dbg !10557
  call void @llvm.dbg.value(metadata i32 undef, metadata !10473, metadata !DIExpression()) #25, !dbg !10557
  call void @llvm.dbg.value(metadata i32 %2, metadata !10466, metadata !DIExpression()) #25, !dbg !10553
  call void @llvm.dbg.value(metadata i32 %2, metadata !10551, metadata !DIExpression()), !dbg !10558
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !10559
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10560
  %5 = add i32 %4, %3, !dbg !10561
  call void @llvm.dbg.value(metadata i32 %5, metadata !10552, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.value(metadata i32 %2, metadata !10511, metadata !DIExpression()) #25, !dbg !10562
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !10516, metadata !DIExpression()) #25, !dbg !10562
  call void @llvm.dbg.value(metadata i32 %2, metadata !10519, metadata !DIExpression()) #25, !dbg !10564
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !10566, !srcloc !10525
  ret i32 %5, !dbg !10567
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !10568 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10569
  %2 = icmp eq i32 %1, -16777216, !dbg !10571
  br i1 %2, label %3, label %6, !dbg !10572

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10573
  %5 = or i32 %4, 1, !dbg !10573
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10573
  br label %6, !dbg !10575

6:                                                ; preds = %3, %0
  ret void, !dbg !10576
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !10577 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10578
  %2 = and i32 %1, -2, !dbg !10578
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10578
  ret void, !dbg !10579
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !10580 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10606, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i8 %1, metadata !10607, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10608, metadata !DIExpression()), !dbg !10609
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10610
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10610
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10609
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10611
  %8 = load i8, i8* %6, align 4, !dbg !10612
  %9 = zext i8 %8 to i32, !dbg !10613
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10613
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10614
  br i1 %11, label %18, label %24, !dbg !10615

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10609
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10611
  %14 = load i8, i8* %6, align 4, !dbg !10612
  %15 = zext i8 %14 to i32, !dbg !10613
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10613
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10614
  br i1 %17, label %18, label %24, !dbg !10615, !llvm.loop !10616

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10618
  %21 = load i8, i8* %20, align 1, !dbg !10618
  %22 = icmp eq i8 %21, %1, !dbg !10621
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10622
  br i1 %22, label %24, label %12, !dbg !10623

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10609
  ret i32 %25, !dbg !10624
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10625 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10636, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i8 %1, metadata !10637, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i32 %2, metadata !10638, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i32 0, metadata !10641, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i32 0, metadata !10642, metadata !DIExpression()), !dbg !10652
  call void @llvm.dbg.value(metadata i8 0, metadata !10643, metadata !DIExpression()), !dbg !10653
  %4 = icmp eq i8 %1, 0, !dbg !10654
  br i1 %4, label %35, label %5, !dbg !10655

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10654
  br label %9, !dbg !10655

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10643, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i32 %29, metadata !10641, metadata !DIExpression()), !dbg !10652
  %8 = icmp eq i32 %34, %6, !dbg !10654
  br i1 %8, label %35, label %9, !dbg !10655, !llvm.loop !10656

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10643, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.value(metadata i32 %11, metadata !10641, metadata !DIExpression()), !dbg !10652
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10658
  %13 = load i32, i32* %12, align 4, !dbg !10658
  call void @llvm.dbg.value(metadata i32 %13, metadata !10640, metadata !DIExpression()), !dbg !10652
  %14 = and i32 %13, 31, !dbg !10659
  %15 = icmp ult i32 %14, 16, !dbg !10660
  br i1 %15, label %16, label %20, !dbg !10661

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10662
  %18 = load i32, i32* %17, align 4, !dbg !10662
  %19 = or i32 %18, 32, !dbg !10664
  call void @llvm.dbg.value(metadata i32 %19, metadata !10641, metadata !DIExpression()), !dbg !10652
  br label %28, !dbg !10665

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10666

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10667
  %23 = load i32, i32* %22, align 4, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %23, metadata !10645, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10668
  %24 = lshr i32 %23, 7, !dbg !10669
  %25 = and i32 %24, 16, !dbg !10669
  %26 = or i32 %25, %23, !dbg !10669
  call void @llvm.dbg.value(metadata i32 %26, metadata !10641, metadata !DIExpression()), !dbg !10652
  br label %28, !dbg !10670

27:                                               ; preds = %20
  br label %28, !dbg !10671

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !10652
  call void @llvm.dbg.value(metadata i32 %29, metadata !10641, metadata !DIExpression()), !dbg !10652
  %30 = lshr i32 %13, 5, !dbg !10671
  %31 = and i32 %30, 255, !dbg !10671
  call void @llvm.dbg.value(metadata i32 %31, metadata !10639, metadata !DIExpression()), !dbg !10652
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !10672
  call void @llvm.dbg.value(metadata i32 %32, metadata !10642, metadata !DIExpression()), !dbg !10652
  %33 = icmp slt i32 %32, 0, !dbg !10673
  %34 = add nuw nsw i32 %10, 1, !dbg !10675
  call void @llvm.dbg.value(metadata i32 %34, metadata !10643, metadata !DIExpression()), !dbg !10653
  br i1 %33, label %35, label %7, !dbg !10676

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !10677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !10678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10682, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i32 %1, metadata !10683, metadata !DIExpression()), !dbg !10686
  call void @llvm.dbg.value(metadata i32 %2, metadata !10684, metadata !DIExpression()), !dbg !10686
  %4 = icmp ugt i32 %0, 175, !dbg !10687
  br i1 %4, label %16, label %5, !dbg !10689

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !10690
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !10691
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !10691
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !10685, metadata !DIExpression()), !dbg !10686
  %9 = add nsw i32 %6, -8, !dbg !10692
  %10 = icmp ult i32 %9, 3, !dbg !10692
  br i1 %10, label %16, label %11, !dbg !10694

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %8) #26, !dbg !10695
  br i1 %12, label %13, label %16, !dbg !10696

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !10697
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !10698
  br label %16, !dbg !10699

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !10686
  ret i32 %17, !dbg !10700
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.68(%struct.device* noundef %0) unnamed_addr #1 !dbg !10701 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10705, metadata !DIExpression()), !dbg !10706
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10707, !srcloc !10709
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) #26, !dbg !10710
  ret i1 %2, !dbg !10711
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.69(%struct.device* noundef %0) unnamed_addr #1 !dbg !10712 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10714, metadata !DIExpression()), !dbg !10715
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !10716
  ret i1 %2, !dbg !10717
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #11 !dbg !10718 {
  ret void, !dbg !10719
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #16 !dbg !10720 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10722, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 0, metadata !10723, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 2, metadata !10724, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 0, metadata !10725, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 2, metadata !10726, metadata !DIExpression()), !dbg !10727
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10728
  %2 = and i32 %1, 12, !dbg !10729
  call void @llvm.dbg.value(metadata i32 %2, metadata !10722, metadata !DIExpression()), !dbg !10727
  %3 = icmp eq i32 %2, 8, !dbg !10730
  br i1 %3, label %4, label %18, !dbg !10730

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %5, metadata !10725, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !10727
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10733
  %7 = and i32 %6, 63, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %7, metadata !10726, metadata !DIExpression()), !dbg !10727
  %8 = udiv i32 16000000, %7, !dbg !10735
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10735
  %10 = lshr i32 %9, 6, !dbg !10735
  %11 = and i32 %10, 511, !dbg !10735
  %12 = mul i32 %11, %8, !dbg !10735
  call void @llvm.dbg.value(metadata i32 %12, metadata !10723, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 %12, metadata !10723, metadata !DIExpression()), !dbg !10727
  call void @llvm.dbg.value(metadata i32 %12, metadata !10723, metadata !DIExpression()), !dbg !10727
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10737
  %14 = lshr i32 %13, 15, !dbg !10738
  %15 = and i32 %14, 6, !dbg !10738
  %16 = add nuw nsw i32 %15, 2, !dbg !10738
  call void @llvm.dbg.value(metadata i32 %16, metadata !10724, metadata !DIExpression()), !dbg !10727
  %17 = udiv i32 %12, %16, !dbg !10739
  br label %18, !dbg !10740

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !10741
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10742
  %21 = lshr i32 %20, 4, !dbg !10743
  %22 = and i32 %21, 15, !dbg !10743
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !10744
  %24 = load i8, i8* %23, align 1, !dbg !10744
  %25 = zext i8 %24 to i32, !dbg !10744
  call void @llvm.dbg.value(metadata i32 %25, metadata !10722, metadata !DIExpression()), !dbg !10727
  %26 = lshr i32 %19, %25, !dbg !10745
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !10745
  ret void, !dbg !10746
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !10747 {
  ret i32 0, !dbg !10752
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !10753 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !10780, metadata !DIExpression()), !dbg !10791
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !10792
  br i1 %3, label %317, label %4, !dbg !10794

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !10795
  %6 = load i32, i32* %5, align 4, !dbg !10795
  %7 = and i32 %6, 1, !dbg !10797
  %8 = icmp eq i32 %7, 0, !dbg !10798
  br i1 %8, label %66, label %9, !dbg !10799

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10800
  %11 = and i32 %10, 12, !dbg !10800
  %12 = icmp eq i32 %11, 4, !dbg !10803
  br i1 %12, label %21, label %13, !dbg !10804

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10805
  %15 = and i32 %14, 12, !dbg !10805
  %16 = icmp eq i32 %15, 8, !dbg !10806
  br i1 %16, label %17, label %29, !dbg !10807

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10808
  %19 = and i32 %18, 4194304, !dbg !10809
  %20 = icmp eq i32 %19, 0, !dbg !10810
  br i1 %20, label %29, label %21, !dbg !10811

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10812
  %23 = and i32 %22, 131072, !dbg !10812
  %24 = icmp eq i32 %23, 0, !dbg !10812
  br i1 %24, label %66, label %25, !dbg !10815

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10816
  %27 = load i32, i32* %26, align 4, !dbg !10816
  %28 = icmp eq i32 %27, 0, !dbg !10817
  br i1 %28, label %317, label %66, !dbg !10818

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !10819
  %31 = load i32, i32* %30, align 4, !dbg !10819
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !10823

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10824
  %34 = or i32 %33, 65536, !dbg !10824
  br label %45, !dbg !10824

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10826
  %37 = or i32 %36, 262144, !dbg !10826
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10826
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10826
  %39 = or i32 %38, 65536, !dbg !10826
  br label %45, !dbg !10826

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10829
  %42 = and i32 %41, -65537, !dbg !10829
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10829
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10829
  %44 = and i32 %43, -262145, !dbg !10829
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10831
  %47 = load i32, i32* %30, align 4, !dbg !10832
  %48 = icmp eq i32 %47, 0, !dbg !10834
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !10835
  call void @llvm.dbg.value(metadata i32 %49, metadata !10781, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i32 %49, metadata !10781, metadata !DIExpression()), !dbg !10791
  br i1 %48, label %58, label %50, !dbg !10836

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10837
  %52 = and i32 %51, 131072, !dbg !10839
  %53 = icmp eq i32 %52, 0, !dbg !10839
  br i1 %53, label %54, label %66, !dbg !10840

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !10841
  %56 = sub i32 %55, %49, !dbg !10844
  %57 = icmp ugt i32 %56, 100, !dbg !10845
  br i1 %57, label %317, label %50, !dbg !10846, !llvm.loop !10847

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10849
  %60 = and i32 %59, 131072, !dbg !10849
  %61 = icmp eq i32 %60, 0, !dbg !10849
  br i1 %61, label %66, label %62, !dbg !10851

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !10852
  %64 = sub i32 %63, %49, !dbg !10855
  %65 = icmp ugt i32 %64, 100, !dbg !10856
  br i1 %65, label %317, label %58, !dbg !10857, !llvm.loop !10858

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !10860
  %68 = and i32 %67, 2, !dbg !10862
  %69 = icmp eq i32 %68, 0, !dbg !10863
  br i1 %69, label %121, label %70, !dbg !10864

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10865
  %72 = and i32 %71, 12, !dbg !10865
  %73 = icmp eq i32 %72, 0, !dbg !10868
  br i1 %73, label %82, label %74, !dbg !10869

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10870
  %76 = and i32 %75, 12, !dbg !10870
  %77 = icmp eq i32 %76, 8, !dbg !10871
  br i1 %77, label %78, label %90, !dbg !10872

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10873
  %80 = and i32 %79, 4194304, !dbg !10874
  %81 = icmp eq i32 %80, 0, !dbg !10875
  br i1 %81, label %82, label %90, !dbg !10876

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10877
  %84 = and i32 %83, 2, !dbg !10877
  %85 = icmp eq i32 %84, 0, !dbg !10877
  br i1 %85, label %114, label %86, !dbg !10880

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10881
  %88 = load i32, i32* %87, align 4, !dbg !10881
  %89 = icmp eq i32 %88, 1, !dbg !10882
  br i1 %89, label %114, label %317, !dbg !10883

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !10884
  %92 = load i32, i32* %91, align 4, !dbg !10884
  %93 = icmp eq i32 %92, 0, !dbg !10887
  br i1 %93, label %104, label %94, !dbg !10888

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10889
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %95, metadata !10781, metadata !DIExpression()), !dbg !10791
  br label %96, !dbg !10892

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10893
  %98 = and i32 %97, 2, !dbg !10894
  %99 = icmp eq i32 %98, 0, !dbg !10894
  br i1 %99, label %100, label %114, !dbg !10892

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !10895
  %102 = sub i32 %101, %95, !dbg !10898
  %103 = icmp ugt i32 %102, 2, !dbg !10899
  br i1 %103, label %317, label %96, !dbg !10900, !llvm.loop !10901

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !10903
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !10905
  call void @llvm.dbg.value(metadata i32 %105, metadata !10781, metadata !DIExpression()), !dbg !10791
  br label %106, !dbg !10906

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10907
  %108 = and i32 %107, 2, !dbg !10907
  %109 = icmp eq i32 %108, 0, !dbg !10907
  br i1 %109, label %121, label %110, !dbg !10906

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !10908
  %112 = sub i32 %111, %105, !dbg !10911
  %113 = icmp ugt i32 %112, 2, !dbg !10912
  br i1 %113, label %317, label %106, !dbg !10913, !llvm.loop !10914

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10916
  %116 = and i32 %115, -249, !dbg !10916
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !10916
  %118 = load i32, i32* %117, align 4, !dbg !10916
  %119 = shl i32 %118, 3, !dbg !10916
  %120 = or i32 %119, %116, !dbg !10916
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10916
  br label %121, !dbg !10917

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !10917
  %123 = and i32 %122, 8, !dbg !10919
  %124 = icmp eq i32 %123, 0, !dbg !10920
  br i1 %124, label %149, label %125, !dbg !10921

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !10922
  %127 = load i32, i32* %126, align 4, !dbg !10922
  %128 = icmp eq i32 %127, 0, !dbg !10925
  br i1 %128, label %139, label %129, !dbg !10926

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10927
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !10929
  call void @llvm.dbg.value(metadata i32 %130, metadata !10781, metadata !DIExpression()), !dbg !10791
  br label %131, !dbg !10930

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10931
  %133 = and i32 %132, 2, !dbg !10932
  %134 = icmp eq i32 %133, 0, !dbg !10932
  br i1 %134, label %135, label %149, !dbg !10930

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !10933
  %137 = sub i32 %136, %130, !dbg !10936
  %138 = icmp ugt i32 %137, 2, !dbg !10937
  br i1 %138, label %317, label %131, !dbg !10938, !llvm.loop !10939

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !10941
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !10943
  call void @llvm.dbg.value(metadata i32 %140, metadata !10781, metadata !DIExpression()), !dbg !10791
  br label %141, !dbg !10944

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10945
  %143 = and i32 %142, 2, !dbg !10945
  %144 = icmp eq i32 %143, 0, !dbg !10945
  br i1 %144, label %149, label %145, !dbg !10944

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !10946
  %147 = sub i32 %146, %140, !dbg !10949
  %148 = icmp ugt i32 %147, 2, !dbg !10950
  br i1 %148, label %317, label %141, !dbg !10951, !llvm.loop !10952

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !10954
  %151 = and i32 %150, 4, !dbg !10955
  %152 = icmp eq i32 %151, 0, !dbg !10956
  br i1 %152, label %221, label %153, !dbg !10957

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !10783, metadata !DIExpression()), !dbg !10958
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10959
  %155 = and i32 %154, 268435456, !dbg !10959
  %156 = icmp eq i32 %155, 0, !dbg !10959
  br i1 %156, label %157, label %164, !dbg !10960

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !10961
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !10961
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10787, metadata !DIExpression()), !dbg !10961
  store volatile i32 0, i32* %2, align 4, !dbg !10961
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10961
  %160 = or i32 %159, 268435456, !dbg !10961
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10961
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10961
  %162 = and i32 %161, 268435456, !dbg !10961
  store volatile i32 %162, i32* %2, align 4, !dbg !10961
  %163 = load volatile i32, i32* %2, align 4, !dbg !10961
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !10962
  call void @llvm.dbg.value(metadata i32 1, metadata !10783, metadata !DIExpression()), !dbg !10958
  br label %164, !dbg !10963

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !10783, metadata !DIExpression()), !dbg !10958
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10964
  %166 = and i32 %165, 256, !dbg !10964
  %167 = icmp eq i32 %166, 0, !dbg !10964
  br i1 %167, label %168, label %180, !dbg !10966

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10967
  %170 = or i32 %169, 256, !dbg !10967
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10967
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !10969
  call void @llvm.dbg.value(metadata i32 %171, metadata !10781, metadata !DIExpression()), !dbg !10791
  br label %172, !dbg !10970

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !10971
  %174 = and i32 %173, 256, !dbg !10971
  %175 = icmp eq i32 %174, 0, !dbg !10971
  br i1 %175, label %176, label %180, !dbg !10970

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !10972
  %178 = sub i32 %177, %171, !dbg !10975
  %179 = icmp ugt i32 %178, 2, !dbg !10976
  br i1 %179, label %317, label %172, !dbg !10977, !llvm.loop !10978

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !10980
  %182 = load i32, i32* %181, align 4, !dbg !10980
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !10983

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10984
  %185 = or i32 %184, 1, !dbg !10984
  br label %196, !dbg !10984

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10986
  %188 = or i32 %187, 4, !dbg !10986
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10986
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10986
  %190 = or i32 %189, 1, !dbg !10986
  br label %196, !dbg !10986

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10989
  %193 = and i32 %192, -2, !dbg !10989
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10989
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10989
  %195 = and i32 %194, -5, !dbg !10989
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10991
  %198 = load i32, i32* %181, align 4, !dbg !10992
  %199 = icmp eq i32 %198, 0, !dbg !10994
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %200, metadata !10781, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i32 %200, metadata !10781, metadata !DIExpression()), !dbg !10791
  br i1 %199, label %209, label %201, !dbg !10996

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !10997
  %203 = and i32 %202, 2, !dbg !10999
  %204 = icmp eq i32 %203, 0, !dbg !10999
  br i1 %204, label %205, label %217, !dbg !11000

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !11001
  %207 = sub i32 %206, %200, !dbg !11004
  %208 = icmp ugt i32 %207, 5000, !dbg !11005
  br i1 %208, label %317, label %201, !dbg !11006, !llvm.loop !11007

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11009
  %211 = and i32 %210, 2, !dbg !11009
  %212 = icmp eq i32 %211, 0, !dbg !11009
  br i1 %212, label %217, label %213, !dbg !11011

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !11012
  %215 = sub i32 %214, %200, !dbg !11015
  %216 = icmp ugt i32 %215, 5000, !dbg !11016
  br i1 %216, label %317, label %209, !dbg !11017, !llvm.loop !11018

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11020

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11021
  %220 = and i32 %219, -268435457, !dbg !11021
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11021
  br label %221, !dbg !11024

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11025
  %223 = load i32, i32* %222, align 4, !dbg !11025
  %224 = icmp eq i32 %223, 0, !dbg !11027
  br i1 %224, label %316, label %225, !dbg !11028

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11029
  %227 = and i32 %226, 12, !dbg !11029
  %228 = icmp eq i32 %227, 8, !dbg !11032
  br i1 %228, label %277, label %229, !dbg !11033

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11034
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11037
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !11037
  call void @llvm.dbg.value(metadata i32 %231, metadata !10781, metadata !DIExpression()), !dbg !10791
  call void @llvm.dbg.value(metadata i32 %231, metadata !10781, metadata !DIExpression()), !dbg !10791
  br i1 %230, label %232, label %269, !dbg !11038

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11039
  %234 = and i32 %233, 33554432, !dbg !11039
  %235 = icmp eq i32 %234, 0, !dbg !11039
  br i1 %235, label %240, label %236, !dbg !11041

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !11042
  %238 = sub i32 %237, %231, !dbg !11045
  %239 = icmp ugt i32 %238, 2, !dbg !11046
  br i1 %239, label %317, label %232, !dbg !11047, !llvm.loop !11048

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11050
  %242 = load i32, i32* %241, align 4, !dbg !11050
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11050
  %244 = load i32, i32* %243, align 4, !dbg !11050
  %245 = or i32 %244, %242, !dbg !11050
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11050
  %247 = load i32, i32* %246, align 4, !dbg !11050
  %248 = shl i32 %247, 6, !dbg !11050
  %249 = or i32 %245, %248, !dbg !11050
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11050
  %251 = load i32, i32* %250, align 4, !dbg !11050
  %252 = shl i32 %251, 15, !dbg !11050
  %253 = add i32 %252, -65536, !dbg !11050
  %254 = and i32 %253, -65536, !dbg !11050
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11050
  %256 = load i32, i32* %255, align 4, !dbg !11050
  %257 = shl i32 %256, 24, !dbg !11050
  %258 = or i32 %249, %257, !dbg !11050
  %259 = or i32 %258, %254, !dbg !11050
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11050
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11051
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !11052
  call void @llvm.dbg.value(metadata i32 %260, metadata !10781, metadata !DIExpression()), !dbg !10791
  br label %261, !dbg !11053

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11054
  %263 = and i32 %262, 33554432, !dbg !11055
  %264 = icmp eq i32 %263, 0, !dbg !11055
  br i1 %264, label %265, label %316, !dbg !11053

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !11056
  %267 = sub i32 %266, %260, !dbg !11059
  %268 = icmp ugt i32 %267, 2, !dbg !11060
  br i1 %268, label %317, label %261, !dbg !11061, !llvm.loop !11062

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11064
  %271 = and i32 %270, 33554432, !dbg !11064
  %272 = icmp eq i32 %271, 0, !dbg !11064
  br i1 %272, label %316, label %273, !dbg !11066

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !11067
  %275 = sub i32 %274, %231, !dbg !11070
  %276 = icmp ugt i32 %275, 2, !dbg !11071
  br i1 %276, label %317, label %269, !dbg !11072, !llvm.loop !11073

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11075
  br i1 %278, label %317, label %279, !dbg !11078

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11079
  call void @llvm.dbg.value(metadata i32 %280, metadata !10782, metadata !DIExpression()), !dbg !10791
  %281 = and i32 %280, 4194304, !dbg !11081
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11083
  %283 = load i32, i32* %282, align 4, !dbg !11083
  %284 = icmp eq i32 %281, %283, !dbg !11084
  br i1 %284, label %285, label %317, !dbg !11085

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11086
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11087
  %288 = load i32, i32* %287, align 4, !dbg !11087
  %289 = icmp eq i32 %286, %288, !dbg !11088
  br i1 %289, label %290, label %317, !dbg !11089

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11090
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11091
  %293 = load i32, i32* %292, align 4, !dbg !11091
  %294 = shl i32 %293, 6, !dbg !11092
  %295 = icmp eq i32 %291, %294, !dbg !11093
  br i1 %295, label %296, label %317, !dbg !11094

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11095
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11096
  %299 = load i32, i32* %298, align 4, !dbg !11096
  %300 = shl i32 %299, 15, !dbg !11097
  %301 = add i32 %300, -65536, !dbg !11097
  %302 = and i32 %301, -65536, !dbg !11097
  %303 = icmp eq i32 %297, %302, !dbg !11098
  br i1 %303, label %304, label %317, !dbg !11099

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11100
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11101
  %307 = load i32, i32* %306, align 4, !dbg !11101
  %308 = shl i32 %307, 24, !dbg !11102
  %309 = icmp eq i32 %305, %308, !dbg !11103
  br i1 %309, label %310, label %317, !dbg !11104

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !11105
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11106
  %313 = load i32, i32* %312, align 4, !dbg !11106
  %314 = shl i32 %313, 28, !dbg !11107
  %315 = icmp eq i32 %311, %314, !dbg !11108
  br i1 %315, label %316, label %317, !dbg !11109

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !11110

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !10791
  ret i32 %318, !dbg !11111
}

; Function Attrs: optsize
declare !dbg !11112 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11114 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11127, metadata !DIExpression()), !dbg !11130
  call void @llvm.dbg.value(metadata i32 %1, metadata !11128, metadata !DIExpression()), !dbg !11130
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11131
  br i1 %3, label %115, label %4, !dbg !11133

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11134
  %6 = and i32 %5, 7, !dbg !11134
  %7 = icmp ult i32 %6, %1, !dbg !11136
  br i1 %7, label %8, label %13, !dbg !11137

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11138
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11138
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11140
  %11 = and i32 %10, 7, !dbg !11140
  %12 = icmp eq i32 %11, %1, !dbg !11142
  br i1 %12, label %13, label %115, !dbg !11143

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11144
  %15 = load i32, i32* %14, align 4, !dbg !11144
  %16 = and i32 %15, 2, !dbg !11146
  %17 = icmp eq i32 %16, 0, !dbg !11147
  br i1 %17, label %39, label %18, !dbg !11148

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11149
  %20 = icmp eq i32 %19, 0, !dbg !11152
  br i1 %20, label %25, label %21, !dbg !11153

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11154
  %23 = or i32 %22, 7168, !dbg !11154
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11154
  %24 = load i32, i32* %14, align 4, !dbg !11156
  br label %25, !dbg !11158

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11156
  %27 = and i32 %26, 8, !dbg !11159
  %28 = icmp eq i32 %27, 0, !dbg !11160
  br i1 %28, label %32, label %29, !dbg !11161

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11162
  %31 = or i32 %30, 57344, !dbg !11162
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11162
  br label %32, !dbg !11164

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11165
  %34 = and i32 %33, -241, !dbg !11165
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11165
  %36 = load i32, i32* %35, align 4, !dbg !11165
  %37 = or i32 %34, %36, !dbg !11165
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11165
  %38 = load i32, i32* %14, align 4, !dbg !11166
  br label %39, !dbg !11168

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11166
  %41 = and i32 %40, 1, !dbg !11169
  %42 = icmp eq i32 %41, 0, !dbg !11170
  br i1 %42, label %73, label %43, !dbg !11171

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11172
  %45 = load i32, i32* %44, align 4, !dbg !11172
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11175

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11176
  %48 = and i32 %47, 131072, !dbg !11179
  %49 = icmp eq i32 %48, 0, !dbg !11179
  br i1 %49, label %115, label %58, !dbg !11180

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11181
  %52 = and i32 %51, 33554432, !dbg !11185
  %53 = icmp eq i32 %52, 0, !dbg !11185
  br i1 %53, label %115, label %58, !dbg !11186

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11187
  %56 = and i32 %55, 2, !dbg !11190
  %57 = icmp eq i32 %56, 0, !dbg !11190
  br i1 %57, label %115, label %58, !dbg !11191

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11192
  %60 = and i32 %59, -4, !dbg !11192
  %61 = or i32 %60, %45, !dbg !11192
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11192
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !11193
  call void @llvm.dbg.value(metadata i32 %62, metadata !11129, metadata !DIExpression()), !dbg !11130
  br label %63, !dbg !11194

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11195
  %65 = and i32 %64, 12, !dbg !11195
  %66 = load i32, i32* %44, align 4, !dbg !11196
  %67 = shl i32 %66, 2, !dbg !11197
  %68 = icmp eq i32 %65, %67, !dbg !11198
  br i1 %68, label %73, label %69, !dbg !11194

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !11199
  %71 = sub i32 %70, %62, !dbg !11202
  %72 = icmp ugt i32 %71, 5000, !dbg !11203
  br i1 %72, label %115, label %63, !dbg !11204, !llvm.loop !11205

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11207
  %75 = and i32 %74, 7, !dbg !11207
  %76 = icmp ugt i32 %75, %1, !dbg !11209
  br i1 %76, label %77, label %82, !dbg !11210

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11211
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11211
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11213
  %80 = and i32 %79, 7, !dbg !11213
  %81 = icmp eq i32 %80, %1, !dbg !11215
  br i1 %81, label %82, label %115, !dbg !11216

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11217
  %84 = and i32 %83, 4, !dbg !11219
  %85 = icmp eq i32 %84, 0, !dbg !11220
  br i1 %85, label %93, label %86, !dbg !11221

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11222
  %88 = and i32 %87, -7169, !dbg !11222
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11222
  %90 = load i32, i32* %89, align 4, !dbg !11222
  %91 = or i32 %88, %90, !dbg !11222
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11222
  %92 = load i32, i32* %14, align 4, !dbg !11224
  br label %93, !dbg !11226

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11224
  %95 = and i32 %94, 8, !dbg !11227
  %96 = icmp eq i32 %95, 0, !dbg !11228
  br i1 %96, label %104, label %97, !dbg !11229

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11230
  %99 = and i32 %98, -57345, !dbg !11230
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11230
  %101 = load i32, i32* %100, align 4, !dbg !11230
  %102 = shl i32 %101, 3, !dbg !11230
  %103 = or i32 %102, %99, !dbg !11230
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11230
  br label %104, !dbg !11232

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !11233
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11234
  %107 = lshr i32 %106, 4, !dbg !11235
  %108 = and i32 %107, 15, !dbg !11235
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11236
  %110 = load i8, i8* %109, align 1, !dbg !11236
  %111 = zext i8 %110 to i32, !dbg !11236
  %112 = lshr i32 %105, %111, !dbg !11237
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11238
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11239
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !11240
  br label %115, !dbg !11241

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11130
  ret i32 %116, !dbg !11242
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11243 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11245, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.value(metadata i32 0, metadata !11246, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.value(metadata i32 0, metadata !11247, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.value(metadata i32 0, metadata !11248, metadata !DIExpression()), !dbg !11249
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11250
  %2 = and i32 %1, 12, !dbg !11251
  %3 = icmp eq i32 %2, 8, !dbg !11252
  br i1 %3, label %4, label %21, !dbg !11252

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11253
  %6 = and i32 %5, 63, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %6, metadata !11245, metadata !DIExpression()), !dbg !11249
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11257
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11259
  %9 = lshr i32 %8, 6, !dbg !11259
  %10 = and i32 %9, 511, !dbg !11259
  %11 = zext i32 %10 to i64, !dbg !11259
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11259
  %13 = zext i32 %6 to i64, !dbg !11259
  %14 = udiv i64 %12, %13, !dbg !11259
  %15 = trunc i64 %14 to i32, !dbg !11259
  call void @llvm.dbg.value(metadata i32 %15, metadata !11246, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.value(metadata i32 %15, metadata !11246, metadata !DIExpression()), !dbg !11249
  call void @llvm.dbg.value(metadata i32 %15, metadata !11246, metadata !DIExpression()), !dbg !11249
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11260
  %17 = lshr i32 %16, 15, !dbg !11261
  %18 = and i32 %17, 6, !dbg !11261
  %19 = add nuw nsw i32 %18, 2, !dbg !11261
  call void @llvm.dbg.value(metadata i32 %19, metadata !11247, metadata !DIExpression()), !dbg !11249
  %20 = udiv i32 %15, %19, !dbg !11262
  call void @llvm.dbg.value(metadata i32 %20, metadata !11248, metadata !DIExpression()), !dbg !11249
  br label %21, !dbg !11263

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11264
  call void @llvm.dbg.value(metadata i32 %22, metadata !11248, metadata !DIExpression()), !dbg !11249
  ret i32 %22, !dbg !11265
}

; Function Attrs: optsize
declare !dbg !11266 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11269 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11273, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata i32 %1, metadata !11274, metadata !DIExpression()), !dbg !11290
  call void @llvm.dbg.value(metadata i32 %2, metadata !11275, metadata !DIExpression()), !dbg !11290
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11291
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11291
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11276, metadata !DIExpression()), !dbg !11292
  %7 = icmp eq i32 %0, 0, !dbg !11293
  br i1 %7, label %8, label %24, !dbg !11294

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !11295
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !11295
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11286, metadata !DIExpression()), !dbg !11295
  store volatile i32 0, i32* %5, align 4, !dbg !11295
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11295
  %11 = or i32 %10, 1, !dbg !11295
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11295
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11295
  %13 = and i32 %12, 1, !dbg !11295
  store volatile i32 %13, i32* %5, align 4, !dbg !11295
  %14 = load volatile i32, i32* %5, align 4, !dbg !11295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !11296
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11297
  store i32 256, i32* %15, align 4, !dbg !11298
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11299
  store i32 2, i32* %16, align 4, !dbg !11300
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11301
  store i32 3, i32* %17, align 4, !dbg !11302
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11303
  store i32 0, i32* %18, align 4, !dbg !11304
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11305
  store i32 0, i32* %19, align 4, !dbg !11306
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !11307
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11308
  %21 = and i32 %20, -123731969, !dbg !11308
  %22 = or i32 %2, %1, !dbg !11308
  %23 = or i32 %22, %21, !dbg !11308
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11308
  br label %24, !dbg !11309

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !11310
  ret void, !dbg !11310
}

; Function Attrs: optsize
declare !dbg !11311 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !11315 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11316
  ret void, !dbg !11317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !11318 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11319
  ret void, !dbg !11320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #5 !dbg !11321 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11322
  ret i32 %1, !dbg !11323
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #16 !dbg !11324 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11325
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11326
  %3 = lshr i32 %2, 10, !dbg !11327
  %4 = and i32 %3, 7, !dbg !11327
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11328
  %6 = load i8, i8* %5, align 1, !dbg !11328
  %7 = zext i8 %6 to i32, !dbg !11328
  %8 = lshr i32 %1, %7, !dbg !11329
  ret i32 %8, !dbg !11330
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #16 !dbg !11331 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !11332
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11333
  %3 = lshr i32 %2, 13, !dbg !11334
  %4 = and i32 %3, 7, !dbg !11334
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11335
  %6 = load i8, i8* %5, align 1, !dbg !11335
  %7 = zext i8 %6 to i32, !dbg !11335
  %8 = lshr i32 %1, %7, !dbg !11336
  ret i32 %8, !dbg !11337
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11338 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11342, metadata !DIExpression()), !dbg !11343
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11344
  store i32 15, i32* %2, align 4, !dbg !11345
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11346
  %4 = and i32 %3, 262144, !dbg !11348
  %5 = icmp eq i32 %4, 0, !dbg !11349
  br i1 %5, label %8, label %6, !dbg !11350

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11351
  store i32 327680, i32* %7, align 4, !dbg !11353
  br label %15, !dbg !11354

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11355
  %10 = and i32 %9, 65536, !dbg !11357
  %11 = icmp eq i32 %10, 0, !dbg !11358
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11359
  br i1 %11, label %14, label %13, !dbg !11360

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11361
  br label %15, !dbg !11363

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11364
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11366
  %17 = and i32 %16, 1, !dbg !11368
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11369
  store i32 %17, i32* %18, align 4, !dbg !11371
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11372
  %20 = lshr i32 %19, 3, !dbg !11373
  %21 = and i32 %20, 31, !dbg !11373
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11374
  store i32 %21, i32* %22, align 4, !dbg !11375
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11376
  %24 = and i32 %23, 4, !dbg !11378
  %25 = icmp eq i32 %24, 0, !dbg !11379
  br i1 %25, label %28, label %26, !dbg !11380

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11381
  store i32 5, i32* %27, align 4, !dbg !11383
  br label %35, !dbg !11384

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11385
  %30 = and i32 %29, 1, !dbg !11387
  %31 = icmp eq i32 %30, 0, !dbg !11388
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11389
  br i1 %31, label %34, label %33, !dbg !11390

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11391
  br label %35, !dbg !11393

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11394
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11396
  %37 = and i32 %36, 1, !dbg !11398
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11399
  store i32 %37, i32* %38, align 4, !dbg !11401
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11402
  %40 = and i32 %39, 16777216, !dbg !11404
  %41 = icmp eq i32 %40, 0, !dbg !11405
  %42 = select i1 %41, i32 1, i32 2, !dbg !11406
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11407
  store i32 %42, i32* %43, align 4, !dbg !11409
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11410
  %45 = and i32 %44, 4194304, !dbg !11411
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11412
  store i32 %45, i32* %46, align 4, !dbg !11413
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11414
  %48 = and i32 %47, 63, !dbg !11415
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11416
  store i32 %48, i32* %49, align 4, !dbg !11417
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11418
  %51 = lshr i32 %50, 6, !dbg !11419
  %52 = and i32 %51, 511, !dbg !11419
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11420
  store i32 %52, i32* %53, align 4, !dbg !11421
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11422
  %55 = shl i32 %54, 1, !dbg !11423
  %56 = and i32 %55, 393216, !dbg !11423
  %57 = add nuw nsw i32 %56, 131072, !dbg !11423
  %58 = lshr exact i32 %57, 16, !dbg !11424
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11425
  store i32 %58, i32* %59, align 4, !dbg !11426
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11427
  %61 = lshr i32 %60, 24, !dbg !11428
  %62 = and i32 %61, 15, !dbg !11428
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11429
  store i32 %62, i32* %63, align 4, !dbg !11430
  ret void, !dbg !11431
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #16 !dbg !11432 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11436, metadata !DIExpression()), !dbg !11438
  call void @llvm.dbg.value(metadata i32* %1, metadata !11437, metadata !DIExpression()), !dbg !11438
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11439
  store i32 15, i32* %3, align 4, !dbg !11440
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11441
  %5 = and i32 %4, 3, !dbg !11442
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11443
  store i32 %5, i32* %6, align 4, !dbg !11444
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11445
  %8 = and i32 %7, 240, !dbg !11446
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11447
  store i32 %8, i32* %9, align 4, !dbg !11448
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11449
  %11 = and i32 %10, 7168, !dbg !11450
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11451
  store i32 %11, i32* %12, align 4, !dbg !11452
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11453
  %14 = lshr i32 %13, 3, !dbg !11454
  %15 = and i32 %14, 7168, !dbg !11454
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11455
  store i32 %15, i32* %16, align 4, !dbg !11456
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11457
  %18 = and i32 %17, 7, !dbg !11458
  store i32 %18, i32* %1, align 4, !dbg !11459
  ret void, !dbg !11460
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11461 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11462
  %2 = and i32 %1, 128, !dbg !11462
  %3 = icmp eq i32 %2, 0, !dbg !11462
  br i1 %3, label %5, label %4, !dbg !11464

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !11465
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11467
  br label %5, !dbg !11468

5:                                                ; preds = %4, %0
  ret void, !dbg !11469
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11470 {
  ret void, !dbg !11471
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !11472 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11475, metadata !DIExpression()), !dbg !11476
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !11477
  ret void, !dbg !11478
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !11479 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11482, metadata !DIExpression()), !dbg !11484
  call void @llvm.dbg.value(metadata i32 1000, metadata !11483, metadata !DIExpression()), !dbg !11484
  %2 = udiv i32 %0, 1000, !dbg !11485
  %3 = add nsw i32 %2, -1, !dbg !11486
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11487
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11488
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11489
  ret void, !dbg !11490
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #17 !dbg !11491 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11493, metadata !DIExpression()), !dbg !11495
  %3 = bitcast i32* %2 to i8*, !dbg !11496
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11496
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11494, metadata !DIExpression()), !dbg !11497
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11498
  store volatile i32 %4, i32* %2, align 4, !dbg !11497
  %5 = load volatile i32, i32* %2, align 4, !dbg !11499
  %6 = icmp eq i32 %0, -1, !dbg !11500
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11493, metadata !DIExpression()), !dbg !11495
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11495
  call void @llvm.dbg.value(metadata i32 %8, metadata !11493, metadata !DIExpression()), !dbg !11495
  br label %9, !dbg !11502

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11493, metadata !DIExpression()), !dbg !11495
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11503
  call void @llvm.dbg.value(metadata i32 undef, metadata !11493, metadata !DIExpression()), !dbg !11495
  %12 = shl i32 %11, 15, !dbg !11495
  %13 = ashr i32 %12, 31, !dbg !11495
  %14 = add i32 %13, %10, !dbg !11495
  call void @llvm.dbg.value(metadata i32 %14, metadata !11493, metadata !DIExpression()), !dbg !11495
  %15 = icmp eq i32 %14, 0, !dbg !11502
  br i1 %15, label %16, label %9, !dbg !11502

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11506
  ret void, !dbg !11506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #4 !dbg !11507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11509, metadata !DIExpression()), !dbg !11510
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11511
  ret void, !dbg !11512
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !11513 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11518, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 0, metadata !11521, metadata !DIExpression()), !dbg !11523
  call void @llvm.dbg.value(metadata i32 0, metadata !11522, metadata !DIExpression()), !dbg !11523
  %2 = icmp eq i32 %0, 0, !dbg !11524
  br i1 %2, label %50, label %3, !dbg !11526

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11527
  %5 = icmp eq i32 %4, 49152, !dbg !11530
  br i1 %5, label %6, label %15, !dbg !11531

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11521, metadata !DIExpression()), !dbg !11523
  %7 = add i32 %0, -64000001, !dbg !11532
  %8 = icmp ult i32 %7, 26000000, !dbg !11532
  br i1 %8, label %15, label %9, !dbg !11532

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11535
  %11 = select i1 %10, i32 0, i32 3, !dbg !11537
  call void @llvm.dbg.value(metadata i32 %11, metadata !11521, metadata !DIExpression()), !dbg !11523
  %12 = add i32 %0, -30000001, !dbg !11538
  %13 = icmp ult i32 %12, 60000000, !dbg !11538
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11538
  call void @llvm.dbg.value(metadata i32 %14, metadata !11521, metadata !DIExpression()), !dbg !11523
  br label %15, !dbg !11538

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11523
  call void @llvm.dbg.value(metadata i32 %16, metadata !11521, metadata !DIExpression()), !dbg !11523
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11541
  %18 = icmp eq i32 %17, 32768, !dbg !11543
  br i1 %18, label %19, label %27, !dbg !11544

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11545
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11548
  br i1 %22, label %27, label %23, !dbg !11548

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11549
  %25 = and i1 %24, %21, !dbg !11552
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11552
  call void @llvm.dbg.value(metadata i32 %26, metadata !11521, metadata !DIExpression()), !dbg !11523
  br label %27, !dbg !11552

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11553
  call void @llvm.dbg.value(metadata i32 %28, metadata !11521, metadata !DIExpression()), !dbg !11523
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !11554
  %30 = icmp eq i32 %29, 16384, !dbg !11556
  br i1 %30, label %31, label %39, !dbg !11557

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11558
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11561
  br i1 %34, label %39, label %35, !dbg !11561

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11562
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11565
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11565
  call void @llvm.dbg.value(metadata i32 %38, metadata !11521, metadata !DIExpression()), !dbg !11523
  br label %39, !dbg !11565

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11553
  call void @llvm.dbg.value(metadata i32 %40, metadata !11521, metadata !DIExpression()), !dbg !11523
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !11566
  call void @llvm.dbg.value(metadata i32 2, metadata !11519, metadata !DIExpression()), !dbg !11523
  br label %41, !dbg !11567

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11553
  call void @llvm.dbg.value(metadata i32 %42, metadata !11519, metadata !DIExpression()), !dbg !11523
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !11568
  call void @llvm.dbg.value(metadata i32 %43, metadata !11520, metadata !DIExpression()), !dbg !11523
  %44 = add nsw i32 %42, -1, !dbg !11570
  call void @llvm.dbg.value(metadata i32 %44, metadata !11519, metadata !DIExpression()), !dbg !11523
  %45 = icmp ne i32 %43, %40, !dbg !11571
  %46 = icmp ne i32 %44, 0, !dbg !11572
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11572
  br i1 %47, label %41, label %48, !dbg !11573, !llvm.loop !11574

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11576
  call void @llvm.dbg.value(metadata i32 %51, metadata !11522, metadata !DIExpression()), !dbg !11523
  ret i32 %51, !dbg !11577
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #16 !dbg !11578 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11580
  %2 = and i32 %1, 49152, !dbg !11580
  ret i32 %2, !dbg !11581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !11582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11584, metadata !DIExpression()), !dbg !11585
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11586
  %3 = and i32 %2, -8, !dbg !11586
  %4 = or i32 %3, %0, !dbg !11586
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11586
  ret void, !dbg !11587
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #16 !dbg !11588 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11589
  %2 = and i32 %1, 7, !dbg !11589
  ret i32 %2, !dbg !11590
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !11591 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11609, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11610, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata i32 0, metadata !11611, metadata !DIExpression()), !dbg !11613
  call void @llvm.dbg.value(metadata i32 0, metadata !11612, metadata !DIExpression()), !dbg !11613
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11614
  %4 = icmp eq i32 %3, 0, !dbg !11616
  br i1 %4, label %5, label %21, !dbg !11617

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !11618
  call void @llvm.dbg.value(metadata i32 %6, metadata !11612, metadata !DIExpression()), !dbg !11613
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #26, !dbg !11620
  %8 = icmp eq i32 %7, 1, !dbg !11622
  br i1 %8, label %13, label %9, !dbg !11623

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.79() #26, !dbg !11624
  br label %10, !dbg !11626

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.78() #26, !dbg !11627
  %12 = icmp eq i32 %11, 1, !dbg !11628
  br i1 %12, label %13, label %10, !dbg !11626, !llvm.loop !11629

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11631
  %15 = load i32, i32* %14, align 4, !dbg !11631
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11632
  %17 = load i32, i32* %16, align 4, !dbg !11632
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11633
  %19 = load i32, i32* %18, align 4, !dbg !11633
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !11634
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !11635
  call void @llvm.dbg.value(metadata i32 %20, metadata !11611, metadata !DIExpression()), !dbg !11613
  br label %21, !dbg !11636

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11637
  call void @llvm.dbg.value(metadata i32 %22, metadata !11611, metadata !DIExpression()), !dbg !11613
  ret i32 %22, !dbg !11638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #16 !dbg !11639 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11643, metadata !DIExpression()), !dbg !11644
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #26, !dbg !11645
  %2 = icmp ne i32 %1, 0, !dbg !11647
  call void @llvm.dbg.value(metadata i1 %2, metadata !11643, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11644
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !11648
  %4 = icmp ne i32 %3, 0, !dbg !11650
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11651
  %6 = zext i1 %5 to i32, !dbg !11651
  call void @llvm.dbg.value(metadata i32 %6, metadata !11643, metadata !DIExpression()), !dbg !11644
  ret i32 %6, !dbg !11652
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #5 !dbg !11653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11657, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11658, metadata !DIExpression()), !dbg !11660
  call void @llvm.dbg.value(metadata i32 0, metadata !11659, metadata !DIExpression()), !dbg !11660
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11661
  %4 = load i32, i32* %3, align 4, !dbg !11661
  %5 = and i32 %4, 63, !dbg !11662
  %6 = udiv i32 %0, %5, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %6, metadata !11659, metadata !DIExpression()), !dbg !11660
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11664
  %8 = load i32, i32* %7, align 4, !dbg !11664
  %9 = and i32 %8, 511, !dbg !11665
  %10 = mul i32 %9, %6, !dbg !11666
  call void @llvm.dbg.value(metadata i32 %10, metadata !11659, metadata !DIExpression()), !dbg !11660
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11667
  %12 = load i32, i32* %11, align 4, !dbg !11667
  %13 = lshr i32 %12, 15, !dbg !11668
  %14 = and i32 %13, 131070, !dbg !11668
  %15 = add nuw nsw i32 %14, 2, !dbg !11668
  %16 = udiv i32 %10, %15, !dbg !11669
  call void @llvm.dbg.value(metadata i32 %16, metadata !11659, metadata !DIExpression()), !dbg !11660
  ret i32 %16, !dbg !11670
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.78() unnamed_addr #16 !dbg !11671 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11672
  %2 = lshr i32 %1, 1, !dbg !11673
  %3 = and i32 %2, 1, !dbg !11673
  ret i32 %3, !dbg !11674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.79() unnamed_addr #15 !dbg !11675 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11676
  %2 = or i32 %1, 1, !dbg !11676
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11676
  ret void, !dbg !11677
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !11678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11680, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 %1, metadata !11681, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 %2, metadata !11682, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 %3, metadata !11683, metadata !DIExpression()), !dbg !11684
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11685
  %6 = and i32 %5, -4227072, !dbg !11685
  %7 = or i32 %1, %0, !dbg !11685
  %8 = shl i32 %2, 6, !dbg !11685
  %9 = or i32 %7, %8, !dbg !11685
  %10 = or i32 %9, %6, !dbg !11685
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11685
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11686
  %12 = and i32 %11, -196609, !dbg !11686
  %13 = or i32 %12, %3, !dbg !11686
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11686
  ret void, !dbg !11687
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !11688 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11692, metadata !DIExpression()), !dbg !11696
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11693, metadata !DIExpression()), !dbg !11696
  call void @llvm.dbg.value(metadata i32 0, metadata !11694, metadata !DIExpression()), !dbg !11696
  call void @llvm.dbg.value(metadata i32 0, metadata !11695, metadata !DIExpression()), !dbg !11696
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11697
  %4 = load i32, i32* %3, align 4, !dbg !11697
  %5 = lshr i32 %4, 4, !dbg !11697
  %6 = and i32 %5, 15, !dbg !11697
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !11697
  %8 = load i8, i8* %7, align 1, !dbg !11697
  %9 = zext i8 %8 to i32, !dbg !11697
  %10 = lshr i32 %0, %9, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %10, metadata !11695, metadata !DIExpression()), !dbg !11696
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !11698
  %12 = icmp ult i32 %11, %10, !dbg !11700
  br i1 %12, label %13, label %16, !dbg !11701

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11702
  call void @llvm.dbg.value(metadata i32 %14, metadata !11694, metadata !DIExpression()), !dbg !11696
  %15 = icmp eq i32 %14, 0, !dbg !11704
  br i1 %15, label %16, label %30, !dbg !11706

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.81() #26, !dbg !11707
  br label %17, !dbg !11709

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.82() #26, !dbg !11710
  %19 = icmp eq i32 %18, 1, !dbg !11711
  br i1 %19, label %20, label %17, !dbg !11709, !llvm.loop !11712

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !11714
  tail call fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %21) #26, !dbg !11715
  tail call fastcc void @LL_RCC_SetSysClkSource.84() #26, !dbg !11716
  br label %22, !dbg !11717

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.85() #26, !dbg !11718
  %24 = icmp eq i32 %23, 8, !dbg !11719
  br i1 %24, label %25, label %22, !dbg !11717, !llvm.loop !11720

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11722
  %27 = load i32, i32* %26, align 4, !dbg !11722
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %27) #26, !dbg !11723
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11724
  %29 = load i32, i32* %28, align 4, !dbg !11724
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %29) #26, !dbg !11725
  br label %30, !dbg !11726

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !11727
  %33 = icmp ugt i32 %32, %10, !dbg !11729
  br i1 %33, label %34, label %36, !dbg !11730

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !11731
  call void @llvm.dbg.value(metadata i32 %35, metadata !11694, metadata !DIExpression()), !dbg !11696
  br label %36, !dbg !11733

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !11696
  call void @llvm.dbg.value(metadata i32 %37, metadata !11694, metadata !DIExpression()), !dbg !11696
  %38 = icmp eq i32 %37, 0, !dbg !11734
  br i1 %38, label %39, label %40, !dbg !11736

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !11737
  br label %40, !dbg !11739

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !11740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.81() unnamed_addr #15 !dbg !11741 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11742
  %2 = or i32 %1, 16777216, !dbg !11742
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11742
  ret void, !dbg !11743
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.82() unnamed_addr #16 !dbg !11744 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11745
  %2 = lshr i32 %1, 25, !dbg !11746
  %3 = and i32 %2, 1, !dbg !11746
  ret i32 %3, !dbg !11747
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.83(i32 noundef %0) unnamed_addr #15 !dbg !11748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11750, metadata !DIExpression()), !dbg !11751
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11752
  %3 = and i32 %2, -241, !dbg !11752
  %4 = or i32 %3, %0, !dbg !11752
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11752
  ret void, !dbg !11753
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.84() unnamed_addr #15 !dbg !11754 {
  call void @llvm.dbg.value(metadata i32 2, metadata !11756, metadata !DIExpression()), !dbg !11757
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11758
  %2 = and i32 %1, -4, !dbg !11758
  %3 = or i32 %2, 2, !dbg !11758
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11758
  ret void, !dbg !11759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.85() unnamed_addr #16 !dbg !11760 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11761
  %2 = and i32 %1, 12, !dbg !11761
  ret i32 %2, !dbg !11762
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.86(i32 noundef %0) unnamed_addr #15 !dbg !11763 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11765, metadata !DIExpression()), !dbg !11766
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11767
  %3 = and i32 %2, -7169, !dbg !11767
  %4 = or i32 %3, %0, !dbg !11767
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11767
  ret void, !dbg !11768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.87(i32 noundef %0) unnamed_addr #15 !dbg !11769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11771, metadata !DIExpression()), !dbg !11772
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11773
  %3 = and i32 %2, -57345, !dbg !11773
  %4 = or i32 %3, %0, !dbg !11773
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11773
  ret void, !dbg !11774
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #16 !dbg !11775 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11776
  %2 = lshr i32 %1, 27, !dbg !11777
  %3 = and i32 %2, 1, !dbg !11777
  ret i32 %3, !dbg !11778
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !11779 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11783, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 %1, metadata !11784, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !11785, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !11786, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 0, metadata !11787, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 0, metadata !11788, metadata !DIExpression()), !dbg !11789
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !11790
  %6 = icmp eq i32 %5, 0, !dbg !11792
  br i1 %6, label %7, label %27, !dbg !11793

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !11794
  call void @llvm.dbg.value(metadata i32 %8, metadata !11788, metadata !DIExpression()), !dbg !11789
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.88() #26, !dbg !11796
  %10 = icmp eq i32 %9, 1, !dbg !11798
  br i1 %10, label %19, label %11, !dbg !11799

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !11800
  br i1 %12, label %13, label %14, !dbg !11803

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !11804
  br label %15, !dbg !11806

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.89() #26, !dbg !11807
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.90() #26, !dbg !11809
  br label %16, !dbg !11810

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.88() #26, !dbg !11811
  %18 = icmp eq i32 %17, 1, !dbg !11812
  br i1 %18, label %19, label %16, !dbg !11810, !llvm.loop !11813

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !11815
  %21 = load i32, i32* %20, align 4, !dbg !11815
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !11816
  %23 = load i32, i32* %22, align 4, !dbg !11816
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !11817
  %25 = load i32, i32* %24, align 4, !dbg !11817
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.80(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !11818
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !11819
  call void @llvm.dbg.value(metadata i32 %26, metadata !11787, metadata !DIExpression()), !dbg !11789
  br label %27, !dbg !11820

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !11821
  call void @llvm.dbg.value(metadata i32 %28, metadata !11787, metadata !DIExpression()), !dbg !11789
  ret i32 %28, !dbg !11822
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.88() unnamed_addr #16 !dbg !11823 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11824
  %2 = lshr i32 %1, 17, !dbg !11825
  %3 = and i32 %2, 1, !dbg !11825
  ret i32 %3, !dbg !11826
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !11827 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11828
  %2 = or i32 %1, 262144, !dbg !11828
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11828
  ret void, !dbg !11829
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.89() unnamed_addr #15 !dbg !11830 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11831
  %2 = and i32 %1, -262145, !dbg !11831
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11831
  ret void, !dbg !11832
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.90() unnamed_addr #15 !dbg !11833 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11834
  %2 = or i32 %1, 65536, !dbg !11834
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11834
  ret void, !dbg !11835
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #22 !dbg !11836 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11839, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.value(metadata i32 undef, metadata !11839, metadata !DIExpression()), !dbg !11855
  call void @llvm.dbg.value(metadata i32 undef, metadata !11839, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !11855
  ret void, !dbg !11856
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !11857 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11861, metadata !DIExpression()), !dbg !11863
  %2 = icmp eq i8* %0, null, !dbg !11864
  br i1 %2, label %29, label %3, !dbg !11866

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !11867
  %5 = icmp eq i8 %4, 0, !dbg !11868
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !11869
  br i1 %6, label %29, label %8, !dbg !11869

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !11862, metadata !DIExpression()), !dbg !11863
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !11870

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !11862, metadata !DIExpression()), !dbg !11863
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !11872
  br i1 %10, label %11, label %15, !dbg !11877

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !11878
  %13 = load i8*, i8** %12, align 4, !dbg !11878
  %14 = icmp eq i8* %13, %0, !dbg !11879
  br i1 %14, label %29, label %15, !dbg !11880

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !11881
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !11862, metadata !DIExpression()), !dbg !11863
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11882
  br i1 %17, label %7, label %8, !dbg !11883, !llvm.loop !11884

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !11862, metadata !DIExpression()), !dbg !11863
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !11886
  br i1 %20, label %21, label %26, !dbg !11890

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !11891
  %23 = load i8*, i8** %22, align 4, !dbg !11891
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !11892
  %25 = icmp eq i32 %24, 0, !dbg !11893
  br i1 %25, label %29, label %26, !dbg !11894

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !11895
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !11862, metadata !DIExpression()), !dbg !11863
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !11896
  br i1 %28, label %29, label %18, !dbg !11870, !llvm.loop !11897

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !11863
  ret %struct.device* %30, !dbg !11899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #5 !dbg !11900 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11904, metadata !DIExpression()), !dbg !11905
  %2 = icmp eq %struct.device* %0, null, !dbg !11906
  br i1 %2, label %14, label %3, !dbg !11908

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !11909
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !11909
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !11910
  %7 = load i8, i8* %6, align 1, !dbg !11910
  %8 = and i8 %7, 1, !dbg !11910
  %9 = icmp eq i8 %8, 0, !dbg !11910
  br i1 %9, label %14, label %10, !dbg !11911

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !11912
  %12 = load i8, i8* %11, align 1, !dbg !11912
  %13 = icmp eq i8 %12, 0, !dbg !11913
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !11905
  ret i1 %15, !dbg !11914
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #4 !dbg !11915 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !11920, metadata !DIExpression()), !dbg !11921
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !11922
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !11923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !11924 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11932, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !11933, metadata !DIExpression()), !dbg !11937
  call void @llvm.dbg.value(metadata i8* %2, metadata !11934, metadata !DIExpression()), !dbg !11937
  %5 = bitcast i32* %4 to i8*, !dbg !11938
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11938
  call void @llvm.dbg.value(metadata i32 0, metadata !11935, metadata !DIExpression()), !dbg !11937
  store i32 0, i32* %4, align 4, !dbg !11939
  call void @llvm.dbg.value(metadata i32* %4, metadata !11935, metadata !DIExpression(DW_OP_deref)), !dbg !11937
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !11940
  call void @llvm.dbg.value(metadata i16* %6, metadata !11936, metadata !DIExpression()), !dbg !11937
  %7 = load i32, i32* %4, align 4, !dbg !11941
  call void @llvm.dbg.value(metadata i32 %7, metadata !11935, metadata !DIExpression()), !dbg !11937
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !11942
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11943
  ret i32 %8, !dbg !11944
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !11945 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11949, metadata !DIExpression()), !dbg !11955
  call void @llvm.dbg.value(metadata i32* %1, metadata !11950, metadata !DIExpression()), !dbg !11955
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !11956
  %4 = load i16*, i16** %3, align 4, !dbg !11956
  call void @llvm.dbg.value(metadata i16* %4, metadata !11951, metadata !DIExpression()), !dbg !11955
  %5 = icmp eq i16* %4, null, !dbg !11957
  br i1 %5, label %14, label %6, !dbg !11958

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !11959
  call void @llvm.dbg.value(metadata i32 %7, metadata !11952, metadata !DIExpression()), !dbg !11959
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !11960
  %9 = load i16, i16* %8, align 2, !dbg !11960
  %10 = add i16 %9, -32767, !dbg !11961
  %11 = icmp ult i16 %10, 2, !dbg !11961
  %12 = add i32 %7, 1, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %12, metadata !11952, metadata !DIExpression()), !dbg !11959
  br i1 %11, label %13, label %6, !dbg !11961, !llvm.loop !11964

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !11967
  br label %14, !dbg !11968

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !11969
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !11970 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !11974, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 %1, metadata !11975, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !11976, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i8* %3, metadata !11977, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.value(metadata i32 0, metadata !11978, metadata !DIExpression()), !dbg !11986
  %5 = icmp eq i32 %1, 0, !dbg !11987
  br i1 %5, label %16, label %8, !dbg !11988

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !11978, metadata !DIExpression()), !dbg !11986
  %7 = icmp eq i32 %15, %1, !dbg !11987
  br i1 %7, label %16, label %8, !dbg !11988, !llvm.loop !11989

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11978, metadata !DIExpression()), !dbg !11986
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !11991
  %11 = load i16, i16* %10, align 2, !dbg !11991
  call void @llvm.dbg.value(metadata i16 %11, metadata !11980, metadata !DIExpression()), !dbg !11992
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !11993
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !11983, metadata !DIExpression()), !dbg !11992
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %13, metadata !11984, metadata !DIExpression()), !dbg !11992
  %14 = icmp slt i32 %13, 0, !dbg !11995
  %15 = add nuw i32 %9, 1, !dbg !11997
  call void @llvm.dbg.value(metadata i32 %15, metadata !11978, metadata !DIExpression()), !dbg !11986
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !11998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #11 !dbg !11999 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12003, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12004, metadata !DIExpression()), !dbg !12006
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12005, metadata !DIExpression()), !dbg !12006
  %2 = sext i16 %0 to i32, !dbg !12007
  %3 = icmp slt i16 %0, 1, !dbg !12009
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12010
  %6 = add nsw i32 %2, -1, !dbg !12010
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12010
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12010
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12004, metadata !DIExpression()), !dbg !12006
  ret %struct.device* %8, !dbg !12011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12012 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12014, metadata !DIExpression()), !dbg !12019
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12015, metadata !DIExpression()), !dbg !12019
  call void @llvm.dbg.value(metadata i8* %2, metadata !12016, metadata !DIExpression()), !dbg !12019
  %5 = bitcast i32* %4 to i8*, !dbg !12020
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12020
  call void @llvm.dbg.value(metadata i32 0, metadata !12017, metadata !DIExpression()), !dbg !12019
  store i32 0, i32* %4, align 4, !dbg !12021
  call void @llvm.dbg.value(metadata i32* %4, metadata !12017, metadata !DIExpression(DW_OP_deref)), !dbg !12019
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !12022
  call void @llvm.dbg.value(metadata i16* %6, metadata !12018, metadata !DIExpression()), !dbg !12019
  %7 = load i32, i32* %4, align 4, !dbg !12023
  call void @llvm.dbg.value(metadata i32 %7, metadata !12017, metadata !DIExpression()), !dbg !12019
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !12024
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !12025
  ret i32 %8, !dbg !12026
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !12027 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12029, metadata !DIExpression()), !dbg !12034
  call void @llvm.dbg.value(metadata i32* %1, metadata !12030, metadata !DIExpression()), !dbg !12034
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12035
  %4 = load i16*, i16** %3, align 4, !dbg !12035
  call void @llvm.dbg.value(metadata i16* %4, metadata !12031, metadata !DIExpression()), !dbg !12034
  call void @llvm.dbg.value(metadata i32 0, metadata !12032, metadata !DIExpression()), !dbg !12034
  call void @llvm.dbg.value(metadata i32 0, metadata !12033, metadata !DIExpression()), !dbg !12034
  %5 = icmp eq i16* %4, null, !dbg !12036
  br i1 %5, label %22, label %6, !dbg !12038

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12032, metadata !DIExpression()), !dbg !12034
  call void @llvm.dbg.value(metadata i16* %8, metadata !12031, metadata !DIExpression()), !dbg !12034
  %9 = load i16, i16* %8, align 2, !dbg !12039
  %10 = icmp eq i16 %9, -32768, !dbg !12043
  call void @llvm.dbg.value(metadata i32 undef, metadata !12032, metadata !DIExpression()), !dbg !12034
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12044
  call void @llvm.dbg.value(metadata i16* %11, metadata !12031, metadata !DIExpression()), !dbg !12034
  %12 = zext i1 %10 to i32, !dbg !12045
  %13 = add i32 %7, %12, !dbg !12045
  call void @llvm.dbg.value(metadata i32 %13, metadata !12032, metadata !DIExpression()), !dbg !12034
  %14 = icmp eq i32 %13, 2, !dbg !12046
  br i1 %14, label %15, label %6, !dbg !12047

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12034
  call void @llvm.dbg.value(metadata i32 %16, metadata !12033, metadata !DIExpression()), !dbg !12034
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12048
  %18 = load i16, i16* %17, align 2, !dbg !12048
  %19 = icmp eq i16 %18, 32767, !dbg !12049
  %20 = add i32 %16, 1, !dbg !12050
  call void @llvm.dbg.value(metadata i32 %20, metadata !12033, metadata !DIExpression()), !dbg !12034
  br i1 %19, label %21, label %15, !dbg !12052, !llvm.loop !12053

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12055
  br label %22, !dbg !12056

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12057
  call void @llvm.dbg.value(metadata i16* %23, metadata !12031, metadata !DIExpression()), !dbg !12034
  ret i16* %23, !dbg !12058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #5 !dbg !12059 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12062
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !12063
  ret i32* %2, !dbg !12064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #11 !dbg !12065 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12213, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12214, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12215, metadata !DIExpression()), !dbg !12216
  ret void, !dbg !12217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12222, metadata !DIExpression()), !dbg !12224
  call void @llvm.dbg.value(metadata i32 %1, metadata !12223, metadata !DIExpression()), !dbg !12224
  ret void, !dbg !12225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #11 !dbg !12226 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12230, metadata !DIExpression()), !dbg !12232
  call void @llvm.dbg.value(metadata i32 %1, metadata !12231, metadata !DIExpression()), !dbg !12232
  ret void, !dbg !12233
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12234 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12238, metadata !DIExpression()), !dbg !12240
  call void @llvm.dbg.value(metadata i8* %1, metadata !12239, metadata !DIExpression()), !dbg !12240
  ret i32 -134, !dbg !12241
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12246, metadata !DIExpression()), !dbg !12248
  call void @llvm.dbg.value(metadata i8* %1, metadata !12247, metadata !DIExpression()), !dbg !12248
  ret i32 -134, !dbg !12249
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12250 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12253, metadata !DIExpression()), !dbg !12254
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12255, !srcloc !12261
  call void @llvm.dbg.value(metadata i32 undef, metadata !12258, metadata !DIExpression()) #25, !dbg !12262
  call void @llvm.dbg.value(metadata i32 undef, metadata !12259, metadata !DIExpression()) #25, !dbg !12262
  br label %3, !dbg !12263

3:                                                ; preds = %3, %1
  br label %3, !dbg !12264, !llvm.loop !12267
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12270 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12274, metadata !DIExpression()), !dbg !12276
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12275, metadata !DIExpression()), !dbg !12276
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12277
  unreachable, !dbg !12277
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #8 !dbg !12278 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12280, metadata !DIExpression()), !dbg !12281
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !12282
  unreachable, !dbg !12282
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12283 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12285, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12286, metadata !DIExpression()), !dbg !12289
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12290, !srcloc !12261
  call void @llvm.dbg.value(metadata i32 undef, metadata !12258, metadata !DIExpression()) #25, !dbg !12292
  call void @llvm.dbg.value(metadata i32 undef, metadata !12259, metadata !DIExpression()) #25, !dbg !12292
  call void @llvm.dbg.value(metadata i32 undef, metadata !12287, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12288, metadata !DIExpression()), !dbg !12289
  %4 = icmp eq %struct.__esf* %1, null, !dbg !12293
  br i1 %4, label %6, label %5, !dbg !12295

5:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !12296
  br label %7, !dbg !12297

6:                                                ; preds = %2
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !12296
  br label %7, !dbg !12300

7:                                                ; preds = %6, %5
  %8 = extractvalue { i32, i32 } %3, 0, !dbg !12290
  call void @llvm.dbg.value(metadata i32 %8, metadata !12258, metadata !DIExpression()) #25, !dbg !12292
  call void @llvm.dbg.value(metadata i32 %8, metadata !12287, metadata !DIExpression()), !dbg !12289
  %9 = tail call fastcc %struct.k_thread* @k_current_get.97() #28, !dbg !12302
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !12288, metadata !DIExpression()), !dbg !12289
  call void @llvm.dbg.value(metadata i32 undef, metadata !12303, metadata !DIExpression()) #25, !dbg !12306
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !12308, !srcloc !12309
  tail call fastcc void @k_thread_abort.98(%struct.k_thread* noundef %9) #26, !dbg !12310
  ret void, !dbg !12313
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.97() unnamed_addr #9 !dbg !12314 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.99() #28, !dbg !12318
  ret %struct.k_thread* %1, !dbg !12319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.98(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12320 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12324, metadata !DIExpression()), !dbg !12325
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12326, !srcloc !12328
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !12329
  ret void, !dbg !12330
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.99() unnamed_addr #9 !dbg !12331 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12332, !srcloc !12334
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !12335
  ret %struct.k_thread* %1, !dbg !12336
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12337 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12341, metadata !DIExpression()), !dbg !12344
  call void @llvm.dbg.value(metadata i32 %1, metadata !12342, metadata !DIExpression()), !dbg !12344
  call void @llvm.dbg.value(metadata i32 %2, metadata !12343, metadata !DIExpression()), !dbg !12344
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !12345
  ret void, !dbg !12346
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12347 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12351, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i8* %1, metadata !12352, metadata !DIExpression()), !dbg !12354
  call void @llvm.dbg.value(metadata i32 %2, metadata !12353, metadata !DIExpression()), !dbg !12354
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !12355
  ret void, !dbg !12356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12357 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !12358
  ret void, !dbg !12359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12362, metadata !DIExpression()), !dbg !12363
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !12364
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12365
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12366
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12367
  %4 = trunc i32 %0 to i8, !dbg !12368
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12369
  store i8 %4, i8* %5, align 4, !dbg !12370
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12371
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !12372
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12373
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12374
  store i8* %8, i8** %9, align 4, !dbg !12375
  ret void, !dbg !12376
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12379, metadata !DIExpression()), !dbg !12385
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12386
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12380, metadata !DIExpression()), !dbg !12385
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12387
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12381, metadata !DIExpression()), !dbg !12385
  call void @llvm.dbg.value(metadata i8* null, metadata !12384, metadata !DIExpression()), !dbg !12385
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12388
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12389
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !12390
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !12391
  ret void, !dbg !12392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12393 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12397, metadata !DIExpression()), !dbg !12398
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12399
  ret i8* %2, !dbg !12400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !12401 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12406, metadata !DIExpression()), !dbg !12407
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12408
  %3 = load i8, i8* %2, align 1, !dbg !12409
  %4 = and i8 %3, -5, !dbg !12409
  store i8 %4, i8* %2, align 1, !dbg !12409
  ret void, !dbg !12410
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #8 !dbg !12411 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !12414
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !12415
  %3 = ptrtoint i8* %2 to i32, !dbg !12424
  %4 = add i32 %3, 2048, !dbg !12425
  call void @llvm.dbg.value(metadata i32 %4, metadata !12419, metadata !DIExpression()) #25, !dbg !12426
  call void @llvm.dbg.value(metadata i32 %4, metadata !12427, metadata !DIExpression()) #25, !dbg !12430
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !12432, !srcloc !12433
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12434
  %6 = or i32 %5, 512, !dbg !12434
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12434
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -2, i32 noundef 255) #27, !dbg !12435
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -5, i32 noundef 0) #27, !dbg !12438
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -12, i32 noundef 0) #27, !dbg !12439
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -11, i32 noundef 0) #27, !dbg !12440
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -10, i32 noundef 0) #27, !dbg !12441
  tail call fastcc void @__NVIC_SetPriority.106(i32 noundef -4, i32 noundef 0) #27, !dbg !12442
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12443
  %8 = or i32 %7, 458752, !dbg !12443
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12443
  tail call void @z_arm_fault_init() #27, !dbg !12444
  tail call void @z_arm_cpu_idle_init() #27, !dbg !12445
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12446
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12449
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !12450
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !12451
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12452
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !12452
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12413, metadata !DIExpression()), !dbg !12453
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !12454
  call void @z_device_state_init() #27, !dbg !12455
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !12456
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !12457
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !12458
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !12459
  unreachable, !dbg !12459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2081, metadata !DIExpression()), !dbg !12460
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12461
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12461
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2082, metadata !DIExpression()), !dbg !12460
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2082, metadata !DIExpression()), !dbg !12460
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12462
  br i1 %7, label %8, label %35, !dbg !12463

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2082, metadata !DIExpression()), !dbg !12460
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12464
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12464
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2092, metadata !DIExpression()), !dbg !12465
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12466
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12466
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !12467
  call void @llvm.dbg.value(metadata i32 %14, metadata !2096, metadata !DIExpression()), !dbg !12465
  %15 = icmp eq %struct.device* %11, null, !dbg !12468
  br i1 %15, label %32, label %16, !dbg !12470

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12471
  br i1 %17, label %26, label %18, !dbg !12474

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12475
  call void @llvm.dbg.value(metadata i32 %19, metadata !2096, metadata !DIExpression()), !dbg !12465
  %20 = icmp ult i32 %19, 255, !dbg !12477
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12477
  call void @llvm.dbg.value(metadata i32 %21, metadata !2096, metadata !DIExpression()), !dbg !12465
  %22 = trunc i32 %21 to i8, !dbg !12478
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12479
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12479
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12480
  store i8 %22, i8* %25, align 1, !dbg !12481
  br label %26, !dbg !12482

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12483
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12483
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12484
  %30 = load i8, i8* %29, align 1, !dbg !12485
  %31 = or i8 %30, 1, !dbg !12485
  store i8 %31, i8* %29, align 1, !dbg !12485
  br label %32, !dbg !12486

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12487
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2082, metadata !DIExpression()), !dbg !12460
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12462
  br i1 %34, label %8, label %35, !dbg !12463, !llvm.loop !12488

35:                                               ; preds = %32, %1
  ret void, !dbg !12490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.106(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12493, metadata !DIExpression()), !dbg !12495
  call void @llvm.dbg.value(metadata i32 %1, metadata !12494, metadata !DIExpression()), !dbg !12495
  %3 = trunc i32 %1 to i8, !dbg !12496
  %4 = shl i8 %3, 4, !dbg !12496
  %5 = and i32 %0, 15, !dbg !12499
  %6 = add nsw i32 %5, -4, !dbg !12500
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12501
  store volatile i8 %4, i8* %7, align 1, !dbg !12502
  ret void, !dbg !12503
}

; Function Attrs: optsize
declare !dbg !12504 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #4 !dbg !12505 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12508, metadata !DIExpression()), !dbg !12509
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12510
  store i8 1, i8* %2, align 1, !dbg !12511
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12512
  store i8 1, i8* %3, align 4, !dbg !12513
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12514
  store i32 0, i32* %4, align 4, !dbg !12515
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12516
  store i32 0, i32* %5, align 4, !dbg !12517
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12518
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12519
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12520
  ret void, !dbg !12521
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12522 {
  tail call void @z_sched_init() #27, !dbg !12527
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12528
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i32 0, i32 0)) #27, !dbg !12529
  call void @llvm.dbg.value(metadata i8* %1, metadata !12526, metadata !DIExpression()), !dbg !12530
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !12531
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !12532
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !12533
  ret i8* %1, !dbg !12534
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #8 !dbg !12535 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12537, metadata !DIExpression()), !dbg !12538
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !12539
  unreachable, !dbg !12540
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12541 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12543, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i8* %1, metadata !12544, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.value(metadata i8* %2, metadata !12545, metadata !DIExpression()), !dbg !12546
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12547
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !12548
  tail call void @boot_banner() #27, !dbg !12549
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !12550
  tail call void @z_init_static_threads() #27, !dbg !12551
  tail call void @main() #27, !dbg !12552
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12553
  %5 = and i8 %4, -2, !dbg !12553
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12553
  ret void, !dbg !12554
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12555 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12565, metadata !DIExpression()), !dbg !12567
  call void @llvm.dbg.value(metadata i8* %1, metadata !12566, metadata !DIExpression()), !dbg !12567
  ret void, !dbg !12568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #11 !dbg !12569 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12571, metadata !DIExpression()), !dbg !12573
  call void @llvm.dbg.value(metadata i8* %1, metadata !12572, metadata !DIExpression()), !dbg !12573
  ret void, !dbg !12574
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12575 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !12576, !srcloc !12583
  call void @llvm.dbg.value(metadata i32 %1, metadata !12579, metadata !DIExpression()) #25, !dbg !12584
  %2 = icmp ne i32 %1, 0, !dbg !12585
  ret i1 %2, !dbg !12586
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #7 !dbg !12587 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12588
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12589
  %3 = load i8, i8* %2, align 4, !dbg !12590
  %4 = or i8 %3, 1, !dbg !12590
  store i8 %4, i8* %2, align 4, !dbg !12590
  ret void, !dbg !12591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #7 !dbg !12592 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12593
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12594
  %3 = load i8, i8* %2, align 4, !dbg !12595
  %4 = and i8 %3, -2, !dbg !12595
  store i8 %4, i8* %2, align 4, !dbg !12595
  ret void, !dbg !12596
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #5 !dbg !12597 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12598
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !12599
  %3 = load i8, i8* %2, align 4, !dbg !12599
  %4 = and i8 %3, 1, !dbg !12600
  %5 = icmp ne i8 %4, 0, !dbg !12601
  ret i1 %5, !dbg !12602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #11 !dbg !12603 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12607, metadata !DIExpression()), !dbg !12609
  call void @llvm.dbg.value(metadata i8* %1, metadata !12608, metadata !DIExpression()), !dbg !12609
  ret i32 -88, !dbg !12610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !12611 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12615, metadata !DIExpression()), !dbg !12616
  ret i8* null, !dbg !12617
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #11 !dbg !12618 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12622, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i8* %1, metadata !12623, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata i32 %2, metadata !12624, metadata !DIExpression()), !dbg !12625
  ret i32 -88, !dbg !12626
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2217, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i8* %1, metadata !2218, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 %2, metadata !2219, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 0, metadata !2220, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i8 undef, metadata !2222, metadata !DIExpression()), !dbg !12627
  %4 = icmp eq i8* %1, null, !dbg !12628
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !12630
  br i1 %6, label %46, label %7, !dbg !12630

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12631
  %9 = load i8, i8* %8, align 1, !dbg !12631
  call void @llvm.dbg.value(metadata i8 %9, metadata !2222, metadata !DIExpression()), !dbg !12627
  %10 = add i32 %2, -1, !dbg !12632
  call void @llvm.dbg.value(metadata i32 %10, metadata !2219, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i8 0, metadata !2223, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i8 %9, metadata !2222, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 0, metadata !2220, metadata !DIExpression()), !dbg !12627
  %11 = icmp eq i8 %9, 0, !dbg !12634
  br i1 %11, label %12, label %15, !dbg !12636

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !12637
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !12638
  store i8 0, i8* %14, align 1, !dbg !12639
  br label %46, !dbg !12640

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2223, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i8 %17, metadata !2222, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 %18, metadata !2220, metadata !DIExpression()), !dbg !12627
  %19 = zext i8 %17 to i32, !dbg !12641
  %20 = zext i8 %16 to i32, !dbg !12642
  %21 = shl nuw i32 1, %20, !dbg !12642
  call void @llvm.dbg.value(metadata i32 %21, metadata !2221, metadata !DIExpression()), !dbg !12627
  %22 = and i32 %21, %19, !dbg !12644
  %23 = icmp eq i32 %22, 0, !dbg !12646
  br i1 %23, label %42, label %24, !dbg !12647

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !12648
  %26 = sub i32 %10, %18, !dbg !12649
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !12650
  %28 = load i8*, i8** %27, align 4, !dbg !12650
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !12651
  %30 = load i32, i32* %29, align 4, !dbg !12651
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !12652
  %32 = add i32 %31, %18, !dbg !12653
  call void @llvm.dbg.value(metadata i32 %32, metadata !2220, metadata !DIExpression()), !dbg !12627
  %33 = trunc i32 %21 to i8, !dbg !12654
  %34 = xor i8 %33, -1, !dbg !12654
  %35 = and i8 %17, %34, !dbg !12654
  call void @llvm.dbg.value(metadata i8 %35, metadata !2222, metadata !DIExpression()), !dbg !12627
  %36 = icmp eq i8 %35, 0, !dbg !12655
  br i1 %36, label %12, label %37, !dbg !12657

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !12658
  %39 = sub i32 %10, %32, !dbg !12660
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0), i32 noundef 1) #26, !dbg !12661
  %41 = add i32 %40, %32, !dbg !12662
  call void @llvm.dbg.value(metadata i32 %41, metadata !2220, metadata !DIExpression()), !dbg !12627
  br label %42, !dbg !12663

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !12627
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !12627
  call void @llvm.dbg.value(metadata i8 %44, metadata !2222, metadata !DIExpression()), !dbg !12627
  call void @llvm.dbg.value(metadata i32 %43, metadata !2220, metadata !DIExpression()), !dbg !12627
  %45 = add i8 %16, 1, !dbg !12664
  call void @llvm.dbg.value(metadata i8 %45, metadata !2223, metadata !DIExpression()), !dbg !12633
  br label %15, !dbg !12636

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.108, i32 0, i32 0), %3 ], !dbg !12627
  ret i8* %47, !dbg !12665
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !12666 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12670, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i32 %1, metadata !12671, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i8* %2, metadata !12672, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.value(metadata i32 %3, metadata !12673, metadata !DIExpression()), !dbg !12675
  %5 = icmp ult i32 %1, %3, !dbg !12676
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !12676
  call void @llvm.dbg.value(metadata i32 %6, metadata !12674, metadata !DIExpression()), !dbg !12675
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !12677
  ret i32 %6, !dbg !12678
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !12679 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12683, metadata !DIExpression()), !dbg !12684
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !12685
  ret void, !dbg !12686
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !12687 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12696, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12697, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i32 %2, metadata !12698, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12699, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i8* %4, metadata !12700, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i8* %5, metadata !12701, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i8* %6, metadata !12702, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i32 %7, metadata !12703, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i32 %8, metadata !12704, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.value(metadata i8* undef, metadata !12705, metadata !DIExpression()), !dbg !12707
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !12708
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %11) #26, !dbg !12709
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !12710
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !12711
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !12712
  call void @llvm.dbg.value(metadata i8* %13, metadata !12706, metadata !DIExpression()), !dbg !12707
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !12713
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !12714
  store i8* null, i8** %14, align 4, !dbg !12715
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12716
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !12716
  br i1 %16, label %20, label %17, !dbg !12718

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !12719
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !12719
  br label %20, !dbg !12720

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !12707
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !12721
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !12723
  ret i8* %13, !dbg !12724
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !12725 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !12730, metadata !DIExpression()), !dbg !12731
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !12732
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !12733
  ret void, !dbg !12734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !12735 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12740, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata i32 %1, metadata !12741, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata i32 %2, metadata !12742, metadata !DIExpression()), !dbg !12744
  call void @llvm.dbg.value(metadata i32 %3, metadata !12743, metadata !DIExpression()), !dbg !12744
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !12745
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !12746
  %6 = trunc i32 %3 to i8, !dbg !12747
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !12748
  store i8 %6, i8* %7, align 4, !dbg !12749
  %8 = trunc i32 %2 to i8, !dbg !12750
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !12751
  store i8 %8, i8* %9, align 1, !dbg !12752
  %10 = trunc i32 %1 to i8, !dbg !12753
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !12754
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !12754
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !12754
  store i8 %10, i8* %13, align 2, !dbg !12755
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !12756
  store i8 0, i8* %14, align 1, !dbg !12757
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !12758
  ret void, !dbg !12759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !12760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12764, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12765, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.value(metadata i32 %2, metadata !12766, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.value(metadata i32 0, metadata !12771, metadata !DIExpression()), !dbg !12772
  %4 = add i32 %2, 7, !dbg !12773
  %5 = and i32 %4, -8, !dbg !12773
  %6 = add i32 %5, 64, !dbg !12773
  call void @llvm.dbg.value(metadata i32 %6, metadata !12767, metadata !DIExpression()), !dbg !12772
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.118(%struct.z_thread_stack_element* noundef %1) #26, !dbg !12775
  call void @llvm.dbg.value(metadata i8* %7, metadata !12770, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.value(metadata i32 %5, metadata !12768, metadata !DIExpression()), !dbg !12772
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !12776
  call void @llvm.dbg.value(metadata i8* %8, metadata !12769, metadata !DIExpression()), !dbg !12772
  call void @llvm.dbg.value(metadata i32 0, metadata !12771, metadata !DIExpression()), !dbg !12772
  %9 = ptrtoint i8* %7 to i32, !dbg !12777
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !12778
  store i32 %9, i32* %10, align 4, !dbg !12779
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !12780
  store i32 %5, i32* %11, align 4, !dbg !12781
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !12782
  store i32 0, i32* %12, align 4, !dbg !12783
  call void @llvm.dbg.value(metadata i8* %8, metadata !12769, metadata !DIExpression()), !dbg !12772
  ret i8* %8, !dbg !12784
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.118(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #11 !dbg !12785 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12789, metadata !DIExpression()), !dbg !12790
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12791
  ret i8* %2, !dbg !12792
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12793 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !12798, metadata !DIExpression()), !dbg !12799
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !12800
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !12801
  ret void, !dbg !12802
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12803 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !12805, metadata !DIExpression()), !dbg !12806
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !12807
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !12808
  ret void, !dbg !12809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !12810 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12814, metadata !DIExpression()), !dbg !12815
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12816
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !12817
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12818
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !12819
  ret void, !dbg !12820
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !12821 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !12826, metadata !DIExpression()), !dbg !12827
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !12828
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !12829
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !12830
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !12831
  ret void, !dbg !12832
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !12833 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !12850, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12841, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !12842, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i32 %2, metadata !12843, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !12844, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i8* %4, metadata !12845, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i8* %5, metadata !12846, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i8* %6, metadata !12847, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i32 %7, metadata !12848, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.value(metadata i32 %8, metadata !12849, metadata !DIExpression()), !dbg !12851
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !12852
  %13 = icmp eq i64 %11, -1, !dbg !12853
  br i1 %13, label %15, label %14, !dbg !12855

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !12856
  br label %15, !dbg !12858

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !12859
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12860 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !12865, metadata !DIExpression()), !dbg !12866
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12864, metadata !DIExpression()), !dbg !12866
  %4 = icmp eq i64 %3, 0, !dbg !12867
  br i1 %4, label %5, label %6, !dbg !12869

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12870
  br label %7, !dbg !12872

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !12873
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !12875
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12876 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12880, metadata !DIExpression()), !dbg !12881
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12882, !srcloc !12884
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !12885
  ret void, !dbg !12886
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !12887 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !12890, metadata !DIExpression()), !dbg !12891
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12889, metadata !DIExpression()), !dbg !12891
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !12892
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !12893
  ret void, !dbg !12894
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !12895 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12897, metadata !DIExpression()), !dbg !12917
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !12918

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !12919
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12915, metadata !DIExpression()), !dbg !12920
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !12921

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !12897, metadata !DIExpression()), !dbg !12917
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !12922
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12922
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !12925
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !12925
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !12926
  %9 = load i32, i32* %8, align 4, !dbg !12926
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !12927
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !12927
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !12928
  %13 = load i8*, i8** %12, align 4, !dbg !12928
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !12929
  %15 = load i8*, i8** %14, align 4, !dbg !12929
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !12930
  %17 = load i8*, i8** %16, align 4, !dbg !12930
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !12931
  %19 = load i32, i32* %18, align 4, !dbg !12931
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !12932
  %21 = load i32, i32* %20, align 4, !dbg !12932
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !12933
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !12934
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !12935
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !12936
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !12936
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !12937
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !12897, metadata !DIExpression()), !dbg !12917
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12938
  br i1 %27, label %2, label %1, !dbg !12918, !llvm.loop !12940

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !12919
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !12915, metadata !DIExpression()), !dbg !12920
  br label %29, !dbg !12921

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !12942
  ret void, !dbg !12943

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !12915, metadata !DIExpression()), !dbg !12920
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !12944
  %33 = load i32, i32* %32, align 4, !dbg !12944
  %34 = icmp eq i32 %33, -1, !dbg !12948
  br i1 %34, label %43, label %35, !dbg !12949

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !12950
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !12950
  %38 = icmp sgt i32 %33, 0, !dbg !12952
  %39 = select i1 %38, i32 %33, i32 0, !dbg !12952
  %40 = zext i32 %39 to i64, !dbg !12952
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !12952
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !12953
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !12953
  br label %43, !dbg !12954

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !12955
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !12915, metadata !DIExpression()), !dbg !12920
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !12956
  br i1 %45, label %30, label %29, !dbg !12921, !llvm.loop !12958
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !12960 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !12965, metadata !DIExpression()), !dbg !12966
  call void @llvm.dbg.value(metadata i64 %0, metadata !12967, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 1000, metadata !12972, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 10000, metadata !12973, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i8 1, metadata !12974, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i8 0, metadata !12975, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i8 1, metadata !12976, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i8 0, metadata !12977, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i8 1, metadata !12978, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i8 0, metadata !12979, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i64 0, metadata !12980, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i64 0, metadata !12980, metadata !DIExpression()), !dbg !12984
  %2 = mul i64 %0, 10, !dbg !12986
  ret i64 %2, !dbg !12992
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #8 !dbg !12993 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !12995, metadata !DIExpression()), !dbg !12999
  call void @llvm.dbg.value(metadata i8* %1, metadata !12996, metadata !DIExpression()), !dbg !12999
  call void @llvm.dbg.value(metadata i8* %2, metadata !12997, metadata !DIExpression()), !dbg !12999
  call void @llvm.dbg.value(metadata i8* %3, metadata !12998, metadata !DIExpression()), !dbg !12999
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13000
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13001
  %7 = load i8, i8* %6, align 4, !dbg !13002
  %8 = or i8 %7, 4, !dbg !13002
  store i8 %8, i8* %6, align 4, !dbg !13002
  tail call void @z_thread_essential_clear() #26, !dbg !13003
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !13004
  unreachable, !dbg !13004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #11 !dbg !13005 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13009, metadata !DIExpression()), !dbg !13010
  ret i32 -134, !dbg !13011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #11 !dbg !13012 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13016, metadata !DIExpression()), !dbg !13018
  call void @llvm.dbg.value(metadata i32 %1, metadata !13017, metadata !DIExpression()), !dbg !13018
  ret i32 -134, !dbg !13019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #11 !dbg !13020 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13027, metadata !DIExpression()), !dbg !13029
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !13028, metadata !DIExpression()), !dbg !13029
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13030
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !13032
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13029
  ret i32 %6, !dbg !13033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #11 !dbg !13034 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13038, metadata !DIExpression()), !dbg !13039
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !13040
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13039
  ret i32 %3, !dbg !13042
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13043 {
  tail call void @sys_clock_idle_exit() #27, !dbg !13045
  ret void, !dbg !13046
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #8 !dbg !13047 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13049, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.value(metadata i8* %1, metadata !13050, metadata !DIExpression()), !dbg !13052
  call void @llvm.dbg.value(metadata i8* %2, metadata !13051, metadata !DIExpression()), !dbg !13052
  br label %4, !dbg !13053

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13054, !srcloc !13061
  call void @llvm.dbg.value(metadata i32 undef, metadata !13057, metadata !DIExpression()) #25, !dbg !13062
  call void @llvm.dbg.value(metadata i32 undef, metadata !13058, metadata !DIExpression()) #25, !dbg !13062
  tail call fastcc void @k_cpu_idle() #26, !dbg !13063
  br label %4, !dbg !13053, !llvm.loop !13064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13066 {
  tail call void @arch_cpu_idle() #27, !dbg !13067
  ret void, !dbg !13068
}

; Function Attrs: optsize
declare !dbg !13069 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #4 !dbg !13070 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13088, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i8* %1, metadata !13089, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 %2, metadata !13090, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 %3, metadata !13091, metadata !DIExpression()), !dbg !13092
  %5 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13093
  store i32 %2, i32* %5, align 4, !dbg !13094
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13095
  store i32 %3, i32* %6, align 4, !dbg !13096
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13097
  store i8* %1, i8** %7, align 4, !dbg !13098
  %8 = mul i32 %3, %2, !dbg !13099
  %9 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !13100
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13101
  store i8* %9, i8** %10, align 4, !dbg !13102
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13103
  store i8* %1, i8** %11, align 4, !dbg !13104
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13105
  store i8* %1, i8** %12, align 4, !dbg !13106
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13107
  store i32 0, i32* %13, align 4, !dbg !13108
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13109
  store i8 0, i8* %14, align 4, !dbg !13110
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13111
  tail call fastcc void @z_waitq_init.123(%struct._wait_q_t* noundef %15) #26, !dbg !13112
  ret void, !dbg !13113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.123(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !13114 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13118, metadata !DIExpression()), !dbg !13119
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13120
  tail call fastcc void @sys_dlist_init.124(%struct._dnode* noundef %2) #26, !dbg !13121
  ret void, !dbg !13122
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.124(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !13123 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13128, metadata !DIExpression()), !dbg !13129
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13130
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13131
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13132
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13133
  ret void, !dbg !13134
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_alloc_init(%struct.k_msgq* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13135 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13139, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 %1, metadata !13140, metadata !DIExpression()), !dbg !13145
  call void @llvm.dbg.value(metadata i32 %2, metadata !13141, metadata !DIExpression()), !dbg !13145
  %5 = bitcast i32* %4 to i8*, !dbg !13146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13146
  call void @llvm.dbg.value(metadata i32* %4, metadata !13144, metadata !DIExpression(DW_OP_deref)), !dbg !13145
  %6 = call fastcc zeroext i1 @size_mul_overflow(i32 noundef %1, i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !13147
  br i1 %6, label %13, label %7, !dbg !13149

7:                                                ; preds = %3
  %8 = load i32, i32* %4, align 4, !dbg !13150
  call void @llvm.dbg.value(metadata i32 %8, metadata !13144, metadata !DIExpression()), !dbg !13145
  %9 = tail call fastcc i8* @z_thread_malloc(i32 noundef %8) #26, !dbg !13152
  call void @llvm.dbg.value(metadata i8* %9, metadata !13142, metadata !DIExpression()), !dbg !13145
  %10 = icmp eq i8* %9, null, !dbg !13153
  br i1 %10, label %13, label %11, !dbg !13155

11:                                               ; preds = %7
  tail call void @k_msgq_init(%struct.k_msgq* noundef %0, i8* noundef nonnull %9, i32 noundef %1, i32 noundef %2) #26, !dbg !13156
  %12 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13158
  store i8 1, i8* %12, align 4, !dbg !13159
  call void @llvm.dbg.value(metadata i32 0, metadata !13143, metadata !DIExpression()), !dbg !13145
  br label %13, !dbg !13160

13:                                               ; preds = %7, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -22, %3 ], [ -12, %7 ], !dbg !13161
  call void @llvm.dbg.value(metadata i32 %14, metadata !13143, metadata !DIExpression()), !dbg !13145
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !13162
  ret i32 %14, !dbg !13163
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn writeonly
define internal fastcc zeroext i1 @size_mul_overflow(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) unnamed_addr #23 !dbg !13164 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13169, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i32 %1, metadata !13170, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.value(metadata i32* %2, metadata !13171, metadata !DIExpression()), !dbg !13172
  %4 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %0, i32 %1), !dbg !13173
  %5 = extractvalue { i32, i1 } %4, 1, !dbg !13173
  %6 = extractvalue { i32, i1 } %4, 0, !dbg !13173
  store i32 %6, i32* %2, align 4, !dbg !13173
  ret i1 %5, !dbg !13174
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @z_thread_malloc(i32 noundef %0) unnamed_addr #1 !dbg !13175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13179, metadata !DIExpression()), !dbg !13180
  %2 = tail call i8* @z_thread_aligned_alloc(i32 noundef 0, i32 noundef %0) #27, !dbg !13181
  ret i8* %2, !dbg !13182
}

; Function Attrs: optsize
declare !dbg !13183 dso_local i8* @z_thread_aligned_alloc(i32 noundef, i32 noundef) local_unnamed_addr #0

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @k_msgq_cleanup(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13186 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13190, metadata !DIExpression()), !dbg !13191
  %2 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13192
  %3 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef %2) #26, !dbg !13192
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !13192
  br i1 %4, label %5, label %15, !dbg !13194

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 9, !dbg !13195
  %7 = load i8, i8* %6, align 4, !dbg !13195
  %8 = and i8 %7, 1, !dbg !13197
  %9 = icmp eq i8 %8, 0, !dbg !13198
  br i1 %9, label %15, label %10, !dbg !13199

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13200
  %12 = load i8*, i8** %11, align 4, !dbg !13200
  tail call void @k_free(i8* noundef %12) #27, !dbg !13202
  %13 = load i8, i8* %6, align 4, !dbg !13203
  %14 = and i8 %13, -2, !dbg !13203
  store i8 %14, i8* %6, align 4, !dbg !13203
  br label %15, !dbg !13204

15:                                               ; preds = %5, %10, %1
  %16 = phi i32 [ -16, %1 ], [ 0, %10 ], [ 0, %5 ], !dbg !13191
  ret i32 %16, !dbg !13205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !13206 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13210, metadata !DIExpression()), !dbg !13211
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13212
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !13213
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13214
  ret %struct.k_thread* %4, !dbg !13215
}

; Function Attrs: optsize
declare !dbg !13216 dso_local void @k_free(i8* noundef) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13217 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13221, metadata !DIExpression()), !dbg !13222
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !13223
  br i1 %2, label %6, label %3, !dbg !13223

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13224
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13224
  br label %6, !dbg !13223

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13223
  ret %struct._dnode* %7, !dbg !13225
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13226 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13230, metadata !DIExpression()), !dbg !13231
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13232
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13232
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13233
  ret i1 %4, !dbg !13234
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13235 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13245, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13243, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.value(metadata i8* %1, metadata !13244, metadata !DIExpression()), !dbg !13253
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13254
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13255, metadata !DIExpression()) #25, !dbg !13262
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13264, !srcloc !13270
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13264
  call void @llvm.dbg.value(metadata i32 %6, metadata !13267, metadata !DIExpression()) #25, !dbg !13271
  call void @llvm.dbg.value(metadata i32 undef, metadata !13268, metadata !DIExpression()) #25, !dbg !13271
  call void @llvm.dbg.value(metadata i32 %6, metadata !13261, metadata !DIExpression()) #25, !dbg !13262
  call void @llvm.dbg.value(metadata i32 %6, metadata !13247, metadata !DIExpression()), !dbg !13253
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13272
  %8 = load i32, i32* %7, align 4, !dbg !13272
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13274
  %10 = load i32, i32* %9, align 4, !dbg !13274
  %11 = icmp ult i32 %8, %10, !dbg !13275
  br i1 %11, label %12, label %42, !dbg !13276

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13277
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %13) #27, !dbg !13279
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13246, metadata !DIExpression()), !dbg !13253
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !13280
  br i1 %15, label %24, label %16, !dbg !13282

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 0, i32 6, !dbg !13283
  %18 = load i8*, i8** %17, align 4, !dbg !13283
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13285
  %20 = load i32, i32* %19, align 4, !dbg !13285
  %21 = tail call i8* @memcpy(i8* noundef %18, i8* noundef %1, i32 noundef %20) #27, !dbg !13286
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13287, metadata !DIExpression()), !dbg !13293
  call void @llvm.dbg.value(metadata i32 0, metadata !13292, metadata !DIExpression()), !dbg !13293
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %14, i32 0, i32 7, i32 1, !dbg !13295
  store i32 0, i32* %22, align 4, !dbg !13296
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %14) #27, !dbg !13297
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13298
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %23) #27, !dbg !13298
  br label %53, !dbg !13299

24:                                               ; preds = %12
  %25 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13300
  %26 = load i8*, i8** %25, align 4, !dbg !13300
  %27 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13302
  %28 = load i32, i32* %27, align 4, !dbg !13302
  %29 = tail call i8* @memcpy(i8* noundef %26, i8* noundef %1, i32 noundef %28) #27, !dbg !13303
  %30 = load i32, i32* %27, align 4, !dbg !13304
  %31 = load i8*, i8** %25, align 4, !dbg !13305
  %32 = getelementptr inbounds i8, i8* %31, i32 %30, !dbg !13305
  store i8* %32, i8** %25, align 4, !dbg !13305
  %33 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13306
  %34 = load i8*, i8** %33, align 4, !dbg !13306
  %35 = icmp eq i8* %32, %34, !dbg !13308
  br i1 %35, label %36, label %39, !dbg !13309

36:                                               ; preds = %24
  %37 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13310
  %38 = load i8*, i8** %37, align 4, !dbg !13310
  store i8* %38, i8** %25, align 4, !dbg !13312
  br label %39, !dbg !13313

39:                                               ; preds = %36, %24
  %40 = load i32, i32* %7, align 4, !dbg !13314
  %41 = add i32 %40, 1, !dbg !13314
  store i32 %41, i32* %7, align 4, !dbg !13314
  call void @llvm.dbg.value(metadata i32 0, metadata !13252, metadata !DIExpression()), !dbg !13253
  br label %51, !dbg !13315

42:                                               ; preds = %3
  %43 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %43, metadata !13245, metadata !DIExpression()), !dbg !13253
  %44 = icmp eq i64 %43, 0, !dbg !13316
  br i1 %44, label %51, label %45, !dbg !13318

45:                                               ; preds = %42
  %46 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13319
  %47 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %46, i32 0, i32 0, i32 6, !dbg !13321
  store i8* %1, i8** %47, align 4, !dbg !13322
  %48 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13323
  %49 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13324
  %50 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %49, %struct._wait_q_t* noundef %48, [1 x i64] %2) #27, !dbg !13324
  call void @llvm.dbg.value(metadata i32 %50, metadata !13252, metadata !DIExpression()), !dbg !13253
  br label %53, !dbg !13325

51:                                               ; preds = %42, %39
  %52 = phi i32 [ 0, %39 ], [ -35, %42 ], !dbg !13326
  call void @llvm.dbg.value(metadata i32 %52, metadata !13252, metadata !DIExpression()), !dbg !13253
  call void @llvm.dbg.value(metadata i32 %6, metadata !13327, metadata !DIExpression()) #25, !dbg !13333
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13332, metadata !DIExpression()) #25, !dbg !13333
  call void @llvm.dbg.value(metadata i32 %6, metadata !13335, metadata !DIExpression()) #25, !dbg !13338
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13340, !srcloc !13341
  br label %53, !dbg !13342

53:                                               ; preds = %51, %45, %16
  %54 = phi i32 [ 0, %16 ], [ %52, %51 ], [ %50, %45 ], !dbg !13253
  ret i32 %54, !dbg !13343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_impl_k_msgq_get_attrs(%struct.k_msgq* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !13344 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13354, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !13355, metadata !DIExpression()), !dbg !13356
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13357
  %4 = load i32, i32* %3, align 4, !dbg !13357
  %5 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !13358
  store i32 %4, i32* %5, align 4, !dbg !13359
  %6 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 3, !dbg !13360
  %7 = load i32, i32* %6, align 4, !dbg !13360
  %8 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !13361
  store i32 %7, i32* %8, align 4, !dbg !13362
  %9 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13363
  %10 = load i32, i32* %9, align 4, !dbg !13363
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !13364
  store i32 %10, i32* %11, align 4, !dbg !13365
  ret void, !dbg !13366
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq* noundef %0, i8* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !13367 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13373, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13371, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i8* %1, metadata !13372, metadata !DIExpression()), !dbg !13377
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13378
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13255, metadata !DIExpression()) #25, !dbg !13379
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13381, !srcloc !13270
  %6 = extractvalue { i32, i32 } %5, 0, !dbg !13381
  call void @llvm.dbg.value(metadata i32 %6, metadata !13267, metadata !DIExpression()) #25, !dbg !13383
  call void @llvm.dbg.value(metadata i32 undef, metadata !13268, metadata !DIExpression()) #25, !dbg !13383
  call void @llvm.dbg.value(metadata i32 %6, metadata !13261, metadata !DIExpression()) #25, !dbg !13379
  call void @llvm.dbg.value(metadata i32 %6, metadata !13374, metadata !DIExpression()), !dbg !13377
  %7 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13384
  %8 = load i32, i32* %7, align 4, !dbg !13384
  %9 = icmp eq i32 %8, 0, !dbg !13386
  br i1 %9, label %51, label %10, !dbg !13387

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13388
  %12 = load i8*, i8** %11, align 4, !dbg !13388
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13390
  %14 = load i32, i32* %13, align 4, !dbg !13390
  %15 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %12, i32 noundef %14) #27, !dbg !13391
  %16 = load i32, i32* %13, align 4, !dbg !13392
  %17 = load i8*, i8** %11, align 4, !dbg !13393
  %18 = getelementptr inbounds i8, i8* %17, i32 %16, !dbg !13393
  store i8* %18, i8** %11, align 4, !dbg !13393
  %19 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 5, !dbg !13394
  %20 = load i8*, i8** %19, align 4, !dbg !13394
  %21 = icmp eq i8* %18, %20, !dbg !13396
  br i1 %21, label %22, label %25, !dbg !13397

22:                                               ; preds = %10
  %23 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13398
  %24 = load i8*, i8** %23, align 4, !dbg !13398
  store i8* %24, i8** %11, align 4, !dbg !13400
  br label %25, !dbg !13401

25:                                               ; preds = %22, %10
  %26 = load i32, i32* %7, align 4, !dbg !13402
  %27 = add i32 %26, -1, !dbg !13402
  store i32 %27, i32* %7, align 4, !dbg !13402
  %28 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13403
  %29 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %28) #27, !dbg !13404
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13375, metadata !DIExpression()), !dbg !13377
  %30 = icmp eq %struct.k_thread* %29, null, !dbg !13405
  br i1 %30, label %60, label %31, !dbg !13407

31:                                               ; preds = %25
  %32 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13408
  %33 = load i8*, i8** %32, align 4, !dbg !13408
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 0, i32 6, !dbg !13410
  %35 = load i8*, i8** %34, align 4, !dbg !13410
  %36 = load i32, i32* %13, align 4, !dbg !13411
  %37 = tail call i8* @memcpy(i8* noundef %33, i8* noundef %35, i32 noundef %36) #27, !dbg !13412
  %38 = load i32, i32* %13, align 4, !dbg !13413
  %39 = load i8*, i8** %32, align 4, !dbg !13414
  %40 = getelementptr inbounds i8, i8* %39, i32 %38, !dbg !13414
  store i8* %40, i8** %32, align 4, !dbg !13414
  %41 = load i8*, i8** %19, align 4, !dbg !13415
  %42 = icmp eq i8* %40, %41, !dbg !13417
  br i1 %42, label %43, label %46, !dbg !13418

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 4, !dbg !13419
  %45 = load i8*, i8** %44, align 4, !dbg !13419
  store i8* %45, i8** %32, align 4, !dbg !13421
  br label %46, !dbg !13422

46:                                               ; preds = %43, %31
  %47 = load i32, i32* %7, align 4, !dbg !13423
  %48 = add i32 %47, 1, !dbg !13423
  store i32 %48, i32* %7, align 4, !dbg !13423
  call void @llvm.dbg.value(metadata %struct.k_thread* %29, metadata !13287, metadata !DIExpression()), !dbg !13424
  call void @llvm.dbg.value(metadata i32 0, metadata !13292, metadata !DIExpression()), !dbg !13424
  %49 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %29, i32 0, i32 7, i32 1, !dbg !13426
  store i32 0, i32* %49, align 4, !dbg !13427
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %29) #27, !dbg !13428
  %50 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13429
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %50) #27, !dbg !13429
  br label %62, !dbg !13430

51:                                               ; preds = %3
  %52 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %52, metadata !13373, metadata !DIExpression()), !dbg !13377
  %53 = icmp eq i64 %52, 0, !dbg !13431
  br i1 %53, label %60, label %54, !dbg !13433

54:                                               ; preds = %51
  %55 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13434
  %56 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %55, i32 0, i32 0, i32 6, !dbg !13436
  store i8* %1, i8** %56, align 4, !dbg !13437
  %57 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0, !dbg !13438
  %58 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !13439
  %59 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %4, [1 x i32] %58, %struct._wait_q_t* noundef %57, [1 x i64] %2) #27, !dbg !13439
  call void @llvm.dbg.value(metadata i32 %59, metadata !13376, metadata !DIExpression()), !dbg !13377
  br label %62, !dbg !13440

60:                                               ; preds = %51, %25
  %61 = phi i32 [ 0, %25 ], [ -35, %51 ], !dbg !13441
  call void @llvm.dbg.value(metadata i32 %61, metadata !13376, metadata !DIExpression()), !dbg !13377
  call void @llvm.dbg.value(metadata i32 %6, metadata !13327, metadata !DIExpression()) #25, !dbg !13442
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13332, metadata !DIExpression()) #25, !dbg !13442
  call void @llvm.dbg.value(metadata i32 %6, metadata !13335, metadata !DIExpression()) #25, !dbg !13444
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #25, !dbg !13446, !srcloc !13341
  br label %62, !dbg !13447

62:                                               ; preds = %60, %54, %46
  %63 = phi i32 [ 0, %46 ], [ %61, %60 ], [ %59, %54 ], !dbg !13377
  ret i32 %63, !dbg !13448
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_msgq_peek(%struct.k_msgq* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13449 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13453, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i8* %1, metadata !13454, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13255, metadata !DIExpression()) #25, !dbg !13458
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13460, !srcloc !13270
  call void @llvm.dbg.value(metadata i32 undef, metadata !13267, metadata !DIExpression()) #25, !dbg !13462
  call void @llvm.dbg.value(metadata i32 undef, metadata !13268, metadata !DIExpression()) #25, !dbg !13462
  call void @llvm.dbg.value(metadata i32 undef, metadata !13261, metadata !DIExpression()) #25, !dbg !13458
  call void @llvm.dbg.value(metadata i32 undef, metadata !13455, metadata !DIExpression()), !dbg !13457
  %4 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13463
  %5 = load i32, i32* %4, align 4, !dbg !13463
  %6 = icmp eq i32 %5, 0, !dbg !13465
  br i1 %6, label %13, label %7, !dbg !13466

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13467
  %9 = load i8*, i8** %8, align 4, !dbg !13467
  %10 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 2, !dbg !13469
  %11 = load i32, i32* %10, align 4, !dbg !13469
  %12 = tail call i8* @memcpy(i8* noundef %1, i8* noundef %9, i32 noundef %11) #27, !dbg !13470
  call void @llvm.dbg.value(metadata i32 0, metadata !13456, metadata !DIExpression()), !dbg !13457
  br label %13, !dbg !13471

13:                                               ; preds = %2, %7
  %14 = phi i32 [ 0, %7 ], [ -35, %2 ], !dbg !13472
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !13460
  call void @llvm.dbg.value(metadata i32 %15, metadata !13267, metadata !DIExpression()) #25, !dbg !13462
  call void @llvm.dbg.value(metadata i32 %15, metadata !13261, metadata !DIExpression()) #25, !dbg !13458
  call void @llvm.dbg.value(metadata i32 %15, metadata !13455, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i32 %14, metadata !13456, metadata !DIExpression()), !dbg !13457
  call void @llvm.dbg.value(metadata i32 undef, metadata !13327, metadata !DIExpression()) #25, !dbg !13473
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13332, metadata !DIExpression()) #25, !dbg !13473
  call void @llvm.dbg.value(metadata i32 undef, metadata !13335, metadata !DIExpression()) #25, !dbg !13475
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #25, !dbg !13477, !srcloc !13341
  ret i32 %14, !dbg !13478
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_msgq_purge(%struct.k_msgq* noundef %0) local_unnamed_addr #1 !dbg !13479 {
  call void @llvm.dbg.value(metadata %struct.k_msgq* %0, metadata !13483, metadata !DIExpression()), !dbg !13486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13255, metadata !DIExpression()) #25, !dbg !13487
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13489, !srcloc !13270
  call void @llvm.dbg.value(metadata i32 undef, metadata !13267, metadata !DIExpression()) #25, !dbg !13491
  call void @llvm.dbg.value(metadata i32 undef, metadata !13268, metadata !DIExpression()) #25, !dbg !13491
  call void @llvm.dbg.value(metadata i32 undef, metadata !13261, metadata !DIExpression()) #25, !dbg !13487
  call void @llvm.dbg.value(metadata i32 undef, metadata !13484, metadata !DIExpression()), !dbg !13486
  %3 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13492
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !13485, metadata !DIExpression()), !dbg !13486
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !13493
  br i1 %5, label %11, label %6, !dbg !13494

6:                                                ; preds = %1, %6
  %7 = phi %struct.k_thread* [ %9, %6 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !13287, metadata !DIExpression()), !dbg !13495
  call void @llvm.dbg.value(metadata i32 -35, metadata !13292, metadata !DIExpression()), !dbg !13495
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %7, i32 0, i32 7, i32 1, !dbg !13498
  store i32 -35, i32* %8, align 4, !dbg !13499
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %7) #27, !dbg !13500
  %9 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %3) #27, !dbg !13492
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !13485, metadata !DIExpression()), !dbg !13486
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !13493
  br i1 %10, label %11, label %6, !dbg !13494, !llvm.loop !13501

11:                                               ; preds = %6, %1
  %12 = extractvalue { i32, i32 } %2, 0, !dbg !13489
  call void @llvm.dbg.value(metadata i32 %12, metadata !13267, metadata !DIExpression()) #25, !dbg !13491
  call void @llvm.dbg.value(metadata i32 %12, metadata !13261, metadata !DIExpression()) #25, !dbg !13487
  call void @llvm.dbg.value(metadata i32 %12, metadata !13484, metadata !DIExpression()), !dbg !13486
  %13 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 1, !dbg !13503
  %14 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 8, !dbg !13504
  store i32 0, i32* %14, align 4, !dbg !13505
  %15 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 7, !dbg !13506
  %16 = load i8*, i8** %15, align 4, !dbg !13506
  %17 = getelementptr inbounds %struct.k_msgq, %struct.k_msgq* %0, i32 0, i32 6, !dbg !13507
  store i8* %16, i8** %17, align 4, !dbg !13508
  %18 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13509
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %13, [1 x i32] %18) #27, !dbg !13509
  ret void, !dbg !13510
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !13511 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13515, metadata !DIExpression()), !dbg !13519
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13516, metadata !DIExpression()), !dbg !13519
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13520
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13520
  %5 = load i8, i8* %4, align 2, !dbg !13520
  call void @llvm.dbg.value(metadata i8 %5, metadata !13517, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13519
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13521
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13521
  %8 = load i8, i8* %7, align 2, !dbg !13521
  call void @llvm.dbg.value(metadata i8 %8, metadata !13518, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13519
  %9 = icmp eq i8 %8, %5, !dbg !13522
  %10 = sext i8 %5 to i32, !dbg !13524
  %11 = sext i8 %8 to i32, !dbg !13524
  %12 = sub nsw i32 %11, %10, !dbg !13524
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13524
  ret i32 %13, !dbg !13525
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13526 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13530, metadata !DIExpression()), !dbg !13531
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !13532
  %3 = icmp eq i32 %2, 0, !dbg !13534
  br i1 %3, label %8, label %4, !dbg !13535

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !13536
  %6 = add i32 %5, %2, !dbg !13538
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13539
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !13540
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !13541
  br label %8, !dbg !13542

8:                                                ; preds = %4, %1
  ret void, !dbg !13543
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #5 !dbg !13544 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13548, metadata !DIExpression()), !dbg !13550
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !13551
  call void @llvm.dbg.value(metadata i32 %1, metadata !13549, metadata !DIExpression()), !dbg !13550
  ret i32 %1, !dbg !13552
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13557, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i32 %1, metadata !13558, metadata !DIExpression()), !dbg !13566
  call void @llvm.dbg.value(metadata i32 0, metadata !13559, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !13575
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13577, !srcloc !13583
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !13577
  call void @llvm.dbg.value(metadata i32 %4, metadata !13580, metadata !DIExpression()) #25, !dbg !13584
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !13584
  call void @llvm.dbg.value(metadata i32 %4, metadata !13574, metadata !DIExpression()) #25, !dbg !13575
  call void @llvm.dbg.value(metadata i32 %4, metadata !13565, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata i32 undef, metadata !13559, metadata !DIExpression()), !dbg !13567
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13585
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !13588
  %6 = icmp sgt i32 %0, 0, !dbg !13589
  %7 = icmp sgt i32 %5, 2, !dbg !13591
  %8 = select i1 %7, i32 %5, i32 2, !dbg !13591
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !13591
  store i32 %9, i32* @slice_ticks, align 4, !dbg !13592
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !13593
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13594
  call void @llvm.dbg.value(metadata i32 %4, metadata !13595, metadata !DIExpression()) #25, !dbg !13601
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !13601
  call void @llvm.dbg.value(metadata i32 %4, metadata !13603, metadata !DIExpression()) #25, !dbg !13606
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !13608, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !13559, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata i32 undef, metadata !13559, metadata !DIExpression()), !dbg !13567
  ret void, !dbg !13610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #11 !dbg !13611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13613, metadata !DIExpression()), !dbg !13614
  call void @llvm.dbg.value(metadata i32 %0, metadata !13615, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13630
  call void @llvm.dbg.value(metadata i32 1000, metadata !13618, metadata !DIExpression()), !dbg !13630
  call void @llvm.dbg.value(metadata i32 10000, metadata !13619, metadata !DIExpression()), !dbg !13630
  call void @llvm.dbg.value(metadata i8 1, metadata !13620, metadata !DIExpression()), !dbg !13630
  call void @llvm.dbg.value(metadata i1 true, metadata !13621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13630
  call void @llvm.dbg.value(metadata i1 true, metadata !13622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13630
  call void @llvm.dbg.value(metadata i8 0, metadata !13623, metadata !DIExpression()), !dbg !13630
  call void @llvm.dbg.value(metadata i1 true, metadata !13624, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13630
  call void @llvm.dbg.value(metadata i1 false, metadata !13625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13630
  call void @llvm.dbg.value(metadata i64 0, metadata !13626, metadata !DIExpression()), !dbg !13630
  call void @llvm.dbg.value(metadata i64 0, metadata !13626, metadata !DIExpression()), !dbg !13630
  %2 = mul i32 %0, 10, !dbg !13632
  ret i32 %2, !dbg !13638
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !13639 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13641, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !13644
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13646, !srcloc !13583
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !13646
  call void @llvm.dbg.value(metadata i32 %3, metadata !13580, metadata !DIExpression()) #25, !dbg !13648
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !13648
  call void @llvm.dbg.value(metadata i32 %3, metadata !13574, metadata !DIExpression()) #25, !dbg !13644
  call void @llvm.dbg.value(metadata i32 %3, metadata !13642, metadata !DIExpression()), !dbg !13643
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !13649
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13651
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !13652
  br i1 %6, label %7, label %8, !dbg !13653

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13654
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !13656
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !13656
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !13658
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !13660, !srcloc !13609
  br label %24, !dbg !13661

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !13662
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !13663
  %10 = icmp eq i32 %9, 0, !dbg !13663
  br i1 %10, label %21, label %11, !dbg !13665

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !13666
  br i1 %12, label %13, label %21, !dbg !13667

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13668
  %15 = icmp sgt i32 %14, %0, !dbg !13671
  br i1 %15, label %19, label %16, !dbg !13672

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !13673
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !13673
  call void @llvm.dbg.value(metadata i32 %18, metadata !13642, metadata !DIExpression()), !dbg !13643
  br label %22, !dbg !13675

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !13676
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13676
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13678
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !13643
  call void @llvm.dbg.value(metadata i32 %23, metadata !13642, metadata !DIExpression()), !dbg !13643
  call void @llvm.dbg.value(metadata i32 %23, metadata !13595, metadata !DIExpression()) #25, !dbg !13680
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !13680
  call void @llvm.dbg.value(metadata i32 %23, metadata !13603, metadata !DIExpression()) #25, !dbg !13682
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !13684, !srcloc !13609
  br label %24, !dbg !13685

24:                                               ; preds = %22, %7
  ret void, !dbg !13685
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #5 !dbg !13686 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13690, metadata !DIExpression()), !dbg !13692
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !13693
  %3 = icmp eq i32 %2, 0, !dbg !13693
  br i1 %3, label %16, label %4, !dbg !13694

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !13695
  br i1 %5, label %16, label %6, !dbg !13696

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13697
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !13697
  %9 = load i8, i8* %8, align 2, !dbg !13697
  %10 = sext i8 %9 to i32, !dbg !13698
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !13699
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !13700
  br i1 %12, label %16, label %13, !dbg !13701

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !13702
  %15 = xor i1 %14, true, !dbg !13703
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !13692
  call void @llvm.dbg.value(metadata i1 %17, metadata !13691, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13692
  ret i1 %17, !dbg !13704
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !13705 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !13709, metadata !DIExpression()), !dbg !13711
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13712
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13710, metadata !DIExpression()), !dbg !13711
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !13713
  br i1 %3, label %5, label %4, !dbg !13715

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !13716
  br label %5, !dbg !13718

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !13709, metadata !DIExpression()), !dbg !13711
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13719
  ret i32 %6, !dbg !13720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13721 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13723, metadata !DIExpression()), !dbg !13725
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13726
  %3 = load i8, i8* %2, align 1, !dbg !13726
  call void @llvm.dbg.value(metadata i8 %3, metadata !13724, metadata !DIExpression()), !dbg !13725
  %4 = and i8 %3, 31, !dbg !13727
  %5 = icmp ne i8 %4, 0, !dbg !13728
  ret i1 %5, !dbg !13729
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13730 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13732, metadata !DIExpression()), !dbg !13733
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !13734
  br i1 %2, label %3, label %7, !dbg !13736

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13737, metadata !DIExpression()) #25, !dbg !13740
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13743
  %5 = load i8, i8* %4, align 1, !dbg !13744
  %6 = and i8 %5, 127, !dbg !13744
  store i8 %6, i8* %4, align 1, !dbg !13744
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()) #25, !dbg !13748
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !13752
  br label %7, !dbg !13753

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13754, metadata !DIExpression()) #25, !dbg !13757
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13759
  %9 = load i8, i8* %8, align 1, !dbg !13760
  %10 = or i8 %9, -128, !dbg !13760
  store i8 %10, i8* %8, align 1, !dbg !13760
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13761, metadata !DIExpression()) #25, !dbg !13764
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13768, metadata !DIExpression()) #25, !dbg !13776
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13774, metadata !DIExpression()) #25, !dbg !13776
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13778
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !13775, metadata !DIExpression()) #25, !dbg !13776
  %12 = icmp eq %struct._dnode* %11, null, !dbg !13780
  br i1 %12, label %23, label %13, !dbg !13778

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !13775, metadata !DIExpression()) #25, !dbg !13776
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !13782
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !13775, metadata !DIExpression()) #25, !dbg !13776
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !13783
  %17 = icmp sgt i32 %16, 0, !dbg !13786
  br i1 %17, label %18, label %20, !dbg !13787

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13788
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !13790
  br label %25, !dbg !13791

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !13780
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !13775, metadata !DIExpression()) #25, !dbg !13776
  %22 = icmp eq %struct._dnode* %21, null, !dbg !13780
  br i1 %22, label %23, label %13, !dbg !13778, !llvm.loop !13792

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !13794
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !13795
  br label %25, !dbg !13796

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13797
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !13798
  %28 = zext i1 %27 to i32, !dbg !13798
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !13799
  ret void, !dbg !13800
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13801 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13803, metadata !DIExpression()), !dbg !13804
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !13805
  ret i1 %2, !dbg !13806
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #7 !dbg !13807 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !13809, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13810, metadata !DIExpression()), !dbg !13811
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !13812
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !13813
  ret void, !dbg !13814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef %0) unnamed_addr #5 !dbg !13815 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13819, metadata !DIExpression()), !dbg !13820
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.130(%struct._dnode* noundef %0) #26, !dbg !13821
  br i1 %2, label %6, label %3, !dbg !13821

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13822
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13822
  br label %6, !dbg !13821

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13821
  ret %struct._dnode* %7, !dbg !13823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13824 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13828, metadata !DIExpression()), !dbg !13832
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13829, metadata !DIExpression()), !dbg !13832
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13833
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13833
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13830, metadata !DIExpression()), !dbg !13832
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13834
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !13835
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13836
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !13837
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13838
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13839
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13840
  ret void, !dbg !13841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13842 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13846, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13847, metadata !DIExpression()), !dbg !13848
  %3 = icmp eq %struct._dnode* %1, null, !dbg !13849
  br i1 %3, label %6, label %4, !dbg !13850

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !13851
  br label %6, !dbg !13850

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !13850
  ret %struct._dnode* %7, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !13853 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13857, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13858, metadata !DIExpression()), !dbg !13860
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13861
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13861
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !13859, metadata !DIExpression()), !dbg !13860
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13862
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !13863
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !13864
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !13865
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !13866
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !13867
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !13868
  ret void, !dbg !13869
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !13870 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13872, metadata !DIExpression()), !dbg !13874
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !13875
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13882, metadata !DIExpression()) #25, !dbg !13884
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !13885
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !13886
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !13886
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13873, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13887, metadata !DIExpression()) #25, !dbg !13893
  call void @llvm.dbg.value(metadata i32 %0, metadata !13892, metadata !DIExpression()) #25, !dbg !13893
  %6 = icmp eq i32 %0, 0, !dbg !13896
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13898
  br i1 %6, label %8, label %15, !dbg !13899

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !13900
  br i1 %9, label %15, label %10, !dbg !13902

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !13903
  br i1 %11, label %15, label %12, !dbg !13905

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !13906
  %14 = icmp eq i32 %13, 0, !dbg !13906
  br i1 %14, label %18, label %15, !dbg !13908

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !13909
  br i1 %16, label %18, label %17, !dbg !13912

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !13913
  br label %18, !dbg !13915

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !13898
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !13898
  ret void, !dbg !13916
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #5 !dbg !13917 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13921, metadata !DIExpression()), !dbg !13924
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !13922, metadata !DIExpression()), !dbg !13924
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef %0) #26, !dbg !13925
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !13923, metadata !DIExpression()), !dbg !13924
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !13922, metadata !DIExpression()), !dbg !13924
  ret %struct.k_thread* %3, !dbg !13926
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13927 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13929, metadata !DIExpression()), !dbg !13930
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13931
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !13932
  %4 = xor i1 %3, true, !dbg !13933
  ret i1 %4, !dbg !13934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13935 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13937, metadata !DIExpression()), !dbg !13938
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !13939
  %3 = load i16, i16* %2, align 2, !dbg !13939
  %4 = icmp ult i16 %3, 128, !dbg !13940
  %5 = zext i1 %4 to i32, !dbg !13940
  ret i32 %5, !dbg !13941
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13942 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13948, metadata !DIExpression()), !dbg !13949
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13950
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !13951
  %4 = xor i1 %3, true, !dbg !13952
  ret i1 %4, !dbg !13953
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !13954 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13960, metadata !DIExpression()), !dbg !13961
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13962
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13962
  %4 = icmp ne %struct._dnode* %3, null, !dbg !13963
  ret i1 %4, !dbg !13964
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #5 !dbg !13965 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13967, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !13968, metadata !DIExpression()), !dbg !13969
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13970
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !13970
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !13971
  br i1 %5, label %9, label %6, !dbg !13972

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !13973
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !13973
  br label %9, !dbg !13972

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !13972
  ret %struct._dnode* %10, !dbg !13974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.130(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !13975 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13979, metadata !DIExpression()), !dbg !13980
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13981
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13981
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13982
  ret i1 %4, !dbg !13983
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !13984 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13988, metadata !DIExpression()), !dbg !13991
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13992
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13992
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !13989, metadata !DIExpression()), !dbg !13991
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13993
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13993
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !13990, metadata !DIExpression()), !dbg !13991
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !13994
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !13995
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !13996
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !13997
  tail call fastcc void @sys_dnode_init.131(%struct._dnode* noundef %0) #26, !dbg !13998
  ret void, !dbg !13999
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.131(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !14000 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14002, metadata !DIExpression()), !dbg !14003
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14004
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14005
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14006
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14007
  ret void, !dbg !14008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14009 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14013, metadata !DIExpression()), !dbg !14015
  call void @llvm.dbg.value(metadata i32 128, metadata !14014, metadata !DIExpression()), !dbg !14015
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14016
  %3 = load i8, i8* %2, align 1, !dbg !14016
  %4 = icmp slt i8 %3, 0, !dbg !14017
  ret i1 %4, !dbg !14018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14023, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.value(metadata i32 %1, metadata !14024, metadata !DIExpression()), !dbg !14025
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !14026
  ret i1 %3, !dbg !14027
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #11 !dbg !14028 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14030, metadata !DIExpression()), !dbg !14031
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14032
  ret i1 %2, !dbg !14033
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #11 !dbg !14034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14036, metadata !DIExpression()), !dbg !14038
  call void @llvm.dbg.value(metadata i32 %1, metadata !14037, metadata !DIExpression()), !dbg !14038
  %3 = icmp slt i32 %0, %1, !dbg !14039
  ret i1 %3, !dbg !14040
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14041 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14043, metadata !DIExpression()), !dbg !14047
  call void @llvm.dbg.value(metadata i32 0, metadata !14044, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14049
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14051, !srcloc !13583
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14051
  call void @llvm.dbg.value(metadata i32 %3, metadata !13580, metadata !DIExpression()) #25, !dbg !14053
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14053
  call void @llvm.dbg.value(metadata i32 %3, metadata !13574, metadata !DIExpression()) #25, !dbg !14049
  call void @llvm.dbg.value(metadata i32 %3, metadata !14046, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata i32 undef, metadata !14044, metadata !DIExpression()), !dbg !14048
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14054
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !14059
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14059
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !14061
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14063, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14044, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.value(metadata i32 undef, metadata !14044, metadata !DIExpression()), !dbg !14048
  ret void, !dbg !14064
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14065 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14067, metadata !DIExpression()), !dbg !14068
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14069
  br i1 %2, label %24, label %3, !dbg !14071

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14072
  br i1 %4, label %5, label %24, !dbg !14073

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13754, metadata !DIExpression()) #25, !dbg !14074
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14077
  %7 = load i8, i8* %6, align 1, !dbg !14078
  %8 = or i8 %7, -128, !dbg !14078
  store i8 %8, i8* %6, align 1, !dbg !14078
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13761, metadata !DIExpression()) #25, !dbg !14079
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13768, metadata !DIExpression()) #25, !dbg !14081
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13774, metadata !DIExpression()) #25, !dbg !14081
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14083
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !13775, metadata !DIExpression()) #25, !dbg !14081
  %10 = icmp eq %struct._dnode* %9, null, !dbg !14084
  br i1 %10, label %21, label %11, !dbg !14083

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !13775, metadata !DIExpression()) #25, !dbg !14081
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !14085
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !13775, metadata !DIExpression()) #25, !dbg !14081
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !14086
  %15 = icmp sgt i32 %14, 0, !dbg !14087
  br i1 %15, label %16, label %18, !dbg !14088

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14089
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !14090
  br label %23, !dbg !14091

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !14084
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !13775, metadata !DIExpression()) #25, !dbg !14081
  %20 = icmp eq %struct._dnode* %19, null, !dbg !14084
  br i1 %20, label %21, label %11, !dbg !14083, !llvm.loop !14092

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14094
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !14095
  br label %23, !dbg !14096

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14097
  br label %24, !dbg !14098

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !14099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14102, metadata !DIExpression()), !dbg !14103
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !14104
  br i1 %2, label %6, label %3, !dbg !14105

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !14106
  %5 = xor i1 %4, true, !dbg !14105
  br label %6, !dbg !14105

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14107
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14110, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.value(metadata i32 0, metadata !14111, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14116
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14118, !srcloc !13583
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14118
  call void @llvm.dbg.value(metadata i32 %3, metadata !13580, metadata !DIExpression()) #25, !dbg !14120
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14120
  call void @llvm.dbg.value(metadata i32 %3, metadata !13574, metadata !DIExpression()) #25, !dbg !14116
  call void @llvm.dbg.value(metadata i32 %3, metadata !14113, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i32 undef, metadata !14111, metadata !DIExpression()), !dbg !14115
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !14121
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !14124
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14124
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !14126
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14128, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14111, metadata !DIExpression()), !dbg !14115
  call void @llvm.dbg.value(metadata i32 undef, metadata !14111, metadata !DIExpression()), !dbg !14115
  ret void, !dbg !14129
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14130 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14132, metadata !DIExpression()), !dbg !14134
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14135
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14137, !srcloc !13583
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14137
  call void @llvm.dbg.value(metadata i32 %3, metadata !13580, metadata !DIExpression()) #25, !dbg !14139
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14139
  call void @llvm.dbg.value(metadata i32 %3, metadata !13574, metadata !DIExpression()) #25, !dbg !14135
  call void @llvm.dbg.value(metadata i32 %3, metadata !14133, metadata !DIExpression()), !dbg !14134
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !14140
  br i1 %4, label %5, label %6, !dbg !14142

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !14143
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14143
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !14146
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14148, !srcloc !13609
  br label %8, !dbg !14149

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.136(%struct.k_thread* noundef %0) #26, !dbg !14150
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14151
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14152
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14152
  br label %8, !dbg !14153

8:                                                ; preds = %6, %5
  ret void, !dbg !14153
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14154 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14156, metadata !DIExpression()), !dbg !14157
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14158
  %3 = load i8, i8* %2, align 1, !dbg !14158
  %4 = and i8 %3, 4, !dbg !14159
  %5 = icmp eq i8 %4, 0, !dbg !14160
  ret i1 %5, !dbg !14161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.136(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14162 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14164, metadata !DIExpression()), !dbg !14165
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14166
  %3 = load i8, i8* %2, align 1, !dbg !14167
  %4 = and i8 %3, -5, !dbg !14167
  store i8 %4, i8* %2, align 1, !dbg !14167
  ret void, !dbg !14168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14169 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14172, metadata !DIExpression()), !dbg !14173
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14171, metadata !DIExpression()), !dbg !14173
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !14174
  br i1 %4, label %5, label %9, !dbg !14176

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !14177
  br i1 %6, label %7, label %9, !dbg !14178

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !14179, metadata !DIExpression()) #25, !dbg !14185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14184, metadata !DIExpression()) #25, !dbg !14185
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !14188
  br label %10, !dbg !14189

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !14190
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14190
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !14193
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14195, !srcloc !13609
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !14196
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14197 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14201, metadata !DIExpression()), !dbg !14202
  call void @llvm.dbg.value(metadata i32 %0, metadata !14203, metadata !DIExpression()), !dbg !14208
  %2 = icmp eq i32 %0, 0, !dbg !14210
  br i1 %2, label %3, label %6, !dbg !14211

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !14212, !srcloc !14219
  call void @llvm.dbg.value(metadata i32 %4, metadata !14215, metadata !DIExpression()) #25, !dbg !14220
  %5 = icmp eq i32 %4, 0, !dbg !14221
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14202
  ret i1 %7, !dbg !14222
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #5 !dbg !14223 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14226
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14225, metadata !DIExpression()), !dbg !14227
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14228
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14229
  ret i1 %3, !dbg !14230
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14233, metadata !DIExpression()), !dbg !14235
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !14236
  call void @llvm.dbg.value(metadata i32 %2, metadata !14234, metadata !DIExpression()), !dbg !14235
  ret i32 %2, !dbg !14237
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14238 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14240, metadata !DIExpression()), !dbg !14244
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14245
  call void @llvm.dbg.value(metadata i32 0, metadata !14241, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14247
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14249, !srcloc !13583
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !14249
  call void @llvm.dbg.value(metadata i32 %4, metadata !13580, metadata !DIExpression()) #25, !dbg !14251
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14251
  call void @llvm.dbg.value(metadata i32 %4, metadata !13574, metadata !DIExpression()) #25, !dbg !14247
  call void @llvm.dbg.value(metadata i32 %4, metadata !14243, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.value(metadata i32 undef, metadata !14241, metadata !DIExpression()), !dbg !14246
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14252
  br i1 %5, label %6, label %10, !dbg !14256

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13737, metadata !DIExpression()) #25, !dbg !14257
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14260
  %8 = load i8, i8* %7, align 1, !dbg !14261
  %9 = and i8 %8, 127, !dbg !14261
  store i8 %9, i8* %7, align 1, !dbg !14261
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()) #25, !dbg !14262
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14264
  br label %10, !dbg !14265

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !14266
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14267
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !14268
  %13 = zext i1 %12 to i32, !dbg !14268
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !14269
  call void @llvm.dbg.value(metadata i32 %4, metadata !13595, metadata !DIExpression()) #25, !dbg !14270
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14270
  call void @llvm.dbg.value(metadata i32 %4, metadata !13603, metadata !DIExpression()) #25, !dbg !14272
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !14274, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14241, metadata !DIExpression()), !dbg !14246
  call void @llvm.dbg.value(metadata i32 undef, metadata !14241, metadata !DIExpression()), !dbg !14246
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14275
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14277
  br i1 %15, label %16, label %17, !dbg !14278

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14279
  br label %17, !dbg !14281

17:                                               ; preds = %16, %10
  ret void, !dbg !14282
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14283 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14285, metadata !DIExpression()), !dbg !14286
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14287
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !14288
  ret i32 %3, !dbg !14289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14290 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14292, metadata !DIExpression()), !dbg !14293
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14294
  %3 = load i8, i8* %2, align 1, !dbg !14295
  %4 = or i8 %3, 16, !dbg !14295
  store i8 %4, i8* %2, align 1, !dbg !14295
  ret void, !dbg !14296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14297 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14298, !srcloc !13583
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14298
  call void @llvm.dbg.value(metadata i32 %2, metadata !13580, metadata !DIExpression()) #25, !dbg !14300
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14300
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !14301
  ret void, !dbg !14302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14305, metadata !DIExpression()), !dbg !14306
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !14307
  br i1 %2, label %3, label %5, !dbg !14309

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14310
  br label %6, !dbg !14312

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !13603, metadata !DIExpression()) #25, !dbg !14313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !14316, !srcloc !13609
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14320, metadata !DIExpression()), !dbg !14322
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14323
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14325, !srcloc !13583
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14325
  call void @llvm.dbg.value(metadata i32 %3, metadata !13580, metadata !DIExpression()) #25, !dbg !14327
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14327
  call void @llvm.dbg.value(metadata i32 %3, metadata !13574, metadata !DIExpression()) #25, !dbg !14323
  call void @llvm.dbg.value(metadata i32 %3, metadata !14321, metadata !DIExpression()), !dbg !14322
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !14328
  br i1 %4, label %6, label %5, !dbg !14330

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !14331
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14331
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !14334
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14336, !srcloc !13609
  br label %8, !dbg !14337

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !14338
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !14339
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !14340
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !14340
  br label %8, !dbg !14341

8:                                                ; preds = %6, %5
  ret void, !dbg !14341
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !14342 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14344, metadata !DIExpression()), !dbg !14345
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14346
  %3 = load i8, i8* %2, align 1, !dbg !14346
  %4 = and i8 %3, 16, !dbg !14347
  %5 = icmp ne i8 %4, 0, !dbg !14348
  ret i1 %5, !dbg !14349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14350 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14352, metadata !DIExpression()), !dbg !14353
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14354
  %3 = load i8, i8* %2, align 1, !dbg !14355
  %4 = and i8 %3, -17, !dbg !14355
  store i8 %4, i8* %2, align 1, !dbg !14355
  ret void, !dbg !14356
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14357 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14367, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14365, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14366, metadata !DIExpression()), !dbg !14371
  call void @llvm.dbg.value(metadata i32 0, metadata !14368, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14373
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14375, !srcloc !13583
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !14375
  call void @llvm.dbg.value(metadata i32 %5, metadata !13580, metadata !DIExpression()) #25, !dbg !14377
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14377
  call void @llvm.dbg.value(metadata i32 %5, metadata !13574, metadata !DIExpression()) #25, !dbg !14373
  call void @llvm.dbg.value(metadata i32 %5, metadata !14370, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()), !dbg !14372
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14378
  call void @llvm.dbg.value(metadata i32 %5, metadata !13595, metadata !DIExpression()) #25, !dbg !14381
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14381
  call void @llvm.dbg.value(metadata i32 %5, metadata !13603, metadata !DIExpression()) #25, !dbg !14383
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !14385, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14368, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.value(metadata i32 undef, metadata !14368, metadata !DIExpression()), !dbg !14372
  ret void, !dbg !14386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14387 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14391, metadata !DIExpression()), !dbg !14392
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14389, metadata !DIExpression()), !dbg !14392
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14390, metadata !DIExpression()), !dbg !14392
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #26, !dbg !14393
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !14394
  ret void, !dbg !14395
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14396 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14400, metadata !DIExpression()), !dbg !14402
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14401, metadata !DIExpression()), !dbg !14402
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !14403
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !14404
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14405
  br i1 %3, label %21, label %4, !dbg !14407

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14408
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14410
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14411
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !13768, metadata !DIExpression()) #25, !dbg !14412
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13774, metadata !DIExpression()) #25, !dbg !14412
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef nonnull %6) #27, !dbg !14414
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !13775, metadata !DIExpression()) #25, !dbg !14412
  %8 = icmp eq %struct._dnode* %7, null, !dbg !14415
  br i1 %8, label %19, label %9, !dbg !14414

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13775, metadata !DIExpression()) #25, !dbg !14412
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !14416
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !13775, metadata !DIExpression()) #25, !dbg !14412
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !14417
  %13 = icmp sgt i32 %12, 0, !dbg !14418
  br i1 %13, label %14, label %16, !dbg !14419

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14420
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !14421
  br label %21, !dbg !14422

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !14415
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !13775, metadata !DIExpression()) #25, !dbg !14412
  %18 = icmp eq %struct._dnode* %17, null, !dbg !14415
  br i1 %18, label %19, label %9, !dbg !14414, !llvm.loop !14423

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14425
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !14426
  br label %21, !dbg !14427

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !14428
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14429 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !14434, metadata !DIExpression()), !dbg !14435
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14433, metadata !DIExpression()), !dbg !14435
  %4 = icmp eq i64 %3, -1, !dbg !14436
  br i1 %4, label %6, label %5, !dbg !14438

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.139(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !14439
  br label %6, !dbg !14441

6:                                                ; preds = %5, %2
  ret void, !dbg !14442
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.139(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14443 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14445, metadata !DIExpression()), !dbg !14447
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14448
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !14449
  ret void, !dbg !14450
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !14451 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14453, metadata !DIExpression()), !dbg !14461
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !14462
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !14462
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14454, metadata !DIExpression()), !dbg !14461
  call void @llvm.dbg.value(metadata i32 0, metadata !14455, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14464
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14466, !srcloc !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14468
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14468
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()) #25, !dbg !14464
  call void @llvm.dbg.value(metadata i32 undef, metadata !14457, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i32 undef, metadata !14455, metadata !DIExpression()), !dbg !14463
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !14469
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !14470
  %7 = load i8, i8* %6, align 1, !dbg !14470
  %8 = and i8 %7, 40, !dbg !14471
  %9 = icmp eq i8 %8, 0, !dbg !14471
  call void @llvm.dbg.value(metadata i1 %9, metadata !14458, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14472
  br i1 %9, label %10, label %17, !dbg !14473

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !14474
  %12 = bitcast void (%struct._timeout*)** %11 to %struct._wait_q_t**, !dbg !14474
  %13 = load %struct._wait_q_t*, %struct._wait_q_t** %12, align 8, !dbg !14474
  %14 = icmp eq %struct._wait_q_t* %13, null, !dbg !14478
  br i1 %14, label %16, label %15, !dbg !14479

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !14480
  br label %16, !dbg !14482

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.136(%struct.k_thread* noundef nonnull %3) #26, !dbg !14483
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !14484
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !14485
  br label %17, !dbg !14486

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !14466
  call void @llvm.dbg.value(metadata i32 %18, metadata !13580, metadata !DIExpression()) #25, !dbg !14468
  call void @llvm.dbg.value(metadata i32 %18, metadata !13574, metadata !DIExpression()) #25, !dbg !14464
  call void @llvm.dbg.value(metadata i32 %18, metadata !14457, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #25, !dbg !14487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14487
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #25, !dbg !14489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14491, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14455, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.value(metadata i32 undef, metadata !14455, metadata !DIExpression()), !dbg !14463
  ret void, !dbg !14492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14493 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14495, metadata !DIExpression()), !dbg !14496
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !14497
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !14498
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14499
  store %struct._wait_q_t* null, %struct._wait_q_t** %2, align 8, !dbg !14500
  ret void, !dbg !14501
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14502 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14504, metadata !DIExpression()), !dbg !14505
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14506
  %3 = load i8, i8* %2, align 1, !dbg !14507
  %4 = and i8 %3, -3, !dbg !14507
  store i8 %4, i8* %2, align 1, !dbg !14507
  ret void, !dbg !14508
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14509 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14511, metadata !DIExpression()), !dbg !14512
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !14513
  br i1 %2, label %3, label %7, !dbg !14515

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13737, metadata !DIExpression()) #25, !dbg !14516
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14519
  %5 = load i8, i8* %4, align 1, !dbg !14520
  %6 = and i8 %5, 127, !dbg !14520
  store i8 %6, i8* %4, align 1, !dbg !14520
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()) #25, !dbg !14521
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14523
  br label %7, !dbg !14524

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14525
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !14526
  %10 = zext i1 %9 to i32, !dbg !14526
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !14527
  ret void, !dbg !14528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #7 !dbg !14529 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14531, metadata !DIExpression()), !dbg !14532
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14533
  %3 = load i8, i8* %2, align 1, !dbg !14534
  %4 = or i8 %3, 2, !dbg !14534
  store i8 %4, i8* %2, align 1, !dbg !14534
  ret void, !dbg !14535
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !14536 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14538, metadata !DIExpression()), !dbg !14542
  call void @llvm.dbg.value(metadata i32 0, metadata !14539, metadata !DIExpression()), !dbg !14543
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14544
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14546, !srcloc !13583
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14546
  call void @llvm.dbg.value(metadata i32 %3, metadata !13580, metadata !DIExpression()) #25, !dbg !14548
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14548
  call void @llvm.dbg.value(metadata i32 %3, metadata !13574, metadata !DIExpression()) #25, !dbg !14544
  call void @llvm.dbg.value(metadata i32 %3, metadata !14541, metadata !DIExpression()), !dbg !14543
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()), !dbg !14543
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !14549
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !14552
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14552
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !14554
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14556, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14539, metadata !DIExpression()), !dbg !14543
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()), !dbg !14543
  ret void, !dbg !14557
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14558 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14564, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata i32 %0, metadata !14562, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14563, metadata !DIExpression()), !dbg !14569
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14570
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #26, !dbg !14571
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14572
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14573
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !14574
  call void @llvm.dbg.value(metadata i32 %6, metadata !14565, metadata !DIExpression()), !dbg !14569
  call void @llvm.dbg.value(metadata i32 0, metadata !14566, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14576
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14578, !srcloc !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14580
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14580
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()) #25, !dbg !14576
  call void @llvm.dbg.value(metadata i32 undef, metadata !14568, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i32 undef, metadata !14566, metadata !DIExpression()), !dbg !14575
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14581
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14585
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !14586
  br i1 %10, label %11, label %12, !dbg !14587

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14588
  br label %12, !dbg !14590

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !14578
  call void @llvm.dbg.value(metadata i32 %13, metadata !13580, metadata !DIExpression()) #25, !dbg !14580
  call void @llvm.dbg.value(metadata i32 %13, metadata !13574, metadata !DIExpression()) #25, !dbg !14576
  call void @llvm.dbg.value(metadata i32 %13, metadata !14568, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #25, !dbg !14591
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14591
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #25, !dbg !14593
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !14595, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14566, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.value(metadata i32 undef, metadata !14566, metadata !DIExpression()), !dbg !14575
  ret i32 %6, !dbg !14596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !14597 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14602, metadata !DIExpression()), !dbg !14605
  call void @llvm.dbg.value(metadata i64 undef, metadata !14604, metadata !DIExpression()), !dbg !14605
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14601, metadata !DIExpression()), !dbg !14605
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !14603, metadata !DIExpression()), !dbg !14605
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14606
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !14607
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14608
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14610, !srcloc !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14612
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14612
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()) #25, !dbg !14608
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14613
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !14614
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !14179, metadata !DIExpression()) #25, !dbg !14615
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14184, metadata !DIExpression()) #25, !dbg !14615
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !14617
  ret i32 %9, !dbg !14618
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14619 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14623, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 0, metadata !14625, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14630
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14632, !srcloc !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14634
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()) #25, !dbg !14630
  call void @llvm.dbg.value(metadata i32 undef, metadata !14627, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 undef, metadata !14625, metadata !DIExpression()), !dbg !14629
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14635
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14624, metadata !DIExpression()), !dbg !14628
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14638
  br i1 %5, label %7, label %6, !dbg !14640

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14641
  br label %7, !dbg !14643

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !14632
  call void @llvm.dbg.value(metadata i32 %8, metadata !13580, metadata !DIExpression()) #25, !dbg !14634
  call void @llvm.dbg.value(metadata i32 %8, metadata !13574, metadata !DIExpression()) #25, !dbg !14630
  call void @llvm.dbg.value(metadata i32 %8, metadata !14627, metadata !DIExpression()), !dbg !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #25, !dbg !14644
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14644
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #25, !dbg !14646
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !14648, !srcloc !13609
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14624, metadata !DIExpression()), !dbg !14628
  call void @llvm.dbg.value(metadata i32 undef, metadata !14625, metadata !DIExpression()), !dbg !14629
  ret %struct.k_thread* %4, !dbg !14649
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14650 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14652, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14653, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 0, metadata !14654, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14659
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14661, !srcloc !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14663
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14663
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()) #25, !dbg !14659
  call void @llvm.dbg.value(metadata i32 undef, metadata !14656, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14653, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 undef, metadata !14654, metadata !DIExpression()), !dbg !14658
  %3 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !14664
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14653, metadata !DIExpression()), !dbg !14657
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !14667
  br i1 %5, label %8, label %6, !dbg !14669

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14670
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !14672
  br label %8, !dbg !14673

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14661
  call void @llvm.dbg.value(metadata i32 %9, metadata !13580, metadata !DIExpression()) #25, !dbg !14663
  call void @llvm.dbg.value(metadata i32 %9, metadata !13574, metadata !DIExpression()) #25, !dbg !14659
  call void @llvm.dbg.value(metadata i32 %9, metadata !14656, metadata !DIExpression()), !dbg !14658
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #25, !dbg !14674
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14674
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #25, !dbg !14676
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !14678, !srcloc !13609
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14653, metadata !DIExpression()), !dbg !14657
  call void @llvm.dbg.value(metadata i32 undef, metadata !14654, metadata !DIExpression()), !dbg !14658
  ret %struct.k_thread* %4, !dbg !14679
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14680 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14682, metadata !DIExpression()), !dbg !14683
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14538, metadata !DIExpression()) #25, !dbg !14684
  call void @llvm.dbg.value(metadata i32 0, metadata !14539, metadata !DIExpression()) #25, !dbg !14686
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14687
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14689, !srcloc !13583
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !14689
  call void @llvm.dbg.value(metadata i32 %3, metadata !13580, metadata !DIExpression()) #25, !dbg !14691
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14691
  call void @llvm.dbg.value(metadata i32 %3, metadata !13574, metadata !DIExpression()) #25, !dbg !14687
  call void @llvm.dbg.value(metadata i32 %3, metadata !14541, metadata !DIExpression()) #25, !dbg !14686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #25, !dbg !14686
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !14692
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !14693
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14693
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !14695
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !14697, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14539, metadata !DIExpression()) #25, !dbg !14686
  call void @llvm.dbg.value(metadata i32 undef, metadata !14539, metadata !DIExpression()) #25, !dbg !14686
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !14698
  ret void, !dbg !14699
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14700 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14702, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i32 %1, metadata !14703, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i8 0, metadata !14704, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i32 0, metadata !14705, metadata !DIExpression()), !dbg !14709
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14710
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14712, !srcloc !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()) #25, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14714
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()) #25, !dbg !14710
  call void @llvm.dbg.value(metadata i32 undef, metadata !14707, metadata !DIExpression()), !dbg !14709
  call void @llvm.dbg.value(metadata i8 poison, metadata !14704, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i32 undef, metadata !14705, metadata !DIExpression()), !dbg !14709
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !14715
  call void @llvm.dbg.value(metadata i1 %6, metadata !14704, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14708
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !14718

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13737, metadata !DIExpression()) #25, !dbg !14719
  %11 = load i8, i8* %4, align 1, !dbg !14725
  %12 = and i8 %11, 127, !dbg !14725
  store i8 %12, i8* %4, align 1, !dbg !14725
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()) #25, !dbg !14726
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !14728
  store i8 %9, i8* %8, align 2, !dbg !14729
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13754, metadata !DIExpression()) #25, !dbg !14730
  %13 = load i8, i8* %4, align 1, !dbg !14732
  %14 = or i8 %13, -128, !dbg !14732
  store i8 %14, i8* %4, align 1, !dbg !14732
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13761, metadata !DIExpression()) #25, !dbg !14733
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13768, metadata !DIExpression()) #25, !dbg !14735
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13774, metadata !DIExpression()) #25, !dbg !14735
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !14737
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !13775, metadata !DIExpression()) #25, !dbg !14735
  %16 = icmp eq %struct._dnode* %15, null, !dbg !14738
  br i1 %16, label %26, label %17, !dbg !14737

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !13775, metadata !DIExpression()) #25, !dbg !14735
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !14739
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !13775, metadata !DIExpression()) #25, !dbg !14735
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !14740
  %21 = icmp sgt i32 %20, 0, !dbg !14741
  br i1 %21, label %22, label %23, !dbg !14742

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !14743
  br label %27, !dbg !14744

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !14738
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !13775, metadata !DIExpression()) #25, !dbg !14735
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14738
  br i1 %25, label %26, label %17, !dbg !14737, !llvm.loop !14745

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !14747
  br label %27, !dbg !14748

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !14749
  br label %29, !dbg !14750

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !14751
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !14712
  call void @llvm.dbg.value(metadata i32 %30, metadata !13580, metadata !DIExpression()) #25, !dbg !14714
  call void @llvm.dbg.value(metadata i32 %30, metadata !13574, metadata !DIExpression()) #25, !dbg !14710
  call void @llvm.dbg.value(metadata i32 %30, metadata !14707, metadata !DIExpression()), !dbg !14709
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14753
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #25, !dbg !14755
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !14757, !srcloc !13609
  call void @llvm.dbg.value(metadata i8 poison, metadata !14704, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.value(metadata i32 undef, metadata !14705, metadata !DIExpression()), !dbg !14709
  ret i1 %6, !dbg !14758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14759 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14763, metadata !DIExpression()), !dbg !14766
  call void @llvm.dbg.value(metadata i32 %1, metadata !14764, metadata !DIExpression()), !dbg !14766
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !14767
  call void @llvm.dbg.value(metadata i1 %3, metadata !14765, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14766
  br i1 %3, label %4, label %12, !dbg !14768

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14770
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !14771
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !14771
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !14771
  %9 = load i8, i8* %8, align 1, !dbg !14771
  %10 = icmp eq i8 %9, 0, !dbg !14772
  br i1 %10, label %11, label %12, !dbg !14773

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14774
  br label %12, !dbg !14776

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !14777
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !14778 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14780, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14784
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14786, !srcloc !13583
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %2, metadata !13580, metadata !DIExpression()) #25, !dbg !14788
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14788
  call void @llvm.dbg.value(metadata i32 %2, metadata !13574, metadata !DIExpression()) #25, !dbg !14784
  call void @llvm.dbg.value(metadata i32 %2, metadata !14782, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14780, metadata !DIExpression()), !dbg !14783
  tail call fastcc void @z_sched_lock() #26, !dbg !14789
  call void @llvm.dbg.value(metadata i32 %2, metadata !13595, metadata !DIExpression()) #25, !dbg !14792
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14792
  call void @llvm.dbg.value(metadata i32 %2, metadata !13603, metadata !DIExpression()) #25, !dbg !14794
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14796, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14780, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.value(metadata i32 undef, metadata !14780, metadata !DIExpression()), !dbg !14783
  ret void, !dbg !14797
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !14798 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14799
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !14800
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !14800
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !14800
  %5 = load i8, i8* %4, align 1, !dbg !14801
  %6 = add i8 %5, -1, !dbg !14801
  store i8 %6, i8* %4, align 1, !dbg !14801
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14802, !srcloc !14804
  ret void, !dbg !14805
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !14806 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14808, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !14812
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14814, !srcloc !13583
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14814
  call void @llvm.dbg.value(metadata i32 %2, metadata !13580, metadata !DIExpression()) #25, !dbg !14816
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !14816
  call void @llvm.dbg.value(metadata i32 %2, metadata !13574, metadata !DIExpression()) #25, !dbg !14812
  call void @llvm.dbg.value(metadata i32 %2, metadata !14810, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()), !dbg !14811
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14817
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !14820
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !14820
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14820
  %7 = load i8, i8* %6, align 1, !dbg !14821
  %8 = add i8 %7, 1, !dbg !14821
  store i8 %8, i8* %6, align 1, !dbg !14821
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !14822
  call void @llvm.dbg.value(metadata i32 %2, metadata !13595, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !14823
  call void @llvm.dbg.value(metadata i32 %2, metadata !13603, metadata !DIExpression()) #25, !dbg !14825
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !14827, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 1, metadata !14808, metadata !DIExpression()), !dbg !14811
  call void @llvm.dbg.value(metadata i32 undef, metadata !14808, metadata !DIExpression()), !dbg !14811
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !14828
  ret void, !dbg !14829
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #5 !dbg !14830 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14831
  ret %struct.k_thread* %1, !dbg !14832
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !14833 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !14837, metadata !DIExpression()), !dbg !14842
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !14838, metadata !DIExpression()), !dbg !14842
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !14843
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14839, metadata !DIExpression()), !dbg !14842
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !14844
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14840, metadata !DIExpression()), !dbg !14842
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !14845
  call void @llvm.dbg.value(metadata i32 %5, metadata !14841, metadata !DIExpression()), !dbg !14842
  %6 = icmp sgt i32 %5, 0, !dbg !14846
  br i1 %6, label %17, label %7, !dbg !14848

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !14849
  br i1 %8, label %17, label %9, !dbg !14851

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !14852
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !14852
  %12 = load i32, i32* %11, align 8, !dbg !14852
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !14854
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !14854
  %15 = load i32, i32* %14, align 8, !dbg !14854
  %16 = icmp ult i32 %12, %15, !dbg !14855
  br label %17, !dbg !14856

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !14857
  ret i1 %18, !dbg !14858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14859 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14876, metadata !DIExpression()), !dbg !14891
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14877, metadata !DIExpression()), !dbg !14891
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14892
  %5 = load i32, i32* %4, align 4, !dbg !14893
  %6 = add nsw i32 %5, 1, !dbg !14893
  store i32 %6, i32* %4, align 4, !dbg !14893
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !14894
  store i32 %5, i32* %7, align 8, !dbg !14895
  %8 = load i32, i32* %4, align 4, !dbg !14896
  %9 = icmp eq i32 %8, 0, !dbg !14897
  br i1 %9, label %10, label %32, !dbg !14898

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !14899
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14899
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !14879, metadata !DIExpression()), !dbg !14899
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14899
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !14899
  %14 = load i32, i32* %13, align 4, !dbg !14899
  %15 = shl i32 %14, 2, !dbg !14899
  %16 = alloca i8, i32 %15, align 8, !dbg !14899
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !14899
  store i8* %16, i8** %17, align 4, !dbg !14899
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !14899
  %19 = alloca i8, i32 %14, align 8, !dbg !14899
  store i8* %19, i8** %18, align 4, !dbg !14899
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !14899
  store i32 -1, i32* %20, align 4, !dbg !14899
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14900
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14888, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !14878, metadata !DIExpression()), !dbg !14891
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !14902
  br i1 %22, label %23, label %24, !dbg !14899

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !14902
  br label %32, !dbg !14903

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !14878, metadata !DIExpression()), !dbg !14891
  %26 = load i32, i32* %4, align 4, !dbg !14904
  %27 = add nsw i32 %26, 1, !dbg !14904
  store i32 %27, i32* %4, align 4, !dbg !14904
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !14906
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !14906
  store i32 %26, i32* %29, align 8, !dbg !14907
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !14900
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14888, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !14878, metadata !DIExpression()), !dbg !14891
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !14902
  br i1 %31, label %23, label %24, !dbg !14899, !llvm.loop !14908

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14910
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14911
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !14912
  ret void, !dbg !14913
}

; Function Attrs: optsize
declare !dbg !14914 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !14919 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14922 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14924, metadata !DIExpression()), !dbg !14926
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14925, metadata !DIExpression()), !dbg !14926
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14927
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !14928
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !14929
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !14930
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !14930
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !14932
  br i1 %7, label %8, label %10, !dbg !14933

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !14934
  store i32 0, i32* %9, align 4, !dbg !14936
  br label %10, !dbg !14937

10:                                               ; preds = %8, %2
  ret void, !dbg !14938
}

; Function Attrs: optsize
declare !dbg !14939 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !14940 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !14944, metadata !DIExpression()), !dbg !14947
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14945, metadata !DIExpression()), !dbg !14947
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !14948
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !14949
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !14946, metadata !DIExpression()), !dbg !14947
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14945, metadata !DIExpression()), !dbg !14947
  ret %struct.k_thread* %4, !dbg !14950
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !14951 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !14955, metadata !DIExpression()), !dbg !14956
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !14957
  ret %struct.rbnode* %2, !dbg !14958
}

; Function Attrs: optsize
declare !dbg !14959 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !14962 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !14972, metadata !DIExpression()), !dbg !14976
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !14977
  %3 = load i32, i32* %2, align 4, !dbg !14977
  %4 = icmp eq i32 %3, 0, !dbg !14979
  br i1 %4, label %10, label %5, !dbg !14980

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14973, metadata !DIExpression()), !dbg !14976
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !14981, !range !3987
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !14982
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !14974, metadata !DIExpression()), !dbg !14976
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef %7) #26, !dbg !14983
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !14975, metadata !DIExpression()), !dbg !14976
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14973, metadata !DIExpression()), !dbg !14976
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !14976
  ret %struct.k_thread* %11, !dbg !14984
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !14985 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !14989, metadata !DIExpression()), !dbg !14992
  call void @llvm.dbg.value(metadata i32 0, metadata !14990, metadata !DIExpression()), !dbg !14992
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.150(%struct._wait_q_t* noundef %0) #26, !dbg !14993
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14991, metadata !DIExpression()), !dbg !14992
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14994
  br i1 %3, label %8, label %4, !dbg !14995

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14996
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !14998
  call void @llvm.dbg.value(metadata i32 1, metadata !14990, metadata !DIExpression()), !dbg !14992
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.150(%struct._wait_q_t* noundef %0) #26, !dbg !14993
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !14991, metadata !DIExpression()), !dbg !14992
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !14994
  br i1 %7, label %8, label %4, !dbg !14995, !llvm.loop !14999

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !14992
  ret i32 %9, !dbg !15001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.150(%struct._wait_q_t* noundef readonly %0) unnamed_addr #5 !dbg !15002 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15004, metadata !DIExpression()), !dbg !15005
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15006
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef %2) #26, !dbg !15007
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15008
  ret %struct.k_thread* %4, !dbg !15009
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #4 !dbg !15010 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15019, metadata !DIExpression()), !dbg !15020
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15021
  tail call fastcc void @sys_dlist_init.151(%struct._dnode* noundef nonnull %2) #26, !dbg !15022
  ret void, !dbg !15023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.151(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !15024 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15028, metadata !DIExpression()), !dbg !15029
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15030
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15031
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15032
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15033
  ret void, !dbg !15034
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15035 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !15036
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !15037
  ret void, !dbg !15038
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !15039 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15044, metadata !DIExpression()), !dbg !15045
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15046
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15046
  %4 = load i8, i8* %3, align 2, !dbg !15046
  %5 = sext i8 %4 to i32, !dbg !15047
  ret i32 %5, !dbg !15048
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15049 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15053, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.value(metadata i32 %1, metadata !15054, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15055, metadata !DIExpression()), !dbg !15056
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !15057
  ret void, !dbg !15058
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15059 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !15060
  br i1 %1, label %8, label %2, !dbg !15061

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !15062
  br i1 %3, label %8, label %4, !dbg !15063

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15064
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !15065
  %7 = xor i1 %6, true, !dbg !15063
  br label %8, !dbg !15063

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15066
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #5 !dbg !15067 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15068, !range !6433
  %2 = icmp eq i8 %1, 0, !dbg !15068
  ret i1 %2, !dbg !15069
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15070 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !15073
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15075, !srcloc !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()) #25, !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !15077
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()) #25, !dbg !15073
  call void @llvm.dbg.value(metadata i32 undef, metadata !15072, metadata !DIExpression()), !dbg !15078
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15079
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13737, metadata !DIExpression()) #25, !dbg !15082
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !15084
  %4 = load i8, i8* %3, align 1, !dbg !15085
  %5 = and i8 %4, 127, !dbg !15085
  store i8 %5, i8* %3, align 1, !dbg !15085
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !13745, metadata !DIExpression()) #25, !dbg !15086
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !15088
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15089
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13754, metadata !DIExpression()) #25, !dbg !15090
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !15092
  %8 = load i8, i8* %7, align 1, !dbg !15093
  %9 = or i8 %8, -128, !dbg !15093
  store i8 %9, i8* %7, align 1, !dbg !15093
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13761, metadata !DIExpression()) #25, !dbg !15094
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !13768, metadata !DIExpression()) #25, !dbg !15096
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !13774, metadata !DIExpression()) #25, !dbg !15096
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.129(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15098
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !13775, metadata !DIExpression()) #25, !dbg !15096
  %11 = icmp eq %struct._dnode* %10, null, !dbg !15099
  br i1 %11, label %22, label %12, !dbg !15098

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !13775, metadata !DIExpression()) #25, !dbg !15096
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !15100
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !13775, metadata !DIExpression()) #25, !dbg !15096
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !15101
  %16 = icmp sgt i32 %15, 0, !dbg !15102
  br i1 %16, label %17, label %19, !dbg !15103

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15104
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !15105
  br label %24, !dbg !15106

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !15099
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !13775, metadata !DIExpression()) #25, !dbg !15096
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15099
  br i1 %21, label %22, label %12, !dbg !15098, !llvm.loop !15107

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !15109
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !15110
  br label %24, !dbg !15111

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !15075
  call void @llvm.dbg.value(metadata i32 %25, metadata !13580, metadata !DIExpression()) #25, !dbg !15077
  call void @llvm.dbg.value(metadata i32 %25, metadata !13574, metadata !DIExpression()) #25, !dbg !15073
  call void @llvm.dbg.value(metadata i32 %25, metadata !15072, metadata !DIExpression()), !dbg !15078
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15112
  call void @llvm.dbg.value(metadata i32 undef, metadata !14179, metadata !DIExpression()) #25, !dbg !15113
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14184, metadata !DIExpression()) #25, !dbg !15113
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !15115
  ret void, !dbg !15116
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15117 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15121, metadata !DIExpression()), !dbg !15124
  %3 = icmp eq i64 %2, -1, !dbg !15125
  br i1 %3, label %4, label %6, !dbg !15127

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15128
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !15130
  br label %11, !dbg !15131

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !15122, metadata !DIExpression()), !dbg !15124
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !15132
  %8 = sext i32 %7 to i64, !dbg !15132
  call void @llvm.dbg.value(metadata i64 %8, metadata !15122, metadata !DIExpression()), !dbg !15124
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !15133
  %10 = trunc i64 %9 to i32, !dbg !15133
  call void @llvm.dbg.value(metadata i32 %10, metadata !15123, metadata !DIExpression()), !dbg !15124
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !15124
  ret i32 %12, !dbg !15134
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15135 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15139, metadata !DIExpression()), !dbg !15140
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15141, !srcloc !15143
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !15144
  ret void, !dbg !15145
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15146 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15150, metadata !DIExpression()), !dbg !15154
  %2 = icmp eq i64 %0, 0, !dbg !15155
  br i1 %2, label %3, label %4, !dbg !15157

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !15158
  br label %29, !dbg !15160

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !15152, metadata !DIExpression()), !dbg !15154
  %5 = icmp sgt i64 %0, -3, !dbg !15161
  br i1 %5, label %6, label %10, !dbg !15163

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15164
  %8 = trunc i64 %0 to i32, !dbg !15166
  %9 = add i32 %7, %8, !dbg !15166
  call void @llvm.dbg.value(metadata i32 %9, metadata !15151, metadata !DIExpression()), !dbg !15154
  br label %13, !dbg !15167

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !15168
  %12 = sub i32 -2, %11, !dbg !15168
  call void @llvm.dbg.value(metadata i32 %12, metadata !15151, metadata !DIExpression()), !dbg !15154
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !15170
  call void @llvm.dbg.value(metadata i32 %14, metadata !15151, metadata !DIExpression()), !dbg !15154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !15171
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15173, !srcloc !13583
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !15173
  call void @llvm.dbg.value(metadata i32 %16, metadata !13580, metadata !DIExpression()) #25, !dbg !15175
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !15175
  call void @llvm.dbg.value(metadata i32 %16, metadata !13574, metadata !DIExpression()) #25, !dbg !15171
  call void @llvm.dbg.value(metadata i32 %16, metadata !15153, metadata !DIExpression()), !dbg !15154
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15176
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !15177
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !15178
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15179
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15180
  tail call fastcc void @z_add_thread_timeout.139(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !15180
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15181
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !15182
  call void @llvm.dbg.value(metadata i32 %16, metadata !14179, metadata !DIExpression()) #25, !dbg !15183
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14184, metadata !DIExpression()) #25, !dbg !15183
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !15185
  %22 = zext i32 %14 to i64, !dbg !15186
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !15187
  %24 = zext i32 %23 to i64, !dbg !15187
  %25 = sub nsw i64 %22, %24, !dbg !15188
  call void @llvm.dbg.value(metadata i64 %25, metadata !15150, metadata !DIExpression()), !dbg !15154
  %26 = icmp sgt i64 %25, 0, !dbg !15189
  %27 = select i1 %26, i64 %25, i64 0, !dbg !15189
  %28 = trunc i64 %27 to i32, !dbg !15189
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !15154
  ret i32 %30, !dbg !15190
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15191 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15193, metadata !DIExpression()), !dbg !15194
  call void @llvm.dbg.value(metadata i64 %0, metadata !13615, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 10000, metadata !13618, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i32 1000, metadata !13619, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i8 1, metadata !13620, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i1 false, metadata !13621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15195
  call void @llvm.dbg.value(metadata i1 false, metadata !13622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15195
  call void @llvm.dbg.value(metadata i8 0, metadata !13623, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i1 false, metadata !13624, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15195
  call void @llvm.dbg.value(metadata i1 true, metadata !13625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15195
  call void @llvm.dbg.value(metadata i64 0, metadata !13626, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i64 0, metadata !13626, metadata !DIExpression()), !dbg !15195
  call void @llvm.dbg.value(metadata i64 %0, metadata !13615, metadata !DIExpression()), !dbg !15195
  %2 = udiv i64 %0, 10, !dbg !15197
  ret i64 %2, !dbg !15201
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15202 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15203, !srcloc !15205
  tail call void @z_impl_k_yield() #26, !dbg !15206
  ret void, !dbg !15207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15212, metadata !DIExpression()), !dbg !15214
  %2 = sext i32 %0 to i64, !dbg !15215
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !15216
  call void @llvm.dbg.value(metadata i64 %3, metadata !15213, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15214
  %4 = shl i64 %3, 32, !dbg !15217
  %5 = ashr exact i64 %4, 32, !dbg !15217
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !15218
  call void @llvm.dbg.value(metadata i32 %6, metadata !15213, metadata !DIExpression()), !dbg !15214
  %7 = sext i32 %6 to i64, !dbg !15219
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !15220
  %9 = trunc i64 %8 to i32, !dbg !15220
  ret i32 %9, !dbg !15221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #11 !dbg !15222 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15224, metadata !DIExpression()), !dbg !15225
  call void @llvm.dbg.value(metadata i64 %0, metadata !13615, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13618, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i32 10000, metadata !13619, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i8 1, metadata !13620, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i1 false, metadata !13621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15226
  call void @llvm.dbg.value(metadata i1 true, metadata !13622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15226
  call void @llvm.dbg.value(metadata i8 0, metadata !13623, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i1 false, metadata !13624, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15226
  call void @llvm.dbg.value(metadata i1 true, metadata !13625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15226
  call void @llvm.dbg.value(metadata i64 0, metadata !13626, metadata !DIExpression()), !dbg !15226
  call void @llvm.dbg.value(metadata i64 0, metadata !13626, metadata !DIExpression()), !dbg !15226
  %2 = add i64 %0, 99, !dbg !15228
  call void @llvm.dbg.value(metadata i64 %2, metadata !13615, metadata !DIExpression()), !dbg !15226
  %3 = udiv i64 %2, 100, !dbg !15229
  ret i64 %3, !dbg !15230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #11 !dbg !15231 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15233, metadata !DIExpression()), !dbg !15234
  call void @llvm.dbg.value(metadata i64 %0, metadata !13615, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32 10000, metadata !13618, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i32 1000000, metadata !13619, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i8 1, metadata !13620, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i1 false, metadata !13621, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15235
  call void @llvm.dbg.value(metadata i1 false, metadata !13622, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15235
  call void @llvm.dbg.value(metadata i8 0, metadata !13623, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i1 true, metadata !13624, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15235
  call void @llvm.dbg.value(metadata i1 false, metadata !13625, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15235
  call void @llvm.dbg.value(metadata i64 0, metadata !13626, metadata !DIExpression()), !dbg !15235
  call void @llvm.dbg.value(metadata i64 0, metadata !13626, metadata !DIExpression()), !dbg !15235
  %2 = mul i64 %0, 100, !dbg !15237
  ret i64 %2, !dbg !15239
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15240 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15242, metadata !DIExpression()), !dbg !15243
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !15244
  br i1 %2, label %14, label %3, !dbg !15246

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !15247
  %5 = icmp slt i32 %4, 0, !dbg !15249
  br i1 %5, label %6, label %10, !dbg !15250

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15251
  %8 = load i8, i8* %7, align 1, !dbg !15251
  %9 = icmp eq i8 %8, 16, !dbg !15254
  br i1 %9, label %10, label %14, !dbg !15255

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !15256
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !15257
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15258, !srcloc !14219
  call void @llvm.dbg.value(metadata i32 %11, metadata !14215, metadata !DIExpression()) #25, !dbg !15262
  %12 = icmp eq i32 %11, 0, !dbg !15263
  br i1 %12, label %13, label %14, !dbg !15264

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !15265
  br label %14, !dbg !15267

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !15268
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15269 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15271, metadata !DIExpression()), !dbg !15272
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15273
  %3 = load i8, i8* %2, align 1, !dbg !15273
  %4 = and i8 %3, 2, !dbg !15274
  %5 = icmp ne i8 %4, 0, !dbg !15275
  ret i1 %5, !dbg !15276
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #5 !dbg !15277 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15282
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15281, metadata !DIExpression()), !dbg !15283
  ret %struct.k_thread* %1, !dbg !15284
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !15285 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15286, !srcloc !14219
  call void @llvm.dbg.value(metadata i32 %1, metadata !14215, metadata !DIExpression()) #25, !dbg !15289
  %2 = icmp eq i32 %1, 0, !dbg !15290
  br i1 %2, label %3, label %8, !dbg !15291

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15292
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !15293
  %6 = icmp ne i32 %5, 0, !dbg !15291
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !15294
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15295 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15297, metadata !DIExpression()), !dbg !15299
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !15300
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15302, !srcloc !13583
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15302
  call void @llvm.dbg.value(metadata i32 %3, metadata !13580, metadata !DIExpression()) #25, !dbg !15304
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !15304
  call void @llvm.dbg.value(metadata i32 %3, metadata !13574, metadata !DIExpression()) #25, !dbg !15300
  call void @llvm.dbg.value(metadata i32 %3, metadata !15298, metadata !DIExpression()), !dbg !15299
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15305
  %5 = load i8, i8* %4, align 4, !dbg !15305
  %6 = and i8 %5, 1, !dbg !15307
  %7 = icmp eq i8 %6, 0, !dbg !15308
  br i1 %7, label %9, label %8, !dbg !15309

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !15310
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !15310
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !15313
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15315, !srcloc !13609
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !15316, !srcloc !15318
  br label %24, !dbg !15319

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15320
  %11 = load i8, i8* %10, align 1, !dbg !15320
  %12 = and i8 %11, 8, !dbg !15322
  %13 = icmp eq i8 %12, 0, !dbg !15323
  br i1 %13, label %15, label %14, !dbg !15324

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !15325
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !15325
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !15328
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15330, !srcloc !13609
  br label %24, !dbg !15331

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !15332
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15333
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !15335
  br i1 %17, label %18, label %23, !dbg !15336

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15337, !srcloc !14219
  call void @llvm.dbg.value(metadata i32 %19, metadata !14215, metadata !DIExpression()) #25, !dbg !15340
  %20 = icmp eq i32 %19, 0, !dbg !15341
  br i1 %20, label %21, label %23, !dbg !15342

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !14179, metadata !DIExpression()) #25, !dbg !15343
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14184, metadata !DIExpression()) #25, !dbg !15343
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !15346
  br label %23, !dbg !15347

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !13595, metadata !DIExpression()) #25, !dbg !15348
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !15348
  call void @llvm.dbg.value(metadata i32 %3, metadata !13603, metadata !DIExpression()) #25, !dbg !15350
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15352, !srcloc !13609
  br label %24, !dbg !15353

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !15353
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15354 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15356, metadata !DIExpression()), !dbg !15357
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15358
  %3 = load i8, i8* %2, align 1, !dbg !15358
  %4 = and i8 %3, 8, !dbg !15360
  %5 = icmp eq i8 %4, 0, !dbg !15361
  br i1 %5, label %6, label %20, !dbg !15362

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !15363
  %8 = or i8 %7, 8, !dbg !15363
  store i8 %8, i8* %2, align 1, !dbg !15363
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !15365
  br i1 %9, label %10, label %12, !dbg !15367

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13737, metadata !DIExpression()) #25, !dbg !15368
  %11 = and i8 %8, 95, !dbg !15371
  store i8 %11, i8* %2, align 1, !dbg !15371
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13745, metadata !DIExpression()) #25, !dbg !15372
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !15374
  br label %12, !dbg !15375

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15376
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !15376
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !15378
  br i1 %15, label %17, label %16, !dbg !15379

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15380
  br label %17, !dbg !15382

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !15383
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15384
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #26, !dbg !15385
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !15386
  br label %20, !dbg !15387

20:                                               ; preds = %17, %1
  ret void, !dbg !15388
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !15389 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15393, metadata !DIExpression()), !dbg !15395
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.150(%struct._wait_q_t* noundef %0) #26, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15394, metadata !DIExpression()), !dbg !15395
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15397
  br i1 %3, label %10, label %4, !dbg !15398

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15399
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !15401
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !15402, metadata !DIExpression()), !dbg !15408
  call void @llvm.dbg.value(metadata i32 0, metadata !15407, metadata !DIExpression()), !dbg !15408
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !15410
  store i32 0, i32* %7, align 4, !dbg !15411
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !15412
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.150(%struct._wait_q_t* noundef %0) #26, !dbg !15396
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !15394, metadata !DIExpression()), !dbg !15395
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !15397
  br i1 %9, label %10, label %4, !dbg !15398, !llvm.loop !15413

10:                                               ; preds = %4, %1
  ret void, !dbg !15415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !15416 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15421, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15420, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !15425
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15427, !srcloc !13583
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15427
  call void @llvm.dbg.value(metadata i32 %4, metadata !13580, metadata !DIExpression()) #25, !dbg !15429
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !15429
  call void @llvm.dbg.value(metadata i32 %4, metadata !13574, metadata !DIExpression()) #25, !dbg !15425
  call void @llvm.dbg.value(metadata i32 %4, metadata !15422, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata i32 0, metadata !15423, metadata !DIExpression()), !dbg !15424
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15430
  %6 = load i8, i8* %5, align 1, !dbg !15430
  %7 = and i8 %6, 8, !dbg !15432
  %8 = icmp eq i8 %7, 0, !dbg !15433
  br i1 %8, label %9, label %24, !dbg !15434

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !15421, metadata !DIExpression()), !dbg !15424
  %11 = icmp eq i64 %10, 0, !dbg !15435
  br i1 %11, label %24, label %12, !dbg !15437

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15438
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !15440
  br i1 %14, label %24, label %15, !dbg !15441

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15442
  %17 = load %struct._wait_q_t*, %struct._wait_q_t** %16, align 8, !dbg !15442
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !15443
  %19 = icmp eq %struct._wait_q_t* %17, %18, !dbg !15444
  br i1 %19, label %24, label %20, !dbg !15445

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15446
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef nonnull %21) #26, !dbg !15448
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15449
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !15450
  call void @llvm.dbg.value(metadata i32 %4, metadata !14179, metadata !DIExpression()) #25, !dbg !15451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !14184, metadata !DIExpression()) #25, !dbg !15451
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !15453
  call void @llvm.dbg.value(metadata i32 %23, metadata !15423, metadata !DIExpression()), !dbg !15424
  br label %26, !dbg !15454

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !15455
  call void @llvm.dbg.value(metadata i32 %25, metadata !15423, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.value(metadata i32 %4, metadata !13595, metadata !DIExpression()) #25, !dbg !15456
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !15456
  call void @llvm.dbg.value(metadata i32 %4, metadata !13603, metadata !DIExpression()) #25, !dbg !15458
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15460, !srcloc !13609
  br label %26, !dbg !15461

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !15424
  ret i32 %27, !dbg !15462
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !15463 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15467, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i32 %1, metadata !15468, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i8* %2, metadata !15469, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i8 0, metadata !15471, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i32 0, metadata !15472, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13568, metadata !DIExpression()) #25, !dbg !15477
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15479, !srcloc !13583
  call void @llvm.dbg.value(metadata i32 undef, metadata !13580, metadata !DIExpression()) #25, !dbg !15481
  call void @llvm.dbg.value(metadata i32 undef, metadata !13581, metadata !DIExpression()) #25, !dbg !15481
  call void @llvm.dbg.value(metadata i32 undef, metadata !13574, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 undef, metadata !15474, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i8 poison, metadata !15471, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i32 undef, metadata !15472, metadata !DIExpression()), !dbg !15476
  %5 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !15482
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15470, metadata !DIExpression()), !dbg !15475
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15485
  br i1 %7, label %12, label %8, !dbg !15487

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15488, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i32 %1, metadata !15493, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata i8* %2, metadata !15494, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15402, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.value(metadata i32 %1, metadata !15407, metadata !DIExpression()), !dbg !15498
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !15500
  store i32 %1, i32* %9, align 4, !dbg !15501
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !15502
  store i8* %2, i8** %10, align 4, !dbg !15503
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15504
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !15505
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !15506
  call void @llvm.dbg.value(metadata i8 1, metadata !15471, metadata !DIExpression()), !dbg !15475
  br label %12, !dbg !15507

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !15479
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !15479
  call void @llvm.dbg.value(metadata i32 %14, metadata !13580, metadata !DIExpression()) #25, !dbg !15481
  call void @llvm.dbg.value(metadata i32 %14, metadata !13574, metadata !DIExpression()) #25, !dbg !15477
  call void @llvm.dbg.value(metadata i32 %14, metadata !15474, metadata !DIExpression()), !dbg !15476
  call void @llvm.dbg.value(metadata i8 poison, metadata !15471, metadata !DIExpression()), !dbg !15475
  call void @llvm.dbg.value(metadata i32 undef, metadata !13595, metadata !DIExpression()) #25, !dbg !15508
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13600, metadata !DIExpression()) #25, !dbg !15508
  call void @llvm.dbg.value(metadata i32 undef, metadata !13603, metadata !DIExpression()) #25, !dbg !15510
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !15512, !srcloc !13609
  call void @llvm.dbg.value(metadata i32 undef, metadata !15472, metadata !DIExpression()), !dbg !15476
  ret i1 %13, !dbg !15513
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !15514 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15520, metadata !DIExpression()), !dbg !15525
  call void @llvm.dbg.value(metadata i64 undef, metadata !15522, metadata !DIExpression()), !dbg !15525
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15519, metadata !DIExpression()), !dbg !15525
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15521, metadata !DIExpression()), !dbg !15525
  call void @llvm.dbg.value(metadata i8** %4, metadata !15523, metadata !DIExpression()), !dbg !15525
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #26, !dbg !15526
  call void @llvm.dbg.value(metadata i32 %6, metadata !15524, metadata !DIExpression()), !dbg !15525
  %7 = icmp eq i8** %4, null, !dbg !15527
  br i1 %7, label %12, label %8, !dbg !15529

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15530
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !15532
  %11 = load i8*, i8** %10, align 4, !dbg !15532
  store i8* %11, i8** %4, align 4, !dbg !15533
  br label %12, !dbg !15534

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !15535
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !15536 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !15538
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !15539
  ret void, !dbg !15540
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15541 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !15551, metadata !DIExpression()), !dbg !15568
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15549, metadata !DIExpression()), !dbg !15568
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !15550, metadata !DIExpression()), !dbg !15568
  %5 = icmp eq i64 %4, -1, !dbg !15569
  br i1 %5, label %55, label %6, !dbg !15571

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !15572
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !15573
  call void @llvm.dbg.value(metadata i32 0, metadata !15552, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !15582
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15584, !srcloc !15590
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !15584
  call void @llvm.dbg.value(metadata i32 %9, metadata !15587, metadata !DIExpression()) #25, !dbg !15591
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !15591
  call void @llvm.dbg.value(metadata i32 %9, metadata !15581, metadata !DIExpression()) #25, !dbg !15582
  call void @llvm.dbg.value(metadata i32 %9, metadata !15558, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()), !dbg !15574
  %10 = icmp slt i64 %4, -1, !dbg !15592
  br i1 %10, label %11, label %17, !dbg !15593

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !15594
  %13 = add i64 %4, %12, !dbg !15595
  %14 = sub i64 -2, %13, !dbg !15595
  call void @llvm.dbg.value(metadata i64 %14, metadata !15562, metadata !DIExpression()), !dbg !15596
  %15 = icmp sgt i64 %14, 1, !dbg !15597
  %16 = select i1 %15, i64 %14, i64 1, !dbg !15597
  br label %22, !dbg !15598

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !15599
  %19 = tail call fastcc i32 @elapsed.162() #26, !dbg !15601
  %20 = sext i32 %19 to i64, !dbg !15601
  %21 = add nsw i64 %18, %20, !dbg !15602
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !15603
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15604
  store i64 %23, i64* %24, align 8, !dbg !15605
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !15606
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !15559, metadata !DIExpression()), !dbg !15608
  %26 = icmp eq %struct._timeout* %25, null, !dbg !15609
  br i1 %26, label %42, label %27, !dbg !15609

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !15610
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !15559, metadata !DIExpression()), !dbg !15608
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15614
  %31 = load i64, i64* %30, align 8, !dbg !15614
  %32 = icmp slt i64 %28, %31, !dbg !15615
  br i1 %32, label %33, label %38, !dbg !15616

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !15614
  %35 = sub nsw i64 %31, %28, !dbg !15617
  store i64 %35, i64* %34, align 8, !dbg !15617
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !15619
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15620
  tail call fastcc void @sys_dlist_insert.163(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !15621
  br label %44, !dbg !15622

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !15623
  store i64 %39, i64* %24, align 8, !dbg !15623
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !15624
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !15559, metadata !DIExpression()), !dbg !15608
  %41 = icmp eq %struct._timeout* %40, null, !dbg !15609
  br i1 %41, label %42, label %27, !dbg !15609, !llvm.loop !15625

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15627
  tail call fastcc void @sys_dlist_append.164(%struct._dnode* noundef %43) #26, !dbg !15630
  br label %44, !dbg !15631

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !15632
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !15633
  br i1 %46, label %47, label %54, !dbg !15634

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !15635
  call void @llvm.dbg.value(metadata i32 %48, metadata !15565, metadata !DIExpression()), !dbg !15636
  %49 = icmp ne i32 %48, 0, !dbg !15637
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !15639
  br i1 %52, label %54, label %53, !dbg !15639

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !15640
  br label %54, !dbg !15642

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !15643, metadata !DIExpression()) #25, !dbg !15649
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !15649
  call void @llvm.dbg.value(metadata i32 %9, metadata !15651, metadata !DIExpression()) #25, !dbg !15654
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !15656, !srcloc !15657
  call void @llvm.dbg.value(metadata i32 undef, metadata !15552, metadata !DIExpression()), !dbg !15574
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !15658
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.162() unnamed_addr #1 !dbg !15659 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !15662
  %2 = icmp eq i32 %1, 0, !dbg !15663
  br i1 %2, label %3, label %5, !dbg !15662

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !15664
  br label %5, !dbg !15662

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !15662
  ret i32 %6, !dbg !15665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #5 !dbg !15666 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.167() #26, !dbg !15672
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15670, metadata !DIExpression()), !dbg !15673
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !15674
  ret %struct._timeout* %2, !dbg !15675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.163(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #7 !dbg !15676 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15680, metadata !DIExpression()), !dbg !15684
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15681, metadata !DIExpression()), !dbg !15684
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15685
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15685
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15682, metadata !DIExpression()), !dbg !15684
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15686
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15687
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15688
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15689
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15690
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15691
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15692
  ret void, !dbg !15693
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #5 !dbg !15694 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15698, metadata !DIExpression()), !dbg !15700
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15701
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.165(%struct._dnode* noundef %2) #26, !dbg !15702
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15699, metadata !DIExpression()), !dbg !15700
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !15703
  ret %struct._timeout* %4, !dbg !15704
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.164(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15705 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15710, metadata !DIExpression()), !dbg !15713
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15711, metadata !DIExpression()), !dbg !15713
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15714
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !15712, metadata !DIExpression()), !dbg !15713
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15715
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !15716
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15717
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !15718
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !15719
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !15720
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15721
  ret void, !dbg !15722
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !15723 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !15728
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !15725, metadata !DIExpression()), !dbg !15729
  %2 = tail call fastcc i32 @elapsed.162() #26, !dbg !15730
  call void @llvm.dbg.value(metadata i32 %2, metadata !15726, metadata !DIExpression()), !dbg !15729
  %3 = icmp eq %struct._timeout* %1, null, !dbg !15731
  br i1 %3, label %14, label %4, !dbg !15733

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !15734
  %6 = load i64, i64* %5, align 8, !dbg !15734
  %7 = sext i32 %2 to i64, !dbg !15735
  %8 = sub nsw i64 %6, %7, !dbg !15736
  %9 = icmp sgt i64 %8, 2147483647, !dbg !15737
  br i1 %9, label %14, label %10, !dbg !15738

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !15739
  %12 = select i1 %11, i64 %8, i64 0, !dbg !15739
  %13 = trunc i64 %12 to i32, !dbg !15739
  call void @llvm.dbg.value(metadata i32 %13, metadata !15727, metadata !DIExpression()), !dbg !15729
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !15741
  call void @llvm.dbg.value(metadata i32 %15, metadata !15727, metadata !DIExpression()), !dbg !15729
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15742
  %17 = icmp ne i32 %16, 0, !dbg !15744
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !15745
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !15745
  call void @llvm.dbg.value(metadata i32 %20, metadata !15727, metadata !DIExpression()), !dbg !15729
  ret i32 %20, !dbg !15746
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.165(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15747 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15751, metadata !DIExpression()), !dbg !15753
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15752, metadata !DIExpression()), !dbg !15753
  %2 = icmp eq %struct._dnode* %0, null, !dbg !15754
  br i1 %2, label %5, label %3, !dbg !15755

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.166(%struct._dnode* noundef nonnull %0) #26, !dbg !15756
  br label %5, !dbg !15755

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !15755
  ret %struct._dnode* %6, !dbg !15757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.166(%struct._dnode* noundef readonly %0) unnamed_addr #5 !dbg !15758 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15760, metadata !DIExpression()), !dbg !15762
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15761, metadata !DIExpression()), !dbg !15762
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !15763
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !15764
  br i1 %3, label %7, label %4, !dbg !15765

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15766
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !15766
  br label %7, !dbg !15765

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !15765
  ret %struct._dnode* %8, !dbg !15767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.167() unnamed_addr #5 !dbg !15768 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15772, metadata !DIExpression()), !dbg !15773
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.168() #26, !dbg !15774
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !15774
  ret %struct._dnode* %3, !dbg !15775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.168() unnamed_addr #5 !dbg !15776 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !15780, metadata !DIExpression()), !dbg !15781
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !15782
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !15783
  ret i1 %2, !dbg !15784
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15785 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15789, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 -22, metadata !15790, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 0, metadata !15791, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !15796
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15798, !srcloc !15590
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()) #25, !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !15800
  call void @llvm.dbg.value(metadata i32 undef, metadata !15581, metadata !DIExpression()) #25, !dbg !15796
  call void @llvm.dbg.value(metadata i32 undef, metadata !15793, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 -22, metadata !15790, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()), !dbg !15795
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !15790, metadata !DIExpression()), !dbg !15794
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.171(%struct._dnode* noundef %3) #26, !dbg !15801
  br i1 %4, label %5, label %6, !dbg !15805

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !15806
  call void @llvm.dbg.value(metadata i32 0, metadata !15790, metadata !DIExpression()), !dbg !15794
  br label %6, !dbg !15808

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !15794
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !15798
  call void @llvm.dbg.value(metadata i32 %8, metadata !15587, metadata !DIExpression()) #25, !dbg !15800
  call void @llvm.dbg.value(metadata i32 %8, metadata !15581, metadata !DIExpression()) #25, !dbg !15796
  call void @llvm.dbg.value(metadata i32 %8, metadata !15793, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.value(metadata i32 %7, metadata !15790, metadata !DIExpression()), !dbg !15794
  call void @llvm.dbg.value(metadata i32 undef, metadata !15643, metadata !DIExpression()) #25, !dbg !15809
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !15809
  call void @llvm.dbg.value(metadata i32 undef, metadata !15651, metadata !DIExpression()) #25, !dbg !15811
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !15813, !srcloc !15657
  call void @llvm.dbg.value(metadata i32 undef, metadata !15791, metadata !DIExpression()), !dbg !15795
  ret i32 %7, !dbg !15814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.171(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15815 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15821, metadata !DIExpression()), !dbg !15822
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15823
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15823
  %4 = icmp ne %struct._dnode* %3, null, !dbg !15824
  ret i1 %4, !dbg !15825
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #7 !dbg !15826 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15828, metadata !DIExpression()), !dbg !15829
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !15830
  %3 = icmp eq %struct._timeout* %2, null, !dbg !15832
  br i1 %3, label %10, label %4, !dbg !15833

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !15834
  %6 = load i64, i64* %5, align 8, !dbg !15834
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !15836
  %8 = load i64, i64* %7, align 8, !dbg !15837
  %9 = add nsw i64 %8, %6, !dbg !15837
  store i64 %9, i64* %7, align 8, !dbg !15837
  br label %10, !dbg !15838

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15839
  tail call fastcc void @sys_dlist_remove.172(%struct._dnode* noundef %11) #26, !dbg !15840
  ret void, !dbg !15841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.172(%struct._dnode* nocapture noundef %0) unnamed_addr #7 !dbg !15842 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15846, metadata !DIExpression()), !dbg !15849
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15850
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !15850
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !15847, metadata !DIExpression()), !dbg !15849
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15851
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15851
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !15848, metadata !DIExpression()), !dbg !15849
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !15852
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !15853
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !15854
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !15855
  tail call fastcc void @sys_dnode_init.173(%struct._dnode* noundef %0) #26, !dbg !15856
  ret void, !dbg !15857
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.173(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #4 !dbg !15858 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15860, metadata !DIExpression()), !dbg !15861
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15862
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15863
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15864
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15865
  ret void, !dbg !15866
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15867 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15873, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i64 0, metadata !15874, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 0, metadata !15875, metadata !DIExpression()), !dbg !15879
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !15880
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15882, !srcloc !15590
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15882
  call void @llvm.dbg.value(metadata i32 %3, metadata !15587, metadata !DIExpression()) #25, !dbg !15884
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !15884
  call void @llvm.dbg.value(metadata i32 %3, metadata !15581, metadata !DIExpression()) #25, !dbg !15880
  call void @llvm.dbg.value(metadata i32 %3, metadata !15877, metadata !DIExpression()), !dbg !15879
  call void @llvm.dbg.value(metadata i64 0, metadata !15874, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 undef, metadata !15875, metadata !DIExpression()), !dbg !15879
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15885
  call void @llvm.dbg.value(metadata i64 %4, metadata !15874, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.value(metadata i32 %3, metadata !15643, metadata !DIExpression()) #25, !dbg !15888
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !15888
  call void @llvm.dbg.value(metadata i32 %3, metadata !15651, metadata !DIExpression()) #25, !dbg !15890
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15892, !srcloc !15657
  call void @llvm.dbg.value(metadata i32 undef, metadata !15875, metadata !DIExpression()), !dbg !15879
  ret i64 %4, !dbg !15893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !15894 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15896, metadata !DIExpression()), !dbg !15900
  call void @llvm.dbg.value(metadata i64 0, metadata !15897, metadata !DIExpression()), !dbg !15900
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.174(%struct._timeout* noundef %0) #26, !dbg !15901
  br i1 %2, label %21, label %3, !dbg !15903

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !15904
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !15898, metadata !DIExpression()), !dbg !15905
  call void @llvm.dbg.value(metadata i64 0, metadata !15897, metadata !DIExpression()), !dbg !15900
  %5 = icmp eq %struct._timeout* %4, null, !dbg !15906
  br i1 %5, label %16, label %6, !dbg !15908

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !15898, metadata !DIExpression()), !dbg !15905
  call void @llvm.dbg.value(metadata i64 %8, metadata !15897, metadata !DIExpression()), !dbg !15900
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !15909
  %10 = load i64, i64* %9, align 8, !dbg !15909
  %11 = add nsw i64 %10, %8, !dbg !15911
  call void @llvm.dbg.value(metadata i64 %11, metadata !15897, metadata !DIExpression()), !dbg !15900
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !15912
  br i1 %12, label %16, label %13, !dbg !15914

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !15915
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !15898, metadata !DIExpression()), !dbg !15905
  call void @llvm.dbg.value(metadata i64 %11, metadata !15897, metadata !DIExpression()), !dbg !15900
  %15 = icmp eq %struct._timeout* %14, null, !dbg !15906
  br i1 %15, label %16, label %6, !dbg !15908, !llvm.loop !15916

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !15900
  call void @llvm.dbg.value(metadata i64 %17, metadata !15897, metadata !DIExpression()), !dbg !15900
  %18 = tail call fastcc i32 @elapsed.162() #26, !dbg !15918
  %19 = sext i32 %18 to i64, !dbg !15918
  %20 = sub nsw i64 %17, %19, !dbg !15919
  br label %21, !dbg !15920

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !15900
  ret i64 %22, !dbg !15921
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.174(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #5 !dbg !15922 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15926, metadata !DIExpression()), !dbg !15927
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15928
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.171(%struct._dnode* noundef %2) #26, !dbg !15929
  %4 = xor i1 %3, true, !dbg !15930
  ret i1 %4, !dbg !15931
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !15932 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15934, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i64 0, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i32 0, metadata !15936, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !15941
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15943, !srcloc !15590
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15943
  call void @llvm.dbg.value(metadata i32 %3, metadata !15587, metadata !DIExpression()) #25, !dbg !15945
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !15945
  call void @llvm.dbg.value(metadata i32 %3, metadata !15581, metadata !DIExpression()) #25, !dbg !15941
  call void @llvm.dbg.value(metadata i32 %3, metadata !15938, metadata !DIExpression()), !dbg !15940
  call void @llvm.dbg.value(metadata i64 0, metadata !15935, metadata !DIExpression()), !dbg !15939
  call void @llvm.dbg.value(metadata i32 undef, metadata !15936, metadata !DIExpression()), !dbg !15940
  %4 = load i64, i64* @curr_tick, align 8, !dbg !15946
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !15949
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !15935, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !15939
  call void @llvm.dbg.value(metadata i32 %3, metadata !15643, metadata !DIExpression()) #25, !dbg !15950
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !15950
  call void @llvm.dbg.value(metadata i32 %3, metadata !15651, metadata !DIExpression()) #25, !dbg !15952
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15954, !srcloc !15657
  call void @llvm.dbg.value(metadata i32 undef, metadata !15936, metadata !DIExpression()), !dbg !15940
  %6 = add i64 %5, %4, !dbg !15955
  ret i64 %6, !dbg !15956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !15957 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !15959, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata i32 0, metadata !15960, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !15965
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15967, !srcloc !15590
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !15967
  call void @llvm.dbg.value(metadata i32 %2, metadata !15587, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !15969
  call void @llvm.dbg.value(metadata i32 %2, metadata !15581, metadata !DIExpression()) #25, !dbg !15965
  call void @llvm.dbg.value(metadata i32 %2, metadata !15962, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.value(metadata i32 -1, metadata !15959, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata i32 undef, metadata !15960, metadata !DIExpression()), !dbg !15964
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !15970
  call void @llvm.dbg.value(metadata i32 %3, metadata !15959, metadata !DIExpression()), !dbg !15963
  call void @llvm.dbg.value(metadata i32 %2, metadata !15643, metadata !DIExpression()) #25, !dbg !15973
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !15973
  call void @llvm.dbg.value(metadata i32 %2, metadata !15651, metadata !DIExpression()) #25, !dbg !15975
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !15977, !srcloc !15657
  call void @llvm.dbg.value(metadata i32 undef, metadata !15960, metadata !DIExpression()), !dbg !15964
  ret i32 %3, !dbg !15978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !15979 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15981, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata i1 %1, metadata !15982, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15991
  call void @llvm.dbg.value(metadata i32 0, metadata !15983, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !15993
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15995, !srcloc !15590
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()) #25, !dbg !15997
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !15997
  call void @llvm.dbg.value(metadata i32 undef, metadata !15581, metadata !DIExpression()) #25, !dbg !15993
  call void @llvm.dbg.value(metadata i32 undef, metadata !15985, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata i32 undef, metadata !15983, metadata !DIExpression()), !dbg !15992
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !15998
  call void @llvm.dbg.value(metadata i32 %4, metadata !15986, metadata !DIExpression()), !dbg !15999
  call void @llvm.dbg.value(metadata i1 undef, metadata !15989, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15999
  %5 = icmp slt i32 %4, 2, !dbg !16000
  call void @llvm.dbg.value(metadata i1 %5, metadata !15990, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15999
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !16001
  call void @llvm.dbg.value(metadata i1 %6, metadata !15989, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15999
  br i1 %7, label %11, label %8, !dbg !16001

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !16003
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !16003
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !16005
  br label %11, !dbg !16006

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !15995
  call void @llvm.dbg.value(metadata i32 %12, metadata !15587, metadata !DIExpression()) #25, !dbg !15997
  call void @llvm.dbg.value(metadata i32 %12, metadata !15581, metadata !DIExpression()) #25, !dbg !15993
  call void @llvm.dbg.value(metadata i32 %12, metadata !15985, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata i32 undef, metadata !15643, metadata !DIExpression()) #25, !dbg !16007
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !16007
  call void @llvm.dbg.value(metadata i32 undef, metadata !15651, metadata !DIExpression()) #25, !dbg !16009
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !16011, !srcloc !15657
  call void @llvm.dbg.value(metadata i32 1, metadata !15983, metadata !DIExpression()), !dbg !15992
  call void @llvm.dbg.value(metadata i32 undef, metadata !15983, metadata !DIExpression()), !dbg !15992
  ret void, !dbg !16012
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !16013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16017, metadata !DIExpression()), !dbg !16022
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !16023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !16024
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16026, !srcloc !15590
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()) #25, !dbg !16028
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !16028
  call void @llvm.dbg.value(metadata i32 undef, metadata !15581, metadata !DIExpression()) #25, !dbg !16024
  call void @llvm.dbg.value(metadata i32 undef, metadata !16018, metadata !DIExpression()), !dbg !16022
  store i32 %0, i32* @announce_remaining, align 4, !dbg !16022
  call void @llvm.dbg.value(metadata i32 undef, metadata !16018, metadata !DIExpression()), !dbg !16022
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !16029
  %4 = icmp eq %struct._timeout* %3, null, !dbg !16030
  br i1 %4, label %28, label %5, !dbg !16031

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !16032
  %10 = load i64, i64* %9, align 8, !dbg !16032
  %11 = sext i32 %8 to i64, !dbg !16033
  %12 = icmp sgt i64 %10, %11, !dbg !16034
  br i1 %12, label %26, label %13, !dbg !16035

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !16022
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !16019, metadata !DIExpression()), !dbg !16036
  %15 = trunc i64 %10 to i32, !dbg !16037
  call void @llvm.dbg.value(metadata i32 %15, metadata !16021, metadata !DIExpression()), !dbg !16036
  %16 = sext i32 %15 to i64, !dbg !16038
  %17 = load i64, i64* @curr_tick, align 8, !dbg !16039
  %18 = add i64 %17, %16, !dbg !16039
  store i64 %18, i64* @curr_tick, align 8, !dbg !16039
  store i64 0, i64* %9, align 8, !dbg !16040
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !16041
  call void @llvm.dbg.value(metadata i32 %14, metadata !15643, metadata !DIExpression()) #25, !dbg !16042
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !16042
  call void @llvm.dbg.value(metadata i32 %14, metadata !15651, metadata !DIExpression()) #25, !dbg !16044
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !16046, !srcloc !15657
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !16047
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !16047
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !16048
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !16049
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16051, !srcloc !15590
  call void @llvm.dbg.value(metadata i32 undef, metadata !15587, metadata !DIExpression()) #25, !dbg !16053
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !16053
  call void @llvm.dbg.value(metadata i32 undef, metadata !15581, metadata !DIExpression()) #25, !dbg !16049
  call void @llvm.dbg.value(metadata i32 undef, metadata !16018, metadata !DIExpression()), !dbg !16022
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !16054
  %23 = sub nsw i32 %22, %15, !dbg !16054
  store i32 %23, i32* @announce_remaining, align 4, !dbg !16022
  call void @llvm.dbg.value(metadata i32 undef, metadata !16018, metadata !DIExpression()), !dbg !16022
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !16029
  %25 = icmp eq %struct._timeout* %24, null, !dbg !16030
  br i1 %25, label %28, label %5, !dbg !16031, !llvm.loop !16055

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !16057
  store i64 %27, i64* %9, align 8, !dbg !16057
  br label %32, !dbg !16060

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !16022
  %31 = sext i32 %30 to i64, !dbg !16061
  br label %32, !dbg !16061

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !16061
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !16022
  %36 = load i64, i64* @curr_tick, align 8, !dbg !16062
  %37 = add i64 %36, %33, !dbg !16062
  store i64 %37, i64* @curr_tick, align 8, !dbg !16062
  store i32 0, i32* @announce_remaining, align 4, !dbg !16063
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !16064
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !16065
  call void @llvm.dbg.value(metadata i32 %35, metadata !15643, metadata !DIExpression()) #25, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !16066
  call void @llvm.dbg.value(metadata i32 %35, metadata !15651, metadata !DIExpression()) #25, !dbg !16068
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !16070, !srcloc !15657
  ret void, !dbg !16071
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !16072 {
  call void @llvm.dbg.value(metadata i64 0, metadata !16076, metadata !DIExpression()), !dbg !16080
  call void @llvm.dbg.value(metadata i32 0, metadata !16077, metadata !DIExpression()), !dbg !16081
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15575, metadata !DIExpression()) #25, !dbg !16082
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16084, !srcloc !15590
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16084
  call void @llvm.dbg.value(metadata i32 %2, metadata !15587, metadata !DIExpression()) #25, !dbg !16086
  call void @llvm.dbg.value(metadata i32 undef, metadata !15588, metadata !DIExpression()) #25, !dbg !16086
  call void @llvm.dbg.value(metadata i32 %2, metadata !15581, metadata !DIExpression()) #25, !dbg !16082
  call void @llvm.dbg.value(metadata i32 %2, metadata !16079, metadata !DIExpression()), !dbg !16081
  call void @llvm.dbg.value(metadata i64 0, metadata !16076, metadata !DIExpression()), !dbg !16080
  call void @llvm.dbg.value(metadata i32 undef, metadata !16077, metadata !DIExpression()), !dbg !16081
  %3 = load i64, i64* @curr_tick, align 8, !dbg !16087
  %4 = tail call fastcc i32 @elapsed.162() #26, !dbg !16090
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !16076, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !16080
  call void @llvm.dbg.value(metadata i32 %2, metadata !15643, metadata !DIExpression()) #25, !dbg !16091
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15648, metadata !DIExpression()) #25, !dbg !16091
  call void @llvm.dbg.value(metadata i32 %2, metadata !15651, metadata !DIExpression()) #25, !dbg !16093
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16095, !srcloc !15657
  call void @llvm.dbg.value(metadata i32 undef, metadata !16077, metadata !DIExpression()), !dbg !16081
  %5 = sext i32 %4 to i64, !dbg !16090
  %6 = add i64 %3, %5, !dbg !16096
  ret i64 %6, !dbg !16097
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !16098 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16099
  %2 = trunc i64 %1 to i32, !dbg !16100
  ret i32 %2, !dbg !16101
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !16102 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !16103
  ret i64 %1, !dbg !16104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !16105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16107, metadata !DIExpression()), !dbg !16114
  %2 = icmp eq i32 %0, 0, !dbg !16115
  br i1 %2, label %10, label %3, !dbg !16117

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16118
  call void @llvm.dbg.value(metadata i32 %4, metadata !16108, metadata !DIExpression()), !dbg !16114
  %5 = mul i32 %0, 84, !dbg !16119
  call void @llvm.dbg.value(metadata i32 %5, metadata !16109, metadata !DIExpression()), !dbg !16114
  br label %6, !dbg !16120

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !16121
  call void @llvm.dbg.value(metadata i32 %7, metadata !16110, metadata !DIExpression()), !dbg !16122
  %8 = sub i32 %7, %4, !dbg !16123
  %9 = icmp ult i32 %8, %5, !dbg !16125
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !16126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !16127 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !16128
  ret i32 %1, !dbg !16129
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !16130 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !16132
  ret i32 %1, !dbg !16133
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !16134 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !16138, metadata !DIExpression()), !dbg !16140
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !16141

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !16142
  br label %14, !dbg !16146

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !16139, metadata !DIExpression()), !dbg !16140
  %6 = icmp slt i64 %2, -1, !dbg !16147
  br i1 %6, label %7, label %9, !dbg !16150

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !16151
  br label %14, !dbg !16152

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !16154
  %11 = icmp ugt i64 %2, 1, !dbg !16155
  %12 = select i1 %11, i64 %2, i64 1, !dbg !16155
  %13 = add nsw i64 %10, %12, !dbg !16156
  br label %14, !dbg !16157

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !16158
  ret i64 %15, !dbg !16159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !16160 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.183, i32 0, i32 0)) #27, !dbg !16162
  ret void, !dbg !16163
}

; Function Attrs: noinline nounwind optsize
define internal i32 @statics_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !16164 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !16166, metadata !DIExpression()), !dbg !16186
  call void @llvm.dbg.value(metadata %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), metadata !16167, metadata !DIExpression()), !dbg !16187
  br i1 icmp ult (%struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %struct.k_heap* getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0)), label %3, label %2, !dbg !16188

2:                                                ; preds = %3, %1
  ret i32 0, !dbg !16189

3:                                                ; preds = %1, %3
  %4 = phi %struct.k_heap* [ %9, %3 ], [ getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct.k_heap* %4, metadata !16167, metadata !DIExpression()), !dbg !16187
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 1, !dbg !16190
  %6 = load i8*, i8** %5, align 4, !dbg !16190
  %7 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 0, i32 0, i32 2, !dbg !16194
  %8 = load i32, i32* %7, align 4, !dbg !16194
  tail call void @k_heap_init(%struct.k_heap* noundef nonnull %4, i8* noundef %6, i32 noundef %8) #26, !dbg !16195
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %4, i32 1, !dbg !16196
  call void @llvm.dbg.value(metadata %struct.k_heap* %9, metadata !16167, metadata !DIExpression()), !dbg !16187
  %10 = icmp ult %struct.k_heap* %9, getelementptr inbounds ([0 x %struct.k_heap], [0 x %struct.k_heap]* @_k_heap_list_end, i32 0, i32 0), !dbg !16197
  br i1 %10, label %3, label %2, !dbg !16188, !llvm.loop !16199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_init(%struct.k_heap* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !16201 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16205, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata i8* %1, metadata !16206, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.value(metadata i32 %2, metadata !16207, metadata !DIExpression()), !dbg !16208
  %4 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16209
  tail call fastcc void @z_waitq_init.185(%struct._wait_q_t* noundef nonnull %4) #26, !dbg !16210
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16211
  tail call void @sys_heap_init(%struct.sys_heap* noundef %5, i8* noundef %1, i32 noundef %2) #27, !dbg !16212
  ret void, !dbg !16213
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.185(%struct._wait_q_t* noundef %0) unnamed_addr #4 !dbg !16214 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16219, metadata !DIExpression()), !dbg !16220
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16221
  tail call fastcc void @sys_dlist_init.186(%struct._dnode* noundef %2) #26, !dbg !16222
  ret void, !dbg !16223
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.186(%struct._dnode* noundef %0) unnamed_addr #4 !dbg !16224 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16229, metadata !DIExpression()), !dbg !16230
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16231
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16232
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16233
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16234
  ret void, !dbg !16235
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef %1, i32 noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16236 {
  %5 = extractvalue [1 x i64] %3, 0
  call void @llvm.dbg.value(metadata i64 %5, metadata !16247, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16244, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i32 %1, metadata !16245, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i32 %2, metadata !16246, metadata !DIExpression()), !dbg !16257
  %6 = tail call i64 @sys_clock_timeout_end_calc([1 x i64] %3) #27, !dbg !16258
  call void @llvm.dbg.value(metadata i64 %6, metadata !16249, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i8* null, metadata !16250, metadata !DIExpression()), !dbg !16257
  %7 = icmp eq i64 %5, -1, !dbg !16259
  %8 = select i1 %7, i64 9223372036854775807, i64 %6, !dbg !16259
  call void @llvm.dbg.value(metadata i64 %8, metadata !16249, metadata !DIExpression()), !dbg !16257
  %9 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16260
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16261, metadata !DIExpression()) #25, !dbg !16268
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16270, !srcloc !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16273, metadata !DIExpression()) #25, !dbg !16277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16274, metadata !DIExpression()) #25, !dbg !16277
  call void @llvm.dbg.value(metadata i32 undef, metadata !16267, metadata !DIExpression()) #25, !dbg !16268
  call void @llvm.dbg.value(metadata i32 undef, metadata !16251, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i8 0, metadata !16256, metadata !DIExpression()), !dbg !16257
  %11 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i8* null, metadata !16250, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i8 0, metadata !16256, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !16251, metadata !DIExpression()), !dbg !16257
  %12 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16278
  call void @llvm.dbg.value(metadata i8* %12, metadata !16250, metadata !DIExpression()), !dbg !16257
  %13 = tail call i64 @sys_clock_tick_get() #27, !dbg !16280
  call void @llvm.dbg.value(metadata i64 %13, metadata !16248, metadata !DIExpression()), !dbg !16257
  %14 = icmp eq i8* %12, null, !dbg !16281
  br i1 %14, label %15, label %31, !dbg !16283

15:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !16251, metadata !DIExpression()), !dbg !16257
  %16 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1
  br label %17, !dbg !16283

17:                                               ; preds = %15, %22
  %18 = phi i64 [ %13, %15 ], [ %29, %22 ]
  %19 = phi { i32, i32 } [ %10, %15 ], [ %27, %22 ]
  call void @llvm.dbg.value(metadata i8 undef, metadata !16256, metadata !DIExpression()), !dbg !16257
  %20 = sub nsw i64 %8, %18, !dbg !16284
  %21 = icmp slt i64 %20, 1, !dbg !16285
  br i1 %21, label %31, label %22, !dbg !16286

22:                                               ; preds = %17
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !16257
  call void @llvm.dbg.value(metadata i8 undef, metadata !16256, metadata !DIExpression()), !dbg !16257
  %24 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !16287
  %25 = insertvalue [1 x i64] poison, i64 %20, 0, !dbg !16287
  %26 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull %9, [1 x i32] %24, %struct._wait_q_t* noundef nonnull %16, [1 x i64] %25) #27, !dbg !16287
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16261, metadata !DIExpression()) #25, !dbg !16288
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16290, !srcloc !16276
  call void @llvm.dbg.value(metadata i32 undef, metadata !16273, metadata !DIExpression()) #25, !dbg !16292
  call void @llvm.dbg.value(metadata i32 undef, metadata !16274, metadata !DIExpression()) #25, !dbg !16292
  call void @llvm.dbg.value(metadata i32 undef, metadata !16267, metadata !DIExpression()) #25, !dbg !16288
  call void @llvm.dbg.value(metadata i32 undef, metadata !16251, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i8* null, metadata !16250, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i32 undef, metadata !16251, metadata !DIExpression()), !dbg !16257
  %28 = tail call i8* @sys_heap_aligned_alloc(%struct.sys_heap* noundef %11, i32 noundef %1, i32 noundef %2) #27, !dbg !16278
  call void @llvm.dbg.value(metadata i8* %28, metadata !16250, metadata !DIExpression()), !dbg !16257
  %29 = tail call i64 @sys_clock_tick_get() #27, !dbg !16280
  call void @llvm.dbg.value(metadata i64 %29, metadata !16248, metadata !DIExpression()), !dbg !16257
  %30 = icmp eq i8* %28, null, !dbg !16281
  br i1 %30, label %17, label %31, !dbg !16283, !llvm.loop !16293

31:                                               ; preds = %22, %17, %4
  %32 = phi { i32, i32 } [ %10, %4 ], [ %19, %17 ], [ %27, %22 ]
  %33 = phi i8* [ %12, %4 ], [ null, %17 ], [ %28, %22 ], !dbg !16278
  %34 = extractvalue { i32, i32 } %32, 0, !dbg !16257
  call void @llvm.dbg.value(metadata i8* %33, metadata !16250, metadata !DIExpression()), !dbg !16257
  call void @llvm.dbg.value(metadata i32 %34, metadata !16296, metadata !DIExpression()) #25, !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16301, metadata !DIExpression()) #25, !dbg !16302
  call void @llvm.dbg.value(metadata i32 %34, metadata !16304, metadata !DIExpression()) #25, !dbg !16307
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %34) #25, !dbg !16309, !srcloc !16310
  ret i8* %33, !dbg !16311
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_heap_alloc(%struct.k_heap* noundef %0, i32 noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16312 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16318, metadata !DIExpression()), !dbg !16320
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16316, metadata !DIExpression()), !dbg !16320
  call void @llvm.dbg.value(metadata i32 %1, metadata !16317, metadata !DIExpression()), !dbg !16320
  %4 = tail call i8* @k_heap_aligned_alloc(%struct.k_heap* noundef %0, i32 noundef 4, i32 noundef %1, [1 x i64] %2) #26, !dbg !16321
  call void @llvm.dbg.value(metadata i8* %4, metadata !16319, metadata !DIExpression()), !dbg !16320
  ret i8* %4, !dbg !16322
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_heap_free(%struct.k_heap* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !16323 {
  call void @llvm.dbg.value(metadata %struct.k_heap* %0, metadata !16327, metadata !DIExpression()), !dbg !16330
  call void @llvm.dbg.value(metadata i8* %1, metadata !16328, metadata !DIExpression()), !dbg !16330
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16261, metadata !DIExpression()) #25, !dbg !16331
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16333, !srcloc !16276
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16333
  call void @llvm.dbg.value(metadata i32 %4, metadata !16273, metadata !DIExpression()) #25, !dbg !16335
  call void @llvm.dbg.value(metadata i32 undef, metadata !16274, metadata !DIExpression()) #25, !dbg !16335
  call void @llvm.dbg.value(metadata i32 %4, metadata !16267, metadata !DIExpression()) #25, !dbg !16331
  call void @llvm.dbg.value(metadata i32 %4, metadata !16329, metadata !DIExpression()), !dbg !16330
  %5 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 0, !dbg !16336
  tail call void @sys_heap_free(%struct.sys_heap* noundef %5, i8* noundef %1) #27, !dbg !16337
  %6 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 1, !dbg !16338
  %7 = tail call i32 @z_unpend_all(%struct._wait_q_t* noundef nonnull %6) #27, !dbg !16340
  %8 = icmp eq i32 %7, 0, !dbg !16341
  br i1 %8, label %12, label %9, !dbg !16342

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.k_heap, %struct.k_heap* %0, i32 0, i32 2, !dbg !16343
  %11 = insertvalue [1 x i32] poison, i32 %4, 0, !dbg !16344
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull %10, [1 x i32] %11) #27, !dbg !16344
  br label %13, !dbg !16346

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %4, metadata !16296, metadata !DIExpression()) #25, !dbg !16347
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16301, metadata !DIExpression()) #25, !dbg !16347
  call void @llvm.dbg.value(metadata i32 %4, metadata !16304, metadata !DIExpression()) #25, !dbg !16350
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16352, !srcloc !16310
  br label %13

13:                                               ; preds = %12, %9
  ret void, !dbg !16353
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { argmemonly nofree nosync nounwind willreturn }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind willreturn }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { mustprogress nofree noinline nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!756, !2, !2413, !27, !264, !2415, !2417, !2450, !2488, !274, !318, !2490, !2501, !2547, !2549, !2577, !2605, !2648, !2719, !2764, !347, !492, !2792, !528, !538, !563, !788, !2797, !924, !1018, !1326, !1590, !2835, !1701, !1791, !2837, !2922, !2986, !1841, !2989, !1847, !2208, !3007, !3009, !2228, !3113, !2343, !3116, !2382}
!llvm.ident = !{!3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118, !3118}
!llvm.module.flags = !{!3119, !3120, !3121, !3122, !3123, !3124, !3125, !3126, !3127}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "uart_msgq", scope: !27, file: !209, line: 19, type: !223, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !206, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108}
!102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !112)
!111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!112 = !{!113, !145, !149, !153, !167, !172, !178, !184, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !110, file: !111, line: 365, baseType: !114, size: 32)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 32)
!115 = !DISubroutineType(types: !116)
!116 = !{!107, !117, !144}
!117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !118, size: 32)
!118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !119)
!119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !121)
!120 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!121 = !{!122, !126, !127, !128, !137, !138}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !119, file: !120, line: 380, baseType: !123, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!125 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !119, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !119, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !119, file: !120, line: 386, baseType: !129, size: 32, offset: 96)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 32)
!130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !131)
!131 = !{!132, !135}
!132 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !130, file: !120, line: 359, baseType: !133, size: 8)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !134)
!134 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !130, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!136 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !119, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !119, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !120, line: 43, baseType: !142)
!142 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !143)
!143 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 32)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !110, file: !111, line: 366, baseType: !146, size: 32, offset: 32)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !117, !134}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !110, file: !111, line: 374, baseType: !150, size: 32, offset: 64)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!151 = !DISubroutineType(types: !152)
!152 = !{!107, !117}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !110, file: !111, line: 377, baseType: !154, size: 32, offset: 96)
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!155 = !DISubroutineType(types: !156)
!156 = !{!107, !117, !157}
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 32)
!158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !160)
!160 = !{!161, !163, !164, !165, !166}
!161 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !159, file: !111, line: 123, baseType: !162, size: 32)
!162 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !159, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !159, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !159, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !159, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !110, file: !111, line: 379, baseType: !168, size: 32, offset: 128)
!168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !169, size: 32)
!169 = !DISubroutineType(types: !170)
!170 = !{!107, !117, !171}
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !110, file: !111, line: 384, baseType: !173, size: 32, offset: 160)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 32)
!174 = !DISubroutineType(types: !175)
!175 = !{!107, !117, !176, !107}
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !177, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !133)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !110, file: !111, line: 393, baseType: !179, size: 32, offset: 192)
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DISubroutineType(types: !181)
!181 = !{!107, !117, !182, !183}
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 32)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !107)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !110, file: !111, line: 402, baseType: !185, size: 32, offset: 224)
!185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !186, size: 32)
!186 = !DISubroutineType(types: !187)
!187 = !{null, !117}
!188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !110, file: !111, line: 405, baseType: !185, size: 32, offset: 256)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !110, file: !111, line: 408, baseType: !150, size: 32, offset: 288)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !110, file: !111, line: 411, baseType: !185, size: 32, offset: 320)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !110, file: !111, line: 414, baseType: !185, size: 32, offset: 352)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !110, file: !111, line: 417, baseType: !150, size: 32, offset: 384)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !110, file: !111, line: 420, baseType: !150, size: 32, offset: 416)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !110, file: !111, line: 423, baseType: !185, size: 32, offset: 448)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !110, file: !111, line: 426, baseType: !185, size: 32, offset: 480)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !110, file: !111, line: 429, baseType: !150, size: 32, offset: 512)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !110, file: !111, line: 432, baseType: !150, size: 32, offset: 544)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !110, file: !111, line: 435, baseType: !199, size: 32, offset: 576)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{null, !117, !202, !102}
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !203)
!203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 32)
!204 = !DISubroutineType(types: !205)
!205 = !{null, !117, !102}
!206 = !{!25, !207, !211, !216, !221}
!207 = !DIGlobalVariableExpression(var: !208, expr: !DIExpression())
!208 = distinct !DIGlobalVariable(name: "uart_dev", scope: !27, file: !209, line: 21, type: !210, isLocal: true, isDefinition: true)
!209 = !DIFile(filename: "zephyr/samples/drivers/uart/echo_bot/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!211 = !DIGlobalVariableExpression(var: !212, expr: !DIExpression())
!212 = distinct !DIGlobalVariable(name: "_k_fifo_buf_uart_msgq", scope: !27, file: !209, line: 19, type: !213, isLocal: true, isDefinition: true, align: 32)
!213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 2560, elements: !214)
!214 = !{!215}
!215 = !DISubrange(count: 320)
!216 = !DIGlobalVariableExpression(var: !217, expr: !DIExpression())
!217 = distinct !DIGlobalVariable(name: "rx_buf", scope: !27, file: !209, line: 24, type: !218, isLocal: true, isDefinition: true)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 256, elements: !219)
!219 = !{!220}
!220 = !DISubrange(count: 32)
!221 = !DIGlobalVariableExpression(var: !222, expr: !DIExpression())
!222 = distinct !DIGlobalVariable(name: "rx_buf_pos", scope: !27, file: !209, line: 25, type: !107, isLocal: true, isDefinition: true)
!223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !225)
!224 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!225 = !{!226, !247, !251, !254, !255, !257, !258, !259, !260, !261}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !223, file: !224, line: 4206, baseType: !227, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !229)
!228 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !230)
!230 = !{!231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !229, file: !228, line: 232, baseType: !232, size: 64)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !234)
!233 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !235)
!235 = !{!236, !242}
!236 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 38, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 38, size: 32, elements: !238)
!238 = !{!239, !241}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !237, file: !233, line: 39, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !237, file: !233, line: 40, baseType: !240, size: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !233, line: 42, baseType: !243, size: 32, offset: 32)
!243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !234, file: !233, line: 42, size: 32, elements: !244)
!244 = !{!245, !246}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !243, file: !233, line: 43, baseType: !240, size: 32)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !243, file: !233, line: 44, baseType: !240, size: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !223, file: !224, line: 4208, baseType: !248, offset: 64)
!248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!249 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!250 = !{}
!251 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !223, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!252 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !253, line: 214, baseType: !32)
!253 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!254 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !223, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !223, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !223, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !223, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !223, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !223, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !223, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!262 = !DIGlobalVariableExpression(var: !263, expr: !DIExpression())
!263 = distinct !DIGlobalVariable(name: "_char_out", scope: !264, file: !268, line: 54, type: !269, isLocal: false, isDefinition: true)
!264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !265, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !267, splitDebugInlining: false, nameTableKind: None)
!265 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!266 = !{!102, !107}
!267 = !{!262}
!268 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 32)
!270 = !DISubroutineType(types: !271)
!271 = !{!107, !107}
!272 = !DIGlobalVariableExpression(var: !273, expr: !DIExpression())
!273 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !274, file: !291, line: 56, type: !292, isLocal: true, isDefinition: true, align: 32)
!274 = distinct !DICompileUnit(language: DW_LANG_C99, file: !275, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !276, globals: !290, splitDebugInlining: false, nameTableKind: None)
!275 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!276 = !{!277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 32)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 379, baseType: !280)
!279 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!280 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 224, elements: !281)
!281 = !{!282, !284, !285, !286, !287, !288, !289}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !280, file: !279, line: 372, baseType: !283, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !162)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !280, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !280, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !280, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !280, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !280, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !280, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!290 = !{!272}
!291 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !293)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !295)
!294 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !{!296, !315}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !293, file: !294, line: 60, baseType: !297, size: 32)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 32)
!298 = !DISubroutineType(types: !299)
!299 = !{!107, !300}
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !303)
!303 = !{!304, !305, !306, !307, !313, !314}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !302, file: !120, line: 380, baseType: !123, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !302, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !302, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !302, file: !120, line: 386, baseType: !308, size: 32, offset: 96)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !310)
!310 = !{!311, !312}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !309, file: !120, line: 359, baseType: !133, size: 8)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !309, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !302, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !302, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !293, file: !294, line: 65, baseType: !300, size: 32, offset: 32)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !318, file: !321, line: 71, type: !322, isLocal: true, isDefinition: true, align: 32)
!318 = distinct !DICompileUnit(language: DW_LANG_C99, file: !319, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !320, splitDebugInlining: false, nameTableKind: None)
!319 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!320 = !{!316}
!321 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !323)
!323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !324)
!324 = !{!325, !344}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !323, file: !294, line: 60, baseType: !326, size: 32)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 32)
!327 = !DISubroutineType(types: !328)
!328 = !{!107, !329}
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !332)
!332 = !{!333, !334, !335, !336, !342, !343}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !331, file: !120, line: 380, baseType: !123, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !331, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !331, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !331, file: !120, line: 386, baseType: !337, size: 32, offset: 96)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !339)
!339 = !{!340, !341}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !338, file: !120, line: 359, baseType: !133, size: 8)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !338, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !331, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !331, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !323, file: !294, line: 65, baseType: !329, size: 32, offset: 32)
!345 = !DIGlobalVariableExpression(var: !346, expr: !DIExpression())
!346 = distinct !DIGlobalVariable(name: "static_regions", scope: !347, file: !354, line: 62, type: !488, isLocal: true, isDefinition: true)
!347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !348, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !349, globals: !350, splitDebugInlining: false, nameTableKind: None)
!348 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!349 = !{!252, !107, !162, !102}
!350 = !{!351, !345}
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !353, file: !354, line: 198, type: !474, isLocal: true, isDefinition: true)
!353 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !354, file: !354, line: 175, type: !355, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !469)
!354 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!355 = !DISubroutineType(types: !356)
!356 = !{null, !357}
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 32)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !360)
!359 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!360 = !{!361, !426, !439, !440, !441, !442, !448, !464}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !358, file: !359, line: 247, baseType: !362, size: 384)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !363)
!363 = !{!364, !391, !398, !399, !400, !413, !414, !415}
!364 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 60, baseType: !365, size: 64)
!365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 60, size: 64, elements: !366)
!366 = !{!367, !382}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !365, file: !359, line: 61, baseType: !368, size: 64)
!368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !369)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !370)
!370 = !{!371, !377}
!371 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 38, baseType: !372, size: 32)
!372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 38, size: 32, elements: !373)
!373 = !{!374, !376}
!374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !372, file: !233, line: 39, baseType: !375, size: 32)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !372, file: !233, line: 40, baseType: !375, size: 32)
!377 = !DIDerivedType(tag: DW_TAG_member, scope: !369, file: !233, line: 42, baseType: !378, size: 32, offset: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !369, file: !233, line: 42, size: 32, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !378, file: !233, line: 43, baseType: !375, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !233, line: 44, baseType: !375, size: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !365, file: !359, line: 62, baseType: !383, size: 64)
!383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !385)
!384 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!385 = !{!386}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !383, file: !384, line: 50, baseType: !387, size: 64)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 64, elements: !389)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!389 = !{!390}
!390 = !DISubrange(count: 2)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !362, file: !359, line: 68, baseType: !392, size: 32, offset: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !395)
!395 = !{!396}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !394, file: !228, line: 232, baseType: !397, size: 64)
!397 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !369)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !362, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !362, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!400 = !DIDerivedType(tag: DW_TAG_member, scope: !362, file: !359, line: 90, baseType: !401, size: 16, offset: 112)
!401 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !362, file: !359, line: 90, size: 16, elements: !402)
!402 = !{!403, !410}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !359, line: 91, baseType: !404, size: 16)
!404 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !401, file: !359, line: 91, size: 16, elements: !405)
!405 = !{!406, !409}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !404, file: !359, line: 96, baseType: !407, size: 8)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !408)
!408 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !404, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !401, file: !359, line: 100, baseType: !411, size: 16)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !412)
!412 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !362, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !362, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !362, file: !359, line: 131, baseType: !416, size: 192, offset: 192)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !417)
!417 = !{!418, !419, !425}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !416, file: !228, line: 245, baseType: !368, size: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !416, file: !228, line: 246, baseType: !420, size: 32, offset: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !421)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!422 = !DISubroutineType(types: !423)
!423 = !{null, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !416, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !358, file: !359, line: 250, baseType: !427, size: 288, offset: 384)
!427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !429)
!428 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!429 = !{!430, !431, !432, !433, !434, !435, !436, !437, !438}
!430 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !427, file: !428, line: 26, baseType: !162, size: 32)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !427, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !427, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !427, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !427, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !427, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !427, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !427, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !427, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !358, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !358, file: !359, line: 256, baseType: !393, size: 64, offset: 704)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !358, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !358, file: !359, line: 300, baseType: !443, size: 96, offset: 800)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !444)
!444 = !{!445, !446, !447}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !443, file: !359, line: 153, baseType: !22, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !443, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !443, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !358, file: !359, line: 325, baseType: !449, size: 32, offset: 896)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 32)
!450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !451)
!451 = !{!452, !461, !462}
!452 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !450, file: !224, line: 5074, baseType: !453, size: 96)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !455)
!454 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!455 = !{!456, !459, !460}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !453, file: !454, line: 57, baseType: !457, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 32)
!458 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !454, line: 57, flags: DIFlagFwdDecl)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !453, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !453, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !450, file: !224, line: 5075, baseType: !393, size: 64, offset: 96)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !450, file: !224, line: 5076, baseType: !463, offset: 160)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !358, file: !359, line: 343, baseType: !465, size: 64, offset: 928)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !466)
!466 = !{!467, !468}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !465, file: !428, line: 63, baseType: !162, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !465, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!469 = !{!470, !471, !472, !473}
!470 = !DILocalVariable(name: "thread", arg: 1, scope: !353, file: !354, line: 175, type: !357)
!471 = !DILocalVariable(name: "region_num", scope: !353, file: !354, line: 200, type: !133)
!472 = !DILocalVariable(name: "guard_start", scope: !353, file: !354, line: 265, type: !22)
!473 = !DILocalVariable(name: "guard_size", scope: !353, file: !354, line: 266, type: !252)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 96, elements: !486)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !477)
!476 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!477 = !{!478, !479, !480}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !476, line: 53, baseType: !22, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !475, file: !476, line: 55, baseType: !481, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !483)
!482 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !484)
!484 = !{!485}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !483, file: !482, line: 150, baseType: !162, size: 32)
!486 = !{!487}
!487 = !DISubrange(count: 1)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !489, size: 96, elements: !486)
!489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !475)
!490 = !DIGlobalVariableExpression(var: !491, expr: !DIExpression())
!491 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !492, file: !525, line: 39, type: !133, isLocal: true, isDefinition: true)
!492 = distinct !DICompileUnit(language: DW_LANG_C99, file: !493, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !494, globals: !524, splitDebugInlining: false, nameTableKind: None)
!493 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!494 = !{!495, !102, !107, !512, !133}
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 32)
!496 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !497, line: 1226, baseType: !498)
!497 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 1213, size: 352, elements: !499)
!499 = !{!500, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !498, file: !497, line: 1215, baseType: !501, size: 32)
!501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !283)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !498, file: !497, line: 1216, baseType: !283, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !498, file: !497, line: 1217, baseType: !283, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !498, file: !497, line: 1218, baseType: !283, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !498, file: !497, line: 1219, baseType: !283, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !498, file: !497, line: 1220, baseType: !283, size: 32, offset: 160)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !498, file: !497, line: 1221, baseType: !283, size: 32, offset: 192)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !498, file: !497, line: 1222, baseType: !283, size: 32, offset: 224)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !498, file: !497, line: 1223, baseType: !283, size: 32, offset: 256)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !498, file: !497, line: 1224, baseType: !283, size: 32, offset: 288)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !498, file: !497, line: 1225, baseType: !283, size: 32, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 32)
!513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !516)
!515 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!516 = !{!517, !518, !519}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !514, file: !515, line: 29, baseType: !162, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !514, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !514, file: !515, line: 37, baseType: !520, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !521)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !522)
!522 = !{!523}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !521, file: !482, line: 143, baseType: !162, size: 32)
!524 = !{!490}
!525 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!526 = !DIGlobalVariableExpression(var: !527, expr: !DIExpression())
!527 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !528, file: !535, line: 21, type: !269, isLocal: true, isDefinition: true)
!528 = distinct !DICompileUnit(language: DW_LANG_C99, file: !529, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !530, globals: !534, splitDebugInlining: false, nameTableKind: None)
!529 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!530 = !{!531, !107, !102}
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !533, line: 22, baseType: !107)
!533 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!534 = !{!526}
!535 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !538, file: !543, line: 13, type: !560, isLocal: true, isDefinition: true)
!538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !539, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !540, splitDebugInlining: false, nameTableKind: None)
!539 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!540 = !{!541, !536}
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "mpu_config", scope: !538, file: !543, line: 37, type: !544, isLocal: false, isDefinition: true)
!543 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!544 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !515, line: 41, size: 64, elements: !546)
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !545, file: !515, line: 43, baseType: !162, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !545, file: !515, line: 45, baseType: !549, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !550, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !551)
!551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !515, line: 27, size: 96, elements: !552)
!552 = !{!553, !554, !555}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !551, file: !515, line: 29, baseType: !162, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !551, file: !515, line: 31, baseType: !123, size: 32, offset: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !551, file: !515, line: 37, baseType: !556, size: 32, offset: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !482, line: 146, baseType: !557)
!557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !482, line: 141, size: 32, elements: !558)
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !557, file: !482, line: 143, baseType: !162, size: 32)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 192, elements: !389)
!561 = !DIGlobalVariableExpression(var: !562, expr: !DIExpression())
!562 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !563, file: !667, line: 72, type: !751, isLocal: true, isDefinition: true)
!563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !564, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !565, retainedTypes: !653, globals: !664, splitDebugInlining: false, nameTableKind: None)
!564 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!565 = !{!30, !566}
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !279, line: 65, baseType: !107, size: 32, elements: !567)
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652}
!568 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!569 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!570 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!571 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!572 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!573 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!574 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!575 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!576 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!577 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!578 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!579 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!580 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!581 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!582 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!583 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!584 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!585 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!586 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!587 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!588 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!589 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!590 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!591 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!592 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!593 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!594 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!595 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!596 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!597 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!598 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!599 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!600 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!601 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!602 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!603 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!604 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!605 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!606 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!607 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!608 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!609 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!610 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!611 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!612 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!613 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!614 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!615 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!616 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!617 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!618 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!619 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!620 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!621 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!622 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!623 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!624 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!625 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!626 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!627 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!628 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!629 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!630 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!631 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!632 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!633 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!634 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!635 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!636 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!637 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!638 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!639 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!640 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!641 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!642 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!643 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!644 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!645 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!646 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!647 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!648 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!649 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!650 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!651 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!652 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!653 = !{!252, !107, !102, !654}
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !279, line: 364, baseType: !656)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 356, size: 192, elements: !657)
!657 = !{!658, !659, !660, !661, !662, !663}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !656, file: !279, line: 358, baseType: !283, size: 32)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !656, file: !279, line: 359, baseType: !283, size: 32, offset: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !656, file: !279, line: 360, baseType: !283, size: 32, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !656, file: !279, line: 361, baseType: !283, size: 32, offset: 96)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !656, file: !279, line: 362, baseType: !283, size: 32, offset: 128)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !656, file: !279, line: 363, baseType: !283, size: 32, offset: 160)
!664 = !{!665, !671, !687, !698, !715, !561, !717, !731, !733, !735, !737, !739, !741, !743, !745, !747, !749}
!665 = !DIGlobalVariableExpression(var: !666, expr: !DIExpression())
!666 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !563, file: !667, line: 424, type: !668, isLocal: false, isDefinition: true, align: 16)
!667 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !669)
!669 = !{!670}
!670 = !DISubrange(count: 4)
!671 = !DIGlobalVariableExpression(var: !672, expr: !DIExpression())
!672 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !563, file: !667, line: 424, type: !673, isLocal: false, isDefinition: true, align: 32)
!673 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !674)
!674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !675)
!675 = !{!676, !677, !678, !679, !685, !686}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !674, file: !120, line: 380, baseType: !123, size: 32)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !674, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !674, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !674, file: !120, line: 386, baseType: !680, size: 32, offset: 96)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !681, size: 32)
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !682)
!682 = !{!683, !684}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !681, file: !120, line: 359, baseType: !133, size: 8)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !681, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !674, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !674, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !563, file: !667, line: 424, type: !689, isLocal: true, isDefinition: true, align: 32)
!689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !690)
!690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !691)
!691 = !{!692, !697}
!692 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !690, file: !294, line: 60, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 32)
!694 = !DISubroutineType(types: !695)
!695 = !{!107, !696}
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !690, file: !294, line: 65, baseType: !696, size: 32, offset: 32)
!698 = !DIGlobalVariableExpression(var: !699, expr: !DIExpression())
!699 = distinct !DIGlobalVariable(name: "exti_data", scope: !563, file: !667, line: 423, type: !700, isLocal: true, isDefinition: true)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !667, line: 107, size: 1472, elements: !701)
!701 = !{!702}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !700, file: !667, line: 109, baseType: !703, size: 1472)
!703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !704, size: 1472, elements: !713)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !667, line: 101, size: 64, elements: !705)
!705 = !{!706, !712}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !704, file: !667, line: 102, baseType: !707, size: 32)
!707 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !708, line: 63, baseType: !709)
!708 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !710, size: 32)
!710 = !DISubroutineType(types: !711)
!711 = !{null, !107, !102}
!712 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !704, file: !667, line: 103, baseType: !102, size: 32, offset: 32)
!713 = !{!714}
!714 = !DISubrange(count: 23)
!715 = !DIGlobalVariableExpression(var: !716, expr: !DIExpression())
!716 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !563, file: !667, line: 424, type: !681, isLocal: true, isDefinition: true, align: 8)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !719, file: !667, line: 493, type: !724, isLocal: true, isDefinition: true, align: 32)
!719 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !667, file: !667, line: 460, type: !720, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !722)
!720 = !DISubroutineType(types: !721)
!721 = !{null, !696}
!722 = !{!723}
!723 = !DILocalVariable(name: "dev", arg: 1, scope: !719, file: !667, line: 460, type: !696)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !725)
!725 = !{!726, !728, !729, !730}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !724, file: !10, line: 55, baseType: !727, size: 32)
!727 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !107)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !724, file: !10, line: 57, baseType: !727, size: 32, offset: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !724, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !724, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!731 = !DIGlobalVariableExpression(var: !732, expr: !DIExpression())
!732 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !719, file: !667, line: 497, type: !724, isLocal: true, isDefinition: true, align: 32)
!733 = !DIGlobalVariableExpression(var: !734, expr: !DIExpression())
!734 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !719, file: !667, line: 507, type: !724, isLocal: true, isDefinition: true, align: 32)
!735 = !DIGlobalVariableExpression(var: !736, expr: !DIExpression())
!736 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !719, file: !667, line: 512, type: !724, isLocal: true, isDefinition: true, align: 32)
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !719, file: !667, line: 516, type: !724, isLocal: true, isDefinition: true, align: 32)
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !719, file: !667, line: 523, type: !724, isLocal: true, isDefinition: true, align: 32)
!741 = !DIGlobalVariableExpression(var: !742, expr: !DIExpression())
!742 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !719, file: !667, line: 527, type: !724, isLocal: true, isDefinition: true, align: 32)
!743 = !DIGlobalVariableExpression(var: !744, expr: !DIExpression())
!744 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !719, file: !667, line: 581, type: !724, isLocal: true, isDefinition: true, align: 32)
!745 = !DIGlobalVariableExpression(var: !746, expr: !DIExpression())
!746 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !719, file: !667, line: 586, type: !724, isLocal: true, isDefinition: true, align: 32)
!747 = !DIGlobalVariableExpression(var: !748, expr: !DIExpression())
!748 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !719, file: !667, line: 591, type: !724, isLocal: true, isDefinition: true, align: 32)
!749 = !DIGlobalVariableExpression(var: !750, expr: !DIExpression())
!750 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !719, file: !667, line: 595, type: !724, isLocal: true, isDefinition: true, align: 32)
!751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !752, size: 736, elements: !713)
!752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !753)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !279, line: 154, baseType: !566)
!754 = !DIGlobalVariableExpression(var: !755, expr: !DIExpression())
!755 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !756, file: !761, line: 22, type: !783, isLocal: false, isDefinition: true, align: 16)
!756 = distinct !DICompileUnit(language: DW_LANG_C99, file: !757, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !758, splitDebugInlining: false, nameTableKind: None)
!757 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!758 = !{!759, !754, !765, !767, !769, !771, !773, !775, !777, !779, !781}
!759 = !DIGlobalVariableExpression(var: !760, expr: !DIExpression())
!760 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !756, file: !761, line: 17, type: !762, isLocal: false, isDefinition: true, align: 16)
!761 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!762 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 192, elements: !763)
!763 = !{!764}
!764 = !DISubrange(count: 12)
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !756, file: !761, line: 29, type: !668, isLocal: false, isDefinition: true, align: 16)
!767 = !DIGlobalVariableExpression(var: !768, expr: !DIExpression())
!768 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !756, file: !761, line: 36, type: !668, isLocal: false, isDefinition: true, align: 16)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !756, file: !761, line: 43, type: !668, isLocal: false, isDefinition: true, align: 16)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !756, file: !761, line: 50, type: !668, isLocal: false, isDefinition: true, align: 16)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !756, file: !761, line: 57, type: !668, isLocal: false, isDefinition: true, align: 16)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !756, file: !761, line: 64, type: !668, isLocal: false, isDefinition: true, align: 16)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !756, file: !761, line: 71, type: !668, isLocal: false, isDefinition: true, align: 16)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !756, file: !761, line: 78, type: !668, isLocal: false, isDefinition: true, align: 16)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !756, file: !761, line: 85, type: !668, isLocal: false, isDefinition: true, align: 16)
!783 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 48, elements: !784)
!784 = !{!785}
!785 = !DISubrange(count: 3)
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !788, file: !850, line: 398, type: !883, isLocal: true, isDefinition: true)
!788 = distinct !DICompileUnit(language: DW_LANG_C99, file: !789, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !790, retainedTypes: !803, globals: !847, splitDebugInlining: false, nameTableKind: None)
!789 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!790 = !{!791, !30, !796}
!791 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !792, line: 197, baseType: !32, size: 32, elements: !793)
!792 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!793 = !{!794, !795}
!794 = !DIEnumerator(name: "SUCCESS", value: 0)
!795 = !DIEnumerator(name: "ERROR", value: 1)
!796 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !797, line: 44, baseType: !32, size: 32, elements: !798)
!797 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!798 = !{!799, !800, !801, !802}
!799 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!800 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!801 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!802 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!803 = !{!102, !107, !162, !804, !840, !846}
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 510, baseType: !806)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 477, size: 1216, elements: !807)
!807 = !{!808, !809, !810, !811, !812, !813, !814, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !806, file: !279, line: 479, baseType: !283, size: 32)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !806, file: !279, line: 480, baseType: !283, size: 32, offset: 32)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !806, file: !279, line: 481, baseType: !283, size: 32, offset: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !806, file: !279, line: 482, baseType: !283, size: 32, offset: 96)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !806, file: !279, line: 483, baseType: !283, size: 32, offset: 128)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !806, file: !279, line: 484, baseType: !283, size: 32, offset: 160)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !806, file: !279, line: 485, baseType: !815, size: 64, offset: 192)
!815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 64, elements: !389)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !806, file: !279, line: 486, baseType: !283, size: 32, offset: 256)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !806, file: !279, line: 487, baseType: !283, size: 32, offset: 288)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !806, file: !279, line: 488, baseType: !815, size: 64, offset: 320)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !806, file: !279, line: 489, baseType: !283, size: 32, offset: 384)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !806, file: !279, line: 490, baseType: !283, size: 32, offset: 416)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !806, file: !279, line: 491, baseType: !815, size: 64, offset: 448)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !806, file: !279, line: 492, baseType: !283, size: 32, offset: 512)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !806, file: !279, line: 493, baseType: !283, size: 32, offset: 544)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !806, file: !279, line: 494, baseType: !815, size: 64, offset: 576)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !806, file: !279, line: 495, baseType: !283, size: 32, offset: 640)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !806, file: !279, line: 496, baseType: !283, size: 32, offset: 672)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !806, file: !279, line: 497, baseType: !815, size: 64, offset: 704)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !806, file: !279, line: 498, baseType: !283, size: 32, offset: 768)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !806, file: !279, line: 499, baseType: !283, size: 32, offset: 800)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !806, file: !279, line: 500, baseType: !815, size: 64, offset: 832)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !806, file: !279, line: 501, baseType: !283, size: 32, offset: 896)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !806, file: !279, line: 502, baseType: !283, size: 32, offset: 928)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !806, file: !279, line: 503, baseType: !815, size: 64, offset: 960)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !806, file: !279, line: 504, baseType: !283, size: 32, offset: 1024)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !806, file: !279, line: 505, baseType: !283, size: 32, offset: 1056)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !806, file: !279, line: 506, baseType: !162, size: 32, offset: 1088)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !806, file: !279, line: 507, baseType: !283, size: 32, offset: 1120)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !806, file: !279, line: 508, baseType: !283, size: 32, offset: 1152)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !806, file: !279, line: 509, baseType: !283, size: 32, offset: 1184)
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 32)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !842, line: 343, size: 64, elements: !843)
!842 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!843 = !{!844, !845}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !841, file: !842, line: 344, baseType: !162, size: 32)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !841, file: !842, line: 345, baseType: !162, size: 32, offset: 32)
!846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 32)
!847 = !{!848, !854, !870, !881, !786}
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !788, file: !850, line: 752, type: !851, isLocal: false, isDefinition: true, align: 16)
!850 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 848, elements: !852)
!852 = !{!853}
!853 = !DISubrange(count: 53)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !788, file: !850, line: 752, type: !856, isLocal: false, isDefinition: true, align: 32)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !858)
!858 = !{!859, !860, !861, !862, !868, !869}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !857, file: !120, line: 380, baseType: !123, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !857, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !857, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !857, file: !120, line: 386, baseType: !863, size: 32, offset: 96)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !865)
!865 = !{!866, !867}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !864, file: !120, line: 359, baseType: !133, size: 8)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !864, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !857, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !857, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !788, file: !850, line: 752, type: !872, isLocal: true, isDefinition: true, align: 32)
!872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !874)
!874 = !{!875, !880}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !873, file: !294, line: 60, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DISubroutineType(types: !878)
!878 = !{!107, !879}
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !873, file: !294, line: 65, baseType: !879, size: 32, offset: 32)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !788, file: !850, line: 752, type: !864, isLocal: true, isDefinition: true, align: 8)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !797, line: 100, size: 224, elements: !884)
!884 = !{!885, !891, !892, !901, !906, !911, !917}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !883, file: !797, line: 101, baseType: !886, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !797, line: 76, baseType: !887)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 32)
!888 = !DISubroutineType(types: !889)
!889 = !{!107, !879, !890}
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !797, line: 56, baseType: !102)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !883, file: !797, line: 102, baseType: !886, size: 32, offset: 32)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !883, file: !797, line: 103, baseType: !893, size: 32, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !797, line: 83, baseType: !894)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 32)
!895 = !DISubroutineType(types: !896)
!896 = !{!107, !879, !890, !897, !102}
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !797, line: 72, baseType: !898)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 32)
!899 = !DISubroutineType(types: !900)
!900 = !{null, !879, !890, !102}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !883, file: !797, line: 104, baseType: !902, size: 32, offset: 96)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !797, line: 79, baseType: !903)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 32)
!904 = !DISubroutineType(types: !905)
!905 = !{!107, !879, !890, !846}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !883, file: !797, line: 105, baseType: !907, size: 32, offset: 128)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !797, line: 88, baseType: !908)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 32)
!909 = !DISubroutineType(types: !910)
!910 = !{!796, !879, !890}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !883, file: !797, line: 106, baseType: !912, size: 32, offset: 160)
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !797, line: 92, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 32)
!914 = !DISubroutineType(types: !915)
!915 = !{!107, !879, !890, !916}
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !797, line: 64, baseType: !102)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !883, file: !797, line: 107, baseType: !918, size: 32, offset: 192)
!918 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !797, line: 96, baseType: !919)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 32)
!920 = !DISubroutineType(types: !921)
!921 = !{!107, !879, !890, !102}
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !924, file: !1009, line: 603, type: !1011, isLocal: true, isDefinition: true, align: 32)
!924 = distinct !DICompileUnit(language: DW_LANG_C99, file: !925, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !926, globals: !1006, splitDebugInlining: false, nameTableKind: None)
!925 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!926 = !{!102, !107, !927}
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !930)
!930 = !{!931, !950, !954, !958, !971, !976, !980, !984, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !929, file: !111, line: 365, baseType: !932, size: 32)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!107, !935, !144}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !936, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !937)
!937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !938)
!938 = !{!939, !940, !941, !942, !948, !949}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !937, file: !120, line: 380, baseType: !123, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !937, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !937, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !937, file: !120, line: 386, baseType: !943, size: 32, offset: 96)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 32)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !945)
!945 = !{!946, !947}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !944, file: !120, line: 359, baseType: !133, size: 8)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !944, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !937, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !937, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !929, file: !111, line: 366, baseType: !951, size: 32, offset: 32)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{null, !935, !134}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !929, file: !111, line: 374, baseType: !955, size: 32, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 32)
!956 = !DISubroutineType(types: !957)
!957 = !{!107, !935}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !929, file: !111, line: 377, baseType: !959, size: 32, offset: 96)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 32)
!960 = !DISubroutineType(types: !961)
!961 = !{!107, !935, !962}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !964)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !965)
!965 = !{!966, !967, !968, !969, !970}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !964, file: !111, line: 123, baseType: !162, size: 32)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !964, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !964, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !964, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !964, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !929, file: !111, line: 379, baseType: !972, size: 32, offset: 128)
!972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 32)
!973 = !DISubroutineType(types: !974)
!974 = !{!107, !935, !975}
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !929, file: !111, line: 384, baseType: !977, size: 32, offset: 160)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 32)
!978 = !DISubroutineType(types: !979)
!979 = !{!107, !935, !176, !107}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !929, file: !111, line: 393, baseType: !981, size: 32, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 32)
!982 = !DISubroutineType(types: !983)
!983 = !{!107, !935, !182, !183}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !929, file: !111, line: 402, baseType: !985, size: 32, offset: 224)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DISubroutineType(types: !987)
!987 = !{null, !935}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !929, file: !111, line: 405, baseType: !985, size: 32, offset: 256)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !929, file: !111, line: 408, baseType: !955, size: 32, offset: 288)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !929, file: !111, line: 411, baseType: !985, size: 32, offset: 320)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !929, file: !111, line: 414, baseType: !985, size: 32, offset: 352)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !929, file: !111, line: 417, baseType: !955, size: 32, offset: 384)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !929, file: !111, line: 420, baseType: !955, size: 32, offset: 416)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !929, file: !111, line: 423, baseType: !985, size: 32, offset: 448)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !929, file: !111, line: 426, baseType: !985, size: 32, offset: 480)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !929, file: !111, line: 429, baseType: !955, size: 32, offset: 512)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !929, file: !111, line: 432, baseType: !955, size: 32, offset: 544)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !929, file: !111, line: 435, baseType: !999, size: 32, offset: 576)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{null, !935, !1002, !102}
!1002 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1003)
!1003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1004 = !DISubroutineType(types: !1005)
!1005 = !{null, !935, !102}
!1006 = !{!922, !1007}
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !924, file: !1009, line: 38, type: !1010, isLocal: true, isDefinition: true)
!1009 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1010 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!1011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1013)
!1013 = !{!1014, !1015}
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1012, file: !294, line: 60, baseType: !955, size: 32)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1012, file: !294, line: 65, baseType: !935, size: 32, offset: 32)
!1016 = !DIGlobalVariableExpression(var: !1017, expr: !DIExpression())
!1017 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1018, file: !1189, line: 762, type: !1301, isLocal: true, isDefinition: true)
!1018 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1019, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1020, retainedTypes: !1038, globals: !1186, splitDebugInlining: false, nameTableKind: None)
!1019 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!1020 = !{!30, !1021, !1027, !1032, !796}
!1021 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1022, line: 506, baseType: !32, size: 32, elements: !1023)
!1022 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1023 = !{!1024, !1025, !1026}
!1024 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1025 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1026 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1027 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1022, line: 512, baseType: !32, size: 32, elements: !1028)
!1028 = !{!1029, !1030, !1031}
!1029 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1030 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1031 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1032 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !708, line: 43, baseType: !32, size: 32, elements: !1033)
!1033 = !{!1034, !1035, !1036, !1037}
!1034 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1035 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1036 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1037 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1038 = !{!102, !107, !1039, !1109, !1114, !1074, !1027, !1021, !1119, !1120, !162, !1134, !1089, !256, !1146, !1147}
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1022, line: 523, size: 288, elements: !1042)
!1042 = !{!1043, !1064, !1070, !1075, !1079, !1080, !1081, !1085, !1105}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1041, file: !1022, line: 524, baseType: !1044, size: 32)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!107, !1047, !1062, !1063}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1049)
!1049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1050)
!1050 = !{!1051, !1052, !1053, !1054, !1060, !1061}
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1049, file: !120, line: 380, baseType: !123, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1049, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1049, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1049, file: !120, line: 386, baseType: !1055, size: 32, offset: 96)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 32)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1056, file: !120, line: 359, baseType: !133, size: 8)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1056, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1049, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1049, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1022, line: 237, baseType: !133)
!1063 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1022, line: 257, baseType: !162)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1041, file: !1022, line: 530, baseType: !1065, size: 32, offset: 32)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!107, !1047, !1068}
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1022, line: 229, baseType: !162)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1041, file: !1022, line: 532, baseType: !1071, size: 32, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 32)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!107, !1047, !1074, !1069}
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1022, line: 216, baseType: !162)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1041, file: !1022, line: 535, baseType: !1076, size: 32, offset: 96)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1077, size: 32)
!1077 = !DISubroutineType(types: !1078)
!1078 = !{!107, !1047, !1074}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1041, file: !1022, line: 537, baseType: !1076, size: 32, offset: 128)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1041, file: !1022, line: 539, baseType: !1076, size: 32, offset: 160)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1041, file: !1022, line: 541, baseType: !1082, size: 32, offset: 192)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 32)
!1083 = !DISubroutineType(types: !1084)
!1084 = !{!107, !1047, !1062, !1021, !1027}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1041, file: !1022, line: 544, baseType: !1086, size: 32, offset: 224)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!107, !1047, !1089, !136}
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1022, line: 478, size: 96, elements: !1091)
!1091 = !{!1092, !1099, !1104}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1090, file: !1022, line: 482, baseType: !1093, size: 32)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1094, line: 33, baseType: !1095)
!1094 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1094, line: 29, size: 32, elements: !1096)
!1096 = !{!1097}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1095, file: !1094, line: 30, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1090, file: !1022, line: 485, baseType: !1100, size: 32, offset: 32)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1022, line: 464, baseType: !1101)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 32)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{null, !1047, !1089, !1074}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1090, file: !1022, line: 493, baseType: !1074, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1041, file: !1022, line: 547, baseType: !1106, size: 32, offset: 256)
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 32)
!1107 = !DISubroutineType(types: !1108)
!1108 = !{!162, !1047}
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 32)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1022, line: 428, size: 32, elements: !1112)
!1112 = !{!1113}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1111, file: !1022, line: 434, baseType: !1074, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1116)
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1022, line: 441, size: 32, elements: !1117)
!1117 = !{!1118}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1116, file: !1022, line: 447, baseType: !1074, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 396, baseType: !1122)
!1122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 385, size: 320, elements: !1123)
!1123 = !{!1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1122, file: !279, line: 387, baseType: !283, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1122, file: !279, line: 388, baseType: !283, size: 32, offset: 32)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1122, file: !279, line: 389, baseType: !283, size: 32, offset: 64)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1122, file: !279, line: 390, baseType: !283, size: 32, offset: 96)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1122, file: !279, line: 391, baseType: !283, size: 32, offset: 128)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1122, file: !279, line: 392, baseType: !283, size: 32, offset: 160)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1122, file: !279, line: 393, baseType: !283, size: 32, offset: 192)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1122, file: !279, line: 394, baseType: !283, size: 32, offset: 224)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1122, file: !279, line: 395, baseType: !1133, size: 64, offset: 256)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 64, elements: !389)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !279, line: 411, baseType: !1136)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 402, size: 320, elements: !1137)
!1137 = !{!1138, !1139, !1140, !1142, !1143, !1144, !1145}
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1136, file: !279, line: 404, baseType: !283, size: 32)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1136, file: !279, line: 405, baseType: !283, size: 32, offset: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1136, file: !279, line: 406, baseType: !1141, size: 128, offset: 64)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 128, elements: !669)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1136, file: !279, line: 407, baseType: !162, size: 32, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1136, file: !279, line: 408, baseType: !283, size: 32, offset: 224)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1136, file: !279, line: 409, baseType: !283, size: 32, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1136, file: !279, line: 410, baseType: !283, size: 32, offset: 288)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 32)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 32)
!1148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1149)
!1149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !797, line: 100, size: 224, elements: !1150)
!1150 = !{!1151, !1156, !1157, !1166, !1171, !1176, !1181}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1149, file: !797, line: 101, baseType: !1152, size: 32)
!1152 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !797, line: 76, baseType: !1153)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 32)
!1154 = !DISubroutineType(types: !1155)
!1155 = !{!107, !1047, !890}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1149, file: !797, line: 102, baseType: !1152, size: 32, offset: 32)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1149, file: !797, line: 103, baseType: !1158, size: 32, offset: 64)
!1158 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !797, line: 83, baseType: !1159)
!1159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 32)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!107, !1047, !890, !1162, !102}
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !797, line: 72, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{null, !1047, !890, !102}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1149, file: !797, line: 104, baseType: !1167, size: 32, offset: 96)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !797, line: 79, baseType: !1168)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 32)
!1169 = !DISubroutineType(types: !1170)
!1170 = !{!107, !1047, !890, !846}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1149, file: !797, line: 105, baseType: !1172, size: 32, offset: 128)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !797, line: 88, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!796, !1047, !890}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1149, file: !797, line: 106, baseType: !1177, size: 32, offset: 160)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !797, line: 92, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!107, !1047, !890, !916}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1149, file: !797, line: 107, baseType: !1182, size: 32, offset: 192)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !797, line: 96, baseType: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!107, !1047, !890, !102}
!1186 = !{!1187, !1193, !1195, !1205, !1207, !1209, !1211, !1216, !1218, !1220, !1225, !1227, !1229, !1231, !1233, !1235, !1237, !1239, !1241, !1243, !1245, !1247, !1249, !1251, !1253, !1267, !1269, !1271, !1273, !1275, !1277, !1279, !1281, !1283, !1285, !1287, !1289, !1291, !1293, !1295, !1016, !1297, !1299, !1312, !1314, !1316, !1318, !1320, !1322}
!1187 = !DIGlobalVariableExpression(var: !1188, expr: !DIExpression())
!1188 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1018, file: !1189, line: 762, type: !1190, isLocal: false, isDefinition: true, align: 16)
!1189 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1190 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 112, elements: !1191)
!1191 = !{!1192}
!1192 = !DISubrange(count: 7)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1018, file: !1189, line: 762, type: !1048, isLocal: false, isDefinition: true, align: 32)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1018, file: !1189, line: 762, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1199)
!1199 = !{!1200, !1204}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1198, file: !294, line: 60, baseType: !1201, size: 32)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 32)
!1202 = !DISubroutineType(types: !1203)
!1203 = !{!107, !1047}
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1198, file: !294, line: 65, baseType: !1047, size: 32, offset: 32)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1018, file: !1189, line: 766, type: !1190, isLocal: false, isDefinition: true, align: 16)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1018, file: !1189, line: 766, type: !1048, isLocal: false, isDefinition: true, align: 32)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1018, file: !1189, line: 766, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1211 = !DIGlobalVariableExpression(var: !1212, expr: !DIExpression())
!1212 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1018, file: !1189, line: 770, type: !1213, isLocal: false, isDefinition: true, align: 16)
!1213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 96, elements: !1214)
!1214 = !{!1215}
!1215 = !DISubrange(count: 6)
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1018, file: !1189, line: 770, type: !1048, isLocal: false, isDefinition: true, align: 32)
!1218 = !DIGlobalVariableExpression(var: !1219, expr: !DIExpression())
!1219 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1018, file: !1189, line: 770, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1018, file: !1189, line: 774, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 80, elements: !1223)
!1223 = !{!1224}
!1224 = !DISubrange(count: 5)
!1225 = !DIGlobalVariableExpression(var: !1226, expr: !DIExpression())
!1226 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1018, file: !1189, line: 774, type: !1048, isLocal: false, isDefinition: true, align: 32)
!1227 = !DIGlobalVariableExpression(var: !1228, expr: !DIExpression())
!1228 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1018, file: !1189, line: 774, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1229 = !DIGlobalVariableExpression(var: !1230, expr: !DIExpression())
!1230 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1018, file: !1189, line: 778, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1231 = !DIGlobalVariableExpression(var: !1232, expr: !DIExpression())
!1232 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1018, file: !1189, line: 778, type: !1048, isLocal: false, isDefinition: true, align: 32)
!1233 = !DIGlobalVariableExpression(var: !1234, expr: !DIExpression())
!1234 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1018, file: !1189, line: 778, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1018, file: !1189, line: 782, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1018, file: !1189, line: 782, type: !1048, isLocal: false, isDefinition: true, align: 32)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1018, file: !1189, line: 782, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1018, file: !1189, line: 786, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1018, file: !1189, line: 786, type: !1048, isLocal: false, isDefinition: true, align: 32)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1018, file: !1189, line: 786, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1018, file: !1189, line: 790, type: !1222, isLocal: false, isDefinition: true, align: 16)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1018, file: !1189, line: 790, type: !1048, isLocal: false, isDefinition: true, align: 32)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1018, file: !1189, line: 790, type: !1197, isLocal: true, isDefinition: true, align: 32)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1018, file: !1189, line: 762, type: !1255, isLocal: true, isDefinition: true)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1256, line: 237, size: 128, elements: !1257)
!1256 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1257 = !{!1258, !1259, !1260}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1255, file: !1256, line: 239, baseType: !1116, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1255, file: !1256, line: 241, baseType: !1047, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1255, file: !1256, line: 243, baseType: !1261, size: 64, offset: 64)
!1261 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1094, line: 40, baseType: !1262)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1094, line: 35, size: 64, elements: !1263)
!1263 = !{!1264, !1266}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1262, file: !1094, line: 36, baseType: !1265, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1262, file: !1094, line: 37, baseType: !1265, size: 32, offset: 32)
!1267 = !DIGlobalVariableExpression(var: !1268, expr: !DIExpression())
!1268 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1018, file: !1189, line: 762, type: !1056, isLocal: true, isDefinition: true, align: 8)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1018, file: !1189, line: 766, type: !1255, isLocal: true, isDefinition: true)
!1271 = !DIGlobalVariableExpression(var: !1272, expr: !DIExpression())
!1272 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1018, file: !1189, line: 766, type: !1056, isLocal: true, isDefinition: true, align: 8)
!1273 = !DIGlobalVariableExpression(var: !1274, expr: !DIExpression())
!1274 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1018, file: !1189, line: 770, type: !1255, isLocal: true, isDefinition: true)
!1275 = !DIGlobalVariableExpression(var: !1276, expr: !DIExpression())
!1276 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1018, file: !1189, line: 770, type: !1056, isLocal: true, isDefinition: true, align: 8)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1018, file: !1189, line: 774, type: !1255, isLocal: true, isDefinition: true)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1018, file: !1189, line: 774, type: !1056, isLocal: true, isDefinition: true, align: 8)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1018, file: !1189, line: 778, type: !1255, isLocal: true, isDefinition: true)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1018, file: !1189, line: 778, type: !1056, isLocal: true, isDefinition: true, align: 8)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1018, file: !1189, line: 782, type: !1255, isLocal: true, isDefinition: true)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1018, file: !1189, line: 782, type: !1056, isLocal: true, isDefinition: true, align: 8)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1018, file: !1189, line: 786, type: !1255, isLocal: true, isDefinition: true)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1018, file: !1189, line: 786, type: !1056, isLocal: true, isDefinition: true, align: 8)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1018, file: !1189, line: 790, type: !1255, isLocal: true, isDefinition: true)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1018, file: !1189, line: 790, type: !1056, isLocal: true, isDefinition: true, align: 8)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1018, file: !1189, line: 656, type: !1040, isLocal: true, isDefinition: true)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1018, file: !1189, line: 766, type: !1301, isLocal: true, isDefinition: true)
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1256, line: 224, size: 160, elements: !1303)
!1303 = !{!1304, !1305, !1306, !1307}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1302, file: !1256, line: 226, baseType: !1111, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1302, file: !1256, line: 228, baseType: !846, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1302, file: !1256, line: 230, baseType: !107, size: 32, offset: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1302, file: !1256, line: 231, baseType: !1308, size: 64, offset: 96)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !842, line: 343, size: 64, elements: !1309)
!1309 = !{!1310, !1311}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1308, file: !842, line: 344, baseType: !162, size: 32)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1308, file: !842, line: 345, baseType: !162, size: 32, offset: 32)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1018, file: !1189, line: 770, type: !1301, isLocal: true, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1018, file: !1189, line: 774, type: !1301, isLocal: true, isDefinition: true)
!1316 = !DIGlobalVariableExpression(var: !1317, expr: !DIExpression())
!1317 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1018, file: !1189, line: 778, type: !1301, isLocal: true, isDefinition: true)
!1318 = !DIGlobalVariableExpression(var: !1319, expr: !DIExpression())
!1319 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1018, file: !1189, line: 782, type: !1301, isLocal: true, isDefinition: true)
!1320 = !DIGlobalVariableExpression(var: !1321, expr: !DIExpression())
!1321 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1018, file: !1189, line: 786, type: !1301, isLocal: true, isDefinition: true)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1018, file: !1189, line: 790, type: !1301, isLocal: true, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1326, file: !1497, line: 1914, type: !1571, isLocal: true, isDefinition: true)
!1326 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1327, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1328, retainedTypes: !1361, globals: !1494, splitDebugInlining: false, nameTableKind: None)
!1327 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!1328 = !{!30, !1329, !1336, !1343, !1350, !1356, !796}
!1329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !111, line: 47, baseType: !32, size: 32, elements: !1330)
!1330 = !{!1331, !1332, !1333, !1334, !1335}
!1331 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1332 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1333 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1334 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1335 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !111, line: 75, baseType: !32, size: 32, elements: !1337)
!1337 = !{!1338, !1339, !1340, !1341, !1342}
!1338 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1339 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1340 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1341 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1342 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1343 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !111, line: 92, baseType: !32, size: 32, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349}
!1345 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1346 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1347 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1348 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1349 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1350 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !111, line: 84, baseType: !32, size: 32, elements: !1351)
!1351 = !{!1352, !1353, !1354, !1355}
!1352 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1353 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1354 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1355 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !111, line: 107, baseType: !32, size: 32, elements: !1357)
!1357 = !{!1358, !1359, !1360}
!1358 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1359 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1360 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1361 = !{!102, !107, !1362, !134, !133, !1441, !162, !890, !1452, !411, !1491, !1493}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1364)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !111, line: 336, size: 608, elements: !1365)
!1365 = !{!1366, !1385, !1389, !1393, !1406, !1411, !1415, !1419, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1364, file: !111, line: 365, baseType: !1367, size: 32)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 32)
!1368 = !DISubroutineType(types: !1369)
!1369 = !{!107, !1370, !144}
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 32)
!1371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1372)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377, !1383, !1384}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1372, file: !120, line: 380, baseType: !123, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1372, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1372, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1372, file: !120, line: 386, baseType: !1378, size: 32, offset: 96)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 32)
!1379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1380)
!1380 = !{!1381, !1382}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1379, file: !120, line: 359, baseType: !133, size: 8)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1379, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1372, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1372, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1364, file: !111, line: 366, baseType: !1386, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 32)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{null, !1370, !134}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1364, file: !111, line: 374, baseType: !1390, size: 32, offset: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = !DISubroutineType(types: !1392)
!1392 = !{!107, !1370}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1364, file: !111, line: 377, baseType: !1394, size: 32, offset: 96)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 32)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!107, !1370, !1397}
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !111, line: 122, size: 64, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404, !1405}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1399, file: !111, line: 123, baseType: !162, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1399, file: !111, line: 124, baseType: !133, size: 8, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1399, file: !111, line: 125, baseType: !133, size: 8, offset: 40)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1399, file: !111, line: 126, baseType: !133, size: 8, offset: 48)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1399, file: !111, line: 127, baseType: !133, size: 8, offset: 56)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1364, file: !111, line: 379, baseType: !1407, size: 32, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{!107, !1370, !1410}
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 32)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_fill", scope: !1364, file: !111, line: 384, baseType: !1412, size: 32, offset: 160)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 32)
!1413 = !DISubroutineType(types: !1414)
!1414 = !{!107, !1370, !176, !107}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_read", scope: !1364, file: !111, line: 393, baseType: !1416, size: 32, offset: 192)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!107, !1370, !182, !183}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_enable", scope: !1364, file: !111, line: 402, baseType: !1420, size: 32, offset: 224)
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 32)
!1421 = !DISubroutineType(types: !1422)
!1422 = !{null, !1370}
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_disable", scope: !1364, file: !111, line: 405, baseType: !1420, size: 32, offset: 256)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_ready", scope: !1364, file: !111, line: 408, baseType: !1390, size: 32, offset: 288)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_enable", scope: !1364, file: !111, line: 411, baseType: !1420, size: 32, offset: 320)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_disable", scope: !1364, file: !111, line: 414, baseType: !1420, size: 32, offset: 352)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "irq_tx_complete", scope: !1364, file: !111, line: 417, baseType: !1390, size: 32, offset: 384)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "irq_rx_ready", scope: !1364, file: !111, line: 420, baseType: !1390, size: 32, offset: 416)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_enable", scope: !1364, file: !111, line: 423, baseType: !1420, size: 32, offset: 448)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "irq_err_disable", scope: !1364, file: !111, line: 426, baseType: !1420, size: 32, offset: 480)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "irq_is_pending", scope: !1364, file: !111, line: 429, baseType: !1390, size: 32, offset: 512)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "irq_update", scope: !1364, file: !111, line: 432, baseType: !1390, size: 32, offset: 544)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "irq_callback_set", scope: !1364, file: !111, line: 435, baseType: !1434, size: 32, offset: 576)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{null, !1370, !1437, !102}
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_callback_user_data_t", file: !111, line: 142, baseType: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{null, !1370, !102}
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !279, line: 648, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 639, size: 224, elements: !1444)
!1444 = !{!1445, !1446, !1447, !1448, !1449, !1450, !1451}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1443, file: !279, line: 641, baseType: !283, size: 32)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1443, file: !279, line: 642, baseType: !283, size: 32, offset: 32)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1443, file: !279, line: 643, baseType: !283, size: 32, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1443, file: !279, line: 644, baseType: !283, size: 32, offset: 96)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1443, file: !279, line: 645, baseType: !283, size: 32, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1443, file: !279, line: 646, baseType: !283, size: 32, offset: 160)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1443, file: !279, line: 647, baseType: !283, size: 32, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 32)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !797, line: 100, size: 224, elements: !1455)
!1455 = !{!1456, !1461, !1462, !1471, !1476, !1481, !1486}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1454, file: !797, line: 101, baseType: !1457, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !797, line: 76, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!107, !1370, !890}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1454, file: !797, line: 102, baseType: !1457, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1454, file: !797, line: 103, baseType: !1463, size: 32, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !797, line: 83, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 32)
!1465 = !DISubroutineType(types: !1466)
!1466 = !{!107, !1370, !890, !1467, !102}
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !797, line: 72, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{null, !1370, !890, !102}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1454, file: !797, line: 104, baseType: !1472, size: 32, offset: 96)
!1472 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !797, line: 79, baseType: !1473)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 32)
!1474 = !DISubroutineType(types: !1475)
!1475 = !{!107, !1370, !890, !846}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1454, file: !797, line: 105, baseType: !1477, size: 32, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !797, line: 88, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!796, !1370, !890}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1454, file: !797, line: 106, baseType: !1482, size: 32, offset: 160)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !797, line: 92, baseType: !1483)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!107, !1370, !890, !916}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1454, file: !797, line: 107, baseType: !1487, size: 32, offset: 192)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !797, line: 96, baseType: !1488)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!107, !1370, !890, !102}
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1492)
!1492 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 32)
!1494 = !{!1495, !1501, !1503, !1510, !1324, !1512, !1520, !1543, !1546, !1549, !1560, !1562}
!1495 = !DIGlobalVariableExpression(var: !1496, expr: !DIExpression())
!1496 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1326, file: !1497, line: 1914, type: !1498, isLocal: false, isDefinition: true, align: 16)
!1497 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 128, elements: !1499)
!1499 = !{!1500}
!1500 = !DISubrange(count: 8)
!1501 = !DIGlobalVariableExpression(var: !1502, expr: !DIExpression())
!1502 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1326, file: !1497, line: 1914, type: !1371, isLocal: false, isDefinition: true, align: 32)
!1503 = !DIGlobalVariableExpression(var: !1504, expr: !DIExpression())
!1504 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1326, file: !1497, line: 1914, type: !1505, isLocal: true, isDefinition: true, align: 32)
!1505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1507)
!1507 = !{!1508, !1509}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1506, file: !294, line: 60, baseType: !1390, size: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1506, file: !294, line: 65, baseType: !1370, size: 32, offset: 32)
!1510 = !DIGlobalVariableExpression(var: !1511, expr: !DIExpression())
!1511 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1326, file: !1497, line: 1914, type: !1379, isLocal: true, isDefinition: true, align: 8)
!1512 = !DIGlobalVariableExpression(var: !1513, expr: !DIExpression())
!1513 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1326, file: !1497, line: 1914, type: !1514, isLocal: true, isDefinition: true)
!1514 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1515, size: 64, elements: !486)
!1515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !842, line: 343, size: 64, elements: !1517)
!1517 = !{!1518, !1519}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1516, file: !842, line: 344, baseType: !162, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1516, file: !842, line: 345, baseType: !162, size: 32, offset: 32)
!1520 = !DIGlobalVariableExpression(var: !1521, expr: !DIExpression())
!1521 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1326, file: !1497, line: 1914, type: !1522, isLocal: true, isDefinition: true)
!1522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1524, line: 60, size: 64, elements: !1525)
!1524 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1525 = !{!1526, !1542}
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1523, file: !1524, line: 69, baseType: !1527, size: 32)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1524, line: 50, size: 64, elements: !1530)
!1530 = !{!1531, !1540, !1541}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1529, file: !1524, line: 52, baseType: !1532, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1534)
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1535, line: 37, baseType: !1536)
!1535 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1535, line: 32, size: 64, elements: !1537)
!1537 = !{!1538, !1539}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1536, file: !1535, line: 34, baseType: !162, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1536, file: !1535, line: 36, baseType: !162, size: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1529, file: !1524, line: 54, baseType: !133, size: 8, offset: 32)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1529, file: !1524, line: 56, baseType: !133, size: 8, offset: 40)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1523, file: !1524, line: 71, baseType: !133, size: 8, offset: 32)
!1543 = !DIGlobalVariableExpression(var: !1544, expr: !DIExpression())
!1544 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1326, file: !1497, line: 1914, type: !1545, isLocal: true, isDefinition: true)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1528, size: 64, elements: !486)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1326, file: !1497, line: 1914, type: !1548, isLocal: true, isDefinition: true)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 128, elements: !389)
!1549 = !DIGlobalVariableExpression(var: !1550, expr: !DIExpression())
!1550 = distinct !DIGlobalVariable(name: "__isr_uart_stm32_isr_irq_0", scope: !1551, file: !1497, line: 1914, type: !1554, isLocal: true, isDefinition: true, align: 32)
!1551 = distinct !DISubprogram(name: "uart_stm32_irq_config_func_0", scope: !1497, file: !1497, line: 1914, type: !1421, scopeLine: 1914, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !1552)
!1552 = !{!1553}
!1553 = !DILocalVariable(name: "dev", arg: 1, scope: !1551, file: !1497, line: 1914, type: !1370)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !1555)
!1555 = !{!1556, !1557, !1558, !1559}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1554, file: !10, line: 55, baseType: !727, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1554, file: !10, line: 57, baseType: !727, size: 32, offset: 32)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1554, file: !10, line: 59, baseType: !102, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !1554, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1326, file: !1497, line: 1539, type: !1363, isLocal: true, isDefinition: true)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1326, file: !1497, line: 1914, type: !1564, isLocal: true, isDefinition: true)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1565, line: 74, size: 128, elements: !1566)
!1565 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1566 = !{!1567, !1568, !1569, !1570}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1564, file: !1565, line: 76, baseType: !162, size: 32)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1564, file: !1565, line: 78, baseType: !1370, size: 32, offset: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "user_cb", scope: !1564, file: !1565, line: 80, baseType: !1437, size: 32, offset: 64)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !1564, file: !1565, line: 81, baseType: !102, size: 32, offset: 96)
!1571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1565, line: 22, size: 256, elements: !1573)
!1573 = !{!1574, !1575, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1586}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1572, file: !1565, line: 24, baseType: !1441, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1572, file: !1565, line: 26, baseType: !1576, size: 32, offset: 32)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1572, file: !1565, line: 28, baseType: !252, size: 32, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1572, file: !1565, line: 30, baseType: !136, size: 8, offset: 96)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1572, file: !1565, line: 32, baseType: !107, size: 32, offset: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1572, file: !1565, line: 34, baseType: !136, size: 8, offset: 160)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1572, file: !1565, line: 36, baseType: !136, size: 8, offset: 168)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1572, file: !1565, line: 38, baseType: !136, size: 8, offset: 176)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1572, file: !1565, line: 40, baseType: !136, size: 8, offset: 184)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1572, file: !1565, line: 41, baseType: !1585, size: 32, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "irq_config_func", scope: !1572, file: !1565, line: 44, baseType: !1587, size: 32, offset: 224)
!1587 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_irq_config_func_t", file: !111, line: 150, baseType: !1420)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1590, file: !1666, line: 65, type: !283, isLocal: true, isDefinition: true)
!1590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1591, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1592, retainedTypes: !1593, globals: !1663, splitDebugInlining: false, nameTableKind: None)
!1591 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!1592 = !{!566}
!1593 = !{!103, !1594, !727, !133, !162, !1602, !1633}
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!1595 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !1596)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1596, file: !497, line: 766, baseType: !283, size: 32)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1596, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1596, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1596, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!1602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 32)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1604)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1605)
!1605 = !{!1606, !1608, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1623, !1628, !1632}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1604, file: !497, line: 413, baseType: !1607, size: 256)
!1607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !283, size: 256, elements: !1499)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1604, file: !497, line: 414, baseType: !1609, size: 768, offset: 256)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 768, elements: !1610)
!1610 = !{!1611}
!1611 = !DISubrange(count: 24)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1604, file: !497, line: 415, baseType: !1607, size: 256, offset: 1024)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1604, file: !497, line: 416, baseType: !1609, size: 768, offset: 1280)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1604, file: !497, line: 417, baseType: !1607, size: 256, offset: 2048)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1604, file: !497, line: 418, baseType: !1609, size: 768, offset: 2304)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1604, file: !497, line: 419, baseType: !1607, size: 256, offset: 3072)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1604, file: !497, line: 420, baseType: !1609, size: 768, offset: 3328)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1604, file: !497, line: 421, baseType: !1607, size: 256, offset: 4096)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1604, file: !497, line: 422, baseType: !1620, size: 1792, offset: 4352)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 1792, elements: !1621)
!1621 = !{!1622}
!1622 = !DISubrange(count: 56)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1604, file: !497, line: 423, baseType: !1624, size: 1920, offset: 6144)
!1624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1625, size: 1920, elements: !1626)
!1625 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !133)
!1626 = !{!1627}
!1627 = !DISubrange(count: 240)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1604, file: !497, line: 424, baseType: !1629, size: 20608, offset: 8064)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 20608, elements: !1630)
!1630 = !{!1631}
!1631 = !DISubrange(count: 644)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1604, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1635)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1643, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1654, !1655, !1656, !1658, !1660, !1662}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1635, file: !497, line: 447, baseType: !501, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1635, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1635, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1635, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1635, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1635, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1635, file: !497, line: 453, baseType: !1644, size: 96, offset: 192)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1625, size: 96, elements: !763)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1635, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1635, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1635, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1635, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1635, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1635, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1635, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1635, file: !497, line: 461, baseType: !1653, size: 64, offset: 512)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 64, elements: !389)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1635, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1635, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1635, file: !497, line: 464, baseType: !1657, size: 128, offset: 640)
!1657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 128, elements: !669)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1635, file: !497, line: 465, baseType: !1659, size: 160, offset: 768)
!1659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !501, size: 160, elements: !1223)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1635, file: !497, line: 466, baseType: !1661, size: 160, offset: 928)
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 160, elements: !1223)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1635, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1663 = !{!1664, !1690, !1693, !1695, !1697, !1588}
!1664 = !DIGlobalVariableExpression(var: !1665, expr: !DIExpression())
!1665 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1590, file: !1666, line: 285, type: !1667, isLocal: true, isDefinition: true, align: 32)
!1666 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1668)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !1669)
!1669 = !{!1670, !1689}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1668, file: !294, line: 60, baseType: !1671, size: 32)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 32)
!1672 = !DISubroutineType(types: !1673)
!1673 = !{!107, !1674}
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1677)
!1677 = !{!1678, !1679, !1680, !1681, !1687, !1688}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1676, file: !120, line: 380, baseType: !123, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1676, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1676, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1676, file: !120, line: 386, baseType: !1682, size: 32, offset: 96)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1684)
!1684 = !{!1685, !1686}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1683, file: !120, line: 359, baseType: !133, size: 8)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1683, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1676, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1676, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1668, file: !294, line: 65, baseType: !1674, size: 32, offset: 32)
!1690 = !DIGlobalVariableExpression(var: !1691, expr: !DIExpression())
!1691 = distinct !DIGlobalVariable(name: "lock", scope: !1590, file: !1666, line: 34, type: !1692, isLocal: true, isDefinition: true)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!1693 = !DIGlobalVariableExpression(var: !1694, expr: !DIExpression())
!1694 = distinct !DIGlobalVariable(name: "last_load", scope: !1590, file: !1666, line: 36, type: !162, isLocal: true, isDefinition: true)
!1695 = !DIGlobalVariableExpression(var: !1696, expr: !DIExpression())
!1696 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1590, file: !1666, line: 48, type: !162, isLocal: true, isDefinition: true)
!1697 = !DIGlobalVariableExpression(var: !1698, expr: !DIExpression())
!1698 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1590, file: !1666, line: 54, type: !162, isLocal: true, isDefinition: true)
!1699 = !DIGlobalVariableExpression(var: !1700, expr: !DIExpression())
!1700 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1701, file: !1783, line: 22, type: !1785, isLocal: true, isDefinition: true)
!1701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1703, retainedTypes: !1704, globals: !1780, splitDebugInlining: false, nameTableKind: None)
!1702 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!1703 = !{!1021, !1027}
!1704 = !{!1705, !1769, !1774, !1074, !1027, !1021, !1779, !102}
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1022, line: 523, size: 288, elements: !1708)
!1708 = !{!1709, !1728, !1732, !1736, !1740, !1741, !1742, !1746, !1765}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1707, file: !1022, line: 524, baseType: !1710, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!107, !1713, !1062, !1063}
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1715)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1716)
!1716 = !{!1717, !1718, !1719, !1720, !1726, !1727}
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1715, file: !120, line: 380, baseType: !123, size: 32)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1715, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1715, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1715, file: !120, line: 386, baseType: !1721, size: 32, offset: 96)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1723)
!1723 = !{!1724, !1725}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1722, file: !120, line: 359, baseType: !133, size: 8)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1722, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1715, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1715, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1707, file: !1022, line: 530, baseType: !1729, size: 32, offset: 32)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!107, !1713, !1068}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1707, file: !1022, line: 532, baseType: !1733, size: 32, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{!107, !1713, !1074, !1069}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1707, file: !1022, line: 535, baseType: !1737, size: 32, offset: 96)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 32)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!107, !1713, !1074}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1707, file: !1022, line: 537, baseType: !1737, size: 32, offset: 128)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1707, file: !1022, line: 539, baseType: !1737, size: 32, offset: 160)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1707, file: !1022, line: 541, baseType: !1743, size: 32, offset: 192)
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1744, size: 32)
!1744 = !DISubroutineType(types: !1745)
!1745 = !{!107, !1713, !1062, !1021, !1027}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1707, file: !1022, line: 544, baseType: !1747, size: 32, offset: 224)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!107, !1713, !1750, !136}
!1750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1751, size: 32)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1022, line: 478, size: 96, elements: !1752)
!1752 = !{!1753, !1759, !1764}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1751, file: !1022, line: 482, baseType: !1754, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1094, line: 33, baseType: !1755)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1094, line: 29, size: 32, elements: !1756)
!1756 = !{!1757}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1755, file: !1094, line: 30, baseType: !1758, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 32)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1751, file: !1022, line: 485, baseType: !1760, size: 32, offset: 32)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1022, line: 464, baseType: !1761)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 32)
!1762 = !DISubroutineType(types: !1763)
!1763 = !{null, !1713, !1750, !1074}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1751, file: !1022, line: 493, baseType: !1074, size: 32, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1707, file: !1022, line: 547, baseType: !1766, size: 32, offset: 256)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!162, !1713}
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1771)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1022, line: 428, size: 32, elements: !1772)
!1772 = !{!1773}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1771, file: !1022, line: 434, baseType: !1074, size: 32)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 32)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1022, line: 441, size: 32, elements: !1777)
!1777 = !{!1778}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1776, file: !1022, line: 447, baseType: !1074, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1780 = !{!1781, !1699}
!1781 = !DIGlobalVariableExpression(var: !1782, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1782 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1701, file: !1783, line: 37, type: !1784, isLocal: true, isDefinition: true)
!1783 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!1785 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1786, size: 352, elements: !1787)
!1786 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1713)
!1787 = !{!1788}
!1788 = !DISubrange(count: 11)
!1789 = !DIGlobalVariableExpression(var: !1790, expr: !DIExpression())
!1790 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1791, file: !1832, line: 139, type: !1838, isLocal: false, isDefinition: true)
!1791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1792, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1793, globals: !1829, splitDebugInlining: false, nameTableKind: None)
!1792 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!1793 = !{!1794}
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 510, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 477, size: 1216, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1796, file: !279, line: 479, baseType: !283, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1796, file: !279, line: 480, baseType: !283, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1796, file: !279, line: 481, baseType: !283, size: 32, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1796, file: !279, line: 482, baseType: !283, size: 32, offset: 96)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1796, file: !279, line: 483, baseType: !283, size: 32, offset: 128)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1796, file: !279, line: 484, baseType: !283, size: 32, offset: 160)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1796, file: !279, line: 485, baseType: !815, size: 64, offset: 192)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1796, file: !279, line: 486, baseType: !283, size: 32, offset: 256)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1796, file: !279, line: 487, baseType: !283, size: 32, offset: 288)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1796, file: !279, line: 488, baseType: !815, size: 64, offset: 320)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1796, file: !279, line: 489, baseType: !283, size: 32, offset: 384)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1796, file: !279, line: 490, baseType: !283, size: 32, offset: 416)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1796, file: !279, line: 491, baseType: !815, size: 64, offset: 448)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1796, file: !279, line: 492, baseType: !283, size: 32, offset: 512)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1796, file: !279, line: 493, baseType: !283, size: 32, offset: 544)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1796, file: !279, line: 494, baseType: !815, size: 64, offset: 576)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1796, file: !279, line: 495, baseType: !283, size: 32, offset: 640)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1796, file: !279, line: 496, baseType: !283, size: 32, offset: 672)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1796, file: !279, line: 497, baseType: !815, size: 64, offset: 704)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1796, file: !279, line: 498, baseType: !283, size: 32, offset: 768)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1796, file: !279, line: 499, baseType: !283, size: 32, offset: 800)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1796, file: !279, line: 500, baseType: !815, size: 64, offset: 832)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1796, file: !279, line: 501, baseType: !283, size: 32, offset: 896)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1796, file: !279, line: 502, baseType: !283, size: 32, offset: 928)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1796, file: !279, line: 503, baseType: !815, size: 64, offset: 960)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1796, file: !279, line: 504, baseType: !283, size: 32, offset: 1024)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1796, file: !279, line: 505, baseType: !283, size: 32, offset: 1056)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1796, file: !279, line: 506, baseType: !162, size: 32, offset: 1088)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1796, file: !279, line: 507, baseType: !283, size: 32, offset: 1120)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1796, file: !279, line: 508, baseType: !283, size: 32, offset: 1152)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1796, file: !279, line: 509, baseType: !283, size: 32, offset: 1184)
!1829 = !{!1830, !1833, !1789}
!1830 = !DIGlobalVariableExpression(var: !1831, expr: !DIExpression())
!1831 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1791, file: !1832, line: 137, type: !162, isLocal: false, isDefinition: true)
!1832 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1833 = !DIGlobalVariableExpression(var: !1834, expr: !DIExpression())
!1834 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1791, file: !1832, line: 138, type: !1835, isLocal: false, isDefinition: true)
!1835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 128, elements: !1836)
!1836 = !{!1837}
!1837 = !DISubrange(count: 16)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 64, elements: !1499)
!1839 = !DIGlobalVariableExpression(var: !1840, expr: !DIExpression())
!1840 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1841, file: !1844, line: 23, type: !183, isLocal: false, isDefinition: true)
!1841 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1842, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, globals: !1843, splitDebugInlining: false, nameTableKind: None)
!1842 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!1843 = !{!1839}
!1844 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1845 = !DIGlobalVariableExpression(var: !1846, expr: !DIExpression())
!1846 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1847, file: !1851, line: 86, type: !2098, isLocal: false, isDefinition: true, align: 512)
!1847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1849, retainedTypes: !1858, globals: !1931, splitDebugInlining: false, nameTableKind: None)
!1848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!1849 = !{!1850, !30, !566}
!1850 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1851, line: 63, baseType: !32, size: 32, elements: !1852)
!1851 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1852 = !{!1853, !1854, !1855, !1856, !1857}
!1853 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1854 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1855 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1856 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1857 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1858 = !{!252, !102, !107, !1859, !256, !162, !1889, !727, !133, !1914}
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1861)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1862, line: 51, size: 64, elements: !1863)
!1862 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1863 = !{!1864, !1884}
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1861, file: !1862, line: 52, baseType: !1865, size: 32)
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1862, line: 38, baseType: !1866)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!107, !1869, !182, !411}
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1871)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !1872)
!1872 = !{!1873, !1874, !1875, !1876, !1882, !1883}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1871, file: !120, line: 380, baseType: !123, size: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1871, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1871, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1871, file: !120, line: 386, baseType: !1877, size: 32, offset: 96)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !1879)
!1879 = !{!1880, !1881}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1878, file: !120, line: 359, baseType: !133, size: 8)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1878, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1871, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1871, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1861, file: !1862, line: 53, baseType: !1885, size: 32, offset: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1862, line: 47, baseType: !1886)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 32)
!1887 = !DISubroutineType(types: !1888)
!1888 = !{!107, !1869, !182, !411, !162}
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 32)
!1890 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !1892)
!1892 = !{!1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1891, file: !497, line: 447, baseType: !501, size: 32)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1891, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1891, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1891, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1891, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1891, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1891, file: !497, line: 453, baseType: !1644, size: 96, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1891, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1891, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1891, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1891, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1891, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1891, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1891, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1891, file: !497, line: 461, baseType: !1653, size: 64, offset: 512)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1891, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1891, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1891, file: !497, line: 464, baseType: !1657, size: 128, offset: 640)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1891, file: !497, line: 465, baseType: !1659, size: 160, offset: 768)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1891, file: !497, line: 466, baseType: !1661, size: 160, offset: 928)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1891, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !1917)
!1917 = !{!1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1916, file: !497, line: 413, baseType: !1607, size: 256)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1916, file: !497, line: 414, baseType: !1609, size: 768, offset: 256)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1916, file: !497, line: 415, baseType: !1607, size: 256, offset: 1024)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1916, file: !497, line: 416, baseType: !1609, size: 768, offset: 1280)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1916, file: !497, line: 417, baseType: !1607, size: 256, offset: 2048)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1916, file: !497, line: 418, baseType: !1609, size: 768, offset: 2304)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1916, file: !497, line: 419, baseType: !1607, size: 256, offset: 3072)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1916, file: !497, line: 420, baseType: !1609, size: 768, offset: 3328)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1916, file: !497, line: 421, baseType: !1607, size: 256, offset: 4096)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1916, file: !497, line: 422, baseType: !1620, size: 1792, offset: 4352)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1916, file: !497, line: 423, baseType: !1624, size: 1920, offset: 6144)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1916, file: !497, line: 424, baseType: !1629, size: 20608, offset: 8064)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1916, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!1931 = !{!1932, !2054, !2063, !2065, !1845, !2068, !2070, !2075}
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "_kernel", scope: !1847, file: !1851, line: 40, type: !1934, isLocal: false, isDefinition: true)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !228, line: 158, size: 288, elements: !1935)
!1935 = !{!1936, !2049}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1934, file: !228, line: 159, baseType: !1937, size: 192)
!1937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1938, size: 192, elements: !486)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !228, line: 100, size: 192, elements: !1939)
!1939 = !{!1940, !1941, !1942, !2043, !2044, !2045, !2046}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1938, file: !228, line: 102, baseType: !162, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1938, file: !228, line: 105, baseType: !256, size: 32, offset: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1938, file: !228, line: 108, baseType: !1943, size: 32, offset: 64)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !1945)
!1945 = !{!1946, !2004, !2016, !2017, !2018, !2019, !2025, !2038}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1944, file: !359, line: 247, baseType: !1947, size: 384)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !1948)
!1948 = !{!1949, !1973, !1980, !1981, !1982, !1991, !1992, !1993}
!1949 = !DIDerivedType(tag: DW_TAG_member, scope: !1947, file: !359, line: 60, baseType: !1950, size: 64)
!1950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1947, file: !359, line: 60, size: 64, elements: !1951)
!1951 = !{!1952, !1967}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1950, file: !359, line: 61, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !1954)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !1955)
!1955 = !{!1956, !1962}
!1956 = !DIDerivedType(tag: DW_TAG_member, scope: !1954, file: !233, line: 38, baseType: !1957, size: 32)
!1957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1954, file: !233, line: 38, size: 32, elements: !1958)
!1958 = !{!1959, !1961}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1957, file: !233, line: 39, baseType: !1960, size: 32)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1957, file: !233, line: 40, baseType: !1960, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, scope: !1954, file: !233, line: 42, baseType: !1963, size: 32, offset: 32)
!1963 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1954, file: !233, line: 42, size: 32, elements: !1964)
!1964 = !{!1965, !1966}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1963, file: !233, line: 43, baseType: !1960, size: 32)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1963, file: !233, line: 44, baseType: !1960, size: 32)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1950, file: !359, line: 62, baseType: !1968, size: 64)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !1969)
!1969 = !{!1970}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1968, file: !384, line: 50, baseType: !1971, size: 64)
!1971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1972, size: 64, elements: !389)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1947, file: !359, line: 68, baseType: !1974, size: 32, offset: 64)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !1976)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !1977)
!1977 = !{!1978}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1976, file: !228, line: 232, baseType: !1979, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !1954)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1947, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1947, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!1982 = !DIDerivedType(tag: DW_TAG_member, scope: !1947, file: !359, line: 90, baseType: !1983, size: 16, offset: 112)
!1983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1947, file: !359, line: 90, size: 16, elements: !1984)
!1984 = !{!1985, !1990}
!1985 = !DIDerivedType(tag: DW_TAG_member, scope: !1983, file: !359, line: 91, baseType: !1986, size: 16)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1983, file: !359, line: 91, size: 16, elements: !1987)
!1987 = !{!1988, !1989}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1986, file: !359, line: 96, baseType: !407, size: 8)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1986, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1983, file: !359, line: 100, baseType: !411, size: 16)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1947, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1947, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1947, file: !359, line: 131, baseType: !1994, size: 192, offset: 192)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !1995)
!1995 = !{!1996, !1997, !2003}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1994, file: !228, line: 245, baseType: !1953, size: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1994, file: !228, line: 246, baseType: !1998, size: 32, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !1999)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{null, !2002}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1994, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1944, file: !359, line: 250, baseType: !2005, size: 288, offset: 384)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2005, file: !428, line: 26, baseType: !162, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2005, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2005, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2005, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2005, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2005, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2005, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2005, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2005, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1944, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1944, file: !359, line: 256, baseType: !1975, size: 64, offset: 704)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1944, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1944, file: !359, line: 300, baseType: !2020, size: 96, offset: 800)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2021)
!2021 = !{!2022, !2023, !2024}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2020, file: !359, line: 153, baseType: !22, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2020, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2020, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1944, file: !359, line: 325, baseType: !2026, size: 32, offset: 896)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2028)
!2028 = !{!2029, !2035, !2036}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2027, file: !224, line: 5074, baseType: !2030, size: 96)
!2030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2031)
!2031 = !{!2032, !2033, !2034}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2030, file: !454, line: 57, baseType: !457, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2030, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2030, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2027, file: !224, line: 5075, baseType: !1975, size: 64, offset: 96)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2027, file: !224, line: 5076, baseType: !2037, offset: 160)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1944, file: !359, line: 343, baseType: !2039, size: 64, offset: 928)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2040)
!2040 = !{!2041, !2042}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2039, file: !428, line: 63, baseType: !162, size: 32)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2039, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1938, file: !228, line: 111, baseType: !1943, size: 32, offset: 96)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1938, file: !228, line: 124, baseType: !107, size: 32, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1938, file: !228, line: 127, baseType: !133, size: 8, offset: 160)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1938, file: !228, line: 153, baseType: !2047, offset: 168)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2048, line: 33, elements: !250)
!2048 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1934, file: !228, line: 170, baseType: !2050, size: 96, offset: 192)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !2051)
!2051 = !{!2052, !2053}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2050, file: !228, line: 86, baseType: !1943, size: 32)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2050, file: !228, line: 90, baseType: !1979, size: 64, offset: 32)
!2054 = !DIGlobalVariableExpression(var: !2055, expr: !DIExpression())
!2055 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1847, file: !1851, line: 43, type: !2056, isLocal: false, isDefinition: true, align: 512)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 8704, elements: !2061)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2058, line: 47, size: 8, elements: !2059)
!2058 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2057, file: !2058, line: 48, baseType: !125, size: 8)
!2061 = !{!2062}
!2062 = !DISubrange(count: 1088)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1847, file: !1851, line: 44, type: !1944, isLocal: false, isDefinition: true)
!2065 = !DIGlobalVariableExpression(var: !2066, expr: !DIExpression())
!2066 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1847, file: !1851, line: 48, type: !2067, isLocal: false, isDefinition: true)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1944, size: 1024, elements: !486)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1847, file: !1851, line: 217, type: !136, isLocal: false, isDefinition: true)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1847, file: !1851, line: 50, type: !2072, isLocal: true, isDefinition: true, align: 512)
!2072 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 3072, elements: !2073)
!2073 = !{!487, !2074}
!2074 = !DISubrange(count: 384)
!2075 = !DIGlobalVariableExpression(var: !2076, expr: !DIExpression())
!2076 = distinct !DIGlobalVariable(name: "levels", scope: !2077, file: !1851, line: 232, type: !2097, isLocal: true, isDefinition: true)
!2077 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1851, file: !1851, line: 230, type: !2078, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !2080)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{null, !1850}
!2080 = !{!2081, !2082, !2092, !2096}
!2081 = !DILocalVariable(name: "level", arg: 1, scope: !2077, file: !1851, line: 230, type: !1850)
!2082 = !DILocalVariable(name: "entry", scope: !2077, file: !1851, line: 244, type: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2086)
!2086 = !{!2087, !2091}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2085, file: !294, line: 60, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 32)
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!107, !1869}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2085, file: !294, line: 65, baseType: !1869, size: 32, offset: 32)
!2092 = !DILocalVariable(name: "dev", scope: !2093, file: !1851, line: 247, type: !1869)
!2093 = distinct !DILexicalBlock(scope: !2094, file: !1851, line: 246, column: 64)
!2094 = distinct !DILexicalBlock(scope: !2095, file: !1851, line: 246, column: 2)
!2095 = distinct !DILexicalBlock(scope: !2077, file: !1851, line: 246, column: 2)
!2096 = !DILocalVariable(name: "rc", scope: !2093, file: !1851, line: 248, type: !107)
!2097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2083, size: 192, elements: !1214)
!2098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 16896, elements: !2099)
!2099 = !{!487, !2100}
!2100 = !DISubrange(count: 2112)
!2101 = !DIGlobalVariableExpression(var: !2102, expr: !DIExpression())
!2102 = distinct !DIGlobalVariable(name: "states_str", scope: !2103, file: !2104, line: 276, type: !2225, isLocal: true, isDefinition: true)
!2103 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2104, file: !2104, line: 271, type: !2105, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !2216)
!2104 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2105 = !DISubroutineType(types: !2106)
!2106 = !{!123, !2107, !256, !252}
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2108)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 32)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2110)
!2110 = !{!2111, !2169, !2181, !2182, !2183, !2184, !2190, !2203}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2109, file: !359, line: 247, baseType: !2112, size: 384)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2113)
!2113 = !{!2114, !2138, !2145, !2146, !2147, !2156, !2157, !2158}
!2114 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !359, line: 60, baseType: !2115, size: 64)
!2115 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2112, file: !359, line: 60, size: 64, elements: !2116)
!2116 = !{!2117, !2132}
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2115, file: !359, line: 61, baseType: !2118, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2119)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2120)
!2120 = !{!2121, !2127}
!2121 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !233, line: 38, baseType: !2122, size: 32)
!2122 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !233, line: 38, size: 32, elements: !2123)
!2123 = !{!2124, !2126}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2122, file: !233, line: 39, baseType: !2125, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2122, file: !233, line: 40, baseType: !2125, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, scope: !2119, file: !233, line: 42, baseType: !2128, size: 32, offset: 32)
!2128 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2119, file: !233, line: 42, size: 32, elements: !2129)
!2129 = !{!2130, !2131}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2128, file: !233, line: 43, baseType: !2125, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2128, file: !233, line: 44, baseType: !2125, size: 32)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2115, file: !359, line: 62, baseType: !2133, size: 64)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2134)
!2134 = !{!2135}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2133, file: !384, line: 50, baseType: !2136, size: 64)
!2136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2137, size: 64, elements: !389)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2112, file: !359, line: 68, baseType: !2139, size: 32, offset: 64)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 32)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2142)
!2142 = !{!2143}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2141, file: !228, line: 232, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2119)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2112, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2112, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2147 = !DIDerivedType(tag: DW_TAG_member, scope: !2112, file: !359, line: 90, baseType: !2148, size: 16, offset: 112)
!2148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2112, file: !359, line: 90, size: 16, elements: !2149)
!2149 = !{!2150, !2155}
!2150 = !DIDerivedType(tag: DW_TAG_member, scope: !2148, file: !359, line: 91, baseType: !2151, size: 16)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2148, file: !359, line: 91, size: 16, elements: !2152)
!2152 = !{!2153, !2154}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2151, file: !359, line: 96, baseType: !407, size: 8)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2151, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2148, file: !359, line: 100, baseType: !411, size: 16)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2112, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2112, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2112, file: !359, line: 131, baseType: !2159, size: 192, offset: 192)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2160)
!2160 = !{!2161, !2162, !2168}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2159, file: !228, line: 245, baseType: !2118, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2159, file: !228, line: 246, baseType: !2163, size: 32, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2164)
!2164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2165, size: 32)
!2165 = !DISubroutineType(types: !2166)
!2166 = !{null, !2167}
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2159, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2109, file: !359, line: 250, baseType: !2170, size: 288, offset: 384)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2171)
!2171 = !{!2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2170, file: !428, line: 26, baseType: !162, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2170, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2170, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2170, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2170, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2170, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2170, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2170, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2170, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2109, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2109, file: !359, line: 256, baseType: !2140, size: 64, offset: 704)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2109, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2109, file: !359, line: 300, baseType: !2185, size: 96, offset: 800)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2186)
!2186 = !{!2187, !2188, !2189}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2185, file: !359, line: 153, baseType: !22, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2185, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2185, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2109, file: !359, line: 325, baseType: !2191, size: 32, offset: 896)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2193)
!2193 = !{!2194, !2200, !2201}
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2192, file: !224, line: 5074, baseType: !2195, size: 96)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2196)
!2196 = !{!2197, !2198, !2199}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2195, file: !454, line: 57, baseType: !457, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2195, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2195, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2192, file: !224, line: 5075, baseType: !2140, size: 64, offset: 96)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2192, file: !224, line: 5076, baseType: !2202, offset: 160)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2109, file: !359, line: 343, baseType: !2204, size: 64, offset: 928)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2205)
!2205 = !{!2206, !2207}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2204, file: !428, line: 63, baseType: !162, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2204, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2208 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2209, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2210, globals: !2212, splitDebugInlining: false, nameTableKind: None)
!2209 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2210 = !{!102, !123, !103, !133, !107, !2211, !24, !252, !256, !22, !162, !1491}
!2211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 32)
!2212 = !{!2101, !2213}
!2213 = !DIGlobalVariableExpression(var: !2214, expr: !DIExpression())
!2214 = distinct !DIGlobalVariable(name: "states_sz", scope: !2103, file: !2104, line: 279, type: !2215, isLocal: true, isDefinition: true)
!2215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1784, size: 256, elements: !1499)
!2216 = !{!2217, !2218, !2219, !2220, !2221, !2222, !2223}
!2217 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2103, file: !2104, line: 271, type: !2107)
!2218 = !DILocalVariable(name: "buf", arg: 2, scope: !2103, file: !2104, line: 271, type: !256)
!2219 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2103, file: !2104, line: 271, type: !252)
!2220 = !DILocalVariable(name: "off", scope: !2103, file: !2104, line: 273, type: !252)
!2221 = !DILocalVariable(name: "bit", scope: !2103, file: !2104, line: 274, type: !133)
!2222 = !DILocalVariable(name: "thread_state", scope: !2103, file: !2104, line: 275, type: !133)
!2223 = !DILocalVariable(name: "index", scope: !2224, file: !2104, line: 293, type: !133)
!2224 = distinct !DILexicalBlock(scope: !2103, file: !2104, line: 293, column: 2)
!2225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !123, size: 256, elements: !1499)
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2228, file: !2336, line: 56, type: !2325, isLocal: false, isDefinition: true)
!2228 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2229, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2230, globals: !2333, splitDebugInlining: false, nameTableKind: None)
!2229 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2230 = !{!2231, !256, !102, !2331, !182, !103, !727, !107, !162, !1491, !2332}
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 32)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !2233)
!2233 = !{!2234, !2292, !2304, !2305, !2306, !2307, !2313, !2326}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2232, file: !359, line: 247, baseType: !2235, size: 384)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !2236)
!2236 = !{!2237, !2261, !2268, !2269, !2270, !2279, !2280, !2281}
!2237 = !DIDerivedType(tag: DW_TAG_member, scope: !2235, file: !359, line: 60, baseType: !2238, size: 64)
!2238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2235, file: !359, line: 60, size: 64, elements: !2239)
!2239 = !{!2240, !2255}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2238, file: !359, line: 61, baseType: !2241, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2243)
!2243 = !{!2244, !2250}
!2244 = !DIDerivedType(tag: DW_TAG_member, scope: !2242, file: !233, line: 38, baseType: !2245, size: 32)
!2245 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2242, file: !233, line: 38, size: 32, elements: !2246)
!2246 = !{!2247, !2249}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2245, file: !233, line: 39, baseType: !2248, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 32)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2245, file: !233, line: 40, baseType: !2248, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, scope: !2242, file: !233, line: 42, baseType: !2251, size: 32, offset: 32)
!2251 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2242, file: !233, line: 42, size: 32, elements: !2252)
!2252 = !{!2253, !2254}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2251, file: !233, line: 43, baseType: !2248, size: 32)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2251, file: !233, line: 44, baseType: !2248, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2238, file: !359, line: 62, baseType: !2256, size: 64)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !2257)
!2257 = !{!2258}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2256, file: !384, line: 50, baseType: !2259, size: 64)
!2259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2260, size: 64, elements: !389)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 32)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2235, file: !359, line: 68, baseType: !2262, size: 32, offset: 64)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !2264)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2264, file: !228, line: 232, baseType: !2267, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2242)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2235, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2235, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!2270 = !DIDerivedType(tag: DW_TAG_member, scope: !2235, file: !359, line: 90, baseType: !2271, size: 16, offset: 112)
!2271 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2235, file: !359, line: 90, size: 16, elements: !2272)
!2272 = !{!2273, !2278}
!2273 = !DIDerivedType(tag: DW_TAG_member, scope: !2271, file: !359, line: 91, baseType: !2274, size: 16)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2271, file: !359, line: 91, size: 16, elements: !2275)
!2275 = !{!2276, !2277}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2274, file: !359, line: 96, baseType: !407, size: 8)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2274, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2271, file: !359, line: 100, baseType: !411, size: 16)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2235, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2235, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2235, file: !359, line: 131, baseType: !2282, size: 192, offset: 192)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2283)
!2283 = !{!2284, !2285, !2291}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2282, file: !228, line: 245, baseType: !2241, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2282, file: !228, line: 246, baseType: !2286, size: 32, offset: 64)
!2286 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2287)
!2287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 32)
!2288 = !DISubroutineType(types: !2289)
!2289 = !{null, !2290}
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2282, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2232, file: !359, line: 250, baseType: !2293, size: 288, offset: 384)
!2293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !2294)
!2294 = !{!2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303}
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2293, file: !428, line: 26, baseType: !162, size: 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2293, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2293, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2293, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2293, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2293, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2293, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2293, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2293, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2232, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2232, file: !359, line: 256, baseType: !2263, size: 64, offset: 704)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2232, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2232, file: !359, line: 300, baseType: !2308, size: 96, offset: 800)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !2309)
!2309 = !{!2310, !2311, !2312}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2308, file: !359, line: 153, baseType: !22, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2308, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2308, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2232, file: !359, line: 325, baseType: !2314, size: 32, offset: 896)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 32)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !2316)
!2316 = !{!2317, !2323, !2324}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2315, file: !224, line: 5074, baseType: !2318, size: 96)
!2318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !2319)
!2319 = !{!2320, !2321, !2322}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2318, file: !454, line: 57, baseType: !457, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2318, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2318, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2315, file: !224, line: 5075, baseType: !2263, size: 64, offset: 96)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2315, file: !224, line: 5076, baseType: !2325, offset: 160)
!2325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2232, file: !359, line: 343, baseType: !2327, size: 64, offset: 928)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !2328)
!2328 = !{!2329, !2330}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2327, file: !428, line: 63, baseType: !162, size: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2327, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 32)
!2333 = !{!2226, !2334, !2337, !2339}
!2334 = !DIGlobalVariableExpression(var: !2335, expr: !DIExpression())
!2335 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2228, file: !2336, line: 404, type: !107, isLocal: true, isDefinition: true)
!2336 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2228, file: !2336, line: 405, type: !107, isLocal: true, isDefinition: true)
!2339 = !DIGlobalVariableExpression(var: !2340, expr: !DIExpression())
!2340 = distinct !DIGlobalVariable(name: "pending_current", scope: !2228, file: !2336, line: 425, type: !2231, isLocal: true, isDefinition: true)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2343, file: !2373, line: 15, type: !1491, isLocal: true, isDefinition: true)
!2343 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2344, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2345, globals: !2370, splitDebugInlining: false, nameTableKind: None)
!2344 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2345 = !{!103, !102, !727, !162, !1491, !107, !2346, !256, !105}
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 32)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !2348)
!2348 = !{!2349, !2364, !2369}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2347, file: !228, line: 245, baseType: !2350, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2352)
!2352 = !{!2353, !2359}
!2353 = !DIDerivedType(tag: DW_TAG_member, scope: !2351, file: !233, line: 38, baseType: !2354, size: 32)
!2354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2351, file: !233, line: 38, size: 32, elements: !2355)
!2355 = !{!2356, !2358}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2354, file: !233, line: 39, baseType: !2357, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2354, file: !233, line: 40, baseType: !2357, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, scope: !2351, file: !233, line: 42, baseType: !2360, size: 32, offset: 32)
!2360 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2351, file: !233, line: 42, size: 32, elements: !2361)
!2361 = !{!2362, !2363}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2360, file: !233, line: 43, baseType: !2357, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2360, file: !233, line: 44, baseType: !2357, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2347, file: !228, line: 246, baseType: !2365, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !2366)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 32)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{null, !2346}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2347, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!2370 = !{!2341, !2371, !2375, !2377}
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2343, file: !2373, line: 19, type: !2374, isLocal: true, isDefinition: true)
!2373 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2343, file: !2373, line: 25, type: !107, isLocal: true, isDefinition: true)
!2377 = !DIGlobalVariableExpression(var: !2378, expr: !DIExpression())
!2378 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2343, file: !2373, line: 17, type: !2379, isLocal: true, isDefinition: true)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2351)
!2380 = !DIGlobalVariableExpression(var: !2381, expr: !DIExpression())
!2381 = distinct !DIGlobalVariable(name: "__init_statics_init_pre", scope: !2382, file: !2401, line: 55, type: !2402, isLocal: true, isDefinition: true, align: 32)
!2382 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2383, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2384, globals: !2400, splitDebugInlining: false, nameTableKind: None)
!2383 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2384 = !{!102, !103, !107, !2385}
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !2387)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !2388)
!2388 = !{!2389, !2395}
!2389 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !233, line: 38, baseType: !2390, size: 32)
!2390 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !233, line: 38, size: 32, elements: !2391)
!2391 = !{!2392, !2394}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2390, file: !233, line: 39, baseType: !2393, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2390, file: !233, line: 40, baseType: !2393, size: 32)
!2395 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !233, line: 42, baseType: !2396, size: 32, offset: 32)
!2396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !233, line: 42, size: 32, elements: !2397)
!2397 = !{!2398, !2399}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2396, file: !233, line: 43, baseType: !2393, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2396, file: !233, line: 44, baseType: !2393, size: 32)
!2400 = !{!2380}
!2401 = !DIFile(filename: "zephyr/kernel/kheap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2403)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !294, line: 51, size: 64, elements: !2404)
!2404 = !{!2405, !2412}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2403, file: !294, line: 60, baseType: !2406, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 32)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!107, !2409}
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2410, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2411)
!2411 = !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !294, line: 48, flags: DIFlagFwdDecl)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2403, file: !294, line: 65, baseType: !2409, size: 32, offset: 32)
!2413 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2414, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2414 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2415 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2416, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2416 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2417 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2418, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2419, retainedTypes: !2427, splitDebugInlining: false, nameTableKind: None)
!2418 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2419 = !{!30, !2420}
!2420 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "chunk_fields", file: !2421, line: 54, baseType: !32, size: 32, elements: !2422)
!2421 = !DIFile(filename: "zephyr/lib/os/heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2422 = !{!2423, !2424, !2425, !2426}
!2423 = !DIEnumerator(name: "LEFT_SIZE", value: 0)
!2424 = !DIEnumerator(name: "SIZE_AND_USED", value: 1)
!2425 = !DIEnumerator(name: "FREE_PREV", value: 2)
!2426 = !DIEnumerator(name: "FREE_NEXT", value: 3)
!2427 = !{!102, !252, !182, !24, !2428, !22, !2434, !107, !846, !2449}
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunk_unit_t", file: !2421, line: 58, baseType: !2430)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2421, line: 58, size: 64, elements: !2431)
!2431 = !{!2432}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !2430, file: !2421, line: 58, baseType: !2433, size: 64)
!2433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 64, elements: !1499)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 32)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !2421, line: 68, size: 128, elements: !2436)
!2436 = !{!2437, !2440, !2441, !2442}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "chunk0_hdr", scope: !2435, file: !2421, line: 69, baseType: !2438, size: 64)
!2438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2439, size: 64, elements: !389)
!2439 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunkid_t", file: !2421, line: 61, baseType: !162)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "end_chunk", scope: !2435, file: !2421, line: 70, baseType: !2439, size: 32, offset: 64)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "avail_buckets", scope: !2435, file: !2421, line: 71, baseType: !162, size: 32, offset: 96)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !2435, file: !2421, line: 77, baseType: !2443, offset: 128)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, elements: !2447)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap_bucket", file: !2421, line: 64, size: 32, elements: !2445)
!2445 = !{!2446}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2444, file: !2421, line: 65, baseType: !2439, size: 32)
!2447 = !{!2448}
!2448 = !DISubrange(count: 0)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 32)
!2450 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2451, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2452, retainedTypes: !2472, splitDebugInlining: false, nameTableKind: None)
!2451 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2452 = !{!2453, !2461}
!2453 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2454, line: 69, baseType: !32, size: 32, elements: !2455)
!2454 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2455 = !{!2456, !2457, !2458, !2459, !2460}
!2456 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2457 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2458 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2459 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2460 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2454, line: 56, baseType: !32, size: 32, elements: !2462)
!2462 = !{!2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471}
!2463 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2464 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2465 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2466 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2467 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2468 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2469 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2470 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2471 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2472 = !{!107, !2453, !2461, !2473, !408, !143, !2475, !2476, !134, !412, !123, !252, !102, !22, !32, !2478, !2479, !2480, !2481, !2482, !106, !2483, !2474, !2484, !2485, !2486, !2487}
!2473 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2454, line: 31, baseType: !2474)
!2474 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !253, line: 329, baseType: !32)
!2476 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2454, line: 32, baseType: !2477)
!2477 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1492)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!2479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 32)
!2481 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 32)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 32)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !253, line: 145, baseType: !107)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 32)
!2488 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2489, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2489 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2490 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2491, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2492, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2491 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2492 = !{!2493, !30}
!2493 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2494, line: 27, baseType: !32, size: 32, elements: !2495)
!2494 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2495 = !{!2496, !2497, !2498, !2499, !2500}
!2496 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2497 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2498 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2499 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2500 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2502, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2503, retainedTypes: !2504, splitDebugInlining: false, nameTableKind: None)
!2502 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2503 = !{!566, !2493, !30}
!2504 = !{!753, !2505, !102, !107, !727, !162, !133, !2522}
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2507)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2508)
!2508 = !{!2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2507, file: !497, line: 413, baseType: !1607, size: 256)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2507, file: !497, line: 414, baseType: !1609, size: 768, offset: 256)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2507, file: !497, line: 415, baseType: !1607, size: 256, offset: 1024)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2507, file: !497, line: 416, baseType: !1609, size: 768, offset: 1280)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2507, file: !497, line: 417, baseType: !1607, size: 256, offset: 2048)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2507, file: !497, line: 418, baseType: !1609, size: 768, offset: 2304)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2507, file: !497, line: 419, baseType: !1607, size: 256, offset: 3072)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2507, file: !497, line: 420, baseType: !1609, size: 768, offset: 3328)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2507, file: !497, line: 421, baseType: !1607, size: 256, offset: 4096)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2507, file: !497, line: 422, baseType: !1620, size: 1792, offset: 4352)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2507, file: !497, line: 423, baseType: !1624, size: 1920, offset: 6144)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2507, file: !497, line: 424, baseType: !1629, size: 20608, offset: 8064)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2507, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2524)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2525)
!2525 = !{!2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2524, file: !497, line: 447, baseType: !501, size: 32)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2524, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2524, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2524, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2524, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2524, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2524, file: !497, line: 453, baseType: !1644, size: 96, offset: 192)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2524, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2524, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2524, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2524, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2524, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2524, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2524, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2524, file: !497, line: 461, baseType: !1653, size: 64, offset: 512)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2524, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2524, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2524, file: !497, line: 464, baseType: !1657, size: 128, offset: 640)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2524, file: !497, line: 465, baseType: !1659, size: 160, offset: 768)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2524, file: !497, line: 466, baseType: !1661, size: 160, offset: 928)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2524, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2551, splitDebugInlining: false, nameTableKind: None)
!2550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2551 = !{!102, !107, !22, !2552}
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2554)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2555)
!2555 = !{!2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2554, file: !497, line: 447, baseType: !501, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2554, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2554, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2554, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2554, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2554, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2554, file: !497, line: 453, baseType: !1644, size: 96, offset: 192)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2554, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2554, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2554, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2554, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2554, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2554, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2554, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2554, file: !497, line: 461, baseType: !1653, size: 64, offset: 512)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2554, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2554, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2554, file: !497, line: 464, baseType: !1657, size: 128, offset: 640)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2554, file: !497, line: 465, baseType: !1659, size: 160, offset: 768)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2554, file: !497, line: 466, baseType: !1661, size: 160, offset: 928)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2554, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2577 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2578, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2579, splitDebugInlining: false, nameTableKind: None)
!2578 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2579 = !{!2580, !102, !107}
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 32)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2583)
!2583 = !{!2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2582, file: !497, line: 447, baseType: !501, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2582, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2582, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2582, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2582, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2582, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2582, file: !497, line: 453, baseType: !1644, size: 96, offset: 192)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2582, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2582, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2582, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2582, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2582, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2582, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2582, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2582, file: !497, line: 461, baseType: !1653, size: 64, offset: 512)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2582, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2582, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2582, file: !497, line: 464, baseType: !1657, size: 128, offset: 640)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2582, file: !497, line: 465, baseType: !1659, size: 160, offset: 768)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2582, file: !497, line: 466, baseType: !1661, size: 160, offset: 928)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2582, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2606, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2607, splitDebugInlining: false, nameTableKind: None)
!2606 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2607 = !{!2608, !162, !102, !107}
!2608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2609, size: 32)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2610, line: 98, size: 256, elements: !2611)
!2610 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2611 = !{!2612, !2617, !2622, !2627, !2632, !2637, !2642, !2647}
!2612 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2610, line: 99, baseType: !2613, size: 32)
!2613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2610, line: 99, size: 32, elements: !2614)
!2614 = !{!2615, !2616}
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2613, file: !2610, line: 99, baseType: !162, size: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2613, file: !2610, line: 99, baseType: !162, size: 32)
!2617 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2610, line: 100, baseType: !2618, size: 32, offset: 32)
!2618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2610, line: 100, size: 32, elements: !2619)
!2619 = !{!2620, !2621}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2618, file: !2610, line: 100, baseType: !162, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2618, file: !2610, line: 100, baseType: !162, size: 32)
!2622 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2610, line: 101, baseType: !2623, size: 32, offset: 64)
!2623 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2610, line: 101, size: 32, elements: !2624)
!2624 = !{!2625, !2626}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2623, file: !2610, line: 101, baseType: !162, size: 32)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2623, file: !2610, line: 101, baseType: !162, size: 32)
!2627 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2610, line: 102, baseType: !2628, size: 32, offset: 96)
!2628 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2610, line: 102, size: 32, elements: !2629)
!2629 = !{!2630, !2631}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2628, file: !2610, line: 102, baseType: !162, size: 32)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2628, file: !2610, line: 102, baseType: !162, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2610, line: 103, baseType: !2633, size: 32, offset: 128)
!2633 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2610, line: 103, size: 32, elements: !2634)
!2634 = !{!2635, !2636}
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2633, file: !2610, line: 103, baseType: !162, size: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2633, file: !2610, line: 103, baseType: !162, size: 32)
!2637 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2610, line: 104, baseType: !2638, size: 32, offset: 160)
!2638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2610, line: 104, size: 32, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2638, file: !2610, line: 104, baseType: !162, size: 32)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2638, file: !2610, line: 104, baseType: !162, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2610, line: 105, baseType: !2643, size: 32, offset: 192)
!2643 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2610, line: 105, size: 32, elements: !2644)
!2644 = !{!2645, !2646}
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2643, file: !2610, line: 105, baseType: !162, size: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2643, file: !2610, line: 105, baseType: !162, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2609, file: !2610, line: 106, baseType: !162, size: 32, offset: 224)
!2648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2649, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2492, retainedTypes: !2650, splitDebugInlining: false, nameTableKind: None)
!2649 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2650 = !{!2651, !102, !107, !2676, !2449, !162}
!2651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2652, size: 32)
!2652 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2653)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2654)
!2654 = !{!2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2653, file: !497, line: 447, baseType: !501, size: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2653, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2653, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2653, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2653, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2653, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2653, file: !497, line: 453, baseType: !1644, size: 96, offset: 192)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2653, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2653, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2653, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2653, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2653, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2653, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2653, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2653, file: !497, line: 461, baseType: !1653, size: 64, offset: 512)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2653, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2653, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2653, file: !497, line: 464, baseType: !1657, size: 128, offset: 640)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2653, file: !497, line: 465, baseType: !1659, size: 160, offset: 768)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2653, file: !497, line: 466, baseType: !1661, size: 160, offset: 928)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2653, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!2677 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2610, line: 141, baseType: !2678)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2610, line: 97, size: 256, elements: !2679)
!2679 = !{!2680}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2678, file: !2610, line: 107, baseType: !2681, size: 256)
!2681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2610, line: 98, size: 256, elements: !2682)
!2682 = !{!2683, !2688, !2693, !2698, !2703, !2708, !2713, !2718}
!2683 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2610, line: 99, baseType: !2684, size: 32)
!2684 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2610, line: 99, size: 32, elements: !2685)
!2685 = !{!2686, !2687}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2684, file: !2610, line: 99, baseType: !162, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2684, file: !2610, line: 99, baseType: !162, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2610, line: 100, baseType: !2689, size: 32, offset: 32)
!2689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2610, line: 100, size: 32, elements: !2690)
!2690 = !{!2691, !2692}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2689, file: !2610, line: 100, baseType: !162, size: 32)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2689, file: !2610, line: 100, baseType: !162, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2610, line: 101, baseType: !2694, size: 32, offset: 64)
!2694 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2610, line: 101, size: 32, elements: !2695)
!2695 = !{!2696, !2697}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2694, file: !2610, line: 101, baseType: !162, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2694, file: !2610, line: 101, baseType: !162, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2610, line: 102, baseType: !2699, size: 32, offset: 96)
!2699 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2610, line: 102, size: 32, elements: !2700)
!2700 = !{!2701, !2702}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2699, file: !2610, line: 102, baseType: !162, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2699, file: !2610, line: 102, baseType: !162, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2610, line: 103, baseType: !2704, size: 32, offset: 128)
!2704 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2610, line: 103, size: 32, elements: !2705)
!2705 = !{!2706, !2707}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2704, file: !2610, line: 103, baseType: !162, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2704, file: !2610, line: 103, baseType: !162, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2610, line: 104, baseType: !2709, size: 32, offset: 160)
!2709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2610, line: 104, size: 32, elements: !2710)
!2710 = !{!2711, !2712}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2709, file: !2610, line: 104, baseType: !162, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2709, file: !2610, line: 104, baseType: !162, size: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, scope: !2681, file: !2610, line: 105, baseType: !2714, size: 32, offset: 192)
!2714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2681, file: !2610, line: 105, size: 32, elements: !2715)
!2715 = !{!2716, !2717}
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2714, file: !2610, line: 105, baseType: !162, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2714, file: !2610, line: 105, baseType: !162, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2681, file: !2610, line: 106, baseType: !162, size: 32, offset: 224)
!2719 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2720, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1592, retainedTypes: !2721, splitDebugInlining: false, nameTableKind: None)
!2720 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2721 = !{!753, !727, !133, !162, !2722, !2739}
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !497, line: 426, baseType: !2724)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 411, size: 28704, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2724, file: !497, line: 413, baseType: !1607, size: 256)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2724, file: !497, line: 414, baseType: !1609, size: 768, offset: 256)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2724, file: !497, line: 415, baseType: !1607, size: 256, offset: 1024)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2724, file: !497, line: 416, baseType: !1609, size: 768, offset: 1280)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2724, file: !497, line: 417, baseType: !1607, size: 256, offset: 2048)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2724, file: !497, line: 418, baseType: !1609, size: 768, offset: 2304)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2724, file: !497, line: 419, baseType: !1607, size: 256, offset: 3072)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2724, file: !497, line: 420, baseType: !1609, size: 768, offset: 3328)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2724, file: !497, line: 421, baseType: !1607, size: 256, offset: 4096)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2724, file: !497, line: 422, baseType: !1620, size: 1792, offset: 4352)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2724, file: !497, line: 423, baseType: !1624, size: 1920, offset: 6144)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2724, file: !497, line: 424, baseType: !1629, size: 20608, offset: 8064)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2724, file: !497, line: 425, baseType: !283, size: 32, offset: 28672)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 32)
!2740 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2741)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2742)
!2742 = !{!2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2741, file: !497, line: 447, baseType: !501, size: 32)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2741, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2741, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2741, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2741, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2741, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2741, file: !497, line: 453, baseType: !1644, size: 96, offset: 192)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2741, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2741, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2741, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2741, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2741, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2741, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2741, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2741, file: !497, line: 461, baseType: !1653, size: 64, offset: 512)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2741, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2741, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2741, file: !497, line: 464, baseType: !1657, size: 128, offset: 640)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2741, file: !497, line: 465, baseType: !1659, size: 160, offset: 768)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2741, file: !497, line: 466, baseType: !1661, size: 160, offset: 928)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2741, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2764 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2765, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2766, splitDebugInlining: false, nameTableKind: None)
!2765 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2766 = !{!2767, !102, !107}
!2767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2768, size: 32)
!2768 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !497, line: 468, baseType: !2769)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 445, size: 1120, elements: !2770)
!2770 = !{!2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2769, file: !497, line: 447, baseType: !501, size: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2769, file: !497, line: 448, baseType: !283, size: 32, offset: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2769, file: !497, line: 449, baseType: !283, size: 32, offset: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2769, file: !497, line: 450, baseType: !283, size: 32, offset: 96)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2769, file: !497, line: 451, baseType: !283, size: 32, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2769, file: !497, line: 452, baseType: !283, size: 32, offset: 160)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2769, file: !497, line: 453, baseType: !1644, size: 96, offset: 192)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2769, file: !497, line: 454, baseType: !283, size: 32, offset: 288)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2769, file: !497, line: 455, baseType: !283, size: 32, offset: 320)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2769, file: !497, line: 456, baseType: !283, size: 32, offset: 352)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2769, file: !497, line: 457, baseType: !283, size: 32, offset: 384)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2769, file: !497, line: 458, baseType: !283, size: 32, offset: 416)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2769, file: !497, line: 459, baseType: !283, size: 32, offset: 448)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2769, file: !497, line: 460, baseType: !283, size: 32, offset: 480)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2769, file: !497, line: 461, baseType: !1653, size: 64, offset: 512)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2769, file: !497, line: 462, baseType: !501, size: 32, offset: 576)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2769, file: !497, line: 463, baseType: !501, size: 32, offset: 608)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2769, file: !497, line: 464, baseType: !1657, size: 128, offset: 640)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2769, file: !497, line: 465, baseType: !1659, size: 160, offset: 768)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2769, file: !497, line: 466, baseType: !1661, size: 160, offset: 928)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2769, file: !497, line: 467, baseType: !283, size: 32, offset: 1088)
!2792 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2793, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2794, splitDebugInlining: false, nameTableKind: None)
!2793 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2794 = !{!125, !256, !252, !144, !2795, !134, !102}
!2795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2796, size: 32)
!2796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !134)
!2797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2798, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2799, splitDebugInlining: false, nameTableKind: None)
!2798 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2799 = !{!2800}
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 32)
!2801 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 510, baseType: !2802)
!2802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 477, size: 1216, elements: !2803)
!2803 = !{!2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834}
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2802, file: !279, line: 479, baseType: !283, size: 32)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2802, file: !279, line: 480, baseType: !283, size: 32, offset: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2802, file: !279, line: 481, baseType: !283, size: 32, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2802, file: !279, line: 482, baseType: !283, size: 32, offset: 96)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2802, file: !279, line: 483, baseType: !283, size: 32, offset: 128)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2802, file: !279, line: 484, baseType: !283, size: 32, offset: 160)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2802, file: !279, line: 485, baseType: !815, size: 64, offset: 192)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2802, file: !279, line: 486, baseType: !283, size: 32, offset: 256)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2802, file: !279, line: 487, baseType: !283, size: 32, offset: 288)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2802, file: !279, line: 488, baseType: !815, size: 64, offset: 320)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2802, file: !279, line: 489, baseType: !283, size: 32, offset: 384)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2802, file: !279, line: 490, baseType: !283, size: 32, offset: 416)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2802, file: !279, line: 491, baseType: !815, size: 64, offset: 448)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2802, file: !279, line: 492, baseType: !283, size: 32, offset: 512)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2802, file: !279, line: 493, baseType: !283, size: 32, offset: 544)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2802, file: !279, line: 494, baseType: !815, size: 64, offset: 576)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2802, file: !279, line: 495, baseType: !283, size: 32, offset: 640)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2802, file: !279, line: 496, baseType: !283, size: 32, offset: 672)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2802, file: !279, line: 497, baseType: !815, size: 64, offset: 704)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2802, file: !279, line: 498, baseType: !283, size: 32, offset: 768)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2802, file: !279, line: 499, baseType: !283, size: 32, offset: 800)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2802, file: !279, line: 500, baseType: !815, size: 64, offset: 832)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2802, file: !279, line: 501, baseType: !283, size: 32, offset: 896)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2802, file: !279, line: 502, baseType: !283, size: 32, offset: 928)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2802, file: !279, line: 503, baseType: !815, size: 64, offset: 960)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2802, file: !279, line: 504, baseType: !283, size: 32, offset: 1024)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2802, file: !279, line: 505, baseType: !283, size: 32, offset: 1056)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2802, file: !279, line: 506, baseType: !162, size: 32, offset: 1088)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2802, file: !279, line: 507, baseType: !283, size: 32, offset: 1120)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2802, file: !279, line: 508, baseType: !283, size: 32, offset: 1152)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2802, file: !279, line: 509, baseType: !283, size: 32, offset: 1184)
!2835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2836, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2836 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2837 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2838, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2839, retainedTypes: !2855, splitDebugInlining: false, nameTableKind: None)
!2838 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2839 = !{!2840, !2847, !2851}
!2840 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2841, line: 38, baseType: !32, size: 32, elements: !2842)
!2841 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2842 = !{!2843, !2844, !2845, !2846}
!2843 = !DIEnumerator(name: "HAL_OK", value: 0)
!2844 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2845 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2846 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2847 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !792, line: 184, baseType: !32, size: 32, elements: !2848)
!2848 = !{!2849, !2850}
!2849 = !DIEnumerator(name: "RESET", value: 0)
!2850 = !DIEnumerator(name: "SET", value: 1)
!2851 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !792, line: 190, baseType: !32, size: 32, elements: !2852)
!2852 = !{!2853, !2854}
!2853 = !DIEnumerator(name: "DISABLE", value: 0)
!2854 = !DIEnumerator(name: "ENABLE", value: 1)
!2855 = !{!102, !2856, !133, !162, !1493, !2891, !2897, !2908, !411, !2909, !1491}
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 32)
!2857 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 510, baseType: !2858)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 477, size: 1216, elements: !2859)
!2859 = !{!2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2858, file: !279, line: 479, baseType: !283, size: 32)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2858, file: !279, line: 480, baseType: !283, size: 32, offset: 32)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2858, file: !279, line: 481, baseType: !283, size: 32, offset: 64)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2858, file: !279, line: 482, baseType: !283, size: 32, offset: 96)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2858, file: !279, line: 483, baseType: !283, size: 32, offset: 128)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2858, file: !279, line: 484, baseType: !283, size: 32, offset: 160)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2858, file: !279, line: 485, baseType: !815, size: 64, offset: 192)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2858, file: !279, line: 486, baseType: !283, size: 32, offset: 256)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2858, file: !279, line: 487, baseType: !283, size: 32, offset: 288)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2858, file: !279, line: 488, baseType: !815, size: 64, offset: 320)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2858, file: !279, line: 489, baseType: !283, size: 32, offset: 384)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2858, file: !279, line: 490, baseType: !283, size: 32, offset: 416)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2858, file: !279, line: 491, baseType: !815, size: 64, offset: 448)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2858, file: !279, line: 492, baseType: !283, size: 32, offset: 512)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2858, file: !279, line: 493, baseType: !283, size: 32, offset: 544)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2858, file: !279, line: 494, baseType: !815, size: 64, offset: 576)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2858, file: !279, line: 495, baseType: !283, size: 32, offset: 640)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2858, file: !279, line: 496, baseType: !283, size: 32, offset: 672)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2858, file: !279, line: 497, baseType: !815, size: 64, offset: 704)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2858, file: !279, line: 498, baseType: !283, size: 32, offset: 768)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2858, file: !279, line: 499, baseType: !283, size: 32, offset: 800)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2858, file: !279, line: 500, baseType: !815, size: 64, offset: 832)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2858, file: !279, line: 501, baseType: !283, size: 32, offset: 896)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2858, file: !279, line: 502, baseType: !283, size: 32, offset: 928)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2858, file: !279, line: 503, baseType: !815, size: 64, offset: 960)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2858, file: !279, line: 504, baseType: !283, size: 32, offset: 1024)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2858, file: !279, line: 505, baseType: !283, size: 32, offset: 1056)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2858, file: !279, line: 506, baseType: !162, size: 32, offset: 1088)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2858, file: !279, line: 507, baseType: !283, size: 32, offset: 1120)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2858, file: !279, line: 508, baseType: !283, size: 32, offset: 1152)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2858, file: !279, line: 509, baseType: !283, size: 32, offset: 1184)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 471, baseType: !2893)
!2893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 467, size: 64, elements: !2894)
!2894 = !{!2895, !2896}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2893, file: !279, line: 469, baseType: !283, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2893, file: !279, line: 470, baseType: !283, size: 32, offset: 32)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 32)
!2898 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 379, baseType: !2899)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 224, elements: !2900)
!2900 = !{!2901, !2902, !2903, !2904, !2905, !2906, !2907}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2899, file: !279, line: 372, baseType: !283, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2899, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2899, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2899, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2899, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2899, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2899, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2910, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !279, line: 396, baseType: !2911)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 385, size: 320, elements: !2912)
!2912 = !{!2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2911, file: !279, line: 387, baseType: !283, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2911, file: !279, line: 388, baseType: !283, size: 32, offset: 32)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2911, file: !279, line: 389, baseType: !283, size: 32, offset: 64)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2911, file: !279, line: 390, baseType: !283, size: 32, offset: 96)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2911, file: !279, line: 391, baseType: !283, size: 32, offset: 128)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2911, file: !279, line: 392, baseType: !283, size: 32, offset: 160)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2911, file: !279, line: 393, baseType: !283, size: 32, offset: 192)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2911, file: !279, line: 394, baseType: !283, size: 32, offset: 224)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2911, file: !279, line: 395, baseType: !1133, size: 64, offset: 256)
!2922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2924, retainedTypes: !2925, splitDebugInlining: false, nameTableKind: None)
!2923 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2924 = !{!791}
!2925 = !{!2926, !162, !2934, !2940, !2951}
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 32)
!2927 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !497, line: 770, baseType: !2928)
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !497, line: 764, size: 128, elements: !2929)
!2929 = !{!2930, !2931, !2932, !2933}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2928, file: !497, line: 766, baseType: !283, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2928, file: !497, line: 767, baseType: !283, size: 32, offset: 32)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2928, file: !497, line: 768, baseType: !283, size: 32, offset: 64)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2928, file: !497, line: 769, baseType: !501, size: 32, offset: 96)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 32)
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !279, line: 471, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 467, size: 64, elements: !2937)
!2937 = !{!2938, !2939}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2936, file: !279, line: 469, baseType: !283, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2936, file: !279, line: 470, baseType: !283, size: 32, offset: 32)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 32)
!2941 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !279, line: 379, baseType: !2942)
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 370, size: 224, elements: !2943)
!2943 = !{!2944, !2945, !2946, !2947, !2948, !2949, !2950}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2942, file: !279, line: 372, baseType: !283, size: 32)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2942, file: !279, line: 373, baseType: !283, size: 32, offset: 32)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2942, file: !279, line: 374, baseType: !283, size: 32, offset: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2942, file: !279, line: 375, baseType: !283, size: 32, offset: 96)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2942, file: !279, line: 376, baseType: !283, size: 32, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2942, file: !279, line: 377, baseType: !283, size: 32, offset: 160)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2942, file: !279, line: 378, baseType: !283, size: 32, offset: 192)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 32)
!2952 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !279, line: 510, baseType: !2953)
!2953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !279, line: 477, size: 1216, elements: !2954)
!2954 = !{!2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985}
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2953, file: !279, line: 479, baseType: !283, size: 32)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2953, file: !279, line: 480, baseType: !283, size: 32, offset: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2953, file: !279, line: 481, baseType: !283, size: 32, offset: 64)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2953, file: !279, line: 482, baseType: !283, size: 32, offset: 96)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2953, file: !279, line: 483, baseType: !283, size: 32, offset: 128)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2953, file: !279, line: 484, baseType: !283, size: 32, offset: 160)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2953, file: !279, line: 485, baseType: !815, size: 64, offset: 192)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2953, file: !279, line: 486, baseType: !283, size: 32, offset: 256)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2953, file: !279, line: 487, baseType: !283, size: 32, offset: 288)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2953, file: !279, line: 488, baseType: !815, size: 64, offset: 320)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2953, file: !279, line: 489, baseType: !283, size: 32, offset: 384)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2953, file: !279, line: 490, baseType: !283, size: 32, offset: 416)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2953, file: !279, line: 491, baseType: !815, size: 64, offset: 448)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2953, file: !279, line: 492, baseType: !283, size: 32, offset: 512)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2953, file: !279, line: 493, baseType: !283, size: 32, offset: 544)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2953, file: !279, line: 494, baseType: !815, size: 64, offset: 576)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2953, file: !279, line: 495, baseType: !283, size: 32, offset: 640)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2953, file: !279, line: 496, baseType: !283, size: 32, offset: 672)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2953, file: !279, line: 497, baseType: !815, size: 64, offset: 704)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2953, file: !279, line: 498, baseType: !283, size: 32, offset: 768)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2953, file: !279, line: 499, baseType: !283, size: 32, offset: 800)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2953, file: !279, line: 500, baseType: !815, size: 64, offset: 832)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2953, file: !279, line: 501, baseType: !283, size: 32, offset: 896)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2953, file: !279, line: 502, baseType: !283, size: 32, offset: 928)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2953, file: !279, line: 503, baseType: !815, size: 64, offset: 960)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2953, file: !279, line: 504, baseType: !283, size: 32, offset: 1024)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2953, file: !279, line: 505, baseType: !283, size: 32, offset: 1056)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2953, file: !279, line: 506, baseType: !162, size: 32, offset: 1088)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2953, file: !279, line: 507, baseType: !283, size: 32, offset: 1120)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2953, file: !279, line: 508, baseType: !283, size: 32, offset: 1152)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2953, file: !279, line: 509, baseType: !283, size: 32, offset: 1184)
!2986 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2987, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2988, splitDebugInlining: false, nameTableKind: None)
!2987 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2988 = !{!102, !252}
!2989 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2990, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2991, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!2990 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!2991 = !{!2992, !2999, !30}
!2992 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !2993, line: 14, baseType: !32, size: 32, elements: !2994)
!2993 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2994 = !{!2995, !2996, !2997, !2998}
!2995 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!2996 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!2997 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!2998 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!2999 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !2993, line: 42, baseType: !32, size: 32, elements: !3000)
!3000 = !{!3001, !3002, !3003, !3004, !3005, !3006}
!3001 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3002 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3003 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3004 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3005 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3006 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3007 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3008, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3008 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!3009 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3010, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3011, splitDebugInlining: false, nameTableKind: None)
!3010 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!3011 = !{!102, !107, !3012, !3027}
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 32)
!3013 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3014)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3015)
!3015 = !{!3016, !3022}
!3016 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !233, line: 38, baseType: !3017, size: 32)
!3017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !233, line: 38, size: 32, elements: !3018)
!3018 = !{!3019, !3021}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3017, file: !233, line: 39, baseType: !3020, size: 32)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 32)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3017, file: !233, line: 40, baseType: !3020, size: 32)
!3022 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !233, line: 42, baseType: !3023, size: 32, offset: 32)
!3023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !233, line: 42, size: 32, elements: !3024)
!3024 = !{!3025, !3026}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3023, file: !233, line: 43, baseType: !3020, size: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3023, file: !233, line: 44, baseType: !3020, size: 32)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 32)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3029)
!3029 = !{!3030, !3074, !3086, !3087, !3088, !3089, !3095, !3108}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3028, file: !359, line: 247, baseType: !3031, size: 384)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3032)
!3032 = !{!3033, !3043, !3050, !3051, !3052, !3061, !3062, !3063}
!3033 = !DIDerivedType(tag: DW_TAG_member, scope: !3031, file: !359, line: 60, baseType: !3034, size: 64)
!3034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3031, file: !359, line: 60, size: 64, elements: !3035)
!3035 = !{!3036, !3037}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3034, file: !359, line: 61, baseType: !3013, size: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3034, file: !359, line: 62, baseType: !3038, size: 64)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3039)
!3039 = !{!3040}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3038, file: !384, line: 50, baseType: !3041, size: 64)
!3041 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3042, size: 64, elements: !389)
!3042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3031, file: !359, line: 68, baseType: !3044, size: 32, offset: 64)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 32)
!3045 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3046)
!3046 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3047)
!3047 = !{!3048}
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3046, file: !228, line: 232, baseType: !3049, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3014)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3031, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3031, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3052 = !DIDerivedType(tag: DW_TAG_member, scope: !3031, file: !359, line: 90, baseType: !3053, size: 16, offset: 112)
!3053 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3031, file: !359, line: 90, size: 16, elements: !3054)
!3054 = !{!3055, !3060}
!3055 = !DIDerivedType(tag: DW_TAG_member, scope: !3053, file: !359, line: 91, baseType: !3056, size: 16)
!3056 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3053, file: !359, line: 91, size: 16, elements: !3057)
!3057 = !{!3058, !3059}
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3056, file: !359, line: 96, baseType: !407, size: 8)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3056, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3053, file: !359, line: 100, baseType: !411, size: 16)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3031, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3031, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3031, file: !359, line: 131, baseType: !3064, size: 192, offset: 192)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3065)
!3065 = !{!3066, !3067, !3073}
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3064, file: !228, line: 245, baseType: !3013, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3064, file: !228, line: 246, baseType: !3068, size: 32, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3069)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 32)
!3070 = !DISubroutineType(types: !3071)
!3071 = !{null, !3072}
!3072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3064, size: 32)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3064, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3028, file: !359, line: 250, baseType: !3075, size: 288, offset: 384)
!3075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3076)
!3076 = !{!3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085}
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3075, file: !428, line: 26, baseType: !162, size: 32)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3075, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3075, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3075, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3075, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3075, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3075, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3075, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3075, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3028, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3028, file: !359, line: 256, baseType: !3045, size: 64, offset: 704)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3028, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3028, file: !359, line: 300, baseType: !3090, size: 96, offset: 800)
!3090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3091)
!3091 = !{!3092, !3093, !3094}
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3090, file: !359, line: 153, baseType: !22, size: 32)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3090, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3090, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3028, file: !359, line: 325, baseType: !3096, size: 32, offset: 896)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 32)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3098)
!3098 = !{!3099, !3105, !3106}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3097, file: !224, line: 5074, baseType: !3100, size: 96)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3101)
!3101 = !{!3102, !3103, !3104}
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3100, file: !454, line: 57, baseType: !457, size: 32)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3100, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3100, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3097, file: !224, line: 5075, baseType: !3045, size: 64, offset: 96)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3097, file: !224, line: 5076, baseType: !3107, offset: 160)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3028, file: !359, line: 343, baseType: !3109, size: 64, offset: 928)
!3109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3110)
!3110 = !{!3111, !3112}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3109, file: !428, line: 63, baseType: !162, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3109, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3113 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3114, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3115, splitDebugInlining: false, nameTableKind: None)
!3114 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!3115 = !{!22, !102, !107}
!3116 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3117, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !266, splitDebugInlining: false, nameTableKind: None)
!3117 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!3118 = !{!"Ubuntu clang version 14.0.6"}
!3119 = !{i32 7, !"Dwarf Version", i32 4}
!3120 = !{i32 2, !"Debug Info Version", i32 3}
!3121 = !{i32 1, !"wchar_size", i32 4}
!3122 = !{i32 1, !"min_enum_size", i32 4}
!3123 = !{i32 1, !"branch-target-enforcement", i32 0}
!3124 = !{i32 1, !"sign-return-address", i32 0}
!3125 = !{i32 1, !"sign-return-address-all", i32 0}
!3126 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3127 = !{i32 7, !"frame-pointer", i32 2}
!3128 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3129, file: !3129, line: 26, type: !3130, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2413, retainedNodes: !250)
!3129 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3130 = !DISubroutineType(types: !3131)
!3131 = !{null}
!3132 = !DILocation(line: 28, column: 1, scope: !3128)
!3133 = !{i64 2155025606, i64 2155025626, i64 2155025689}
!3134 = !DILocation(line: 29, column: 1, scope: !3128)
!3135 = !{i64 2155026021, i64 2155026041, i64 2155026104}
!3136 = !DILocation(line: 30, column: 1, scope: !3128)
!3137 = !{i64 2155026440, i64 2155026460, i64 2155026523}
!3138 = !DILocation(line: 31, column: 1, scope: !3128)
!3139 = !{i64 2155026859, i64 2155026879, i64 2155026942}
!3140 = !DILocation(line: 33, column: 1, scope: !3128)
!3141 = !{i64 2155027151, i64 2155027171, i64 2155027234}
!3142 = !DILocation(line: 35, column: 1, scope: !3128)
!3143 = !{i64 2155027476, i64 2155027496, i64 2155027559}
!3144 = !DILocation(line: 50, column: 1, scope: !3128)
!3145 = !{i64 2155027903, i64 2155027923, i64 2155027986}
!3146 = !DILocation(line: 54, column: 1, scope: !3128)
!3147 = !{i64 2155028342, i64 2155028362, i64 2155028425}
!3148 = !DILocation(line: 61, column: 1, scope: !3128)
!3149 = !{i64 2155028659, i64 2155028679, i64 2155028742}
!3150 = !DILocation(line: 63, column: 1, scope: !3128)
!3151 = !{i64 2155029039, i64 2155029059, i64 2155029122}
!3152 = !DILocation(line: 64, column: 1, scope: !3128)
!3153 = !{i64 2155029561, i64 2155029581, i64 2155029644}
!3154 = !DILocation(line: 65, column: 1, scope: !3128)
!3155 = !{i64 2155030059, i64 2155030079, i64 2155030142}
!3156 = !DILocation(line: 66, column: 1, scope: !3128)
!3157 = !{i64 2155030541, i64 2155030561, i64 2155030624}
!3158 = !DILocation(line: 67, column: 1, scope: !3128)
!3159 = !{i64 2155031048, i64 2155031068, i64 2155031131}
!3160 = !DILocation(line: 68, column: 1, scope: !3128)
!3161 = !{i64 2155031536, i64 2155031556, i64 2155031619}
!3162 = !DILocation(line: 70, column: 1, scope: !3128)
!3163 = !{i64 2155032004, i64 2155032024, i64 2155032087}
!3164 = !DILocation(line: 71, column: 1, scope: !3128)
!3165 = !{i64 2155036507, i64 2155036527, i64 2155036590}
!3166 = !DILocation(line: 72, column: 1, scope: !3128)
!3167 = !{i64 2155036965, i64 2155036985, i64 2155037048}
!3168 = !DILocation(line: 79, column: 1, scope: !3128)
!3169 = !{i64 2155037419, i64 2155037439, i64 2155037502}
!3170 = !DILocation(line: 80, column: 1, scope: !3128)
!3171 = !{i64 2155037930, i64 2155037950, i64 2155038013}
!3172 = !DILocation(line: 82, column: 1, scope: !3128)
!3173 = !{i64 2155038421, i64 2155038441, i64 2155038504}
!3174 = !DILocation(line: 97, column: 1, scope: !3128)
!3175 = !{i64 2155038758, i64 2155038778, i64 2155038841}
!3176 = !DILocation(line: 99, column: 1, scope: !3128)
!3177 = !{i64 2155038976, i64 2155038996, i64 2155039059}
!3178 = !DILocation(line: 102, column: 1, scope: !3128)
!3179 = !{i64 2155039233, i64 2155039253, i64 2155039316}
!3180 = !DILocation(line: 105, column: 1, scope: !3128)
!3181 = !{i64 2155039473, i64 2155039493, i64 2155039556}
!3182 = !DILocation(line: 115, column: 1, scope: !3128)
!3183 = !{i64 2155039812, i64 2155039832, i64 2155039895}
!3184 = !DILocation(line: 118, column: 1, scope: !3128)
!3185 = !{i64 2155040156, i64 2155040176, i64 2155040239}
!3186 = !DILocation(line: 32, column: 1, scope: !3187)
!3187 = !DILexicalBlockFile(scope: !3128, file: !3188, discriminator: 0)
!3188 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3189 = !{i64 2155040512, i64 2155040532, i64 2155040595}
!3190 = !DILocation(line: 33, column: 1, scope: !3187)
!3191 = !{i64 2155041024, i64 2155041044, i64 2155041107}
!3192 = !DILocation(line: 53, column: 1, scope: !3187)
!3193 = !{i64 2155041532, i64 2155041552, i64 2155041615}
!3194 = !DILocation(line: 54, column: 1, scope: !3187)
!3195 = !{i64 2155041950, i64 2155041970, i64 2155042033}
!3196 = !DILocation(line: 55, column: 1, scope: !3187)
!3197 = !{i64 2155042368, i64 2155042388, i64 2155042451}
!3198 = !DILocation(line: 56, column: 1, scope: !3187)
!3199 = !{i64 2155042786, i64 2155042806, i64 2155042869}
!3200 = !DILocation(line: 57, column: 1, scope: !3187)
!3201 = !{i64 2155043204, i64 2155043224, i64 2155043287}
!3202 = !DILocation(line: 58, column: 1, scope: !3187)
!3203 = !{i64 2155043622, i64 2155043642, i64 2155043705}
!3204 = !DILocation(line: 59, column: 1, scope: !3187)
!3205 = !{i64 2155044040, i64 2155044060, i64 2155044123}
!3206 = !DILocation(line: 60, column: 1, scope: !3187)
!3207 = !{i64 2155044464, i64 2155044484, i64 2155044547}
!3208 = !DILocation(line: 61, column: 1, scope: !3187)
!3209 = !{i64 2155044781, i64 2155044801, i64 2155044864}
!3210 = !DILocation(line: 70, column: 1, scope: !3187)
!3211 = !{i64 2155045010, i64 2155045030, i64 2155045093}
!3212 = !DILocation(line: 72, column: 1, scope: !3187)
!3213 = !{i64 2155045342, i64 2155045362, i64 2155045425}
!3214 = !DILocation(line: 73, column: 1, scope: !3187)
!3215 = !{i64 2155045792, i64 2155045812, i64 2155045875}
!3216 = !DILocation(line: 74, column: 1, scope: !3187)
!3217 = !{i64 2155050303, i64 2155050323, i64 2155050386}
!3218 = !DILocation(line: 75, column: 1, scope: !3187)
!3219 = !{i64 2155050753, i64 2155050773, i64 2155050836}
!3220 = !DILocation(line: 76, column: 1, scope: !3187)
!3221 = !{i64 2155051203, i64 2155051223, i64 2155051286}
!3222 = !DILocation(line: 77, column: 1, scope: !3187)
!3223 = !{i64 2155051653, i64 2155051673, i64 2155051736}
!3224 = !DILocation(line: 78, column: 1, scope: !3187)
!3225 = !{i64 2155052103, i64 2155052123, i64 2155052186}
!3226 = !DILocation(line: 79, column: 1, scope: !3187)
!3227 = !{i64 2155052553, i64 2155052573, i64 2155052636}
!3228 = !DILocation(line: 80, column: 1, scope: !3187)
!3229 = !{i64 2155053006, i64 2155053026, i64 2155053089}
!3230 = !DILocation(line: 84, column: 1, scope: !3187)
!3231 = !{i64 2155053338, i64 2155053358, i64 2155053421}
!3232 = !DILocation(line: 91, column: 1, scope: !3187)
!3233 = !{i64 2155053735, i64 2155053755, i64 2155053818}
!3234 = !DILocation(line: 93, column: 1, scope: !3187)
!3235 = !{i64 2155054102, i64 2155054122, i64 2155054185}
!3236 = !DILocation(line: 106, column: 1, scope: !3187)
!3237 = !{i64 2155054372, i64 2155054392, i64 2155054455}
!3238 = !DILocation(line: 11, column: 1, scope: !3239)
!3239 = !DILexicalBlockFile(scope: !3128, file: !3240, discriminator: 0)
!3240 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3241 = distinct !DISubprogram(name: "serial_cb", scope: !209, file: !209, line: 31, type: !204, scopeLine: 32, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3242)
!3242 = !{!3243, !3244, !3245}
!3243 = !DILocalVariable(name: "dev", arg: 1, scope: !3241, file: !209, line: 31, type: !117)
!3244 = !DILocalVariable(name: "user_data", arg: 2, scope: !3241, file: !209, line: 31, type: !102)
!3245 = !DILocalVariable(name: "c", scope: !3241, file: !209, line: 33, type: !133)
!3246 = !DILocation(line: 0, scope: !3241)
!3247 = !DILocation(line: 33, column: 2, scope: !3241)
!3248 = !DILocation(line: 35, column: 7, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3241, file: !209, line: 35, column: 6)
!3250 = !DILocation(line: 35, column: 6, scope: !3241)
!3251 = !DILocation(line: 39, column: 9, scope: !3241)
!3252 = !DILocation(line: 39, column: 2, scope: !3241)
!3253 = !DILocation(line: 41, column: 3, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3241, file: !209, line: 39, column: 38)
!3255 = !DILocation(line: 43, column: 8, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3254, file: !209, line: 43, column: 7)
!3257 = !DILocation(line: 43, column: 10, scope: !3256)
!3258 = !DILocation(line: 43, column: 18, scope: !3256)
!3259 = !DILocation(line: 45, column: 4, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3256, file: !209, line: 43, column: 51)
!3261 = !DILocation(line: 45, column: 23, scope: !3260)
!3262 = !DILocation(line: 48, column: 4, scope: !3260)
!3263 = !DILocation(line: 51, column: 15, scope: !3260)
!3264 = !DILocation(line: 52, column: 3, scope: !3260)
!3265 = !DILocation(line: 52, column: 25, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3256, file: !209, line: 52, column: 14)
!3267 = !DILocation(line: 52, column: 14, scope: !3256)
!3268 = !DILocation(line: 53, column: 21, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3266, file: !209, line: 52, column: 49)
!3270 = !DILocation(line: 53, column: 4, scope: !3269)
!3271 = !DILocation(line: 53, column: 25, scope: !3269)
!3272 = !DILocation(line: 54, column: 3, scope: !3269)
!3273 = distinct !{!3273, !3252, !3274}
!3274 = !DILocation(line: 56, column: 2, scope: !3241)
!3275 = !DILocation(line: 57, column: 1, scope: !3241)
!3276 = distinct !DISubprogram(name: "uart_irq_update", scope: !3277, file: !3277, line: 360, type: !151, scopeLine: 361, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3278)
!3277 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!3278 = !{!3279}
!3279 = !DILocalVariable(name: "dev", arg: 1, scope: !3276, file: !3277, line: 360, type: !117)
!3280 = !DILocation(line: 0, scope: !3276)
!3281 = !DILocation(line: 368, column: 2, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3276, file: !3277, line: 368, column: 2)
!3283 = !{i64 2155007912}
!3284 = !DILocation(line: 369, column: 9, scope: !3276)
!3285 = !DILocation(line: 369, column: 2, scope: !3276)
!3286 = distinct !DISubprogram(name: "uart_irq_rx_ready", scope: !111, file: !111, line: 1024, type: !151, scopeLine: 1025, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3287)
!3287 = !{!3288, !3289}
!3288 = !DILocalVariable(name: "dev", arg: 1, scope: !3286, file: !111, line: 1024, type: !117)
!3289 = !DILocalVariable(name: "api", scope: !3286, file: !111, line: 1027, type: !108)
!3290 = !DILocation(line: 0, scope: !3286)
!3291 = !DILocation(line: 1028, column: 40, scope: !3286)
!3292 = !DILocation(line: 1030, column: 11, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3286, file: !111, line: 1030, column: 6)
!3294 = !DILocation(line: 1030, column: 24, scope: !3293)
!3295 = !DILocation(line: 1030, column: 6, scope: !3286)
!3296 = !DILocation(line: 1033, column: 9, scope: !3286)
!3297 = !DILocation(line: 1033, column: 2, scope: !3286)
!3298 = !DILocation(line: 1038, column: 1, scope: !3286)
!3299 = distinct !DISubprogram(name: "uart_fifo_read", scope: !111, file: !111, line: 785, type: !180, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3300)
!3300 = !{!3301, !3302, !3303, !3304}
!3301 = !DILocalVariable(name: "dev", arg: 1, scope: !3299, file: !111, line: 785, type: !117)
!3302 = !DILocalVariable(name: "rx_data", arg: 2, scope: !3299, file: !111, line: 785, type: !182)
!3303 = !DILocalVariable(name: "size", arg: 3, scope: !3299, file: !111, line: 786, type: !183)
!3304 = !DILocalVariable(name: "api", scope: !3299, file: !111, line: 789, type: !108)
!3305 = !DILocation(line: 0, scope: !3299)
!3306 = !DILocation(line: 790, column: 40, scope: !3299)
!3307 = !DILocation(line: 792, column: 11, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3299, file: !111, line: 792, column: 6)
!3309 = !DILocation(line: 792, column: 21, scope: !3308)
!3310 = !DILocation(line: 792, column: 6, scope: !3299)
!3311 = !DILocation(line: 796, column: 9, scope: !3299)
!3312 = !DILocation(line: 796, column: 2, scope: !3299)
!3313 = !DILocation(line: 803, column: 1, scope: !3299)
!3314 = distinct !DISubprogram(name: "k_msgq_put", scope: !3315, file: !3315, line: 1129, type: !3316, scopeLine: 1130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3323)
!3315 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!3316 = !DISubroutineType(types: !3317)
!3317 = !{!107, !3318, !13, !3319}
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 32)
!3319 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3320)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3321)
!3321 = !{!3322}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3320, file: !104, line: 66, baseType: !103, size: 64)
!3323 = !{!3324, !3325, !3326}
!3324 = !DILocalVariable(name: "msgq", arg: 1, scope: !3314, file: !3315, line: 1129, type: !3318)
!3325 = !DILocalVariable(name: "data", arg: 2, scope: !3314, file: !3315, line: 1129, type: !13)
!3326 = !DILocalVariable(name: "timeout", arg: 3, scope: !3314, file: !3315, line: 1129, type: !3319)
!3327 = !DILocation(line: 0, scope: !3314)
!3328 = !DILocation(line: 1139, column: 2, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3314, file: !3315, line: 1139, column: 2)
!3330 = !{i64 2154742692}
!3331 = !DILocation(line: 1140, column: 9, scope: !3314)
!3332 = !DILocation(line: 1140, column: 2, scope: !3314)
!3333 = distinct !DISubprogram(name: "z_impl_uart_irq_update", scope: !111, file: !111, line: 1136, type: !151, scopeLine: 1137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3334)
!3334 = !{!3335, !3336}
!3335 = !DILocalVariable(name: "dev", arg: 1, scope: !3333, file: !111, line: 1136, type: !117)
!3336 = !DILocalVariable(name: "api", scope: !3333, file: !111, line: 1139, type: !108)
!3337 = !DILocation(line: 0, scope: !3333)
!3338 = !DILocation(line: 1140, column: 40, scope: !3333)
!3339 = !DILocation(line: 1142, column: 11, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3333, file: !111, line: 1142, column: 6)
!3341 = !DILocation(line: 1142, column: 22, scope: !3340)
!3342 = !DILocation(line: 1142, column: 6, scope: !3333)
!3343 = !DILocation(line: 1145, column: 9, scope: !3333)
!3344 = !DILocation(line: 1145, column: 2, scope: !3333)
!3345 = !DILocation(line: 1150, column: 1, scope: !3333)
!3346 = distinct !DISubprogram(name: "print_uart", scope: !209, file: !209, line: 62, type: !3347, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3349)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{null, !256}
!3349 = !{!3350, !3351, !3352}
!3350 = !DILocalVariable(name: "buf", arg: 1, scope: !3346, file: !209, line: 62, type: !256)
!3351 = !DILocalVariable(name: "msg_len", scope: !3346, file: !209, line: 64, type: !107)
!3352 = !DILocalVariable(name: "i", scope: !3353, file: !209, line: 66, type: !107)
!3353 = distinct !DILexicalBlock(scope: !3346, file: !209, line: 66, column: 2)
!3354 = !DILocation(line: 0, scope: !3346)
!3355 = !DILocation(line: 64, column: 16, scope: !3346)
!3356 = !DILocation(line: 0, scope: !3353)
!3357 = !DILocation(line: 66, column: 20, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3353, file: !209, line: 66, column: 2)
!3359 = !DILocation(line: 66, column: 2, scope: !3353)
!3360 = !DILocation(line: 69, column: 1, scope: !3346)
!3361 = !DILocation(line: 67, column: 27, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3358, file: !209, line: 66, column: 36)
!3363 = !DILocation(line: 67, column: 3, scope: !3362)
!3364 = !DILocation(line: 66, column: 32, scope: !3358)
!3365 = distinct !{!3365, !3359, !3366}
!3366 = !DILocation(line: 68, column: 2, scope: !3353)
!3367 = distinct !DISubprogram(name: "uart_poll_out", scope: !3277, file: !3277, line: 95, type: !147, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3368)
!3368 = !{!3369, !3370}
!3369 = !DILocalVariable(name: "dev", arg: 1, scope: !3367, file: !3277, line: 95, type: !117)
!3370 = !DILocalVariable(name: "out_char", arg: 2, scope: !3367, file: !3277, line: 95, type: !134)
!3371 = !DILocation(line: 0, scope: !3367)
!3372 = !DILocation(line: 105, column: 2, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3367, file: !3277, line: 105, column: 2)
!3374 = !{i64 2155007164}
!3375 = !DILocation(line: 106, column: 2, scope: !3367)
!3376 = !DILocation(line: 107, column: 1, scope: !3367)
!3377 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !147, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3378)
!3378 = !{!3379, !3380, !3381}
!3379 = !DILocalVariable(name: "dev", arg: 1, scope: !3377, file: !111, line: 574, type: !117)
!3380 = !DILocalVariable(name: "out_char", arg: 2, scope: !3377, file: !111, line: 575, type: !134)
!3381 = !DILocalVariable(name: "api", scope: !3377, file: !111, line: 577, type: !108)
!3382 = !DILocation(line: 0, scope: !3377)
!3383 = !DILocation(line: 578, column: 40, scope: !3377)
!3384 = !DILocation(line: 580, column: 7, scope: !3377)
!3385 = !DILocation(line: 580, column: 2, scope: !3377)
!3386 = !DILocation(line: 581, column: 1, scope: !3377)
!3387 = distinct !DISubprogram(name: "main", scope: !209, file: !209, line: 71, type: !3130, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3388)
!3388 = !{!3389}
!3389 = !DILocalVariable(name: "tx_buf", scope: !3387, file: !209, line: 73, type: !218)
!3390 = !DILocation(line: 73, column: 2, scope: !3387)
!3391 = !DILocation(line: 73, column: 7, scope: !3387)
!3392 = !DILocation(line: 75, column: 7, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3387, file: !209, line: 75, column: 6)
!3394 = !DILocation(line: 75, column: 6, scope: !3387)
!3395 = !DILocation(line: 76, column: 3, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3393, file: !209, line: 75, column: 34)
!3397 = !DILocation(line: 77, column: 3, scope: !3396)
!3398 = !DILocation(line: 81, column: 2, scope: !3387)
!3399 = !DILocation(line: 82, column: 2, scope: !3387)
!3400 = !DILocation(line: 84, column: 2, scope: !3387)
!3401 = !DILocation(line: 85, column: 2, scope: !3387)
!3402 = !DILocation(line: 88, column: 9, scope: !3387)
!3403 = !DILocation(line: 88, column: 52, scope: !3387)
!3404 = !DILocation(line: 88, column: 2, scope: !3387)
!3405 = !DILocation(line: 89, column: 3, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3387, file: !209, line: 88, column: 58)
!3407 = !DILocation(line: 90, column: 3, scope: !3406)
!3408 = !DILocation(line: 91, column: 3, scope: !3406)
!3409 = distinct !{!3409, !3404, !3410}
!3410 = !DILocation(line: 92, column: 2, scope: !3387)
!3411 = !DILocation(line: 93, column: 1, scope: !3387)
!3412 = distinct !DISubprogram(name: "device_is_ready", scope: !3413, file: !3413, line: 47, type: !3414, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3416)
!3413 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!136, !117}
!3416 = !{!3417}
!3417 = !DILocalVariable(name: "dev", arg: 1, scope: !3412, file: !3413, line: 47, type: !117)
!3418 = !DILocation(line: 0, scope: !3412)
!3419 = !DILocation(line: 55, column: 2, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3412, file: !3413, line: 55, column: 2)
!3421 = !{i64 2154923919}
!3422 = !DILocation(line: 56, column: 9, scope: !3412)
!3423 = !DILocation(line: 56, column: 2, scope: !3412)
!3424 = distinct !DISubprogram(name: "uart_irq_callback_user_data_set", scope: !111, file: !111, line: 1163, type: !200, scopeLine: 1166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3425)
!3425 = !{!3426, !3427, !3428, !3429}
!3426 = !DILocalVariable(name: "dev", arg: 1, scope: !3424, file: !111, line: 1163, type: !117)
!3427 = !DILocalVariable(name: "cb", arg: 2, scope: !3424, file: !111, line: 1164, type: !202)
!3428 = !DILocalVariable(name: "user_data", arg: 3, scope: !3424, file: !111, line: 1165, type: !102)
!3429 = !DILocalVariable(name: "api", scope: !3424, file: !111, line: 1168, type: !108)
!3430 = !DILocation(line: 0, scope: !3424)
!3431 = !DILocation(line: 1169, column: 40, scope: !3424)
!3432 = !DILocation(line: 1171, column: 11, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3424, file: !111, line: 1171, column: 6)
!3434 = !DILocation(line: 1171, column: 20, scope: !3433)
!3435 = !DILocation(line: 1171, column: 29, scope: !3433)
!3436 = !DILocation(line: 1171, column: 46, scope: !3433)
!3437 = !DILocation(line: 1171, column: 6, scope: !3424)
!3438 = !DILocation(line: 1172, column: 3, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3433, file: !111, line: 1171, column: 56)
!3440 = !DILocation(line: 1173, column: 2, scope: !3439)
!3441 = !DILocation(line: 1179, column: 1, scope: !3424)
!3442 = distinct !DISubprogram(name: "uart_irq_rx_enable", scope: !3277, file: !3277, line: 241, type: !186, scopeLine: 242, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3443)
!3443 = !{!3444}
!3444 = !DILocalVariable(name: "dev", arg: 1, scope: !3442, file: !3277, line: 241, type: !117)
!3445 = !DILocation(line: 0, scope: !3442)
!3446 = !DILocation(line: 250, column: 2, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3442, file: !3277, line: 250, column: 2)
!3448 = !{i64 2155007572}
!3449 = !DILocation(line: 251, column: 2, scope: !3442)
!3450 = !DILocation(line: 252, column: 1, scope: !3442)
!3451 = distinct !DISubprogram(name: "k_msgq_get", scope: !3315, file: !3315, line: 1147, type: !3452, scopeLine: 1148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3454)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!107, !3318, !102, !3319}
!3454 = !{!3455, !3456, !3457}
!3455 = !DILocalVariable(name: "msgq", arg: 1, scope: !3451, file: !3315, line: 1147, type: !3318)
!3456 = !DILocalVariable(name: "data", arg: 2, scope: !3451, file: !3315, line: 1147, type: !102)
!3457 = !DILocalVariable(name: "timeout", arg: 3, scope: !3451, file: !3315, line: 1147, type: !3319)
!3458 = !DILocation(line: 0, scope: !3451)
!3459 = !DILocation(line: 1157, column: 2, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3451, file: !3315, line: 1157, column: 2)
!3461 = !{i64 2154742760}
!3462 = !DILocation(line: 1158, column: 9, scope: !3451)
!3463 = !DILocation(line: 1158, column: 2, scope: !3451)
!3464 = distinct !DISubprogram(name: "z_impl_uart_irq_rx_enable", scope: !111, file: !111, line: 934, type: !186, scopeLine: 935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3465)
!3465 = !{!3466, !3467}
!3466 = !DILocalVariable(name: "dev", arg: 1, scope: !3464, file: !111, line: 934, type: !117)
!3467 = !DILocalVariable(name: "api", scope: !3464, file: !111, line: 937, type: !108)
!3468 = !DILocation(line: 0, scope: !3464)
!3469 = !DILocation(line: 938, column: 40, scope: !3464)
!3470 = !DILocation(line: 940, column: 11, scope: !3471)
!3471 = distinct !DILexicalBlock(scope: !3464, file: !111, line: 940, column: 6)
!3472 = !DILocation(line: 940, column: 25, scope: !3471)
!3473 = !DILocation(line: 940, column: 6, scope: !3464)
!3474 = !DILocation(line: 941, column: 3, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3471, file: !111, line: 940, column: 34)
!3476 = !DILocation(line: 942, column: 2, scope: !3475)
!3477 = !DILocation(line: 946, column: 1, scope: !3464)
!3478 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !3414, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3479)
!3479 = !{!3480}
!3480 = !DILocalVariable(name: "dev", arg: 1, scope: !3478, file: !120, line: 730, type: !117)
!3481 = !DILocation(line: 0, scope: !3478)
!3482 = !DILocation(line: 732, column: 9, scope: !3478)
!3483 = !DILocation(line: 732, column: 2, scope: !3478)
!3484 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !268, file: !268, line: 45, type: !270, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3485)
!3485 = !{!3486}
!3486 = !DILocalVariable(name: "c", arg: 1, scope: !3484, file: !268, line: 45, type: !107)
!3487 = !DILocation(line: 0, scope: !3484)
!3488 = !DILocation(line: 50, column: 2, scope: !3484)
!3489 = distinct !DISubprogram(name: "__printk_hook_install", scope: !268, file: !268, line: 63, type: !3490, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3492)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{null, !269}
!3492 = !{!3493}
!3493 = !DILocalVariable(name: "fn", arg: 1, scope: !3489, file: !268, line: 63, type: !269)
!3494 = !DILocation(line: 0, scope: !3489)
!3495 = !DILocation(line: 65, column: 12, scope: !3489)
!3496 = !DILocation(line: 66, column: 1, scope: !3489)
!3497 = distinct !DISubprogram(name: "__printk_get_hook", scope: !268, file: !268, line: 76, type: !3498, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !250)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!102}
!3500 = !DILocation(line: 78, column: 9, scope: !3497)
!3501 = !DILocation(line: 78, column: 2, scope: !3497)
!3502 = distinct !DISubprogram(name: "vprintk", scope: !268, file: !268, line: 113, type: !3503, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3512)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{null, !123, !3505}
!3505 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3506, line: 99, baseType: !3507)
!3506 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3507 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3506, line: 40, baseType: !3508)
!3508 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !268, baseType: !3509)
!3509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3510)
!3510 = !{!3511}
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3509, file: !268, line: 79, baseType: !102, size: 32)
!3512 = !{!3513, !3514, !3515}
!3513 = !DILocalVariable(name: "fmt", arg: 1, scope: !3502, file: !268, line: 113, type: !123)
!3514 = !DILocalVariable(name: "ap", arg: 2, scope: !3502, file: !268, line: 113, type: !3505)
!3515 = !DILocalVariable(name: "ctx", scope: !3516, file: !268, line: 121, type: !3518)
!3516 = distinct !DILexicalBlock(scope: !3517, file: !268, line: 120, column: 27)
!3517 = distinct !DILexicalBlock(scope: !3502, file: !268, line: 120, column: 6)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !268, line: 81, size: 32, elements: !3519)
!3519 = !{!3520, !3521}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !3518, file: !268, line: 85, baseType: !32, size: 32)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3518, file: !268, line: 86, baseType: !3522, offset: 32)
!3522 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, elements: !2447)
!3523 = !DILocation(line: 0, scope: !3502)
!3524 = !DILocation(line: 148, column: 3, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3517, file: !268, line: 138, column: 9)
!3526 = !DILocation(line: 155, column: 1, scope: !3502)
!3527 = distinct !DISubprogram(name: "char_out", scope: !268, file: !268, line: 107, type: !3528, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3530)
!3528 = !DISubroutineType(types: !3529)
!3529 = !{!107, !107, !102}
!3530 = !{!3531, !3532}
!3531 = !DILocalVariable(name: "c", arg: 1, scope: !3527, file: !268, line: 107, type: !107)
!3532 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !3527, file: !268, line: 107, type: !102)
!3533 = !DILocation(line: 0, scope: !3527)
!3534 = !DILocation(line: 110, column: 9, scope: !3527)
!3535 = !DILocation(line: 110, column: 2, scope: !3527)
!3536 = distinct !DISubprogram(name: "cbvprintf", scope: !3537, file: !3537, line: 739, type: !3538, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3544)
!3537 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!107, !3540, !102, !123, !3505}
!3540 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3537, line: 297, baseType: !3541)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 32)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{!107, null}
!3544 = !{!3545, !3546, !3547, !3548}
!3545 = !DILocalVariable(name: "out", arg: 1, scope: !3536, file: !3537, line: 739, type: !3540)
!3546 = !DILocalVariable(name: "ctx", arg: 2, scope: !3536, file: !3537, line: 739, type: !102)
!3547 = !DILocalVariable(name: "format", arg: 3, scope: !3536, file: !3537, line: 739, type: !123)
!3548 = !DILocalVariable(name: "ap", arg: 4, scope: !3536, file: !3537, line: 739, type: !3505)
!3549 = !DILocation(line: 0, scope: !3536)
!3550 = !DILocation(line: 741, column: 9, scope: !3536)
!3551 = !DILocation(line: 741, column: 2, scope: !3536)
!3552 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !268, file: !268, line: 157, type: !3553, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3555)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{null, !256, !252}
!3555 = !{!3556, !3557, !3558}
!3556 = !DILocalVariable(name: "c", arg: 1, scope: !3552, file: !268, line: 157, type: !256)
!3557 = !DILocalVariable(name: "n", arg: 2, scope: !3552, file: !268, line: 157, type: !252)
!3558 = !DILocalVariable(name: "i", scope: !3552, file: !268, line: 159, type: !252)
!3559 = !DILocation(line: 0, scope: !3552)
!3560 = !DILocation(line: 164, column: 16, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3562, file: !268, line: 164, column: 2)
!3562 = distinct !DILexicalBlock(scope: !3552, file: !268, line: 164, column: 2)
!3563 = !DILocation(line: 164, column: 2, scope: !3562)
!3564 = !DILocation(line: 165, column: 3, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3561, file: !268, line: 164, column: 26)
!3566 = !DILocation(line: 165, column: 13, scope: !3565)
!3567 = !DILocation(line: 164, column: 22, scope: !3561)
!3568 = distinct !{!3568, !3563, !3569}
!3569 = !DILocation(line: 166, column: 2, scope: !3562)
!3570 = !DILocation(line: 171, column: 1, scope: !3552)
!3571 = distinct !DISubprogram(name: "printk", scope: !268, file: !268, line: 203, type: !3572, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3574)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{null, !123, null}
!3574 = !{!3575, !3576}
!3575 = !DILocalVariable(name: "fmt", arg: 1, scope: !3571, file: !268, line: 203, type: !123)
!3576 = !DILocalVariable(name: "ap", scope: !3571, file: !268, line: 205, type: !3505)
!3577 = !DILocation(line: 0, scope: !3571)
!3578 = !DILocation(line: 205, column: 2, scope: !3571)
!3579 = !DILocation(line: 205, column: 10, scope: !3571)
!3580 = !DILocation(line: 207, column: 2, scope: !3571)
!3581 = !DILocation(line: 209, column: 2, scope: !3571)
!3582 = !DILocation(line: 211, column: 2, scope: !3571)
!3583 = !DILocation(line: 212, column: 1, scope: !3571)
!3584 = distinct !DISubprogram(name: "snprintk", scope: !268, file: !268, line: 239, type: !3585, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3587)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!107, !256, !252, !123, null}
!3587 = !{!3588, !3589, !3590, !3591, !3592}
!3588 = !DILocalVariable(name: "str", arg: 1, scope: !3584, file: !268, line: 239, type: !256)
!3589 = !DILocalVariable(name: "size", arg: 2, scope: !3584, file: !268, line: 239, type: !252)
!3590 = !DILocalVariable(name: "fmt", arg: 3, scope: !3584, file: !268, line: 239, type: !123)
!3591 = !DILocalVariable(name: "ap", scope: !3584, file: !268, line: 241, type: !3505)
!3592 = !DILocalVariable(name: "ret", scope: !3584, file: !268, line: 242, type: !107)
!3593 = !DILocation(line: 0, scope: !3584)
!3594 = !DILocation(line: 241, column: 2, scope: !3584)
!3595 = !DILocation(line: 241, column: 10, scope: !3584)
!3596 = !DILocation(line: 244, column: 2, scope: !3584)
!3597 = !DILocation(line: 245, column: 8, scope: !3584)
!3598 = !DILocation(line: 246, column: 2, scope: !3584)
!3599 = !DILocation(line: 249, column: 1, scope: !3584)
!3600 = !DILocation(line: 248, column: 2, scope: !3584)
!3601 = distinct !DISubprogram(name: "vsnprintk", scope: !268, file: !268, line: 251, type: !3602, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3604)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!107, !256, !252, !123, !3505}
!3604 = !{!3605, !3606, !3607, !3608, !3609}
!3605 = !DILocalVariable(name: "str", arg: 1, scope: !3601, file: !268, line: 251, type: !256)
!3606 = !DILocalVariable(name: "size", arg: 2, scope: !3601, file: !268, line: 251, type: !252)
!3607 = !DILocalVariable(name: "fmt", arg: 3, scope: !3601, file: !268, line: 251, type: !123)
!3608 = !DILocalVariable(name: "ap", arg: 4, scope: !3601, file: !268, line: 251, type: !3505)
!3609 = !DILocalVariable(name: "ctx", scope: !3601, file: !268, line: 253, type: !3610)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !268, line: 217, size: 96, elements: !3611)
!3611 = !{!3612, !3613, !3614}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !3610, file: !268, line: 218, baseType: !256, size: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3610, file: !268, line: 219, baseType: !107, size: 32, offset: 32)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3610, file: !268, line: 220, baseType: !107, size: 32, offset: 64)
!3615 = !DILocation(line: 0, scope: !3601)
!3616 = !DILocation(line: 253, column: 2, scope: !3601)
!3617 = !DILocation(line: 253, column: 21, scope: !3601)
!3618 = !DILocation(line: 253, column: 27, scope: !3601)
!3619 = !DILocation(line: 255, column: 2, scope: !3601)
!3620 = !DILocation(line: 257, column: 10, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3601, file: !268, line: 257, column: 6)
!3622 = !DILocation(line: 257, column: 22, scope: !3621)
!3623 = !DILocation(line: 257, column: 16, scope: !3621)
!3624 = !DILocation(line: 257, column: 6, scope: !3601)
!3625 = !DILocation(line: 258, column: 3, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3621, file: !268, line: 257, column: 27)
!3627 = !DILocation(line: 258, column: 18, scope: !3626)
!3628 = !DILocation(line: 259, column: 2, scope: !3626)
!3629 = !DILocation(line: 262, column: 1, scope: !3601)
!3630 = !DILocation(line: 261, column: 2, scope: !3601)
!3631 = distinct !DISubprogram(name: "str_out", scope: !268, file: !268, line: 223, type: !3632, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !264, retainedNodes: !3635)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{!107, !107, !3634}
!3634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 32)
!3635 = !{!3636, !3637}
!3636 = !DILocalVariable(name: "c", arg: 1, scope: !3631, file: !268, line: 223, type: !107)
!3637 = !DILocalVariable(name: "ctx", arg: 2, scope: !3631, file: !268, line: 223, type: !3634)
!3638 = !DILocation(line: 0, scope: !3631)
!3639 = !DILocation(line: 225, column: 11, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3631, file: !268, line: 225, column: 6)
!3641 = !DILocation(line: 225, column: 15, scope: !3640)
!3642 = !DILocation(line: 0, scope: !3640)
!3643 = !DILocation(line: 225, column: 23, scope: !3640)
!3644 = !DILocation(line: 225, column: 45, scope: !3640)
!3645 = !DILocation(line: 225, column: 37, scope: !3640)
!3646 = !DILocation(line: 225, column: 6, scope: !3631)
!3647 = !DILocation(line: 226, column: 8, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3640, file: !268, line: 225, column: 50)
!3649 = !DILocation(line: 226, column: 13, scope: !3648)
!3650 = !DILocation(line: 227, column: 3, scope: !3648)
!3651 = !DILocation(line: 230, column: 29, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3631, file: !268, line: 230, column: 6)
!3653 = !DILocation(line: 230, column: 17, scope: !3652)
!3654 = !DILocation(line: 230, column: 6, scope: !3631)
!3655 = !DILocation(line: 231, column: 22, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3652, file: !268, line: 230, column: 34)
!3657 = !DILocation(line: 231, column: 3, scope: !3656)
!3658 = !DILocation(line: 231, column: 26, scope: !3656)
!3659 = !DILocation(line: 232, column: 2, scope: !3656)
!3660 = !DILocation(line: 233, column: 28, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3652, file: !268, line: 232, column: 9)
!3662 = !DILocation(line: 233, column: 22, scope: !3661)
!3663 = !DILocation(line: 233, column: 3, scope: !3661)
!3664 = !DILocation(line: 233, column: 26, scope: !3661)
!3665 = !DILocation(line: 237, column: 1, scope: !3631)
!3666 = distinct !DISubprogram(name: "z_thread_entry", scope: !3667, file: !3667, line: 30, type: !3668, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !3675)
!3667 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3668 = !DISubroutineType(types: !3669)
!3669 = !{null, !3670, !102, !102, !102}
!3670 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3671, line: 46, baseType: !3672)
!3671 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3673, size: 32)
!3673 = !DISubroutineType(types: !3674)
!3674 = !{null, !102, !102, !102}
!3675 = !{!3676, !3677, !3678, !3679}
!3676 = !DILocalVariable(name: "entry", arg: 1, scope: !3666, file: !3667, line: 30, type: !3670)
!3677 = !DILocalVariable(name: "p1", arg: 2, scope: !3666, file: !3667, line: 31, type: !102)
!3678 = !DILocalVariable(name: "p2", arg: 3, scope: !3666, file: !3667, line: 31, type: !102)
!3679 = !DILocalVariable(name: "p3", arg: 4, scope: !3666, file: !3667, line: 31, type: !102)
!3680 = !DILocation(line: 0, scope: !3666)
!3681 = !DILocation(line: 36, column: 2, scope: !3666)
!3682 = !DILocation(line: 38, column: 17, scope: !3666)
!3683 = !DILocation(line: 38, column: 2, scope: !3666)
!3684 = !DILocation(line: 45, column: 2, scope: !3666)
!3685 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !3686, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !250)
!3686 = !DISubroutineType(types: !3687)
!3687 = !{!3688}
!3688 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !3689)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3690, size: 32)
!3690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !3691)
!3691 = !{!3692, !3750, !3762, !3763, !3764, !3765, !3771, !3784}
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3690, file: !359, line: 247, baseType: !3693, size: 384)
!3693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !3694)
!3694 = !{!3695, !3719, !3726, !3727, !3728, !3737, !3738, !3739}
!3695 = !DIDerivedType(tag: DW_TAG_member, scope: !3693, file: !359, line: 60, baseType: !3696, size: 64)
!3696 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3693, file: !359, line: 60, size: 64, elements: !3697)
!3697 = !{!3698, !3713}
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3696, file: !359, line: 61, baseType: !3699, size: 64)
!3699 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !3700)
!3700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !3701)
!3701 = !{!3702, !3708}
!3702 = !DIDerivedType(tag: DW_TAG_member, scope: !3700, file: !233, line: 38, baseType: !3703, size: 32)
!3703 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3700, file: !233, line: 38, size: 32, elements: !3704)
!3704 = !{!3705, !3707}
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3703, file: !233, line: 39, baseType: !3706, size: 32)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3700, size: 32)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3703, file: !233, line: 40, baseType: !3706, size: 32)
!3708 = !DIDerivedType(tag: DW_TAG_member, scope: !3700, file: !233, line: 42, baseType: !3709, size: 32, offset: 32)
!3709 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3700, file: !233, line: 42, size: 32, elements: !3710)
!3710 = !{!3711, !3712}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3709, file: !233, line: 43, baseType: !3706, size: 32)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3709, file: !233, line: 44, baseType: !3706, size: 32)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3696, file: !359, line: 62, baseType: !3714, size: 64)
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !3715)
!3715 = !{!3716}
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3714, file: !384, line: 50, baseType: !3717, size: 64)
!3717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3718, size: 64, elements: !389)
!3718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 32)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3693, file: !359, line: 68, baseType: !3720, size: 32, offset: 64)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 32)
!3721 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !3722)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !3723)
!3723 = !{!3724}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3722, file: !228, line: 232, baseType: !3725, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !3700)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3693, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3693, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!3728 = !DIDerivedType(tag: DW_TAG_member, scope: !3693, file: !359, line: 90, baseType: !3729, size: 16, offset: 112)
!3729 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3693, file: !359, line: 90, size: 16, elements: !3730)
!3730 = !{!3731, !3736}
!3731 = !DIDerivedType(tag: DW_TAG_member, scope: !3729, file: !359, line: 91, baseType: !3732, size: 16)
!3732 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3729, file: !359, line: 91, size: 16, elements: !3733)
!3733 = !{!3734, !3735}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3732, file: !359, line: 96, baseType: !407, size: 8)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3732, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3729, file: !359, line: 100, baseType: !411, size: 16)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3693, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3693, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3693, file: !359, line: 131, baseType: !3740, size: 192, offset: 192)
!3740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !3741)
!3741 = !{!3742, !3743, !3749}
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3740, file: !228, line: 245, baseType: !3699, size: 64)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3740, file: !228, line: 246, baseType: !3744, size: 32, offset: 64)
!3744 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !3745)
!3745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3746, size: 32)
!3746 = !DISubroutineType(types: !3747)
!3747 = !{null, !3748}
!3748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3740, size: 32)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3740, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3690, file: !359, line: 250, baseType: !3751, size: 288, offset: 384)
!3751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !3752)
!3752 = !{!3753, !3754, !3755, !3756, !3757, !3758, !3759, !3760, !3761}
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3751, file: !428, line: 26, baseType: !162, size: 32)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3751, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3751, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3751, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3751, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3751, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3751, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3751, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3751, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3690, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !3690, file: !359, line: 256, baseType: !3721, size: 64, offset: 704)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3690, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3690, file: !359, line: 300, baseType: !3766, size: 96, offset: 800)
!3766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !3767)
!3767 = !{!3768, !3769, !3770}
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3766, file: !359, line: 153, baseType: !22, size: 32)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3766, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3766, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3690, file: !359, line: 325, baseType: !3772, size: 32, offset: 896)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 32)
!3773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !3774)
!3774 = !{!3775, !3781, !3782}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3773, file: !224, line: 5074, baseType: !3776, size: 96)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3777)
!3777 = !{!3778, !3779, !3780}
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3776, file: !454, line: 57, baseType: !457, size: 32)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3776, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3776, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3773, file: !224, line: 5075, baseType: !3721, size: 64, offset: 96)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3773, file: !224, line: 5076, baseType: !3783, offset: 160)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3690, file: !359, line: 343, baseType: !3785, size: 64, offset: 928)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !3786)
!3786 = !{!3787, !3788}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3785, file: !428, line: 63, baseType: !162, size: 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3785, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!3789 = !DILocation(line: 535, column: 9, scope: !3685)
!3790 = !DILocation(line: 535, column: 2, scope: !3685)
!3791 = distinct !DISubprogram(name: "k_thread_abort", scope: !3315, file: !3315, line: 188, type: !3792, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !3794)
!3792 = !DISubroutineType(types: !3793)
!3793 = !{null, !3688}
!3794 = !{!3795}
!3795 = !DILocalVariable(name: "thread", arg: 1, scope: !3791, file: !3315, line: 188, type: !3688)
!3796 = !DILocation(line: 0, scope: !3791)
!3797 = !DILocation(line: 197, column: 2, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3791, file: !3315, line: 197, column: 2)
!3799 = !{i64 2154737884}
!3800 = !DILocation(line: 198, column: 2, scope: !3791)
!3801 = !DILocation(line: 199, column: 1, scope: !3791)
!3802 = distinct !DISubprogram(name: "z_current_get", scope: !3315, file: !3315, line: 173, type: !3686, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2415, retainedNodes: !250)
!3803 = !DILocation(line: 180, column: 2, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3802, file: !3315, line: 180, column: 2)
!3805 = !{i64 2154737816}
!3806 = !DILocation(line: 181, column: 9, scope: !3802)
!3807 = !DILocation(line: 181, column: 2, scope: !3802)
!3808 = distinct !DISubprogram(name: "sys_heap_free", scope: !3809, file: !3809, line: 163, type: !3810, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3818)
!3809 = !DIFile(filename: "zephyr/lib/os/heap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3810 = !DISubroutineType(types: !3811)
!3811 = !{null, !3812, !102}
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 32)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !3814)
!3814 = !{!3815, !3816, !3817}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3813, file: !454, line: 57, baseType: !2434, size: 32)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3813, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3813, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!3818 = !{!3819, !3820, !3821, !3822}
!3819 = !DILocalVariable(name: "heap", arg: 1, scope: !3808, file: !3809, line: 163, type: !3812)
!3820 = !DILocalVariable(name: "mem", arg: 2, scope: !3808, file: !3809, line: 163, type: !102)
!3821 = !DILocalVariable(name: "h", scope: !3808, file: !3809, line: 168, type: !2434)
!3822 = !DILocalVariable(name: "c", scope: !3808, file: !3809, line: 169, type: !2439)
!3823 = !DILocation(line: 0, scope: !3808)
!3824 = !DILocation(line: 165, column: 10, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3808, file: !3809, line: 165, column: 6)
!3826 = !DILocation(line: 165, column: 6, scope: !3808)
!3827 = !DILocation(line: 168, column: 27, scope: !3808)
!3828 = !DILocation(line: 169, column: 16, scope: !3808)
!3829 = !{i32 0, i32 536870912}
!3830 = !DILocation(line: 187, column: 2, scope: !3808)
!3831 = !DILocation(line: 197, column: 2, scope: !3808)
!3832 = !DILocation(line: 198, column: 1, scope: !3808)
!3833 = distinct !DISubprogram(name: "mem_to_chunkid", scope: !3809, file: !3809, line: 157, type: !3834, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3836)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{!2439, !2434, !102}
!3836 = !{!3837, !3838, !3839, !3840}
!3837 = !DILocalVariable(name: "h", arg: 1, scope: !3833, file: !3809, line: 157, type: !2434)
!3838 = !DILocalVariable(name: "p", arg: 2, scope: !3833, file: !3809, line: 157, type: !102)
!3839 = !DILocalVariable(name: "mem", scope: !3833, file: !3809, line: 159, type: !182)
!3840 = !DILocalVariable(name: "base", scope: !3833, file: !3809, line: 159, type: !182)
!3841 = !DILocation(line: 0, scope: !3833)
!3842 = !DILocation(line: 159, column: 39, scope: !3833)
!3843 = !DILocation(line: 160, column: 14, scope: !3833)
!3844 = !DILocation(line: 160, column: 38, scope: !3833)
!3845 = !DILocation(line: 160, column: 46, scope: !3833)
!3846 = !DILocation(line: 160, column: 2, scope: !3833)
!3847 = distinct !DISubprogram(name: "set_chunk_used", scope: !2421, file: !2421, line: 147, type: !3848, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3850)
!3848 = !DISubroutineType(types: !3849)
!3849 = !{null, !2434, !2439, !136}
!3850 = !{!3851, !3852, !3853, !3854, !3855}
!3851 = !DILocalVariable(name: "h", arg: 1, scope: !3847, file: !2421, line: 147, type: !2434)
!3852 = !DILocalVariable(name: "c", arg: 2, scope: !3847, file: !2421, line: 147, type: !2439)
!3853 = !DILocalVariable(name: "used", arg: 3, scope: !3847, file: !2421, line: 147, type: !136)
!3854 = !DILocalVariable(name: "buf", scope: !3847, file: !2421, line: 149, type: !2428)
!3855 = !DILocalVariable(name: "cmem", scope: !3847, file: !2421, line: 150, type: !102)
!3856 = !DILocation(line: 0, scope: !3847)
!3857 = !DILocation(line: 149, column: 22, scope: !3847)
!3858 = !DILocation(line: 0, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3860, file: !2421, line: 159, column: 7)
!3860 = distinct !DILexicalBlock(scope: !3861, file: !2421, line: 158, column: 9)
!3861 = distinct !DILexicalBlock(scope: !3847, file: !2421, line: 152, column: 6)
!3862 = !DILocation(line: 159, column: 7, scope: !3860)
!3863 = !DILocation(line: 165, column: 1, scope: !3847)
!3864 = distinct !DISubprogram(name: "free_chunk", scope: !3809, file: !3809, line: 133, type: !3865, scopeLine: 134, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3867)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{null, !2434, !2439}
!3867 = !{!3868, !3869}
!3868 = !DILocalVariable(name: "h", arg: 1, scope: !3864, file: !3809, line: 133, type: !2434)
!3869 = !DILocalVariable(name: "c", arg: 2, scope: !3864, file: !3809, line: 133, type: !2439)
!3870 = !DILocation(line: 0, scope: !3864)
!3871 = !DILocation(line: 136, column: 21, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3864, file: !3809, line: 136, column: 6)
!3873 = !DILocation(line: 136, column: 7, scope: !3872)
!3874 = !DILocation(line: 136, column: 6, scope: !3864)
!3875 = !DILocation(line: 137, column: 3, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3872, file: !3809, line: 136, column: 41)
!3877 = !DILocation(line: 138, column: 22, scope: !3876)
!3878 = !DILocation(line: 138, column: 3, scope: !3876)
!3879 = !DILocation(line: 139, column: 2, scope: !3876)
!3880 = !DILocation(line: 142, column: 21, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3864, file: !3809, line: 142, column: 6)
!3882 = !{i32 -65535, i32 536903678}
!3883 = !DILocation(line: 142, column: 7, scope: !3881)
!3884 = !DILocation(line: 142, column: 6, scope: !3864)
!3885 = !DILocation(line: 143, column: 3, scope: !3886)
!3886 = distinct !DILexicalBlock(scope: !3881, file: !3809, line: 142, column: 40)
!3887 = !DILocation(line: 144, column: 19, scope: !3886)
!3888 = !DILocation(line: 144, column: 3, scope: !3886)
!3889 = !DILocation(line: 145, column: 7, scope: !3886)
!3890 = !DILocation(line: 146, column: 2, scope: !3886)
!3891 = !DILocation(line: 148, column: 2, scope: !3864)
!3892 = !DILocation(line: 149, column: 1, scope: !3864)
!3893 = distinct !DISubprogram(name: "right_chunk", scope: !2421, file: !2421, line: 204, type: !3894, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3896)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!2439, !2434, !2439}
!3896 = !{!3897, !3898}
!3897 = !DILocalVariable(name: "h", arg: 1, scope: !3893, file: !2421, line: 204, type: !2434)
!3898 = !DILocalVariable(name: "c", arg: 2, scope: !3893, file: !2421, line: 204, type: !2439)
!3899 = !DILocation(line: 0, scope: !3893)
!3900 = !DILocation(line: 206, column: 13, scope: !3893)
!3901 = !DILocation(line: 206, column: 11, scope: !3893)
!3902 = !DILocation(line: 206, column: 2, scope: !3893)
!3903 = distinct !DISubprogram(name: "chunk_used", scope: !2421, file: !2421, line: 137, type: !3904, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3906)
!3904 = !DISubroutineType(types: !3905)
!3905 = !{!136, !2434, !2439}
!3906 = !{!3907, !3908}
!3907 = !DILocalVariable(name: "h", arg: 1, scope: !3903, file: !2421, line: 137, type: !2434)
!3908 = !DILocalVariable(name: "c", arg: 2, scope: !3903, file: !2421, line: 137, type: !2439)
!3909 = !DILocation(line: 0, scope: !3903)
!3910 = !DILocation(line: 139, column: 9, scope: !3903)
!3911 = !DILocation(line: 139, column: 42, scope: !3903)
!3912 = !DILocation(line: 139, column: 2, scope: !3903)
!3913 = distinct !DISubprogram(name: "free_list_remove", scope: !3809, file: !3809, line: 60, type: !3865, scopeLine: 61, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3914)
!3914 = !{!3915, !3916, !3917}
!3915 = !DILocalVariable(name: "h", arg: 1, scope: !3913, file: !3809, line: 60, type: !2434)
!3916 = !DILocalVariable(name: "c", arg: 2, scope: !3913, file: !3809, line: 60, type: !2439)
!3917 = !DILocalVariable(name: "bidx", scope: !3918, file: !3809, line: 63, type: !107)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !3809, line: 62, column: 31)
!3919 = distinct !DILexicalBlock(scope: !3913, file: !3809, line: 62, column: 6)
!3920 = !DILocation(line: 0, scope: !3913)
!3921 = !DILocation(line: 63, column: 28, scope: !3918)
!3922 = !{i32 0, i32 32768}
!3923 = !DILocation(line: 63, column: 14, scope: !3918)
!3924 = !DILocation(line: 0, scope: !3918)
!3925 = !DILocation(line: 64, column: 3, scope: !3918)
!3926 = !DILocation(line: 66, column: 1, scope: !3913)
!3927 = distinct !DISubprogram(name: "merge_chunks", scope: !3809, file: !3809, line: 125, type: !3928, scopeLine: 126, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3930)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{null, !2434, !2439, !2439}
!3930 = !{!3931, !3932, !3933, !3934}
!3931 = !DILocalVariable(name: "h", arg: 1, scope: !3927, file: !3809, line: 125, type: !2434)
!3932 = !DILocalVariable(name: "lc", arg: 2, scope: !3927, file: !3809, line: 125, type: !2439)
!3933 = !DILocalVariable(name: "rc", arg: 3, scope: !3927, file: !3809, line: 125, type: !2439)
!3934 = !DILocalVariable(name: "newsz", scope: !3927, file: !3809, line: 127, type: !3935)
!3935 = !DIDerivedType(tag: DW_TAG_typedef, name: "chunksz_t", file: !2421, line: 62, baseType: !162)
!3936 = !DILocation(line: 0, scope: !3927)
!3937 = !DILocation(line: 127, column: 20, scope: !3927)
!3938 = !DILocation(line: 127, column: 40, scope: !3927)
!3939 = !DILocation(line: 127, column: 38, scope: !3927)
!3940 = !DILocation(line: 129, column: 2, scope: !3927)
!3941 = !DILocation(line: 130, column: 25, scope: !3927)
!3942 = !DILocation(line: 130, column: 2, scope: !3927)
!3943 = !DILocation(line: 131, column: 1, scope: !3927)
!3944 = distinct !DISubprogram(name: "left_chunk", scope: !2421, file: !2421, line: 199, type: !3894, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3945)
!3945 = !{!3946, !3947}
!3946 = !DILocalVariable(name: "h", arg: 1, scope: !3944, file: !2421, line: 199, type: !2434)
!3947 = !DILocalVariable(name: "c", arg: 2, scope: !3944, file: !2421, line: 199, type: !2439)
!3948 = !DILocation(line: 0, scope: !3944)
!3949 = !DILocation(line: 201, column: 13, scope: !3944)
!3950 = !DILocation(line: 201, column: 11, scope: !3944)
!3951 = !DILocation(line: 201, column: 2, scope: !3944)
!3952 = distinct !DISubprogram(name: "free_list_add", scope: !3809, file: !3809, line: 98, type: !3865, scopeLine: 99, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3953)
!3953 = !{!3954, !3955, !3956}
!3954 = !DILocalVariable(name: "h", arg: 1, scope: !3952, file: !3809, line: 98, type: !2434)
!3955 = !DILocalVariable(name: "c", arg: 2, scope: !3952, file: !3809, line: 98, type: !2439)
!3956 = !DILocalVariable(name: "bidx", scope: !3957, file: !3809, line: 101, type: !107)
!3957 = distinct !DILexicalBlock(scope: !3958, file: !3809, line: 100, column: 31)
!3958 = distinct !DILexicalBlock(scope: !3952, file: !3809, line: 100, column: 6)
!3959 = !DILocation(line: 0, scope: !3952)
!3960 = !DILocation(line: 101, column: 28, scope: !3957)
!3961 = !DILocation(line: 101, column: 14, scope: !3957)
!3962 = !DILocation(line: 0, scope: !3957)
!3963 = !DILocation(line: 102, column: 3, scope: !3957)
!3964 = !DILocation(line: 104, column: 1, scope: !3952)
!3965 = distinct !DISubprogram(name: "chunk_size", scope: !2421, file: !2421, line: 142, type: !3966, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3968)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{!3935, !2434, !2439}
!3968 = !{!3969, !3970}
!3969 = !DILocalVariable(name: "h", arg: 1, scope: !3965, file: !2421, line: 142, type: !2434)
!3970 = !DILocalVariable(name: "c", arg: 2, scope: !3965, file: !2421, line: 142, type: !2439)
!3971 = !DILocation(line: 0, scope: !3965)
!3972 = !DILocation(line: 144, column: 9, scope: !3965)
!3973 = !DILocation(line: 144, column: 42, scope: !3965)
!3974 = !DILocation(line: 144, column: 2, scope: !3965)
!3975 = distinct !DISubprogram(name: "bucket_idx", scope: !2421, file: !2421, line: 250, type: !3976, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3978)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{!107, !2434, !3935}
!3978 = !{!3979, !3980, !3981}
!3979 = !DILocalVariable(name: "h", arg: 1, scope: !3975, file: !2421, line: 250, type: !2434)
!3980 = !DILocalVariable(name: "sz", arg: 2, scope: !3975, file: !2421, line: 250, type: !3935)
!3981 = !DILocalVariable(name: "usable_sz", scope: !3975, file: !2421, line: 252, type: !32)
!3982 = !DILocation(line: 0, scope: !3975)
!3983 = !DILocation(line: 252, column: 32, scope: !3975)
!3984 = !DILocation(line: 252, column: 30, scope: !3975)
!3985 = !DILocation(line: 252, column: 50, scope: !3975)
!3986 = !DILocation(line: 253, column: 14, scope: !3975)
!3987 = !{i32 0, i32 33}
!3988 = !DILocation(line: 253, column: 12, scope: !3975)
!3989 = !DILocation(line: 253, column: 2, scope: !3975)
!3990 = distinct !DISubprogram(name: "free_list_add_bidx", scope: !3809, file: !3809, line: 68, type: !3991, scopeLine: 69, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !3993)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{null, !2434, !2439, !107}
!3993 = !{!3994, !3995, !3996, !3997, !3999, !4002}
!3994 = !DILocalVariable(name: "h", arg: 1, scope: !3990, file: !3809, line: 68, type: !2434)
!3995 = !DILocalVariable(name: "c", arg: 2, scope: !3990, file: !3809, line: 68, type: !2439)
!3996 = !DILocalVariable(name: "bidx", arg: 3, scope: !3990, file: !3809, line: 68, type: !107)
!3997 = !DILocalVariable(name: "b", scope: !3990, file: !3809, line: 70, type: !3998)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 32)
!3999 = !DILocalVariable(name: "second", scope: !4000, file: !3809, line: 84, type: !2439)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !3809, line: 80, column: 9)
!4001 = distinct !DILexicalBlock(scope: !3990, file: !3809, line: 72, column: 6)
!4002 = !DILocalVariable(name: "first", scope: !4000, file: !3809, line: 85, type: !2439)
!4003 = !DILocation(line: 0, scope: !3990)
!4004 = !DILocation(line: 72, column: 9, scope: !4001)
!4005 = !DILocation(line: 72, column: 14, scope: !4001)
!4006 = !DILocation(line: 72, column: 6, scope: !3990)
!4007 = !DILocation(line: 76, column: 23, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4001, file: !3809, line: 72, column: 21)
!4009 = !DILocation(line: 76, column: 6, scope: !4008)
!4010 = !DILocation(line: 76, column: 20, scope: !4008)
!4011 = !DILocation(line: 77, column: 11, scope: !4008)
!4012 = !DILocation(line: 78, column: 3, scope: !4008)
!4013 = !DILocation(line: 79, column: 3, scope: !4008)
!4014 = !DILocation(line: 80, column: 2, scope: !4008)
!4015 = !DILocation(line: 0, scope: !4000)
!4016 = !DILocation(line: 85, column: 21, scope: !4000)
!4017 = !{i32 0, i32 65536}
!4018 = !DILocation(line: 87, column: 3, scope: !4000)
!4019 = !DILocation(line: 88, column: 3, scope: !4000)
!4020 = !DILocation(line: 89, column: 3, scope: !4000)
!4021 = !DILocation(line: 90, column: 3, scope: !4000)
!4022 = !DILocation(line: 96, column: 1, scope: !3990)
!4023 = distinct !DISubprogram(name: "set_prev_free_chunk", scope: !2421, file: !2421, line: 187, type: !3928, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4024)
!4024 = !{!4025, !4026, !4027}
!4025 = !DILocalVariable(name: "h", arg: 1, scope: !4023, file: !2421, line: 187, type: !2434)
!4026 = !DILocalVariable(name: "c", arg: 2, scope: !4023, file: !2421, line: 187, type: !2439)
!4027 = !DILocalVariable(name: "prev", arg: 3, scope: !4023, file: !2421, line: 188, type: !2439)
!4028 = !DILocation(line: 0, scope: !4023)
!4029 = !DILocation(line: 190, column: 2, scope: !4023)
!4030 = !DILocation(line: 191, column: 1, scope: !4023)
!4031 = distinct !DISubprogram(name: "set_next_free_chunk", scope: !2421, file: !2421, line: 193, type: !3928, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4032)
!4032 = !{!4033, !4034, !4035}
!4033 = !DILocalVariable(name: "h", arg: 1, scope: !4031, file: !2421, line: 193, type: !2434)
!4034 = !DILocalVariable(name: "c", arg: 2, scope: !4031, file: !2421, line: 193, type: !2439)
!4035 = !DILocalVariable(name: "next", arg: 3, scope: !4031, file: !2421, line: 194, type: !2439)
!4036 = !DILocation(line: 0, scope: !4031)
!4037 = !DILocation(line: 196, column: 2, scope: !4031)
!4038 = !DILocation(line: 197, column: 1, scope: !4031)
!4039 = distinct !DISubprogram(name: "prev_free_chunk", scope: !2421, file: !2421, line: 177, type: !3894, scopeLine: 178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4040)
!4040 = !{!4041, !4042}
!4041 = !DILocalVariable(name: "h", arg: 1, scope: !4039, file: !2421, line: 177, type: !2434)
!4042 = !DILocalVariable(name: "c", arg: 2, scope: !4039, file: !2421, line: 177, type: !2439)
!4043 = !DILocation(line: 0, scope: !4039)
!4044 = !DILocation(line: 179, column: 9, scope: !4039)
!4045 = !DILocation(line: 179, column: 2, scope: !4039)
!4046 = distinct !DISubprogram(name: "chunk_field", scope: !2421, file: !2421, line: 107, type: !4047, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4049)
!4047 = !DISubroutineType(types: !4048)
!4048 = !{!2439, !2434, !2439, !2420}
!4049 = !{!4050, !4051, !4052, !4053, !4054}
!4050 = !DILocalVariable(name: "h", arg: 1, scope: !4046, file: !2421, line: 107, type: !2434)
!4051 = !DILocalVariable(name: "c", arg: 2, scope: !4046, file: !2421, line: 107, type: !2439)
!4052 = !DILocalVariable(name: "f", arg: 3, scope: !4046, file: !2421, line: 108, type: !2420)
!4053 = !DILocalVariable(name: "buf", scope: !4046, file: !2421, line: 110, type: !2428)
!4054 = !DILocalVariable(name: "cmem", scope: !4046, file: !2421, line: 111, type: !102)
!4055 = !DILocation(line: 0, scope: !4046)
!4056 = !DILocation(line: 110, column: 22, scope: !4046)
!4057 = !DILocation(line: 111, column: 15, scope: !4046)
!4058 = !DILocation(line: 116, column: 11, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4060, file: !2421, line: 115, column: 9)
!4060 = distinct !DILexicalBlock(scope: !4046, file: !2421, line: 113, column: 6)
!4061 = !DILocation(line: 116, column: 10, scope: !4059)
!4062 = !DILocation(line: 118, column: 1, scope: !4046)
!4063 = distinct !DISubprogram(name: "chunk_buf", scope: !2421, file: !2421, line: 101, type: !4064, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4066)
!4064 = !DISubroutineType(types: !4065)
!4065 = !{!2428, !2434}
!4066 = !{!4067}
!4067 = !DILocalVariable(name: "h", arg: 1, scope: !4063, file: !2421, line: 101, type: !2434)
!4068 = !DILocation(line: 0, scope: !4063)
!4069 = !DILocation(line: 104, column: 9, scope: !4063)
!4070 = !DILocation(line: 104, column: 2, scope: !4063)
!4071 = distinct !DISubprogram(name: "chunk_set", scope: !2421, file: !2421, line: 120, type: !4072, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4074)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{null, !2434, !2439, !2420, !2439}
!4074 = !{!4075, !4076, !4077, !4078, !4079, !4080}
!4075 = !DILocalVariable(name: "h", arg: 1, scope: !4071, file: !2421, line: 120, type: !2434)
!4076 = !DILocalVariable(name: "c", arg: 2, scope: !4071, file: !2421, line: 120, type: !2439)
!4077 = !DILocalVariable(name: "f", arg: 3, scope: !4071, file: !2421, line: 121, type: !2420)
!4078 = !DILocalVariable(name: "val", arg: 4, scope: !4071, file: !2421, line: 121, type: !2439)
!4079 = !DILocalVariable(name: "buf", scope: !4071, file: !2421, line: 125, type: !2428)
!4080 = !DILocalVariable(name: "cmem", scope: !4071, file: !2421, line: 126, type: !102)
!4081 = !DILocation(line: 0, scope: !4071)
!4082 = !DILocation(line: 125, column: 22, scope: !4071)
!4083 = !DILocation(line: 126, column: 15, scope: !4071)
!4084 = !DILocation(line: 133, column: 27, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4086, file: !2421, line: 131, column: 9)
!4086 = distinct !DILexicalBlock(scope: !4071, file: !2421, line: 128, column: 6)
!4087 = !DILocation(line: 133, column: 4, scope: !4085)
!4088 = !DILocation(line: 133, column: 3, scope: !4085)
!4089 = !DILocation(line: 133, column: 25, scope: !4085)
!4090 = !DILocation(line: 135, column: 1, scope: !4071)
!4091 = distinct !DISubprogram(name: "min_chunk_size", scope: !2421, file: !2421, line: 240, type: !4092, scopeLine: 241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4094)
!4092 = !DISubroutineType(types: !4093)
!4093 = !{!3935, !2434}
!4094 = !{!4095}
!4095 = !DILocalVariable(name: "h", arg: 1, scope: !4091, file: !2421, line: 240, type: !2434)
!4096 = !DILocation(line: 0, scope: !4091)
!4097 = !DILocation(line: 242, column: 9, scope: !4091)
!4098 = !DILocation(line: 242, column: 2, scope: !4091)
!4099 = distinct !DISubprogram(name: "bytes_to_chunksz", scope: !2421, file: !2421, line: 235, type: !4100, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4102)
!4100 = !DISubroutineType(types: !4101)
!4101 = !{!3935, !2434, !252}
!4102 = !{!4103, !4104}
!4103 = !DILocalVariable(name: "h", arg: 1, scope: !4099, file: !2421, line: 235, type: !2434)
!4104 = !DILocalVariable(name: "bytes", arg: 2, scope: !4099, file: !2421, line: 235, type: !252)
!4105 = !DILocation(line: 0, scope: !4099)
!4106 = !DILocation(line: 237, column: 39, scope: !4099)
!4107 = !DILocation(line: 237, column: 9, scope: !4099)
!4108 = !DILocation(line: 237, column: 2, scope: !4099)
!4109 = distinct !DISubprogram(name: "chunksz", scope: !2421, file: !2421, line: 230, type: !4110, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4112)
!4110 = !DISubroutineType(types: !4111)
!4111 = !{!3935, !252}
!4112 = !{!4113}
!4113 = !DILocalVariable(name: "bytes", arg: 1, scope: !4109, file: !2421, line: 230, type: !252)
!4114 = !DILocation(line: 0, scope: !4109)
!4115 = !DILocation(line: 232, column: 29, scope: !4109)
!4116 = !DILocation(line: 232, column: 35, scope: !4109)
!4117 = !DILocation(line: 232, column: 2, scope: !4109)
!4118 = distinct !DISubprogram(name: "set_chunk_size", scope: !2421, file: !2421, line: 172, type: !4119, scopeLine: 173, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4121)
!4119 = !DISubroutineType(types: !4120)
!4120 = !{null, !2434, !2439, !3935}
!4121 = !{!4122, !4123, !4124}
!4122 = !DILocalVariable(name: "h", arg: 1, scope: !4118, file: !2421, line: 172, type: !2434)
!4123 = !DILocalVariable(name: "c", arg: 2, scope: !4118, file: !2421, line: 172, type: !2439)
!4124 = !DILocalVariable(name: "size", arg: 3, scope: !4118, file: !2421, line: 172, type: !3935)
!4125 = !DILocation(line: 0, scope: !4118)
!4126 = !DILocation(line: 174, column: 38, scope: !4118)
!4127 = !DILocation(line: 174, column: 2, scope: !4118)
!4128 = !DILocation(line: 175, column: 1, scope: !4118)
!4129 = distinct !DISubprogram(name: "set_left_chunk_size", scope: !2421, file: !2421, line: 209, type: !4119, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4130)
!4130 = !{!4131, !4132, !4133}
!4131 = !DILocalVariable(name: "h", arg: 1, scope: !4129, file: !2421, line: 209, type: !2434)
!4132 = !DILocalVariable(name: "c", arg: 2, scope: !4129, file: !2421, line: 209, type: !2439)
!4133 = !DILocalVariable(name: "size", arg: 3, scope: !4129, file: !2421, line: 210, type: !3935)
!4134 = !DILocation(line: 0, scope: !4129)
!4135 = !DILocation(line: 212, column: 2, scope: !4129)
!4136 = !DILocation(line: 213, column: 1, scope: !4129)
!4137 = distinct !DISubprogram(name: "free_list_remove_bidx", scope: !3809, file: !3809, line: 34, type: !3991, scopeLine: 35, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4138)
!4138 = !{!4139, !4140, !4141, !4142, !4143, !4146}
!4139 = !DILocalVariable(name: "h", arg: 1, scope: !4137, file: !3809, line: 34, type: !2434)
!4140 = !DILocalVariable(name: "c", arg: 2, scope: !4137, file: !3809, line: 34, type: !2439)
!4141 = !DILocalVariable(name: "bidx", arg: 3, scope: !4137, file: !3809, line: 34, type: !107)
!4142 = !DILocalVariable(name: "b", scope: !4137, file: !3809, line: 36, type: !3998)
!4143 = !DILocalVariable(name: "first", scope: !4144, file: !3809, line: 47, type: !2439)
!4144 = distinct !DILexicalBlock(scope: !4145, file: !3809, line: 46, column: 9)
!4145 = distinct !DILexicalBlock(scope: !4137, file: !3809, line: 42, column: 6)
!4146 = !DILocalVariable(name: "second", scope: !4144, file: !3809, line: 48, type: !2439)
!4147 = !DILocation(line: 0, scope: !4137)
!4148 = !DILocation(line: 36, column: 29, scope: !4137)
!4149 = !DILocation(line: 42, column: 6, scope: !4145)
!4150 = !DILocation(line: 42, column: 28, scope: !4145)
!4151 = !DILocation(line: 42, column: 6, scope: !4137)
!4152 = !DILocation(line: 44, column: 24, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4145, file: !3809, line: 42, column: 34)
!4154 = !DILocation(line: 44, column: 23, scope: !4153)
!4155 = !DILocation(line: 44, column: 6, scope: !4153)
!4156 = !DILocation(line: 44, column: 20, scope: !4153)
!4157 = !DILocation(line: 45, column: 6, scope: !4153)
!4158 = !DILocation(line: 45, column: 11, scope: !4153)
!4159 = !DILocation(line: 46, column: 2, scope: !4153)
!4160 = !DILocation(line: 47, column: 21, scope: !4144)
!4161 = !DILocation(line: 0, scope: !4144)
!4162 = !DILocation(line: 50, column: 6, scope: !4144)
!4163 = !DILocation(line: 50, column: 11, scope: !4144)
!4164 = !DILocation(line: 51, column: 3, scope: !4144)
!4165 = !DILocation(line: 52, column: 3, scope: !4144)
!4166 = !DILocation(line: 58, column: 1, scope: !4137)
!4167 = distinct !DISubprogram(name: "next_free_chunk", scope: !2421, file: !2421, line: 182, type: !3894, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4168)
!4168 = !{!4169, !4170}
!4169 = !DILocalVariable(name: "h", arg: 1, scope: !4167, file: !2421, line: 182, type: !2434)
!4170 = !DILocalVariable(name: "c", arg: 2, scope: !4167, file: !2421, line: 182, type: !2439)
!4171 = !DILocation(line: 0, scope: !4167)
!4172 = !DILocation(line: 184, column: 9, scope: !4167)
!4173 = !DILocation(line: 184, column: 2, scope: !4167)
!4174 = distinct !DISubprogram(name: "sys_heap_usable_size", scope: !3809, file: !3809, line: 200, type: !4175, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4177)
!4175 = !DISubroutineType(types: !4176)
!4176 = !{!252, !3812, !102}
!4177 = !{!4178, !4179, !4180, !4181, !4182, !4183, !4184}
!4178 = !DILocalVariable(name: "heap", arg: 1, scope: !4174, file: !3809, line: 200, type: !3812)
!4179 = !DILocalVariable(name: "mem", arg: 2, scope: !4174, file: !3809, line: 200, type: !102)
!4180 = !DILocalVariable(name: "h", scope: !4174, file: !3809, line: 202, type: !2434)
!4181 = !DILocalVariable(name: "c", scope: !4174, file: !3809, line: 203, type: !2439)
!4182 = !DILocalVariable(name: "addr", scope: !4174, file: !3809, line: 204, type: !252)
!4183 = !DILocalVariable(name: "chunk_base", scope: !4174, file: !3809, line: 205, type: !252)
!4184 = !DILocalVariable(name: "chunk_sz", scope: !4174, file: !3809, line: 206, type: !252)
!4185 = !DILocation(line: 0, scope: !4174)
!4186 = !DILocation(line: 202, column: 27, scope: !4174)
!4187 = !DILocation(line: 203, column: 16, scope: !4174)
!4188 = !DILocation(line: 204, column: 16, scope: !4174)
!4189 = !DILocation(line: 205, column: 31, scope: !4174)
!4190 = !DILocation(line: 205, column: 22, scope: !4174)
!4191 = !DILocation(line: 206, column: 20, scope: !4174)
!4192 = !DILocation(line: 206, column: 37, scope: !4174)
!4193 = !DILocation(line: 208, column: 26, scope: !4174)
!4194 = !DILocation(line: 208, column: 18, scope: !4174)
!4195 = !DILocation(line: 208, column: 2, scope: !4174)
!4196 = distinct !DISubprogram(name: "sys_heap_alloc", scope: !3809, file: !3809, line: 263, type: !4197, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4199)
!4197 = !DISubroutineType(types: !4198)
!4198 = !{!102, !3812, !252}
!4199 = !{!4200, !4201, !4202, !4203, !4204, !4205}
!4200 = !DILocalVariable(name: "heap", arg: 1, scope: !4196, file: !3809, line: 263, type: !3812)
!4201 = !DILocalVariable(name: "bytes", arg: 2, scope: !4196, file: !3809, line: 263, type: !252)
!4202 = !DILocalVariable(name: "h", scope: !4196, file: !3809, line: 265, type: !2434)
!4203 = !DILocalVariable(name: "mem", scope: !4196, file: !3809, line: 266, type: !102)
!4204 = !DILocalVariable(name: "chunk_sz", scope: !4196, file: !3809, line: 272, type: !3935)
!4205 = !DILocalVariable(name: "c", scope: !4196, file: !3809, line: 273, type: !2439)
!4206 = !DILocation(line: 0, scope: !4196)
!4207 = !DILocation(line: 265, column: 27, scope: !4196)
!4208 = !DILocation(line: 268, column: 12, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4196, file: !3809, line: 268, column: 6)
!4210 = !DILocation(line: 268, column: 18, scope: !4209)
!4211 = !DILocation(line: 268, column: 21, scope: !4209)
!4212 = !DILocation(line: 268, column: 6, scope: !4196)
!4213 = !DILocation(line: 272, column: 23, scope: !4196)
!4214 = !DILocation(line: 273, column: 16, scope: !4196)
!4215 = !DILocation(line: 274, column: 8, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4196, file: !3809, line: 274, column: 6)
!4217 = !DILocation(line: 274, column: 6, scope: !4196)
!4218 = !DILocation(line: 279, column: 6, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4196, file: !3809, line: 279, column: 6)
!4220 = !DILocation(line: 279, column: 23, scope: !4219)
!4221 = !DILocation(line: 279, column: 6, scope: !4196)
!4222 = !DILocation(line: 280, column: 24, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4219, file: !3809, line: 279, column: 35)
!4224 = !DILocation(line: 280, column: 3, scope: !4223)
!4225 = !DILocation(line: 281, column: 3, scope: !4223)
!4226 = !DILocation(line: 282, column: 2, scope: !4223)
!4227 = !DILocation(line: 284, column: 2, scope: !4196)
!4228 = !DILocation(line: 286, column: 8, scope: !4196)
!4229 = !DILocation(line: 298, column: 2, scope: !4196)
!4230 = !DILocation(line: 299, column: 1, scope: !4196)
!4231 = distinct !DISubprogram(name: "size_too_big", scope: !2421, file: !2421, line: 256, type: !4232, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4234)
!4232 = !DISubroutineType(types: !4233)
!4233 = !{!136, !2434, !252}
!4234 = !{!4235, !4236}
!4235 = !DILocalVariable(name: "h", arg: 1, scope: !4231, file: !2421, line: 256, type: !2434)
!4236 = !DILocalVariable(name: "bytes", arg: 2, scope: !4231, file: !2421, line: 256, type: !252)
!4237 = !DILocation(line: 0, scope: !4231)
!4238 = !DILocation(line: 262, column: 16, scope: !4231)
!4239 = !DILocation(line: 262, column: 36, scope: !4231)
!4240 = !DILocation(line: 262, column: 30, scope: !4231)
!4241 = !DILocation(line: 262, column: 2, scope: !4231)
!4242 = distinct !DISubprogram(name: "alloc_chunk", scope: !3809, file: !3809, line: 211, type: !4243, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4245)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!2439, !2434, !3935}
!4245 = !{!4246, !4247, !4248, !4249, !4250, !4253, !4254, !4256, !4257, !4260}
!4246 = !DILocalVariable(name: "h", arg: 1, scope: !4242, file: !3809, line: 211, type: !2434)
!4247 = !DILocalVariable(name: "sz", arg: 2, scope: !4242, file: !3809, line: 211, type: !3935)
!4248 = !DILocalVariable(name: "bi", scope: !4242, file: !3809, line: 213, type: !107)
!4249 = !DILocalVariable(name: "b", scope: !4242, file: !3809, line: 214, type: !3998)
!4250 = !DILocalVariable(name: "first", scope: !4251, file: !3809, line: 233, type: !2439)
!4251 = distinct !DILexicalBlock(scope: !4252, file: !3809, line: 232, column: 15)
!4252 = distinct !DILexicalBlock(scope: !4242, file: !3809, line: 232, column: 6)
!4253 = !DILocalVariable(name: "i", scope: !4251, file: !3809, line: 234, type: !107)
!4254 = !DILocalVariable(name: "c", scope: !4255, file: !3809, line: 236, type: !2439)
!4255 = distinct !DILexicalBlock(scope: !4251, file: !3809, line: 235, column: 6)
!4256 = !DILocalVariable(name: "bmask", scope: !4242, file: !3809, line: 249, type: !162)
!4257 = !DILocalVariable(name: "minbucket", scope: !4258, file: !3809, line: 252, type: !107)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !3809, line: 251, column: 19)
!4259 = distinct !DILexicalBlock(scope: !4242, file: !3809, line: 251, column: 6)
!4260 = !DILocalVariable(name: "c", scope: !4258, file: !3809, line: 253, type: !2439)
!4261 = !DILocation(line: 0, scope: !4242)
!4262 = !DILocation(line: 213, column: 11, scope: !4242)
!4263 = !DILocation(line: 232, column: 9, scope: !4252)
!4264 = !DILocation(line: 232, column: 6, scope: !4252)
!4265 = !DILocation(line: 232, column: 6, scope: !4242)
!4266 = !DILocation(line: 236, column: 21, scope: !4255)
!4267 = !DILocation(line: 0, scope: !4251)
!4268 = !DILocation(line: 0, scope: !4255)
!4269 = !DILocation(line: 237, column: 8, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4255, file: !3809, line: 237, column: 8)
!4271 = !DILocation(line: 237, column: 25, scope: !4270)
!4272 = !DILocation(line: 237, column: 8, scope: !4255)
!4273 = !DILocation(line: 238, column: 5, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4270, file: !3809, line: 237, column: 32)
!4275 = !DILocation(line: 241, column: 14, scope: !4255)
!4276 = !DILocation(line: 241, column: 12, scope: !4255)
!4277 = !DILocation(line: 243, column: 12, scope: !4251)
!4278 = !DILocation(line: 243, column: 16, scope: !4251)
!4279 = distinct !{!4279, !4280, !4281}
!4280 = !DILocation(line: 235, column: 3, scope: !4251)
!4281 = !DILocation(line: 243, column: 35, scope: !4251)
!4282 = !DILocation(line: 249, column: 22, scope: !4242)
!4283 = !DILocation(line: 249, column: 39, scope: !4242)
!4284 = !DILocation(line: 249, column: 36, scope: !4242)
!4285 = !DILocation(line: 251, column: 12, scope: !4259)
!4286 = !DILocation(line: 251, column: 6, scope: !4242)
!4287 = !DILocation(line: 252, column: 19, scope: !4258)
!4288 = !DILocation(line: 0, scope: !4258)
!4289 = !DILocation(line: 253, column: 39, scope: !4258)
!4290 = !DILocation(line: 255, column: 3, scope: !4258)
!4291 = !DILocation(line: 261, column: 1, scope: !4242)
!4292 = distinct !DISubprogram(name: "split_chunks", scope: !3809, file: !3809, line: 109, type: !3928, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4293)
!4293 = !{!4294, !4295, !4296, !4297, !4298, !4299}
!4294 = !DILocalVariable(name: "h", arg: 1, scope: !4292, file: !3809, line: 109, type: !2434)
!4295 = !DILocalVariable(name: "lc", arg: 2, scope: !4292, file: !3809, line: 109, type: !2439)
!4296 = !DILocalVariable(name: "rc", arg: 3, scope: !4292, file: !3809, line: 109, type: !2439)
!4297 = !DILocalVariable(name: "sz0", scope: !4292, file: !3809, line: 114, type: !3935)
!4298 = !DILocalVariable(name: "lsz", scope: !4292, file: !3809, line: 115, type: !3935)
!4299 = !DILocalVariable(name: "rsz", scope: !4292, file: !3809, line: 116, type: !3935)
!4300 = !DILocation(line: 0, scope: !4292)
!4301 = !DILocation(line: 114, column: 18, scope: !4292)
!4302 = !DILocation(line: 115, column: 21, scope: !4292)
!4303 = !DILocation(line: 116, column: 22, scope: !4292)
!4304 = !DILocation(line: 118, column: 2, scope: !4292)
!4305 = !DILocation(line: 119, column: 2, scope: !4292)
!4306 = !DILocation(line: 120, column: 2, scope: !4292)
!4307 = !DILocation(line: 121, column: 25, scope: !4292)
!4308 = !DILocation(line: 121, column: 2, scope: !4292)
!4309 = !DILocation(line: 122, column: 1, scope: !4292)
!4310 = distinct !DISubprogram(name: "chunk_mem", scope: !3809, file: !3809, line: 24, type: !4311, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4313)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!102, !2434, !2439}
!4313 = !{!4314, !4315, !4316, !4317}
!4314 = !DILocalVariable(name: "h", arg: 1, scope: !4310, file: !3809, line: 24, type: !2434)
!4315 = !DILocalVariable(name: "c", arg: 2, scope: !4310, file: !3809, line: 24, type: !2439)
!4316 = !DILocalVariable(name: "buf", scope: !4310, file: !3809, line: 26, type: !2428)
!4317 = !DILocalVariable(name: "ret", scope: !4310, file: !3809, line: 27, type: !182)
!4318 = !DILocation(line: 0, scope: !4310)
!4319 = !DILocation(line: 26, column: 22, scope: !4310)
!4320 = !DILocation(line: 27, column: 38, scope: !4310)
!4321 = !DILocation(line: 31, column: 2, scope: !4310)
!4322 = distinct !DISubprogram(name: "sys_heap_aligned_alloc", scope: !3809, file: !3809, line: 301, type: !4323, scopeLine: 302, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4325)
!4323 = !DISubroutineType(types: !4324)
!4324 = !{!102, !3812, !252, !252}
!4325 = !{!4326, !4327, !4328, !4329, !4330, !4331, !4332, !4333, !4334, !4335, !4336, !4337}
!4326 = !DILocalVariable(name: "heap", arg: 1, scope: !4322, file: !3809, line: 301, type: !3812)
!4327 = !DILocalVariable(name: "align", arg: 2, scope: !4322, file: !3809, line: 301, type: !252)
!4328 = !DILocalVariable(name: "bytes", arg: 3, scope: !4322, file: !3809, line: 301, type: !252)
!4329 = !DILocalVariable(name: "h", scope: !4322, file: !3809, line: 303, type: !2434)
!4330 = !DILocalVariable(name: "gap", scope: !4322, file: !3809, line: 304, type: !252)
!4331 = !DILocalVariable(name: "rew", scope: !4322, file: !3809, line: 304, type: !252)
!4332 = !DILocalVariable(name: "padded_sz", scope: !4322, file: !3809, line: 335, type: !3935)
!4333 = !DILocalVariable(name: "c0", scope: !4322, file: !3809, line: 336, type: !2439)
!4334 = !DILocalVariable(name: "mem", scope: !4322, file: !3809, line: 341, type: !182)
!4335 = !DILocalVariable(name: "end", scope: !4322, file: !3809, line: 345, type: !2428)
!4336 = !DILocalVariable(name: "c", scope: !4322, file: !3809, line: 348, type: !2439)
!4337 = !DILocalVariable(name: "c_end", scope: !4322, file: !3809, line: 349, type: !2439)
!4338 = !DILocation(line: 0, scope: !4322)
!4339 = !DILocation(line: 303, column: 27, scope: !4322)
!4340 = !DILocation(line: 313, column: 16, scope: !4322)
!4341 = !DILocation(line: 313, column: 14, scope: !4322)
!4342 = !DILocation(line: 314, column: 12, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4322, file: !3809, line: 314, column: 6)
!4344 = !DILocation(line: 314, column: 6, scope: !4322)
!4345 = !DILocation(line: 315, column: 9, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4343, file: !3809, line: 314, column: 20)
!4347 = !DILocation(line: 316, column: 9, scope: !4346)
!4348 = !DILocation(line: 318, column: 13, scope: !4349)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !3809, line: 318, column: 7)
!4350 = distinct !DILexicalBlock(scope: !4343, file: !3809, line: 317, column: 9)
!4351 = !DILocation(line: 318, column: 7, scope: !4350)
!4352 = !DILocation(line: 319, column: 11, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4349, file: !3809, line: 318, column: 39)
!4354 = !DILocation(line: 319, column: 4, scope: !4353)
!4355 = !DILocation(line: 0, scope: !4343)
!4356 = !DILocation(line: 326, column: 12, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4322, file: !3809, line: 326, column: 6)
!4358 = !DILocation(line: 326, column: 17, scope: !4357)
!4359 = !DILocation(line: 326, column: 20, scope: !4357)
!4360 = !DILocation(line: 326, column: 6, scope: !4322)
!4361 = !DILocation(line: 335, column: 50, scope: !4322)
!4362 = !DILocation(line: 335, column: 58, scope: !4322)
!4363 = !DILocation(line: 335, column: 24, scope: !4322)
!4364 = !DILocation(line: 336, column: 17, scope: !4322)
!4365 = !DILocation(line: 338, column: 9, scope: !4366)
!4366 = distinct !DILexicalBlock(scope: !4322, file: !3809, line: 338, column: 6)
!4367 = !DILocation(line: 338, column: 6, scope: !4322)
!4368 = !DILocation(line: 341, column: 17, scope: !4322)
!4369 = !DILocation(line: 344, column: 20, scope: !4322)
!4370 = !DILocation(line: 344, column: 8, scope: !4322)
!4371 = !DILocation(line: 344, column: 47, scope: !4322)
!4372 = !DILocation(line: 345, column: 39, scope: !4322)
!4373 = !DILocation(line: 348, column: 16, scope: !4322)
!4374 = !DILocation(line: 349, column: 26, scope: !4322)
!4375 = !DILocation(line: 349, column: 24, scope: !4322)
!4376 = !DILocation(line: 353, column: 8, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4322, file: !3809, line: 353, column: 6)
!4378 = !DILocation(line: 353, column: 6, scope: !4322)
!4379 = !DILocation(line: 354, column: 3, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4377, file: !3809, line: 353, column: 14)
!4381 = !DILocation(line: 355, column: 3, scope: !4380)
!4382 = !DILocation(line: 356, column: 2, scope: !4380)
!4383 = !DILocation(line: 359, column: 6, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4322, file: !3809, line: 359, column: 6)
!4385 = !DILocation(line: 359, column: 24, scope: !4384)
!4386 = !DILocation(line: 359, column: 6, scope: !4322)
!4387 = !DILocation(line: 360, column: 3, scope: !4388)
!4388 = distinct !DILexicalBlock(scope: !4384, file: !3809, line: 359, column: 33)
!4389 = !DILocation(line: 361, column: 3, scope: !4388)
!4390 = !DILocation(line: 362, column: 2, scope: !4388)
!4391 = !DILocation(line: 364, column: 2, scope: !4322)
!4392 = !DILocation(line: 377, column: 1, scope: !4322)
!4393 = distinct !DISubprogram(name: "sys_heap_aligned_realloc", scope: !3809, file: !3809, line: 379, type: !4394, scopeLine: 381, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4396)
!4394 = !DISubroutineType(types: !4395)
!4395 = !{!102, !3812, !102, !252, !252}
!4396 = !{!4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4412, !4413}
!4397 = !DILocalVariable(name: "heap", arg: 1, scope: !4393, file: !3809, line: 379, type: !3812)
!4398 = !DILocalVariable(name: "ptr", arg: 2, scope: !4393, file: !3809, line: 379, type: !102)
!4399 = !DILocalVariable(name: "align", arg: 3, scope: !4393, file: !3809, line: 380, type: !252)
!4400 = !DILocalVariable(name: "bytes", arg: 4, scope: !4393, file: !3809, line: 380, type: !252)
!4401 = !DILocalVariable(name: "h", scope: !4393, file: !3809, line: 382, type: !2434)
!4402 = !DILocalVariable(name: "c", scope: !4393, file: !3809, line: 399, type: !2439)
!4403 = !DILocalVariable(name: "rc", scope: !4393, file: !3809, line: 400, type: !2439)
!4404 = !DILocalVariable(name: "align_gap", scope: !4393, file: !3809, line: 401, type: !252)
!4405 = !DILocalVariable(name: "chunks_need", scope: !4393, file: !3809, line: 402, type: !3935)
!4406 = !DILocalVariable(name: "split_size", scope: !4407, file: !3809, line: 435, type: !3935)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !3809, line: 433, column: 61)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !3809, line: 432, column: 13)
!4409 = distinct !DILexicalBlock(scope: !4410, file: !3809, line: 409, column: 13)
!4410 = distinct !DILexicalBlock(scope: !4411, file: !3809, line: 406, column: 13)
!4411 = distinct !DILexicalBlock(scope: !4393, file: !3809, line: 404, column: 6)
!4412 = !DILocalVariable(name: "ptr2", scope: !4393, file: !3809, line: 474, type: !102)
!4413 = !DILocalVariable(name: "prev_size", scope: !4414, file: !3809, line: 477, type: !252)
!4414 = distinct !DILexicalBlock(scope: !4415, file: !3809, line: 476, column: 20)
!4415 = distinct !DILexicalBlock(scope: !4393, file: !3809, line: 476, column: 6)
!4416 = !DILocation(line: 0, scope: !4393)
!4417 = !DILocation(line: 382, column: 27, scope: !4393)
!4418 = !DILocation(line: 385, column: 10, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4393, file: !3809, line: 385, column: 6)
!4420 = !DILocation(line: 385, column: 6, scope: !4393)
!4421 = !DILocation(line: 386, column: 10, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4419, file: !3809, line: 385, column: 19)
!4423 = !DILocation(line: 386, column: 3, scope: !4422)
!4424 = !DILocation(line: 388, column: 12, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4393, file: !3809, line: 388, column: 6)
!4426 = !DILocation(line: 388, column: 6, scope: !4393)
!4427 = !DILocation(line: 389, column: 3, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4425, file: !3809, line: 388, column: 18)
!4429 = !DILocation(line: 390, column: 3, scope: !4428)
!4430 = !DILocation(line: 395, column: 6, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4393, file: !3809, line: 395, column: 6)
!4432 = !DILocation(line: 395, column: 6, scope: !4393)
!4433 = !DILocation(line: 399, column: 16, scope: !4393)
!4434 = !DILocation(line: 400, column: 17, scope: !4393)
!4435 = !DILocation(line: 401, column: 49, scope: !4393)
!4436 = !DILocation(line: 401, column: 36, scope: !4393)
!4437 = !DILocation(line: 402, column: 52, scope: !4393)
!4438 = !DILocation(line: 402, column: 26, scope: !4393)
!4439 = !DILocation(line: 404, column: 6, scope: !4411)
!4440 = !DILocation(line: 404, column: 12, scope: !4411)
!4441 = !DILocation(line: 404, column: 40, scope: !4411)
!4442 = !DILocation(line: 404, column: 31, scope: !4411)
!4443 = !DILocation(line: 404, column: 6, scope: !4393)
!4444 = !DILocation(line: 406, column: 13, scope: !4410)
!4445 = !DILocation(line: 406, column: 30, scope: !4410)
!4446 = !DILocation(line: 406, column: 13, scope: !4411)
!4447 = !DILocation(line: 409, column: 30, scope: !4409)
!4448 = !DILocation(line: 409, column: 13, scope: !4410)
!4449 = !DILocation(line: 420, column: 24, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4409, file: !3809, line: 409, column: 45)
!4451 = !DILocation(line: 420, column: 3, scope: !4450)
!4452 = !DILocation(line: 421, column: 3, scope: !4450)
!4453 = !DILocation(line: 422, column: 3, scope: !4450)
!4454 = !DILocation(line: 431, column: 3, scope: !4450)
!4455 = !DILocation(line: 432, column: 14, scope: !4408)
!4456 = !DILocation(line: 432, column: 32, scope: !4408)
!4457 = !DILocation(line: 433, column: 26, scope: !4408)
!4458 = !DILocation(line: 433, column: 24, scope: !4408)
!4459 = !DILocation(line: 433, column: 44, scope: !4408)
!4460 = !DILocation(line: 432, column: 13, scope: !4409)
!4461 = !DILocation(line: 435, column: 38, scope: !4407)
!4462 = !DILocation(line: 0, scope: !4407)
!4463 = !DILocation(line: 445, column: 3, scope: !4407)
!4464 = !DILocation(line: 447, column: 20, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4407, file: !3809, line: 447, column: 7)
!4466 = !DILocation(line: 447, column: 18, scope: !4465)
!4467 = !DILocation(line: 447, column: 7, scope: !4407)
!4468 = !DILocation(line: 448, column: 27, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4465, file: !3809, line: 447, column: 39)
!4470 = !DILocation(line: 448, column: 4, scope: !4469)
!4471 = !DILocation(line: 449, column: 4, scope: !4469)
!4472 = !DILocation(line: 450, column: 3, scope: !4469)
!4473 = !DILocation(line: 452, column: 3, scope: !4407)
!4474 = !DILocation(line: 453, column: 3, scope: !4407)
!4475 = !DILocation(line: 474, column: 15, scope: !4393)
!4476 = !DILocation(line: 476, column: 11, scope: !4415)
!4477 = !DILocation(line: 476, column: 6, scope: !4393)
!4478 = !DILocation(line: 477, column: 42, scope: !4414)
!4479 = !DILocation(line: 477, column: 22, scope: !4414)
!4480 = !DILocation(line: 477, column: 60, scope: !4414)
!4481 = !DILocation(line: 0, scope: !4414)
!4482 = !DILocation(line: 479, column: 21, scope: !4414)
!4483 = !DILocation(line: 479, column: 3, scope: !4414)
!4484 = !DILocation(line: 480, column: 3, scope: !4414)
!4485 = !DILocation(line: 481, column: 2, scope: !4414)
!4486 = !DILocation(line: 483, column: 1, scope: !4393)
!4487 = distinct !DISubprogram(name: "chunksz_to_bytes", scope: !2421, file: !2421, line: 245, type: !4488, scopeLine: 246, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4490)
!4488 = !DISubroutineType(types: !4489)
!4489 = !{!252, !2434, !3935}
!4490 = !{!4491, !4492}
!4491 = !DILocalVariable(name: "h", arg: 1, scope: !4487, file: !2421, line: 245, type: !2434)
!4492 = !DILocalVariable(name: "chunksz_in", arg: 2, scope: !4487, file: !2421, line: 245, type: !3935)
!4493 = !DILocation(line: 0, scope: !4487)
!4494 = !DILocation(line: 247, column: 20, scope: !4487)
!4495 = !DILocation(line: 247, column: 33, scope: !4487)
!4496 = !DILocation(line: 247, column: 2, scope: !4487)
!4497 = distinct !DISubprogram(name: "sys_heap_init", scope: !3809, file: !3809, line: 485, type: !4498, scopeLine: 486, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2417, retainedNodes: !4500)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{null, !3812, !102, !252}
!4500 = !{!4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510}
!4501 = !DILocalVariable(name: "heap", arg: 1, scope: !4497, file: !3809, line: 485, type: !3812)
!4502 = !DILocalVariable(name: "mem", arg: 2, scope: !4497, file: !3809, line: 485, type: !102)
!4503 = !DILocalVariable(name: "bytes", arg: 3, scope: !4497, file: !3809, line: 485, type: !252)
!4504 = !DILocalVariable(name: "addr", scope: !4497, file: !3809, line: 502, type: !22)
!4505 = !DILocalVariable(name: "end", scope: !4497, file: !3809, line: 503, type: !22)
!4506 = !DILocalVariable(name: "heap_sz", scope: !4497, file: !3809, line: 504, type: !3935)
!4507 = !DILocalVariable(name: "h", scope: !4497, file: !3809, line: 509, type: !2434)
!4508 = !DILocalVariable(name: "nb_buckets", scope: !4497, file: !3809, line: 520, type: !107)
!4509 = !DILocalVariable(name: "chunk0_size", scope: !4497, file: !3809, line: 521, type: !3935)
!4510 = !DILocalVariable(name: "i", scope: !4511, file: !3809, line: 526, type: !107)
!4511 = distinct !DILexicalBlock(scope: !4497, file: !3809, line: 526, column: 2)
!4512 = !DILocation(line: 0, scope: !4497)
!4513 = !DILocation(line: 499, column: 8, scope: !4497)
!4514 = !DILocation(line: 502, column: 19, scope: !4497)
!4515 = !DILocation(line: 503, column: 18, scope: !4497)
!4516 = !DILocation(line: 504, column: 27, scope: !4497)
!4517 = !DILocation(line: 504, column: 35, scope: !4497)
!4518 = !DILocation(line: 509, column: 21, scope: !4497)
!4519 = !DILocation(line: 510, column: 8, scope: !4497)
!4520 = !DILocation(line: 510, column: 13, scope: !4497)
!4521 = !DILocation(line: 511, column: 5, scope: !4497)
!4522 = !DILocation(line: 511, column: 15, scope: !4497)
!4523 = !DILocation(line: 512, column: 5, scope: !4497)
!4524 = !DILocation(line: 512, column: 19, scope: !4497)
!4525 = !DILocation(line: 520, column: 19, scope: !4497)
!4526 = !DILocation(line: 522, column: 21, scope: !4497)
!4527 = !DILocation(line: 521, column: 56, scope: !4497)
!4528 = !DILocation(line: 521, column: 26, scope: !4497)
!4529 = !DILocation(line: 0, scope: !4511)
!4530 = !DILocation(line: 526, column: 20, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4511, file: !3809, line: 526, column: 2)
!4532 = !DILocation(line: 526, column: 2, scope: !4511)
!4533 = !DILocation(line: 531, column: 2, scope: !4497)
!4534 = !DILocation(line: 532, column: 2, scope: !4497)
!4535 = !DILocation(line: 533, column: 2, scope: !4497)
!4536 = !DILocation(line: 536, column: 41, scope: !4497)
!4537 = !DILocation(line: 536, column: 2, scope: !4497)
!4538 = !DILocation(line: 537, column: 2, scope: !4497)
!4539 = !DILocation(line: 540, column: 2, scope: !4497)
!4540 = !DILocation(line: 541, column: 2, scope: !4497)
!4541 = !DILocation(line: 542, column: 2, scope: !4497)
!4542 = !DILocation(line: 544, column: 2, scope: !4497)
!4543 = !DILocation(line: 545, column: 1, scope: !4497)
!4544 = !DILocation(line: 527, column: 17, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4531, file: !3809, line: 526, column: 39)
!4546 = !DILocation(line: 527, column: 22, scope: !4545)
!4547 = !DILocation(line: 526, column: 35, scope: !4531)
!4548 = distinct !{!4548, !4532, !4549}
!4549 = !DILocation(line: 528, column: 2, scope: !4511)
!4550 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2454, file: !2454, line: 1338, type: !4551, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !4559)
!4551 = !DISubroutineType(types: !4552)
!4552 = !{!107, !3540, !102, !123, !4553, !162}
!4553 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3506, line: 99, baseType: !4554)
!4554 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3506, line: 40, baseType: !4555)
!4555 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2454, baseType: !4556)
!4556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4557)
!4557 = !{!4558}
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4556, file: !2454, baseType: !102, size: 32)
!4559 = !{!4560, !4561, !4562, !4563, !4564, !4565, !4569, !4570, !4571, !4573, !4578, !4623, !4626, !4629, !4630, !4631, !4632, !4633, !4634, !4635, !4638, !4639, !4640, !4644, !4647, !4649, !4652, !4653, !4654, !4659, !4665, !4668, !4672, !4678, !4682, !4685, !4687, !4690}
!4560 = !DILocalVariable(name: "out", arg: 1, scope: !4550, file: !2454, line: 1338, type: !3540)
!4561 = !DILocalVariable(name: "ctx", arg: 2, scope: !4550, file: !2454, line: 1338, type: !102)
!4562 = !DILocalVariable(name: "fp", arg: 3, scope: !4550, file: !2454, line: 1338, type: !123)
!4563 = !DILocalVariable(name: "ap", arg: 4, scope: !4550, file: !2454, line: 1339, type: !4553)
!4564 = !DILocalVariable(name: "flags", arg: 5, scope: !4550, file: !2454, line: 1339, type: !162)
!4565 = !DILocalVariable(name: "buf", scope: !4550, file: !2454, line: 1341, type: !4566)
!4566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !125, size: 176, elements: !4567)
!4567 = !{!4568}
!4568 = !DISubrange(count: 22)
!4569 = !DILocalVariable(name: "count", scope: !4550, file: !2454, line: 1342, type: !252)
!4570 = !DILocalVariable(name: "sint", scope: !4550, file: !2454, line: 1343, type: !2473)
!4571 = !DILocalVariable(name: "tagged_ap", scope: !4550, file: !2454, line: 1345, type: !4572)
!4572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!4573 = !DILocalVariable(name: "rc", scope: !4574, file: !2454, line: 1377, type: !107)
!4574 = distinct !DILexicalBlock(scope: !4575, file: !2454, line: 1377, column: 4)
!4575 = distinct !DILexicalBlock(scope: !4576, file: !2454, line: 1376, column: 19)
!4576 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1376, column: 7)
!4577 = distinct !DILexicalBlock(scope: !4550, file: !2454, line: 1375, column: 19)
!4578 = !DILocalVariable(name: "state", scope: !4577, file: !2454, line: 1395, type: !4579)
!4579 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4550, file: !2454, line: 1392, size: 192, elements: !4580)
!4580 = !{!4581, !4591}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4579, file: !2454, line: 1393, baseType: !4582, size: 64)
!4582 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2454, line: 166, size: 64, elements: !4583)
!4583 = !{!4584, !4585, !4586, !4588, !4590}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4582, file: !2454, line: 168, baseType: !2473, size: 64)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4582, file: !2454, line: 171, baseType: !2476, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4582, file: !2454, line: 174, baseType: !4587, size: 64)
!4587 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4582, file: !2454, line: 177, baseType: !4589, size: 64)
!4589 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4582, file: !2454, line: 180, baseType: !102, size: 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4579, file: !2454, line: 1394, baseType: !4592, size: 96, offset: 64)
!4592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2454, line: 189, size: 96, elements: !4593)
!4593 = !{!4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4618}
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4592, file: !2454, line: 191, baseType: !136, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4592, file: !2454, line: 194, baseType: !136, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4592, file: !2454, line: 197, baseType: !136, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4592, file: !2454, line: 200, baseType: !136, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4592, file: !2454, line: 203, baseType: !136, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4592, file: !2454, line: 206, baseType: !136, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4592, file: !2454, line: 209, baseType: !136, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4592, file: !2454, line: 212, baseType: !136, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4592, file: !2454, line: 219, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4592, file: !2454, line: 222, baseType: !136, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4592, file: !2454, line: 229, baseType: !136, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4592, file: !2454, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4592, file: !2454, line: 238, baseType: !136, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4592, file: !2454, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4592, file: !2454, line: 244, baseType: !136, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4592, file: !2454, line: 247, baseType: !136, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4592, file: !2454, line: 252, baseType: !136, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4592, file: !2454, line: 257, baseType: !136, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4592, file: !2454, line: 260, baseType: !134, size: 8, offset: 24)
!4613 = !DIDerivedType(tag: DW_TAG_member, scope: !4592, file: !2454, line: 262, baseType: !4614, size: 32, offset: 32)
!4614 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4592, file: !2454, line: 262, size: 32, elements: !4615)
!4615 = !{!4616, !4617}
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4614, file: !2454, line: 267, baseType: !107, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4614, file: !2454, line: 289, baseType: !107, size: 32)
!4618 = !DIDerivedType(tag: DW_TAG_member, scope: !4592, file: !2454, line: 292, baseType: !4619, size: 32, offset: 64)
!4619 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4592, file: !2454, line: 292, size: 32, elements: !4620)
!4620 = !{!4621, !4622}
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4619, file: !2454, line: 297, baseType: !107, size: 32)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4619, file: !2454, line: 306, baseType: !107, size: 32)
!4623 = !DILocalVariable(name: "conv", scope: !4577, file: !2454, line: 1400, type: !4624)
!4624 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4625)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 32)
!4626 = !DILocalVariable(name: "value", scope: !4577, file: !2454, line: 1401, type: !4627)
!4627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4628)
!4628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 32)
!4629 = !DILocalVariable(name: "sp", scope: !4577, file: !2454, line: 1402, type: !123)
!4630 = !DILocalVariable(name: "width", scope: !4577, file: !2454, line: 1403, type: !107)
!4631 = !DILocalVariable(name: "precision", scope: !4577, file: !2454, line: 1404, type: !107)
!4632 = !DILocalVariable(name: "bps", scope: !4577, file: !2454, line: 1405, type: !123)
!4633 = !DILocalVariable(name: "bpe", scope: !4577, file: !2454, line: 1406, type: !123)
!4634 = !DILocalVariable(name: "sign", scope: !4577, file: !2454, line: 1407, type: !125)
!4635 = !DILocalVariable(name: "arg", scope: !4636, file: !2454, line: 1432, type: !107)
!4636 = distinct !DILexicalBlock(scope: !4637, file: !2454, line: 1431, column: 24)
!4637 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1431, column: 7)
!4638 = !DILocalVariable(name: "specifier_cat", scope: !4577, file: !2454, line: 1468, type: !2453)
!4639 = !DILocalVariable(name: "length_mod", scope: !4577, file: !2454, line: 1470, type: !2461)
!4640 = !DILocalVariable(name: "rc", scope: !4641, file: !2454, line: 1575, type: !107)
!4641 = distinct !DILexicalBlock(scope: !4642, file: !2454, line: 1575, column: 4)
!4642 = distinct !DILexicalBlock(scope: !4643, file: !2454, line: 1574, column: 43)
!4643 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1574, column: 7)
!4644 = !DILocalVariable(name: "rc", scope: !4645, file: !2454, line: 1584, type: !107)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2454, line: 1584, column: 4)
!4646 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1582, column: 28)
!4647 = !DILocalVariable(name: "len", scope: !4648, file: !2454, line: 1589, type: !252)
!4648 = distinct !DILexicalBlock(scope: !4646, file: !2454, line: 1586, column: 13)
!4649 = !DILocalVariable(name: "len", scope: !4650, file: !2454, line: 1641, type: !252)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !2454, line: 1640, column: 24)
!4651 = distinct !DILexicalBlock(scope: !4646, file: !2454, line: 1640, column: 8)
!4652 = !DILocalVariable(name: "nj_len", scope: !4577, file: !2454, line: 1722, type: !252)
!4653 = !DILocalVariable(name: "pad_len", scope: !4577, file: !2454, line: 1723, type: !107)
!4654 = !DILocalVariable(name: "pad", scope: !4655, file: !2454, line: 1751, type: !125)
!4655 = distinct !DILexicalBlock(scope: !4656, file: !2454, line: 1750, column: 26)
!4656 = distinct !DILexicalBlock(scope: !4657, file: !2454, line: 1750, column: 8)
!4657 = distinct !DILexicalBlock(scope: !4658, file: !2454, line: 1747, column: 18)
!4658 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1747, column: 7)
!4659 = !DILocalVariable(name: "rc", scope: !4660, file: !2454, line: 1758, type: !107)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !2454, line: 1758, column: 7)
!4661 = distinct !DILexicalBlock(scope: !4662, file: !2454, line: 1757, column: 21)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !2454, line: 1757, column: 10)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !2454, line: 1756, column: 26)
!4664 = distinct !DILexicalBlock(scope: !4655, file: !2454, line: 1756, column: 9)
!4665 = !DILocalVariable(name: "rc", scope: !4666, file: !2454, line: 1765, type: !107)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !2454, line: 1765, column: 6)
!4667 = distinct !DILexicalBlock(scope: !4655, file: !2454, line: 1764, column: 25)
!4668 = !DILocalVariable(name: "rc", scope: !4669, file: !2454, line: 1774, type: !107)
!4669 = distinct !DILexicalBlock(scope: !4670, file: !2454, line: 1774, column: 4)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !2454, line: 1773, column: 18)
!4671 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1773, column: 7)
!4672 = !DILocalVariable(name: "rc", scope: !4673, file: !2454, line: 1819, type: !107)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !2454, line: 1819, column: 5)
!4674 = distinct !DILexicalBlock(scope: !4675, file: !2454, line: 1818, column: 44)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !2454, line: 1818, column: 8)
!4676 = distinct !DILexicalBlock(scope: !4677, file: !2454, line: 1817, column: 10)
!4677 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1777, column: 7)
!4678 = !DILocalVariable(name: "rc", scope: !4679, file: !2454, line: 1823, type: !107)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !2454, line: 1823, column: 5)
!4680 = distinct !DILexicalBlock(scope: !4681, file: !2454, line: 1822, column: 26)
!4681 = distinct !DILexicalBlock(scope: !4676, file: !2454, line: 1822, column: 8)
!4682 = !DILocalVariable(name: "rc", scope: !4683, file: !2454, line: 1828, type: !107)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !2454, line: 1828, column: 5)
!4684 = distinct !DILexicalBlock(scope: !4676, file: !2454, line: 1827, column: 26)
!4685 = !DILocalVariable(name: "rc", scope: !4686, file: !2454, line: 1831, type: !107)
!4686 = distinct !DILexicalBlock(scope: !4676, file: !2454, line: 1831, column: 4)
!4687 = !DILocalVariable(name: "rc", scope: !4688, file: !2454, line: 1836, type: !107)
!4688 = distinct !DILexicalBlock(scope: !4689, file: !2454, line: 1836, column: 4)
!4689 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1835, column: 21)
!4690 = !DILabel(scope: !4646, name: "prec_int_pad0", file: !2454, line: 1634)
!4691 = !DILocation(line: 0, scope: !4550)
!4692 = !DILocation(line: 1341, column: 2, scope: !4550)
!4693 = !DILocation(line: 1341, column: 7, scope: !4550)
!4694 = !DILocation(line: 1375, column: 2, scope: !4550)
!4695 = !DILocation(line: 1342, column: 9, scope: !4550)
!4696 = !DILocation(line: 1375, column: 9, scope: !4550)
!4697 = !DILocation(line: 1377, column: 4, scope: !4574)
!4698 = !DILocation(line: 0, scope: !4574)
!4699 = !DILocation(line: 1377, column: 4, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4574, file: !2454, line: 1377, column: 4)
!4701 = distinct !{!4701, !4694, !4702}
!4702 = !DILocation(line: 1839, column: 2, scope: !4550)
!4703 = !DILocation(line: 1392, column: 3, scope: !4577)
!4704 = !DILocation(line: 1395, column: 5, scope: !4577)
!4705 = !DILocation(line: 0, scope: !4577)
!4706 = !DILocation(line: 1409, column: 8, scope: !4577)
!4707 = !DILocation(line: 1414, column: 13, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1414, column: 7)
!4709 = !DILocation(line: 1414, column: 7, scope: !4577)
!4710 = !DILocation(line: 1415, column: 12, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !4708, file: !2454, line: 1414, column: 25)
!4712 = !DILocation(line: 1417, column: 14, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4711, file: !2454, line: 1417, column: 8)
!4714 = !DILocation(line: 1417, column: 8, scope: !4711)
!4715 = !DILocation(line: 1418, column: 21, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4713, file: !2454, line: 1417, column: 19)
!4717 = !DILocation(line: 1419, column: 13, scope: !4716)
!4718 = !DILocation(line: 1420, column: 4, scope: !4716)
!4719 = !DILocation(line: 1421, column: 20, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4708, file: !2454, line: 1421, column: 14)
!4721 = !DILocation(line: 1421, column: 14, scope: !4708)
!4722 = !DILocation(line: 1431, column: 13, scope: !4637)
!4723 = !DILocation(line: 1431, column: 7, scope: !4577)
!4724 = !DILocation(line: 1432, column: 14, scope: !4636)
!4725 = !DILocation(line: 0, scope: !4636)
!4726 = !DILocation(line: 1434, column: 12, scope: !4727)
!4727 = distinct !DILexicalBlock(scope: !4636, file: !2454, line: 1434, column: 8)
!4728 = !DILocation(line: 1434, column: 8, scope: !4636)
!4729 = !DILocation(line: 1435, column: 24, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4727, file: !2454, line: 1434, column: 17)
!4731 = !DILocation(line: 1436, column: 4, scope: !4730)
!4732 = !DILocation(line: 1439, column: 20, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4637, file: !2454, line: 1439, column: 14)
!4734 = !DILocation(line: 1439, column: 14, scope: !4637)
!4735 = !DILocation(line: 1469, column: 37, scope: !4577)
!4736 = !DILocation(line: 1448, column: 20, scope: !4577)
!4737 = !DILocation(line: 1449, column: 22, scope: !4577)
!4738 = !DILocation(line: 1471, column: 34, scope: !4577)
!4739 = !DILocation(line: 1478, column: 7, scope: !4577)
!4740 = !DILocation(line: 1479, column: 4, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4742, file: !2454, line: 1478, column: 40)
!4742 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1478, column: 7)
!4743 = !DILocation(line: 1484, column: 19, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4741, file: !2454, line: 1479, column: 24)
!4745 = !DILocation(line: 1484, column: 17, scope: !4744)
!4746 = !DILocation(line: 1485, column: 5, scope: !4744)
!4747 = !DILocation(line: 1492, column: 20, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2454, line: 1491, column: 12)
!4749 = distinct !DILexicalBlock(scope: !4744, file: !2454, line: 1487, column: 9)
!4750 = !DILocation(line: 1492, column: 18, scope: !4748)
!4751 = !DILocation(line: 1494, column: 5, scope: !4744)
!4752 = !DILocation(line: 1497, column: 23, scope: !4744)
!4753 = !DILocation(line: 1496, column: 17, scope: !4744)
!4754 = !DILocation(line: 1498, column: 5, scope: !4744)
!4755 = !DILocation(line: 1501, column: 23, scope: !4744)
!4756 = !DILocation(line: 1500, column: 17, scope: !4744)
!4757 = !DILocation(line: 1502, column: 5, scope: !4744)
!4758 = !DILocation(line: 1513, column: 23, scope: !4744)
!4759 = !DILocation(line: 1513, column: 6, scope: !4744)
!4760 = !DILocation(line: 1512, column: 17, scope: !4744)
!4761 = !DILocation(line: 1514, column: 5, scope: !4744)
!4762 = !DILocation(line: 0, scope: !4744)
!4763 = !DILocation(line: 1516, column: 8, scope: !4741)
!4764 = !DILocation(line: 1517, column: 19, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !2454, line: 1516, column: 33)
!4766 = distinct !DILexicalBlock(scope: !4741, file: !2454, line: 1516, column: 8)
!4767 = !DILocation(line: 1517, column: 17, scope: !4765)
!4768 = !DILocation(line: 1518, column: 4, scope: !4765)
!4769 = !DILocation(line: 1519, column: 19, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4771, file: !2454, line: 1518, column: 39)
!4771 = distinct !DILexicalBlock(scope: !4766, file: !2454, line: 1518, column: 15)
!4772 = !DILocation(line: 1519, column: 17, scope: !4770)
!4773 = !DILocation(line: 1520, column: 4, scope: !4770)
!4774 = !DILocation(line: 1522, column: 4, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !2454, line: 1521, column: 47)
!4776 = distinct !DILexicalBlock(scope: !4742, file: !2454, line: 1521, column: 14)
!4777 = !DILocation(line: 1527, column: 19, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4775, file: !2454, line: 1522, column: 24)
!4779 = !DILocation(line: 1527, column: 17, scope: !4778)
!4780 = !DILocation(line: 1528, column: 5, scope: !4778)
!4781 = !DILocation(line: 0, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4778, file: !2454, line: 1530, column: 9)
!4783 = !DILocation(line: 1540, column: 23, scope: !4778)
!4784 = !DILocation(line: 1539, column: 17, scope: !4778)
!4785 = !DILocation(line: 1542, column: 5, scope: !4778)
!4786 = !DILocation(line: 1545, column: 23, scope: !4778)
!4787 = !DILocation(line: 1544, column: 17, scope: !4778)
!4788 = !DILocation(line: 1547, column: 5, scope: !4778)
!4789 = !DILocation(line: 1551, column: 23, scope: !4778)
!4790 = !DILocation(line: 1551, column: 6, scope: !4778)
!4791 = !DILocation(line: 1550, column: 17, scope: !4778)
!4792 = !DILocation(line: 1552, column: 5, scope: !4778)
!4793 = !DILocation(line: 0, scope: !4778)
!4794 = !DILocation(line: 1554, column: 8, scope: !4775)
!4795 = !DILocation(line: 1555, column: 19, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4797, file: !2454, line: 1554, column: 33)
!4797 = distinct !DILexicalBlock(scope: !4775, file: !2454, line: 1554, column: 8)
!4798 = !DILocation(line: 1555, column: 17, scope: !4796)
!4799 = !DILocation(line: 1556, column: 4, scope: !4796)
!4800 = !DILocation(line: 1557, column: 19, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !2454, line: 1556, column: 39)
!4802 = distinct !DILexicalBlock(scope: !4797, file: !2454, line: 1556, column: 15)
!4803 = !DILocation(line: 1557, column: 17, scope: !4801)
!4804 = !DILocation(line: 1558, column: 4, scope: !4801)
!4805 = !DILocation(line: 0, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4807, file: !2454, line: 1560, column: 8)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !2454, line: 1559, column: 45)
!4808 = distinct !DILexicalBlock(scope: !4776, file: !2454, line: 1559, column: 14)
!4809 = !DILocation(line: 1566, column: 17, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !2454, line: 1565, column: 46)
!4811 = distinct !DILexicalBlock(scope: !4808, file: !2454, line: 1565, column: 14)
!4812 = !DILocation(line: 1566, column: 15, scope: !4810)
!4813 = !DILocation(line: 1567, column: 3, scope: !4810)
!4814 = !DILocation(line: 1574, column: 21, scope: !4643)
!4815 = !DILocation(line: 1575, column: 4, scope: !4641)
!4816 = !DILocation(line: 0, scope: !4641)
!4817 = !DILocation(line: 1575, column: 4, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4641, file: !2454, line: 1575, column: 4)
!4819 = !DILocation(line: 1582, column: 17, scope: !4577)
!4820 = !DILocation(line: 1582, column: 3, scope: !4577)
!4821 = !DILocation(line: 1584, column: 4, scope: !4645)
!4822 = !DILocation(line: 0, scope: !4645)
!4823 = !DILocation(line: 1584, column: 4, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4645, file: !2454, line: 1584, column: 4)
!4825 = !DILocation(line: 1587, column: 31, scope: !4648)
!4826 = !DILocation(line: 1591, column: 18, scope: !4827)
!4827 = distinct !DILexicalBlock(scope: !4648, file: !2454, line: 1591, column: 8)
!4828 = !DILocation(line: 1591, column: 8, scope: !4648)
!4829 = !DILocation(line: 1592, column: 11, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4827, file: !2454, line: 1591, column: 24)
!4831 = !DILocation(line: 0, scope: !4648)
!4832 = !DILocation(line: 1593, column: 4, scope: !4830)
!4833 = !DILocation(line: 1594, column: 11, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4827, file: !2454, line: 1593, column: 11)
!4835 = !DILocation(line: 1604, column: 51, scope: !4646)
!4836 = !DILocation(line: 1604, column: 13, scope: !4646)
!4837 = !DILocation(line: 1604, column: 11, scope: !4646)
!4838 = !DILocation(line: 1606, column: 4, scope: !4646)
!4839 = !DILocation(line: 1609, column: 14, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4646, file: !2454, line: 1609, column: 8)
!4841 = !DILocation(line: 1609, column: 8, scope: !4646)
!4842 = !DILocation(line: 1619, column: 18, scope: !4646)
!4843 = !DILocation(line: 1620, column: 13, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4646, file: !2454, line: 1620, column: 8)
!4845 = !DILocation(line: 1620, column: 8, scope: !4646)
!4846 = !DILocation(line: 1622, column: 36, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !2454, line: 1620, column: 18)
!4848 = !DILocation(line: 1622, column: 17, scope: !4847)
!4849 = !DILocation(line: 1623, column: 4, scope: !4847)
!4850 = !DILocation(line: 1632, column: 29, scope: !4646)
!4851 = !DILocation(line: 1632, column: 10, scope: !4646)
!4852 = !DILocation(line: 1632, column: 4, scope: !4646)
!4853 = !DILocation(line: 1407, column: 8, scope: !4577)
!4854 = !DILocation(line: 0, scope: !4646)
!4855 = !DILocation(line: 1634, column: 3, scope: !4646)
!4856 = !DILocation(line: 1640, column: 18, scope: !4651)
!4857 = !DILocation(line: 1640, column: 8, scope: !4646)
!4858 = !DILocation(line: 1729, column: 13, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1729, column: 7)
!4860 = !DILocation(line: 1641, column: 22, scope: !4650)
!4861 = !DILocation(line: 0, scope: !4650)
!4862 = !DILocation(line: 1646, column: 21, scope: !4650)
!4863 = !DILocation(line: 1649, column: 13, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4650, file: !2454, line: 1649, column: 9)
!4865 = !DILocation(line: 1649, column: 9, scope: !4650)
!4866 = !DILocation(line: 1650, column: 35, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4864, file: !2454, line: 1649, column: 34)
!4868 = !DILocation(line: 1650, column: 23, scope: !4867)
!4869 = !DILocation(line: 1651, column: 5, scope: !4867)
!4870 = !DILocation(line: 1660, column: 15, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4646, file: !2454, line: 1660, column: 8)
!4872 = !DILocation(line: 1660, column: 19, scope: !4871)
!4873 = !DILocation(line: 1660, column: 8, scope: !4646)
!4874 = !DILocation(line: 1661, column: 23, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4871, file: !2454, line: 1660, column: 28)
!4876 = !DILocation(line: 1661, column: 11, scope: !4875)
!4877 = !DILocation(line: 1665, column: 22, scope: !4875)
!4878 = !DILocation(line: 1666, column: 21, scope: !4875)
!4879 = !DILocation(line: 1668, column: 5, scope: !4875)
!4880 = !DILocation(line: 1677, column: 30, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4882, file: !2454, line: 1676, column: 49)
!4882 = distinct !DILexicalBlock(scope: !4646, file: !2454, line: 1676, column: 8)
!4883 = !DILocation(line: 1677, column: 5, scope: !4881)
!4884 = !DILocation(line: 1680, column: 4, scope: !4646)
!4885 = !DILocation(line: 0, scope: !4827)
!4886 = !DILocation(line: 1597, column: 14, scope: !4648)
!4887 = !DILocation(line: 1699, column: 11, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1699, column: 7)
!4889 = !DILocation(line: 1699, column: 7, scope: !4577)
!4890 = !DILocation(line: 1725, column: 7, scope: !4891)
!4891 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1725, column: 7)
!4892 = !DILocation(line: 1725, column: 12, scope: !4891)
!4893 = !DILocation(line: 1747, column: 13, scope: !4658)
!4894 = !DILocation(line: 1747, column: 7, scope: !4577)
!4895 = !DILocation(line: 1722, column: 24, scope: !4577)
!4896 = !DILocation(line: 1725, column: 7, scope: !4577)
!4897 = !DILocation(line: 1729, column: 7, scope: !4577)
!4898 = !DILocation(line: 1736, column: 13, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4577, file: !2454, line: 1736, column: 7)
!4900 = !DILocation(line: 1735, column: 19, scope: !4577)
!4901 = !DILocation(line: 1736, column: 7, scope: !4577)
!4902 = !DILocation(line: 1748, column: 10, scope: !4657)
!4903 = !DILocation(line: 1750, column: 15, scope: !4656)
!4904 = !DILocation(line: 1750, column: 8, scope: !4657)
!4905 = !DILocation(line: 0, scope: !4655)
!4906 = !DILocation(line: 1756, column: 15, scope: !4664)
!4907 = !DILocation(line: 1756, column: 9, scope: !4655)
!4908 = !DILocation(line: 1758, column: 7, scope: !4660)
!4909 = !DILocation(line: 0, scope: !4660)
!4910 = !DILocation(line: 1758, column: 7, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4660, file: !2454, line: 1758, column: 7)
!4912 = !DILocation(line: 1764, column: 5, scope: !4655)
!4913 = !DILocation(line: 0, scope: !4657)
!4914 = !DILocation(line: 1764, column: 20, scope: !4655)
!4915 = !DILocation(line: 1764, column: 17, scope: !4655)
!4916 = !DILocation(line: 1765, column: 6, scope: !4666)
!4917 = !DILocation(line: 0, scope: !4666)
!4918 = !DILocation(line: 1765, column: 6, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4666, file: !2454, line: 1765, column: 6)
!4920 = distinct !{!4920, !4912, !4921}
!4921 = !DILocation(line: 1766, column: 5, scope: !4655)
!4922 = !DILocation(line: 1773, column: 12, scope: !4671)
!4923 = !DILocation(line: 1773, column: 7, scope: !4577)
!4924 = !DILocation(line: 1773, column: 7, scope: !4671)
!4925 = !DILocation(line: 1774, column: 4, scope: !4669)
!4926 = !DILocation(line: 0, scope: !4669)
!4927 = !DILocation(line: 1774, column: 4, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4669, file: !2454, line: 1774, column: 4)
!4929 = !DILocation(line: 1818, column: 8, scope: !4675)
!4930 = !DILocation(line: 1818, column: 27, scope: !4675)
!4931 = !DILocation(line: 1818, column: 25, scope: !4675)
!4932 = !DILocation(line: 1818, column: 8, scope: !4676)
!4933 = !DILocation(line: 1819, column: 5, scope: !4673)
!4934 = !DILocation(line: 0, scope: !4673)
!4935 = !DILocation(line: 1819, column: 5, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4673, file: !2454, line: 1819, column: 5)
!4937 = !DILocation(line: 1822, column: 14, scope: !4681)
!4938 = !DILocation(line: 1822, column: 8, scope: !4676)
!4939 = !DILocation(line: 1823, column: 5, scope: !4679)
!4940 = !DILocation(line: 0, scope: !4679)
!4941 = !DILocation(line: 1823, column: 5, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4679, file: !2454, line: 1823, column: 5)
!4943 = !DILocation(line: 1826, column: 20, scope: !4676)
!4944 = !DILocation(line: 1827, column: 4, scope: !4676)
!4945 = !DILocation(line: 0, scope: !4676)
!4946 = !DILocation(line: 1827, column: 21, scope: !4676)
!4947 = !DILocation(line: 1827, column: 18, scope: !4676)
!4948 = !DILocation(line: 1828, column: 5, scope: !4683)
!4949 = !DILocation(line: 0, scope: !4683)
!4950 = !DILocation(line: 1828, column: 5, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4683, file: !2454, line: 1828, column: 5)
!4952 = distinct !{!4952, !4944, !4953}
!4953 = !DILocation(line: 1829, column: 4, scope: !4676)
!4954 = !DILocation(line: 1831, column: 4, scope: !4686)
!4955 = !DILocation(line: 0, scope: !4686)
!4956 = !DILocation(line: 1831, column: 4, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4686, file: !2454, line: 1831, column: 4)
!4958 = !DILocation(line: 1835, column: 16, scope: !4577)
!4959 = !DILocation(line: 1835, column: 3, scope: !4577)
!4960 = !DILocation(line: 1836, column: 4, scope: !4688)
!4961 = !DILocation(line: 0, scope: !4688)
!4962 = !DILocation(line: 1836, column: 4, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4688, file: !2454, line: 1836, column: 4)
!4964 = !DILocation(line: 1837, column: 4, scope: !4689)
!4965 = distinct !{!4965, !4959, !4966}
!4966 = !DILocation(line: 1838, column: 3, scope: !4577)
!4967 = !DILocation(line: 1844, column: 1, scope: !4550)
!4968 = distinct !DISubprogram(name: "extract_conversion", scope: !2454, file: !2454, line: 642, type: !4969, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !4971)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!123, !4625, !123}
!4971 = !{!4972, !4973}
!4972 = !DILocalVariable(name: "conv", arg: 1, scope: !4968, file: !2454, line: 642, type: !4625)
!4973 = !DILocalVariable(name: "sp", arg: 2, scope: !4968, file: !2454, line: 643, type: !123)
!4974 = !DILocation(line: 0, scope: !4968)
!4975 = !DILocation(line: 645, column: 10, scope: !4968)
!4976 = !DILocation(line: 653, column: 2, scope: !4968)
!4977 = !DILocation(line: 654, column: 6, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4968, file: !2454, line: 654, column: 6)
!4979 = !DILocation(line: 654, column: 10, scope: !4978)
!4980 = !DILocation(line: 654, column: 6, scope: !4968)
!4981 = !DILocation(line: 655, column: 24, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4978, file: !2454, line: 654, column: 18)
!4983 = !DILocation(line: 655, column: 19, scope: !4982)
!4984 = !DILocation(line: 656, column: 3, scope: !4982)
!4985 = !DILocation(line: 659, column: 7, scope: !4968)
!4986 = !DILocation(line: 660, column: 7, scope: !4968)
!4987 = !DILocation(line: 661, column: 7, scope: !4968)
!4988 = !DILocation(line: 662, column: 7, scope: !4968)
!4989 = !DILocation(line: 663, column: 7, scope: !4968)
!4990 = !DILocation(line: 665, column: 2, scope: !4968)
!4991 = !DILocation(line: 666, column: 1, scope: !4968)
!4992 = distinct !DISubprogram(name: "outs", scope: !2454, file: !2454, line: 1319, type: !4993, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !4995)
!4993 = !DISubroutineType(types: !4994)
!4994 = !{!107, !3540, !102, !123, !123}
!4995 = !{!4996, !4997, !4998, !4999, !5000, !5001}
!4996 = !DILocalVariable(name: "out", arg: 1, scope: !4992, file: !2454, line: 1319, type: !3540)
!4997 = !DILocalVariable(name: "ctx", arg: 2, scope: !4992, file: !2454, line: 1320, type: !102)
!4998 = !DILocalVariable(name: "sp", arg: 3, scope: !4992, file: !2454, line: 1321, type: !123)
!4999 = !DILocalVariable(name: "ep", arg: 4, scope: !4992, file: !2454, line: 1322, type: !123)
!5000 = !DILocalVariable(name: "count", scope: !4992, file: !2454, line: 1324, type: !252)
!5001 = !DILocalVariable(name: "rc", scope: !5002, file: !2454, line: 1327, type: !107)
!5002 = distinct !DILexicalBlock(scope: !4992, file: !2454, line: 1326, column: 45)
!5003 = !DILocation(line: 0, scope: !4992)
!5004 = !DILocation(line: 1326, column: 2, scope: !4992)
!5005 = !DILocation(line: 1324, column: 9, scope: !4992)
!5006 = !DILocation(line: 1326, column: 13, scope: !4992)
!5007 = !DILocation(line: 1326, column: 19, scope: !4992)
!5008 = !DILocation(line: 1327, column: 21, scope: !5002)
!5009 = !DILocation(line: 1326, column: 36, scope: !4992)
!5010 = !DILocation(line: 1326, column: 39, scope: !4992)
!5011 = !DILocation(line: 1327, column: 24, scope: !5002)
!5012 = !DILocation(line: 1327, column: 16, scope: !5002)
!5013 = !DILocation(line: 1327, column: 12, scope: !5002)
!5014 = !DILocation(line: 0, scope: !5002)
!5015 = !DILocation(line: 1329, column: 10, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5002, file: !2454, line: 1329, column: 7)
!5017 = !DILocation(line: 1329, column: 7, scope: !5002)
!5018 = distinct !{!5018, !5004, !5019}
!5019 = !DILocation(line: 1333, column: 2, scope: !4992)
!5020 = !DILocation(line: 1336, column: 1, scope: !4992)
!5021 = distinct !DISubprogram(name: "encode_uint", scope: !2454, file: !2454, line: 788, type: !5022, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5024)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{!256, !2476, !4625, !256, !123}
!5024 = !{!5025, !5026, !5027, !5028, !5029, !5030, !5032, !5033}
!5025 = !DILocalVariable(name: "value", arg: 1, scope: !5021, file: !2454, line: 788, type: !2476)
!5026 = !DILocalVariable(name: "conv", arg: 2, scope: !5021, file: !2454, line: 789, type: !4625)
!5027 = !DILocalVariable(name: "bps", arg: 3, scope: !5021, file: !2454, line: 790, type: !256)
!5028 = !DILocalVariable(name: "bpe", arg: 4, scope: !5021, file: !2454, line: 791, type: !123)
!5029 = !DILocalVariable(name: "upcase", scope: !5021, file: !2454, line: 793, type: !136)
!5030 = !DILocalVariable(name: "radix", scope: !5021, file: !2454, line: 794, type: !5031)
!5031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5032 = !DILocalVariable(name: "bp", scope: !5021, file: !2454, line: 795, type: !256)
!5033 = !DILocalVariable(name: "lsv", scope: !5034, file: !2454, line: 798, type: !32)
!5034 = distinct !DILexicalBlock(scope: !5021, file: !2454, line: 797, column: 5)
!5035 = !DILocation(line: 0, scope: !5021)
!5036 = !DILocation(line: 793, column: 35, scope: !5021)
!5037 = !DILocation(line: 793, column: 24, scope: !5021)
!5038 = !DILocation(line: 793, column: 16, scope: !5021)
!5039 = !DILocation(line: 794, column: 29, scope: !5021)
!5040 = !DILocation(line: 795, column: 24, scope: !5021)
!5041 = !DILocation(line: 795, column: 17, scope: !5021)
!5042 = !DILocation(line: 797, column: 2, scope: !5021)
!5043 = !DILocation(line: 802, column: 9, scope: !5034)
!5044 = !DILocation(line: 798, column: 22, scope: !5034)
!5045 = !DILocation(line: 0, scope: !5034)
!5046 = !DILocation(line: 800, column: 16, scope: !5034)
!5047 = !DILocation(line: 800, column: 11, scope: !5034)
!5048 = !DILocation(line: 800, column: 4, scope: !5034)
!5049 = !DILocation(line: 800, column: 9, scope: !5034)
!5050 = !DILocation(line: 803, column: 18, scope: !5021)
!5051 = !DILocation(line: 803, column: 24, scope: !5021)
!5052 = !DILocation(line: 803, column: 2, scope: !5034)
!5053 = distinct !{!5053, !5042, !5054}
!5054 = !DILocation(line: 803, column: 37, scope: !5021)
!5055 = !DILocation(line: 808, column: 12, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5021, file: !2454, line: 808, column: 6)
!5057 = !DILocation(line: 808, column: 6, scope: !5021)
!5058 = !DILocation(line: 809, column: 7, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5056, file: !2454, line: 808, column: 23)
!5060 = !DILocation(line: 813, column: 3, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5062, file: !2454, line: 811, column: 27)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !2454, line: 811, column: 14)
!5063 = distinct !DILexicalBlock(scope: !5059, file: !2454, line: 809, column: 7)
!5064 = !DILocation(line: 0, scope: !5063)
!5065 = !DILocation(line: 818, column: 2, scope: !5021)
!5066 = distinct !DISubprogram(name: "store_count", scope: !2454, file: !2454, line: 1280, type: !5067, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5071)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{null, !5069, !102, !107}
!5069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 32)
!5070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4592)
!5071 = !{!5072, !5073, !5074}
!5072 = !DILocalVariable(name: "conv", arg: 1, scope: !5066, file: !2454, line: 1280, type: !5069)
!5073 = !DILocalVariable(name: "dp", arg: 2, scope: !5066, file: !2454, line: 1281, type: !102)
!5074 = !DILocalVariable(name: "count", arg: 3, scope: !5066, file: !2454, line: 1282, type: !107)
!5075 = !DILocation(line: 0, scope: !5066)
!5076 = !DILocation(line: 1284, column: 38, scope: !5066)
!5077 = !DILocation(line: 1284, column: 2, scope: !5066)
!5078 = !DILocation(line: 1286, column: 4, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5066, file: !2454, line: 1284, column: 50)
!5080 = !DILocation(line: 1286, column: 14, scope: !5079)
!5081 = !DILocation(line: 1287, column: 3, scope: !5079)
!5082 = !DILocation(line: 1289, column: 24, scope: !5079)
!5083 = !DILocation(line: 1289, column: 22, scope: !5079)
!5084 = !DILocation(line: 1290, column: 3, scope: !5079)
!5085 = !DILocation(line: 1292, column: 18, scope: !5079)
!5086 = !DILocation(line: 1292, column: 4, scope: !5079)
!5087 = !DILocation(line: 1292, column: 16, scope: !5079)
!5088 = !DILocation(line: 1293, column: 3, scope: !5079)
!5089 = !DILocation(line: 1295, column: 4, scope: !5079)
!5090 = !DILocation(line: 1295, column: 15, scope: !5079)
!5091 = !DILocation(line: 1296, column: 3, scope: !5079)
!5092 = !DILocation(line: 1298, column: 22, scope: !5079)
!5093 = !DILocation(line: 1298, column: 4, scope: !5079)
!5094 = !DILocation(line: 1298, column: 20, scope: !5079)
!5095 = !DILocation(line: 1299, column: 3, scope: !5079)
!5096 = !DILocation(line: 1301, column: 21, scope: !5079)
!5097 = !DILocation(line: 1301, column: 4, scope: !5079)
!5098 = !DILocation(line: 1301, column: 19, scope: !5079)
!5099 = !DILocation(line: 1302, column: 3, scope: !5079)
!5100 = !DILocation(line: 1304, column: 4, scope: !5079)
!5101 = !DILocation(line: 1304, column: 17, scope: !5079)
!5102 = !DILocation(line: 1305, column: 3, scope: !5079)
!5103 = !DILocation(line: 1307, column: 4, scope: !5079)
!5104 = !DILocation(line: 1307, column: 20, scope: !5079)
!5105 = !DILocation(line: 1308, column: 3, scope: !5079)
!5106 = !DILocation(line: 1316, column: 1, scope: !5066)
!5107 = distinct !DISubprogram(name: "isupper", scope: !5108, file: !5108, line: 16, type: !270, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5109)
!5108 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5109 = !{!5110}
!5110 = !DILocalVariable(name: "a", arg: 1, scope: !5107, file: !5108, line: 16, type: !107)
!5111 = !DILocation(line: 0, scope: !5107)
!5112 = !DILocation(line: 18, column: 29, scope: !5107)
!5113 = !DILocation(line: 18, column: 45, scope: !5107)
!5114 = !DILocation(line: 18, column: 2, scope: !5107)
!5115 = distinct !DISubprogram(name: "conversion_radix", scope: !2454, file: !2454, line: 761, type: !5116, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5118)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!252, !125}
!5118 = !{!5119}
!5119 = !DILocalVariable(name: "specifier", arg: 1, scope: !5115, file: !2454, line: 761, type: !125)
!5120 = !DILocation(line: 0, scope: !5115)
!5121 = !DILocation(line: 763, column: 2, scope: !5115)
!5122 = !DILocation(line: 770, column: 3, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5115, file: !2454, line: 763, column: 21)
!5124 = !DILocation(line: 774, column: 3, scope: !5123)
!5125 = !DILocation(line: 0, scope: !5123)
!5126 = !DILocation(line: 776, column: 1, scope: !5115)
!5127 = distinct !DISubprogram(name: "extract_flags", scope: !2454, file: !2454, line: 339, type: !4969, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5128)
!5128 = !{!5129, !5130, !5131}
!5129 = !DILocalVariable(name: "conv", arg: 1, scope: !5127, file: !2454, line: 339, type: !4625)
!5130 = !DILocalVariable(name: "sp", arg: 2, scope: !5127, file: !2454, line: 340, type: !123)
!5131 = !DILocalVariable(name: "loop", scope: !5127, file: !2454, line: 342, type: !136)
!5132 = !DILocation(line: 0, scope: !5127)
!5133 = !DILocation(line: 344, column: 2, scope: !5127)
!5134 = !DILocation(line: 345, column: 11, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5127, file: !2454, line: 344, column: 5)
!5136 = !DILocation(line: 345, column: 3, scope: !5135)
!5137 = !DILocation(line: 351, column: 4, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5135, file: !2454, line: 345, column: 16)
!5139 = !DILocation(line: 354, column: 4, scope: !5138)
!5140 = !DILocation(line: 357, column: 4, scope: !5138)
!5141 = !DILocation(line: 360, column: 4, scope: !5138)
!5142 = !DILocation(line: 0, scope: !5138)
!5143 = !DILocation(line: 370, column: 12, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5127, file: !2454, line: 370, column: 6)
!5145 = !DILocation(line: 370, column: 22, scope: !5144)
!5146 = !DILocation(line: 371, column: 19, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5144, file: !2454, line: 370, column: 42)
!5148 = !DILocation(line: 372, column: 2, scope: !5147)
!5149 = !DILocation(line: 376, column: 2, scope: !5127)
!5150 = distinct !DISubprogram(name: "extract_width", scope: !2454, file: !2454, line: 388, type: !4969, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5151)
!5151 = !{!5152, !5153, !5154, !5155}
!5152 = !DILocalVariable(name: "conv", arg: 1, scope: !5150, file: !2454, line: 388, type: !4625)
!5153 = !DILocalVariable(name: "sp", arg: 2, scope: !5150, file: !2454, line: 389, type: !123)
!5154 = !DILocalVariable(name: "wp", scope: !5150, file: !2454, line: 398, type: !123)
!5155 = !DILocalVariable(name: "width", scope: !5150, file: !2454, line: 399, type: !252)
!5156 = !DILocation(line: 0, scope: !5150)
!5157 = !DILocation(line: 391, column: 8, scope: !5150)
!5158 = !DILocation(line: 391, column: 22, scope: !5150)
!5159 = !DILocation(line: 393, column: 6, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5150, file: !2454, line: 393, column: 6)
!5161 = !DILocation(line: 393, column: 10, scope: !5160)
!5162 = !DILocation(line: 393, column: 6, scope: !5150)
!5163 = !DILocation(line: 394, column: 20, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5160, file: !2454, line: 393, column: 18)
!5165 = !DILocation(line: 395, column: 10, scope: !5164)
!5166 = !DILocation(line: 395, column: 3, scope: !5164)
!5167 = !DILocation(line: 399, column: 17, scope: !5150)
!5168 = !DILocation(line: 401, column: 6, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5150, file: !2454, line: 401, column: 6)
!5170 = !DILocation(line: 401, column: 9, scope: !5169)
!5171 = !DILocation(line: 401, column: 6, scope: !5150)
!5172 = !DILocation(line: 402, column: 23, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5169, file: !2454, line: 401, column: 16)
!5174 = !DILocation(line: 403, column: 9, scope: !5173)
!5175 = !DILocation(line: 403, column: 21, scope: !5173)
!5176 = !DILocation(line: 405, column: 11, scope: !5173)
!5177 = !DILocation(line: 404, column: 21, scope: !5173)
!5178 = !DILocation(line: 406, column: 2, scope: !5173)
!5179 = !DILocation(line: 409, column: 1, scope: !5150)
!5180 = distinct !DISubprogram(name: "extract_prec", scope: !2454, file: !2454, line: 420, type: !4969, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5181)
!5181 = !{!5182, !5183, !5184}
!5182 = !DILocalVariable(name: "conv", arg: 1, scope: !5180, file: !2454, line: 420, type: !4625)
!5183 = !DILocalVariable(name: "sp", arg: 2, scope: !5180, file: !2454, line: 421, type: !123)
!5184 = !DILocalVariable(name: "prec", scope: !5180, file: !2454, line: 435, type: !252)
!5185 = !DILocation(line: 0, scope: !5180)
!5186 = !DILocation(line: 423, column: 24, scope: !5180)
!5187 = !DILocation(line: 423, column: 28, scope: !5180)
!5188 = !DILocation(line: 423, column: 8, scope: !5180)
!5189 = !DILocation(line: 423, column: 21, scope: !5180)
!5190 = !DILocation(line: 425, column: 6, scope: !5180)
!5191 = !DILocation(line: 428, column: 2, scope: !5180)
!5192 = !DILocation(line: 430, column: 6, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5180, file: !2454, line: 430, column: 6)
!5194 = !DILocation(line: 430, column: 10, scope: !5193)
!5195 = !DILocation(line: 430, column: 6, scope: !5180)
!5196 = !DILocation(line: 431, column: 19, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5193, file: !2454, line: 430, column: 18)
!5198 = !DILocation(line: 432, column: 10, scope: !5197)
!5199 = !DILocation(line: 432, column: 3, scope: !5197)
!5200 = !DILocation(line: 435, column: 16, scope: !5180)
!5201 = !DILocation(line: 437, column: 8, scope: !5180)
!5202 = !DILocation(line: 437, column: 19, scope: !5180)
!5203 = !DILocation(line: 439, column: 10, scope: !5180)
!5204 = !DILocation(line: 438, column: 20, scope: !5180)
!5205 = !DILocation(line: 441, column: 9, scope: !5180)
!5206 = !DILocation(line: 442, column: 1, scope: !5180)
!5207 = distinct !DISubprogram(name: "extract_length", scope: !2454, file: !2454, line: 453, type: !4969, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5208)
!5208 = !{!5209, !5210}
!5209 = !DILocalVariable(name: "conv", arg: 1, scope: !5207, file: !2454, line: 453, type: !4625)
!5210 = !DILocalVariable(name: "sp", arg: 2, scope: !5207, file: !2454, line: 454, type: !123)
!5211 = !DILocation(line: 0, scope: !5207)
!5212 = !DILocation(line: 456, column: 10, scope: !5207)
!5213 = !DILocation(line: 456, column: 2, scope: !5207)
!5214 = !DILocation(line: 458, column: 8, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5216, file: !2454, line: 458, column: 7)
!5216 = distinct !DILexicalBlock(scope: !5207, file: !2454, line: 456, column: 15)
!5217 = !DILocation(line: 458, column: 7, scope: !5215)
!5218 = !DILocation(line: 458, column: 13, scope: !5215)
!5219 = !DILocation(line: 0, scope: !5215)
!5220 = !DILocation(line: 458, column: 7, scope: !5216)
!5221 = !DILocation(line: 459, column: 21, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5215, file: !2454, line: 458, column: 21)
!5223 = !DILocation(line: 460, column: 4, scope: !5222)
!5224 = !DILocation(line: 461, column: 3, scope: !5222)
!5225 = !DILocation(line: 462, column: 21, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5215, file: !2454, line: 461, column: 10)
!5227 = !DILocation(line: 466, column: 8, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5216, file: !2454, line: 466, column: 7)
!5229 = !DILocation(line: 466, column: 7, scope: !5228)
!5230 = !DILocation(line: 466, column: 13, scope: !5228)
!5231 = !DILocation(line: 0, scope: !5228)
!5232 = !DILocation(line: 466, column: 7, scope: !5216)
!5233 = !DILocation(line: 467, column: 21, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5228, file: !2454, line: 466, column: 21)
!5235 = !DILocation(line: 468, column: 4, scope: !5234)
!5236 = !DILocation(line: 469, column: 3, scope: !5234)
!5237 = !DILocation(line: 470, column: 21, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5228, file: !2454, line: 469, column: 10)
!5239 = !DILocation(line: 474, column: 9, scope: !5216)
!5240 = !DILocation(line: 474, column: 20, scope: !5216)
!5241 = !DILocation(line: 475, column: 3, scope: !5216)
!5242 = !DILocation(line: 476, column: 3, scope: !5216)
!5243 = !DILocation(line: 478, column: 9, scope: !5216)
!5244 = !DILocation(line: 478, column: 20, scope: !5216)
!5245 = !DILocation(line: 479, column: 3, scope: !5216)
!5246 = !DILocation(line: 480, column: 3, scope: !5216)
!5247 = !DILocation(line: 482, column: 9, scope: !5216)
!5248 = !DILocation(line: 482, column: 20, scope: !5216)
!5249 = !DILocation(line: 483, column: 3, scope: !5216)
!5250 = !DILocation(line: 484, column: 3, scope: !5216)
!5251 = !DILocation(line: 486, column: 9, scope: !5216)
!5252 = !DILocation(line: 486, column: 20, scope: !5216)
!5253 = !DILocation(line: 487, column: 3, scope: !5216)
!5254 = !DILocation(line: 492, column: 21, scope: !5216)
!5255 = !DILocation(line: 493, column: 3, scope: !5216)
!5256 = !DILocation(line: 495, column: 9, scope: !5216)
!5257 = !DILocation(line: 495, column: 20, scope: !5216)
!5258 = !DILocation(line: 496, column: 3, scope: !5216)
!5259 = !DILocation(line: 498, column: 2, scope: !5207)
!5260 = distinct !DISubprogram(name: "extract_specifier", scope: !2454, file: !2454, line: 513, type: !4969, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5261)
!5261 = !{!5262, !5263, !5264, !5265}
!5262 = !DILocalVariable(name: "conv", arg: 1, scope: !5260, file: !2454, line: 513, type: !4625)
!5263 = !DILocalVariable(name: "sp", arg: 2, scope: !5260, file: !2454, line: 514, type: !123)
!5264 = !DILocalVariable(name: "unsupported", scope: !5260, file: !2454, line: 516, type: !136)
!5265 = !DILabel(scope: !5266, name: "int_conv", file: !2454, line: 526)
!5266 = distinct !DILexicalBlock(scope: !5260, file: !2454, line: 520, column: 27)
!5267 = !DILocation(line: 0, scope: !5260)
!5268 = !DILocation(line: 518, column: 20, scope: !5260)
!5269 = !DILocation(line: 518, column: 8, scope: !5260)
!5270 = !DILocation(line: 518, column: 18, scope: !5260)
!5271 = !DILocation(line: 520, column: 2, scope: !5260)
!5272 = !DILocation(line: 525, column: 3, scope: !5266)
!5273 = !DILocation(line: 0, scope: !5266)
!5274 = !DILocation(line: 526, column: 1, scope: !5266)
!5275 = !DILocation(line: 528, column: 24, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5266, file: !2454, line: 528, column: 7)
!5277 = !DILocation(line: 528, column: 7, scope: !5266)
!5278 = !DILocation(line: 535, column: 23, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5266, file: !2454, line: 535, column: 7)
!5280 = !DILocation(line: 535, column: 7, scope: !5266)
!5281 = !DILocation(line: 536, column: 36, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5279, file: !2454, line: 535, column: 31)
!5283 = !DILocation(line: 537, column: 3, scope: !5282)
!5284 = !DILocation(line: 570, column: 9, scope: !5266)
!5285 = !DILocation(line: 570, column: 23, scope: !5266)
!5286 = !DILocation(line: 575, column: 4, scope: !5287)
!5287 = distinct !DILexicalBlock(scope: !5288, file: !2454, line: 573, column: 48)
!5288 = distinct !DILexicalBlock(scope: !5266, file: !2454, line: 573, column: 7)
!5289 = !DILocation(line: 603, column: 9, scope: !5266)
!5290 = !DILocation(line: 603, column: 23, scope: !5266)
!5291 = !DILocation(line: 605, column: 24, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5266, file: !2454, line: 605, column: 7)
!5293 = !DILocation(line: 605, column: 7, scope: !5266)
!5294 = !DILocation(line: 612, column: 9, scope: !5266)
!5295 = !DILocation(line: 612, column: 23, scope: !5266)
!5296 = !DILocation(line: 619, column: 24, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5266, file: !2454, line: 619, column: 7)
!5298 = !DILocation(line: 619, column: 7, scope: !5266)
!5299 = !DILocation(line: 625, column: 9, scope: !5266)
!5300 = !DILocation(line: 625, column: 17, scope: !5266)
!5301 = !DILocation(line: 626, column: 3, scope: !5266)
!5302 = !DILocation(line: 629, column: 20, scope: !5260)
!5303 = !DILocation(line: 629, column: 8, scope: !5260)
!5304 = !DILocation(line: 518, column: 23, scope: !5260)
!5305 = !DILocation(line: 631, column: 2, scope: !5260)
!5306 = distinct !DISubprogram(name: "extract_decimal", scope: !2454, file: !2454, line: 318, type: !5307, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5310)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{!252, !5309}
!5309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 32)
!5310 = !{!5311, !5312, !5313}
!5311 = !DILocalVariable(name: "str", arg: 1, scope: !5306, file: !2454, line: 318, type: !5309)
!5312 = !DILocalVariable(name: "sp", scope: !5306, file: !2454, line: 320, type: !123)
!5313 = !DILocalVariable(name: "val", scope: !5306, file: !2454, line: 321, type: !252)
!5314 = !DILocation(line: 0, scope: !5306)
!5315 = !DILocation(line: 320, column: 19, scope: !5306)
!5316 = !DILocation(line: 323, column: 37, scope: !5306)
!5317 = !DILocation(line: 323, column: 17, scope: !5306)
!5318 = !DILocation(line: 323, column: 9, scope: !5306)
!5319 = !DILocation(line: 323, column: 2, scope: !5306)
!5320 = !DILocation(line: 324, column: 13, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5306, file: !2454, line: 323, column: 43)
!5322 = !DILocation(line: 324, column: 24, scope: !5321)
!5323 = !DILocation(line: 324, column: 19, scope: !5321)
!5324 = !DILocation(line: 324, column: 27, scope: !5321)
!5325 = distinct !{!5325, !5319, !5326}
!5326 = !DILocation(line: 325, column: 2, scope: !5306)
!5327 = !DILocation(line: 326, column: 7, scope: !5306)
!5328 = !DILocation(line: 327, column: 2, scope: !5306)
!5329 = distinct !DISubprogram(name: "isdigit", scope: !5108, file: !5108, line: 43, type: !270, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2450, retainedNodes: !5330)
!5330 = !{!5331}
!5331 = !DILocalVariable(name: "a", arg: 1, scope: !5329, file: !5108, line: 43, type: !107)
!5332 = !DILocation(line: 0, scope: !5329)
!5333 = !DILocation(line: 45, column: 29, scope: !5329)
!5334 = !DILocation(line: 45, column: 45, scope: !5329)
!5335 = !DILocation(line: 45, column: 2, scope: !5329)
!5336 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5337, file: !5337, line: 9, type: !3130, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2488, retainedNodes: !250)
!5337 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!5338 = !DILocation(line: 11, column: 1, scope: !5336)
!5339 = !{i64 2147561717, i64 2147561760, i64 2147561800}
!5340 = !DILocation(line: 12, column: 1, scope: !5336)
!5341 = !{i64 2147565944, i64 2147565987, i64 2147566027}
!5342 = !DILocation(line: 13, column: 1, scope: !5336)
!5343 = !{i64 2147566153, i64 2147566196, i64 2147566236}
!5344 = !DILocation(line: 14, column: 1, scope: !5336)
!5345 = !{i64 2147566370, i64 2147566413, i64 2147566453}
!5346 = !DILocation(line: 15, column: 1, scope: !5336)
!5347 = !{i64 2147566539, i64 2147566582, i64 2147566622}
!5348 = !DILocation(line: 16, column: 1, scope: !5336)
!5349 = !{i64 2147566702, i64 2147566745, i64 2147566785}
!5350 = !DILocation(line: 17, column: 1, scope: !5336)
!5351 = !{i64 2147566886, i64 2147566929, i64 2147566969}
!5352 = !DILocation(line: 18, column: 1, scope: !5336)
!5353 = !{i64 2147567065, i64 2147567108, i64 2147567148}
!5354 = !DILocation(line: 19, column: 1, scope: !5336)
!5355 = !{i64 2147567307, i64 2147567350, i64 2147567390}
!5356 = !DILocation(line: 20, column: 1, scope: !5336)
!5357 = !{i64 2147567542, i64 2147567585, i64 2147567625}
!5358 = !DILocation(line: 21, column: 1, scope: !5336)
!5359 = !{i64 2147567729, i64 2147567772, i64 2147567812}
!5360 = !DILocation(line: 22, column: 1, scope: !5336)
!5361 = !{i64 2147567945, i64 2147567988, i64 2147568028}
!5362 = !DILocation(line: 23, column: 1, scope: !5336)
!5363 = !{i64 2147568148, i64 2147568191, i64 2147568231}
!5364 = !DILocation(line: 24, column: 1, scope: !5336)
!5365 = !{i64 2147568351, i64 2147568394, i64 2147568434}
!5366 = !DILocation(line: 25, column: 1, scope: !5336)
!5367 = !{i64 2147568526, i64 2147568569, i64 2147568609}
!5368 = !DILocation(line: 26, column: 1, scope: !5336)
!5369 = !{i64 2147568734, i64 2147568777, i64 2147568817}
!5370 = !DILocation(line: 27, column: 1, scope: !5336)
!5371 = !{i64 2147568938, i64 2147568981, i64 2147569021}
!5372 = !DILocation(line: 28, column: 1, scope: !5336)
!5373 = !{i64 2147569131, i64 2147569174, i64 2147569214}
!5374 = !DILocation(line: 29, column: 1, scope: !5336)
!5375 = !{i64 2147569333, i64 2147569376, i64 2147569416}
!5376 = !DILocation(line: 30, column: 1, scope: !5336)
!5377 = !{i64 2147569560, i64 2147569603, i64 2147569643}
!5378 = !DILocation(line: 31, column: 1, scope: !5336)
!5379 = !{i64 2147569762, i64 2147569805, i64 2147569845}
!5380 = !DILocation(line: 32, column: 1, scope: !5336)
!5381 = !{i64 2147569977, i64 2147570020, i64 2147570060}
!5382 = !DILocation(line: 33, column: 1, scope: !5336)
!5383 = !{i64 2147570149, i64 2147570192, i64 2147570232}
!5384 = !DILocation(line: 34, column: 1, scope: !5336)
!5385 = !{i64 2147570351, i64 2147570394, i64 2147570434}
!5386 = !DILocation(line: 35, column: 1, scope: !5336)
!5387 = !{i64 2147570577, i64 2147570620, i64 2147570660}
!5388 = !DILocation(line: 36, column: 1, scope: !5336)
!5389 = !{i64 2147570776, i64 2147570819, i64 2147570859}
!5390 = !DILocation(line: 37, column: 1, scope: !5336)
!5391 = !{i64 2147570951, i64 2147570994, i64 2147571034}
!5392 = !DILocation(line: 38, column: 1, scope: !5336)
!5393 = !{i64 2147571204, i64 2147571247, i64 2147571287}
!5394 = !DILocation(line: 39, column: 1, scope: !5336)
!5395 = !{i64 2147571445, i64 2147571488, i64 2147571528}
!5396 = !DILocation(line: 40, column: 1, scope: !5336)
!5397 = !{i64 2147571680, i64 2147571723, i64 2147571763}
!5398 = !DILocation(line: 41, column: 1, scope: !5336)
!5399 = !{i64 2147571912, i64 2147571955, i64 2147571995}
!5400 = !DILocation(line: 42, column: 1, scope: !5336)
!5401 = !{i64 2147572138, i64 2147572181, i64 2147572221}
!5402 = !DILocation(line: 43, column: 1, scope: !5336)
!5403 = !{i64 2147572364, i64 2147572407, i64 2147572447}
!5404 = !DILocation(line: 44, column: 1, scope: !5336)
!5405 = !{i64 2147572590, i64 2147572633, i64 2147572673}
!5406 = !DILocation(line: 45, column: 1, scope: !5336)
!5407 = !{i64 2147572825, i64 2147572868, i64 2147572908}
!5408 = !DILocation(line: 46, column: 1, scope: !5336)
!5409 = !{i64 2147573051, i64 2147573094, i64 2147573134}
!5410 = !DILocation(line: 47, column: 1, scope: !5336)
!5411 = !{i64 2147573298, i64 2147573341, i64 2147573381}
!5412 = !DILocation(line: 48, column: 1, scope: !5336)
!5413 = !{i64 2147573527, i64 2147573570, i64 2147573610}
!5414 = !DILocation(line: 49, column: 1, scope: !5336)
!5415 = !{i64 2147573759, i64 2147573802, i64 2147573842}
!5416 = !DILocation(line: 50, column: 1, scope: !5336)
!5417 = !{i64 2147574003, i64 2147574046, i64 2147574086}
!5418 = !DILocation(line: 51, column: 1, scope: !5336)
!5419 = !{i64 2147574241, i64 2147574284, i64 2147574324}
!5420 = !DILocation(line: 52, column: 1, scope: !5336)
!5421 = !{i64 2147574515, i64 2147574558, i64 2147574598}
!5422 = !DILocation(line: 53, column: 1, scope: !5336)
!5423 = !{i64 2147578814, i64 2147578857, i64 2147578897}
!5424 = !DILocation(line: 54, column: 1, scope: !5336)
!5425 = !{i64 2147579067, i64 2147579110, i64 2147579150}
!5426 = !DILocation(line: 55, column: 1, scope: !5336)
!5427 = !{i64 2147579311, i64 2147579354, i64 2147579394}
!5428 = !DILocation(line: 56, column: 1, scope: !5336)
!5429 = !{i64 2147579546, i64 2147579589, i64 2147579629}
!5430 = !DILocation(line: 57, column: 1, scope: !5336)
!5431 = !{i64 2147579796, i64 2147579839, i64 2147579879}
!5432 = !DILocation(line: 58, column: 1, scope: !5336)
!5433 = !{i64 2147580043, i64 2147580086, i64 2147580126}
!5434 = !DILocation(line: 59, column: 1, scope: !5336)
!5435 = !{i64 2147580278, i64 2147580321, i64 2147580361}
!5436 = !DILocation(line: 60, column: 1, scope: !5336)
!5437 = !{i64 2147580513, i64 2147580556, i64 2147580596}
!5438 = !DILocation(line: 61, column: 1, scope: !5336)
!5439 = !{i64 2147580748, i64 2147580791, i64 2147580831}
!5440 = !DILocation(line: 62, column: 1, scope: !5336)
!5441 = !{i64 2147580986, i64 2147581029, i64 2147581069}
!5442 = !DILocation(line: 63, column: 1, scope: !5336)
!5443 = !{i64 2147581227, i64 2147581270, i64 2147581310}
!5444 = !DILocation(line: 64, column: 1, scope: !5336)
!5445 = !{i64 2147581507, i64 2147581550, i64 2147581590}
!5446 = !DILocation(line: 65, column: 1, scope: !5336)
!5447 = !{i64 2147581766, i64 2147581809, i64 2147581849}
!5448 = !DILocation(line: 66, column: 1, scope: !5336)
!5449 = !{i64 2147581995, i64 2147582038, i64 2147582078}
!5450 = !DILocation(line: 67, column: 1, scope: !5336)
!5451 = !{i64 2147582221, i64 2147582264, i64 2147582304}
!5452 = !DILocation(line: 68, column: 1, scope: !5336)
!5453 = !{i64 2147582459, i64 2147582502, i64 2147582542}
!5454 = !DILocation(line: 69, column: 1, scope: !5336)
!5455 = !{i64 2147582688, i64 2147582731, i64 2147582771}
!5456 = !DILocation(line: 70, column: 1, scope: !5336)
!5457 = !{i64 2147582896, i64 2147582939, i64 2147582979}
!5458 = !DILocation(line: 71, column: 1, scope: !5336)
!5459 = !{i64 2147583107, i64 2147583150, i64 2147583190}
!5460 = !DILocation(line: 72, column: 1, scope: !5336)
!5461 = !{i64 2147583342, i64 2147583385, i64 2147583425}
!5462 = !DILocation(line: 73, column: 1, scope: !5336)
!5463 = !{i64 2147583571, i64 2147583614, i64 2147583654}
!5464 = !DILocation(line: 74, column: 1, scope: !5336)
!5465 = !{i64 2147583809, i64 2147583852, i64 2147583892}
!5466 = !DILocation(line: 75, column: 1, scope: !5336)
!5467 = !{i64 2147584041, i64 2147584084, i64 2147584124}
!5468 = !DILocation(line: 76, column: 1, scope: !5336)
!5469 = !{i64 2147584267, i64 2147584310, i64 2147584350}
!5470 = !DILocation(line: 77, column: 1, scope: !5336)
!5471 = !{i64 2147584484, i64 2147584527, i64 2147584567}
!5472 = !DILocation(line: 78, column: 1, scope: !5336)
!5473 = !{i64 2147584716, i64 2147584759, i64 2147584799}
!5474 = !DILocation(line: 79, column: 1, scope: !5336)
!5475 = !{i64 2147584942, i64 2147584985, i64 2147585025}
!5476 = !DILocation(line: 80, column: 1, scope: !5336)
!5477 = !{i64 2147585156, i64 2147585199, i64 2147585239}
!5478 = !DILocation(line: 81, column: 1, scope: !5336)
!5479 = !{i64 2147585376, i64 2147585419, i64 2147585459}
!5480 = !DILocation(line: 82, column: 1, scope: !5336)
!5481 = !{i64 2147585608, i64 2147585651, i64 2147585691}
!5482 = !DILocation(line: 83, column: 1, scope: !5336)
!5483 = !{i64 2147585816, i64 2147585859, i64 2147585899}
!5484 = !DILocation(line: 84, column: 1, scope: !5336)
!5485 = !{i64 2147586021, i64 2147586064, i64 2147586104}
!5486 = !DILocation(line: 85, column: 1, scope: !5336)
!5487 = !{i64 2147586238, i64 2147586281, i64 2147586321}
!5488 = !DILocation(line: 86, column: 1, scope: !5336)
!5489 = !{i64 2147586452, i64 2147586495, i64 2147586535}
!5490 = !DILocation(line: 87, column: 1, scope: !5336)
!5491 = !{i64 2147586678, i64 2147586721, i64 2147586761}
!5492 = !DILocation(line: 88, column: 1, scope: !5336)
!5493 = !{i64 2147590959, i64 2147591002, i64 2147591042}
!5494 = !DILocation(line: 89, column: 1, scope: !5336)
!5495 = !{i64 2147591164, i64 2147591207, i64 2147591247}
!5496 = !DILocation(line: 90, column: 1, scope: !5336)
!5497 = !{i64 2147591396, i64 2147591439, i64 2147591479}
!5498 = !DILocation(line: 91, column: 1, scope: !5336)
!5499 = !{i64 2147591631, i64 2147591674, i64 2147591714}
!5500 = !DILocation(line: 92, column: 1, scope: !5336)
!5501 = !{i64 2147591881, i64 2147591924, i64 2147591964}
!5502 = !DILocation(line: 93, column: 1, scope: !5336)
!5503 = !{i64 2147592131, i64 2147592174, i64 2147592214}
!5504 = !DILocation(line: 94, column: 1, scope: !5336)
!5505 = !{i64 2147592369, i64 2147592412, i64 2147592452}
!5506 = !DILocation(line: 95, column: 1, scope: !5336)
!5507 = !{i64 2147592580, i64 2147592623, i64 2147592663}
!5508 = !DILocation(line: 96, column: 1, scope: !5336)
!5509 = !{i64 2147592797, i64 2147592840, i64 2147592880}
!5510 = !DILocation(line: 97, column: 1, scope: !5336)
!5511 = !{i64 2147592993, i64 2147593036, i64 2147593076}
!5512 = !DILocation(line: 98, column: 1, scope: !5336)
!5513 = !{i64 2147593195, i64 2147593238, i64 2147593278}
!5514 = !DILocation(line: 99, column: 1, scope: !5336)
!5515 = !{i64 2147593388, i64 2147593431, i64 2147593471}
!5516 = !DILocation(line: 100, column: 1, scope: !5336)
!5517 = !{i64 2147593596, i64 2147593639, i64 2147593679}
!5518 = !DILocation(line: 101, column: 1, scope: !5336)
!5519 = !{i64 2147593792, i64 2147593835, i64 2147593875}
!5520 = !DILocation(line: 102, column: 1, scope: !5336)
!5521 = !{i64 2147594000, i64 2147594043, i64 2147594083}
!5522 = !DILocation(line: 103, column: 1, scope: !5336)
!5523 = !{i64 2147594211, i64 2147594254, i64 2147594294}
!5524 = !DILocation(line: 104, column: 1, scope: !5336)
!5525 = !{i64 2147594410, i64 2147594453, i64 2147594493}
!5526 = !DILocation(line: 105, column: 1, scope: !5336)
!5527 = !{i64 2147594585, i64 2147594628, i64 2147594668}
!5528 = !DILocation(line: 106, column: 1, scope: !5336)
!5529 = !{i64 2147594769, i64 2147594812, i64 2147594852}
!5530 = !DILocation(line: 107, column: 1, scope: !5336)
!5531 = !{i64 2147594971, i64 2147595014, i64 2147595054}
!5532 = !DILocation(line: 108, column: 1, scope: !5336)
!5533 = !{i64 2147595170, i64 2147595213, i64 2147595253}
!5534 = !DILocation(line: 109, column: 1, scope: !5336)
!5535 = !{i64 2147595336, i64 2147595379, i64 2147595419}
!5536 = !DILocation(line: 110, column: 1, scope: !5336)
!5537 = !{i64 2147595520, i64 2147595563, i64 2147595603}
!5538 = !DILocation(line: 111, column: 1, scope: !5336)
!5539 = !{i64 2147595710, i64 2147595753, i64 2147595793}
!5540 = !DILocation(line: 112, column: 1, scope: !5336)
!5541 = !{i64 2147595894, i64 2147595937, i64 2147595977}
!5542 = !DILocation(line: 113, column: 1, scope: !5336)
!5543 = !{i64 2147596108, i64 2147596151, i64 2147596191}
!5544 = !DILocation(line: 114, column: 1, scope: !5336)
!5545 = !{i64 2147596319, i64 2147596362, i64 2147596402}
!5546 = !DILocation(line: 115, column: 1, scope: !5336)
!5547 = !{i64 2147596542, i64 2147596585, i64 2147596625}
!5548 = !DILocation(line: 116, column: 1, scope: !5336)
!5549 = !{i64 2147596726, i64 2147596769, i64 2147596809}
!5550 = !DILocation(line: 117, column: 1, scope: !5336)
!5551 = !{i64 2147596940, i64 2147596983, i64 2147597023}
!5552 = !DILocation(line: 118, column: 1, scope: !5336)
!5553 = !{i64 2147597106, i64 2147597149, i64 2147597189}
!5554 = !DILocation(line: 119, column: 1, scope: !5336)
!5555 = !{i64 2147597287, i64 2147597330, i64 2147597370}
!5556 = !DILocation(line: 120, column: 1, scope: !5336)
!5557 = !{i64 2147597480, i64 2147597523, i64 2147597563}
!5558 = !DILocation(line: 121, column: 1, scope: !5336)
!5559 = !{i64 2147597706, i64 2147597749, i64 2147597789}
!5560 = !DILocation(line: 122, column: 1, scope: !5336)
!5561 = !{i64 2147597920, i64 2147597963, i64 2147598003}
!5562 = !DILocation(line: 123, column: 1, scope: !5336)
!5563 = !{i64 2147598146, i64 2147598189, i64 2147598229}
!5564 = !DILocation(line: 124, column: 1, scope: !5336)
!5565 = !{i64 2147598363, i64 2147598406, i64 2147598446}
!5566 = !DILocation(line: 125, column: 1, scope: !5336)
!5567 = !{i64 2147598640, i64 2147598683, i64 2147598723}
!5568 = !DILocation(line: 126, column: 1, scope: !5336)
!5569 = !{i64 2147598866, i64 2147598909, i64 2147598949}
!5570 = !DILocation(line: 127, column: 1, scope: !5336)
!5571 = !{i64 2147599074, i64 2147599117, i64 2147599157}
!5572 = !DILocation(line: 128, column: 1, scope: !5336)
!5573 = !{i64 2147599270, i64 2147599313, i64 2147599353}
!5574 = !DILocation(line: 129, column: 1, scope: !5336)
!5575 = !{i64 2147599535, i64 2147599578, i64 2147599618}
!5576 = !DILocation(line: 130, column: 1, scope: !5336)
!5577 = !{i64 2147599749, i64 2147599792, i64 2147599832}
!5578 = !DILocation(line: 131, column: 1, scope: !5336)
!5579 = !{i64 2147599924, i64 2147599967, i64 2147600007}
!5580 = !DILocation(line: 132, column: 1, scope: !5336)
!5581 = !{i64 2147604239, i64 2147604282, i64 2147604322}
!5582 = !DILocation(line: 133, column: 1, scope: !5336)
!5583 = !{i64 2147604438, i64 2147604481, i64 2147604521}
!5584 = !DILocation(line: 134, column: 1, scope: !5336)
!5585 = !{i64 2147604680, i64 2147604723, i64 2147604763}
!5586 = !DILocation(line: 135, column: 1, scope: !5336)
!5587 = !{i64 2147604843, i64 2147604886, i64 2147604926}
!5588 = !DILocation(line: 136, column: 1, scope: !5336)
!5589 = !{i64 2147605030, i64 2147605073, i64 2147605113}
!5590 = !DILocation(line: 137, column: 1, scope: !5336)
!5591 = !{i64 2147605223, i64 2147605266, i64 2147605306}
!5592 = !DILocation(line: 138, column: 1, scope: !5336)
!5593 = !{i64 2147605406, i64 2147605449, i64 2147605489}
!5594 = !DILocation(line: 139, column: 1, scope: !5336)
!5595 = !{i64 2147605620, i64 2147605663, i64 2147605703}
!5596 = !DILocation(line: 140, column: 1, scope: !5336)
!5597 = !{i64 2147605831, i64 2147605874, i64 2147605914}
!5598 = !DILocation(line: 141, column: 1, scope: !5336)
!5599 = !{i64 2147606051, i64 2147606094, i64 2147606134}
!5600 = !DILocation(line: 142, column: 1, scope: !5336)
!5601 = !{i64 2147606258, i64 2147606301, i64 2147606341}
!5602 = !DILocation(line: 143, column: 1, scope: !5336)
!5603 = !{i64 2147606531, i64 2147606574, i64 2147606614}
!5604 = !DILocation(line: 144, column: 1, scope: !5336)
!5605 = !{i64 2147606779, i64 2147606822, i64 2147606862}
!5606 = !DILocation(line: 145, column: 1, scope: !5336)
!5607 = !{i64 2147606978, i64 2147607021, i64 2147607061}
!5608 = !DILocation(line: 146, column: 1, scope: !5336)
!5609 = !{i64 2147607213, i64 2147607256, i64 2147607296}
!5610 = !DILocation(line: 147, column: 1, scope: !5336)
!5611 = !{i64 2147607463, i64 2147607506, i64 2147607546}
!5612 = !DILocation(line: 148, column: 1, scope: !5336)
!5613 = !{i64 2147607665, i64 2147607708, i64 2147607748}
!5614 = !DILocation(line: 149, column: 1, scope: !5336)
!5615 = !{i64 2147607888, i64 2147607931, i64 2147607971}
!5616 = !DILocation(line: 150, column: 1, scope: !5336)
!5617 = !{i64 2147608102, i64 2147608145, i64 2147608185}
!5618 = !DILocation(line: 151, column: 1, scope: !5336)
!5619 = !{i64 2147608346, i64 2147608389, i64 2147608429}
!5620 = !DILocation(line: 152, column: 1, scope: !5336)
!5621 = !{i64 2147608575, i64 2147608618, i64 2147608658}
!5622 = !DILocation(line: 153, column: 1, scope: !5336)
!5623 = !{i64 2147608804, i64 2147608847, i64 2147608887}
!5624 = !DILocation(line: 154, column: 1, scope: !5336)
!5625 = !{i64 2147609012, i64 2147609055, i64 2147609095}
!5626 = !DILocation(line: 155, column: 1, scope: !5336)
!5627 = !{i64 2147609250, i64 2147609293, i64 2147609333}
!5628 = !DILocation(line: 156, column: 1, scope: !5336)
!5629 = !{i64 2147609476, i64 2147609519, i64 2147609559}
!5630 = !DILocation(line: 157, column: 1, scope: !5336)
!5631 = !{i64 2147609735, i64 2147609778, i64 2147609818}
!5632 = !DILocation(line: 158, column: 1, scope: !5336)
!5633 = !{i64 2147609955, i64 2147609998, i64 2147610038}
!5634 = !DILocation(line: 159, column: 1, scope: !5336)
!5635 = !{i64 2147610187, i64 2147610230, i64 2147610270}
!5636 = !DILocation(line: 160, column: 1, scope: !5336)
!5637 = !{i64 2147610428, i64 2147610471, i64 2147610511}
!5638 = !DILocation(line: 161, column: 1, scope: !5336)
!5639 = !{i64 2147610669, i64 2147610712, i64 2147610752}
!5640 = !DILocation(line: 162, column: 1, scope: !5336)
!5641 = !{i64 2147610892, i64 2147610935, i64 2147610975}
!5642 = !DILocation(line: 163, column: 1, scope: !5336)
!5643 = !{i64 2147611109, i64 2147611152, i64 2147611192}
!5644 = !DILocation(line: 164, column: 1, scope: !5336)
!5645 = !{i64 2147611350, i64 2147611393, i64 2147611433}
!5646 = !DILocation(line: 165, column: 1, scope: !5336)
!5647 = !{i64 2147611537, i64 2147611580, i64 2147611620}
!5648 = !DILocation(line: 166, column: 1, scope: !5336)
!5649 = !{i64 2147611724, i64 2147611767, i64 2147611807}
!5650 = !DILocation(line: 167, column: 1, scope: !5336)
!5651 = !{i64 2147611887, i64 2147611930, i64 2147611970}
!5652 = !DILocation(line: 168, column: 1, scope: !5336)
!5653 = !{i64 2147612146, i64 2147612189, i64 2147612229}
!5654 = !DILocation(line: 169, column: 1, scope: !5336)
!5655 = !{i64 2147612369, i64 2147612412, i64 2147612452}
!5656 = !DILocation(line: 170, column: 1, scope: !5336)
!5657 = !{i64 2147612598, i64 2147612641, i64 2147612681}
!5658 = !DILocation(line: 171, column: 1, scope: !5336)
!5659 = !{i64 2147616855, i64 2147616898, i64 2147616938}
!5660 = !DILocation(line: 172, column: 1, scope: !5336)
!5661 = !{i64 2147617067, i64 2147617110, i64 2147617150}
!5662 = !DILocation(line: 173, column: 1, scope: !5336)
!5663 = !{i64 2147617288, i64 2147617331, i64 2147617371}
!5664 = !DILocation(line: 174, column: 1, scope: !5336)
!5665 = !{i64 2147617502, i64 2147617545, i64 2147617585}
!5666 = !DILocation(line: 175, column: 1, scope: !5336)
!5667 = !{i64 2147617692, i64 2147617735, i64 2147617775}
!5668 = !DILocation(line: 176, column: 1, scope: !5336)
!5669 = !{i64 2147617891, i64 2147617934, i64 2147617974}
!5670 = !DILocation(line: 177, column: 1, scope: !5336)
!5671 = !{i64 2147618096, i64 2147618139, i64 2147618179}
!5672 = !DILocation(line: 178, column: 1, scope: !5336)
!5673 = !{i64 2147618316, i64 2147618359, i64 2147618399}
!5674 = !DILocation(line: 179, column: 1, scope: !5336)
!5675 = !{i64 2147618517, i64 2147618560, i64 2147618600}
!5676 = !DILocation(line: 180, column: 1, scope: !5336)
!5677 = !{i64 2147618716, i64 2147618759, i64 2147618799}
!5678 = !DILocation(line: 181, column: 1, scope: !5336)
!5679 = !{i64 2147618921, i64 2147618964, i64 2147619004}
!5680 = !DILocation(line: 182, column: 1, scope: !5336)
!5681 = !{i64 2147619090, i64 2147619133, i64 2147619173}
!5682 = !DILocation(line: 183, column: 1, scope: !5336)
!5683 = !{i64 2147619274, i64 2147619317, i64 2147619357}
!5684 = !DILocation(line: 184, column: 1, scope: !5336)
!5685 = !{i64 2147619458, i64 2147619501, i64 2147619541}
!5686 = !DILocation(line: 185, column: 1, scope: !5336)
!5687 = !{i64 2147619645, i64 2147619688, i64 2147619728}
!5688 = !DILocation(line: 186, column: 1, scope: !5336)
!5689 = !{i64 2147619829, i64 2147619872, i64 2147619912}
!5690 = !DILocation(line: 187, column: 1, scope: !5336)
!5691 = !{i64 2147620067, i64 2147620110, i64 2147620150}
!5692 = !DILocation(line: 188, column: 1, scope: !5336)
!5693 = !{i64 2147620297, i64 2147620340, i64 2147620380}
!5694 = !DILocation(line: 189, column: 1, scope: !5336)
!5695 = !{i64 2147620526, i64 2147620569, i64 2147620609}
!5696 = !DILocation(line: 190, column: 1, scope: !5336)
!5697 = !{i64 2147620713, i64 2147620756, i64 2147620796}
!5698 = !DILocation(line: 191, column: 1, scope: !5336)
!5699 = !{i64 2147620909, i64 2147620952, i64 2147620992}
!5700 = !DILocation(line: 192, column: 1, scope: !5336)
!5701 = !{i64 2147621117, i64 2147621160, i64 2147621200}
!5702 = !DILocation(line: 193, column: 1, scope: !5336)
!5703 = !{i64 2147621329, i64 2147621372, i64 2147621412}
!5704 = !DILocation(line: 194, column: 1, scope: !5336)
!5705 = !{i64 2147621528, i64 2147621571, i64 2147621611}
!5706 = !DILocation(line: 195, column: 1, scope: !5336)
!5707 = !{i64 2147621766, i64 2147621809, i64 2147621849}
!5708 = !DILocation(line: 196, column: 1, scope: !5336)
!5709 = !{i64 2147621962, i64 2147622005, i64 2147622045}
!5710 = !DILocation(line: 197, column: 1, scope: !5336)
!5711 = !{i64 2147622164, i64 2147622207, i64 2147622247}
!5712 = !DILocation(line: 198, column: 1, scope: !5336)
!5713 = !{i64 2147622357, i64 2147622400, i64 2147622440}
!5714 = !DILocation(line: 199, column: 1, scope: !5336)
!5715 = !{i64 2147622591, i64 2147622634, i64 2147622674}
!5716 = !DILocation(line: 200, column: 1, scope: !5336)
!5717 = !{i64 2147622754, i64 2147622797, i64 2147622837}
!5718 = !DILocation(line: 201, column: 1, scope: !5336)
!5719 = !{i64 2147622993, i64 2147623036, i64 2147623076}
!5720 = !DILocation(line: 202, column: 1, scope: !5336)
!5721 = !{i64 2147623232, i64 2147623275, i64 2147623315}
!5722 = !DILocation(line: 203, column: 1, scope: !5336)
!5723 = !{i64 2147623468, i64 2147623511, i64 2147623551}
!5724 = !DILocation(line: 204, column: 1, scope: !5336)
!5725 = !{i64 2147623698, i64 2147623741, i64 2147623781}
!5726 = !DILocation(line: 205, column: 1, scope: !5336)
!5727 = !{i64 2147623885, i64 2147623928, i64 2147623968}
!5728 = !DILocation(line: 206, column: 1, scope: !5336)
!5729 = !{i64 2147624084, i64 2147624127, i64 2147624167}
!5730 = !DILocation(line: 207, column: 1, scope: !5336)
!5731 = !{i64 2147624355, i64 2147624398, i64 2147624438}
!5732 = !DILocation(line: 208, column: 1, scope: !5336)
!5733 = !{i64 2147624530, i64 2147624573, i64 2147624613}
!5734 = !DILocation(line: 209, column: 1, scope: !5336)
!5735 = !{i64 2147624764, i64 2147624807, i64 2147624847}
!5736 = !DILocation(line: 210, column: 1, scope: !5336)
!5737 = !{i64 2147624972, i64 2147625015, i64 2147625055}
!5738 = !DILocation(line: 211, column: 1, scope: !5336)
!5739 = !{i64 2147625190, i64 2147625233, i64 2147625273}
!5740 = !DILocation(line: 212, column: 1, scope: !5336)
!5741 = !{i64 2147625380, i64 2147625423, i64 2147625463}
!5742 = !DILocation(line: 213, column: 1, scope: !5336)
!5743 = !{i64 2147625576, i64 2147625619, i64 2147625659}
!5744 = !DILocation(line: 214, column: 1, scope: !5336)
!5745 = !{i64 2147625782, i64 2147625825, i64 2147625865}
!5746 = !DILocation(line: 215, column: 1, scope: !5336)
!5747 = !{i64 2147630048, i64 2147630091, i64 2147630131}
!5748 = !DILocation(line: 216, column: 1, scope: !5336)
!5749 = !{i64 2147630262, i64 2147630305, i64 2147630345}
!5750 = !DILocation(line: 217, column: 1, scope: !5336)
!5751 = !{i64 2147630488, i64 2147630531, i64 2147630571}
!5752 = !DILocation(line: 218, column: 1, scope: !5336)
!5753 = !{i64 2147630720, i64 2147630763, i64 2147630803}
!5754 = !DILocation(line: 219, column: 1, scope: !5336)
!5755 = !{i64 2147630904, i64 2147630947, i64 2147630987}
!5756 = !DILocation(line: 220, column: 1, scope: !5336)
!5757 = !{i64 2147631113, i64 2147631156, i64 2147631196}
!5758 = !DILocation(line: 221, column: 1, scope: !5336)
!5759 = !{i64 2147631297, i64 2147631340, i64 2147631380}
!5760 = !DILocation(line: 222, column: 1, scope: !5336)
!5761 = !{i64 2147631523, i64 2147631566, i64 2147631606}
!5762 = !DILocation(line: 223, column: 1, scope: !5336)
!5763 = !{i64 2147631749, i64 2147631792, i64 2147631832}
!5764 = !DILocation(line: 224, column: 1, scope: !5336)
!5765 = !{i64 2147631975, i64 2147632018, i64 2147632058}
!5766 = !DILocation(line: 225, column: 1, scope: !5336)
!5767 = !{i64 2147632201, i64 2147632244, i64 2147632284}
!5768 = !DILocation(line: 226, column: 1, scope: !5336)
!5769 = !{i64 2147632427, i64 2147632470, i64 2147632510}
!5770 = !DILocation(line: 227, column: 1, scope: !5336)
!5771 = !{i64 2147632659, i64 2147632702, i64 2147632742}
!5772 = !DILocation(line: 228, column: 1, scope: !5336)
!5773 = !{i64 2147632897, i64 2147632940, i64 2147632980}
!5774 = !DILocation(line: 229, column: 1, scope: !5336)
!5775 = !{i64 2147633117, i64 2147633160, i64 2147633200}
!5776 = !DILocation(line: 230, column: 1, scope: !5336)
!5777 = !{i64 2147633361, i64 2147633404, i64 2147633444}
!5778 = !DILocation(line: 231, column: 1, scope: !5336)
!5779 = !{i64 2147633602, i64 2147633645, i64 2147633685}
!5780 = !DILocation(line: 232, column: 1, scope: !5336)
!5781 = !{i64 2147633837, i64 2147633880, i64 2147633920}
!5782 = !DILocation(line: 233, column: 1, scope: !5336)
!5783 = !{i64 2147634069, i64 2147634112, i64 2147634152}
!5784 = !DILocation(line: 234, column: 1, scope: !5336)
!5785 = !{i64 2147634271, i64 2147634314, i64 2147634354}
!5786 = !DILocation(line: 235, column: 1, scope: !5336)
!5787 = !{i64 2147634521, i64 2147634564, i64 2147634604}
!5788 = !DILocation(line: 236, column: 1, scope: !5336)
!5789 = !{i64 2147634759, i64 2147634802, i64 2147634842}
!5790 = !DILocation(line: 237, column: 1, scope: !5336)
!5791 = !{i64 2147634943, i64 2147634986, i64 2147635026}
!5792 = !DILocation(line: 238, column: 1, scope: !5336)
!5793 = !{i64 2147635167, i64 2147635210, i64 2147635250}
!5794 = !DILocation(line: 239, column: 1, scope: !5336)
!5795 = !{i64 2147635405, i64 2147635448, i64 2147635488}
!5796 = !DILocation(line: 240, column: 1, scope: !5336)
!5797 = !{i64 2147635643, i64 2147635686, i64 2147635726}
!5798 = !DILocation(line: 241, column: 1, scope: !5336)
!5799 = !{i64 2147635836, i64 2147635879, i64 2147635919}
!5800 = !DILocation(line: 242, column: 1, scope: !5336)
!5801 = !{i64 2147636089, i64 2147636132, i64 2147636172}
!5802 = !DILocation(line: 243, column: 1, scope: !5336)
!5803 = !{i64 2147636303, i64 2147636346, i64 2147636386}
!5804 = !DILocation(line: 244, column: 1, scope: !5336)
!5805 = !{i64 2147636511, i64 2147636554, i64 2147636594}
!5806 = !DILocation(line: 245, column: 1, scope: !5336)
!5807 = !{i64 2147636701, i64 2147636744, i64 2147636784}
!5808 = !DILocation(line: 246, column: 1, scope: !5336)
!5809 = !{i64 2147636915, i64 2147636958, i64 2147636998}
!5810 = !DILocation(line: 247, column: 1, scope: !5336)
!5811 = !{i64 2147637177, i64 2147637220, i64 2147637260}
!5812 = !DILocation(line: 248, column: 1, scope: !5336)
!5813 = !{i64 2147637388, i64 2147637431, i64 2147637471}
!5814 = !DILocation(line: 249, column: 1, scope: !5336)
!5815 = !{i64 2147637632, i64 2147637675, i64 2147637715}
!5816 = !DILocation(line: 250, column: 1, scope: !5336)
!5817 = !{i64 2147637843, i64 2147637886, i64 2147637926}
!5818 = !DILocation(line: 251, column: 1, scope: !5336)
!5819 = !{i64 2147638072, i64 2147638115, i64 2147638155}
!5820 = !DILocation(line: 252, column: 1, scope: !5336)
!5821 = !{i64 2147638337, i64 2147638380, i64 2147638420}
!5822 = !DILocation(line: 253, column: 1, scope: !5336)
!5823 = !{i64 2147642603, i64 2147642646, i64 2147642686}
!5824 = !DILocation(line: 254, column: 1, scope: !5336)
!5825 = !{i64 2147642799, i64 2147642842, i64 2147642882}
!5826 = !DILocation(line: 255, column: 1, scope: !5336)
!5827 = !{i64 2147643022, i64 2147643065, i64 2147643105}
!5828 = !DILocation(line: 256, column: 1, scope: !5336)
!5829 = !{i64 2147643185, i64 2147643228, i64 2147643268}
!5830 = !DILocation(line: 257, column: 1, scope: !5336)
!5831 = !{i64 2147643390, i64 2147643433, i64 2147643473}
!5832 = !DILocation(line: 258, column: 1, scope: !5336)
!5833 = !{i64 2147643610, i64 2147643653, i64 2147643693}
!5834 = !DILocation(line: 259, column: 1, scope: !5336)
!5835 = !{i64 2147643824, i64 2147643867, i64 2147643907}
!5836 = !DILocation(line: 260, column: 1, scope: !5336)
!5837 = !{i64 2147644038, i64 2147644081, i64 2147644121}
!5838 = !DILocation(line: 261, column: 1, scope: !5336)
!5839 = !{i64 2147644249, i64 2147644292, i64 2147644332}
!5840 = !DILocation(line: 262, column: 1, scope: !5336)
!5841 = !{i64 2147644442, i64 2147644485, i64 2147644525}
!5842 = !DILocation(line: 263, column: 1, scope: !5336)
!5843 = !{i64 2147644641, i64 2147644684, i64 2147644724}
!5844 = !DILocation(line: 264, column: 1, scope: !5336)
!5845 = !{i64 2147644813, i64 2147644856, i64 2147644896}
!5846 = !DILocation(line: 265, column: 1, scope: !5336)
!5847 = !{i64 2147645006, i64 2147645049, i64 2147645089}
!5848 = !DILocation(line: 266, column: 1, scope: !5336)
!5849 = !{i64 2147645202, i64 2147645245, i64 2147645285}
!5850 = !DILocation(line: 267, column: 1, scope: !5336)
!5851 = !{i64 2147645429, i64 2147645472, i64 2147645512}
!5852 = !DILocation(line: 268, column: 1, scope: !5336)
!5853 = !{i64 2147645646, i64 2147645689, i64 2147645729}
!5854 = !DILocation(line: 269, column: 1, scope: !5336)
!5855 = !{i64 2147645938, i64 2147645981, i64 2147646021}
!5856 = !DILocation(line: 270, column: 1, scope: !5336)
!5857 = !{i64 2147646170, i64 2147646213, i64 2147646253}
!5858 = !DILocation(line: 271, column: 1, scope: !5336)
!5859 = !{i64 2147646387, i64 2147646430, i64 2147646470}
!5860 = !DILocation(line: 272, column: 1, scope: !5336)
!5861 = !{i64 2147646594, i64 2147646637, i64 2147646677}
!5862 = !DILocation(line: 273, column: 1, scope: !5336)
!5863 = !{i64 2147646795, i64 2147646838, i64 2147646878}
!5864 = !DILocation(line: 274, column: 1, scope: !5336)
!5865 = !{i64 2147647027, i64 2147647070, i64 2147647110}
!5866 = !DILocation(line: 275, column: 1, scope: !5336)
!5867 = !{i64 2147647235, i64 2147647278, i64 2147647318}
!5868 = !DILocation(line: 276, column: 1, scope: !5336)
!5869 = !{i64 2147647425, i64 2147647468, i64 2147647508}
!5870 = !DILocation(line: 277, column: 1, scope: !5336)
!5871 = !{i64 2147647651, i64 2147647694, i64 2147647734}
!5872 = !DILocation(line: 278, column: 1, scope: !5336)
!5873 = !{i64 2147647840, i64 2147647883, i64 2147647923}
!5874 = !DILocation(line: 279, column: 1, scope: !5336)
!5875 = !{i64 2147648111, i64 2147648154, i64 2147648194}
!5876 = !DILocation(line: 280, column: 1, scope: !5336)
!5877 = !{i64 2147648331, i64 2147648374, i64 2147648414}
!5878 = !DILocation(line: 281, column: 1, scope: !5336)
!5879 = !{i64 2147648584, i64 2147648627, i64 2147648667}
!5880 = !DILocation(line: 282, column: 1, scope: !5336)
!5881 = !{i64 2147648792, i64 2147648835, i64 2147648875}
!5882 = !DILocation(line: 283, column: 1, scope: !5336)
!5883 = !{i64 2147649024, i64 2147649067, i64 2147649107}
!5884 = !DILocation(line: 284, column: 1, scope: !5336)
!5885 = !{i64 2147649235, i64 2147649278, i64 2147649318}
!5886 = !DILocation(line: 285, column: 1, scope: !5336)
!5887 = !{i64 2147649425, i64 2147649468, i64 2147649508}
!5888 = !DILocation(line: 286, column: 1, scope: !5336)
!5889 = !{i64 2147649639, i64 2147649682, i64 2147649722}
!5890 = !DILocation(line: 287, column: 1, scope: !5336)
!5891 = !{i64 2147649838, i64 2147649881, i64 2147649921}
!5892 = !DILocation(line: 288, column: 1, scope: !5336)
!5893 = !{i64 2147650025, i64 2147650068, i64 2147650108}
!5894 = !DILocation(line: 289, column: 1, scope: !5336)
!5895 = !{i64 2147650233, i64 2147650276, i64 2147650316}
!5896 = !DILocation(line: 290, column: 1, scope: !5336)
!5897 = !{i64 2147650462, i64 2147650505, i64 2147650545}
!5898 = !DILocation(line: 291, column: 1, scope: !5336)
!5899 = !{i64 2147650664, i64 2147650707, i64 2147650747}
!5900 = !DILocation(line: 292, column: 1, scope: !5336)
!5901 = !{i64 2147650863, i64 2147650906, i64 2147650946}
!5902 = !DILocation(line: 293, column: 1, scope: !5336)
!5903 = !{i64 2147651080, i64 2147651123, i64 2147651163}
!5904 = !DILocation(line: 295, column: 1, scope: !5336)
!5905 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !291, file: !291, line: 30, type: !298, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5906)
!5906 = !{!5907, !5908}
!5907 = !DILocalVariable(name: "arg", arg: 1, scope: !5905, file: !291, line: 30, type: !300)
!5908 = !DILocalVariable(name: "key", scope: !5905, file: !291, line: 32, type: !162)
!5909 = !DILocation(line: 0, scope: !5905)
!5910 = !DILocation(line: 37, column: 2, scope: !5905)
!5911 = !DILocation(line: 38, column: 2, scope: !5905)
!5912 = !DILocation(line: 55, column: 2, scope: !5913, inlinedAt: !5920)
!5913 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5917)
!5914 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5915 = !DISubroutineType(types: !5916)
!5916 = !{!32}
!5917 = !{!5918, !5919}
!5918 = !DILocalVariable(name: "key", scope: !5913, file: !5914, line: 44, type: !32)
!5919 = !DILocalVariable(name: "tmp", scope: !5913, file: !5914, line: 53, type: !32)
!5920 = distinct !DILocation(line: 40, column: 8, scope: !5905)
!5921 = !{i64 2130559}
!5922 = !DILocation(line: 0, scope: !5913, inlinedAt: !5920)
!5923 = !DILocalVariable(name: "key", arg: 1, scope: !5924, file: !5914, line: 84, type: !32)
!5924 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !5927)
!5925 = !DISubroutineType(types: !5926)
!5926 = !{null, !32}
!5927 = !{!5923}
!5928 = !DILocation(line: 0, scope: !5924, inlinedAt: !5929)
!5929 = distinct !DILocation(line: 47, column: 2, scope: !5905)
!5930 = !DILocation(line: 95, column: 2, scope: !5924, inlinedAt: !5929)
!5931 = !{i64 2131376}
!5932 = !DILocation(line: 51, column: 18, scope: !5905)
!5933 = !DILocation(line: 53, column: 2, scope: !5905)
!5934 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !5935, file: !5935, line: 1609, type: !3130, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!5935 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5936 = !DILocation(line: 1611, column: 3, scope: !5934)
!5937 = !DILocation(line: 1612, column: 1, scope: !5934)
!5938 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !5935, file: !5935, line: 1629, type: !3130, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !274, retainedNodes: !250)
!5939 = !DILocation(line: 1631, column: 3, scope: !5938)
!5940 = !DILocation(line: 1632, column: 1, scope: !5938)
!5941 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !321, file: !321, line: 26, type: !327, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !318, retainedNodes: !5942)
!5942 = !{!5943}
!5943 = !DILocalVariable(name: "dev", arg: 1, scope: !5941, file: !321, line: 26, type: !329)
!5944 = !DILocation(line: 0, scope: !5941)
!5945 = !DILocation(line: 68, column: 2, scope: !5941)
!5946 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !5947, file: !5947, line: 57, type: !5948, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !5994)
!5947 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5948 = !DISubroutineType(types: !5949)
!5949 = !{null, !32, !5950}
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 32)
!5951 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5952)
!5952 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2610, line: 141, baseType: !5953)
!5953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2610, line: 97, size: 256, elements: !5954)
!5954 = !{!5955}
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !5953, file: !2610, line: 107, baseType: !5956, size: 256)
!5956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2610, line: 98, size: 256, elements: !5957)
!5957 = !{!5958, !5963, !5968, !5973, !5978, !5983, !5988, !5993}
!5958 = !DIDerivedType(tag: DW_TAG_member, scope: !5956, file: !2610, line: 99, baseType: !5959, size: 32)
!5959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5956, file: !2610, line: 99, size: 32, elements: !5960)
!5960 = !{!5961, !5962}
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !5959, file: !2610, line: 99, baseType: !162, size: 32)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !5959, file: !2610, line: 99, baseType: !162, size: 32)
!5963 = !DIDerivedType(tag: DW_TAG_member, scope: !5956, file: !2610, line: 100, baseType: !5964, size: 32, offset: 32)
!5964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5956, file: !2610, line: 100, size: 32, elements: !5965)
!5965 = !{!5966, !5967}
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !5964, file: !2610, line: 100, baseType: !162, size: 32)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !5964, file: !2610, line: 100, baseType: !162, size: 32)
!5968 = !DIDerivedType(tag: DW_TAG_member, scope: !5956, file: !2610, line: 101, baseType: !5969, size: 32, offset: 64)
!5969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5956, file: !2610, line: 101, size: 32, elements: !5970)
!5970 = !{!5971, !5972}
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !5969, file: !2610, line: 101, baseType: !162, size: 32)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !5969, file: !2610, line: 101, baseType: !162, size: 32)
!5973 = !DIDerivedType(tag: DW_TAG_member, scope: !5956, file: !2610, line: 102, baseType: !5974, size: 32, offset: 96)
!5974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5956, file: !2610, line: 102, size: 32, elements: !5975)
!5975 = !{!5976, !5977}
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !5974, file: !2610, line: 102, baseType: !162, size: 32)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !5974, file: !2610, line: 102, baseType: !162, size: 32)
!5978 = !DIDerivedType(tag: DW_TAG_member, scope: !5956, file: !2610, line: 103, baseType: !5979, size: 32, offset: 128)
!5979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5956, file: !2610, line: 103, size: 32, elements: !5980)
!5980 = !{!5981, !5982}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5979, file: !2610, line: 103, baseType: !162, size: 32)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5979, file: !2610, line: 103, baseType: !162, size: 32)
!5983 = !DIDerivedType(tag: DW_TAG_member, scope: !5956, file: !2610, line: 104, baseType: !5984, size: 32, offset: 160)
!5984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5956, file: !2610, line: 104, size: 32, elements: !5985)
!5985 = !{!5986, !5987}
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !5984, file: !2610, line: 104, baseType: !162, size: 32)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5984, file: !2610, line: 104, baseType: !162, size: 32)
!5988 = !DIDerivedType(tag: DW_TAG_member, scope: !5956, file: !2610, line: 105, baseType: !5989, size: 32, offset: 192)
!5989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5956, file: !2610, line: 105, size: 32, elements: !5990)
!5990 = !{!5991, !5992}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !5989, file: !2610, line: 105, baseType: !162, size: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5989, file: !2610, line: 105, baseType: !162, size: 32)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !5956, file: !2610, line: 106, baseType: !162, size: 32, offset: 224)
!5994 = !{!5995, !5996}
!5995 = !DILocalVariable(name: "reason", arg: 1, scope: !5946, file: !5947, line: 57, type: !32)
!5996 = !DILocalVariable(name: "esf", arg: 2, scope: !5946, file: !5947, line: 57, type: !5950)
!5997 = !DILocation(line: 0, scope: !5946)
!5998 = !DILocation(line: 63, column: 2, scope: !5946)
!5999 = !DILocation(line: 64, column: 1, scope: !5946)
!6000 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !5947, file: !5947, line: 82, type: !6001, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !6016)
!6001 = !DISubroutineType(types: !6002)
!6002 = !{null, !5950, !6003}
!6003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6004, size: 32)
!6004 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6005)
!6005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6006)
!6006 = !{!6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015}
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6005, file: !428, line: 26, baseType: !162, size: 32)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6005, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6005, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6005, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6005, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6005, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6005, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6005, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6005, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6016 = !{!6017, !6018, !6019}
!6017 = !DILocalVariable(name: "esf", arg: 1, scope: !6000, file: !5947, line: 82, type: !5950)
!6018 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6000, file: !5947, line: 82, type: !6003)
!6019 = !DILocalVariable(name: "reason", scope: !6000, file: !5947, line: 88, type: !32)
!6020 = !DILocation(line: 0, scope: !6000)
!6021 = !DILocation(line: 88, column: 35, scope: !6000)
!6022 = !DILocation(line: 108, column: 2, scope: !6000)
!6023 = !DILocation(line: 131, column: 1, scope: !6000)
!6024 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !5947, file: !5947, line: 133, type: !6025, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2490, retainedNodes: !6027)
!6025 = !DISubroutineType(types: !6026)
!6026 = !{null, !102}
!6027 = !{!6028, !6029, !6030}
!6028 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6024, file: !5947, line: 133, type: !102)
!6029 = !DILocalVariable(name: "ssf_contents", scope: !6024, file: !5947, line: 135, type: !846)
!6030 = !DILocalVariable(name: "oops_esf", scope: !6024, file: !5947, line: 136, type: !5952)
!6031 = !DILocation(line: 0, scope: !6024)
!6032 = !DILocation(line: 136, column: 2, scope: !6024)
!6033 = !DILocation(line: 136, column: 15, scope: !6024)
!6034 = !DILocation(line: 139, column: 22, scope: !6024)
!6035 = !DILocation(line: 139, column: 17, scope: !6024)
!6036 = !DILocation(line: 139, column: 20, scope: !6024)
!6037 = !DILocation(line: 141, column: 2, scope: !6024)
!6038 = !DILocation(line: 142, column: 2, scope: !6024)
!6039 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6040, file: !6040, line: 40, type: !5925, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6041)
!6040 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "irq", arg: 1, scope: !6039, file: !6040, line: 40, type: !32)
!6043 = !DILocation(line: 0, scope: !6039)
!6044 = !DILocation(line: 42, column: 2, scope: !6039)
!6045 = !DILocation(line: 43, column: 1, scope: !6039)
!6046 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !497, file: !497, line: 1684, type: !6047, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6049)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{null, !753}
!6049 = !{!6050}
!6050 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6046, file: !497, line: 1684, type: !753)
!6051 = !DILocation(line: 0, scope: !6046)
!6052 = !DILocation(line: 1686, column: 23, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6046, file: !497, line: 1686, column: 7)
!6054 = !DILocation(line: 1686, column: 7, scope: !6046)
!6055 = !DILocation(line: 1688, column: 5, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6053, file: !497, line: 1687, column: 3)
!6057 = !{i64 2151023531}
!6058 = !DILocation(line: 1689, column: 81, scope: !6056)
!6059 = !DILocation(line: 1689, column: 60, scope: !6056)
!6060 = !DILocation(line: 1689, column: 34, scope: !6056)
!6061 = !DILocation(line: 1689, column: 5, scope: !6056)
!6062 = !DILocation(line: 1689, column: 43, scope: !6056)
!6063 = !DILocation(line: 1690, column: 5, scope: !6056)
!6064 = !{i64 2151023645}
!6065 = !DILocation(line: 1691, column: 3, scope: !6056)
!6066 = !DILocation(line: 1692, column: 1, scope: !6046)
!6067 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6040, file: !6040, line: 45, type: !5925, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6068)
!6068 = !{!6069}
!6069 = !DILocalVariable(name: "irq", arg: 1, scope: !6067, file: !6040, line: 45, type: !32)
!6070 = !DILocation(line: 0, scope: !6067)
!6071 = !DILocation(line: 47, column: 2, scope: !6067)
!6072 = !DILocation(line: 48, column: 1, scope: !6067)
!6073 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !497, file: !497, line: 1722, type: !6047, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6074)
!6074 = !{!6075}
!6075 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6073, file: !497, line: 1722, type: !753)
!6076 = !DILocation(line: 0, scope: !6073)
!6077 = !DILocation(line: 1724, column: 23, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6073, file: !497, line: 1724, column: 7)
!6079 = !DILocation(line: 1724, column: 7, scope: !6073)
!6080 = !DILocation(line: 1726, column: 81, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !6078, file: !497, line: 1725, column: 3)
!6082 = !DILocation(line: 1726, column: 60, scope: !6081)
!6083 = !DILocation(line: 1726, column: 34, scope: !6081)
!6084 = !DILocation(line: 1726, column: 5, scope: !6081)
!6085 = !DILocation(line: 1726, column: 43, scope: !6081)
!6086 = !DILocation(line: 271, column: 3, scope: !6087, inlinedAt: !6089)
!6087 = distinct !DISubprogram(name: "__DSB", scope: !6088, file: !6088, line: 269, type: !3130, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !250)
!6088 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6089 = distinct !DILocation(line: 1727, column: 5, scope: !6081)
!6090 = !{i64 3477914}
!6091 = !DILocation(line: 260, column: 3, scope: !6092, inlinedAt: !6093)
!6092 = distinct !DISubprogram(name: "__ISB", scope: !6088, file: !6088, line: 258, type: !3130, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !250)
!6093 = distinct !DILocation(line: 1728, column: 5, scope: !6081)
!6094 = !{i64 3477631}
!6095 = !DILocation(line: 1729, column: 3, scope: !6081)
!6096 = !DILocation(line: 1730, column: 1, scope: !6073)
!6097 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6040, file: !6040, line: 50, type: !6098, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6100)
!6098 = !DISubroutineType(types: !6099)
!6099 = !{!107, !32}
!6100 = !{!6101}
!6101 = !DILocalVariable(name: "irq", arg: 1, scope: !6097, file: !6040, line: 50, type: !32)
!6102 = !DILocation(line: 0, scope: !6097)
!6103 = !DILocation(line: 52, column: 20, scope: !6097)
!6104 = !DILocation(line: 52, column: 9, scope: !6097)
!6105 = !DILocation(line: 52, column: 41, scope: !6097)
!6106 = !DILocation(line: 52, column: 39, scope: !6097)
!6107 = !DILocation(line: 52, column: 2, scope: !6097)
!6108 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6040, file: !6040, line: 64, type: !6109, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6111)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{null, !32, !32, !162}
!6111 = !{!6112, !6113, !6114}
!6112 = !DILocalVariable(name: "irq", arg: 1, scope: !6108, file: !6040, line: 64, type: !32)
!6113 = !DILocalVariable(name: "prio", arg: 2, scope: !6108, file: !6040, line: 64, type: !32)
!6114 = !DILocalVariable(name: "flags", arg: 3, scope: !6108, file: !6040, line: 64, type: !162)
!6115 = !DILocation(line: 0, scope: !6108)
!6116 = !DILocation(line: 83, column: 8, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !6118, file: !6040, line: 82, column: 9)
!6118 = distinct !DILexicalBlock(scope: !6108, file: !6040, line: 76, column: 6)
!6119 = !DILocation(line: 95, column: 2, scope: !6108)
!6120 = !DILocation(line: 96, column: 1, scope: !6108)
!6121 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6122, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6124)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{null, !753, !162}
!6124 = !{!6125, !6126}
!6125 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6121, file: !497, line: 1814, type: !753)
!6126 = !DILocalVariable(name: "priority", arg: 2, scope: !6121, file: !497, line: 1814, type: !162)
!6127 = !DILocation(line: 0, scope: !6121)
!6128 = !DILocation(line: 0, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !6121, file: !497, line: 1816, column: 7)
!6130 = !DILocation(line: 1816, column: 7, scope: !6121)
!6131 = !DILocation(line: 1824, column: 1, scope: !6121)
!6132 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6040, file: !6040, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2501, retainedNodes: !6133)
!6133 = !{!6134}
!6134 = !DILocalVariable(name: "unused", arg: 1, scope: !6132, file: !6040, line: 155, type: !13)
!6135 = !DILocation(line: 0, scope: !6132)
!6136 = !DILocation(line: 159, column: 2, scope: !6132)
!6137 = !DILocation(line: 160, column: 1, scope: !6132)
!6138 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6139, file: !6139, line: 87, type: !3130, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !250)
!6139 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6140 = !DILocation(line: 89, column: 2, scope: !6138)
!6141 = !DILocation(line: 90, column: 2, scope: !6138)
!6142 = !DILocation(line: 91, column: 1, scope: !6138)
!6143 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6139, file: !6139, line: 23, type: !3130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6144 = !DISubprogram(name: "z_arm_int_exit", scope: !6145, file: !6145, line: 153, type: !3130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!6145 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6146 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6147, file: !6147, line: 256, type: !3130, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !250)
!6147 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6148 = !DILocation(line: 258, column: 2, scope: !6146)
!6149 = !DILocation(line: 260, column: 2, scope: !6146)
!6150 = !DILocation(line: 262, column: 2, scope: !6146)
!6151 = !DILocation(line: 263, column: 2, scope: !6146)
!6152 = !DILocation(line: 267, column: 2, scope: !6146)
!6153 = !DILocation(line: 268, column: 2, scope: !6146)
!6154 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6147, file: !6147, line: 53, type: !3130, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !250)
!6155 = !DILocation(line: 55, column: 12, scope: !6154)
!6156 = !DILocation(line: 271, column: 3, scope: !6157, inlinedAt: !6158)
!6157 = distinct !DISubprogram(name: "__DSB", scope: !6088, file: !6088, line: 269, type: !3130, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !250)
!6158 = distinct !DILocation(line: 56, column: 2, scope: !6154)
!6159 = !{i64 3476585}
!6160 = !DILocation(line: 260, column: 3, scope: !6161, inlinedAt: !6162)
!6161 = distinct !DISubprogram(name: "__ISB", scope: !6088, file: !6088, line: 258, type: !3130, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !250)
!6162 = distinct !DILocation(line: 57, column: 2, scope: !6154)
!6163 = !{i64 3476302}
!6164 = !DILocation(line: 58, column: 1, scope: !6154)
!6165 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6147, file: !6147, line: 96, type: !3130, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !250)
!6166 = !DILocation(line: 103, column: 13, scope: !6165)
!6167 = !DILocation(line: 975, column: 3, scope: !6168, inlinedAt: !6173)
!6168 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6088, file: !6088, line: 971, type: !6169, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6171)
!6169 = !DISubroutineType(types: !6170)
!6170 = !{!162}
!6171 = !{!6172}
!6172 = !DILocalVariable(name: "result", scope: !6168, file: !6088, line: 973, type: !162)
!6173 = distinct !DILocation(line: 189, column: 16, scope: !6165)
!6174 = !{i64 3497415}
!6175 = !DILocation(line: 0, scope: !6168, inlinedAt: !6173)
!6176 = !DILocation(line: 189, column: 32, scope: !6165)
!6177 = !DILocalVariable(name: "control", arg: 1, scope: !6178, file: !6088, line: 1001, type: !162)
!6178 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6088, file: !6088, line: 1001, type: !6179, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6181)
!6179 = !DISubroutineType(types: !6180)
!6180 = !{null, !162}
!6181 = !{!6177}
!6182 = !DILocation(line: 0, scope: !6178, inlinedAt: !6183)
!6183 = distinct !DILocation(line: 189, column: 2, scope: !6165)
!6184 = !DILocation(line: 1003, column: 3, scope: !6178, inlinedAt: !6183)
!6185 = !{i64 3498135}
!6186 = !DILocation(line: 260, column: 3, scope: !6161, inlinedAt: !6187)
!6187 = distinct !DILocation(line: 1004, column: 3, scope: !6178, inlinedAt: !6183)
!6188 = !DILocation(line: 191, column: 1, scope: !6165)
!6189 = distinct !DISubprogram(name: "arch_swap", scope: !6190, file: !6190, line: 33, type: !6098, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6191)
!6190 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6191 = !{!6192}
!6192 = !DILocalVariable(name: "key", arg: 1, scope: !6189, file: !6190, line: 33, type: !32)
!6193 = !DILocation(line: 0, scope: !6189)
!6194 = !DILocation(line: 36, column: 2, scope: !6189)
!6195 = !DILocation(line: 36, column: 17, scope: !6189)
!6196 = !DILocation(line: 36, column: 25, scope: !6189)
!6197 = !DILocation(line: 37, column: 37, scope: !6189)
!6198 = !DILocation(line: 37, column: 17, scope: !6189)
!6199 = !DILocation(line: 37, column: 35, scope: !6189)
!6200 = !DILocation(line: 41, column: 12, scope: !6189)
!6201 = !DILocalVariable(name: "key", arg: 1, scope: !6202, file: !5914, line: 84, type: !32)
!6202 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2577, retainedNodes: !6203)
!6203 = !{!6201}
!6204 = !DILocation(line: 0, scope: !6202, inlinedAt: !6205)
!6205 = distinct !DILocation(line: 44, column: 2, scope: !6189)
!6206 = !DILocation(line: 95, column: 2, scope: !6202, inlinedAt: !6205)
!6207 = !{i64 2238649}
!6208 = !DILocation(line: 53, column: 9, scope: !6189)
!6209 = !DILocation(line: 53, column: 24, scope: !6189)
!6210 = !DILocation(line: 53, column: 2, scope: !6189)
!6211 = distinct !DISubprogram(name: "arch_new_thread", scope: !6212, file: !6212, line: 56, type: !6213, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !6320)
!6212 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6213 = !DISubroutineType(types: !6214)
!6214 = !{null, !6215, !6315, !256, !3670, !102, !102, !102}
!6215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6216, size: 32)
!6216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6217)
!6217 = !{!6218, !6276, !6288, !6289, !6290, !6291, !6297, !6310}
!6218 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6216, file: !359, line: 247, baseType: !6219, size: 384)
!6219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6220)
!6220 = !{!6221, !6245, !6252, !6253, !6254, !6263, !6264, !6265}
!6221 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !359, line: 60, baseType: !6222, size: 64)
!6222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !359, line: 60, size: 64, elements: !6223)
!6223 = !{!6224, !6239}
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6222, file: !359, line: 61, baseType: !6225, size: 64)
!6225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6226)
!6226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6227)
!6227 = !{!6228, !6234}
!6228 = !DIDerivedType(tag: DW_TAG_member, scope: !6226, file: !233, line: 38, baseType: !6229, size: 32)
!6229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6226, file: !233, line: 38, size: 32, elements: !6230)
!6230 = !{!6231, !6233}
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6229, file: !233, line: 39, baseType: !6232, size: 32)
!6232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6226, size: 32)
!6233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6229, file: !233, line: 40, baseType: !6232, size: 32)
!6234 = !DIDerivedType(tag: DW_TAG_member, scope: !6226, file: !233, line: 42, baseType: !6235, size: 32, offset: 32)
!6235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6226, file: !233, line: 42, size: 32, elements: !6236)
!6236 = !{!6237, !6238}
!6237 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6235, file: !233, line: 43, baseType: !6232, size: 32)
!6238 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6235, file: !233, line: 44, baseType: !6232, size: 32)
!6239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6222, file: !359, line: 62, baseType: !6240, size: 64)
!6240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6241)
!6241 = !{!6242}
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6240, file: !384, line: 50, baseType: !6243, size: 64)
!6243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6244, size: 64, elements: !389)
!6244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6240, size: 32)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6219, file: !359, line: 68, baseType: !6246, size: 32, offset: 64)
!6246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6247, size: 32)
!6247 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6248)
!6248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6249)
!6249 = !{!6250}
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6248, file: !228, line: 232, baseType: !6251, size: 64)
!6251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6226)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6219, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6219, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6254 = !DIDerivedType(tag: DW_TAG_member, scope: !6219, file: !359, line: 90, baseType: !6255, size: 16, offset: 112)
!6255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6219, file: !359, line: 90, size: 16, elements: !6256)
!6256 = !{!6257, !6262}
!6257 = !DIDerivedType(tag: DW_TAG_member, scope: !6255, file: !359, line: 91, baseType: !6258, size: 16)
!6258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6255, file: !359, line: 91, size: 16, elements: !6259)
!6259 = !{!6260, !6261}
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6258, file: !359, line: 96, baseType: !407, size: 8)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6258, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6255, file: !359, line: 100, baseType: !411, size: 16)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6219, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6219, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6219, file: !359, line: 131, baseType: !6266, size: 192, offset: 192)
!6266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6267)
!6267 = !{!6268, !6269, !6275}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6266, file: !228, line: 245, baseType: !6225, size: 64)
!6269 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6266, file: !228, line: 246, baseType: !6270, size: 32, offset: 64)
!6270 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6271)
!6271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6272, size: 32)
!6272 = !DISubroutineType(types: !6273)
!6273 = !{null, !6274}
!6274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 32)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6266, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6216, file: !359, line: 250, baseType: !6277, size: 288, offset: 384)
!6277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6278)
!6278 = !{!6279, !6280, !6281, !6282, !6283, !6284, !6285, !6286, !6287}
!6279 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6277, file: !428, line: 26, baseType: !162, size: 32)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6277, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6277, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6277, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6277, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6277, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6277, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6277, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6277, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6216, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6216, file: !359, line: 256, baseType: !6247, size: 64, offset: 704)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6216, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6216, file: !359, line: 300, baseType: !6292, size: 96, offset: 800)
!6292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6293)
!6293 = !{!6294, !6295, !6296}
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6292, file: !359, line: 153, baseType: !22, size: 32)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6292, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6292, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6216, file: !359, line: 325, baseType: !6298, size: 32, offset: 896)
!6298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6299, size: 32)
!6299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6300)
!6300 = !{!6301, !6307, !6308}
!6301 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6299, file: !224, line: 5074, baseType: !6302, size: 96)
!6302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6303)
!6303 = !{!6304, !6305, !6306}
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6302, file: !454, line: 57, baseType: !457, size: 32)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6302, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6302, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6299, file: !224, line: 5075, baseType: !6247, size: 64, offset: 96)
!6308 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6299, file: !224, line: 5076, baseType: !6309, offset: 160)
!6309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6216, file: !359, line: 343, baseType: !6311, size: 64, offset: 928)
!6311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6312)
!6312 = !{!6313, !6314}
!6313 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6311, file: !428, line: 63, baseType: !162, size: 32)
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6311, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 32)
!6316 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3671, line: 44, baseType: !6317)
!6317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2058, line: 47, size: 8, elements: !6318)
!6318 = !{!6319}
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6317, file: !2058, line: 48, baseType: !125, size: 8)
!6320 = !{!6321, !6322, !6323, !6324, !6325, !6326, !6327, !6328}
!6321 = !DILocalVariable(name: "thread", arg: 1, scope: !6211, file: !6212, line: 56, type: !6215)
!6322 = !DILocalVariable(name: "stack", arg: 2, scope: !6211, file: !6212, line: 56, type: !6315)
!6323 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6211, file: !6212, line: 57, type: !256)
!6324 = !DILocalVariable(name: "entry", arg: 4, scope: !6211, file: !6212, line: 57, type: !3670)
!6325 = !DILocalVariable(name: "p1", arg: 5, scope: !6211, file: !6212, line: 58, type: !102)
!6326 = !DILocalVariable(name: "p2", arg: 6, scope: !6211, file: !6212, line: 58, type: !102)
!6327 = !DILocalVariable(name: "p3", arg: 7, scope: !6211, file: !6212, line: 58, type: !102)
!6328 = !DILocalVariable(name: "iframe", scope: !6211, file: !6212, line: 60, type: !2608)
!6329 = !DILocation(line: 0, scope: !6211)
!6330 = !DILocation(line: 85, column: 11, scope: !6211)
!6331 = !DILocation(line: 93, column: 10, scope: !6211)
!6332 = !DILocation(line: 98, column: 13, scope: !6211)
!6333 = !DILocation(line: 100, column: 15, scope: !6211)
!6334 = !DILocation(line: 100, column: 10, scope: !6211)
!6335 = !DILocation(line: 100, column: 13, scope: !6211)
!6336 = !DILocation(line: 101, column: 15, scope: !6211)
!6337 = !DILocation(line: 101, column: 10, scope: !6211)
!6338 = !DILocation(line: 101, column: 13, scope: !6211)
!6339 = !DILocation(line: 102, column: 15, scope: !6211)
!6340 = !DILocation(line: 102, column: 10, scope: !6211)
!6341 = !DILocation(line: 102, column: 13, scope: !6211)
!6342 = !DILocation(line: 103, column: 15, scope: !6211)
!6343 = !DILocation(line: 103, column: 10, scope: !6211)
!6344 = !DILocation(line: 103, column: 13, scope: !6211)
!6345 = !DILocation(line: 106, column: 10, scope: !6211)
!6346 = !DILocation(line: 106, column: 15, scope: !6211)
!6347 = !DILocation(line: 122, column: 29, scope: !6211)
!6348 = !DILocation(line: 122, column: 23, scope: !6211)
!6349 = !DILocation(line: 122, column: 27, scope: !6211)
!6350 = !DILocation(line: 123, column: 15, scope: !6211)
!6351 = !DILocation(line: 123, column: 23, scope: !6211)
!6352 = !DILocation(line: 143, column: 1, scope: !6211)
!6353 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6212, file: !6212, line: 385, type: !6354, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !6357)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{!162, !6356, !6356}
!6356 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !162)
!6357 = !{!6358, !6359, !6360, !6363}
!6358 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6353, file: !6212, line: 385, type: !6356)
!6359 = !DILocalVariable(name: "psp", arg: 2, scope: !6353, file: !6212, line: 385, type: !6356)
!6360 = !DILocalVariable(name: "thread", scope: !6353, file: !6212, line: 388, type: !6361)
!6361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6362, size: 32)
!6362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6216)
!6363 = !DILocalVariable(name: "guard_len", scope: !6353, file: !6212, line: 405, type: !162)
!6364 = !DILocation(line: 0, scope: !6353)
!6365 = !DILocation(line: 388, column: 34, scope: !6353)
!6366 = !DILocation(line: 390, column: 13, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6353, file: !6212, line: 390, column: 6)
!6368 = !DILocation(line: 390, column: 6, scope: !6353)
!6369 = !DILocation(line: 438, column: 6, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6353, file: !6212, line: 438, column: 6)
!6371 = !DILocation(line: 438, column: 6, scope: !6353)
!6372 = !DILocation(line: 442, column: 3, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6370, file: !6212, line: 440, column: 22)
!6374 = !DILocation(line: 455, column: 1, scope: !6353)
!6375 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6212, file: !6212, line: 530, type: !6376, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2605, retainedNodes: !6378)
!6376 = !DISubroutineType(types: !6377)
!6377 = !{null, !6215, !256, !3670}
!6378 = !{!6379, !6380, !6381}
!6379 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6375, file: !6212, line: 530, type: !6215)
!6380 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6375, file: !6212, line: 530, type: !256)
!6381 = !DILocalVariable(name: "_main", arg: 3, scope: !6375, file: !6212, line: 531, type: !3670)
!6382 = !DILocation(line: 0, scope: !6375)
!6383 = !DILocation(line: 535, column: 11, scope: !6375)
!6384 = !DILocation(line: 560, column: 2, scope: !6375)
!6385 = !DILocation(line: 576, column: 2, scope: !6375)
!6386 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6387 = !DILocation(line: 603, column: 2, scope: !6375)
!6388 = distinct !DISubprogram(name: "z_arm_fault", scope: !6389, file: !6389, line: 1036, type: !6390, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6405)
!6389 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6390 = !DISubroutineType(types: !6391)
!6391 = !{null, !162, !162, !162, !6392}
!6392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6393, size: 32)
!6393 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !428, line: 37, baseType: !6394)
!6394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6395)
!6395 = !{!6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404}
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6394, file: !428, line: 26, baseType: !162, size: 32)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6394, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6394, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6394, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6394, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6394, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6394, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6394, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6394, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6405 = !{!6406, !6407, !6408, !6409, !6410, !6411, !6412, !6413, !6414, !6415}
!6406 = !DILocalVariable(name: "msp", arg: 1, scope: !6388, file: !6389, line: 1036, type: !162)
!6407 = !DILocalVariable(name: "psp", arg: 2, scope: !6388, file: !6389, line: 1036, type: !162)
!6408 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6388, file: !6389, line: 1036, type: !162)
!6409 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6388, file: !6389, line: 1037, type: !6392)
!6410 = !DILocalVariable(name: "reason", scope: !6388, file: !6389, line: 1039, type: !162)
!6411 = !DILocalVariable(name: "fault", scope: !6388, file: !6389, line: 1040, type: !107)
!6412 = !DILocalVariable(name: "recoverable", scope: !6388, file: !6389, line: 1041, type: !136)
!6413 = !DILocalVariable(name: "nested_exc", scope: !6388, file: !6389, line: 1041, type: !136)
!6414 = !DILocalVariable(name: "esf", scope: !6388, file: !6389, line: 1042, type: !2676)
!6415 = !DILocalVariable(name: "esf_copy", scope: !6388, file: !6389, line: 1047, type: !2677)
!6416 = !DILocation(line: 0, scope: !6388)
!6417 = !DILocation(line: 1040, column: 19, scope: !6388)
!6418 = !DILocation(line: 1040, column: 24, scope: !6388)
!6419 = !DILocation(line: 1041, column: 2, scope: !6388)
!6420 = !DILocation(line: 1047, column: 2, scope: !6388)
!6421 = !DILocation(line: 1047, column: 15, scope: !6388)
!6422 = !DILocalVariable(name: "key", arg: 1, scope: !6423, file: !5914, line: 84, type: !32)
!6423 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6424)
!6424 = !{!6422}
!6425 = !DILocation(line: 0, scope: !6423, inlinedAt: !6426)
!6426 = distinct !DILocation(line: 1050, column: 2, scope: !6388)
!6427 = !DILocation(line: 95, column: 2, scope: !6423, inlinedAt: !6426)
!6428 = !{i64 2271893}
!6429 = !DILocation(line: 1055, column: 9, scope: !6388)
!6430 = !DILocation(line: 1063, column: 11, scope: !6388)
!6431 = !DILocation(line: 1064, column: 6, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6388, file: !6389, line: 1064, column: 6)
!6433 = !{i8 0, i8 2}
!6434 = !DILocation(line: 1064, column: 6, scope: !6388)
!6435 = !DILocation(line: 1070, column: 20, scope: !6388)
!6436 = !DILocation(line: 1070, column: 2, scope: !6388)
!6437 = !DILocation(line: 1089, column: 6, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6388, file: !6389, line: 1089, column: 6)
!6439 = !DILocation(line: 0, scope: !6438)
!6440 = !DILocation(line: 1089, column: 6, scope: !6388)
!6441 = !DILocation(line: 1090, column: 28, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6443, file: !6389, line: 1090, column: 7)
!6443 = distinct !DILexicalBlock(scope: !6438, file: !6389, line: 1089, column: 18)
!6444 = !DILocation(line: 1090, column: 44, scope: !6442)
!6445 = !DILocation(line: 1090, column: 7, scope: !6443)
!6446 = !DILocation(line: 1091, column: 24, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6442, file: !6389, line: 1090, column: 50)
!6448 = !DILocation(line: 1092, column: 3, scope: !6447)
!6449 = !DILocation(line: 1094, column: 23, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6438, file: !6389, line: 1093, column: 9)
!6451 = !DILocation(line: 1097, column: 2, scope: !6388)
!6452 = !DILocation(line: 1098, column: 1, scope: !6388)
!6453 = distinct !DISubprogram(name: "get_esf", scope: !6389, file: !6389, line: 894, type: !6454, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6457)
!6454 = !DISubroutineType(types: !6455)
!6455 = !{!2676, !162, !162, !162, !6456}
!6456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 32)
!6457 = !{!6458, !6459, !6460, !6461, !6462, !6463}
!6458 = !DILocalVariable(name: "msp", arg: 1, scope: !6453, file: !6389, line: 894, type: !162)
!6459 = !DILocalVariable(name: "psp", arg: 2, scope: !6453, file: !6389, line: 894, type: !162)
!6460 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6453, file: !6389, line: 894, type: !162)
!6461 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6453, file: !6389, line: 895, type: !6456)
!6462 = !DILocalVariable(name: "alternative_state_exc", scope: !6453, file: !6389, line: 897, type: !136)
!6463 = !DILocalVariable(name: "ptr_esf", scope: !6453, file: !6389, line: 898, type: !2676)
!6464 = !DILocation(line: 0, scope: !6453)
!6465 = !DILocation(line: 900, column: 14, scope: !6453)
!6466 = !DILocation(line: 902, column: 49, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6453, file: !6389, line: 902, column: 6)
!6468 = !DILocation(line: 902, column: 6, scope: !6453)
!6469 = !DILocation(line: 983, column: 18, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6453, file: !6389, line: 983, column: 6)
!6471 = !DILocation(line: 991, column: 7, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6473, file: !6389, line: 990, column: 30)
!6473 = distinct !DILexicalBlock(scope: !6453, file: !6389, line: 990, column: 6)
!6474 = !DILocation(line: 998, column: 16, scope: !6475)
!6475 = distinct !DILexicalBlock(scope: !6476, file: !6389, line: 995, column: 10)
!6476 = distinct !DILexicalBlock(scope: !6472, file: !6389, line: 991, column: 7)
!6477 = !DILocation(line: 1002, column: 2, scope: !6453)
!6478 = !DILocation(line: 1003, column: 1, scope: !6453)
!6479 = distinct !DISubprogram(name: "fault_handle", scope: !6389, file: !6389, line: 786, type: !6480, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6482)
!6480 = !DISubroutineType(types: !6481)
!6481 = !{!162, !2676, !107, !6456}
!6482 = !{!6483, !6484, !6485, !6486}
!6483 = !DILocalVariable(name: "esf", arg: 1, scope: !6479, file: !6389, line: 786, type: !2676)
!6484 = !DILocalVariable(name: "fault", arg: 2, scope: !6479, file: !6389, line: 786, type: !107)
!6485 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6479, file: !6389, line: 786, type: !6456)
!6486 = !DILocalVariable(name: "reason", scope: !6479, file: !6389, line: 788, type: !162)
!6487 = !DILocation(line: 0, scope: !6479)
!6488 = !DILocation(line: 790, column: 15, scope: !6479)
!6489 = !DILocation(line: 792, column: 2, scope: !6479)
!6490 = !DILocation(line: 794, column: 12, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6479, file: !6389, line: 792, column: 17)
!6492 = !DILocation(line: 795, column: 3, scope: !6491)
!6493 = !DILocation(line: 800, column: 12, scope: !6491)
!6494 = !DILocation(line: 801, column: 3, scope: !6491)
!6495 = !DILocation(line: 803, column: 12, scope: !6491)
!6496 = !DILocation(line: 804, column: 3, scope: !6491)
!6497 = !DILocation(line: 806, column: 12, scope: !6491)
!6498 = !DILocation(line: 807, column: 3, scope: !6491)
!6499 = !DILocation(line: 814, column: 3, scope: !6491)
!6500 = !DILocation(line: 815, column: 3, scope: !6491)
!6501 = !DILocation(line: 829, column: 2, scope: !6479)
!6502 = distinct !DISubprogram(name: "hard_fault", scope: !6389, file: !6389, line: 709, type: !6503, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6505)
!6503 = !DISubroutineType(types: !6504)
!6504 = !{!162, !2676, !6456}
!6505 = !{!6506, !6507, !6508}
!6506 = !DILocalVariable(name: "esf", arg: 1, scope: !6502, file: !6389, line: 709, type: !2676)
!6507 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6502, file: !6389, line: 709, type: !6456)
!6508 = !DILocalVariable(name: "reason", scope: !6502, file: !6389, line: 711, type: !162)
!6509 = !DILocation(line: 0, scope: !6502)
!6510 = !DILocation(line: 732, column: 15, scope: !6502)
!6511 = !DILocation(line: 734, column: 12, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6502, file: !6389, line: 734, column: 6)
!6513 = !DILocation(line: 734, column: 17, scope: !6512)
!6514 = !DILocation(line: 734, column: 41, scope: !6512)
!6515 = !DILocation(line: 734, column: 6, scope: !6502)
!6516 = !DILocation(line: 736, column: 19, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6512, file: !6389, line: 736, column: 13)
!6518 = !DILocation(line: 736, column: 49, scope: !6517)
!6519 = !DILocation(line: 736, column: 13, scope: !6512)
!6520 = !DILocation(line: 738, column: 19, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6517, file: !6389, line: 738, column: 13)
!6522 = !DILocation(line: 738, column: 24, scope: !6521)
!6523 = !DILocation(line: 738, column: 47, scope: !6521)
!6524 = !DILocation(line: 738, column: 13, scope: !6517)
!6525 = !DILocation(line: 740, column: 7, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6527, file: !6389, line: 740, column: 7)
!6527 = distinct !DILexicalBlock(scope: !6521, file: !6389, line: 738, column: 53)
!6528 = !DILocation(line: 740, column: 7, scope: !6527)
!6529 = !DILocation(line: 742, column: 24, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6526, file: !6389, line: 740, column: 38)
!6531 = !DILocation(line: 743, column: 3, scope: !6530)
!6532 = !DILocation(line: 743, column: 20, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6526, file: !6389, line: 743, column: 14)
!6534 = !DILocation(line: 743, column: 25, scope: !6533)
!6535 = !DILocation(line: 743, column: 52, scope: !6533)
!6536 = !DILocation(line: 743, column: 14, scope: !6526)
!6537 = !DILocation(line: 744, column: 13, scope: !6538)
!6538 = distinct !DILexicalBlock(scope: !6533, file: !6389, line: 743, column: 58)
!6539 = !DILocation(line: 745, column: 3, scope: !6538)
!6540 = !DILocation(line: 745, column: 20, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6533, file: !6389, line: 745, column: 14)
!6542 = !DILocation(line: 745, column: 25, scope: !6541)
!6543 = !DILocation(line: 745, column: 52, scope: !6541)
!6544 = !DILocation(line: 745, column: 14, scope: !6533)
!6545 = !DILocation(line: 746, column: 13, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6541, file: !6389, line: 745, column: 58)
!6547 = !DILocation(line: 747, column: 3, scope: !6546)
!6548 = !DILocation(line: 747, column: 20, scope: !6549)
!6549 = distinct !DILexicalBlock(scope: !6541, file: !6389, line: 747, column: 14)
!6550 = !DILocation(line: 747, column: 52, scope: !6549)
!6551 = !DILocation(line: 747, column: 14, scope: !6541)
!6552 = !DILocation(line: 748, column: 13, scope: !6553)
!6553 = distinct !DILexicalBlock(scope: !6549, file: !6389, line: 747, column: 58)
!6554 = !DILocation(line: 753, column: 3, scope: !6553)
!6555 = !DILocation(line: 766, column: 2, scope: !6502)
!6556 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6389, file: !6389, line: 229, type: !6480, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6557)
!6557 = !{!6558, !6559, !6560, !6561, !6562, !6563, !6566}
!6558 = !DILocalVariable(name: "esf", arg: 1, scope: !6556, file: !6389, line: 229, type: !2676)
!6559 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6556, file: !6389, line: 229, type: !107)
!6560 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6556, file: !6389, line: 230, type: !6456)
!6561 = !DILocalVariable(name: "reason", scope: !6556, file: !6389, line: 232, type: !162)
!6562 = !DILocalVariable(name: "mmfar", scope: !6556, file: !6389, line: 233, type: !162)
!6563 = !DILocalVariable(name: "temp", scope: !6564, file: !6389, line: 254, type: !162)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !6389, line: 244, column: 48)
!6565 = distinct !DILexicalBlock(scope: !6556, file: !6389, line: 244, column: 6)
!6566 = !DILocalVariable(name: "min_stack_ptr", scope: !6567, file: !6389, line: 309, type: !162)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !6389, line: 308, column: 43)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !6389, line: 308, column: 7)
!6569 = distinct !DILexicalBlock(scope: !6570, file: !6389, line: 289, column: 40)
!6570 = distinct !DILexicalBlock(scope: !6556, file: !6389, line: 288, column: 6)
!6571 = !DILocation(line: 0, scope: !6556)
!6572 = !DILocation(line: 237, column: 12, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6556, file: !6389, line: 237, column: 6)
!6574 = !DILocation(line: 241, column: 12, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6556, file: !6389, line: 241, column: 6)
!6576 = !DILocation(line: 244, column: 12, scope: !6565)
!6577 = !DILocation(line: 244, column: 17, scope: !6565)
!6578 = !DILocation(line: 244, column: 42, scope: !6565)
!6579 = !DILocation(line: 244, column: 6, scope: !6556)
!6580 = !DILocation(line: 254, column: 24, scope: !6564)
!6581 = !DILocation(line: 0, scope: !6564)
!6582 = !DILocation(line: 256, column: 13, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6564, file: !6389, line: 256, column: 7)
!6584 = !DILocation(line: 256, column: 18, scope: !6583)
!6585 = !DILocation(line: 256, column: 44, scope: !6583)
!6586 = !DILocation(line: 256, column: 7, scope: !6564)
!6587 = !DILocation(line: 259, column: 24, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6589, file: !6389, line: 259, column: 8)
!6589 = distinct !DILexicalBlock(scope: !6583, file: !6389, line: 256, column: 50)
!6590 = !DILocation(line: 259, column: 8, scope: !6589)
!6591 = !DILocation(line: 261, column: 15, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6588, file: !6389, line: 259, column: 30)
!6593 = !DILocation(line: 262, column: 4, scope: !6592)
!6594 = !DILocation(line: 265, column: 12, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6556, file: !6389, line: 265, column: 6)
!6596 = !DILocation(line: 269, column: 12, scope: !6597)
!6597 = distinct !DILexicalBlock(scope: !6556, file: !6389, line: 269, column: 6)
!6598 = !DILocation(line: 288, column: 12, scope: !6570)
!6599 = !DILocation(line: 288, column: 17, scope: !6570)
!6600 = !DILocation(line: 288, column: 41, scope: !6570)
!6601 = !DILocation(line: 289, column: 9, scope: !6570)
!6602 = !DILocation(line: 289, column: 14, scope: !6570)
!6603 = !DILocation(line: 288, column: 6, scope: !6556)
!6604 = !DILocation(line: 308, column: 12, scope: !6568)
!6605 = !DILocation(line: 308, column: 17, scope: !6568)
!6606 = !DILocation(line: 308, column: 7, scope: !6569)
!6607 = !DILocation(line: 310, column: 6, scope: !6567)
!6608 = !DILocation(line: 309, column: 29, scope: !6567)
!6609 = !DILocation(line: 0, scope: !6567)
!6610 = !DILocation(line: 312, column: 8, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6567, file: !6389, line: 312, column: 8)
!6612 = !DILocation(line: 312, column: 8, scope: !6567)
!6613 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !6614, file: !6088, line: 1099, type: !162)
!6614 = distinct !DISubprogram(name: "__set_PSP", scope: !6088, file: !6088, line: 1099, type: !6179, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6615)
!6615 = !{!6613}
!6616 = !DILocation(line: 0, scope: !6614, inlinedAt: !6617)
!6617 = distinct !DILocation(line: 338, column: 5, scope: !6618)
!6618 = distinct !DILexicalBlock(scope: !6611, file: !6389, line: 312, column: 23)
!6619 = !DILocation(line: 1101, column: 3, scope: !6614, inlinedAt: !6617)
!6620 = !{i64 3527554}
!6621 = !DILocation(line: 341, column: 4, scope: !6618)
!6622 = !DILocation(line: 360, column: 12, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6556, file: !6389, line: 360, column: 6)
!6624 = !DILocation(line: 360, column: 17, scope: !6623)
!6625 = !DILocation(line: 360, column: 41, scope: !6623)
!6626 = !DILocation(line: 360, column: 6, scope: !6556)
!6627 = !DILocation(line: 361, column: 14, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6623, file: !6389, line: 360, column: 47)
!6629 = !DILocation(line: 362, column: 2, scope: !6628)
!6630 = !DILocation(line: 366, column: 12, scope: !6556)
!6631 = !DILocation(line: 369, column: 15, scope: !6556)
!6632 = !DILocation(line: 371, column: 2, scope: !6556)
!6633 = distinct !DISubprogram(name: "bus_fault", scope: !6389, file: !6389, line: 383, type: !6634, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6636)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!107, !2676, !107, !6456}
!6636 = !{!6637, !6638, !6639, !6640, !6641}
!6637 = !DILocalVariable(name: "esf", arg: 1, scope: !6633, file: !6389, line: 383, type: !2676)
!6638 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6633, file: !6389, line: 383, type: !107)
!6639 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6633, file: !6389, line: 383, type: !6456)
!6640 = !DILocalVariable(name: "reason", scope: !6633, file: !6389, line: 385, type: !162)
!6641 = !DILocalVariable(name: "bfar", scope: !6642, file: !6389, line: 405, type: !162)
!6642 = distinct !DILexicalBlock(scope: !6643, file: !6389, line: 395, column: 42)
!6643 = distinct !DILexicalBlock(scope: !6633, file: !6389, line: 395, column: 6)
!6644 = !DILocation(line: 0, scope: !6633)
!6645 = !DILocation(line: 389, column: 11, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6633, file: !6389, line: 389, column: 6)
!6647 = !DILocation(line: 392, column: 11, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6633, file: !6389, line: 392, column: 6)
!6649 = !DILocation(line: 395, column: 11, scope: !6643)
!6650 = !DILocation(line: 395, column: 16, scope: !6643)
!6651 = !DILocation(line: 395, column: 6, scope: !6633)
!6652 = !DILocation(line: 405, column: 3, scope: !6642)
!6653 = !DILocation(line: 0, scope: !6642)
!6654 = !DILocation(line: 407, column: 13, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6642, file: !6389, line: 407, column: 7)
!6656 = !DILocation(line: 407, column: 18, scope: !6655)
!6657 = !DILocation(line: 407, column: 44, scope: !6655)
!6658 = !DILocation(line: 407, column: 7, scope: !6642)
!6659 = !DILocation(line: 411, column: 15, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6661, file: !6389, line: 409, column: 30)
!6661 = distinct !DILexicalBlock(scope: !6662, file: !6389, line: 409, column: 8)
!6662 = distinct !DILexicalBlock(scope: !6655, file: !6389, line: 407, column: 50)
!6663 = !DILocation(line: 412, column: 4, scope: !6660)
!6664 = !DILocation(line: 415, column: 11, scope: !6665)
!6665 = distinct !DILexicalBlock(scope: !6633, file: !6389, line: 415, column: 6)
!6666 = !DILocation(line: 418, column: 12, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6633, file: !6389, line: 418, column: 6)
!6668 = !DILocation(line: 418, column: 17, scope: !6667)
!6669 = !DILocation(line: 418, column: 41, scope: !6667)
!6670 = !DILocation(line: 418, column: 6, scope: !6633)
!6671 = !DILocation(line: 423, column: 18, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6667, file: !6389, line: 423, column: 13)
!6673 = !DILocation(line: 524, column: 12, scope: !6633)
!6674 = !DILocation(line: 526, column: 15, scope: !6633)
!6675 = !DILocation(line: 528, column: 2, scope: !6633)
!6676 = distinct !DISubprogram(name: "usage_fault", scope: !6389, file: !6389, line: 539, type: !6677, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6681)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{!162, !6679}
!6679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6680, size: 32)
!6680 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2677)
!6681 = !{!6682, !6683}
!6682 = !DILocalVariable(name: "esf", arg: 1, scope: !6676, file: !6389, line: 539, type: !6679)
!6683 = !DILocalVariable(name: "reason", scope: !6676, file: !6389, line: 541, type: !162)
!6684 = !DILocation(line: 0, scope: !6676)
!6685 = !DILocation(line: 546, column: 12, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6676, file: !6389, line: 546, column: 6)
!6687 = !DILocation(line: 549, column: 12, scope: !6688)
!6688 = distinct !DILexicalBlock(scope: !6676, file: !6389, line: 549, column: 6)
!6689 = !DILocation(line: 567, column: 12, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6676, file: !6389, line: 567, column: 6)
!6691 = !DILocation(line: 570, column: 12, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6676, file: !6389, line: 570, column: 6)
!6693 = !DILocation(line: 573, column: 12, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6676, file: !6389, line: 573, column: 6)
!6695 = !DILocation(line: 576, column: 12, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6676, file: !6389, line: 576, column: 6)
!6697 = !DILocation(line: 581, column: 12, scope: !6676)
!6698 = !DILocation(line: 583, column: 2, scope: !6676)
!6699 = distinct !DISubprogram(name: "debug_monitor", scope: !6389, file: !6389, line: 632, type: !6700, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6702)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{null, !2676, !6456}
!6702 = !{!6703, !6704}
!6703 = !DILocalVariable(name: "esf", arg: 1, scope: !6699, file: !6389, line: 632, type: !2676)
!6704 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6699, file: !6389, line: 632, type: !6456)
!6705 = !DILocation(line: 0, scope: !6699)
!6706 = !DILocation(line: 634, column: 15, scope: !6699)
!6707 = !DILocation(line: 652, column: 1, scope: !6699)
!6708 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6389, file: !6389, line: 658, type: !6709, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !6711)
!6709 = !DISubroutineType(types: !6710)
!6710 = !{!136, !2676}
!6711 = !{!6712, !6713, !6714}
!6712 = !DILocalVariable(name: "esf", arg: 1, scope: !6708, file: !6389, line: 658, type: !2676)
!6713 = !DILocalVariable(name: "ret_addr", scope: !6708, file: !6389, line: 660, type: !2449)
!6714 = !DILocalVariable(name: "fault_insn", scope: !6708, file: !6389, line: 686, type: !411)
!6715 = !DILocation(line: 0, scope: !6708)
!6716 = !DILocation(line: 660, column: 46, scope: !6708)
!6717 = !DILocation(line: 660, column: 23, scope: !6708)
!6718 = !DILocation(line: 682, column: 11, scope: !6708)
!6719 = !DILocation(line: 271, column: 3, scope: !6720, inlinedAt: !6721)
!6720 = distinct !DISubprogram(name: "__DSB", scope: !6088, file: !6088, line: 269, type: !3130, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !250)
!6721 = distinct !DILocation(line: 683, column: 2, scope: !6708)
!6722 = !{i64 3503689}
!6723 = !DILocation(line: 260, column: 3, scope: !6724, inlinedAt: !6725)
!6724 = distinct !DISubprogram(name: "__ISB", scope: !6088, file: !6088, line: 258, type: !3130, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !250)
!6725 = distinct !DILocation(line: 684, column: 2, scope: !6708)
!6726 = !{i64 3503406}
!6727 = !DILocation(line: 686, column: 35, scope: !6708)
!6728 = !DILocation(line: 686, column: 24, scope: !6708)
!6729 = !DILocation(line: 688, column: 11, scope: !6708)
!6730 = !DILocation(line: 271, column: 3, scope: !6720, inlinedAt: !6731)
!6731 = distinct !DILocation(line: 689, column: 2, scope: !6708)
!6732 = !DILocation(line: 260, column: 3, scope: !6724, inlinedAt: !6733)
!6733 = distinct !DILocation(line: 690, column: 2, scope: !6708)
!6734 = !DILocation(line: 693, column: 45, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6708, file: !6389, line: 693, column: 6)
!6736 = !DILocation(line: 699, column: 1, scope: !6708)
!6737 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6389, file: !6389, line: 1107, type: !3130, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2648, retainedNodes: !250)
!6738 = !DILocation(line: 1111, column: 11, scope: !6737)
!6739 = !DILocation(line: 1136, column: 1, scope: !6737)
!6740 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !6741, file: !6741, line: 26, type: !3130, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !6742)
!6741 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6742 = !{!6743}
!6743 = !DILocalVariable(name: "irq", scope: !6740, file: !6741, line: 28, type: !107)
!6744 = !DILocation(line: 0, scope: !6740)
!6745 = !DILocation(line: 30, column: 2, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6740, file: !6741, line: 30, column: 2)
!6747 = !DILocation(line: 31, column: 3, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6749, file: !6741, line: 30, column: 39)
!6749 = distinct !DILexicalBlock(scope: !6746, file: !6741, line: 30, column: 2)
!6750 = !DILocation(line: 30, column: 35, scope: !6749)
!6751 = !DILocation(line: 30, column: 13, scope: !6749)
!6752 = distinct !{!6752, !6745, !6753}
!6753 = !DILocation(line: 32, column: 2, scope: !6746)
!6754 = !DILocation(line: 33, column: 1, scope: !6740)
!6755 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6122, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2719, retainedNodes: !6756)
!6756 = !{!6757, !6758}
!6757 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6755, file: !497, line: 1814, type: !753)
!6758 = !DILocalVariable(name: "priority", arg: 2, scope: !6755, file: !497, line: 1814, type: !162)
!6759 = !DILocation(line: 0, scope: !6755)
!6760 = !DILocation(line: 1816, column: 7, scope: !6755)
!6761 = !DILocation(line: 0, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6755, file: !497, line: 1816, column: 7)
!6763 = !DILocation(line: 1824, column: 1, scope: !6755)
!6764 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !6765, file: !6765, line: 27, type: !6766, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !6869)
!6765 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6766 = !DISubroutineType(types: !6767)
!6767 = !{null, !6768}
!6768 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !6769)
!6769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6770, size: 32)
!6770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !6771)
!6771 = !{!6772, !6830, !6842, !6843, !6844, !6845, !6851, !6864}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6770, file: !359, line: 247, baseType: !6773, size: 384)
!6773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !6774)
!6774 = !{!6775, !6799, !6806, !6807, !6808, !6817, !6818, !6819}
!6775 = !DIDerivedType(tag: DW_TAG_member, scope: !6773, file: !359, line: 60, baseType: !6776, size: 64)
!6776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6773, file: !359, line: 60, size: 64, elements: !6777)
!6777 = !{!6778, !6793}
!6778 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6776, file: !359, line: 61, baseType: !6779, size: 64)
!6779 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !6780)
!6780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !6781)
!6781 = !{!6782, !6788}
!6782 = !DIDerivedType(tag: DW_TAG_member, scope: !6780, file: !233, line: 38, baseType: !6783, size: 32)
!6783 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6780, file: !233, line: 38, size: 32, elements: !6784)
!6784 = !{!6785, !6787}
!6785 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6783, file: !233, line: 39, baseType: !6786, size: 32)
!6786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6780, size: 32)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6783, file: !233, line: 40, baseType: !6786, size: 32)
!6788 = !DIDerivedType(tag: DW_TAG_member, scope: !6780, file: !233, line: 42, baseType: !6789, size: 32, offset: 32)
!6789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6780, file: !233, line: 42, size: 32, elements: !6790)
!6790 = !{!6791, !6792}
!6791 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6789, file: !233, line: 43, baseType: !6786, size: 32)
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6789, file: !233, line: 44, baseType: !6786, size: 32)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6776, file: !359, line: 62, baseType: !6794, size: 64)
!6794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !6795)
!6795 = !{!6796}
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6794, file: !384, line: 50, baseType: !6797, size: 64)
!6797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6798, size: 64, elements: !389)
!6798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6794, size: 32)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6773, file: !359, line: 68, baseType: !6800, size: 32, offset: 64)
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6801, size: 32)
!6801 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !6802)
!6802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !6803)
!6803 = !{!6804}
!6804 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6802, file: !228, line: 232, baseType: !6805, size: 64)
!6805 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !6780)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6773, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6773, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!6808 = !DIDerivedType(tag: DW_TAG_member, scope: !6773, file: !359, line: 90, baseType: !6809, size: 16, offset: 112)
!6809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6773, file: !359, line: 90, size: 16, elements: !6810)
!6810 = !{!6811, !6816}
!6811 = !DIDerivedType(tag: DW_TAG_member, scope: !6809, file: !359, line: 91, baseType: !6812, size: 16)
!6812 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6809, file: !359, line: 91, size: 16, elements: !6813)
!6813 = !{!6814, !6815}
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6812, file: !359, line: 96, baseType: !407, size: 8)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6812, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!6816 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6809, file: !359, line: 100, baseType: !411, size: 16)
!6817 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6773, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6773, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6773, file: !359, line: 131, baseType: !6820, size: 192, offset: 192)
!6820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !6821)
!6821 = !{!6822, !6823, !6829}
!6822 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6820, file: !228, line: 245, baseType: !6779, size: 64)
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6820, file: !228, line: 246, baseType: !6824, size: 32, offset: 64)
!6824 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !6825)
!6825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6826, size: 32)
!6826 = !DISubroutineType(types: !6827)
!6827 = !{null, !6828}
!6828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6820, size: 32)
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6820, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6770, file: !359, line: 250, baseType: !6831, size: 288, offset: 384)
!6831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !6832)
!6832 = !{!6833, !6834, !6835, !6836, !6837, !6838, !6839, !6840, !6841}
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6831, file: !428, line: 26, baseType: !162, size: 32)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6831, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6831, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6831, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6831, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!6838 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6831, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6831, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6831, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!6841 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6831, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6770, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6770, file: !359, line: 256, baseType: !6801, size: 64, offset: 704)
!6844 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6770, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6770, file: !359, line: 300, baseType: !6846, size: 96, offset: 800)
!6846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !6847)
!6847 = !{!6848, !6849, !6850}
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6846, file: !359, line: 153, baseType: !22, size: 32)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6846, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6846, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6770, file: !359, line: 325, baseType: !6852, size: 32, offset: 896)
!6852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6853, size: 32)
!6853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !6854)
!6854 = !{!6855, !6861, !6862}
!6855 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6853, file: !224, line: 5074, baseType: !6856, size: 96)
!6856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !6857)
!6857 = !{!6858, !6859, !6860}
!6858 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6856, file: !454, line: 57, baseType: !457, size: 32)
!6859 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6856, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6856, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6853, file: !224, line: 5075, baseType: !6801, size: 64, offset: 96)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6853, file: !224, line: 5076, baseType: !6863, offset: 160)
!6863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6770, file: !359, line: 343, baseType: !6865, size: 64, offset: 928)
!6865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !6866)
!6866 = !{!6867, !6868}
!6867 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6865, file: !428, line: 63, baseType: !162, size: 32)
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6865, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!6869 = !{!6870}
!6870 = !DILocalVariable(name: "thread", arg: 1, scope: !6764, file: !6765, line: 27, type: !6768)
!6871 = !DILocation(line: 0, scope: !6764)
!6872 = !DILocation(line: 29, column: 6, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6764, file: !6765, line: 29, column: 6)
!6874 = !DILocation(line: 29, column: 15, scope: !6873)
!6875 = !DILocation(line: 29, column: 6, scope: !6764)
!6876 = !DILocation(line: 1031, column: 3, scope: !6877, inlinedAt: !6880)
!6877 = distinct !DISubprogram(name: "__get_IPSR", scope: !6088, file: !6088, line: 1027, type: !6169, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !6878)
!6878 = !{!6879}
!6879 = !DILocalVariable(name: "result", scope: !6877, file: !6088, line: 1029, type: !162)
!6880 = distinct !DILocation(line: 48, column: 10, scope: !6881, inlinedAt: !6885)
!6881 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6882, file: !6882, line: 46, type: !6883, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2764, retainedNodes: !250)
!6882 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6883 = !DISubroutineType(types: !6884)
!6884 = !{!136}
!6885 = distinct !DILocation(line: 30, column: 7, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6887, file: !6765, line: 30, column: 7)
!6887 = distinct !DILexicalBlock(scope: !6873, file: !6765, line: 29, column: 26)
!6888 = !{i64 3492537}
!6889 = !DILocation(line: 0, scope: !6877, inlinedAt: !6880)
!6890 = !DILocation(line: 48, column: 9, scope: !6881, inlinedAt: !6885)
!6891 = !DILocation(line: 30, column: 7, scope: !6887)
!6892 = !DILocation(line: 42, column: 14, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6886, file: !6765, line: 30, column: 25)
!6894 = !DILocation(line: 48, column: 15, scope: !6893)
!6895 = !DILocation(line: 49, column: 3, scope: !6893)
!6896 = !DILocation(line: 52, column: 2, scope: !6764)
!6897 = !DILocation(line: 53, column: 1, scope: !6764)
!6898 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !354, file: !354, line: 127, type: !3130, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !347, retainedNodes: !250)
!6899 = !DILocation(line: 134, column: 2, scope: !6898)
!6900 = !DILocation(line: 156, column: 1, scope: !6898)
!6901 = !DILocation(line: 0, scope: !353)
!6902 = !DILocation(line: 289, column: 36, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !353, file: !354, line: 285, column: 2)
!6904 = !DILocation(line: 289, column: 42, scope: !6903)
!6905 = !DILocation(line: 300, column: 36, scope: !353)
!6906 = !DILocation(line: 301, column: 35, scope: !353)
!6907 = !DILocation(line: 302, column: 37, scope: !353)
!6908 = !DILocation(line: 311, column: 2, scope: !353)
!6909 = !DILocation(line: 316, column: 1, scope: !353)
!6910 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !525, file: !525, line: 180, type: !3130, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6911 = !DILocation(line: 188, column: 12, scope: !6910)
!6912 = !DILocation(line: 271, column: 3, scope: !6913, inlinedAt: !6914)
!6913 = distinct !DISubprogram(name: "__DSB", scope: !6088, file: !6088, line: 269, type: !3130, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6914 = distinct !DILocation(line: 192, column: 2, scope: !6910)
!6915 = !{i64 3661365}
!6916 = !DILocation(line: 260, column: 3, scope: !6917, inlinedAt: !6918)
!6917 = distinct !DISubprogram(name: "__ISB", scope: !6088, file: !6088, line: 258, type: !3130, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6918 = distinct !DILocation(line: 193, column: 2, scope: !6910)
!6919 = !{i64 3661082}
!6920 = !DILocation(line: 194, column: 1, scope: !6910)
!6921 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !525, file: !525, line: 199, type: !3130, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6922 = !DILocation(line: 282, column: 3, scope: !6923, inlinedAt: !6924)
!6923 = distinct !DISubprogram(name: "__DMB", scope: !6088, file: !6088, line: 280, type: !3130, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !250)
!6924 = distinct !DILocation(line: 202, column: 2, scope: !6921)
!6925 = !{i64 3661641}
!6926 = !DILocation(line: 205, column: 12, scope: !6921)
!6927 = !DILocation(line: 206, column: 1, scope: !6921)
!6928 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !525, file: !525, line: 275, type: !6929, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6942)
!6929 = !DISubroutineType(types: !6930)
!6930 = !{null, !6931, !177, !6356, !6356}
!6931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6932, size: 32)
!6932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6933)
!6933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !476, line: 52, size: 96, elements: !6934)
!6934 = !{!6935, !6936, !6937}
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6933, file: !476, line: 53, baseType: !22, size: 32)
!6936 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6933, file: !476, line: 54, baseType: !252, size: 32, offset: 32)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !6933, file: !476, line: 55, baseType: !6938, size: 32, offset: 64)
!6938 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !482, line: 151, baseType: !6939)
!6939 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !482, line: 149, size: 32, elements: !6940)
!6940 = !{!6941}
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !6939, file: !482, line: 150, baseType: !162, size: 32)
!6942 = !{!6943, !6944, !6945, !6946}
!6943 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6928, file: !525, line: 276, type: !6931)
!6944 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6928, file: !525, line: 276, type: !177)
!6945 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !6928, file: !525, line: 277, type: !6356)
!6946 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6928, file: !525, line: 277, type: !6356)
!6947 = !DILocation(line: 0, scope: !6928)
!6948 = !DILocation(line: 279, column: 6, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6928, file: !525, line: 279, column: 6)
!6950 = !DILocation(line: 285, column: 1, scope: !6928)
!6951 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !6952, file: !6952, line: 220, type: !6953, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6955)
!6952 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6953 = !DISubroutineType(types: !6954)
!6954 = !{!107, !6931, !177, !6356, !6356}
!6955 = !{!6956, !6957, !6958, !6959, !6960}
!6956 = !DILocalVariable(name: "static_regions", arg: 1, scope: !6951, file: !6952, line: 221, type: !6931)
!6957 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6951, file: !6952, line: 221, type: !177)
!6958 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !6951, file: !6952, line: 222, type: !6356)
!6959 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !6951, file: !6952, line: 223, type: !6356)
!6960 = !DILocalVariable(name: "mpu_reg_index", scope: !6951, file: !6952, line: 225, type: !107)
!6961 = !DILocation(line: 0, scope: !6951)
!6962 = !DILocation(line: 225, column: 22, scope: !6951)
!6963 = !DILocation(line: 233, column: 18, scope: !6951)
!6964 = !DILocation(line: 236, column: 23, scope: !6951)
!6965 = !DILocation(line: 236, column: 21, scope: !6951)
!6966 = !DILocation(line: 238, column: 2, scope: !6951)
!6967 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !525, file: !525, line: 105, type: !6968, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !6970)
!6968 = !DISubroutineType(types: !6969)
!6969 = !{!107, !6931, !133, !133, !136}
!6970 = !{!6971, !6972, !6973, !6974, !6975, !6976}
!6971 = !DILocalVariable(name: "regions", arg: 1, scope: !6967, file: !525, line: 106, type: !6931)
!6972 = !DILocalVariable(name: "regions_num", arg: 2, scope: !6967, file: !525, line: 106, type: !133)
!6973 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !6967, file: !525, line: 106, type: !133)
!6974 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !6967, file: !525, line: 107, type: !136)
!6975 = !DILocalVariable(name: "i", scope: !6967, file: !525, line: 109, type: !107)
!6976 = !DILocalVariable(name: "reg_index", scope: !6967, file: !525, line: 110, type: !107)
!6977 = !DILocation(line: 0, scope: !6967)
!6978 = !DILocation(line: 110, column: 18, scope: !6967)
!6979 = !DILocation(line: 112, column: 16, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !525, line: 112, column: 2)
!6981 = distinct !DILexicalBlock(scope: !6967, file: !525, line: 112, column: 2)
!6982 = !DILocation(line: 112, column: 2, scope: !6981)
!6983 = !DILocation(line: 113, column: 7, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6985, file: !525, line: 113, column: 7)
!6985 = distinct !DILexicalBlock(scope: !6980, file: !525, line: 112, column: 36)
!6986 = !DILocation(line: 113, column: 18, scope: !6984)
!6987 = !DILocation(line: 113, column: 23, scope: !6984)
!6988 = !DILocation(line: 113, column: 7, scope: !6985)
!6989 = !DILocation(line: 118, column: 23, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6985, file: !525, line: 118, column: 7)
!6991 = !DILocation(line: 119, column: 7, scope: !6990)
!6992 = !DILocation(line: 118, column: 7, scope: !6985)
!6993 = !DILocation(line: 124, column: 36, scope: !6985)
!6994 = !DILocation(line: 124, column: 15, scope: !6985)
!6995 = !DILocation(line: 126, column: 17, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6985, file: !525, line: 126, column: 7)
!6997 = !DILocation(line: 126, column: 7, scope: !6985)
!6998 = !DILocation(line: 131, column: 12, scope: !6985)
!6999 = !DILocation(line: 132, column: 2, scope: !6985)
!7000 = !DILocation(line: 112, column: 32, scope: !6980)
!7001 = distinct !{!7001, !6982, !7002}
!7002 = !DILocation(line: 132, column: 2, scope: !6981)
!7003 = !DILocation(line: 135, column: 1, scope: !6967)
!7004 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !6952, file: !6952, line: 63, type: !7005, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7007)
!7005 = !DISubroutineType(types: !7006)
!7006 = !{!107, !6931}
!7007 = !{!7008, !7009}
!7008 = !DILocalVariable(name: "part", arg: 1, scope: !7004, file: !6952, line: 63, type: !6931)
!7009 = !DILocalVariable(name: "partition_is_valid", scope: !7004, file: !6952, line: 70, type: !107)
!7010 = !DILocation(line: 0, scope: !7004)
!7011 = !DILocation(line: 71, column: 11, scope: !7004)
!7012 = !DILocation(line: 71, column: 37, scope: !7004)
!7013 = !DILocation(line: 72, column: 3, scope: !7004)
!7014 = !DILocation(line: 71, column: 30, scope: !7004)
!7015 = !DILocation(line: 75, column: 11, scope: !7004)
!7016 = !DILocation(line: 75, column: 17, scope: !7004)
!7017 = !DILocation(line: 75, column: 38, scope: !7004)
!7018 = !DILocation(line: 77, column: 2, scope: !7004)
!7019 = distinct !DISubprogram(name: "mpu_configure_region", scope: !525, file: !525, line: 79, type: !7020, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7022)
!7020 = !DISubroutineType(types: !7021)
!7021 = !{!107, !177, !6931}
!7022 = !{!7023, !7024, !7025}
!7023 = !DILocalVariable(name: "index", arg: 1, scope: !7019, file: !525, line: 79, type: !177)
!7024 = !DILocalVariable(name: "new_region", arg: 2, scope: !7019, file: !525, line: 80, type: !6931)
!7025 = !DILocalVariable(name: "region_conf", scope: !7019, file: !525, line: 82, type: !514)
!7026 = !DILocation(line: 0, scope: !7019)
!7027 = !DILocation(line: 82, column: 2, scope: !7019)
!7028 = !DILocation(line: 82, column: 24, scope: !7019)
!7029 = !DILocation(line: 87, column: 33, scope: !7019)
!7030 = !DILocation(line: 87, column: 14, scope: !7019)
!7031 = !DILocation(line: 87, column: 19, scope: !7019)
!7032 = !DILocation(line: 91, column: 55, scope: !7019)
!7033 = !DILocation(line: 92, column: 16, scope: !7019)
!7034 = !DILocation(line: 92, column: 53, scope: !7019)
!7035 = !DILocation(line: 91, column: 2, scope: !7019)
!7036 = !DILocation(line: 95, column: 9, scope: !7019)
!7037 = !DILocation(line: 97, column: 1, scope: !7019)
!7038 = !DILocation(line: 95, column: 2, scope: !7019)
!7039 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !6952, file: !6952, line: 113, type: !7040, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7045)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{null, !7042, !7043, !162, !162}
!7042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 32)
!7043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7044, size: 32)
!7044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6938)
!7045 = !{!7046, !7047, !7048, !7049}
!7046 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7039, file: !6952, line: 114, type: !7042)
!7047 = !DILocalVariable(name: "attr", arg: 2, scope: !7039, file: !6952, line: 115, type: !7043)
!7048 = !DILocalVariable(name: "base", arg: 3, scope: !7039, file: !6952, line: 115, type: !162)
!7049 = !DILocalVariable(name: "size", arg: 4, scope: !7039, file: !6952, line: 115, type: !162)
!7050 = !DILocation(line: 0, scope: !7039)
!7051 = !DILocation(line: 127, column: 23, scope: !7039)
!7052 = !DILocation(line: 127, column: 35, scope: !7039)
!7053 = !DILocation(line: 127, column: 33, scope: !7039)
!7054 = !DILocation(line: 127, column: 10, scope: !7039)
!7055 = !DILocation(line: 127, column: 15, scope: !7039)
!7056 = !DILocation(line: 129, column: 1, scope: !7039)
!7057 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !525, file: !525, line: 57, type: !7058, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7060)
!7058 = !DISubroutineType(types: !7059)
!7059 = !{!107, !177, !512}
!7060 = !{!7061, !7062}
!7061 = !DILocalVariable(name: "index", arg: 1, scope: !7057, file: !525, line: 57, type: !177)
!7062 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7057, file: !525, line: 58, type: !512)
!7063 = !DILocation(line: 0, scope: !7057)
!7064 = !DILocation(line: 61, column: 6, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !7057, file: !525, line: 61, column: 6)
!7066 = !DILocation(line: 61, column: 12, scope: !7065)
!7067 = !DILocation(line: 61, column: 6, scope: !7057)
!7068 = !DILocation(line: 71, column: 2, scope: !7057)
!7069 = !DILocation(line: 73, column: 2, scope: !7057)
!7070 = !DILocation(line: 74, column: 1, scope: !7057)
!7071 = distinct !DISubprogram(name: "region_init", scope: !6952, file: !6952, line: 29, type: !7072, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7074)
!7072 = !DISubroutineType(types: !7073)
!7073 = !{null, !6356, !512}
!7074 = !{!7075, !7076}
!7075 = !DILocalVariable(name: "index", arg: 1, scope: !7071, file: !6952, line: 29, type: !6356)
!7076 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7071, file: !6952, line: 30, type: !512)
!7077 = !DILocation(line: 0, scope: !7071)
!7078 = !DILocation(line: 33, column: 2, scope: !7071)
!7079 = !DILocation(line: 47, column: 28, scope: !7071)
!7080 = !DILocation(line: 47, column: 33, scope: !7071)
!7081 = !DILocation(line: 48, column: 26, scope: !7071)
!7082 = !DILocation(line: 47, column: 12, scope: !7071)
!7083 = !DILocation(line: 49, column: 32, scope: !7071)
!7084 = !DILocation(line: 49, column: 37, scope: !7071)
!7085 = !DILocation(line: 49, column: 12, scope: !7071)
!7086 = !DILocation(line: 53, column: 1, scope: !7071)
!7087 = distinct !DISubprogram(name: "set_region_number", scope: !7088, file: !7088, line: 32, type: !6179, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7089)
!7088 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7089 = !{!7090}
!7090 = !DILocalVariable(name: "index", arg: 1, scope: !7087, file: !7088, line: 32, type: !162)
!7091 = !DILocation(line: 0, scope: !7087)
!7092 = !DILocation(line: 34, column: 11, scope: !7087)
!7093 = !DILocation(line: 35, column: 1, scope: !7087)
!7094 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !6952, file: !6952, line: 88, type: !7095, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7097)
!7095 = !DISubroutineType(types: !7096)
!7096 = !{!162, !162}
!7097 = !{!7098}
!7098 = !DILocalVariable(name: "size", arg: 1, scope: !7094, file: !6952, line: 88, type: !162)
!7099 = !DILocation(line: 0, scope: !7094)
!7100 = !DILocation(line: 91, column: 11, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7094, file: !6952, line: 91, column: 6)
!7102 = !DILocation(line: 91, column: 6, scope: !7094)
!7103 = !DILocation(line: 100, column: 11, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7094, file: !6952, line: 100, column: 6)
!7105 = !DILocation(line: 100, column: 6, scope: !7094)
!7106 = !DILocation(line: 104, column: 35, scope: !7094)
!7107 = !DILocation(line: 104, column: 16, scope: !7094)
!7108 = !DILocation(line: 104, column: 50, scope: !7094)
!7109 = !DILocation(line: 104, column: 72, scope: !7094)
!7110 = !DILocation(line: 104, column: 2, scope: !7094)
!7111 = !DILocation(line: 106, column: 1, scope: !7094)
!7112 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !525, file: !525, line: 307, type: !7113, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7115)
!7113 = !DISubroutineType(types: !7114)
!7114 = !{null, !6931, !133}
!7115 = !{!7116, !7117}
!7116 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7112, file: !525, line: 308, type: !6931)
!7117 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7112, file: !525, line: 308, type: !133)
!7118 = !DILocation(line: 0, scope: !7112)
!7119 = !DILocation(line: 310, column: 6, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7112, file: !525, line: 310, column: 6)
!7121 = !DILocation(line: 316, column: 1, scope: !7112)
!7122 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !6952, file: !6952, line: 249, type: !7123, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7125)
!7123 = !DISubroutineType(types: !7124)
!7124 = !{!107, !6931, !133}
!7125 = !{!7126, !7127, !7128, !7129}
!7126 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7122, file: !6952, line: 250, type: !6931)
!7127 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7122, file: !6952, line: 250, type: !133)
!7128 = !DILocalVariable(name: "mpu_reg_index", scope: !7122, file: !6952, line: 252, type: !107)
!7129 = !DILocalVariable(name: "i", scope: !7130, file: !6952, line: 264, type: !107)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !6952, line: 264, column: 3)
!7131 = distinct !DILexicalBlock(scope: !7132, file: !6952, line: 261, column: 32)
!7132 = distinct !DILexicalBlock(scope: !7122, file: !6952, line: 261, column: 6)
!7133 = !DILocation(line: 0, scope: !7122)
!7134 = !DILocation(line: 252, column: 22, scope: !7122)
!7135 = !DILocation(line: 258, column: 18, scope: !7122)
!7136 = !DILocation(line: 261, column: 20, scope: !7132)
!7137 = !DILocation(line: 261, column: 6, scope: !7122)
!7138 = !DILocation(line: 0, scope: !7130)
!7139 = !DILocation(line: 265, column: 4, scope: !7140)
!7140 = distinct !DILexicalBlock(scope: !7141, file: !6952, line: 264, column: 59)
!7141 = distinct !DILexicalBlock(scope: !7130, file: !6952, line: 264, column: 3)
!7142 = !DILocation(line: 264, column: 55, scope: !7141)
!7143 = !DILocation(line: 264, column: 33, scope: !7141)
!7144 = !DILocation(line: 264, column: 3, scope: !7130)
!7145 = distinct !{!7145, !7144, !7146}
!7146 = !DILocation(line: 266, column: 3, scope: !7130)
!7147 = !DILocation(line: 269, column: 2, scope: !7122)
!7148 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7149, file: !7149, line: 218, type: !6179, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7150)
!7149 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7150 = !{!7151}
!7151 = !DILocalVariable(name: "rnr", arg: 1, scope: !7148, file: !7149, line: 218, type: !162)
!7152 = !DILocation(line: 0, scope: !7148)
!7153 = !DILocation(line: 220, column: 12, scope: !7148)
!7154 = !DILocation(line: 221, column: 13, scope: !7148)
!7155 = !DILocation(line: 222, column: 1, scope: !7148)
!7156 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !525, file: !525, line: 326, type: !7157, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !492, retainedNodes: !7159)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!107}
!7159 = !{!7160}
!7160 = !DILocalVariable(name: "r_index", scope: !7156, file: !525, line: 328, type: !162)
!7161 = !DILocation(line: 330, column: 17, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7156, file: !525, line: 330, column: 6)
!7163 = !DILocation(line: 330, column: 29, scope: !7162)
!7164 = !DILocation(line: 330, column: 6, scope: !7156)
!7165 = !DILocation(line: 347, column: 2, scope: !7156)
!7166 = !DILocation(line: 0, scope: !7156)
!7167 = !DILocation(line: 364, column: 29, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !7169, file: !525, line: 364, column: 2)
!7169 = distinct !DILexicalBlock(scope: !7156, file: !525, line: 364, column: 2)
!7170 = !DILocation(line: 364, column: 2, scope: !7169)
!7171 = !DILocation(line: 365, column: 25, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7168, file: !525, line: 364, column: 66)
!7173 = !DILocation(line: 365, column: 3, scope: !7172)
!7174 = !DILocation(line: 364, column: 62, scope: !7168)
!7175 = distinct !{!7175, !7170, !7176}
!7176 = !DILocation(line: 366, column: 2, scope: !7169)
!7177 = !DILocation(line: 369, column: 23, scope: !7156)
!7178 = !DILocation(line: 369, column: 21, scope: !7156)
!7179 = !DILocation(line: 372, column: 2, scope: !7156)
!7180 = !DILocation(line: 443, column: 2, scope: !7156)
!7181 = !DILocation(line: 444, column: 1, scope: !7156)
!7182 = distinct !DISubprogram(name: "strcpy", scope: !7183, file: !7183, line: 20, type: !7184, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7188)
!7183 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7184 = !DISubroutineType(types: !7185)
!7185 = !{!256, !7186, !7187}
!7186 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !256)
!7187 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !123)
!7188 = !{!7189, !7190, !7191}
!7189 = !DILocalVariable(name: "d", arg: 1, scope: !7182, file: !7183, line: 20, type: !7186)
!7190 = !DILocalVariable(name: "s", arg: 2, scope: !7182, file: !7183, line: 20, type: !7187)
!7191 = !DILocalVariable(name: "dest", scope: !7182, file: !7183, line: 22, type: !256)
!7192 = !DILocation(line: 0, scope: !7182)
!7193 = !DILocation(line: 24, column: 9, scope: !7182)
!7194 = !DILocation(line: 24, column: 12, scope: !7182)
!7195 = !DILocation(line: 24, column: 2, scope: !7182)
!7196 = !DILocation(line: 25, column: 6, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7182, file: !7183, line: 24, column: 21)
!7198 = !DILocation(line: 26, column: 4, scope: !7197)
!7199 = !DILocation(line: 27, column: 4, scope: !7197)
!7200 = distinct !{!7200, !7195, !7201}
!7201 = !DILocation(line: 28, column: 2, scope: !7182)
!7202 = !DILocation(line: 30, column: 5, scope: !7182)
!7203 = !DILocation(line: 32, column: 2, scope: !7182)
!7204 = distinct !DISubprogram(name: "strncpy", scope: !7183, file: !7183, line: 42, type: !7205, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7207)
!7205 = !DISubroutineType(types: !7206)
!7206 = !{!256, !7186, !7187, !252}
!7207 = !{!7208, !7209, !7210, !7211}
!7208 = !DILocalVariable(name: "d", arg: 1, scope: !7204, file: !7183, line: 42, type: !7186)
!7209 = !DILocalVariable(name: "s", arg: 2, scope: !7204, file: !7183, line: 42, type: !7187)
!7210 = !DILocalVariable(name: "n", arg: 3, scope: !7204, file: !7183, line: 42, type: !252)
!7211 = !DILocalVariable(name: "dest", scope: !7204, file: !7183, line: 44, type: !256)
!7212 = !DILocation(line: 0, scope: !7204)
!7213 = !DILocation(line: 46, column: 12, scope: !7204)
!7214 = !DILocation(line: 46, column: 17, scope: !7204)
!7215 = !DILocation(line: 46, column: 20, scope: !7204)
!7216 = !DILocation(line: 46, column: 23, scope: !7204)
!7217 = !DILocation(line: 46, column: 2, scope: !7204)
!7218 = !DILocation(line: 47, column: 6, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7204, file: !7183, line: 46, column: 32)
!7220 = !DILocation(line: 48, column: 4, scope: !7219)
!7221 = !DILocation(line: 49, column: 4, scope: !7219)
!7222 = !DILocation(line: 50, column: 4, scope: !7219)
!7223 = distinct !{!7223, !7217, !7224}
!7224 = !DILocation(line: 51, column: 2, scope: !7204)
!7225 = !DILocation(line: 54, column: 6, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7204, file: !7183, line: 53, column: 16)
!7227 = !DILocation(line: 55, column: 4, scope: !7226)
!7228 = !DILocation(line: 56, column: 4, scope: !7226)
!7229 = !DILocation(line: 53, column: 11, scope: !7204)
!7230 = !DILocation(line: 53, column: 2, scope: !7204)
!7231 = distinct !{!7231, !7230, !7232}
!7232 = !DILocation(line: 57, column: 2, scope: !7204)
!7233 = !DILocation(line: 59, column: 2, scope: !7204)
!7234 = distinct !DISubprogram(name: "strchr", scope: !7183, file: !7183, line: 69, type: !7235, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7237)
!7235 = !DISubroutineType(types: !7236)
!7236 = !{!256, !123, !107}
!7237 = !{!7238, !7239, !7240}
!7238 = !DILocalVariable(name: "s", arg: 1, scope: !7234, file: !7183, line: 69, type: !123)
!7239 = !DILocalVariable(name: "c", arg: 2, scope: !7234, file: !7183, line: 69, type: !107)
!7240 = !DILocalVariable(name: "tmp", scope: !7234, file: !7183, line: 71, type: !125)
!7241 = !DILocation(line: 0, scope: !7234)
!7242 = !DILocation(line: 73, column: 2, scope: !7234)
!7243 = !DILocation(line: 73, column: 10, scope: !7234)
!7244 = !DILocation(line: 73, column: 13, scope: !7234)
!7245 = !DILocation(line: 73, column: 21, scope: !7234)
!7246 = !DILocation(line: 74, column: 4, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7234, file: !7183, line: 73, column: 38)
!7248 = distinct !{!7248, !7242, !7249}
!7249 = !DILocation(line: 75, column: 2, scope: !7234)
!7250 = !DILocation(line: 77, column: 9, scope: !7234)
!7251 = !DILocation(line: 77, column: 2, scope: !7234)
!7252 = distinct !DISubprogram(name: "strrchr", scope: !7183, file: !7183, line: 87, type: !7235, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7253)
!7253 = !{!7254, !7255, !7256}
!7254 = !DILocalVariable(name: "s", arg: 1, scope: !7252, file: !7183, line: 87, type: !123)
!7255 = !DILocalVariable(name: "c", arg: 2, scope: !7252, file: !7183, line: 87, type: !107)
!7256 = !DILocalVariable(name: "match", scope: !7252, file: !7183, line: 89, type: !256)
!7257 = !DILocation(line: 0, scope: !7252)
!7258 = !DILocation(line: 91, column: 2, scope: !7252)
!7259 = !DILocation(line: 92, column: 7, scope: !7260)
!7260 = distinct !DILexicalBlock(scope: !7261, file: !7183, line: 92, column: 7)
!7261 = distinct !DILexicalBlock(scope: !7252, file: !7183, line: 91, column: 5)
!7262 = !DILocation(line: 92, column: 10, scope: !7260)
!7263 = !DILocation(line: 92, column: 7, scope: !7261)
!7264 = !DILocation(line: 95, column: 13, scope: !7252)
!7265 = !DILocation(line: 95, column: 2, scope: !7261)
!7266 = distinct !{!7266, !7258, !7267}
!7267 = !DILocation(line: 95, column: 15, scope: !7252)
!7268 = !DILocation(line: 97, column: 2, scope: !7252)
!7269 = distinct !DISubprogram(name: "strlen", scope: !7183, file: !7183, line: 107, type: !7270, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7272)
!7270 = !DISubroutineType(types: !7271)
!7271 = !{!252, !123}
!7272 = !{!7273, !7274}
!7273 = !DILocalVariable(name: "s", arg: 1, scope: !7269, file: !7183, line: 107, type: !123)
!7274 = !DILocalVariable(name: "n", scope: !7269, file: !7183, line: 109, type: !252)
!7275 = !DILocation(line: 0, scope: !7269)
!7276 = !DILocation(line: 111, column: 9, scope: !7269)
!7277 = !DILocation(line: 111, column: 12, scope: !7269)
!7278 = !DILocation(line: 111, column: 2, scope: !7269)
!7279 = !DILocation(line: 112, column: 4, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7269, file: !7183, line: 111, column: 21)
!7281 = !DILocation(line: 113, column: 4, scope: !7280)
!7282 = distinct !{!7282, !7278, !7283}
!7283 = !DILocation(line: 114, column: 2, scope: !7269)
!7284 = !DILocation(line: 116, column: 2, scope: !7269)
!7285 = distinct !DISubprogram(name: "strnlen", scope: !7183, file: !7183, line: 126, type: !7286, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7288)
!7286 = !DISubroutineType(types: !7287)
!7287 = !{!252, !123, !252}
!7288 = !{!7289, !7290, !7291}
!7289 = !DILocalVariable(name: "s", arg: 1, scope: !7285, file: !7183, line: 126, type: !123)
!7290 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7285, file: !7183, line: 126, type: !252)
!7291 = !DILocalVariable(name: "n", scope: !7285, file: !7183, line: 128, type: !252)
!7292 = !DILocation(line: 0, scope: !7285)
!7293 = !DILocation(line: 130, column: 9, scope: !7285)
!7294 = !DILocation(line: 130, column: 12, scope: !7285)
!7295 = !DILocation(line: 130, column: 20, scope: !7285)
!7296 = !DILocation(line: 130, column: 2, scope: !7285)
!7297 = !DILocation(line: 131, column: 4, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7285, file: !7183, line: 130, column: 35)
!7299 = !DILocation(line: 132, column: 4, scope: !7298)
!7300 = distinct !{!7300, !7296, !7301}
!7301 = !DILocation(line: 133, column: 2, scope: !7285)
!7302 = !DILocation(line: 135, column: 2, scope: !7285)
!7303 = distinct !DISubprogram(name: "strcmp", scope: !7183, file: !7183, line: 145, type: !7304, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7306)
!7304 = !DISubroutineType(types: !7305)
!7305 = !{!107, !123, !123}
!7306 = !{!7307, !7308}
!7307 = !DILocalVariable(name: "s1", arg: 1, scope: !7303, file: !7183, line: 145, type: !123)
!7308 = !DILocalVariable(name: "s2", arg: 2, scope: !7303, file: !7183, line: 145, type: !123)
!7309 = !DILocation(line: 0, scope: !7303)
!7310 = !DILocation(line: 147, column: 10, scope: !7303)
!7311 = !DILocation(line: 147, column: 17, scope: !7303)
!7312 = !DILocation(line: 147, column: 14, scope: !7303)
!7313 = !DILocation(line: 147, column: 22, scope: !7303)
!7314 = !DILocation(line: 148, column: 5, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7303, file: !7183, line: 147, column: 40)
!7316 = !DILocation(line: 149, column: 5, scope: !7315)
!7317 = distinct !{!7317, !7318, !7319}
!7318 = !DILocation(line: 147, column: 2, scope: !7303)
!7319 = !DILocation(line: 150, column: 2, scope: !7303)
!7320 = !DILocation(line: 152, column: 9, scope: !7303)
!7321 = !DILocation(line: 152, column: 15, scope: !7303)
!7322 = !DILocation(line: 152, column: 13, scope: !7303)
!7323 = !DILocation(line: 152, column: 2, scope: !7303)
!7324 = distinct !DISubprogram(name: "strncmp", scope: !7183, file: !7183, line: 162, type: !7325, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7327)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{!107, !123, !123, !252}
!7327 = !{!7328, !7329, !7330}
!7328 = !DILocalVariable(name: "s1", arg: 1, scope: !7324, file: !7183, line: 162, type: !123)
!7329 = !DILocalVariable(name: "s2", arg: 2, scope: !7324, file: !7183, line: 162, type: !123)
!7330 = !DILocalVariable(name: "n", arg: 3, scope: !7324, file: !7183, line: 162, type: !252)
!7331 = !DILocation(line: 0, scope: !7324)
!7332 = !DILocation(line: 164, column: 17, scope: !7324)
!7333 = !DILocation(line: 164, column: 21, scope: !7324)
!7334 = !DILocation(line: 164, column: 28, scope: !7324)
!7335 = !DILocation(line: 164, column: 25, scope: !7324)
!7336 = !DILocation(line: 164, column: 33, scope: !7324)
!7337 = !DILocation(line: 165, column: 5, scope: !7338)
!7338 = distinct !DILexicalBlock(scope: !7324, file: !7183, line: 164, column: 51)
!7339 = !DILocation(line: 166, column: 5, scope: !7338)
!7340 = !DILocation(line: 167, column: 4, scope: !7338)
!7341 = distinct !{!7341, !7342, !7343}
!7342 = !DILocation(line: 164, column: 2, scope: !7324)
!7343 = !DILocation(line: 168, column: 2, scope: !7324)
!7344 = !DILocation(line: 170, column: 25, scope: !7324)
!7345 = !DILocation(line: 170, column: 31, scope: !7324)
!7346 = !DILocation(line: 170, column: 29, scope: !7324)
!7347 = !DILocation(line: 170, column: 9, scope: !7324)
!7348 = !DILocation(line: 170, column: 2, scope: !7324)
!7349 = distinct !DISubprogram(name: "strtok_r", scope: !7183, file: !7183, line: 180, type: !7350, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7353)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!256, !256, !123, !7352}
!7352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 32)
!7353 = !{!7354, !7355, !7356, !7357, !7358}
!7354 = !DILocalVariable(name: "str", arg: 1, scope: !7349, file: !7183, line: 180, type: !256)
!7355 = !DILocalVariable(name: "sep", arg: 2, scope: !7349, file: !7183, line: 180, type: !123)
!7356 = !DILocalVariable(name: "state", arg: 3, scope: !7349, file: !7183, line: 180, type: !7352)
!7357 = !DILocalVariable(name: "start", scope: !7349, file: !7183, line: 182, type: !256)
!7358 = !DILocalVariable(name: "end", scope: !7349, file: !7183, line: 182, type: !256)
!7359 = !DILocation(line: 0, scope: !7349)
!7360 = !DILocation(line: 184, column: 10, scope: !7349)
!7361 = !DILocation(line: 184, column: 22, scope: !7349)
!7362 = !DILocation(line: 187, column: 9, scope: !7349)
!7363 = !DILocation(line: 187, column: 16, scope: !7349)
!7364 = !DILocation(line: 187, column: 19, scope: !7349)
!7365 = !DILocation(line: 187, column: 2, scope: !7349)
!7366 = !DILocation(line: 188, column: 8, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7349, file: !7183, line: 187, column: 40)
!7368 = distinct !{!7368, !7365, !7369}
!7369 = !DILocation(line: 189, column: 2, scope: !7349)
!7370 = !DILocation(line: 198, column: 9, scope: !7349)
!7371 = !DILocation(line: 198, column: 18, scope: !7349)
!7372 = !DILocation(line: 198, column: 17, scope: !7349)
!7373 = !DILocation(line: 198, column: 2, scope: !7349)
!7374 = !DILocation(line: 199, column: 6, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7349, file: !7183, line: 198, column: 37)
!7376 = !DILocation(line: 198, column: 14, scope: !7349)
!7377 = distinct !{!7377, !7373, !7378}
!7378 = !DILocation(line: 200, column: 2, scope: !7349)
!7379 = !DILocation(line: 203, column: 8, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !7183, line: 202, column: 20)
!7381 = distinct !DILexicalBlock(scope: !7349, file: !7183, line: 202, column: 6)
!7382 = !DILocation(line: 204, column: 16, scope: !7380)
!7383 = !DILocation(line: 205, column: 2, scope: !7380)
!7384 = !DILocation(line: 210, column: 1, scope: !7349)
!7385 = distinct !DISubprogram(name: "strcat", scope: !7183, file: !7183, line: 212, type: !7184, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7386)
!7386 = !{!7387, !7388}
!7387 = !DILocalVariable(name: "dest", arg: 1, scope: !7385, file: !7183, line: 212, type: !7186)
!7388 = !DILocalVariable(name: "src", arg: 2, scope: !7385, file: !7183, line: 212, type: !7187)
!7389 = !DILocation(line: 0, scope: !7385)
!7390 = !DILocation(line: 214, column: 16, scope: !7385)
!7391 = !DILocation(line: 214, column: 14, scope: !7385)
!7392 = !DILocation(line: 214, column: 2, scope: !7385)
!7393 = !DILocation(line: 215, column: 2, scope: !7385)
!7394 = distinct !DISubprogram(name: "strncat", scope: !7183, file: !7183, line: 218, type: !7205, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7395)
!7395 = !{!7396, !7397, !7398, !7399, !7400}
!7396 = !DILocalVariable(name: "dest", arg: 1, scope: !7394, file: !7183, line: 218, type: !7186)
!7397 = !DILocalVariable(name: "src", arg: 2, scope: !7394, file: !7183, line: 218, type: !7187)
!7398 = !DILocalVariable(name: "n", arg: 3, scope: !7394, file: !7183, line: 219, type: !252)
!7399 = !DILocalVariable(name: "orig_dest", scope: !7394, file: !7183, line: 221, type: !256)
!7400 = !DILocalVariable(name: "len", scope: !7394, file: !7183, line: 222, type: !252)
!7401 = !DILocation(line: 0, scope: !7394)
!7402 = !DILocation(line: 222, column: 15, scope: !7394)
!7403 = !DILocation(line: 224, column: 7, scope: !7394)
!7404 = !DILocation(line: 225, column: 14, scope: !7394)
!7405 = !DILocation(line: 225, column: 19, scope: !7394)
!7406 = !DILocation(line: 225, column: 11, scope: !7394)
!7407 = !DILocation(line: 225, column: 23, scope: !7394)
!7408 = !DILocation(line: 225, column: 28, scope: !7394)
!7409 = !DILocation(line: 225, column: 2, scope: !7394)
!7410 = !DILocation(line: 226, column: 17, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7394, file: !7183, line: 225, column: 38)
!7412 = !DILocation(line: 226, column: 8, scope: !7411)
!7413 = !DILocation(line: 226, column: 11, scope: !7411)
!7414 = distinct !{!7414, !7409, !7415}
!7415 = !DILocation(line: 227, column: 2, scope: !7394)
!7416 = !DILocation(line: 228, column: 8, scope: !7394)
!7417 = !DILocation(line: 230, column: 2, scope: !7394)
!7418 = distinct !DISubprogram(name: "memcmp", scope: !7183, file: !7183, line: 239, type: !7419, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7421)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{!107, !13, !13, !252}
!7421 = !{!7422, !7423, !7424, !7425, !7426}
!7422 = !DILocalVariable(name: "m1", arg: 1, scope: !7418, file: !7183, line: 239, type: !13)
!7423 = !DILocalVariable(name: "m2", arg: 2, scope: !7418, file: !7183, line: 239, type: !13)
!7424 = !DILocalVariable(name: "n", arg: 3, scope: !7418, file: !7183, line: 239, type: !252)
!7425 = !DILocalVariable(name: "c1", scope: !7418, file: !7183, line: 241, type: !123)
!7426 = !DILocalVariable(name: "c2", scope: !7418, file: !7183, line: 242, type: !123)
!7427 = !DILocation(line: 0, scope: !7418)
!7428 = !DILocation(line: 244, column: 7, scope: !7429)
!7429 = distinct !DILexicalBlock(scope: !7418, file: !7183, line: 244, column: 6)
!7430 = !DILocation(line: 244, column: 6, scope: !7418)
!7431 = !DILocation(line: 248, column: 10, scope: !7418)
!7432 = !DILocation(line: 248, column: 14, scope: !7418)
!7433 = !DILocation(line: 248, column: 19, scope: !7418)
!7434 = !DILocation(line: 248, column: 2, scope: !7418)
!7435 = !DILocation(line: 248, column: 23, scope: !7418)
!7436 = !DILocation(line: 248, column: 30, scope: !7418)
!7437 = !DILocation(line: 248, column: 27, scope: !7418)
!7438 = !DILocation(line: 249, column: 5, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7418, file: !7183, line: 248, column: 36)
!7440 = !DILocation(line: 250, column: 5, scope: !7439)
!7441 = distinct !{!7441, !7434, !7442}
!7442 = !DILocation(line: 251, column: 2, scope: !7418)
!7443 = !DILocation(line: 253, column: 9, scope: !7418)
!7444 = !DILocation(line: 253, column: 15, scope: !7418)
!7445 = !DILocation(line: 253, column: 13, scope: !7418)
!7446 = !DILocation(line: 253, column: 2, scope: !7418)
!7447 = !DILocation(line: 254, column: 1, scope: !7418)
!7448 = distinct !DISubprogram(name: "memmove", scope: !7183, file: !7183, line: 263, type: !7449, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7451)
!7449 = !DISubroutineType(types: !7450)
!7450 = !{!102, !102, !13, !252}
!7451 = !{!7452, !7453, !7454, !7455, !7456}
!7452 = !DILocalVariable(name: "d", arg: 1, scope: !7448, file: !7183, line: 263, type: !102)
!7453 = !DILocalVariable(name: "s", arg: 2, scope: !7448, file: !7183, line: 263, type: !13)
!7454 = !DILocalVariable(name: "n", arg: 3, scope: !7448, file: !7183, line: 263, type: !252)
!7455 = !DILocalVariable(name: "dest", scope: !7448, file: !7183, line: 265, type: !256)
!7456 = !DILocalVariable(name: "src", scope: !7448, file: !7183, line: 266, type: !123)
!7457 = !DILocation(line: 0, scope: !7448)
!7458 = !DILocation(line: 268, column: 21, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7448, file: !7183, line: 268, column: 6)
!7460 = !DILocation(line: 268, column: 28, scope: !7459)
!7461 = !DILocation(line: 268, column: 6, scope: !7448)
!7462 = !DILocation(line: 280, column: 12, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7459, file: !7183, line: 278, column: 9)
!7464 = !DILocation(line: 280, column: 3, scope: !7463)
!7465 = !DILocation(line: 275, column: 5, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !7183, line: 274, column: 17)
!7467 = distinct !DILexicalBlock(scope: !7459, file: !7183, line: 268, column: 33)
!7468 = !DILocation(line: 276, column: 14, scope: !7466)
!7469 = !DILocation(line: 276, column: 4, scope: !7466)
!7470 = !DILocation(line: 276, column: 12, scope: !7466)
!7471 = !DILocation(line: 274, column: 12, scope: !7467)
!7472 = !DILocation(line: 274, column: 3, scope: !7467)
!7473 = distinct !{!7473, !7472, !7474}
!7474 = !DILocation(line: 277, column: 3, scope: !7467)
!7475 = !DILocation(line: 281, column: 12, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7463, file: !7183, line: 280, column: 17)
!7477 = !DILocation(line: 281, column: 10, scope: !7476)
!7478 = !DILocation(line: 282, column: 8, scope: !7476)
!7479 = !DILocation(line: 283, column: 7, scope: !7476)
!7480 = !DILocation(line: 284, column: 5, scope: !7476)
!7481 = distinct !{!7481, !7464, !7482}
!7482 = !DILocation(line: 285, column: 3, scope: !7463)
!7483 = !DILocation(line: 288, column: 2, scope: !7448)
!7484 = distinct !DISubprogram(name: "memcpy", scope: !7183, file: !7183, line: 298, type: !7485, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7489)
!7485 = !DISubroutineType(types: !7486)
!7486 = !{!102, !7487, !7488, !252}
!7487 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !102)
!7488 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!7489 = !{!7490, !7491, !7492, !7493, !7494}
!7490 = !DILocalVariable(name: "d", arg: 1, scope: !7484, file: !7183, line: 298, type: !7487)
!7491 = !DILocalVariable(name: "s", arg: 2, scope: !7484, file: !7183, line: 298, type: !7488)
!7492 = !DILocalVariable(name: "n", arg: 3, scope: !7484, file: !7183, line: 298, type: !252)
!7493 = !DILocalVariable(name: "d_byte", scope: !7484, file: !7183, line: 302, type: !144)
!7494 = !DILocalVariable(name: "s_byte", scope: !7484, file: !7183, line: 303, type: !2795)
!7495 = !DILocation(line: 0, scope: !7484)
!7496 = !DILocation(line: 337, column: 11, scope: !7484)
!7497 = !DILocation(line: 337, column: 2, scope: !7484)
!7498 = !DILocation(line: 338, column: 25, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7484, file: !7183, line: 337, column: 16)
!7500 = !DILocation(line: 338, column: 17, scope: !7499)
!7501 = !DILocation(line: 338, column: 11, scope: !7499)
!7502 = !DILocation(line: 338, column: 15, scope: !7499)
!7503 = !DILocation(line: 339, column: 4, scope: !7499)
!7504 = distinct !{!7504, !7497, !7505}
!7505 = !DILocation(line: 340, column: 2, scope: !7484)
!7506 = !DILocation(line: 342, column: 2, scope: !7484)
!7507 = distinct !DISubprogram(name: "memset", scope: !7183, file: !7183, line: 352, type: !7508, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7510)
!7508 = !DISubroutineType(types: !7509)
!7509 = !{!102, !102, !107, !252}
!7510 = !{!7511, !7512, !7513, !7514, !7515}
!7511 = !DILocalVariable(name: "buf", arg: 1, scope: !7507, file: !7183, line: 352, type: !102)
!7512 = !DILocalVariable(name: "c", arg: 2, scope: !7507, file: !7183, line: 352, type: !107)
!7513 = !DILocalVariable(name: "n", arg: 3, scope: !7507, file: !7183, line: 352, type: !252)
!7514 = !DILocalVariable(name: "d_byte", scope: !7507, file: !7183, line: 356, type: !144)
!7515 = !DILocalVariable(name: "c_byte", scope: !7507, file: !7183, line: 357, type: !134)
!7516 = !DILocation(line: 0, scope: !7507)
!7517 = !DILocation(line: 357, column: 25, scope: !7507)
!7518 = !DILocation(line: 389, column: 11, scope: !7507)
!7519 = !DILocation(line: 389, column: 2, scope: !7507)
!7520 = !DILocation(line: 390, column: 11, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7507, file: !7183, line: 389, column: 16)
!7522 = !DILocation(line: 390, column: 15, scope: !7521)
!7523 = !DILocation(line: 391, column: 4, scope: !7521)
!7524 = distinct !{!7524, !7519, !7525}
!7525 = !DILocation(line: 392, column: 2, scope: !7507)
!7526 = !DILocation(line: 394, column: 2, scope: !7507)
!7527 = distinct !DISubprogram(name: "memchr", scope: !7183, file: !7183, line: 404, type: !7528, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2792, retainedNodes: !7530)
!7528 = !DISubroutineType(types: !7529)
!7529 = !{!102, !13, !107, !252}
!7530 = !{!7531, !7532, !7533, !7534}
!7531 = !DILocalVariable(name: "s", arg: 1, scope: !7527, file: !7183, line: 404, type: !13)
!7532 = !DILocalVariable(name: "c", arg: 2, scope: !7527, file: !7183, line: 404, type: !107)
!7533 = !DILocalVariable(name: "n", arg: 3, scope: !7527, file: !7183, line: 404, type: !252)
!7534 = !DILocalVariable(name: "p", scope: !7535, file: !7183, line: 407, type: !2795)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !7183, line: 406, column: 14)
!7536 = distinct !DILexicalBlock(scope: !7527, file: !7183, line: 406, column: 6)
!7537 = !DILocation(line: 0, scope: !7527)
!7538 = !DILocation(line: 406, column: 8, scope: !7536)
!7539 = !DILocation(line: 406, column: 6, scope: !7527)
!7540 = !DILocation(line: 409, column: 3, scope: !7535)
!7541 = !DILocation(line: 0, scope: !7535)
!7542 = !DILocation(line: 410, column: 8, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !7183, line: 410, column: 8)
!7544 = distinct !DILexicalBlock(scope: !7535, file: !7183, line: 409, column: 6)
!7545 = !DILocation(line: 410, column: 13, scope: !7543)
!7546 = !DILocation(line: 410, column: 8, scope: !7544)
!7547 = distinct !{!7547, !7540, !7548}
!7548 = !DILocation(line: 414, column: 20, scope: !7535)
!7549 = !DILocation(line: 417, column: 2, scope: !7527)
!7550 = !DILocation(line: 418, column: 1, scope: !7527)
!7551 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !535, file: !535, line: 23, type: !3490, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7552)
!7552 = !{!7553}
!7553 = !DILocalVariable(name: "hook", arg: 1, scope: !7551, file: !535, line: 23, type: !269)
!7554 = !DILocation(line: 0, scope: !7551)
!7555 = !DILocation(line: 25, column: 15, scope: !7551)
!7556 = !DILocation(line: 26, column: 1, scope: !7551)
!7557 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !535, file: !535, line: 14, type: !270, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7558)
!7558 = !{!7559}
!7559 = !DILocalVariable(name: "c", arg: 1, scope: !7557, file: !535, line: 14, type: !107)
!7560 = !DILocation(line: 0, scope: !7557)
!7561 = !DILocation(line: 18, column: 2, scope: !7557)
!7562 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !535, file: !535, line: 28, type: !7563, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7565)
!7563 = !DISubroutineType(types: !7564)
!7564 = !{!107, !107, !531}
!7565 = !{!7566, !7567}
!7566 = !DILocalVariable(name: "c", arg: 1, scope: !7562, file: !535, line: 28, type: !107)
!7567 = !DILocalVariable(name: "stream", arg: 2, scope: !7562, file: !535, line: 28, type: !531)
!7568 = !DILocation(line: 0, scope: !7562)
!7569 = !DILocation(line: 30, column: 27, scope: !7562)
!7570 = !DILocation(line: 30, column: 50, scope: !7562)
!7571 = !DILocation(line: 30, column: 9, scope: !7562)
!7572 = !DILocation(line: 30, column: 2, scope: !7562)
!7573 = distinct !DISubprogram(name: "fputc", scope: !535, file: !535, line: 41, type: !7563, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7574)
!7574 = !{!7575, !7576}
!7575 = !DILocalVariable(name: "c", arg: 1, scope: !7573, file: !535, line: 41, type: !107)
!7576 = !DILocalVariable(name: "stream", arg: 2, scope: !7573, file: !535, line: 41, type: !531)
!7577 = !DILocation(line: 0, scope: !7573)
!7578 = !DILocation(line: 43, column: 9, scope: !7573)
!7579 = !DILocation(line: 43, column: 2, scope: !7573)
!7580 = distinct !DISubprogram(name: "zephyr_fputc", scope: !7581, file: !7581, line: 72, type: !7563, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7582)
!7581 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/echo_bot")
!7582 = !{!7583, !7584}
!7583 = !DILocalVariable(name: "c", arg: 1, scope: !7580, file: !7581, line: 72, type: !107)
!7584 = !DILocalVariable(name: "stream", arg: 2, scope: !7580, file: !7581, line: 72, type: !531)
!7585 = !DILocation(line: 0, scope: !7580)
!7586 = !DILocation(line: 81, column: 2, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7580, file: !7581, line: 81, column: 2)
!7588 = !{i64 2154803433}
!7589 = !DILocation(line: 82, column: 9, scope: !7580)
!7590 = !DILocation(line: 82, column: 2, scope: !7580)
!7591 = distinct !DISubprogram(name: "fputs", scope: !535, file: !535, line: 46, type: !7592, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7595)
!7592 = !DISubroutineType(types: !7593)
!7593 = !{!107, !7187, !7594}
!7594 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !531)
!7595 = !{!7596, !7597, !7598, !7599}
!7596 = !DILocalVariable(name: "s", arg: 1, scope: !7591, file: !535, line: 46, type: !7187)
!7597 = !DILocalVariable(name: "stream", arg: 2, scope: !7591, file: !535, line: 46, type: !7594)
!7598 = !DILocalVariable(name: "len", scope: !7591, file: !535, line: 48, type: !107)
!7599 = !DILocalVariable(name: "ret", scope: !7591, file: !535, line: 49, type: !107)
!7600 = !DILocation(line: 0, scope: !7591)
!7601 = !DILocation(line: 48, column: 12, scope: !7591)
!7602 = !DILocation(line: 51, column: 8, scope: !7591)
!7603 = !DILocation(line: 53, column: 13, scope: !7591)
!7604 = !DILocation(line: 53, column: 9, scope: !7591)
!7605 = !DILocation(line: 53, column: 2, scope: !7591)
!7606 = distinct !DISubprogram(name: "fwrite", scope: !535, file: !535, line: 99, type: !7607, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7609)
!7607 = !DISubroutineType(types: !7608)
!7608 = !{!252, !7488, !252, !252, !7594}
!7609 = !{!7610, !7611, !7612, !7613}
!7610 = !DILocalVariable(name: "ptr", arg: 1, scope: !7606, file: !535, line: 99, type: !7488)
!7611 = !DILocalVariable(name: "size", arg: 2, scope: !7606, file: !535, line: 99, type: !252)
!7612 = !DILocalVariable(name: "nitems", arg: 3, scope: !7606, file: !535, line: 99, type: !252)
!7613 = !DILocalVariable(name: "stream", arg: 4, scope: !7606, file: !535, line: 100, type: !7594)
!7614 = !DILocation(line: 0, scope: !7606)
!7615 = !DILocation(line: 102, column: 9, scope: !7606)
!7616 = !DILocation(line: 102, column: 2, scope: !7606)
!7617 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !7581, file: !7581, line: 96, type: !7607, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7618)
!7618 = !{!7619, !7620, !7621, !7622}
!7619 = !DILocalVariable(name: "ptr", arg: 1, scope: !7617, file: !7581, line: 96, type: !7488)
!7620 = !DILocalVariable(name: "size", arg: 2, scope: !7617, file: !7581, line: 96, type: !252)
!7621 = !DILocalVariable(name: "nitems", arg: 3, scope: !7617, file: !7581, line: 96, type: !252)
!7622 = !DILocalVariable(name: "stream", arg: 4, scope: !7617, file: !7581, line: 96, type: !7594)
!7623 = !DILocation(line: 0, scope: !7617)
!7624 = !DILocation(line: 107, column: 2, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7617, file: !7581, line: 107, column: 2)
!7626 = !{i64 2154803537}
!7627 = !DILocation(line: 108, column: 9, scope: !7617)
!7628 = !DILocation(line: 108, column: 2, scope: !7617)
!7629 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !535, file: !535, line: 56, type: !7607, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7630)
!7630 = !{!7631, !7632, !7633, !7634, !7635, !7636, !7637, !7638}
!7631 = !DILocalVariable(name: "ptr", arg: 1, scope: !7629, file: !535, line: 56, type: !7488)
!7632 = !DILocalVariable(name: "size", arg: 2, scope: !7629, file: !535, line: 56, type: !252)
!7633 = !DILocalVariable(name: "nitems", arg: 3, scope: !7629, file: !535, line: 57, type: !252)
!7634 = !DILocalVariable(name: "stream", arg: 4, scope: !7629, file: !535, line: 57, type: !7594)
!7635 = !DILocalVariable(name: "i", scope: !7629, file: !535, line: 59, type: !252)
!7636 = !DILocalVariable(name: "j", scope: !7629, file: !535, line: 60, type: !252)
!7637 = !DILocalVariable(name: "p", scope: !7629, file: !535, line: 61, type: !2795)
!7638 = !DILabel(scope: !7629, name: "done", file: !535, line: 82)
!7639 = !DILocation(line: 0, scope: !7629)
!7640 = !DILocation(line: 63, column: 14, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7629, file: !535, line: 63, column: 6)
!7642 = !DILocation(line: 63, column: 24, scope: !7641)
!7643 = !DILocation(line: 72, column: 3, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7629, file: !535, line: 70, column: 5)
!7645 = !DILocation(line: 0, scope: !7644)
!7646 = !DILocation(line: 73, column: 8, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !535, line: 73, column: 8)
!7648 = distinct !DILexicalBlock(scope: !7644, file: !535, line: 72, column: 6)
!7649 = !DILocation(line: 73, column: 29, scope: !7647)
!7650 = !DILocation(line: 73, column: 27, scope: !7647)
!7651 = !DILocation(line: 73, column: 21, scope: !7647)
!7652 = !DILocation(line: 73, column: 33, scope: !7647)
!7653 = !DILocation(line: 73, column: 8, scope: !7648)
!7654 = !DILocation(line: 76, column: 5, scope: !7648)
!7655 = !DILocation(line: 77, column: 14, scope: !7644)
!7656 = !DILocation(line: 77, column: 3, scope: !7648)
!7657 = distinct !{!7657, !7643, !7658}
!7658 = !DILocation(line: 77, column: 17, scope: !7644)
!7659 = !DILocation(line: 79, column: 4, scope: !7644)
!7660 = !DILocation(line: 80, column: 13, scope: !7629)
!7661 = !DILocation(line: 80, column: 2, scope: !7644)
!7662 = distinct !{!7662, !7663, !7664}
!7663 = !DILocation(line: 70, column: 2, scope: !7629)
!7664 = !DILocation(line: 80, column: 16, scope: !7629)
!7665 = !DILocation(line: 82, column: 1, scope: !7629)
!7666 = !DILocation(line: 83, column: 17, scope: !7629)
!7667 = !DILocation(line: 83, column: 2, scope: !7629)
!7668 = !DILocation(line: 84, column: 1, scope: !7629)
!7669 = distinct !DISubprogram(name: "puts", scope: !535, file: !535, line: 106, type: !7670, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !528, retainedNodes: !7672)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{!107, !123}
!7672 = !{!7673}
!7673 = !DILocalVariable(name: "s", arg: 1, scope: !7669, file: !535, line: 106, type: !123)
!7674 = !DILocation(line: 0, scope: !7669)
!7675 = !DILocation(line: 108, column: 6, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7669, file: !535, line: 108, column: 6)
!7677 = !DILocation(line: 108, column: 23, scope: !7676)
!7678 = !DILocation(line: 108, column: 6, scope: !7669)
!7679 = !DILocation(line: 112, column: 9, scope: !7669)
!7680 = !DILocation(line: 112, column: 29, scope: !7669)
!7681 = !DILocation(line: 112, column: 2, scope: !7669)
!7682 = !DILocation(line: 113, column: 1, scope: !7669)
!7683 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !667, file: !667, line: 368, type: !720, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7684)
!7684 = !{!7685}
!7685 = !DILocalVariable(name: "dev", arg: 1, scope: !7683, file: !667, line: 368, type: !696)
!7686 = !DILocation(line: 0, scope: !7683)
!7687 = !DILocation(line: 370, column: 2, scope: !7683)
!7688 = !DILocation(line: 371, column: 1, scope: !7683)
!7689 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !667, file: !667, line: 243, type: !7690, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7692)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{null, !107, !107, !696}
!7692 = !{!7693, !7694, !7695, !7696, !7698}
!7693 = !DILocalVariable(name: "min", arg: 1, scope: !7689, file: !667, line: 243, type: !107)
!7694 = !DILocalVariable(name: "max", arg: 2, scope: !7689, file: !667, line: 243, type: !107)
!7695 = !DILocalVariable(name: "dev", arg: 3, scope: !7689, file: !667, line: 243, type: !696)
!7696 = !DILocalVariable(name: "data", scope: !7689, file: !667, line: 245, type: !7697)
!7697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 32)
!7698 = !DILocalVariable(name: "line", scope: !7689, file: !667, line: 246, type: !107)
!7699 = !DILocation(line: 0, scope: !7689)
!7700 = !DILocation(line: 245, column: 38, scope: !7689)
!7701 = !DILocation(line: 249, column: 24, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !667, line: 249, column: 2)
!7703 = distinct !DILexicalBlock(scope: !7689, file: !667, line: 249, column: 2)
!7704 = !DILocation(line: 249, column: 2, scope: !7703)
!7705 = !DILocation(line: 251, column: 7, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7707, file: !667, line: 251, column: 7)
!7707 = distinct !DILexicalBlock(scope: !7702, file: !667, line: 249, column: 39)
!7708 = !DILocation(line: 251, column: 7, scope: !7707)
!7709 = !DILocation(line: 253, column: 4, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7706, file: !667, line: 251, column: 36)
!7711 = !DILocation(line: 256, column: 24, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7710, file: !667, line: 256, column: 8)
!7713 = !DILocation(line: 256, column: 9, scope: !7712)
!7714 = !DILocation(line: 256, column: 8, scope: !7710)
!7715 = !DILocation(line: 260, column: 43, scope: !7710)
!7716 = !DILocation(line: 260, column: 4, scope: !7710)
!7717 = !DILocation(line: 261, column: 3, scope: !7710)
!7718 = !DILocation(line: 249, column: 35, scope: !7702)
!7719 = distinct !{!7719, !7704, !7720}
!7720 = !DILocation(line: 262, column: 2, scope: !7703)
!7721 = !DILocation(line: 263, column: 1, scope: !7689)
!7722 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !667, file: !667, line: 158, type: !270, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7723)
!7723 = !{!7724}
!7724 = !DILocalVariable(name: "line", arg: 1, scope: !7722, file: !667, line: 158, type: !107)
!7725 = !DILocation(line: 0, scope: !7722)
!7726 = !DILocation(line: 170, column: 38, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7728, file: !667, line: 160, column: 17)
!7728 = distinct !DILexicalBlock(scope: !7722, file: !667, line: 160, column: 6)
!7729 = !DILocation(line: 170, column: 10, scope: !7727)
!7730 = !DILocation(line: 176, column: 1, scope: !7722)
!7731 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !667, file: !667, line: 183, type: !7732, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7734)
!7732 = !DISubroutineType(types: !7733)
!7733 = !{null, !107}
!7734 = !{!7735}
!7735 = !DILocalVariable(name: "line", arg: 1, scope: !7731, file: !667, line: 183, type: !107)
!7736 = !DILocation(line: 0, scope: !7731)
!7737 = !DILocation(line: 195, column: 28, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !667, line: 185, column: 17)
!7739 = distinct !DILexicalBlock(scope: !7731, file: !667, line: 185, column: 6)
!7740 = !DILocation(line: 195, column: 3, scope: !7738)
!7741 = !DILocation(line: 200, column: 1, scope: !7731)
!7742 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !7743, file: !7743, line: 910, type: !6179, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7744)
!7743 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7744 = !{!7745}
!7745 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7742, file: !7743, line: 910, type: !162)
!7746 = !DILocation(line: 0, scope: !7742)
!7747 = !DILocation(line: 912, column: 3, scope: !7742)
!7748 = !DILocation(line: 913, column: 1, scope: !7742)
!7749 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !7743, file: !7743, line: 834, type: !7095, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7750)
!7750 = !{!7751}
!7751 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7749, file: !7743, line: 834, type: !162)
!7752 = !DILocation(line: 0, scope: !7749)
!7753 = !DILocation(line: 836, column: 11, scope: !7749)
!7754 = !DILocation(line: 836, column: 40, scope: !7749)
!7755 = !DILocation(line: 836, column: 3, scope: !7749)
!7756 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !667, file: !667, line: 304, type: !720, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7757)
!7757 = !{!7758}
!7758 = !DILocalVariable(name: "dev", arg: 1, scope: !7756, file: !667, line: 304, type: !696)
!7759 = !DILocation(line: 0, scope: !7756)
!7760 = !DILocation(line: 306, column: 2, scope: !7756)
!7761 = !DILocation(line: 307, column: 1, scope: !7756)
!7762 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !667, file: !667, line: 299, type: !720, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7763)
!7763 = !{!7764}
!7764 = !DILocalVariable(name: "dev", arg: 1, scope: !7762, file: !667, line: 299, type: !696)
!7765 = !DILocation(line: 0, scope: !7762)
!7766 = !DILocation(line: 301, column: 2, scope: !7762)
!7767 = !DILocation(line: 302, column: 1, scope: !7762)
!7768 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !667, file: !667, line: 294, type: !720, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7769)
!7769 = !{!7770}
!7770 = !DILocalVariable(name: "dev", arg: 1, scope: !7768, file: !667, line: 294, type: !696)
!7771 = !DILocation(line: 0, scope: !7768)
!7772 = !DILocation(line: 296, column: 2, scope: !7768)
!7773 = !DILocation(line: 297, column: 1, scope: !7768)
!7774 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !667, file: !667, line: 397, type: !720, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7775)
!7775 = !{!7776}
!7776 = !DILocalVariable(name: "dev", arg: 1, scope: !7774, file: !667, line: 397, type: !696)
!7777 = !DILocation(line: 0, scope: !7774)
!7778 = !DILocation(line: 399, column: 2, scope: !7774)
!7779 = !DILocation(line: 400, column: 1, scope: !7774)
!7780 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !667, file: !667, line: 392, type: !720, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7781)
!7781 = !{!7782}
!7782 = !DILocalVariable(name: "dev", arg: 1, scope: !7780, file: !667, line: 392, type: !696)
!7783 = !DILocation(line: 0, scope: !7780)
!7784 = !DILocation(line: 394, column: 2, scope: !7780)
!7785 = !DILocation(line: 395, column: 1, scope: !7780)
!7786 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !667, file: !667, line: 289, type: !720, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7787)
!7787 = !{!7788}
!7788 = !DILocalVariable(name: "dev", arg: 1, scope: !7786, file: !667, line: 289, type: !696)
!7789 = !DILocation(line: 0, scope: !7786)
!7790 = !DILocation(line: 291, column: 2, scope: !7786)
!7791 = !DILocation(line: 292, column: 1, scope: !7786)
!7792 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !667, file: !667, line: 387, type: !720, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7793)
!7793 = !{!7794}
!7794 = !DILocalVariable(name: "dev", arg: 1, scope: !7792, file: !667, line: 387, type: !696)
!7795 = !DILocation(line: 0, scope: !7792)
!7796 = !DILocation(line: 389, column: 2, scope: !7792)
!7797 = !DILocation(line: 390, column: 1, scope: !7792)
!7798 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !667, file: !667, line: 382, type: !720, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7799)
!7799 = !{!7800}
!7800 = !DILocalVariable(name: "dev", arg: 1, scope: !7798, file: !667, line: 382, type: !696)
!7801 = !DILocation(line: 0, scope: !7798)
!7802 = !DILocation(line: 384, column: 2, scope: !7798)
!7803 = !DILocation(line: 385, column: 1, scope: !7798)
!7804 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !667, file: !667, line: 373, type: !720, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7805)
!7805 = !{!7806}
!7806 = !DILocalVariable(name: "dev", arg: 1, scope: !7804, file: !667, line: 373, type: !696)
!7807 = !DILocation(line: 0, scope: !7804)
!7808 = !DILocation(line: 375, column: 2, scope: !7804)
!7809 = !DILocation(line: 376, column: 1, scope: !7804)
!7810 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !667, file: !667, line: 284, type: !720, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7811)
!7811 = !{!7812}
!7812 = !DILocalVariable(name: "dev", arg: 1, scope: !7810, file: !667, line: 284, type: !696)
!7813 = !DILocation(line: 0, scope: !7810)
!7814 = !DILocation(line: 286, column: 2, scope: !7810)
!7815 = !DILocation(line: 287, column: 1, scope: !7810)
!7816 = distinct !DISubprogram(name: "stm32_exti_init", scope: !667, file: !667, line: 416, type: !694, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7817)
!7817 = !{!7818}
!7818 = !DILocalVariable(name: "dev", arg: 1, scope: !7816, file: !667, line: 416, type: !696)
!7819 = !DILocation(line: 0, scope: !7816)
!7820 = !DILocation(line: 418, column: 2, scope: !7816)
!7821 = !DILocation(line: 420, column: 2, scope: !7816)
!7822 = !DILocation(line: 0, scope: !719)
!7823 = !DILocation(line: 493, column: 2, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !719, file: !667, line: 493, column: 2)
!7825 = !DILocation(line: 497, column: 2, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !719, file: !667, line: 497, column: 2)
!7827 = !DILocation(line: 507, column: 2, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !719, file: !667, line: 507, column: 2)
!7829 = !DILocation(line: 512, column: 2, scope: !7830)
!7830 = distinct !DILexicalBlock(scope: !719, file: !667, line: 512, column: 2)
!7831 = !DILocation(line: 516, column: 2, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !719, file: !667, line: 516, column: 2)
!7833 = !DILocation(line: 523, column: 2, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !719, file: !667, line: 523, column: 2)
!7835 = !DILocation(line: 527, column: 2, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !719, file: !667, line: 527, column: 2)
!7837 = !DILocation(line: 581, column: 2, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !719, file: !667, line: 581, column: 2)
!7839 = !DILocation(line: 586, column: 2, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !719, file: !667, line: 586, column: 2)
!7841 = !DILocation(line: 591, column: 2, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !719, file: !667, line: 591, column: 2)
!7843 = !DILocation(line: 595, column: 2, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !719, file: !667, line: 595, column: 2)
!7845 = !DILocation(line: 607, column: 1, scope: !719)
!7846 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !667, file: !667, line: 112, type: !7732, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7847)
!7847 = !{!7848, !7849}
!7848 = !DILocalVariable(name: "line", arg: 1, scope: !7846, file: !667, line: 112, type: !107)
!7849 = !DILocalVariable(name: "irqnum", scope: !7846, file: !667, line: 114, type: !107)
!7850 = !DILocation(line: 0, scope: !7846)
!7851 = !DILocation(line: 121, column: 11, scope: !7846)
!7852 = !DILocation(line: 130, column: 26, scope: !7846)
!7853 = !DILocation(line: 130, column: 2, scope: !7846)
!7854 = !DILocation(line: 134, column: 2, scope: !7846)
!7855 = !DILocation(line: 135, column: 1, scope: !7846)
!7856 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !7743, file: !7743, line: 268, type: !6179, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7857)
!7857 = !{!7858}
!7858 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7856, file: !7743, line: 268, type: !162)
!7859 = !DILocation(line: 0, scope: !7856)
!7860 = !DILocation(line: 270, column: 3, scope: !7856)
!7861 = !DILocation(line: 271, column: 1, scope: !7856)
!7862 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !667, file: !667, line: 137, type: !7732, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7863)
!7863 = !{!7864}
!7864 = !DILocalVariable(name: "line", arg: 1, scope: !7862, file: !667, line: 137, type: !107)
!7865 = !DILocation(line: 0, scope: !7862)
!7866 = !DILocation(line: 141, column: 11, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7862, file: !667, line: 141, column: 6)
!7868 = !DILocation(line: 141, column: 6, scope: !7862)
!7869 = !DILocation(line: 145, column: 28, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7867, file: !667, line: 141, column: 17)
!7871 = !DILocation(line: 145, column: 3, scope: !7870)
!7872 = !DILocation(line: 147, column: 2, scope: !7870)
!7873 = !DILocation(line: 151, column: 1, scope: !7862)
!7874 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !7743, file: !7743, line: 309, type: !6179, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7875)
!7875 = !{!7876}
!7876 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7874, file: !7743, line: 309, type: !162)
!7877 = !DILocation(line: 0, scope: !7874)
!7878 = !DILocation(line: 311, column: 3, scope: !7874)
!7879 = !DILocation(line: 312, column: 1, scope: !7874)
!7880 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !667, file: !667, line: 202, type: !7881, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7883)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{null, !107, !107}
!7883 = !{!7884, !7885}
!7884 = !DILocalVariable(name: "line", arg: 1, scope: !7880, file: !667, line: 202, type: !107)
!7885 = !DILocalVariable(name: "trigger", arg: 2, scope: !7880, file: !667, line: 202, type: !107)
!7886 = !DILocation(line: 0, scope: !7880)
!7887 = !DILocation(line: 211, column: 2, scope: !7880)
!7888 = !DILocation(line: 213, column: 36, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7880, file: !667, line: 211, column: 19)
!7890 = !DILocation(line: 213, column: 3, scope: !7889)
!7891 = !DILocation(line: 214, column: 3, scope: !7889)
!7892 = !DILocation(line: 215, column: 3, scope: !7889)
!7893 = !DILocation(line: 217, column: 35, scope: !7889)
!7894 = !DILocation(line: 217, column: 3, scope: !7889)
!7895 = !DILocation(line: 218, column: 3, scope: !7889)
!7896 = !DILocation(line: 219, column: 3, scope: !7889)
!7897 = !DILocation(line: 221, column: 36, scope: !7889)
!7898 = !DILocation(line: 221, column: 3, scope: !7889)
!7899 = !DILocation(line: 222, column: 3, scope: !7889)
!7900 = !DILocation(line: 223, column: 3, scope: !7889)
!7901 = !DILocation(line: 225, column: 35, scope: !7889)
!7902 = !DILocation(line: 225, column: 3, scope: !7889)
!7903 = !DILocation(line: 226, column: 3, scope: !7889)
!7904 = !DILocation(line: 227, column: 3, scope: !7889)
!7905 = !DILocation(line: 232, column: 1, scope: !7880)
!7906 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !7743, file: !7743, line: 573, type: !6179, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7907)
!7907 = !{!7908}
!7908 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7906, file: !7743, line: 573, type: !162)
!7909 = !DILocation(line: 0, scope: !7906)
!7910 = !DILocation(line: 575, column: 3, scope: !7906)
!7911 = !DILocation(line: 577, column: 1, scope: !7906)
!7912 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !7743, file: !7743, line: 703, type: !6179, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7913)
!7913 = !{!7914}
!7914 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7912, file: !7743, line: 703, type: !162)
!7915 = !DILocation(line: 0, scope: !7912)
!7916 = !DILocation(line: 705, column: 3, scope: !7912)
!7917 = !DILocation(line: 706, column: 1, scope: !7912)
!7918 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !7743, file: !7743, line: 529, type: !6179, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7919)
!7919 = !{!7920}
!7920 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7918, file: !7743, line: 529, type: !162)
!7921 = !DILocation(line: 0, scope: !7918)
!7922 = !DILocation(line: 531, column: 3, scope: !7918)
!7923 = !DILocation(line: 533, column: 1, scope: !7918)
!7924 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !7743, file: !7743, line: 661, type: !6179, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7925)
!7925 = !{!7926}
!7926 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !7924, file: !7743, line: 661, type: !162)
!7927 = !DILocation(line: 0, scope: !7924)
!7928 = !DILocation(line: 663, column: 3, scope: !7924)
!7929 = !DILocation(line: 664, column: 1, scope: !7924)
!7930 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !667, file: !667, line: 433, type: !7931, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7933)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{!107, !107, !707, !102}
!7933 = !{!7934, !7935, !7936, !7937, !7939}
!7934 = !DILocalVariable(name: "line", arg: 1, scope: !7930, file: !667, line: 433, type: !107)
!7935 = !DILocalVariable(name: "cb", arg: 2, scope: !7930, file: !667, line: 433, type: !707)
!7936 = !DILocalVariable(name: "arg", arg: 3, scope: !7930, file: !667, line: 433, type: !102)
!7937 = !DILocalVariable(name: "dev", scope: !7930, file: !667, line: 435, type: !7938)
!7938 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!7939 = !DILocalVariable(name: "data", scope: !7930, file: !667, line: 436, type: !7697)
!7940 = !DILocation(line: 0, scope: !7930)
!7941 = !DILocation(line: 438, column: 21, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7930, file: !667, line: 438, column: 6)
!7943 = !DILocation(line: 438, column: 6, scope: !7942)
!7944 = !DILocation(line: 438, column: 6, scope: !7930)
!7945 = !DILocation(line: 442, column: 20, scope: !7930)
!7946 = !DILocation(line: 443, column: 17, scope: !7930)
!7947 = !DILocation(line: 443, column: 22, scope: !7930)
!7948 = !DILocation(line: 445, column: 2, scope: !7930)
!7949 = !DILocation(line: 446, column: 1, scope: !7930)
!7950 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !667, file: !667, line: 448, type: !7732, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !563, retainedNodes: !7951)
!7951 = !{!7952, !7953, !7954}
!7952 = !DILocalVariable(name: "line", arg: 1, scope: !7950, file: !667, line: 448, type: !107)
!7953 = !DILocalVariable(name: "dev", scope: !7950, file: !667, line: 450, type: !7938)
!7954 = !DILocalVariable(name: "data", scope: !7950, file: !667, line: 451, type: !7697)
!7955 = !DILocation(line: 0, scope: !7950)
!7956 = !DILocation(line: 453, column: 17, scope: !7950)
!7957 = !DILocation(line: 453, column: 20, scope: !7950)
!7958 = !DILocation(line: 454, column: 17, scope: !7950)
!7959 = !DILocation(line: 454, column: 22, scope: !7950)
!7960 = !DILocation(line: 455, column: 1, scope: !7950)
!7961 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !850, file: !850, line: 183, type: !888, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !7962)
!7962 = !{!7963, !7964, !7965, !7966, !7967}
!7963 = !DILocalVariable(name: "dev", arg: 1, scope: !7961, file: !850, line: 183, type: !879)
!7964 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7961, file: !850, line: 184, type: !890)
!7965 = !DILocalVariable(name: "pclken", scope: !7961, file: !850, line: 186, type: !840)
!7966 = !DILocalVariable(name: "reg", scope: !7961, file: !850, line: 187, type: !1493)
!7967 = !DILocalVariable(name: "reg_val", scope: !7961, file: !850, line: 188, type: !162)
!7968 = !DILocation(line: 0, scope: !7961)
!7969 = !DILocation(line: 192, column: 6, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7961, file: !850, line: 192, column: 6)
!7971 = !DILocation(line: 192, column: 6, scope: !7961)
!7972 = !DILocation(line: 197, column: 52, scope: !7961)
!7973 = !DILocation(line: 197, column: 8, scope: !7961)
!7974 = !DILocation(line: 198, column: 12, scope: !7961)
!7975 = !DILocation(line: 199, column: 21, scope: !7961)
!7976 = !DILocation(line: 199, column: 10, scope: !7961)
!7977 = !DILocation(line: 200, column: 7, scope: !7961)
!7978 = !DILocation(line: 202, column: 2, scope: !7961)
!7979 = !DILocation(line: 203, column: 1, scope: !7961)
!7980 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !850, file: !850, line: 205, type: !888, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !7981)
!7981 = !{!7982, !7983, !7984, !7985, !7986}
!7982 = !DILocalVariable(name: "dev", arg: 1, scope: !7980, file: !850, line: 205, type: !879)
!7983 = !DILocalVariable(name: "sub_system", arg: 2, scope: !7980, file: !850, line: 206, type: !890)
!7984 = !DILocalVariable(name: "pclken", scope: !7980, file: !850, line: 208, type: !840)
!7985 = !DILocalVariable(name: "reg", scope: !7980, file: !850, line: 209, type: !1493)
!7986 = !DILocalVariable(name: "reg_val", scope: !7980, file: !850, line: 210, type: !162)
!7987 = !DILocation(line: 0, scope: !7980)
!7988 = !DILocation(line: 214, column: 6, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7980, file: !850, line: 214, column: 6)
!7990 = !DILocation(line: 214, column: 6, scope: !7980)
!7991 = !DILocation(line: 219, column: 52, scope: !7980)
!7992 = !DILocation(line: 219, column: 8, scope: !7980)
!7993 = !DILocation(line: 220, column: 12, scope: !7980)
!7994 = !DILocation(line: 221, column: 22, scope: !7980)
!7995 = !DILocation(line: 221, column: 13, scope: !7980)
!7996 = !DILocation(line: 221, column: 10, scope: !7980)
!7997 = !DILocation(line: 222, column: 7, scope: !7980)
!7998 = !DILocation(line: 224, column: 2, scope: !7980)
!7999 = !DILocation(line: 225, column: 1, scope: !7980)
!8000 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !850, file: !850, line: 262, type: !904, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8001)
!8001 = !{!8002, !8003, !8004, !8005, !8006, !8007, !8008, !8009}
!8002 = !DILocalVariable(name: "clock", arg: 1, scope: !8000, file: !850, line: 262, type: !879)
!8003 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8000, file: !850, line: 263, type: !890)
!8004 = !DILocalVariable(name: "rate", arg: 3, scope: !8000, file: !850, line: 264, type: !846)
!8005 = !DILocalVariable(name: "pclken", scope: !8000, file: !850, line: 266, type: !840)
!8006 = !DILocalVariable(name: "ahb_clock", scope: !8000, file: !850, line: 273, type: !162)
!8007 = !DILocalVariable(name: "apb1_clock", scope: !8000, file: !850, line: 274, type: !162)
!8008 = !DILocalVariable(name: "apb2_clock", scope: !8000, file: !850, line: 276, type: !162)
!8009 = !DILocalVariable(name: "ahb3_clock", scope: !8000, file: !850, line: 286, type: !162)
!8010 = !DILocation(line: 0, scope: !8000)
!8011 = !DILocation(line: 273, column: 23, scope: !8000)
!8012 = !DILocation(line: 274, column: 24, scope: !8000)
!8013 = !DILocation(line: 299, column: 18, scope: !8000)
!8014 = !DILocation(line: 299, column: 2, scope: !8000)
!8015 = !DILocation(line: 319, column: 3, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8000, file: !850, line: 299, column: 23)
!8017 = !DILocation(line: 323, column: 3, scope: !8016)
!8018 = !DILocation(line: 346, column: 33, scope: !8016)
!8019 = !DILocation(line: 346, column: 11, scope: !8016)
!8020 = !DILocation(line: 350, column: 3, scope: !8016)
!8021 = !DILocation(line: 354, column: 33, scope: !8016)
!8022 = !DILocation(line: 354, column: 11, scope: !8016)
!8023 = !DILocation(line: 358, column: 3, scope: !8016)
!8024 = !DILocation(line: 374, column: 3, scope: !8016)
!8025 = !DILocation(line: 379, column: 3, scope: !8016)
!8026 = !DILocation(line: 0, scope: !8016)
!8027 = !DILocation(line: 396, column: 1, scope: !8000)
!8028 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !850, file: !850, line: 227, type: !920, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8029)
!8029 = !{!8030, !8031, !8032, !8033, !8034, !8035, !8036, !8037}
!8030 = !DILocalVariable(name: "dev", arg: 1, scope: !8028, file: !850, line: 227, type: !879)
!8031 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8028, file: !850, line: 228, type: !890)
!8032 = !DILocalVariable(name: "data", arg: 3, scope: !8028, file: !850, line: 229, type: !102)
!8033 = !DILocalVariable(name: "pclken", scope: !8028, file: !850, line: 233, type: !840)
!8034 = !DILocalVariable(name: "reg", scope: !8028, file: !850, line: 234, type: !1493)
!8035 = !DILocalVariable(name: "reg_val", scope: !8028, file: !850, line: 235, type: !162)
!8036 = !DILocalVariable(name: "dt_val", scope: !8028, file: !850, line: 235, type: !162)
!8037 = !DILocalVariable(name: "err", scope: !8028, file: !850, line: 236, type: !107)
!8038 = !DILocation(line: 0, scope: !8028)
!8039 = !DILocation(line: 241, column: 30, scope: !8028)
!8040 = !DILocation(line: 241, column: 8, scope: !8028)
!8041 = !DILocation(line: 242, column: 10, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8028, file: !850, line: 242, column: 6)
!8043 = !DILocation(line: 242, column: 6, scope: !8028)
!8044 = !DILocation(line: 247, column: 11, scope: !8028)
!8045 = !DILocation(line: 248, column: 6, scope: !8028)
!8046 = !DILocation(line: 247, column: 44, scope: !8028)
!8047 = !DILocation(line: 250, column: 6, scope: !8028)
!8048 = !DILocation(line: 249, column: 52, scope: !8028)
!8049 = !DILocation(line: 249, column: 8, scope: !8028)
!8050 = !DILocation(line: 251, column: 12, scope: !8028)
!8051 = !DILocation(line: 252, column: 10, scope: !8028)
!8052 = !DILocation(line: 253, column: 7, scope: !8028)
!8053 = !DILocation(line: 255, column: 2, scope: !8028)
!8054 = !DILocation(line: 260, column: 1, scope: !8028)
!8055 = distinct !DISubprogram(name: "enabled_clock", scope: !850, file: !850, line: 100, type: !8056, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8058)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{!107, !162}
!8058 = !{!8059, !8060}
!8059 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8055, file: !850, line: 100, type: !162)
!8060 = !DILocalVariable(name: "r", scope: !8055, file: !850, line: 102, type: !107)
!8061 = !DILocation(line: 0, scope: !8055)
!8062 = !DILocation(line: 104, column: 2, scope: !8055)
!8063 = !DILocation(line: 180, column: 2, scope: !8055)
!8064 = !DILocation(line: 181, column: 1, scope: !8055)
!8065 = distinct !DISubprogram(name: "get_bus_clock", scope: !850, file: !850, line: 79, type: !8066, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8068)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{!162, !162, !162}
!8068 = !{!8069, !8070}
!8069 = !DILocalVariable(name: "clock", arg: 1, scope: !8065, file: !850, line: 79, type: !162)
!8070 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8065, file: !850, line: 79, type: !162)
!8071 = !DILocation(line: 0, scope: !8065)
!8072 = !DILocation(line: 81, column: 15, scope: !8065)
!8073 = !DILocation(line: 81, column: 2, scope: !8065)
!8074 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !850, file: !850, line: 68, type: !8075, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8077)
!8075 = !DISubroutineType(types: !8076)
!8076 = !{!162, !162, !107, !107, !107}
!8077 = !{!8078, !8079, !8080, !8081}
!8078 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8074, file: !850, line: 68, type: !162)
!8079 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8074, file: !850, line: 69, type: !107)
!8080 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8074, file: !850, line: 70, type: !107)
!8081 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8074, file: !850, line: 71, type: !107)
!8082 = !DILocation(line: 0, scope: !8074)
!8083 = !DILocation(line: 75, column: 22, scope: !8074)
!8084 = !DILocation(line: 76, column: 13, scope: !8074)
!8085 = !DILocation(line: 75, column: 34, scope: !8074)
!8086 = !DILocation(line: 75, column: 2, scope: !8074)
!8087 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !850, file: !850, line: 641, type: !877, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8088)
!8088 = !{!8089, !8090, !8091}
!8089 = !DILocalVariable(name: "dev", arg: 1, scope: !8087, file: !850, line: 641, type: !879)
!8090 = !DILocalVariable(name: "old_flash_freq", scope: !8087, file: !850, line: 664, type: !162)
!8091 = !DILocalVariable(name: "new_flash_freq", scope: !8087, file: !850, line: 665, type: !162)
!8092 = !DILocation(line: 0, scope: !8087)
!8093 = !DILocation(line: 646, column: 2, scope: !8087)
!8094 = !DILocation(line: 667, column: 19, scope: !8087)
!8095 = !DILocation(line: 674, column: 21, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8087, file: !850, line: 674, column: 6)
!8097 = !DILocation(line: 674, column: 6, scope: !8087)
!8098 = !DILocation(line: 675, column: 3, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8096, file: !850, line: 674, column: 59)
!8100 = !DILocation(line: 676, column: 2, scope: !8099)
!8101 = !DILocation(line: 680, column: 2, scope: !8087)
!8102 = !DILocation(line: 683, column: 2, scope: !8087)
!8103 = !DILocation(line: 690, column: 3, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8105, file: !850, line: 689, column: 9)
!8105 = distinct !DILexicalBlock(scope: !8087, file: !850, line: 685, column: 6)
!8106 = !DILocation(line: 695, column: 2, scope: !8087)
!8107 = !DILocation(line: 696, column: 2, scope: !8087)
!8108 = !DILocation(line: 696, column: 9, scope: !8087)
!8109 = !DILocation(line: 696, column: 34, scope: !8087)
!8110 = distinct !{!8110, !8107, !8111}
!8111 = !DILocation(line: 697, column: 2, scope: !8087)
!8112 = !DILocation(line: 720, column: 21, scope: !8113)
!8113 = distinct !DILexicalBlock(scope: !8087, file: !850, line: 720, column: 6)
!8114 = !DILocation(line: 720, column: 6, scope: !8087)
!8115 = !DILocation(line: 721, column: 3, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8113, file: !850, line: 720, column: 60)
!8117 = !DILocation(line: 722, column: 2, scope: !8116)
!8118 = !DILocation(line: 725, column: 18, scope: !8087)
!8119 = !DILocation(line: 728, column: 2, scope: !8087)
!8120 = !DILocation(line: 730, column: 2, scope: !8087)
!8121 = !DILocation(line: 745, column: 2, scope: !8087)
!8122 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8123, file: !8123, line: 3275, type: !6169, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8124 = !DILocation(line: 3277, column: 21, scope: !8122)
!8125 = !DILocation(line: 3277, column: 3, scope: !8122)
!8126 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !850, file: !850, line: 507, type: !3130, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8127 = !DILocation(line: 516, column: 4, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8129, file: !850, line: 515, column: 10)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !850, line: 513, column: 7)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !850, line: 510, column: 37)
!8131 = distinct !DILexicalBlock(scope: !8126, file: !850, line: 510, column: 6)
!8132 = !DILocation(line: 526, column: 3, scope: !8130)
!8133 = !DILocation(line: 527, column: 3, scope: !8130)
!8134 = !DILocation(line: 527, column: 10, scope: !8130)
!8135 = !DILocation(line: 527, column: 31, scope: !8130)
!8136 = distinct !{!8136, !8133, !8137}
!8137 = !DILocation(line: 529, column: 3, scope: !8130)
!8138 = !DILocation(line: 583, column: 3, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8140, file: !850, line: 577, column: 37)
!8140 = distinct !DILexicalBlock(scope: !8126, file: !850, line: 577, column: 6)
!8141 = !DILocation(line: 584, column: 3, scope: !8139)
!8142 = !DILocation(line: 584, column: 10, scope: !8139)
!8143 = !DILocation(line: 584, column: 31, scope: !8139)
!8144 = distinct !{!8144, !8141, !8145}
!8145 = !DILocation(line: 585, column: 3, scope: !8139)
!8146 = !DILocation(line: 627, column: 1, scope: !8126)
!8147 = distinct !DISubprogram(name: "set_up_plls", scope: !850, file: !850, line: 448, type: !3130, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8148 = !DILocation(line: 460, column: 6, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8147, file: !850, line: 460, column: 6)
!8150 = !DILocation(line: 460, column: 31, scope: !8149)
!8151 = !DILocation(line: 460, column: 6, scope: !8147)
!8152 = !DILocation(line: 461, column: 3, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8149, file: !850, line: 460, column: 67)
!8154 = !DILocation(line: 462, column: 3, scope: !8153)
!8155 = !DILocation(line: 463, column: 2, scope: !8153)
!8156 = !DILocation(line: 464, column: 2, scope: !8147)
!8157 = !DILocation(line: 488, column: 2, scope: !8147)
!8158 = !DILocation(line: 492, column: 2, scope: !8147)
!8159 = !DILocation(line: 496, column: 2, scope: !8147)
!8160 = !DILocation(line: 499, column: 2, scope: !8147)
!8161 = !DILocation(line: 500, column: 2, scope: !8147)
!8162 = !DILocation(line: 500, column: 9, scope: !8147)
!8163 = !DILocation(line: 500, column: 30, scope: !8147)
!8164 = distinct !{!8164, !8161, !8165}
!8165 = !DILocation(line: 502, column: 2, scope: !8147)
!8166 = !DILocation(line: 505, column: 1, scope: !8147)
!8167 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8123, file: !8123, line: 3224, type: !6179, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8168)
!8168 = !{!8169}
!8169 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8167, file: !8123, line: 3224, type: !162)
!8170 = !DILocation(line: 0, scope: !8167)
!8171 = !DILocation(line: 3226, column: 3, scope: !8167)
!8172 = !DILocation(line: 3227, column: 1, scope: !8167)
!8173 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8123, file: !8123, line: 3188, type: !6179, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8174)
!8174 = !{!8175}
!8175 = !DILocalVariable(name: "Source", arg: 1, scope: !8173, file: !8123, line: 3188, type: !162)
!8176 = !DILocation(line: 0, scope: !8173)
!8177 = !DILocation(line: 3190, column: 3, scope: !8173)
!8178 = !DILocation(line: 3191, column: 1, scope: !8173)
!8179 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8123, file: !8123, line: 3204, type: !6169, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8180 = !DILocation(line: 3206, column: 21, scope: !8179)
!8181 = !DILocation(line: 3206, column: 3, scope: !8179)
!8182 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8123, file: !8123, line: 3240, type: !6179, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8183)
!8183 = !{!8184}
!8184 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8182, file: !8123, line: 3240, type: !162)
!8185 = !DILocation(line: 0, scope: !8182)
!8186 = !DILocation(line: 3242, column: 3, scope: !8182)
!8187 = !DILocation(line: 3243, column: 1, scope: !8182)
!8188 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8123, file: !8123, line: 3256, type: !6179, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !8189)
!8189 = !{!8190}
!8190 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8188, file: !8123, line: 3256, type: !162)
!8191 = !DILocation(line: 0, scope: !8188)
!8192 = !DILocation(line: 3258, column: 3, scope: !8188)
!8193 = !DILocation(line: 3259, column: 1, scope: !8188)
!8194 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !850, file: !850, line: 409, type: !3130, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8195 = !DILocation(line: 412, column: 6, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8194, file: !850, line: 412, column: 6)
!8197 = !DILocation(line: 412, column: 27, scope: !8196)
!8198 = !DILocation(line: 412, column: 6, scope: !8194)
!8199 = !DILocation(line: 414, column: 3, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8196, file: !850, line: 412, column: 33)
!8201 = !DILocation(line: 415, column: 3, scope: !8200)
!8202 = !DILocation(line: 415, column: 10, scope: !8200)
!8203 = !DILocation(line: 415, column: 31, scope: !8200)
!8204 = distinct !{!8204, !8201, !8205}
!8205 = !DILocation(line: 417, column: 3, scope: !8200)
!8206 = !DILocation(line: 421, column: 2, scope: !8194)
!8207 = !DILocation(line: 422, column: 2, scope: !8194)
!8208 = !DILocation(line: 422, column: 9, scope: !8194)
!8209 = !DILocation(line: 422, column: 34, scope: !8194)
!8210 = distinct !{!8210, !8207, !8211}
!8211 = !DILocation(line: 423, column: 2, scope: !8194)
!8212 = !DILocation(line: 424, column: 1, scope: !8194)
!8213 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8123, file: !8123, line: 4195, type: !3130, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8214 = !DILocation(line: 4197, column: 3, scope: !8213)
!8215 = !DILocation(line: 4198, column: 1, scope: !8213)
!8216 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8123, file: !8123, line: 4184, type: !3130, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8217 = !DILocation(line: 4186, column: 3, scope: !8216)
!8218 = !DILocation(line: 4187, column: 1, scope: !8216)
!8219 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8123, file: !8123, line: 4205, type: !6169, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8220 = !DILocation(line: 4207, column: 11, scope: !8219)
!8221 = !DILocation(line: 4207, column: 44, scope: !8219)
!8222 = !DILocation(line: 4207, column: 3, scope: !8219)
!8223 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8123, file: !8123, line: 3007, type: !6169, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8224 = !DILocation(line: 3009, column: 11, scope: !8223)
!8225 = !DILocation(line: 3009, column: 44, scope: !8223)
!8226 = !DILocation(line: 3009, column: 3, scope: !8223)
!8227 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8123, file: !8123, line: 2987, type: !3130, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8228 = !DILocation(line: 2989, column: 3, scope: !8227)
!8229 = !DILocation(line: 2990, column: 1, scope: !8227)
!8230 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8123, file: !8123, line: 2939, type: !3130, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8231 = !DILocation(line: 2941, column: 3, scope: !8230)
!8232 = !DILocation(line: 2942, column: 1, scope: !8230)
!8233 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8123, file: !8123, line: 2949, type: !3130, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8234 = !DILocation(line: 2951, column: 3, scope: !8233)
!8235 = !DILocation(line: 2952, column: 1, scope: !8233)
!8236 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8123, file: !8123, line: 2969, type: !6169, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8237 = !DILocation(line: 2971, column: 11, scope: !8236)
!8238 = !DILocation(line: 2971, column: 44, scope: !8236)
!8239 = !DILocation(line: 2971, column: 3, scope: !8236)
!8240 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8123, file: !8123, line: 3143, type: !3130, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8241 = !DILocation(line: 3145, column: 3, scope: !8240)
!8242 = !DILocation(line: 3146, column: 1, scope: !8240)
!8243 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8123, file: !8123, line: 3163, type: !6169, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !788, retainedNodes: !250)
!8244 = !DILocation(line: 3165, column: 11, scope: !8243)
!8245 = !DILocation(line: 3165, column: 46, scope: !8243)
!8246 = !DILocation(line: 3165, column: 3, scope: !8243)
!8247 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8248, file: !8248, line: 40, type: !6169, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !250)
!8248 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8249 = !DILocation(line: 45, column: 3, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8251, file: !8248, line: 44, column: 44)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !8248, line: 44, column: 13)
!8252 = distinct !DILexicalBlock(scope: !8247, file: !8248, line: 42, column: 6)
!8253 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8248, file: !8248, line: 56, type: !3130, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !250)
!8254 = !DILocation(line: 58, column: 2, scope: !8253)
!8255 = !DILocation(line: 62, column: 1, scope: !8253)
!8256 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8123, file: !8123, line: 4304, type: !8257, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8259)
!8257 = !DISubroutineType(types: !8258)
!8258 = !{null, !162, !162, !162, !162}
!8259 = !{!8260, !8261, !8262, !8263}
!8260 = !DILocalVariable(name: "Source", arg: 1, scope: !8256, file: !8123, line: 4304, type: !162)
!8261 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8256, file: !8123, line: 4304, type: !162)
!8262 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8256, file: !8123, line: 4304, type: !162)
!8263 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8256, file: !8123, line: 4304, type: !162)
!8264 = !DILocation(line: 0, scope: !8256)
!8265 = !DILocation(line: 4306, column: 3, scope: !8256)
!8266 = !DILocation(line: 4308, column: 3, scope: !8256)
!8267 = !DILocation(line: 4312, column: 1, scope: !8256)
!8268 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8248, file: !8248, line: 69, type: !3130, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !250)
!8269 = !DILocation(line: 72, column: 2, scope: !8268)
!8270 = !DILocation(line: 73, column: 1, scope: !8268)
!8271 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8272, file: !8272, line: 1185, type: !6179, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2797, retainedNodes: !8273)
!8272 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8273 = !{!8274, !8275}
!8274 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8271, file: !8272, line: 1185, type: !162)
!8275 = !DILocalVariable(name: "tmpreg", scope: !8271, file: !8272, line: 1187, type: !283)
!8276 = !DILocation(line: 0, scope: !8271)
!8277 = !DILocation(line: 1187, column: 3, scope: !8271)
!8278 = !DILocation(line: 1187, column: 17, scope: !8271)
!8279 = !DILocation(line: 1188, column: 3, scope: !8271)
!8280 = !DILocation(line: 1190, column: 12, scope: !8271)
!8281 = !DILocation(line: 1190, column: 10, scope: !8271)
!8282 = !DILocation(line: 1191, column: 9, scope: !8271)
!8283 = !DILocation(line: 1192, column: 1, scope: !8271)
!8284 = distinct !DISubprogram(name: "uart_console_init", scope: !1009, file: !1009, line: 588, type: !956, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8285)
!8285 = !{!8286}
!8286 = !DILocalVariable(name: "arg", arg: 1, scope: !8284, file: !1009, line: 588, type: !935)
!8287 = !DILocation(line: 0, scope: !8284)
!8288 = !DILocation(line: 593, column: 7, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8284, file: !1009, line: 593, column: 6)
!8290 = !DILocation(line: 593, column: 6, scope: !8284)
!8291 = !DILocation(line: 597, column: 2, scope: !8284)
!8292 = !DILocation(line: 599, column: 2, scope: !8284)
!8293 = !DILocation(line: 600, column: 1, scope: !8284)
!8294 = distinct !DISubprogram(name: "device_is_ready", scope: !3413, file: !3413, line: 47, type: !8295, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8297)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{!136, !935}
!8297 = !{!8298}
!8298 = !DILocalVariable(name: "dev", arg: 1, scope: !8294, file: !3413, line: 47, type: !935)
!8299 = !DILocation(line: 0, scope: !8294)
!8300 = !DILocation(line: 55, column: 2, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8294, file: !3413, line: 55, column: 2)
!8302 = !{i64 2154951513}
!8303 = !DILocation(line: 56, column: 9, scope: !8294)
!8304 = !DILocation(line: 56, column: 2, scope: !8294)
!8305 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1009, file: !1009, line: 573, type: !3130, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !250)
!8306 = !DILocation(line: 576, column: 2, scope: !8305)
!8307 = !DILocation(line: 579, column: 2, scope: !8305)
!8308 = !DILocation(line: 581, column: 1, scope: !8305)
!8309 = distinct !DISubprogram(name: "console_out", scope: !1009, file: !1009, line: 77, type: !270, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8310)
!8310 = !{!8311}
!8311 = !DILocalVariable(name: "c", arg: 1, scope: !8309, file: !1009, line: 77, type: !107)
!8312 = !DILocation(line: 0, scope: !8309)
!8313 = !DILocation(line: 89, column: 11, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8309, file: !1009, line: 89, column: 6)
!8315 = !DILocation(line: 89, column: 6, scope: !8309)
!8316 = !DILocation(line: 90, column: 3, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8314, file: !1009, line: 89, column: 17)
!8318 = !DILocation(line: 91, column: 2, scope: !8317)
!8319 = !DILocation(line: 92, column: 34, scope: !8309)
!8320 = !DILocation(line: 92, column: 2, scope: !8309)
!8321 = !DILocation(line: 94, column: 2, scope: !8309)
!8322 = distinct !DISubprogram(name: "uart_poll_out", scope: !3277, file: !3277, line: 95, type: !952, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8323)
!8323 = !{!8324, !8325}
!8324 = !DILocalVariable(name: "dev", arg: 1, scope: !8322, file: !3277, line: 95, type: !935)
!8325 = !DILocalVariable(name: "out_char", arg: 2, scope: !8322, file: !3277, line: 95, type: !134)
!8326 = !DILocation(line: 0, scope: !8322)
!8327 = !DILocation(line: 105, column: 2, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8322, file: !3277, line: 105, column: 2)
!8329 = !{i64 2155034758}
!8330 = !DILocation(line: 106, column: 2, scope: !8322)
!8331 = !DILocation(line: 107, column: 1, scope: !8322)
!8332 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !111, file: !111, line: 574, type: !952, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8333)
!8333 = !{!8334, !8335, !8336}
!8334 = !DILocalVariable(name: "dev", arg: 1, scope: !8332, file: !111, line: 574, type: !935)
!8335 = !DILocalVariable(name: "out_char", arg: 2, scope: !8332, file: !111, line: 575, type: !134)
!8336 = !DILocalVariable(name: "api", scope: !8332, file: !111, line: 577, type: !927)
!8337 = !DILocation(line: 0, scope: !8332)
!8338 = !DILocation(line: 578, column: 40, scope: !8332)
!8339 = !DILocation(line: 580, column: 7, scope: !8332)
!8340 = !DILocation(line: 580, column: 2, scope: !8332)
!8341 = !DILocation(line: 581, column: 1, scope: !8332)
!8342 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !8295, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8343)
!8343 = !{!8344}
!8344 = !DILocalVariable(name: "dev", arg: 1, scope: !8342, file: !120, line: 730, type: !935)
!8345 = !DILocation(line: 0, scope: !8342)
!8346 = !DILocation(line: 732, column: 9, scope: !8342)
!8347 = !DILocation(line: 732, column: 2, scope: !8342)
!8348 = distinct !DISubprogram(name: "uart_register_input", scope: !1009, file: !1009, line: 560, type: !8349, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !924, retainedNodes: !8394)
!8349 = !DISubroutineType(types: !8350)
!8350 = !{null, !8351, !8351, !8391}
!8351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8352, size: 32)
!8352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !224, line: 2208, size: 128, elements: !8353)
!8353 = !{!8354}
!8354 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8352, file: !224, line: 2209, baseType: !8355, size: 128)
!8355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !224, line: 1709, size: 128, elements: !8356)
!8356 = !{!8357, !8370, !8372}
!8357 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8355, file: !224, line: 1710, baseType: !8358, size: 64)
!8358 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8359, line: 46, baseType: !8360)
!8359 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8359, line: 41, size: 64, elements: !8361)
!8361 = !{!8362, !8369}
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8360, file: !8359, line: 42, baseType: !8363, size: 32)
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8364, size: 32)
!8364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8359, line: 39, baseType: !8365)
!8365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8359, line: 35, size: 32, elements: !8366)
!8366 = !{!8367}
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !8365, file: !8359, line: 36, baseType: !8368, size: 32)
!8368 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8359, line: 32, baseType: !162)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8360, file: !8359, line: 43, baseType: !8363, size: 32, offset: 32)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8355, file: !224, line: 1711, baseType: !8371, offset: 64)
!8371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8355, file: !224, line: 1712, baseType: !8373, size: 64, offset: 64)
!8373 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !8374)
!8374 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !8375)
!8375 = !{!8376}
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8374, file: !228, line: 232, baseType: !8377, size: 64)
!8377 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !8378)
!8378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !8379)
!8379 = !{!8380, !8386}
!8380 = !DIDerivedType(tag: DW_TAG_member, scope: !8378, file: !233, line: 38, baseType: !8381, size: 32)
!8381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8378, file: !233, line: 38, size: 32, elements: !8382)
!8382 = !{!8383, !8385}
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8381, file: !233, line: 39, baseType: !8384, size: 32)
!8384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8378, size: 32)
!8385 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8381, file: !233, line: 40, baseType: !8384, size: 32)
!8386 = !DIDerivedType(tag: DW_TAG_member, scope: !8378, file: !233, line: 42, baseType: !8387, size: 32, offset: 32)
!8387 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8378, file: !233, line: 42, size: 32, elements: !8388)
!8388 = !{!8389, !8390}
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8387, file: !233, line: 43, baseType: !8384, size: 32)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8387, file: !233, line: 44, baseType: !8384, size: 32)
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 32)
!8392 = !DISubroutineType(types: !8393)
!8393 = !{!133, !256, !133}
!8394 = !{!8395, !8396, !8397}
!8395 = !DILocalVariable(name: "avail", arg: 1, scope: !8348, file: !1009, line: 560, type: !8351)
!8396 = !DILocalVariable(name: "lines", arg: 2, scope: !8348, file: !1009, line: 560, type: !8351)
!8397 = !DILocalVariable(name: "completion", arg: 3, scope: !8348, file: !1009, line: 561, type: !8391)
!8398 = !DILocation(line: 0, scope: !8348)
!8399 = !DILocation(line: 566, column: 1, scope: !8348)
!8400 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1189, file: !1189, line: 523, type: !1045, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8401)
!8401 = !{!8402, !8403, !8404, !8405, !8406}
!8402 = !DILocalVariable(name: "dev", arg: 1, scope: !8400, file: !1189, line: 523, type: !1047)
!8403 = !DILocalVariable(name: "pin", arg: 2, scope: !8400, file: !1189, line: 524, type: !1062)
!8404 = !DILocalVariable(name: "flags", arg: 3, scope: !8400, file: !1189, line: 524, type: !1063)
!8405 = !DILocalVariable(name: "err", scope: !8400, file: !1189, line: 526, type: !107)
!8406 = !DILocalVariable(name: "pincfg", scope: !8400, file: !1189, line: 527, type: !107)
!8407 = !DILocation(line: 0, scope: !8400)
!8408 = !DILocation(line: 527, column: 2, scope: !8400)
!8409 = !DILocation(line: 532, column: 8, scope: !8400)
!8410 = !DILocation(line: 533, column: 10, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8400, file: !1189, line: 533, column: 6)
!8412 = !DILocation(line: 533, column: 6, scope: !8400)
!8413 = !DILocation(line: 543, column: 13, scope: !8414)
!8414 = distinct !DILexicalBlock(scope: !8400, file: !1189, line: 543, column: 6)
!8415 = !DILocation(line: 543, column: 28, scope: !8414)
!8416 = !DILocation(line: 543, column: 6, scope: !8400)
!8417 = !DILocation(line: 544, column: 14, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !1189, line: 544, column: 7)
!8419 = distinct !DILexicalBlock(scope: !8414, file: !1189, line: 543, column: 34)
!8420 = !DILocation(line: 544, column: 39, scope: !8418)
!8421 = !DILocation(line: 544, column: 7, scope: !8419)
!8422 = !DILocation(line: 545, column: 38, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8418, file: !1189, line: 544, column: 45)
!8424 = !DILocation(line: 545, column: 4, scope: !8423)
!8425 = !DILocation(line: 546, column: 3, scope: !8423)
!8426 = !DILocation(line: 546, column: 21, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8418, file: !1189, line: 546, column: 14)
!8428 = !DILocation(line: 546, column: 45, scope: !8427)
!8429 = !DILocation(line: 546, column: 14, scope: !8418)
!8430 = !DILocation(line: 547, column: 40, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8427, file: !1189, line: 546, column: 51)
!8432 = !DILocation(line: 547, column: 4, scope: !8431)
!8433 = !DILocation(line: 548, column: 3, scope: !8431)
!8434 = !DILocation(line: 551, column: 32, scope: !8400)
!8435 = !DILocation(line: 551, column: 37, scope: !8400)
!8436 = !DILocation(line: 551, column: 2, scope: !8400)
!8437 = !DILocation(line: 554, column: 6, scope: !8400)
!8438 = !DILocation(line: 562, column: 1, scope: !8400)
!8439 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1189, file: !1189, line: 410, type: !8440, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8442)
!8440 = !DISubroutineType(types: !8441)
!8441 = !{!107, !1047, !846}
!8442 = !{!8443, !8444, !8445, !8447}
!8443 = !DILocalVariable(name: "dev", arg: 1, scope: !8439, file: !1189, line: 410, type: !1047)
!8444 = !DILocalVariable(name: "value", arg: 2, scope: !8439, file: !1189, line: 410, type: !846)
!8445 = !DILocalVariable(name: "cfg", scope: !8439, file: !1189, line: 412, type: !8446)
!8446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1301, size: 32)
!8447 = !DILocalVariable(name: "gpio", scope: !8439, file: !1189, line: 413, type: !1120)
!8448 = !DILocation(line: 0, scope: !8439)
!8449 = !DILocation(line: 412, column: 45, scope: !8439)
!8450 = !DILocation(line: 413, column: 44, scope: !8439)
!8451 = !DILocation(line: 415, column: 11, scope: !8439)
!8452 = !DILocation(line: 415, column: 9, scope: !8439)
!8453 = !DILocation(line: 417, column: 2, scope: !8439)
!8454 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1189, file: !1189, line: 420, type: !1072, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8455)
!8455 = !{!8456, !8457, !8458, !8459, !8460, !8461}
!8456 = !DILocalVariable(name: "dev", arg: 1, scope: !8454, file: !1189, line: 420, type: !1047)
!8457 = !DILocalVariable(name: "mask", arg: 2, scope: !8454, file: !1189, line: 421, type: !1074)
!8458 = !DILocalVariable(name: "value", arg: 3, scope: !8454, file: !1189, line: 422, type: !1069)
!8459 = !DILocalVariable(name: "cfg", scope: !8454, file: !1189, line: 424, type: !8446)
!8460 = !DILocalVariable(name: "gpio", scope: !8454, file: !1189, line: 425, type: !1120)
!8461 = !DILocalVariable(name: "port_value", scope: !8454, file: !1189, line: 426, type: !162)
!8462 = !DILocation(line: 0, scope: !8454)
!8463 = !DILocation(line: 424, column: 45, scope: !8454)
!8464 = !DILocation(line: 425, column: 44, scope: !8454)
!8465 = !DILocation(line: 430, column: 15, scope: !8454)
!8466 = !DILocation(line: 431, column: 46, scope: !8454)
!8467 = !DILocation(line: 431, column: 44, scope: !8454)
!8468 = !DILocation(line: 431, column: 61, scope: !8454)
!8469 = !DILocation(line: 431, column: 53, scope: !8454)
!8470 = !DILocation(line: 431, column: 2, scope: !8454)
!8471 = !DILocation(line: 435, column: 2, scope: !8454)
!8472 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1189, file: !1189, line: 438, type: !1077, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8473)
!8473 = !{!8474, !8475, !8476, !8477}
!8474 = !DILocalVariable(name: "dev", arg: 1, scope: !8472, file: !1189, line: 438, type: !1047)
!8475 = !DILocalVariable(name: "pins", arg: 2, scope: !8472, file: !1189, line: 439, type: !1074)
!8476 = !DILocalVariable(name: "cfg", scope: !8472, file: !1189, line: 441, type: !8446)
!8477 = !DILocalVariable(name: "gpio", scope: !8472, file: !1189, line: 442, type: !1120)
!8478 = !DILocation(line: 0, scope: !8472)
!8479 = !DILocation(line: 441, column: 45, scope: !8472)
!8480 = !DILocation(line: 442, column: 44, scope: !8472)
!8481 = !DILocation(line: 448, column: 2, scope: !8472)
!8482 = !DILocation(line: 450, column: 2, scope: !8472)
!8483 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1189, file: !1189, line: 453, type: !1077, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8484)
!8484 = !{!8485, !8486, !8487, !8488}
!8485 = !DILocalVariable(name: "dev", arg: 1, scope: !8483, file: !1189, line: 453, type: !1047)
!8486 = !DILocalVariable(name: "pins", arg: 2, scope: !8483, file: !1189, line: 454, type: !1074)
!8487 = !DILocalVariable(name: "cfg", scope: !8483, file: !1189, line: 456, type: !8446)
!8488 = !DILocalVariable(name: "gpio", scope: !8483, file: !1189, line: 457, type: !1120)
!8489 = !DILocation(line: 0, scope: !8483)
!8490 = !DILocation(line: 456, column: 45, scope: !8483)
!8491 = !DILocation(line: 457, column: 44, scope: !8483)
!8492 = !DILocation(line: 467, column: 2, scope: !8483)
!8493 = !DILocation(line: 470, column: 2, scope: !8483)
!8494 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1189, file: !1189, line: 473, type: !1077, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8495)
!8495 = !{!8496, !8497, !8498, !8499}
!8496 = !DILocalVariable(name: "dev", arg: 1, scope: !8494, file: !1189, line: 473, type: !1047)
!8497 = !DILocalVariable(name: "pins", arg: 2, scope: !8494, file: !1189, line: 474, type: !1074)
!8498 = !DILocalVariable(name: "cfg", scope: !8494, file: !1189, line: 476, type: !8446)
!8499 = !DILocalVariable(name: "gpio", scope: !8494, file: !1189, line: 477, type: !1120)
!8500 = !DILocation(line: 0, scope: !8494)
!8501 = !DILocation(line: 476, column: 45, scope: !8494)
!8502 = !DILocation(line: 477, column: 44, scope: !8494)
!8503 = !DILocation(line: 484, column: 2, scope: !8494)
!8504 = !DILocation(line: 487, column: 2, scope: !8494)
!8505 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1189, file: !1189, line: 594, type: !1083, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8506)
!8506 = !{!8507, !8508, !8509, !8510, !8511, !8512, !8514, !8515, !8516}
!8507 = !DILocalVariable(name: "dev", arg: 1, scope: !8505, file: !1189, line: 594, type: !1047)
!8508 = !DILocalVariable(name: "pin", arg: 2, scope: !8505, file: !1189, line: 595, type: !1062)
!8509 = !DILocalVariable(name: "mode", arg: 3, scope: !8505, file: !1189, line: 596, type: !1021)
!8510 = !DILocalVariable(name: "trig", arg: 4, scope: !8505, file: !1189, line: 597, type: !1027)
!8511 = !DILocalVariable(name: "cfg", scope: !8505, file: !1189, line: 599, type: !8446)
!8512 = !DILocalVariable(name: "data", scope: !8505, file: !1189, line: 600, type: !8513)
!8513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!8514 = !DILocalVariable(name: "edge", scope: !8505, file: !1189, line: 601, type: !107)
!8515 = !DILocalVariable(name: "err", scope: !8505, file: !1189, line: 602, type: !107)
!8516 = !DILabel(scope: !8505, name: "exit", file: !1189, line: 643)
!8517 = !DILocation(line: 0, scope: !8505)
!8518 = !DILocation(line: 599, column: 45, scope: !8505)
!8519 = !DILocation(line: 604, column: 6, scope: !8505)
!8520 = !DILocation(line: 605, column: 34, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !1189, line: 605, column: 7)
!8522 = distinct !DILexicalBlock(scope: !8523, file: !1189, line: 604, column: 38)
!8523 = distinct !DILexicalBlock(scope: !8505, file: !1189, line: 604, column: 6)
!8524 = !DILocation(line: 605, column: 7, scope: !8521)
!8525 = !DILocation(line: 605, column: 47, scope: !8521)
!8526 = !DILocation(line: 605, column: 39, scope: !8521)
!8527 = !DILocation(line: 605, column: 7, scope: !8522)
!8528 = !DILocation(line: 606, column: 4, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8521, file: !1189, line: 605, column: 53)
!8530 = !DILocation(line: 607, column: 4, scope: !8529)
!8531 = !DILocation(line: 608, column: 4, scope: !8529)
!8532 = !DILocation(line: 609, column: 3, scope: !8529)
!8533 = !DILocation(line: 600, column: 38, scope: !8505)
!8534 = !DILocation(line: 620, column: 30, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8505, file: !1189, line: 620, column: 6)
!8536 = !DILocation(line: 620, column: 6, scope: !8535)
!8537 = !DILocation(line: 620, column: 57, scope: !8535)
!8538 = !DILocation(line: 620, column: 6, scope: !8505)
!8539 = !DILocation(line: 625, column: 29, scope: !8505)
!8540 = !DILocation(line: 625, column: 2, scope: !8505)
!8541 = !DILocation(line: 627, column: 2, scope: !8505)
!8542 = !DILocation(line: 630, column: 3, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8505, file: !1189, line: 627, column: 16)
!8544 = !DILocation(line: 633, column: 3, scope: !8543)
!8545 = !DILocation(line: 636, column: 3, scope: !8543)
!8546 = !DILocation(line: 639, column: 2, scope: !8505)
!8547 = !DILocation(line: 641, column: 2, scope: !8505)
!8548 = !DILocation(line: 643, column: 1, scope: !8505)
!8549 = !DILocation(line: 644, column: 2, scope: !8505)
!8550 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1189, file: !1189, line: 647, type: !1087, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8551)
!8551 = !{!8552, !8553, !8554, !8555}
!8552 = !DILocalVariable(name: "dev", arg: 1, scope: !8550, file: !1189, line: 647, type: !1047)
!8553 = !DILocalVariable(name: "callback", arg: 2, scope: !8550, file: !1189, line: 648, type: !1089)
!8554 = !DILocalVariable(name: "set", arg: 3, scope: !8550, file: !1189, line: 649, type: !136)
!8555 = !DILocalVariable(name: "data", scope: !8550, file: !1189, line: 651, type: !8513)
!8556 = !DILocation(line: 0, scope: !8550)
!8557 = !DILocation(line: 651, column: 38, scope: !8550)
!8558 = !DILocation(line: 653, column: 37, scope: !8550)
!8559 = !DILocation(line: 653, column: 9, scope: !8550)
!8560 = !DILocation(line: 653, column: 2, scope: !8550)
!8561 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !8562, file: !8562, line: 38, type: !8563, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8566)
!8562 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8563 = !DISubroutineType(types: !8564)
!8564 = !{!107, !8565, !1089, !136}
!8565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!8566 = !{!8567, !8568, !8569}
!8567 = !DILocalVariable(name: "callbacks", arg: 1, scope: !8561, file: !8562, line: 38, type: !8565)
!8568 = !DILocalVariable(name: "callback", arg: 2, scope: !8561, file: !8562, line: 39, type: !1089)
!8569 = !DILocalVariable(name: "set", arg: 3, scope: !8561, file: !8562, line: 40, type: !136)
!8570 = !DILocation(line: 0, scope: !8561)
!8571 = !DILocation(line: 45, column: 7, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8561, file: !8562, line: 45, column: 6)
!8573 = !DILocation(line: 45, column: 6, scope: !8561)
!8574 = !DILocation(line: 46, column: 56, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8576, file: !8562, line: 46, column: 7)
!8576 = distinct !DILexicalBlock(scope: !8572, file: !8562, line: 45, column: 38)
!8577 = !DILocation(line: 46, column: 8, scope: !8575)
!8578 = !DILocation(line: 46, column: 7, scope: !8576)
!8579 = !DILocation(line: 51, column: 13, scope: !8572)
!8580 = !DILocation(line: 56, column: 43, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8582, file: !8562, line: 55, column: 11)
!8582 = distinct !DILexicalBlock(scope: !8561, file: !8562, line: 55, column: 6)
!8583 = !DILocation(line: 56, column: 3, scope: !8581)
!8584 = !DILocation(line: 57, column: 2, scope: !8581)
!8585 = !DILocation(line: 60, column: 1, scope: !8561)
!8586 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1094, file: !1094, line: 261, type: !8587, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8589)
!8587 = !DISubroutineType(types: !8588)
!8588 = !{!136, !8565}
!8589 = !{!8590}
!8590 = !DILocalVariable(name: "list", arg: 1, scope: !8586, file: !1094, line: 261, type: !8565)
!8591 = !DILocation(line: 0, scope: !8586)
!8592 = !DILocation(line: 261, column: 1, scope: !8586)
!8593 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1094, file: !1094, line: 417, type: !8594, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8596)
!8594 = !DISubroutineType(types: !8595)
!8595 = !{!136, !8565, !1265}
!8596 = !{!8597, !8598, !8599, !8600}
!8597 = !DILocalVariable(name: "list", arg: 1, scope: !8593, file: !1094, line: 417, type: !8565)
!8598 = !DILocalVariable(name: "node", arg: 2, scope: !8593, file: !1094, line: 417, type: !1265)
!8599 = !DILocalVariable(name: "prev", scope: !8593, file: !1094, line: 417, type: !1265)
!8600 = !DILocalVariable(name: "test", scope: !8593, file: !1094, line: 417, type: !1265)
!8601 = !DILocation(line: 0, scope: !8593)
!8602 = !DILocation(line: 417, column: 1, scope: !8603)
!8603 = distinct !DILexicalBlock(scope: !8593, file: !1094, line: 417, column: 1)
!8604 = !DILocation(line: 417, column: 1, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8603, file: !1094, line: 417, column: 1)
!8606 = !DILocation(line: 417, column: 1, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8608, file: !1094, line: 417, column: 1)
!8608 = distinct !DILexicalBlock(scope: !8605, file: !1094, line: 417, column: 1)
!8609 = !DILocation(line: 417, column: 1, scope: !8608)
!8610 = distinct !{!8610, !8602, !8602}
!8611 = !DILocation(line: 417, column: 1, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8607, file: !1094, line: 417, column: 1)
!8613 = !DILocation(line: 417, column: 1, scope: !8593)
!8614 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1094, file: !1094, line: 298, type: !8615, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8617)
!8615 = !DISubroutineType(types: !8616)
!8616 = !{null, !8565, !1265}
!8617 = !{!8618, !8619}
!8618 = !DILocalVariable(name: "list", arg: 1, scope: !8614, file: !1094, line: 298, type: !8565)
!8619 = !DILocalVariable(name: "node", arg: 2, scope: !8614, file: !1094, line: 298, type: !1265)
!8620 = !DILocation(line: 0, scope: !8614)
!8621 = !DILocation(line: 298, column: 1, scope: !8614)
!8622 = !DILocation(line: 298, column: 1, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8614, file: !1094, line: 298, column: 1)
!8624 = !DILocation(line: 298, column: 1, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8623, file: !1094, line: 298, column: 1)
!8626 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1094, file: !1094, line: 231, type: !8627, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8629)
!8627 = !DISubroutineType(types: !8628)
!8628 = !{!1265, !8565}
!8629 = !{!8630}
!8630 = !DILocalVariable(name: "list", arg: 1, scope: !8626, file: !1094, line: 231, type: !8565)
!8631 = !DILocation(line: 0, scope: !8626)
!8632 = !DILocation(line: 233, column: 15, scope: !8626)
!8633 = !DILocation(line: 233, column: 2, scope: !8626)
!8634 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1094, file: !1094, line: 209, type: !8635, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8637)
!8635 = !DISubroutineType(types: !8636)
!8636 = !{null, !1265, !1265}
!8637 = !{!8638, !8639}
!8638 = !DILocalVariable(name: "parent", arg: 1, scope: !8634, file: !1094, line: 209, type: !1265)
!8639 = !DILocalVariable(name: "child", arg: 2, scope: !8634, file: !1094, line: 209, type: !1265)
!8640 = !DILocation(line: 0, scope: !8634)
!8641 = !DILocation(line: 211, column: 10, scope: !8634)
!8642 = !DILocation(line: 211, column: 15, scope: !8634)
!8643 = !DILocation(line: 212, column: 1, scope: !8634)
!8644 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1094, file: !1094, line: 214, type: !8615, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8645)
!8645 = !{!8646, !8647}
!8646 = !DILocalVariable(name: "list", arg: 1, scope: !8644, file: !1094, line: 214, type: !8565)
!8647 = !DILocalVariable(name: "node", arg: 2, scope: !8644, file: !1094, line: 214, type: !1265)
!8648 = !DILocation(line: 0, scope: !8644)
!8649 = !DILocation(line: 216, column: 8, scope: !8644)
!8650 = !DILocation(line: 216, column: 13, scope: !8644)
!8651 = !DILocation(line: 217, column: 1, scope: !8644)
!8652 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1094, file: !1094, line: 243, type: !8627, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8653)
!8653 = !{!8654}
!8654 = !DILocalVariable(name: "list", arg: 1, scope: !8652, file: !1094, line: 243, type: !8565)
!8655 = !DILocation(line: 0, scope: !8652)
!8656 = !DILocation(line: 245, column: 15, scope: !8652)
!8657 = !DILocation(line: 245, column: 2, scope: !8652)
!8658 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1094, file: !1094, line: 219, type: !8615, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8659)
!8659 = !{!8660, !8661}
!8660 = !DILocalVariable(name: "list", arg: 1, scope: !8658, file: !1094, line: 219, type: !8565)
!8661 = !DILocalVariable(name: "node", arg: 2, scope: !8658, file: !1094, line: 219, type: !1265)
!8662 = !DILocation(line: 0, scope: !8658)
!8663 = !DILocation(line: 221, column: 8, scope: !8658)
!8664 = !DILocation(line: 221, column: 13, scope: !8658)
!8665 = !DILocation(line: 222, column: 1, scope: !8658)
!8666 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1094, file: !1094, line: 401, type: !8667, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8669)
!8667 = !DISubroutineType(types: !8668)
!8668 = !{null, !8565, !1265, !1265}
!8669 = !{!8670, !8671, !8672}
!8670 = !DILocalVariable(name: "list", arg: 1, scope: !8666, file: !1094, line: 401, type: !8565)
!8671 = !DILocalVariable(name: "prev_node", arg: 2, scope: !8666, file: !1094, line: 401, type: !1265)
!8672 = !DILocalVariable(name: "node", arg: 3, scope: !8666, file: !1094, line: 401, type: !1265)
!8673 = !DILocation(line: 0, scope: !8666)
!8674 = !DILocation(line: 401, column: 1, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8666, file: !1094, line: 401, column: 1)
!8676 = !DILocation(line: 0, scope: !8675)
!8677 = !DILocation(line: 401, column: 1, scope: !8666)
!8678 = !DILocation(line: 401, column: 1, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8675, file: !1094, line: 401, column: 1)
!8680 = !DILocation(line: 401, column: 1, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8679, file: !1094, line: 401, column: 1)
!8682 = !DILocation(line: 401, column: 1, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !8681, file: !1094, line: 401, column: 1)
!8684 = !DILocation(line: 401, column: 1, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8675, file: !1094, line: 401, column: 1)
!8686 = !DILocation(line: 401, column: 1, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8685, file: !1094, line: 401, column: 1)
!8688 = !DILocation(line: 401, column: 1, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8687, file: !1094, line: 401, column: 1)
!8690 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1094, file: !1094, line: 285, type: !8691, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8693)
!8691 = !DISubroutineType(types: !8692)
!8692 = !{!1265, !1265}
!8693 = !{!8694}
!8694 = !DILocalVariable(name: "node", arg: 1, scope: !8690, file: !1094, line: 285, type: !1265)
!8695 = !DILocation(line: 0, scope: !8690)
!8696 = !DILocation(line: 285, column: 1, scope: !8690)
!8697 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1094, file: !1094, line: 274, type: !8691, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8698)
!8698 = !{!8699}
!8699 = !DILocalVariable(name: "node", arg: 1, scope: !8697, file: !1094, line: 274, type: !1265)
!8700 = !DILocation(line: 0, scope: !8697)
!8701 = !DILocation(line: 274, column: 1, scope: !8697)
!8702 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1094, file: !1094, line: 204, type: !8691, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8703)
!8703 = !{!8704}
!8704 = !DILocalVariable(name: "node", arg: 1, scope: !8702, file: !1094, line: 204, type: !1265)
!8705 = !DILocation(line: 0, scope: !8702)
!8706 = !DILocation(line: 206, column: 15, scope: !8702)
!8707 = !DILocation(line: 206, column: 2, scope: !8702)
!8708 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1189, file: !1189, line: 342, type: !270, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8709)
!8709 = !{!8710, !8711, !8712}
!8710 = !DILocalVariable(name: "pin", arg: 1, scope: !8708, file: !1189, line: 342, type: !107)
!8711 = !DILocalVariable(name: "line", scope: !8708, file: !1189, line: 344, type: !162)
!8712 = !DILocalVariable(name: "port", scope: !8708, file: !1189, line: 345, type: !107)
!8713 = !DILocation(line: 0, scope: !8708)
!8714 = !DILocation(line: 344, column: 18, scope: !8708)
!8715 = !{i32 983040, i32 0}
!8716 = !DILocation(line: 356, column: 9, scope: !8708)
!8717 = !DILocation(line: 370, column: 2, scope: !8708)
!8718 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1189, file: !1189, line: 37, type: !710, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8719)
!8719 = !{!8720, !8721, !8722}
!8720 = !DILocalVariable(name: "line", arg: 1, scope: !8718, file: !1189, line: 37, type: !107)
!8721 = !DILocalVariable(name: "arg", arg: 2, scope: !8718, file: !1189, line: 37, type: !102)
!8722 = !DILocalVariable(name: "data", scope: !8718, file: !1189, line: 39, type: !8513)
!8723 = !DILocation(line: 0, scope: !8718)
!8724 = !DILocation(line: 41, column: 29, scope: !8718)
!8725 = !DILocation(line: 41, column: 39, scope: !8718)
!8726 = !DILocation(line: 41, column: 44, scope: !8718)
!8727 = !DILocation(line: 41, column: 2, scope: !8718)
!8728 = !DILocation(line: 42, column: 1, scope: !8718)
!8729 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1189, file: !1189, line: 376, type: !8730, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8732)
!8730 = !DISubroutineType(types: !8731)
!8731 = !{!107, !107, !107}
!8732 = !{!8733, !8734, !8735, !8737, !8738}
!8733 = !DILocalVariable(name: "port", arg: 1, scope: !8729, file: !1189, line: 376, type: !107)
!8734 = !DILocalVariable(name: "pin", arg: 2, scope: !8729, file: !1189, line: 376, type: !107)
!8735 = !DILocalVariable(name: "clk", scope: !8729, file: !1189, line: 386, type: !8736)
!8736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1047)
!8737 = !DILocalVariable(name: "pclken", scope: !8729, file: !1189, line: 387, type: !1308)
!8738 = !DILocalVariable(name: "ret", scope: !8729, file: !1189, line: 396, type: !107)
!8739 = !DILocation(line: 0, scope: !8729)
!8740 = !DILocation(line: 387, column: 2, scope: !8729)
!8741 = !DILocation(line: 387, column: 22, scope: !8729)
!8742 = !DILocation(line: 399, column: 8, scope: !8729)
!8743 = !DILocation(line: 400, column: 10, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8729, file: !1189, line: 400, column: 6)
!8745 = !DILocation(line: 400, column: 6, scope: !8729)
!8746 = !DILocation(line: 405, column: 2, scope: !8729)
!8747 = !DILocation(line: 407, column: 2, scope: !8729)
!8748 = !DILocation(line: 408, column: 1, scope: !8729)
!8749 = distinct !DISubprogram(name: "clock_control_on", scope: !797, file: !797, line: 123, type: !1154, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8750)
!8750 = !{!8751, !8752, !8753}
!8751 = !DILocalVariable(name: "dev", arg: 1, scope: !8749, file: !797, line: 123, type: !1047)
!8752 = !DILocalVariable(name: "sys", arg: 2, scope: !8749, file: !797, line: 124, type: !890)
!8753 = !DILocalVariable(name: "api", scope: !8749, file: !797, line: 126, type: !1147)
!8754 = !DILocation(line: 0, scope: !8749)
!8755 = !DILocation(line: 127, column: 49, scope: !8749)
!8756 = !DILocation(line: 129, column: 14, scope: !8749)
!8757 = !DILocation(line: 129, column: 9, scope: !8749)
!8758 = !DILocation(line: 129, column: 2, scope: !8749)
!8759 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1189, file: !1189, line: 311, type: !7881, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8760)
!8760 = !{!8761, !8762, !8763}
!8761 = !DILocalVariable(name: "port", arg: 1, scope: !8759, file: !1189, line: 311, type: !107)
!8762 = !DILocalVariable(name: "pin", arg: 2, scope: !8759, file: !1189, line: 311, type: !107)
!8763 = !DILocalVariable(name: "line", scope: !8759, file: !1189, line: 313, type: !162)
!8764 = !DILocation(line: 0, scope: !8759)
!8765 = !DILocation(line: 313, column: 18, scope: !8759)
!8766 = !DILocation(line: 337, column: 2, scope: !8759)
!8767 = !DILocation(line: 340, column: 1, scope: !8759)
!8768 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1189, file: !1189, line: 295, type: !8769, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8771)
!8769 = !DISubroutineType(types: !8770)
!8770 = !{!162, !107}
!8771 = !{!8772}
!8772 = !DILocalVariable(name: "pin", arg: 1, scope: !8768, file: !1189, line: 295, type: !107)
!8773 = !DILocation(line: 0, scope: !8768)
!8774 = !DILocation(line: 307, column: 46, scope: !8768)
!8775 = !DILocation(line: 307, column: 27, scope: !8768)
!8776 = !DILocation(line: 307, column: 32, scope: !8768)
!8777 = !DILocation(line: 307, column: 14, scope: !8768)
!8778 = !DILocation(line: 307, column: 39, scope: !8768)
!8779 = !DILocation(line: 307, column: 2, scope: !8768)
!8780 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !5935, file: !5935, line: 671, type: !8781, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8783)
!8781 = !DISubroutineType(types: !8782)
!8782 = !{null, !162, !162}
!8783 = !{!8784, !8785}
!8784 = !DILocalVariable(name: "Port", arg: 1, scope: !8780, file: !5935, line: 671, type: !162)
!8785 = !DILocalVariable(name: "Line", arg: 2, scope: !8780, file: !5935, line: 671, type: !162)
!8786 = !DILocation(line: 0, scope: !8780)
!8787 = !DILocation(line: 673, column: 3, scope: !8780)
!8788 = !DILocalVariable(name: "value", arg: 1, scope: !8789, file: !6088, line: 373, type: !162)
!8789 = distinct !DISubprogram(name: "__RBIT", scope: !6088, file: !6088, line: 373, type: !7095, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8790)
!8790 = !{!8788, !8791}
!8791 = !DILocalVariable(name: "result", scope: !8789, file: !6088, line: 375, type: !162)
!8792 = !DILocation(line: 0, scope: !8789, inlinedAt: !8793)
!8793 = distinct !DILocation(line: 673, column: 3, scope: !8780)
!8794 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !8793)
!8795 = !{i64 3499837}
!8796 = !DILocalVariable(name: "value", arg: 1, scope: !8797, file: !6088, line: 403, type: !162)
!8797 = distinct !DISubprogram(name: "__CLZ", scope: !6088, file: !6088, line: 403, type: !8798, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8800)
!8798 = !DISubroutineType(types: !8799)
!8799 = !{!133, !162}
!8800 = !{!8796}
!8801 = !DILocation(line: 0, scope: !8797, inlinedAt: !8802)
!8802 = distinct !DILocation(line: 673, column: 3, scope: !8780)
!8803 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !8802)
!8804 = !DILocation(line: 674, column: 1, scope: !8780)
!8805 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !8562, file: !8562, line: 69, type: !8806, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8808)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{null, !8565, !1047, !162}
!8808 = !{!8809, !8810, !8811, !8812, !8813}
!8809 = !DILocalVariable(name: "list", arg: 1, scope: !8805, file: !8562, line: 69, type: !8565)
!8810 = !DILocalVariable(name: "port", arg: 2, scope: !8805, file: !8562, line: 70, type: !1047)
!8811 = !DILocalVariable(name: "pins", arg: 3, scope: !8805, file: !8562, line: 71, type: !162)
!8812 = !DILocalVariable(name: "cb", scope: !8805, file: !8562, line: 73, type: !1089)
!8813 = !DILocalVariable(name: "tmp", scope: !8805, file: !8562, line: 73, type: !1089)
!8814 = !DILocation(line: 0, scope: !8805)
!8815 = !DILocation(line: 75, column: 2, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8805, file: !8562, line: 75, column: 2)
!8817 = !DILocation(line: 0, scope: !8816)
!8818 = !DILocation(line: 76, column: 11, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !8562, line: 76, column: 7)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !8562, line: 75, column: 57)
!8821 = distinct !DILexicalBlock(scope: !8816, file: !8562, line: 75, column: 2)
!8822 = !DILocation(line: 76, column: 20, scope: !8819)
!8823 = !DILocation(line: 76, column: 7, scope: !8820)
!8824 = !DILocation(line: 78, column: 8, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8819, file: !8562, line: 76, column: 28)
!8826 = !DILocation(line: 78, column: 4, scope: !8825)
!8827 = !DILocation(line: 79, column: 3, scope: !8825)
!8828 = !DILocation(line: 75, column: 2, scope: !8821)
!8829 = !DILocation(line: 81, column: 1, scope: !8805)
!8830 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !5935, file: !5935, line: 710, type: !7095, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8831)
!8831 = !{!8832}
!8832 = !DILocalVariable(name: "Line", arg: 1, scope: !8830, file: !5935, line: 710, type: !162)
!8833 = !DILocation(line: 0, scope: !8830)
!8834 = !DILocation(line: 712, column: 21, scope: !8830)
!8835 = !DILocation(line: 0, scope: !8789, inlinedAt: !8836)
!8836 = distinct !DILocation(line: 712, column: 76, scope: !8830)
!8837 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !8836)
!8838 = !DILocation(line: 0, scope: !8797, inlinedAt: !8839)
!8839 = distinct !DILocation(line: 712, column: 76, scope: !8830)
!8840 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !8839)
!8841 = !DILocation(line: 712, column: 73, scope: !8830)
!8842 = !DILocation(line: 712, column: 3, scope: !8830)
!8843 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !8844, file: !8844, line: 910, type: !8845, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8847)
!8844 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8845 = !DISubroutineType(types: !8846)
!8846 = !{null, !1120, !162}
!8847 = !{!8848, !8849}
!8848 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8843, file: !8844, line: 910, type: !1120)
!8849 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8843, file: !8844, line: 910, type: !162)
!8850 = !DILocation(line: 0, scope: !8843)
!8851 = !DILocation(line: 912, column: 3, scope: !8843)
!8852 = !DILocation(line: 913, column: 1, scope: !8843)
!8853 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !8844, file: !8844, line: 823, type: !8854, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8856)
!8854 = !DISubroutineType(types: !8855)
!8855 = !{!162, !1120}
!8856 = !{!8857}
!8857 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8853, file: !8844, line: 823, type: !1120)
!8858 = !DILocation(line: 0, scope: !8853)
!8859 = !DILocation(line: 825, column: 21, scope: !8853)
!8860 = !DILocation(line: 825, column: 3, scope: !8853)
!8861 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !8844, file: !8844, line: 812, type: !8845, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8862)
!8862 = !{!8863, !8864}
!8863 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8861, file: !8844, line: 812, type: !1120)
!8864 = !DILocalVariable(name: "PortValue", arg: 2, scope: !8861, file: !8844, line: 812, type: !162)
!8865 = !DILocation(line: 0, scope: !8861)
!8866 = !DILocation(line: 814, column: 3, scope: !8861)
!8867 = !DILocation(line: 815, column: 1, scope: !8861)
!8868 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !8844, file: !8844, line: 771, type: !8854, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8869)
!8869 = !{!8870}
!8870 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8868, file: !8844, line: 771, type: !1120)
!8871 = !DILocation(line: 0, scope: !8868)
!8872 = !DILocation(line: 773, column: 21, scope: !8868)
!8873 = !DILocation(line: 773, column: 3, scope: !8868)
!8874 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1189, file: !1189, line: 47, type: !8875, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8877)
!8875 = !DISubroutineType(types: !8876)
!8876 = !{!107, !1063, !2478}
!8877 = !{!8878, !8879}
!8878 = !DILocalVariable(name: "flags", arg: 1, scope: !8874, file: !1189, line: 47, type: !1063)
!8879 = !DILocalVariable(name: "pincfg", arg: 2, scope: !8874, file: !1189, line: 47, type: !2478)
!8880 = !DILocation(line: 0, scope: !8874)
!8881 = !DILocation(line: 50, column: 13, scope: !8882)
!8882 = distinct !DILexicalBlock(scope: !8874, file: !1189, line: 50, column: 6)
!8883 = !DILocation(line: 50, column: 28, scope: !8882)
!8884 = !DILocation(line: 50, column: 6, scope: !8874)
!8885 = !DILocation(line: 53, column: 11, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8882, file: !1189, line: 50, column: 34)
!8887 = !DILocation(line: 55, column: 14, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8886, file: !1189, line: 55, column: 7)
!8889 = !DILocation(line: 55, column: 35, scope: !8888)
!8890 = !DILocation(line: 55, column: 7, scope: !8886)
!8891 = !DILocation(line: 56, column: 14, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8893, file: !1189, line: 56, column: 8)
!8893 = distinct !DILexicalBlock(scope: !8888, file: !1189, line: 55, column: 41)
!8894 = !DILocation(line: 56, column: 8, scope: !8893)
!8895 = !DILocation(line: 0, scope: !8888)
!8896 = !DILocation(line: 66, column: 14, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8886, file: !1189, line: 66, column: 7)
!8898 = !DILocation(line: 66, column: 30, scope: !8897)
!8899 = !DILocation(line: 66, column: 7, scope: !8886)
!8900 = !DILocation(line: 67, column: 12, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8897, file: !1189, line: 66, column: 36)
!8902 = !DILocation(line: 68, column: 3, scope: !8901)
!8903 = !DILocation(line: 68, column: 21, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8897, file: !1189, line: 68, column: 14)
!8905 = !DILocation(line: 68, column: 39, scope: !8904)
!8906 = !DILocation(line: 68, column: 14, scope: !8897)
!8907 = !DILocation(line: 69, column: 12, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8904, file: !1189, line: 68, column: 45)
!8909 = !DILocation(line: 70, column: 3, scope: !8908)
!8910 = !DILocation(line: 72, column: 21, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8882, file: !1189, line: 72, column: 14)
!8912 = !DILocation(line: 72, column: 35, scope: !8911)
!8913 = !DILocation(line: 72, column: 14, scope: !8882)
!8914 = !DILocation(line: 77, column: 14, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8916, file: !1189, line: 77, column: 7)
!8916 = distinct !DILexicalBlock(scope: !8911, file: !1189, line: 72, column: 41)
!8917 = !DILocation(line: 77, column: 30, scope: !8915)
!8918 = !DILocation(line: 77, column: 7, scope: !8916)
!8919 = !DILocation(line: 0, scope: !8882)
!8920 = !DILocation(line: 90, column: 1, scope: !8874)
!8921 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1189, file: !1189, line: 157, type: !8922, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8924)
!8922 = !DISubroutineType(types: !8923)
!8923 = !{null, !1047, !107, !107, !107}
!8924 = !{!8925, !8926, !8927, !8928, !8929, !8930, !8931, !8932, !8933, !8934, !8935}
!8925 = !DILocalVariable(name: "dev", arg: 1, scope: !8921, file: !1189, line: 157, type: !1047)
!8926 = !DILocalVariable(name: "pin", arg: 2, scope: !8921, file: !1189, line: 157, type: !107)
!8927 = !DILocalVariable(name: "conf", arg: 3, scope: !8921, file: !1189, line: 158, type: !107)
!8928 = !DILocalVariable(name: "func", arg: 4, scope: !8921, file: !1189, line: 158, type: !107)
!8929 = !DILocalVariable(name: "cfg", scope: !8921, file: !1189, line: 160, type: !8446)
!8930 = !DILocalVariable(name: "gpio", scope: !8921, file: !1189, line: 161, type: !1120)
!8931 = !DILocalVariable(name: "pin_ll", scope: !8921, file: !1189, line: 163, type: !107)
!8932 = !DILocalVariable(name: "mode", scope: !8921, file: !1189, line: 227, type: !32)
!8933 = !DILocalVariable(name: "otype", scope: !8921, file: !1189, line: 227, type: !32)
!8934 = !DILocalVariable(name: "ospeed", scope: !8921, file: !1189, line: 227, type: !32)
!8935 = !DILocalVariable(name: "pupd", scope: !8921, file: !1189, line: 227, type: !32)
!8936 = !DILocation(line: 0, scope: !8921)
!8937 = !DILocation(line: 160, column: 45, scope: !8921)
!8938 = !DILocation(line: 161, column: 44, scope: !8921)
!8939 = !DILocation(line: 163, column: 15, scope: !8921)
!8940 = !DILocation(line: 229, column: 14, scope: !8921)
!8941 = !DILocation(line: 246, column: 47, scope: !8921)
!8942 = !DILocation(line: 246, column: 2, scope: !8921)
!8943 = !DILocation(line: 248, column: 43, scope: !8921)
!8944 = !DILocation(line: 248, column: 2, scope: !8921)
!8945 = !DILocation(line: 250, column: 40, scope: !8921)
!8946 = !DILocation(line: 250, column: 2, scope: !8921)
!8947 = !DILocation(line: 252, column: 11, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8921, file: !1189, line: 252, column: 6)
!8949 = !DILocation(line: 252, column: 6, scope: !8921)
!8950 = !DILocation(line: 253, column: 11, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8952, file: !1189, line: 253, column: 7)
!8952 = distinct !DILexicalBlock(scope: !8948, file: !1189, line: 252, column: 36)
!8953 = !DILocation(line: 253, column: 7, scope: !8952)
!8954 = !DILocation(line: 254, column: 4, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8951, file: !1189, line: 253, column: 16)
!8956 = !DILocation(line: 255, column: 3, scope: !8955)
!8957 = !DILocation(line: 256, column: 4, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8951, file: !1189, line: 255, column: 10)
!8959 = !DILocation(line: 260, column: 40, scope: !8921)
!8960 = !DILocation(line: 260, column: 2, scope: !8921)
!8961 = !DILocation(line: 265, column: 1, scope: !8921)
!8962 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1189, file: !1189, line: 137, type: !8769, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8963)
!8963 = !{!8964, !8965}
!8964 = !DILocalVariable(name: "pin", arg: 1, scope: !8962, file: !1189, line: 137, type: !107)
!8965 = !DILocalVariable(name: "pinval", scope: !8962, file: !1189, line: 139, type: !162)
!8966 = !DILocation(line: 0, scope: !8962)
!8967 = !DILocation(line: 149, column: 13, scope: !8962)
!8968 = !DILocation(line: 151, column: 2, scope: !8962)
!8969 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !8844, file: !8844, line: 342, type: !8970, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8972)
!8970 = !DISubroutineType(types: !8971)
!8971 = !{null, !1120, !162, !162}
!8972 = !{!8973, !8974, !8975}
!8973 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8969, file: !8844, line: 342, type: !1120)
!8974 = !DILocalVariable(name: "PinMask", arg: 2, scope: !8969, file: !8844, line: 342, type: !162)
!8975 = !DILocalVariable(name: "OutputType", arg: 3, scope: !8969, file: !8844, line: 342, type: !162)
!8976 = !DILocation(line: 0, scope: !8969)
!8977 = !DILocation(line: 344, column: 3, scope: !8969)
!8978 = !DILocation(line: 345, column: 1, scope: !8969)
!8979 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !8844, file: !8844, line: 413, type: !8970, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8980)
!8980 = !{!8981, !8982, !8983}
!8981 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8979, file: !8844, line: 413, type: !1120)
!8982 = !DILocalVariable(name: "Pin", arg: 2, scope: !8979, file: !8844, line: 413, type: !162)
!8983 = !DILocalVariable(name: "Speed", arg: 3, scope: !8979, file: !8844, line: 413, type: !162)
!8984 = !DILocation(line: 0, scope: !8979)
!8985 = !DILocation(line: 415, column: 3, scope: !8979)
!8986 = !DILocation(line: 0, scope: !8789, inlinedAt: !8987)
!8987 = distinct !DILocation(line: 415, column: 3, scope: !8979)
!8988 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !8987)
!8989 = !DILocation(line: 0, scope: !8797, inlinedAt: !8990)
!8990 = distinct !DILocation(line: 415, column: 3, scope: !8979)
!8991 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !8990)
!8992 = !DILocation(line: 0, scope: !8789, inlinedAt: !8993)
!8993 = distinct !DILocation(line: 415, column: 3, scope: !8979)
!8994 = !DILocation(line: 0, scope: !8797, inlinedAt: !8995)
!8995 = distinct !DILocation(line: 415, column: 3, scope: !8979)
!8996 = !DILocation(line: 417, column: 1, scope: !8979)
!8997 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !8844, file: !8844, line: 484, type: !8970, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !8998)
!8998 = !{!8999, !9000, !9001}
!8999 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !8997, file: !8844, line: 484, type: !1120)
!9000 = !DILocalVariable(name: "Pin", arg: 2, scope: !8997, file: !8844, line: 484, type: !162)
!9001 = !DILocalVariable(name: "Pull", arg: 3, scope: !8997, file: !8844, line: 484, type: !162)
!9002 = !DILocation(line: 0, scope: !8997)
!9003 = !DILocation(line: 486, column: 3, scope: !8997)
!9004 = !DILocation(line: 0, scope: !8789, inlinedAt: !9005)
!9005 = distinct !DILocation(line: 486, column: 3, scope: !8997)
!9006 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !9005)
!9007 = !DILocation(line: 0, scope: !8797, inlinedAt: !9008)
!9008 = distinct !DILocation(line: 486, column: 3, scope: !8997)
!9009 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !9008)
!9010 = !DILocation(line: 0, scope: !8789, inlinedAt: !9011)
!9011 = distinct !DILocation(line: 486, column: 3, scope: !8997)
!9012 = !DILocation(line: 0, scope: !8797, inlinedAt: !9013)
!9013 = distinct !DILocation(line: 486, column: 3, scope: !8997)
!9014 = !DILocation(line: 487, column: 1, scope: !8997)
!9015 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !8844, file: !8844, line: 556, type: !8970, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !9016)
!9016 = !{!9017, !9018, !9019}
!9017 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9015, file: !8844, line: 556, type: !1120)
!9018 = !DILocalVariable(name: "Pin", arg: 2, scope: !9015, file: !8844, line: 556, type: !162)
!9019 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9015, file: !8844, line: 556, type: !162)
!9020 = !DILocation(line: 0, scope: !9015)
!9021 = !DILocation(line: 558, column: 3, scope: !9015)
!9022 = !DILocation(line: 0, scope: !8789, inlinedAt: !9023)
!9023 = distinct !DILocation(line: 558, column: 3, scope: !9015)
!9024 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !9023)
!9025 = !DILocation(line: 0, scope: !8797, inlinedAt: !9026)
!9026 = distinct !DILocation(line: 558, column: 3, scope: !9015)
!9027 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !9026)
!9028 = !DILocation(line: 0, scope: !8789, inlinedAt: !9029)
!9029 = distinct !DILocation(line: 558, column: 3, scope: !9015)
!9030 = !DILocation(line: 0, scope: !8797, inlinedAt: !9031)
!9031 = distinct !DILocation(line: 558, column: 3, scope: !9015)
!9032 = !DILocation(line: 560, column: 1, scope: !9015)
!9033 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !8844, file: !8844, line: 633, type: !8970, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !9034)
!9034 = !{!9035, !9036, !9037}
!9035 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9033, file: !8844, line: 633, type: !1120)
!9036 = !DILocalVariable(name: "Pin", arg: 2, scope: !9033, file: !8844, line: 633, type: !162)
!9037 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9033, file: !8844, line: 633, type: !162)
!9038 = !DILocation(line: 0, scope: !9033)
!9039 = !DILocation(line: 635, column: 3, scope: !9033)
!9040 = !DILocation(line: 0, scope: !8789, inlinedAt: !9041)
!9041 = distinct !DILocation(line: 635, column: 3, scope: !9033)
!9042 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !9041)
!9043 = !DILocation(line: 0, scope: !8797, inlinedAt: !9044)
!9044 = distinct !DILocation(line: 635, column: 3, scope: !9033)
!9045 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !9044)
!9046 = !DILocation(line: 0, scope: !8789, inlinedAt: !9047)
!9047 = distinct !DILocation(line: 635, column: 3, scope: !9033)
!9048 = !DILocation(line: 0, scope: !8797, inlinedAt: !9049)
!9049 = distinct !DILocation(line: 635, column: 3, scope: !9033)
!9050 = !DILocation(line: 637, column: 1, scope: !9033)
!9051 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !8844, file: !8844, line: 273, type: !8970, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !9052)
!9052 = !{!9053, !9054, !9055}
!9053 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9051, file: !8844, line: 273, type: !1120)
!9054 = !DILocalVariable(name: "Pin", arg: 2, scope: !9051, file: !8844, line: 273, type: !162)
!9055 = !DILocalVariable(name: "Mode", arg: 3, scope: !9051, file: !8844, line: 273, type: !162)
!9056 = !DILocation(line: 0, scope: !9051)
!9057 = !DILocation(line: 275, column: 3, scope: !9051)
!9058 = !DILocation(line: 0, scope: !8789, inlinedAt: !9059)
!9059 = distinct !DILocation(line: 275, column: 3, scope: !9051)
!9060 = !DILocation(line: 380, column: 4, scope: !8789, inlinedAt: !9059)
!9061 = !DILocation(line: 0, scope: !8797, inlinedAt: !9062)
!9062 = distinct !DILocation(line: 275, column: 3, scope: !9051)
!9063 = !DILocation(line: 414, column: 7, scope: !8797, inlinedAt: !9062)
!9064 = !DILocation(line: 0, scope: !8789, inlinedAt: !9065)
!9065 = distinct !DILocation(line: 275, column: 3, scope: !9051)
!9066 = !DILocation(line: 0, scope: !8797, inlinedAt: !9067)
!9067 = distinct !DILocation(line: 275, column: 3, scope: !9051)
!9068 = !DILocation(line: 276, column: 1, scope: !9051)
!9069 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1189, file: !1189, line: 698, type: !1202, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !9070)
!9070 = !{!9071, !9072, !9073}
!9071 = !DILocalVariable(name: "dev", arg: 1, scope: !9069, file: !1189, line: 698, type: !1047)
!9072 = !DILocalVariable(name: "data", scope: !9069, file: !1189, line: 700, type: !8513)
!9073 = !DILocalVariable(name: "ret", scope: !9069, file: !1189, line: 701, type: !107)
!9074 = !DILocation(line: 0, scope: !9069)
!9075 = !DILocation(line: 700, column: 38, scope: !9069)
!9076 = !DILocation(line: 703, column: 8, scope: !9069)
!9077 = !DILocation(line: 703, column: 12, scope: !9069)
!9078 = !DILocation(line: 705, column: 7, scope: !9079)
!9079 = distinct !DILexicalBlock(scope: !9069, file: !1189, line: 705, column: 6)
!9080 = !DILocation(line: 705, column: 6, scope: !9069)
!9081 = !DILocation(line: 722, column: 8, scope: !9069)
!9082 = !DILocation(line: 723, column: 10, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9069, file: !1189, line: 723, column: 6)
!9084 = !DILocation(line: 723, column: 6, scope: !9069)
!9085 = !DILocation(line: 731, column: 1, scope: !9069)
!9086 = distinct !DISubprogram(name: "device_is_ready", scope: !3413, file: !3413, line: 47, type: !9087, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !9089)
!9087 = !DISubroutineType(types: !9088)
!9088 = !{!136, !1047}
!9089 = !{!9090}
!9090 = !DILocalVariable(name: "dev", arg: 1, scope: !9086, file: !3413, line: 47, type: !1047)
!9091 = !DILocation(line: 0, scope: !9086)
!9092 = !DILocation(line: 55, column: 2, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9086, file: !3413, line: 55, column: 2)
!9094 = !{i64 2154942720}
!9095 = !DILocation(line: 56, column: 9, scope: !9086)
!9096 = !DILocation(line: 56, column: 2, scope: !9086)
!9097 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1189, file: !1189, line: 270, type: !9098, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !9100)
!9098 = !DISubroutineType(types: !9099)
!9099 = !{!107, !1047, !136}
!9100 = !{!9101, !9102, !9103, !9104, !9105}
!9101 = !DILocalVariable(name: "dev", arg: 1, scope: !9097, file: !1189, line: 270, type: !1047)
!9102 = !DILocalVariable(name: "on", arg: 2, scope: !9097, file: !1189, line: 270, type: !136)
!9103 = !DILocalVariable(name: "cfg", scope: !9097, file: !1189, line: 272, type: !8446)
!9104 = !DILocalVariable(name: "ret", scope: !9097, file: !1189, line: 273, type: !107)
!9105 = !DILocalVariable(name: "clk", scope: !9097, file: !1189, line: 278, type: !8736)
!9106 = !DILocation(line: 0, scope: !9097)
!9107 = !DILocation(line: 272, column: 45, scope: !9097)
!9108 = !DILocation(line: 282, column: 38, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !1189, line: 280, column: 10)
!9110 = distinct !DILexicalBlock(scope: !9097, file: !1189, line: 280, column: 6)
!9111 = !DILocation(line: 282, column: 6, scope: !9109)
!9112 = !DILocation(line: 281, column: 9, scope: !9109)
!9113 = !DILocation(line: 293, column: 1, scope: !9097)
!9114 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !9087, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !9115)
!9115 = !{!9116}
!9116 = !DILocalVariable(name: "dev", arg: 1, scope: !9114, file: !120, line: 730, type: !1047)
!9117 = !DILocation(line: 0, scope: !9114)
!9118 = !DILocation(line: 732, column: 9, scope: !9114)
!9119 = !DILocation(line: 732, column: 2, scope: !9114)
!9120 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1189, file: !1189, line: 496, type: !9121, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1018, retainedNodes: !9123)
!9121 = !DISubroutineType(types: !9122)
!9122 = !{!107, !1047, !107, !107, !107}
!9123 = !{!9124, !9125, !9126, !9127, !9128, !9129}
!9124 = !DILocalVariable(name: "dev", arg: 1, scope: !9120, file: !1189, line: 496, type: !1047)
!9125 = !DILocalVariable(name: "pin", arg: 2, scope: !9120, file: !1189, line: 496, type: !107)
!9126 = !DILocalVariable(name: "conf", arg: 3, scope: !9120, file: !1189, line: 496, type: !107)
!9127 = !DILocalVariable(name: "func", arg: 4, scope: !9120, file: !1189, line: 496, type: !107)
!9128 = !DILocalVariable(name: "ret", scope: !9120, file: !1189, line: 498, type: !107)
!9129 = !DILocalVariable(name: "gpio_out", scope: !9130, file: !1189, line: 508, type: !162)
!9130 = distinct !DILexicalBlock(scope: !9131, file: !1189, line: 507, column: 27)
!9131 = distinct !DILexicalBlock(scope: !9120, file: !1189, line: 507, column: 6)
!9132 = !DILocation(line: 0, scope: !9120)
!9133 = !DILocation(line: 505, column: 2, scope: !9120)
!9134 = !DILocation(line: 507, column: 11, scope: !9131)
!9135 = !DILocation(line: 507, column: 6, scope: !9120)
!9136 = !DILocation(line: 508, column: 28, scope: !9130)
!9137 = !DILocation(line: 0, scope: !9130)
!9138 = !DILocation(line: 510, column: 16, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9130, file: !1189, line: 510, column: 7)
!9140 = !DILocation(line: 0, scope: !9139)
!9141 = !DILocation(line: 510, column: 7, scope: !9130)
!9142 = !DILocation(line: 511, column: 4, scope: !9143)
!9143 = distinct !DILexicalBlock(scope: !9139, file: !1189, line: 510, column: 32)
!9144 = !DILocation(line: 512, column: 3, scope: !9143)
!9145 = !DILocation(line: 513, column: 4, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !1189, line: 512, column: 39)
!9147 = distinct !DILexicalBlock(scope: !9139, file: !1189, line: 512, column: 14)
!9148 = !DILocation(line: 514, column: 3, scope: !9146)
!9149 = !DILocation(line: 518, column: 1, scope: !9120)
!9150 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1497, file: !1497, line: 526, type: !1368, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9151)
!9151 = !{!9152, !9153, !9154}
!9152 = !DILocalVariable(name: "dev", arg: 1, scope: !9150, file: !1497, line: 526, type: !1370)
!9153 = !DILocalVariable(name: "c", arg: 2, scope: !9150, file: !1497, line: 526, type: !144)
!9154 = !DILocalVariable(name: "config", scope: !9150, file: !1497, line: 528, type: !9155)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 32)
!9156 = !DILocation(line: 0, scope: !9150)
!9157 = !DILocation(line: 528, column: 48, scope: !9150)
!9158 = !DILocation(line: 531, column: 40, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9150, file: !1497, line: 531, column: 6)
!9160 = !DILocation(line: 531, column: 6, scope: !9159)
!9161 = !DILocation(line: 531, column: 6, scope: !9150)
!9162 = !DILocation(line: 532, column: 34, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9159, file: !1497, line: 531, column: 48)
!9164 = !DILocation(line: 532, column: 3, scope: !9163)
!9165 = !DILocation(line: 533, column: 2, scope: !9163)
!9166 = !DILocation(line: 539, column: 42, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9150, file: !1497, line: 539, column: 6)
!9168 = !DILocation(line: 539, column: 7, scope: !9167)
!9169 = !DILocation(line: 539, column: 6, scope: !9150)
!9170 = !DILocation(line: 543, column: 52, scope: !9150)
!9171 = !DILocation(line: 543, column: 22, scope: !9150)
!9172 = !DILocation(line: 543, column: 5, scope: !9150)
!9173 = !DILocation(line: 545, column: 2, scope: !9150)
!9174 = !DILocation(line: 546, column: 1, scope: !9150)
!9175 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1497, file: !1497, line: 548, type: !1387, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9176)
!9176 = !{!9177, !9178, !9179, !9180}
!9177 = !DILocalVariable(name: "dev", arg: 1, scope: !9175, file: !1497, line: 548, type: !1370)
!9178 = !DILocalVariable(name: "c", arg: 2, scope: !9175, file: !1497, line: 549, type: !134)
!9179 = !DILocalVariable(name: "config", scope: !9175, file: !1497, line: 551, type: !9155)
!9180 = !DILocalVariable(name: "key", scope: !9175, file: !1497, line: 555, type: !32)
!9181 = !DILocation(line: 0, scope: !9175)
!9182 = !DILocation(line: 551, column: 48, scope: !9175)
!9183 = !DILocation(line: 562, column: 2, scope: !9175)
!9184 = !DILocation(line: 563, column: 41, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9186, file: !1497, line: 563, column: 7)
!9186 = distinct !DILexicalBlock(scope: !9175, file: !1497, line: 562, column: 12)
!9187 = !DILocation(line: 563, column: 7, scope: !9185)
!9188 = !DILocation(line: 563, column: 7, scope: !9186)
!9189 = !DILocation(line: 55, column: 2, scope: !9190, inlinedAt: !9194)
!9190 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9191)
!9191 = !{!9192, !9193}
!9192 = !DILocalVariable(name: "key", scope: !9190, file: !5914, line: 44, type: !32)
!9193 = !DILocalVariable(name: "tmp", scope: !9190, file: !5914, line: 53, type: !32)
!9194 = distinct !DILocation(line: 564, column: 10, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9185, file: !1497, line: 563, column: 49)
!9196 = !{i64 2288250}
!9197 = !DILocation(line: 0, scope: !9190, inlinedAt: !9194)
!9198 = !DILocation(line: 565, column: 42, scope: !9199)
!9199 = distinct !DILexicalBlock(scope: !9195, file: !1497, line: 565, column: 8)
!9200 = !DILocation(line: 565, column: 8, scope: !9199)
!9201 = !DILocation(line: 565, column: 8, scope: !9195)
!9202 = !DILocalVariable(name: "key", arg: 1, scope: !9203, file: !5914, line: 84, type: !32)
!9203 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9204)
!9204 = !{!9202}
!9205 = !DILocation(line: 0, scope: !9203, inlinedAt: !9206)
!9206 = distinct !DILocation(line: 568, column: 4, scope: !9195)
!9207 = !DILocation(line: 95, column: 2, scope: !9203, inlinedAt: !9206)
!9208 = !{i64 2289067}
!9209 = !DILocation(line: 569, column: 3, scope: !9195)
!9210 = distinct !{!9210, !9183, !9211}
!9211 = !DILocation(line: 570, column: 2, scope: !9175)
!9212 = !DILocation(line: 592, column: 33, scope: !9175)
!9213 = !DILocation(line: 592, column: 2, scope: !9175)
!9214 = !DILocation(line: 0, scope: !9203, inlinedAt: !9215)
!9215 = distinct !DILocation(line: 593, column: 2, scope: !9175)
!9216 = !DILocation(line: 95, column: 2, scope: !9203, inlinedAt: !9215)
!9217 = !DILocation(line: 594, column: 1, scope: !9175)
!9218 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1497, file: !1497, line: 596, type: !1391, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9219)
!9219 = !{!9220, !9221, !9222}
!9220 = !DILocalVariable(name: "dev", arg: 1, scope: !9218, file: !1497, line: 596, type: !1370)
!9221 = !DILocalVariable(name: "config", scope: !9218, file: !1497, line: 598, type: !9155)
!9222 = !DILocalVariable(name: "err", scope: !9218, file: !1497, line: 599, type: !162)
!9223 = !DILocation(line: 0, scope: !9218)
!9224 = !DILocation(line: 598, column: 48, scope: !9218)
!9225 = !DILocation(line: 606, column: 40, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9218, file: !1497, line: 606, column: 6)
!9227 = !DILocation(line: 606, column: 6, scope: !9226)
!9228 = !DILocation(line: 606, column: 6, scope: !9218)
!9229 = !DILocation(line: 610, column: 39, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9218, file: !1497, line: 610, column: 6)
!9231 = !DILocation(line: 610, column: 6, scope: !9230)
!9232 = !DILocation(line: 610, column: 6, scope: !9218)
!9233 = !DILocation(line: 614, column: 39, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9218, file: !1497, line: 614, column: 6)
!9235 = !DILocation(line: 614, column: 6, scope: !9234)
!9236 = !DILocation(line: 614, column: 6, scope: !9218)
!9237 = !DILocation(line: 619, column: 40, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9218, file: !1497, line: 619, column: 6)
!9239 = !DILocation(line: 619, column: 6, scope: !9238)
!9240 = !DILocation(line: 619, column: 6, scope: !9218)
!9241 = !DILocation(line: 623, column: 10, scope: !9242)
!9242 = distinct !DILexicalBlock(scope: !9218, file: !1497, line: 623, column: 6)
!9243 = !DILocation(line: 623, column: 6, scope: !9218)
!9244 = !DILocation(line: 624, column: 34, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9242, file: !1497, line: 623, column: 24)
!9246 = !DILocation(line: 624, column: 3, scope: !9245)
!9247 = !DILocation(line: 625, column: 2, scope: !9245)
!9248 = !DILocation(line: 632, column: 10, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9218, file: !1497, line: 632, column: 6)
!9250 = !DILocation(line: 632, column: 6, scope: !9218)
!9251 = !DILocation(line: 633, column: 34, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9249, file: !1497, line: 632, column: 32)
!9253 = !DILocation(line: 633, column: 3, scope: !9252)
!9254 = !DILocation(line: 634, column: 2, scope: !9252)
!9255 = !DILocation(line: 636, column: 10, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9218, file: !1497, line: 636, column: 6)
!9257 = !DILocation(line: 636, column: 6, scope: !9218)
!9258 = !DILocation(line: 637, column: 33, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9256, file: !1497, line: 636, column: 31)
!9260 = !DILocation(line: 637, column: 3, scope: !9259)
!9261 = !DILocation(line: 638, column: 2, scope: !9259)
!9262 = !DILocation(line: 640, column: 10, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9218, file: !1497, line: 640, column: 6)
!9264 = !DILocation(line: 640, column: 6, scope: !9218)
!9265 = !DILocation(line: 641, column: 33, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9263, file: !1497, line: 640, column: 32)
!9267 = !DILocation(line: 641, column: 3, scope: !9266)
!9268 = !DILocation(line: 642, column: 2, scope: !9266)
!9269 = !DILocation(line: 646, column: 32, scope: !9218)
!9270 = !DILocation(line: 646, column: 2, scope: !9218)
!9271 = !DILocation(line: 648, column: 2, scope: !9218)
!9272 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1497, file: !1497, line: 419, type: !1395, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9273)
!9273 = !{!9274, !9275, !9276, !9277, !9279, !9280, !9281, !9282}
!9274 = !DILocalVariable(name: "dev", arg: 1, scope: !9272, file: !1497, line: 419, type: !1370)
!9275 = !DILocalVariable(name: "cfg", arg: 2, scope: !9272, file: !1497, line: 420, type: !1397)
!9276 = !DILocalVariable(name: "config", scope: !9272, file: !1497, line: 422, type: !9155)
!9277 = !DILocalVariable(name: "data", scope: !9272, file: !1497, line: 423, type: !9278)
!9278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 32)
!9279 = !DILocalVariable(name: "parity", scope: !9272, file: !1497, line: 424, type: !6356)
!9280 = !DILocalVariable(name: "stopbits", scope: !9272, file: !1497, line: 425, type: !6356)
!9281 = !DILocalVariable(name: "databits", scope: !9272, file: !1497, line: 426, type: !6356)
!9282 = !DILocalVariable(name: "flowctrl", scope: !9272, file: !1497, line: 428, type: !6356)
!9283 = !DILocation(line: 0, scope: !9272)
!9284 = !DILocation(line: 422, column: 48, scope: !9272)
!9285 = !DILocation(line: 423, column: 38, scope: !9272)
!9286 = !DILocation(line: 424, column: 56, scope: !9272)
!9287 = !DILocation(line: 424, column: 51, scope: !9272)
!9288 = !DILocation(line: 424, column: 26, scope: !9272)
!9289 = !DILocation(line: 425, column: 60, scope: !9272)
!9290 = !DILocation(line: 425, column: 55, scope: !9272)
!9291 = !DILocation(line: 425, column: 28, scope: !9272)
!9292 = !DILocation(line: 426, column: 60, scope: !9272)
!9293 = !DILocation(line: 426, column: 55, scope: !9272)
!9294 = !DILocation(line: 426, column: 28, scope: !9272)
!9295 = !DILocation(line: 428, column: 58, scope: !9272)
!9296 = !DILocation(line: 428, column: 53, scope: !9272)
!9297 = !DILocation(line: 428, column: 28, scope: !9272)
!9298 = !DILocation(line: 431, column: 44, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 431, column: 6)
!9300 = !DILocation(line: 438, column: 22, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 437, column: 6)
!9302 = !DILocation(line: 437, column: 6, scope: !9272)
!9303 = !DILocation(line: 448, column: 6, scope: !9272)
!9304 = !DILocation(line: 465, column: 47, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 465, column: 6)
!9306 = !DILocation(line: 475, column: 21, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 475, column: 6)
!9308 = !DILocation(line: 475, column: 6, scope: !9272)
!9309 = !DILocation(line: 476, column: 8, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !1497, line: 476, column: 7)
!9311 = distinct !DILexicalBlock(scope: !9307, file: !1497, line: 475, column: 49)
!9312 = !DILocation(line: 477, column: 34, scope: !9310)
!9313 = !DILocation(line: 476, column: 7, scope: !9311)
!9314 = !DILocation(line: 482, column: 27, scope: !9272)
!9315 = !DILocation(line: 482, column: 2, scope: !9272)
!9316 = !DILocation(line: 484, column: 16, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 484, column: 6)
!9318 = !DILocation(line: 484, column: 13, scope: !9317)
!9319 = !DILocation(line: 484, column: 6, scope: !9272)
!9320 = !DILocation(line: 485, column: 3, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9317, file: !1497, line: 484, column: 44)
!9322 = !DILocation(line: 486, column: 2, scope: !9321)
!9323 = !DILocation(line: 488, column: 18, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 488, column: 6)
!9325 = !DILocation(line: 488, column: 15, scope: !9324)
!9326 = !DILocation(line: 488, column: 6, scope: !9272)
!9327 = !DILocation(line: 489, column: 3, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9324, file: !1497, line: 488, column: 48)
!9329 = !DILocation(line: 490, column: 2, scope: !9328)
!9330 = !DILocation(line: 492, column: 18, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 492, column: 6)
!9332 = !DILocation(line: 492, column: 15, scope: !9331)
!9333 = !DILocation(line: 492, column: 6, scope: !9272)
!9334 = !DILocation(line: 493, column: 3, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9331, file: !1497, line: 492, column: 48)
!9336 = !DILocation(line: 494, column: 2, scope: !9335)
!9337 = !DILocation(line: 496, column: 18, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 496, column: 6)
!9339 = !DILocation(line: 496, column: 15, scope: !9338)
!9340 = !DILocation(line: 496, column: 6, scope: !9272)
!9341 = !DILocation(line: 497, column: 3, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9338, file: !1497, line: 496, column: 46)
!9343 = !DILocation(line: 498, column: 2, scope: !9342)
!9344 = !DILocation(line: 500, column: 11, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9272, file: !1497, line: 500, column: 6)
!9346 = !DILocation(line: 500, column: 29, scope: !9345)
!9347 = !DILocation(line: 500, column: 20, scope: !9345)
!9348 = !DILocation(line: 500, column: 6, scope: !9272)
!9349 = !DILocation(line: 501, column: 3, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9345, file: !1497, line: 500, column: 40)
!9351 = !DILocation(line: 502, column: 26, scope: !9350)
!9352 = !DILocation(line: 502, column: 19, scope: !9350)
!9353 = !DILocation(line: 503, column: 2, scope: !9350)
!9354 = !DILocation(line: 505, column: 26, scope: !9272)
!9355 = !DILocation(line: 505, column: 2, scope: !9272)
!9356 = !DILocation(line: 506, column: 2, scope: !9272)
!9357 = !DILocation(line: 507, column: 1, scope: !9272)
!9358 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1497, file: !1497, line: 509, type: !1408, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9359)
!9359 = !{!9360, !9361, !9362}
!9360 = !DILocalVariable(name: "dev", arg: 1, scope: !9358, file: !1497, line: 509, type: !1370)
!9361 = !DILocalVariable(name: "cfg", arg: 2, scope: !9358, file: !1497, line: 510, type: !1410)
!9362 = !DILocalVariable(name: "data", scope: !9358, file: !1497, line: 512, type: !9278)
!9363 = !DILocation(line: 0, scope: !9358)
!9364 = !DILocation(line: 512, column: 38, scope: !9358)
!9365 = !DILocation(line: 514, column: 24, scope: !9358)
!9366 = !DILocation(line: 514, column: 7, scope: !9358)
!9367 = !DILocation(line: 514, column: 16, scope: !9358)
!9368 = !DILocation(line: 515, column: 41, scope: !9358)
!9369 = !{i32 0, i32 1537}
!9370 = !DILocation(line: 515, column: 16, scope: !9358)
!9371 = !DILocation(line: 515, column: 7, scope: !9358)
!9372 = !DILocation(line: 515, column: 14, scope: !9358)
!9373 = !DILocation(line: 517, column: 3, scope: !9358)
!9374 = !{i32 0, i32 12289}
!9375 = !DILocation(line: 516, column: 19, scope: !9358)
!9376 = !DILocation(line: 516, column: 7, scope: !9358)
!9377 = !DILocation(line: 516, column: 17, scope: !9358)
!9378 = !DILocation(line: 519, column: 3, scope: !9358)
!9379 = !DILocation(line: 519, column: 33, scope: !9358)
!9380 = !DILocation(line: 518, column: 19, scope: !9358)
!9381 = !DILocation(line: 518, column: 7, scope: !9358)
!9382 = !DILocation(line: 518, column: 17, scope: !9358)
!9383 = !DILocation(line: 521, column: 3, scope: !9358)
!9384 = !{i32 0, i32 769}
!9385 = !DILocation(line: 520, column: 19, scope: !9358)
!9386 = !DILocation(line: 520, column: 7, scope: !9358)
!9387 = !DILocation(line: 520, column: 17, scope: !9358)
!9388 = !DILocation(line: 522, column: 2, scope: !9358)
!9389 = distinct !DISubprogram(name: "uart_stm32_fifo_fill", scope: !1497, file: !1497, line: 661, type: !1413, scopeLine: 664, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9390)
!9390 = !{!9391, !9392, !9393, !9394, !9395, !9396}
!9391 = !DILocalVariable(name: "dev", arg: 1, scope: !9389, file: !1497, line: 661, type: !1370)
!9392 = !DILocalVariable(name: "tx_data", arg: 2, scope: !9389, file: !1497, line: 662, type: !176)
!9393 = !DILocalVariable(name: "size", arg: 3, scope: !9389, file: !1497, line: 663, type: !107)
!9394 = !DILocalVariable(name: "config", scope: !9389, file: !1497, line: 665, type: !9155)
!9395 = !DILocalVariable(name: "num_tx", scope: !9389, file: !1497, line: 666, type: !133)
!9396 = !DILocalVariable(name: "key", scope: !9389, file: !1497, line: 667, type: !32)
!9397 = !DILocation(line: 0, scope: !9389)
!9398 = !DILocation(line: 665, column: 48, scope: !9389)
!9399 = !DILocation(line: 669, column: 41, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9389, file: !1497, line: 669, column: 6)
!9401 = !DILocation(line: 669, column: 7, scope: !9400)
!9402 = !DILocation(line: 669, column: 6, scope: !9389)
!9403 = !DILocation(line: 55, column: 2, scope: !9190, inlinedAt: !9404)
!9404 = distinct !DILocation(line: 674, column: 8, scope: !9389)
!9405 = !DILocation(line: 0, scope: !9190, inlinedAt: !9404)
!9406 = !DILocation(line: 676, column: 24, scope: !9389)
!9407 = !DILocation(line: 676, column: 29, scope: !9389)
!9408 = !DILocation(line: 677, column: 43, scope: !9389)
!9409 = !DILocation(line: 677, column: 9, scope: !9389)
!9410 = !DILocation(line: 676, column: 2, scope: !9389)
!9411 = !DILocation(line: 681, column: 34, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9389, file: !1497, line: 677, column: 51)
!9413 = !DILocation(line: 681, column: 55, scope: !9412)
!9414 = !DILocation(line: 681, column: 41, scope: !9412)
!9415 = !DILocation(line: 681, column: 3, scope: !9412)
!9416 = !DILocation(line: 676, column: 17, scope: !9389)
!9417 = distinct !{!9417, !9410, !9418}
!9418 = !DILocation(line: 682, column: 2, scope: !9389)
!9419 = !DILocation(line: 0, scope: !9203, inlinedAt: !9420)
!9420 = distinct !DILocation(line: 684, column: 2, scope: !9389)
!9421 = !DILocation(line: 95, column: 2, scope: !9203, inlinedAt: !9420)
!9422 = !DILocation(line: 686, column: 2, scope: !9389)
!9423 = !DILocation(line: 687, column: 1, scope: !9389)
!9424 = distinct !DISubprogram(name: "uart_stm32_fifo_read", scope: !1497, file: !1497, line: 689, type: !1417, scopeLine: 691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9425)
!9425 = !{!9426, !9427, !9428, !9429, !9430}
!9426 = !DILocalVariable(name: "dev", arg: 1, scope: !9424, file: !1497, line: 689, type: !1370)
!9427 = !DILocalVariable(name: "rx_data", arg: 2, scope: !9424, file: !1497, line: 689, type: !182)
!9428 = !DILocalVariable(name: "size", arg: 3, scope: !9424, file: !1497, line: 690, type: !183)
!9429 = !DILocalVariable(name: "config", scope: !9424, file: !1497, line: 692, type: !9155)
!9430 = !DILocalVariable(name: "num_rx", scope: !9424, file: !1497, line: 693, type: !133)
!9431 = !DILocation(line: 0, scope: !9424)
!9432 = !DILocation(line: 692, column: 48, scope: !9424)
!9433 = !DILocation(line: 696, column: 44, scope: !9424)
!9434 = !DILocation(line: 695, column: 24, scope: !9424)
!9435 = !DILocation(line: 695, column: 29, scope: !9424)
!9436 = !DILocation(line: 696, column: 9, scope: !9424)
!9437 = !DILocation(line: 695, column: 2, scope: !9424)
!9438 = !DILocation(line: 700, column: 53, scope: !9439)
!9439 = distinct !DILexicalBlock(scope: !9424, file: !1497, line: 696, column: 52)
!9440 = !DILocation(line: 700, column: 23, scope: !9439)
!9441 = !DILocation(line: 700, column: 17, scope: !9439)
!9442 = !DILocation(line: 700, column: 3, scope: !9439)
!9443 = !DILocation(line: 700, column: 21, scope: !9439)
!9444 = !DILocation(line: 703, column: 41, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9439, file: !1497, line: 703, column: 7)
!9446 = !DILocation(line: 703, column: 7, scope: !9445)
!9447 = !DILocation(line: 703, column: 7, scope: !9439)
!9448 = !DILocation(line: 704, column: 35, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9445, file: !1497, line: 703, column: 49)
!9450 = !DILocation(line: 704, column: 4, scope: !9449)
!9451 = !DILocation(line: 709, column: 3, scope: !9449)
!9452 = !DILocation(line: 695, column: 17, scope: !9424)
!9453 = distinct !{!9453, !9437, !9454}
!9454 = !DILocation(line: 710, column: 2, scope: !9424)
!9455 = !DILocation(line: 712, column: 2, scope: !9424)
!9456 = distinct !DISubprogram(name: "uart_stm32_irq_tx_enable", scope: !1497, file: !1497, line: 715, type: !1421, scopeLine: 716, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9457)
!9457 = !{!9458, !9459}
!9458 = !DILocalVariable(name: "dev", arg: 1, scope: !9456, file: !1497, line: 715, type: !1370)
!9459 = !DILocalVariable(name: "config", scope: !9456, file: !1497, line: 717, type: !9155)
!9460 = !DILocation(line: 0, scope: !9456)
!9461 = !DILocation(line: 717, column: 48, scope: !9456)
!9462 = !DILocation(line: 729, column: 31, scope: !9456)
!9463 = !DILocation(line: 729, column: 2, scope: !9456)
!9464 = !DILocation(line: 734, column: 1, scope: !9456)
!9465 = distinct !DISubprogram(name: "uart_stm32_irq_tx_disable", scope: !1497, file: !1497, line: 736, type: !1421, scopeLine: 737, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9466)
!9466 = !{!9467, !9468}
!9467 = !DILocalVariable(name: "dev", arg: 1, scope: !9465, file: !1497, line: 736, type: !1370)
!9468 = !DILocalVariable(name: "config", scope: !9465, file: !1497, line: 738, type: !9155)
!9469 = !DILocation(line: 0, scope: !9465)
!9470 = !DILocation(line: 738, column: 48, scope: !9465)
!9471 = !DILocation(line: 746, column: 32, scope: !9465)
!9472 = !DILocation(line: 746, column: 2, scope: !9465)
!9473 = !DILocation(line: 756, column: 1, scope: !9465)
!9474 = distinct !DISubprogram(name: "uart_stm32_irq_tx_ready", scope: !1497, file: !1497, line: 758, type: !1391, scopeLine: 759, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9475)
!9475 = !{!9476, !9477}
!9476 = !DILocalVariable(name: "dev", arg: 1, scope: !9474, file: !1497, line: 758, type: !1370)
!9477 = !DILocalVariable(name: "config", scope: !9474, file: !1497, line: 760, type: !9155)
!9478 = !DILocation(line: 0, scope: !9474)
!9479 = !DILocation(line: 760, column: 48, scope: !9474)
!9480 = !DILocation(line: 762, column: 43, scope: !9474)
!9481 = !DILocation(line: 762, column: 9, scope: !9474)
!9482 = !DILocation(line: 762, column: 50, scope: !9474)
!9483 = !DILocation(line: 763, column: 35, scope: !9474)
!9484 = !DILocation(line: 763, column: 3, scope: !9474)
!9485 = !DILocation(line: 762, column: 2, scope: !9474)
!9486 = distinct !DISubprogram(name: "uart_stm32_irq_rx_enable", scope: !1497, file: !1497, line: 773, type: !1421, scopeLine: 774, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9487)
!9487 = !{!9488, !9489}
!9488 = !DILocalVariable(name: "dev", arg: 1, scope: !9486, file: !1497, line: 773, type: !1370)
!9489 = !DILocalVariable(name: "config", scope: !9486, file: !1497, line: 775, type: !9155)
!9490 = !DILocation(line: 0, scope: !9486)
!9491 = !DILocation(line: 775, column: 48, scope: !9486)
!9492 = !DILocation(line: 777, column: 33, scope: !9486)
!9493 = !DILocation(line: 777, column: 2, scope: !9486)
!9494 = !DILocation(line: 778, column: 1, scope: !9486)
!9495 = distinct !DISubprogram(name: "uart_stm32_irq_rx_disable", scope: !1497, file: !1497, line: 780, type: !1421, scopeLine: 781, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9496)
!9496 = !{!9497, !9498}
!9497 = !DILocalVariable(name: "dev", arg: 1, scope: !9495, file: !1497, line: 780, type: !1370)
!9498 = !DILocalVariable(name: "config", scope: !9495, file: !1497, line: 782, type: !9155)
!9499 = !DILocation(line: 0, scope: !9495)
!9500 = !DILocation(line: 782, column: 48, scope: !9495)
!9501 = !DILocation(line: 784, column: 34, scope: !9495)
!9502 = !DILocation(line: 784, column: 2, scope: !9495)
!9503 = !DILocation(line: 785, column: 1, scope: !9495)
!9504 = distinct !DISubprogram(name: "uart_stm32_irq_tx_complete", scope: !1497, file: !1497, line: 766, type: !1391, scopeLine: 767, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9505)
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "dev", arg: 1, scope: !9504, file: !1497, line: 766, type: !1370)
!9507 = !DILocalVariable(name: "config", scope: !9504, file: !1497, line: 768, type: !9155)
!9508 = !DILocation(line: 0, scope: !9504)
!9509 = !DILocation(line: 768, column: 48, scope: !9504)
!9510 = !DILocation(line: 770, column: 42, scope: !9504)
!9511 = !DILocation(line: 770, column: 9, scope: !9504)
!9512 = !DILocation(line: 770, column: 2, scope: !9504)
!9513 = distinct !DISubprogram(name: "uart_stm32_irq_rx_ready", scope: !1497, file: !1497, line: 787, type: !1391, scopeLine: 788, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9514)
!9514 = !{!9515, !9516}
!9515 = !DILocalVariable(name: "dev", arg: 1, scope: !9513, file: !1497, line: 787, type: !1370)
!9516 = !DILocalVariable(name: "config", scope: !9513, file: !1497, line: 789, type: !9155)
!9517 = !DILocation(line: 0, scope: !9513)
!9518 = !DILocation(line: 789, column: 48, scope: !9513)
!9519 = !DILocation(line: 794, column: 44, scope: !9513)
!9520 = !DILocation(line: 794, column: 9, scope: !9513)
!9521 = !DILocation(line: 794, column: 2, scope: !9513)
!9522 = distinct !DISubprogram(name: "uart_stm32_irq_err_enable", scope: !1497, file: !1497, line: 797, type: !1421, scopeLine: 798, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9523)
!9523 = !{!9524, !9525}
!9524 = !DILocalVariable(name: "dev", arg: 1, scope: !9522, file: !1497, line: 797, type: !1370)
!9525 = !DILocalVariable(name: "config", scope: !9522, file: !1497, line: 799, type: !9155)
!9526 = !DILocation(line: 0, scope: !9522)
!9527 = !DILocation(line: 799, column: 48, scope: !9522)
!9528 = !DILocation(line: 802, column: 34, scope: !9522)
!9529 = !DILocation(line: 802, column: 2, scope: !9522)
!9530 = !DILocation(line: 805, column: 6, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9522, file: !1497, line: 805, column: 6)
!9532 = !DILocation(line: 806, column: 3, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9531, file: !1497, line: 805, column: 43)
!9534 = !DILocation(line: 810, column: 31, scope: !9522)
!9535 = !DILocation(line: 807, column: 2, scope: !9533)
!9536 = !DILocation(line: 810, column: 2, scope: !9522)
!9537 = !DILocation(line: 811, column: 1, scope: !9522)
!9538 = distinct !DISubprogram(name: "uart_stm32_irq_err_disable", scope: !1497, file: !1497, line: 813, type: !1421, scopeLine: 814, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9539)
!9539 = !{!9540, !9541}
!9540 = !DILocalVariable(name: "dev", arg: 1, scope: !9538, file: !1497, line: 813, type: !1370)
!9541 = !DILocalVariable(name: "config", scope: !9538, file: !1497, line: 815, type: !9155)
!9542 = !DILocation(line: 0, scope: !9538)
!9543 = !DILocation(line: 815, column: 48, scope: !9538)
!9544 = !DILocation(line: 818, column: 35, scope: !9538)
!9545 = !DILocation(line: 818, column: 2, scope: !9538)
!9546 = !DILocation(line: 821, column: 6, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9538, file: !1497, line: 821, column: 6)
!9548 = !DILocation(line: 822, column: 3, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9547, file: !1497, line: 821, column: 43)
!9550 = !DILocation(line: 826, column: 32, scope: !9538)
!9551 = !DILocation(line: 823, column: 2, scope: !9549)
!9552 = !DILocation(line: 826, column: 2, scope: !9538)
!9553 = !DILocation(line: 827, column: 1, scope: !9538)
!9554 = distinct !DISubprogram(name: "uart_stm32_irq_is_pending", scope: !1497, file: !1497, line: 829, type: !1391, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9555)
!9555 = !{!9556, !9557}
!9556 = !DILocalVariable(name: "dev", arg: 1, scope: !9554, file: !1497, line: 829, type: !1370)
!9557 = !DILocalVariable(name: "config", scope: !9554, file: !1497, line: 831, type: !9155)
!9558 = !DILocation(line: 0, scope: !9554)
!9559 = !DILocation(line: 831, column: 48, scope: !9554)
!9560 = !DILocation(line: 833, column: 46, scope: !9554)
!9561 = !DILocation(line: 833, column: 11, scope: !9554)
!9562 = !DILocation(line: 833, column: 53, scope: !9554)
!9563 = !DILocation(line: 834, column: 38, scope: !9554)
!9564 = !DILocation(line: 834, column: 4, scope: !9554)
!9565 = !DILocation(line: 834, column: 46, scope: !9554)
!9566 = !DILocation(line: 835, column: 37, scope: !9554)
!9567 = !DILocation(line: 835, column: 4, scope: !9554)
!9568 = !DILocation(line: 835, column: 44, scope: !9554)
!9569 = !DILocation(line: 836, column: 36, scope: !9554)
!9570 = !DILocation(line: 836, column: 4, scope: !9554)
!9571 = !DILocation(line: 833, column: 2, scope: !9554)
!9572 = distinct !DISubprogram(name: "uart_stm32_irq_update", scope: !1497, file: !1497, line: 839, type: !1391, scopeLine: 840, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9573)
!9573 = !{!9574}
!9574 = !DILocalVariable(name: "dev", arg: 1, scope: !9572, file: !1497, line: 839, type: !1370)
!9575 = !DILocation(line: 0, scope: !9572)
!9576 = !DILocation(line: 841, column: 2, scope: !9572)
!9577 = distinct !DISubprogram(name: "uart_stm32_irq_callback_set", scope: !1497, file: !1497, line: 844, type: !1435, scopeLine: 847, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9578)
!9578 = !{!9579, !9580, !9581, !9582}
!9579 = !DILocalVariable(name: "dev", arg: 1, scope: !9577, file: !1497, line: 844, type: !1370)
!9580 = !DILocalVariable(name: "cb", arg: 2, scope: !9577, file: !1497, line: 845, type: !1437)
!9581 = !DILocalVariable(name: "cb_data", arg: 3, scope: !9577, file: !1497, line: 846, type: !102)
!9582 = !DILocalVariable(name: "data", scope: !9577, file: !1497, line: 848, type: !9278)
!9583 = !DILocation(line: 0, scope: !9577)
!9584 = !DILocation(line: 848, column: 38, scope: !9577)
!9585 = !DILocation(line: 850, column: 8, scope: !9577)
!9586 = !DILocation(line: 850, column: 16, scope: !9577)
!9587 = !DILocation(line: 851, column: 8, scope: !9577)
!9588 = !DILocation(line: 851, column: 18, scope: !9577)
!9589 = !DILocation(line: 852, column: 1, scope: !9577)
!9590 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !9591, file: !9591, line: 1792, type: !9592, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9594)
!9591 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9592 = !DISubroutineType(types: !9593)
!9593 = !{!162, !1441}
!9594 = !{!9595}
!9595 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9590, file: !9591, line: 1792, type: !1441)
!9596 = !DILocation(line: 0, scope: !9590)
!9597 = !DILocation(line: 1794, column: 11, scope: !9590)
!9598 = !DILocation(line: 1794, column: 47, scope: !9590)
!9599 = !DILocation(line: 1794, column: 3, scope: !9590)
!9600 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_RXNE", scope: !9591, file: !9591, line: 2227, type: !9592, scopeLine: 2228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9601)
!9601 = !{!9602}
!9602 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9600, file: !9591, line: 2227, type: !1441)
!9603 = !DILocation(line: 0, scope: !9600)
!9604 = !DILocation(line: 2229, column: 11, scope: !9600)
!9605 = !DILocation(line: 2229, column: 51, scope: !9600)
!9606 = !DILocation(line: 2229, column: 3, scope: !9600)
!9607 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TC", scope: !9591, file: !9591, line: 1803, type: !9592, scopeLine: 1804, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9608)
!9608 = !{!9609}
!9609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9607, file: !9591, line: 1803, type: !1441)
!9610 = !DILocation(line: 0, scope: !9607)
!9611 = !DILocation(line: 1805, column: 11, scope: !9607)
!9612 = !DILocation(line: 1805, column: 45, scope: !9607)
!9613 = !DILocation(line: 1805, column: 3, scope: !9607)
!9614 = distinct !DISubprogram(name: "LL_USART_IsEnabledIT_TC", scope: !9591, file: !9591, line: 2238, type: !9592, scopeLine: 2239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9615)
!9615 = !{!9616}
!9616 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9614, file: !9591, line: 2238, type: !1441)
!9617 = !DILocation(line: 0, scope: !9614)
!9618 = !DILocation(line: 2240, column: 11, scope: !9614)
!9619 = !DILocation(line: 2240, column: 49, scope: !9614)
!9620 = !DILocation(line: 2240, column: 3, scope: !9614)
!9621 = distinct !DISubprogram(name: "LL_USART_DisableIT_ERROR", scope: !9591, file: !9591, line: 2192, type: !9622, scopeLine: 2193, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9624)
!9622 = !DISubroutineType(types: !9623)
!9623 = !{null, !1441}
!9624 = !{!9625, !9626}
!9625 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9621, file: !9591, line: 2192, type: !1441)
!9626 = !DILocalVariable(name: "val", scope: !9627, file: !9591, line: 2194, type: !162)
!9627 = distinct !DILexicalBlock(scope: !9621, file: !9591, line: 2194, column: 3)
!9628 = !DILocation(line: 0, scope: !9621)
!9629 = !DILocation(line: 2194, column: 3, scope: !9627)
!9630 = !DILocalVariable(name: "addr", arg: 1, scope: !9631, file: !6088, line: 476, type: !1493)
!9631 = distinct !DISubprogram(name: "__LDREXW", scope: !6088, file: !6088, line: 476, type: !9632, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9634)
!9632 = !DISubroutineType(types: !9633)
!9633 = !{!162, !1493}
!9634 = !{!9630, !9635}
!9635 = !DILocalVariable(name: "result", scope: !9631, file: !6088, line: 478, type: !162)
!9636 = !DILocation(line: 0, scope: !9631, inlinedAt: !9637)
!9637 = distinct !DILocation(line: 2194, column: 3, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9627, file: !9591, line: 2194, column: 3)
!9639 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9637)
!9640 = !{i64 3527444}
!9641 = !DILocation(line: 2194, column: 3, scope: !9638)
!9642 = !DILocation(line: 0, scope: !9627)
!9643 = !DILocalVariable(name: "value", arg: 1, scope: !9644, file: !6088, line: 527, type: !162)
!9644 = distinct !DISubprogram(name: "__STREXW", scope: !6088, file: !6088, line: 527, type: !9645, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9647)
!9645 = !DISubroutineType(types: !9646)
!9646 = !{!162, !162, !1493}
!9647 = !{!9643, !9648, !9649}
!9648 = !DILocalVariable(name: "addr", arg: 2, scope: !9644, file: !6088, line: 527, type: !1493)
!9649 = !DILocalVariable(name: "result", scope: !9644, file: !6088, line: 529, type: !162)
!9650 = !DILocation(line: 0, scope: !9644, inlinedAt: !9651)
!9651 = distinct !DILocation(line: 2194, column: 3, scope: !9627)
!9652 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9651)
!9653 = !{i64 3528880}
!9654 = distinct !{!9654, !9629, !9629}
!9655 = !DILocation(line: 2195, column: 1, scope: !9621)
!9656 = distinct !DISubprogram(name: "LL_USART_DisableIT_LBD", scope: !9591, file: !9591, line: 2177, type: !9622, scopeLine: 2178, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9657)
!9657 = !{!9658}
!9658 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9656, file: !9591, line: 2177, type: !1441)
!9659 = !DILocation(line: 0, scope: !9656)
!9660 = !DILocation(line: 2179, column: 3, scope: !9656)
!9661 = !DILocation(line: 2180, column: 1, scope: !9656)
!9662 = distinct !DISubprogram(name: "LL_USART_DisableIT_PE", scope: !9591, file: !9591, line: 2164, type: !9622, scopeLine: 2165, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9663)
!9663 = !{!9664, !9665}
!9664 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9662, file: !9591, line: 2164, type: !1441)
!9665 = !DILocalVariable(name: "val", scope: !9666, file: !9591, line: 2166, type: !162)
!9666 = distinct !DILexicalBlock(scope: !9662, file: !9591, line: 2166, column: 3)
!9667 = !DILocation(line: 0, scope: !9662)
!9668 = !DILocation(line: 2166, column: 3, scope: !9666)
!9669 = !DILocation(line: 0, scope: !9631, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 2166, column: 3, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9666, file: !9591, line: 2166, column: 3)
!9672 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9670)
!9673 = !DILocation(line: 2166, column: 3, scope: !9671)
!9674 = !DILocation(line: 0, scope: !9666)
!9675 = !DILocation(line: 0, scope: !9644, inlinedAt: !9676)
!9676 = distinct !DILocation(line: 2166, column: 3, scope: !9666)
!9677 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9676)
!9678 = distinct !{!9678, !9668, !9668}
!9679 = !DILocation(line: 2167, column: 1, scope: !9662)
!9680 = distinct !DISubprogram(name: "LL_USART_EnableIT_ERROR", scope: !9591, file: !9591, line: 2096, type: !9622, scopeLine: 2097, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9681)
!9681 = !{!9682, !9683}
!9682 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9680, file: !9591, line: 2096, type: !1441)
!9683 = !DILocalVariable(name: "val", scope: !9684, file: !9591, line: 2098, type: !162)
!9684 = distinct !DILexicalBlock(scope: !9680, file: !9591, line: 2098, column: 3)
!9685 = !DILocation(line: 0, scope: !9680)
!9686 = !DILocation(line: 2098, column: 3, scope: !9684)
!9687 = !DILocation(line: 0, scope: !9631, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 2098, column: 3, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9684, file: !9591, line: 2098, column: 3)
!9690 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9688)
!9691 = !DILocation(line: 2098, column: 3, scope: !9689)
!9692 = !DILocation(line: 0, scope: !9684)
!9693 = !DILocation(line: 0, scope: !9644, inlinedAt: !9694)
!9694 = distinct !DILocation(line: 2098, column: 3, scope: !9684)
!9695 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9694)
!9696 = distinct !{!9696, !9686, !9686}
!9697 = !DILocation(line: 2099, column: 1, scope: !9680)
!9698 = distinct !DISubprogram(name: "LL_USART_EnableIT_LBD", scope: !9591, file: !9591, line: 2081, type: !9622, scopeLine: 2082, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9699)
!9699 = !{!9700}
!9700 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9698, file: !9591, line: 2081, type: !1441)
!9701 = !DILocation(line: 0, scope: !9698)
!9702 = !DILocation(line: 2083, column: 3, scope: !9698)
!9703 = !DILocation(line: 2084, column: 1, scope: !9698)
!9704 = distinct !DISubprogram(name: "LL_USART_EnableIT_PE", scope: !9591, file: !9591, line: 2068, type: !9622, scopeLine: 2069, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9705)
!9705 = !{!9706, !9707}
!9706 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9704, file: !9591, line: 2068, type: !1441)
!9707 = !DILocalVariable(name: "val", scope: !9708, file: !9591, line: 2070, type: !162)
!9708 = distinct !DILexicalBlock(scope: !9704, file: !9591, line: 2070, column: 3)
!9709 = !DILocation(line: 0, scope: !9704)
!9710 = !DILocation(line: 2070, column: 3, scope: !9708)
!9711 = !DILocation(line: 0, scope: !9631, inlinedAt: !9712)
!9712 = distinct !DILocation(line: 2070, column: 3, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9708, file: !9591, line: 2070, column: 3)
!9714 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9712)
!9715 = !DILocation(line: 2070, column: 3, scope: !9713)
!9716 = !DILocation(line: 0, scope: !9708)
!9717 = !DILocation(line: 0, scope: !9644, inlinedAt: !9718)
!9718 = distinct !DILocation(line: 2070, column: 3, scope: !9708)
!9719 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9718)
!9720 = distinct !{!9720, !9710, !9710}
!9721 = !DILocation(line: 2071, column: 1, scope: !9704)
!9722 = distinct !DISubprogram(name: "LL_USART_DisableIT_RXNE", scope: !9591, file: !9591, line: 2131, type: !9622, scopeLine: 2132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9723)
!9723 = !{!9724, !9725}
!9724 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9722, file: !9591, line: 2131, type: !1441)
!9725 = !DILocalVariable(name: "val", scope: !9726, file: !9591, line: 2133, type: !162)
!9726 = distinct !DILexicalBlock(scope: !9722, file: !9591, line: 2133, column: 3)
!9727 = !DILocation(line: 0, scope: !9722)
!9728 = !DILocation(line: 2133, column: 3, scope: !9726)
!9729 = !DILocation(line: 0, scope: !9631, inlinedAt: !9730)
!9730 = distinct !DILocation(line: 2133, column: 3, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9726, file: !9591, line: 2133, column: 3)
!9732 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9730)
!9733 = !DILocation(line: 2133, column: 3, scope: !9731)
!9734 = !DILocation(line: 0, scope: !9726)
!9735 = !DILocation(line: 0, scope: !9644, inlinedAt: !9736)
!9736 = distinct !DILocation(line: 2133, column: 3, scope: !9726)
!9737 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9736)
!9738 = distinct !{!9738, !9728, !9728}
!9739 = !DILocation(line: 2134, column: 1, scope: !9722)
!9740 = distinct !DISubprogram(name: "LL_USART_EnableIT_RXNE", scope: !9591, file: !9591, line: 2035, type: !9622, scopeLine: 2036, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9741)
!9741 = !{!9742, !9743}
!9742 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9740, file: !9591, line: 2035, type: !1441)
!9743 = !DILocalVariable(name: "val", scope: !9744, file: !9591, line: 2037, type: !162)
!9744 = distinct !DILexicalBlock(scope: !9740, file: !9591, line: 2037, column: 3)
!9745 = !DILocation(line: 0, scope: !9740)
!9746 = !DILocation(line: 2037, column: 3, scope: !9744)
!9747 = !DILocation(line: 0, scope: !9631, inlinedAt: !9748)
!9748 = distinct !DILocation(line: 2037, column: 3, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9744, file: !9591, line: 2037, column: 3)
!9750 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9748)
!9751 = !DILocation(line: 2037, column: 3, scope: !9749)
!9752 = !DILocation(line: 0, scope: !9744)
!9753 = !DILocation(line: 0, scope: !9644, inlinedAt: !9754)
!9754 = distinct !DILocation(line: 2037, column: 3, scope: !9744)
!9755 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9754)
!9756 = distinct !{!9756, !9746, !9746}
!9757 = !DILocation(line: 2038, column: 1, scope: !9740)
!9758 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !9591, file: !9591, line: 1814, type: !9592, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9759)
!9759 = !{!9760}
!9760 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9758, file: !9591, line: 1814, type: !1441)
!9761 = !DILocation(line: 0, scope: !9758)
!9762 = !DILocation(line: 1816, column: 11, scope: !9758)
!9763 = !DILocation(line: 1816, column: 46, scope: !9758)
!9764 = !DILocation(line: 1816, column: 3, scope: !9758)
!9765 = distinct !DISubprogram(name: "LL_USART_DisableIT_TC", scope: !9591, file: !9591, line: 2142, type: !9622, scopeLine: 2143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9766)
!9766 = !{!9767, !9768}
!9767 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9765, file: !9591, line: 2142, type: !1441)
!9768 = !DILocalVariable(name: "val", scope: !9769, file: !9591, line: 2144, type: !162)
!9769 = distinct !DILexicalBlock(scope: !9765, file: !9591, line: 2144, column: 3)
!9770 = !DILocation(line: 0, scope: !9765)
!9771 = !DILocation(line: 2144, column: 3, scope: !9769)
!9772 = !DILocation(line: 0, scope: !9631, inlinedAt: !9773)
!9773 = distinct !DILocation(line: 2144, column: 3, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9769, file: !9591, line: 2144, column: 3)
!9775 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9773)
!9776 = !DILocation(line: 2144, column: 3, scope: !9774)
!9777 = !DILocation(line: 0, scope: !9769)
!9778 = !DILocation(line: 0, scope: !9644, inlinedAt: !9779)
!9779 = distinct !DILocation(line: 2144, column: 3, scope: !9769)
!9780 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9779)
!9781 = distinct !{!9781, !9771, !9771}
!9782 = !DILocation(line: 2145, column: 1, scope: !9765)
!9783 = distinct !DISubprogram(name: "LL_USART_EnableIT_TC", scope: !9591, file: !9591, line: 2046, type: !9622, scopeLine: 2047, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9784)
!9784 = !{!9785, !9786}
!9785 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9783, file: !9591, line: 2046, type: !1441)
!9786 = !DILocalVariable(name: "val", scope: !9787, file: !9591, line: 2048, type: !162)
!9787 = distinct !DILexicalBlock(scope: !9783, file: !9591, line: 2048, column: 3)
!9788 = !DILocation(line: 0, scope: !9783)
!9789 = !DILocation(line: 2048, column: 3, scope: !9787)
!9790 = !DILocation(line: 0, scope: !9631, inlinedAt: !9791)
!9791 = distinct !DILocation(line: 2048, column: 3, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9787, file: !9591, line: 2048, column: 3)
!9793 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !9791)
!9794 = !DILocation(line: 2048, column: 3, scope: !9792)
!9795 = !DILocation(line: 0, scope: !9787)
!9796 = !DILocation(line: 0, scope: !9644, inlinedAt: !9797)
!9797 = distinct !DILocation(line: 2048, column: 3, scope: !9787)
!9798 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !9797)
!9799 = distinct !{!9799, !9789, !9789}
!9800 = !DILocation(line: 2049, column: 1, scope: !9783)
!9801 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !9591, file: !9591, line: 2403, type: !9802, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9804)
!9802 = !DISubroutineType(types: !9803)
!9803 = !{!133, !1441}
!9804 = !{!9805}
!9805 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9801, file: !9591, line: 2403, type: !1441)
!9806 = !DILocation(line: 0, scope: !9801)
!9807 = !DILocation(line: 2405, column: 20, scope: !9801)
!9808 = !DILocation(line: 2405, column: 10, scope: !9801)
!9809 = !DILocation(line: 2405, column: 3, scope: !9801)
!9810 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !9591, file: !9591, line: 1770, type: !9592, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9811)
!9811 = !{!9812}
!9812 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9810, file: !9591, line: 1770, type: !1441)
!9813 = !DILocation(line: 0, scope: !9810)
!9814 = !DILocation(line: 1772, column: 11, scope: !9810)
!9815 = !DILocation(line: 1772, column: 46, scope: !9810)
!9816 = !DILocation(line: 1772, column: 3, scope: !9810)
!9817 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !9591, file: !9591, line: 1934, type: !9622, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9818)
!9818 = !{!9819, !9820}
!9819 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9817, file: !9591, line: 1934, type: !1441)
!9820 = !DILocalVariable(name: "tmpreg", scope: !9817, file: !9591, line: 1936, type: !283)
!9821 = !DILocation(line: 0, scope: !9817)
!9822 = !DILocation(line: 1936, column: 3, scope: !9817)
!9823 = !DILocation(line: 1936, column: 17, scope: !9817)
!9824 = !DILocation(line: 1937, column: 20, scope: !9817)
!9825 = !DILocation(line: 1937, column: 10, scope: !9817)
!9826 = !DILocation(line: 1938, column: 10, scope: !9817)
!9827 = !DILocation(line: 1939, column: 20, scope: !9817)
!9828 = !DILocation(line: 1939, column: 10, scope: !9817)
!9829 = !DILocation(line: 1940, column: 10, scope: !9817)
!9830 = !DILocation(line: 1941, column: 1, scope: !9817)
!9831 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !9591, file: !9591, line: 2426, type: !9832, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9834)
!9832 = !DISubroutineType(types: !9833)
!9833 = !{null, !1441, !133}
!9834 = !{!9835, !9836}
!9835 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9831, file: !9591, line: 2426, type: !1441)
!9836 = !DILocalVariable(name: "Value", arg: 2, scope: !9831, file: !9591, line: 2426, type: !133)
!9837 = !DILocation(line: 0, scope: !9831)
!9838 = !DILocation(line: 2428, column: 16, scope: !9831)
!9839 = !DILocation(line: 2428, column: 11, scope: !9831)
!9840 = !DILocation(line: 2428, column: 14, scope: !9831)
!9841 = !DILocation(line: 2429, column: 1, scope: !9831)
!9842 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1497, file: !1497, line: 205, type: !9843, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9845)
!9843 = !DISubroutineType(types: !9844)
!9844 = !{!162, !1370}
!9845 = !{!9846, !9847}
!9846 = !DILocalVariable(name: "dev", arg: 1, scope: !9842, file: !1497, line: 205, type: !1370)
!9847 = !DILocalVariable(name: "config", scope: !9842, file: !1497, line: 207, type: !9155)
!9848 = !DILocation(line: 0, scope: !9842)
!9849 = !DILocation(line: 207, column: 48, scope: !9842)
!9850 = !DILocation(line: 209, column: 36, scope: !9842)
!9851 = !DILocation(line: 209, column: 9, scope: !9842)
!9852 = !DILocation(line: 209, column: 2, scope: !9842)
!9853 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1497, file: !1497, line: 270, type: !9854, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9856)
!9854 = !DISubroutineType(types: !9855)
!9855 = !{!1336, !162}
!9856 = !{!9857}
!9857 = !DILocalVariable(name: "parity", arg: 1, scope: !9853, file: !1497, line: 270, type: !162)
!9858 = !DILocation(line: 0, scope: !9853)
!9859 = !DILocation(line: 272, column: 2, scope: !9853)
!9860 = !DILocation(line: 281, column: 1, scope: !9853)
!9861 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1497, file: !1497, line: 220, type: !9843, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9862)
!9862 = !{!9863, !9864}
!9863 = !DILocalVariable(name: "dev", arg: 1, scope: !9861, file: !1497, line: 220, type: !1370)
!9864 = !DILocalVariable(name: "config", scope: !9861, file: !1497, line: 222, type: !9155)
!9865 = !DILocation(line: 0, scope: !9861)
!9866 = !DILocation(line: 222, column: 48, scope: !9861)
!9867 = !DILocation(line: 224, column: 44, scope: !9861)
!9868 = !DILocation(line: 224, column: 9, scope: !9861)
!9869 = !DILocation(line: 224, column: 2, scope: !9861)
!9870 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1497, file: !1497, line: 304, type: !9871, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9873)
!9871 = !DISubroutineType(types: !9872)
!9872 = !{!1350, !162}
!9873 = !{!9874}
!9874 = !DILocalVariable(name: "sb", arg: 1, scope: !9870, file: !1497, line: 304, type: !162)
!9875 = !DILocation(line: 0, scope: !9870)
!9876 = !DILocation(line: 306, column: 2, scope: !9870)
!9877 = !DILocation(line: 0, scope: !9878)
!9878 = distinct !DILexicalBlock(scope: !9870, file: !1497, line: 306, column: 14)
!9879 = !DILocation(line: 323, column: 1, scope: !9870)
!9880 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1497, file: !1497, line: 235, type: !9843, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9881)
!9881 = !{!9882, !9883}
!9882 = !DILocalVariable(name: "dev", arg: 1, scope: !9880, file: !1497, line: 235, type: !1370)
!9883 = !DILocalVariable(name: "config", scope: !9880, file: !1497, line: 237, type: !9155)
!9884 = !DILocation(line: 0, scope: !9880)
!9885 = !DILocation(line: 237, column: 48, scope: !9880)
!9886 = !DILocation(line: 239, column: 39, scope: !9880)
!9887 = !DILocation(line: 239, column: 9, scope: !9880)
!9888 = !DILocation(line: 239, column: 2, scope: !9880)
!9889 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1497, file: !1497, line: 355, type: !9890, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9892)
!9890 = !DISubroutineType(types: !9891)
!9891 = !{!1343, !162, !162}
!9892 = !{!9893, !9894}
!9893 = !DILocalVariable(name: "db", arg: 1, scope: !9889, file: !1497, line: 355, type: !162)
!9894 = !DILocalVariable(name: "p", arg: 2, scope: !9889, file: !1497, line: 356, type: !162)
!9895 = !DILocation(line: 0, scope: !9889)
!9896 = !DILocation(line: 358, column: 2, scope: !9889)
!9897 = !DILocation(line: 384, column: 1, scope: !9889)
!9898 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1497, file: !1497, line: 250, type: !9843, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9899)
!9899 = !{!9900, !9901}
!9900 = !DILocalVariable(name: "dev", arg: 1, scope: !9898, file: !1497, line: 250, type: !1370)
!9901 = !DILocalVariable(name: "config", scope: !9898, file: !1497, line: 252, type: !9155)
!9902 = !DILocation(line: 0, scope: !9898)
!9903 = !DILocation(line: 252, column: 48, scope: !9898)
!9904 = !DILocation(line: 254, column: 40, scope: !9898)
!9905 = !DILocation(line: 254, column: 9, scope: !9898)
!9906 = !DILocation(line: 254, column: 2, scope: !9898)
!9907 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1497, file: !1497, line: 409, type: !9908, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9910)
!9908 = !DISubroutineType(types: !9909)
!9909 = !{!1356, !162}
!9910 = !{!9911}
!9911 = !DILocalVariable(name: "fc", arg: 1, scope: !9907, file: !1497, line: 409, type: !162)
!9912 = !DILocation(line: 0, scope: !9907)
!9913 = !DILocation(line: 411, column: 9, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9907, file: !1497, line: 411, column: 6)
!9915 = !DILocation(line: 416, column: 1, scope: !9907)
!9916 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !9591, file: !9591, line: 967, type: !9592, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9917)
!9917 = !{!9918}
!9918 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9916, file: !9591, line: 967, type: !1441)
!9919 = !DILocation(line: 0, scope: !9916)
!9920 = !DILocation(line: 969, column: 21, scope: !9916)
!9921 = !DILocation(line: 969, column: 3, scope: !9916)
!9922 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !9591, file: !9591, line: 601, type: !9592, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9923)
!9923 = !{!9924}
!9924 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9922, file: !9591, line: 601, type: !1441)
!9925 = !DILocation(line: 0, scope: !9922)
!9926 = !DILocation(line: 603, column: 21, scope: !9922)
!9927 = !DILocation(line: 603, column: 3, scope: !9922)
!9928 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !9591, file: !9591, line: 820, type: !9592, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9929)
!9929 = !{!9930}
!9930 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9928, file: !9591, line: 820, type: !1441)
!9931 = !DILocation(line: 0, scope: !9928)
!9932 = !DILocation(line: 822, column: 21, scope: !9928)
!9933 = !DILocation(line: 822, column: 3, scope: !9928)
!9934 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !9591, file: !9591, line: 547, type: !9592, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9935)
!9935 = !{!9936}
!9936 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9934, file: !9591, line: 547, type: !1441)
!9937 = !DILocation(line: 0, scope: !9934)
!9938 = !DILocation(line: 549, column: 21, scope: !9934)
!9939 = !DILocation(line: 549, column: 3, scope: !9934)
!9940 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1497, file: !1497, line: 257, type: !9941, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9943)
!9941 = !DISubroutineType(types: !9942)
!9942 = !{!162, !1336}
!9943 = !{!9944}
!9944 = !DILocalVariable(name: "parity", arg: 1, scope: !9940, file: !1497, line: 257, type: !1336)
!9945 = !DILocation(line: 0, scope: !9940)
!9946 = !DILocation(line: 259, column: 2, scope: !9940)
!9947 = !DILocation(line: 268, column: 1, scope: !9940)
!9948 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1497, file: !1497, line: 283, type: !9949, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9951)
!9949 = !DISubroutineType(types: !9950)
!9950 = !{!162, !1350}
!9951 = !{!9952}
!9952 = !DILocalVariable(name: "sb", arg: 1, scope: !9948, file: !1497, line: 283, type: !1350)
!9953 = !DILocation(line: 0, scope: !9948)
!9954 = !DILocation(line: 285, column: 2, scope: !9948)
!9955 = !DILocation(line: 0, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9948, file: !1497, line: 285, column: 14)
!9957 = !DILocation(line: 302, column: 1, scope: !9948)
!9958 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1497, file: !1497, line: 325, type: !9959, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9961)
!9959 = !DISubroutineType(types: !9960)
!9960 = !{!162, !1343, !1336}
!9961 = !{!9962, !9963}
!9962 = !DILocalVariable(name: "db", arg: 1, scope: !9958, file: !1497, line: 325, type: !1343)
!9963 = !DILocalVariable(name: "p", arg: 2, scope: !9958, file: !1497, line: 326, type: !1336)
!9964 = !DILocation(line: 0, scope: !9958)
!9965 = !DILocation(line: 328, column: 2, scope: !9958)
!9966 = !DILocation(line: 353, column: 1, scope: !9958)
!9967 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1497, file: !1497, line: 393, type: !9968, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9970)
!9968 = !DISubroutineType(types: !9969)
!9969 = !{!162, !1356}
!9970 = !{!9971}
!9971 = !DILocalVariable(name: "fc", arg: 1, scope: !9967, file: !1497, line: 393, type: !1356)
!9972 = !DILocation(line: 0, scope: !9967)
!9973 = !DILocation(line: 395, column: 9, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9967, file: !1497, line: 395, column: 6)
!9975 = !DILocation(line: 400, column: 1, scope: !9967)
!9976 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !9591, file: !9591, line: 424, type: !9622, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9977)
!9977 = !{!9978}
!9978 = !DILocalVariable(name: "USARTx", arg: 1, scope: !9976, file: !9591, line: 424, type: !1441)
!9979 = !DILocation(line: 0, scope: !9976)
!9980 = !DILocation(line: 426, column: 3, scope: !9976)
!9981 = !DILocation(line: 427, column: 1, scope: !9976)
!9982 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1497, file: !1497, line: 197, type: !9983, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9985)
!9983 = !DISubroutineType(types: !9984)
!9984 = !{null, !1370, !162}
!9985 = !{!9986, !9987, !9988}
!9986 = !DILocalVariable(name: "dev", arg: 1, scope: !9982, file: !1497, line: 197, type: !1370)
!9987 = !DILocalVariable(name: "parity", arg: 2, scope: !9982, file: !1497, line: 198, type: !162)
!9988 = !DILocalVariable(name: "config", scope: !9982, file: !1497, line: 200, type: !9155)
!9989 = !DILocation(line: 0, scope: !9982)
!9990 = !DILocation(line: 200, column: 48, scope: !9982)
!9991 = !DILocation(line: 202, column: 29, scope: !9982)
!9992 = !DILocation(line: 202, column: 2, scope: !9982)
!9993 = !DILocation(line: 203, column: 1, scope: !9982)
!9994 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1497, file: !1497, line: 212, type: !9983, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !9995)
!9995 = !{!9996, !9997, !9998}
!9996 = !DILocalVariable(name: "dev", arg: 1, scope: !9994, file: !1497, line: 212, type: !1370)
!9997 = !DILocalVariable(name: "stopbits", arg: 2, scope: !9994, file: !1497, line: 213, type: !162)
!9998 = !DILocalVariable(name: "config", scope: !9994, file: !1497, line: 215, type: !9155)
!9999 = !DILocation(line: 0, scope: !9994)
!10000 = !DILocation(line: 215, column: 48, scope: !9994)
!10001 = !DILocation(line: 217, column: 37, scope: !9994)
!10002 = !DILocation(line: 217, column: 2, scope: !9994)
!10003 = !DILocation(line: 218, column: 1, scope: !9994)
!10004 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1497, file: !1497, line: 227, type: !9983, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10005)
!10005 = !{!10006, !10007, !10008}
!10006 = !DILocalVariable(name: "dev", arg: 1, scope: !10004, file: !1497, line: 227, type: !1370)
!10007 = !DILocalVariable(name: "databits", arg: 2, scope: !10004, file: !1497, line: 228, type: !162)
!10008 = !DILocalVariable(name: "config", scope: !10004, file: !1497, line: 230, type: !9155)
!10009 = !DILocation(line: 0, scope: !10004)
!10010 = !DILocation(line: 230, column: 48, scope: !10004)
!10011 = !DILocation(line: 232, column: 32, scope: !10004)
!10012 = !DILocation(line: 232, column: 2, scope: !10004)
!10013 = !DILocation(line: 233, column: 1, scope: !10004)
!10014 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1497, file: !1497, line: 242, type: !9983, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10015)
!10015 = !{!10016, !10017, !10018}
!10016 = !DILocalVariable(name: "dev", arg: 1, scope: !10014, file: !1497, line: 242, type: !1370)
!10017 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10014, file: !1497, line: 243, type: !162)
!10018 = !DILocalVariable(name: "config", scope: !10014, file: !1497, line: 245, type: !9155)
!10019 = !DILocation(line: 0, scope: !10014)
!10020 = !DILocation(line: 245, column: 48, scope: !10014)
!10021 = !DILocation(line: 247, column: 33, scope: !10014)
!10022 = !DILocation(line: 247, column: 2, scope: !10014)
!10023 = !DILocation(line: 248, column: 1, scope: !10014)
!10024 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1497, file: !1497, line: 107, type: !9983, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10025)
!10025 = !{!10026, !10027, !10028, !10029, !10030}
!10026 = !DILocalVariable(name: "dev", arg: 1, scope: !10024, file: !1497, line: 107, type: !1370)
!10027 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10024, file: !1497, line: 107, type: !162)
!10028 = !DILocalVariable(name: "config", scope: !10024, file: !1497, line: 109, type: !9155)
!10029 = !DILocalVariable(name: "data", scope: !10024, file: !1497, line: 110, type: !9278)
!10030 = !DILocalVariable(name: "clock_rate", scope: !10024, file: !1497, line: 112, type: !162)
!10031 = !DILocation(line: 0, scope: !10024)
!10032 = !DILocation(line: 109, column: 48, scope: !10024)
!10033 = !DILocation(line: 110, column: 38, scope: !10024)
!10034 = !DILocation(line: 112, column: 2, scope: !10024)
!10035 = !DILocation(line: 123, column: 36, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !1497, line: 123, column: 7)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !1497, line: 122, column: 9)
!10038 = distinct !DILexicalBlock(scope: !10024, file: !1497, line: 115, column: 6)
!10039 = !DILocation(line: 124, column: 42, scope: !10036)
!10040 = !DILocation(line: 123, column: 7, scope: !10036)
!10041 = !DILocation(line: 125, column: 22, scope: !10036)
!10042 = !DILocation(line: 123, column: 7, scope: !10037)
!10043 = !DILocation(line: 176, column: 36, scope: !10024)
!10044 = !DILocation(line: 176, column: 3, scope: !10024)
!10045 = !DILocation(line: 179, column: 32, scope: !10024)
!10046 = !DILocation(line: 180, column: 10, scope: !10024)
!10047 = !DILocation(line: 179, column: 3, scope: !10024)
!10048 = !DILocation(line: 195, column: 1, scope: !10024)
!10049 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !9591, file: !9591, line: 410, type: !9622, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10050)
!10050 = !{!10051}
!10051 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10049, file: !9591, line: 410, type: !1441)
!10052 = !DILocation(line: 0, scope: !10049)
!10053 = !DILocation(line: 412, column: 3, scope: !10049)
!10054 = !DILocation(line: 413, column: 1, scope: !10049)
!10055 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !797, file: !797, line: 216, type: !1474, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10056)
!10056 = !{!10057, !10058, !10059, !10060}
!10057 = !DILocalVariable(name: "dev", arg: 1, scope: !10055, file: !797, line: 216, type: !1370)
!10058 = !DILocalVariable(name: "sys", arg: 2, scope: !10055, file: !797, line: 217, type: !890)
!10059 = !DILocalVariable(name: "rate", arg: 3, scope: !10055, file: !797, line: 218, type: !846)
!10060 = !DILocalVariable(name: "api", scope: !10055, file: !797, line: 220, type: !1452)
!10061 = !DILocation(line: 0, scope: !10055)
!10062 = !DILocation(line: 221, column: 49, scope: !10055)
!10063 = !DILocation(line: 223, column: 11, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10055, file: !797, line: 223, column: 6)
!10065 = !DILocation(line: 223, column: 20, scope: !10064)
!10066 = !DILocation(line: 223, column: 6, scope: !10055)
!10067 = !DILocation(line: 227, column: 9, scope: !10055)
!10068 = !DILocation(line: 227, column: 2, scope: !10055)
!10069 = !DILocation(line: 228, column: 1, scope: !10055)
!10070 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !9591, file: !9591, line: 615, type: !10071, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10073)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{null, !1441, !162}
!10073 = !{!10074, !10075}
!10074 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10070, file: !9591, line: 615, type: !1441)
!10075 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10070, file: !9591, line: 615, type: !162)
!10076 = !DILocation(line: 0, scope: !10070)
!10077 = !DILocation(line: 617, column: 3, scope: !10070)
!10078 = !DILocation(line: 618, column: 1, scope: !10070)
!10079 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !9591, file: !9591, line: 1020, type: !10080, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10082)
!10080 = !DISubroutineType(types: !10081)
!10081 = !{null, !1441, !162, !162, !162}
!10082 = !{!10083, !10084, !10085, !10086}
!10083 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10079, file: !9591, line: 1020, type: !1441)
!10084 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10079, file: !9591, line: 1020, type: !162)
!10085 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10079, file: !9591, line: 1020, type: !162)
!10086 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10079, file: !9591, line: 1021, type: !162)
!10087 = !DILocation(line: 0, scope: !10079)
!10088 = !DILocation(line: 1029, column: 30, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !9591, line: 1028, column: 3)
!10090 = distinct !DILexicalBlock(scope: !10079, file: !9591, line: 1023, column: 7)
!10091 = !DILocation(line: 1029, column: 19, scope: !10089)
!10092 = !DILocation(line: 1029, column: 13, scope: !10089)
!10093 = !DILocation(line: 1029, column: 17, scope: !10089)
!10094 = !DILocation(line: 1031, column: 1, scope: !10079)
!10095 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !9591, file: !9591, line: 949, type: !10071, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10096)
!10096 = !{!10097, !10098}
!10097 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10095, file: !9591, line: 949, type: !1441)
!10098 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10095, file: !9591, line: 949, type: !162)
!10099 = !DILocation(line: 0, scope: !10095)
!10100 = !DILocation(line: 951, column: 3, scope: !10095)
!10101 = !DILocation(line: 952, column: 1, scope: !10095)
!10102 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !9591, file: !9591, line: 588, type: !10071, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10103)
!10103 = !{!10104, !10105}
!10104 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10102, file: !9591, line: 588, type: !1441)
!10105 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10102, file: !9591, line: 588, type: !162)
!10106 = !DILocation(line: 0, scope: !10102)
!10107 = !DILocation(line: 590, column: 3, scope: !10102)
!10108 = !DILocation(line: 591, column: 1, scope: !10102)
!10109 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !9591, file: !9591, line: 805, type: !10071, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10110)
!10110 = !{!10111, !10112}
!10111 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10109, file: !9591, line: 805, type: !1441)
!10112 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10109, file: !9591, line: 805, type: !162)
!10113 = !DILocation(line: 0, scope: !10109)
!10114 = !DILocation(line: 807, column: 3, scope: !10109)
!10115 = !DILocation(line: 808, column: 1, scope: !10109)
!10116 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !9591, file: !9591, line: 532, type: !10071, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10117)
!10117 = !{!10118, !10119}
!10118 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10116, file: !9591, line: 532, type: !1441)
!10119 = !DILocalVariable(name: "Parity", arg: 2, scope: !10116, file: !9591, line: 532, type: !162)
!10120 = !DILocation(line: 0, scope: !10116)
!10121 = !DILocation(line: 534, column: 3, scope: !10116)
!10122 = !DILocation(line: 535, column: 1, scope: !10116)
!10123 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !9591, file: !9591, line: 1737, type: !9592, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10124)
!10124 = !{!10125}
!10125 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10123, file: !9591, line: 1737, type: !1441)
!10126 = !DILocation(line: 0, scope: !10123)
!10127 = !DILocation(line: 1739, column: 11, scope: !10123)
!10128 = !DILocation(line: 1739, column: 3, scope: !10123)
!10129 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !9591, file: !9591, line: 1748, type: !9592, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10130)
!10130 = !{!10131}
!10131 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10129, file: !9591, line: 1748, type: !1441)
!10132 = !DILocation(line: 0, scope: !10129)
!10133 = !DILocation(line: 1750, column: 11, scope: !10129)
!10134 = !DILocation(line: 1750, column: 45, scope: !10129)
!10135 = !DILocation(line: 1750, column: 3, scope: !10129)
!10136 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !9591, file: !9591, line: 1827, type: !9592, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10137)
!10137 = !{!10138}
!10138 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10136, file: !9591, line: 1827, type: !1441)
!10139 = !DILocation(line: 0, scope: !10136)
!10140 = !DILocation(line: 1829, column: 11, scope: !10136)
!10141 = !DILocation(line: 1829, column: 46, scope: !10136)
!10142 = !DILocation(line: 1829, column: 3, scope: !10136)
!10143 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !9591, file: !9591, line: 1992, type: !9622, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10144)
!10144 = !{!10145}
!10145 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10143, file: !9591, line: 1992, type: !1441)
!10146 = !DILocation(line: 0, scope: !10143)
!10147 = !DILocation(line: 1994, column: 3, scope: !10143)
!10148 = !DILocation(line: 1995, column: 1, scope: !10143)
!10149 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !9591, file: !9591, line: 1877, type: !9622, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10150)
!10150 = !{!10151, !10152}
!10151 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10149, file: !9591, line: 1877, type: !1441)
!10152 = !DILocalVariable(name: "tmpreg", scope: !10149, file: !9591, line: 1879, type: !283)
!10153 = !DILocation(line: 0, scope: !10149)
!10154 = !DILocation(line: 1879, column: 3, scope: !10149)
!10155 = !DILocation(line: 1879, column: 17, scope: !10149)
!10156 = !DILocation(line: 1880, column: 20, scope: !10149)
!10157 = !DILocation(line: 1880, column: 10, scope: !10149)
!10158 = !DILocation(line: 1881, column: 10, scope: !10149)
!10159 = !DILocation(line: 1882, column: 20, scope: !10149)
!10160 = !DILocation(line: 1882, column: 10, scope: !10149)
!10161 = !DILocation(line: 1883, column: 10, scope: !10149)
!10162 = !DILocation(line: 1884, column: 1, scope: !10149)
!10163 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !9591, file: !9591, line: 1896, type: !9622, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10164)
!10164 = !{!10165, !10166}
!10165 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10163, file: !9591, line: 1896, type: !1441)
!10166 = !DILocalVariable(name: "tmpreg", scope: !10163, file: !9591, line: 1898, type: !283)
!10167 = !DILocation(line: 0, scope: !10163)
!10168 = !DILocation(line: 1898, column: 3, scope: !10163)
!10169 = !DILocation(line: 1898, column: 17, scope: !10163)
!10170 = !DILocation(line: 1899, column: 20, scope: !10163)
!10171 = !DILocation(line: 1899, column: 10, scope: !10163)
!10172 = !DILocation(line: 1900, column: 10, scope: !10163)
!10173 = !DILocation(line: 1901, column: 20, scope: !10163)
!10174 = !DILocation(line: 1901, column: 10, scope: !10163)
!10175 = !DILocation(line: 1902, column: 10, scope: !10163)
!10176 = !DILocation(line: 1903, column: 1, scope: !10163)
!10177 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !9591, file: !9591, line: 1915, type: !9622, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10178)
!10178 = !{!10179, !10180}
!10179 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10177, file: !9591, line: 1915, type: !1441)
!10180 = !DILocalVariable(name: "tmpreg", scope: !10177, file: !9591, line: 1917, type: !283)
!10181 = !DILocation(line: 0, scope: !10177)
!10182 = !DILocation(line: 1917, column: 3, scope: !10177)
!10183 = !DILocation(line: 1917, column: 17, scope: !10177)
!10184 = !DILocation(line: 1918, column: 20, scope: !10177)
!10185 = !DILocation(line: 1918, column: 10, scope: !10177)
!10186 = !DILocation(line: 1919, column: 10, scope: !10177)
!10187 = !DILocation(line: 1920, column: 20, scope: !10177)
!10188 = !DILocation(line: 1920, column: 10, scope: !10177)
!10189 = !DILocation(line: 1921, column: 10, scope: !10177)
!10190 = !DILocation(line: 1922, column: 1, scope: !10177)
!10191 = !DILocation(line: 0, scope: !1551)
!10192 = !DILocation(line: 1914, column: 1, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !1551, file: !1497, line: 1914, column: 1)
!10194 = !DILocation(line: 1914, column: 1, scope: !1551)
!10195 = distinct !DISubprogram(name: "uart_stm32_isr", scope: !1497, file: !1497, line: 987, type: !1421, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10196)
!10196 = !{!10197, !10198}
!10197 = !DILocalVariable(name: "dev", arg: 1, scope: !10195, file: !1497, line: 987, type: !1370)
!10198 = !DILocalVariable(name: "data", scope: !10195, file: !1497, line: 989, type: !9278)
!10199 = !DILocation(line: 0, scope: !10195)
!10200 = !DILocation(line: 989, column: 38, scope: !10195)
!10201 = !DILocation(line: 1014, column: 12, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10195, file: !1497, line: 1014, column: 6)
!10203 = !DILocation(line: 1014, column: 6, scope: !10202)
!10204 = !DILocation(line: 1014, column: 6, scope: !10195)
!10205 = !DILocation(line: 1015, column: 28, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10202, file: !1497, line: 1014, column: 21)
!10207 = !DILocation(line: 1015, column: 3, scope: !10206)
!10208 = !DILocation(line: 1016, column: 2, scope: !10206)
!10209 = !DILocation(line: 1059, column: 1, scope: !10195)
!10210 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1497, file: !1497, line: 1583, type: !1391, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10211)
!10211 = !{!10212, !10213, !10214, !10215, !10216, !10217}
!10212 = !DILocalVariable(name: "dev", arg: 1, scope: !10210, file: !1497, line: 1583, type: !1370)
!10213 = !DILocalVariable(name: "config", scope: !10210, file: !1497, line: 1585, type: !9155)
!10214 = !DILocalVariable(name: "data", scope: !10210, file: !1497, line: 1586, type: !9278)
!10215 = !DILocalVariable(name: "ll_parity", scope: !10210, file: !1497, line: 1587, type: !162)
!10216 = !DILocalVariable(name: "ll_datawidth", scope: !10210, file: !1497, line: 1588, type: !162)
!10217 = !DILocalVariable(name: "err", scope: !10210, file: !1497, line: 1589, type: !107)
!10218 = !DILocation(line: 0, scope: !10210)
!10219 = !DILocation(line: 1585, column: 48, scope: !10210)
!10220 = !DILocation(line: 1586, column: 38, scope: !10210)
!10221 = !DILocation(line: 1591, column: 2, scope: !10210)
!10222 = !DILocation(line: 1593, column: 29, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10210, file: !1497, line: 1593, column: 6)
!10224 = !DILocation(line: 1593, column: 7, scope: !10223)
!10225 = !DILocation(line: 1593, column: 6, scope: !10210)
!10226 = !DILocation(line: 1599, column: 31, scope: !10210)
!10227 = !DILocation(line: 1599, column: 71, scope: !10210)
!10228 = !DILocation(line: 1599, column: 8, scope: !10210)
!10229 = !DILocation(line: 1600, column: 10, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10210, file: !1497, line: 1600, column: 6)
!10231 = !DILocation(line: 1600, column: 6, scope: !10210)
!10232 = !DILocation(line: 1616, column: 36, scope: !10210)
!10233 = !DILocation(line: 1616, column: 8, scope: !10210)
!10234 = !DILocation(line: 1617, column: 10, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10210, file: !1497, line: 1617, column: 6)
!10236 = !DILocation(line: 1617, column: 6, scope: !10210)
!10237 = !DILocation(line: 1621, column: 27, scope: !10210)
!10238 = !DILocation(line: 1621, column: 2, scope: !10210)
!10239 = !DILocation(line: 1624, column: 40, scope: !10210)
!10240 = !DILocation(line: 1624, column: 2, scope: !10210)
!10241 = !DILocation(line: 1630, column: 14, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10210, file: !1497, line: 1630, column: 6)
!10243 = !DILocation(line: 1630, column: 6, scope: !10210)
!10244 = !DILocation(line: 1638, column: 2, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10246, file: !1497, line: 1634, column: 34)
!10246 = distinct !DILexicalBlock(scope: !10242, file: !1497, line: 1634, column: 13)
!10247 = !DILocation(line: 0, scope: !10242)
!10248 = !DILocation(line: 1649, column: 35, scope: !10210)
!10249 = !DILocation(line: 1649, column: 2, scope: !10210)
!10250 = !DILocation(line: 1654, column: 14, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10210, file: !1497, line: 1654, column: 6)
!10252 = !DILocation(line: 1654, column: 6, scope: !10210)
!10253 = !DILocation(line: 1655, column: 3, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10251, file: !1497, line: 1654, column: 31)
!10255 = !DILocation(line: 1656, column: 2, scope: !10254)
!10256 = !DILocation(line: 1659, column: 37, scope: !10210)
!10257 = !DILocation(line: 1659, column: 2, scope: !10210)
!10258 = !DILocation(line: 1662, column: 14, scope: !10259)
!10259 = distinct !DILexicalBlock(scope: !10210, file: !1497, line: 1662, column: 6)
!10260 = !DILocation(line: 1662, column: 6, scope: !10210)
!10261 = !DILocation(line: 1663, column: 37, scope: !10262)
!10262 = distinct !DILexicalBlock(scope: !10259, file: !1497, line: 1662, column: 27)
!10263 = !DILocation(line: 1663, column: 3, scope: !10262)
!10264 = !DILocation(line: 1664, column: 2, scope: !10262)
!10265 = !DILocation(line: 1684, column: 26, scope: !10210)
!10266 = !DILocation(line: 1684, column: 2, scope: !10210)
!10267 = !DILocation(line: 1701, column: 10, scope: !10210)
!10268 = !DILocation(line: 1701, column: 2, scope: !10210)
!10269 = !DILocation(line: 1722, column: 2, scope: !10210)
!10270 = !DILocation(line: 1724, column: 1, scope: !10210)
!10271 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1497, file: !1497, line: 651, type: !1421, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10272)
!10272 = !{!10273, !10274, !10275}
!10273 = !DILocalVariable(name: "dev", arg: 1, scope: !10271, file: !1497, line: 651, type: !1370)
!10274 = !DILocalVariable(name: "data", scope: !10271, file: !1497, line: 653, type: !9278)
!10275 = !DILocalVariable(name: "clk", scope: !10271, file: !1497, line: 654, type: !10276)
!10276 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1370)
!10277 = !DILocation(line: 0, scope: !10271)
!10278 = !DILocation(line: 653, column: 38, scope: !10271)
!10279 = !DILocation(line: 656, column: 8, scope: !10271)
!10280 = !DILocation(line: 656, column: 14, scope: !10271)
!10281 = !DILocation(line: 657, column: 1, scope: !10271)
!10282 = distinct !DISubprogram(name: "device_is_ready", scope: !3413, file: !3413, line: 47, type: !10283, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10285)
!10283 = !DISubroutineType(types: !10284)
!10284 = !{!136, !1370}
!10285 = !{!10286}
!10286 = !DILocalVariable(name: "dev", arg: 1, scope: !10282, file: !3413, line: 47, type: !1370)
!10287 = !DILocation(line: 0, scope: !10282)
!10288 = !DILocation(line: 55, column: 2, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10282, file: !3413, line: 55, column: 2)
!10290 = !{i64 2155033883}
!10291 = !DILocation(line: 56, column: 9, scope: !10282)
!10292 = !DILocation(line: 56, column: 2, scope: !10282)
!10293 = distinct !DISubprogram(name: "clock_control_on", scope: !797, file: !797, line: 123, type: !1459, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10294)
!10294 = !{!10295, !10296, !10297}
!10295 = !DILocalVariable(name: "dev", arg: 1, scope: !10293, file: !797, line: 123, type: !1370)
!10296 = !DILocalVariable(name: "sys", arg: 2, scope: !10293, file: !797, line: 124, type: !890)
!10297 = !DILocalVariable(name: "api", scope: !10293, file: !797, line: 126, type: !1452)
!10298 = !DILocation(line: 0, scope: !10293)
!10299 = !DILocation(line: 127, column: 49, scope: !10293)
!10300 = !DILocation(line: 129, column: 14, scope: !10293)
!10301 = !DILocation(line: 129, column: 9, scope: !10293)
!10302 = !DILocation(line: 129, column: 2, scope: !10293)
!10303 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1524, file: !1524, line: 342, type: !10304, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10306)
!10304 = !DISubroutineType(types: !10305)
!10305 = !{!107, !1585, !133}
!10306 = !{!10307, !10308, !10309, !10310}
!10307 = !DILocalVariable(name: "config", arg: 1, scope: !10303, file: !1524, line: 342, type: !1585)
!10308 = !DILocalVariable(name: "id", arg: 2, scope: !10303, file: !1524, line: 343, type: !133)
!10309 = !DILocalVariable(name: "ret", scope: !10303, file: !1524, line: 345, type: !107)
!10310 = !DILocalVariable(name: "state", scope: !10303, file: !1524, line: 346, type: !1527)
!10311 = !DILocation(line: 0, scope: !10303)
!10312 = !DILocation(line: 346, column: 2, scope: !10303)
!10313 = !DILocation(line: 348, column: 8, scope: !10303)
!10314 = !DILocation(line: 349, column: 10, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10303, file: !1524, line: 349, column: 6)
!10316 = !DILocation(line: 349, column: 6, scope: !10303)
!10317 = !DILocation(line: 353, column: 44, scope: !10303)
!10318 = !DILocation(line: 353, column: 9, scope: !10303)
!10319 = !DILocation(line: 353, column: 2, scope: !10303)
!10320 = !DILocation(line: 354, column: 1, scope: !10303)
!10321 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !9591, file: !9591, line: 497, type: !10071, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10322)
!10322 = !{!10323, !10324, !10325}
!10323 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10321, file: !9591, line: 497, type: !1441)
!10324 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10321, file: !9591, line: 497, type: !162)
!10325 = !DILocalVariable(name: "val", scope: !10326, file: !9591, line: 499, type: !162)
!10326 = distinct !DILexicalBlock(scope: !10321, file: !9591, line: 499, column: 3)
!10327 = !DILocation(line: 0, scope: !10321)
!10328 = !DILocation(line: 499, column: 3, scope: !10326)
!10329 = !DILocation(line: 0, scope: !9631, inlinedAt: !10330)
!10330 = distinct !DILocation(line: 499, column: 3, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10326, file: !9591, line: 499, column: 3)
!10332 = !DILocation(line: 480, column: 4, scope: !9631, inlinedAt: !10330)
!10333 = !DILocation(line: 499, column: 3, scope: !10331)
!10334 = !DILocation(line: 0, scope: !10326)
!10335 = !DILocation(line: 0, scope: !9644, inlinedAt: !10336)
!10336 = distinct !DILocation(line: 499, column: 3, scope: !10326)
!10337 = !DILocation(line: 531, column: 4, scope: !9644, inlinedAt: !10336)
!10338 = distinct !{!10338, !10328, !10328}
!10339 = !DILocation(line: 500, column: 1, scope: !10321)
!10340 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !9591, file: !9591, line: 850, type: !10080, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10341)
!10341 = !{!10342, !10343, !10344, !10345}
!10342 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10340, file: !9591, line: 850, type: !1441)
!10343 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10340, file: !9591, line: 850, type: !162)
!10344 = !DILocalVariable(name: "Parity", arg: 3, scope: !10340, file: !9591, line: 850, type: !162)
!10345 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10340, file: !9591, line: 851, type: !162)
!10346 = !DILocation(line: 0, scope: !10340)
!10347 = !DILocation(line: 853, column: 3, scope: !10340)
!10348 = !DILocation(line: 854, column: 3, scope: !10340)
!10349 = !DILocation(line: 855, column: 1, scope: !10340)
!10350 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !9591, file: !9591, line: 1337, type: !9622, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10351)
!10351 = !{!10352}
!10352 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10350, file: !9591, line: 1337, type: !1441)
!10353 = !DILocation(line: 0, scope: !10350)
!10354 = !DILocation(line: 1339, column: 3, scope: !10350)
!10355 = !DILocation(line: 1340, column: 1, scope: !10350)
!10356 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1524, file: !1524, line: 316, type: !10357, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10359)
!10357 = !DISubroutineType(types: !10358)
!10358 = !{!107, !1585, !1527}
!10359 = !{!10360, !10361, !10362}
!10360 = !DILocalVariable(name: "config", arg: 1, scope: !10356, file: !1524, line: 317, type: !1585)
!10361 = !DILocalVariable(name: "state", arg: 2, scope: !10356, file: !1524, line: 318, type: !1527)
!10362 = !DILocalVariable(name: "reg", scope: !10356, file: !1524, line: 320, type: !22)
!10363 = !DILocation(line: 0, scope: !10356)
!10364 = !DILocation(line: 329, column: 39, scope: !10356)
!10365 = !DILocation(line: 329, column: 52, scope: !10356)
!10366 = !DILocation(line: 329, column: 9, scope: !10356)
!10367 = !DILocation(line: 329, column: 2, scope: !10356)
!10368 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10283, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1326, retainedNodes: !10369)
!10369 = !{!10370}
!10370 = !DILocalVariable(name: "dev", arg: 1, scope: !10368, file: !120, line: 730, type: !1370)
!10371 = !DILocation(line: 0, scope: !10368)
!10372 = !DILocation(line: 732, column: 9, scope: !10368)
!10373 = !DILocation(line: 732, column: 2, scope: !10368)
!10374 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1666, file: !1666, line: 270, type: !1672, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10375)
!10375 = !{!10376}
!10376 = !DILocalVariable(name: "dev", arg: 1, scope: !10374, file: !1666, line: 270, type: !1674)
!10377 = !DILocation(line: 0, scope: !10374)
!10378 = !DILocation(line: 274, column: 2, scope: !10374)
!10379 = !DILocation(line: 275, column: 12, scope: !10374)
!10380 = !DILocation(line: 276, column: 15, scope: !10374)
!10381 = !DILocation(line: 277, column: 16, scope: !10374)
!10382 = !DILocation(line: 278, column: 15, scope: !10374)
!10383 = !DILocation(line: 279, column: 16, scope: !10374)
!10384 = !DILocation(line: 282, column: 2, scope: !10374)
!10385 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6122, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10386)
!10386 = !{!10387, !10388}
!10387 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10385, file: !497, line: 1814, type: !753)
!10388 = !DILocalVariable(name: "priority", arg: 2, scope: !10385, file: !497, line: 1814, type: !162)
!10389 = !DILocation(line: 0, scope: !10385)
!10390 = !DILocation(line: 1822, column: 46, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !497, line: 1821, column: 3)
!10392 = distinct !DILexicalBlock(scope: !10385, file: !497, line: 1816, column: 7)
!10393 = !DILocation(line: 1824, column: 1, scope: !10385)
!10394 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1666, file: !1666, line: 118, type: !6025, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10395)
!10395 = !{!10396, !10397}
!10396 = !DILocalVariable(name: "arg", arg: 1, scope: !10394, file: !1666, line: 118, type: !102)
!10397 = !DILocalVariable(name: "dticks", scope: !10394, file: !1666, line: 121, type: !162)
!10398 = !DILocation(line: 0, scope: !10394)
!10399 = !DILocation(line: 124, column: 2, scope: !10394)
!10400 = !DILocation(line: 129, column: 17, scope: !10394)
!10401 = !DILocation(line: 129, column: 14, scope: !10394)
!10402 = !DILocation(line: 130, column: 15, scope: !10394)
!10403 = !DILocation(line: 145, column: 27, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10405, file: !1666, line: 132, column: 16)
!10405 = distinct !DILexicalBlock(scope: !10394, file: !1666, line: 132, column: 6)
!10406 = !DILocation(line: 145, column: 25, scope: !10404)
!10407 = !DILocation(line: 145, column: 45, scope: !10404)
!10408 = !DILocation(line: 146, column: 30, scope: !10404)
!10409 = !DILocation(line: 146, column: 20, scope: !10404)
!10410 = !DILocation(line: 147, column: 3, scope: !10404)
!10411 = !DILocation(line: 151, column: 2, scope: !10394)
!10412 = !DILocation(line: 152, column: 1, scope: !10394)
!10413 = distinct !DISubprogram(name: "elapsed", scope: !1666, file: !1666, line: 85, type: !6169, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10414)
!10414 = !{!10415, !10416, !10417}
!10415 = !DILocalVariable(name: "val1", scope: !10413, file: !1666, line: 87, type: !162)
!10416 = !DILocalVariable(name: "ctrl", scope: !10413, file: !1666, line: 88, type: !162)
!10417 = !DILocalVariable(name: "val2", scope: !10413, file: !1666, line: 89, type: !162)
!10418 = !DILocation(line: 87, column: 27, scope: !10413)
!10419 = !DILocation(line: 0, scope: !10413)
!10420 = !DILocation(line: 88, column: 27, scope: !10413)
!10421 = !DILocation(line: 89, column: 27, scope: !10413)
!10422 = !DILocation(line: 105, column: 12, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10413, file: !1666, line: 105, column: 6)
!10424 = !DILocation(line: 106, column: 6, scope: !10423)
!10425 = !DILocation(line: 107, column: 16, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10423, file: !1666, line: 106, column: 24)
!10427 = !DILocation(line: 111, column: 18, scope: !10426)
!10428 = !DILocation(line: 112, column: 2, scope: !10426)
!10429 = !DILocation(line: 114, column: 20, scope: !10413)
!10430 = !DILocation(line: 114, column: 30, scope: !10413)
!10431 = !DILocation(line: 114, column: 28, scope: !10413)
!10432 = !DILocation(line: 114, column: 2, scope: !10413)
!10433 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1666, file: !1666, line: 154, type: !10434, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10436)
!10434 = !DISubroutineType(types: !10435)
!10435 = !{null, !727, !136}
!10436 = !{!10437, !10438, !10439, !10440, !10441, !10442, !10443, !10448, !10449}
!10437 = !DILocalVariable(name: "ticks", arg: 1, scope: !10433, file: !1666, line: 154, type: !727)
!10438 = !DILocalVariable(name: "idle", arg: 2, scope: !10433, file: !1666, line: 154, type: !136)
!10439 = !DILocalVariable(name: "delay", scope: !10433, file: !1666, line: 169, type: !162)
!10440 = !DILocalVariable(name: "val1", scope: !10433, file: !1666, line: 170, type: !162)
!10441 = !DILocalVariable(name: "val2", scope: !10433, file: !1666, line: 170, type: !162)
!10442 = !DILocalVariable(name: "last_load_", scope: !10433, file: !1666, line: 171, type: !162)
!10443 = !DILocalVariable(name: "key", scope: !10433, file: !1666, line: 176, type: !10444)
!10444 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !10445)
!10445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !10446)
!10446 = !{!10447}
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10445, file: !249, line: 33, baseType: !107, size: 32)
!10448 = !DILocalVariable(name: "pending", scope: !10433, file: !1666, line: 178, type: !162)
!10449 = !DILocalVariable(name: "unannounced", scope: !10433, file: !1666, line: 185, type: !162)
!10450 = !DILocation(line: 0, scope: !10433)
!10451 = !DILocation(line: 162, column: 49, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10433, file: !1666, line: 162, column: 6)
!10453 = !DILocation(line: 163, column: 17, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10452, file: !1666, line: 162, column: 78)
!10455 = !DILocation(line: 164, column: 13, scope: !10454)
!10456 = !DILocation(line: 165, column: 3, scope: !10454)
!10457 = !DILocation(line: 171, column: 24, scope: !10433)
!10458 = !DILocation(line: 173, column: 10, scope: !10433)
!10459 = !DILocation(line: 174, column: 10, scope: !10433)
!10460 = !DILocalVariable(name: "l", arg: 1, scope: !10461, file: !249, line: 136, type: !10464)
!10461 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !10462, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10465)
!10462 = !DISubroutineType(types: !10463)
!10463 = !{!10444, !10464}
!10464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!10465 = !{!10460, !10466}
!10466 = !DILocalVariable(name: "k", scope: !10461, file: !249, line: 139, type: !10444)
!10467 = !DILocation(line: 0, scope: !10461, inlinedAt: !10468)
!10468 = distinct !DILocation(line: 176, column: 25, scope: !10433)
!10469 = !DILocation(line: 55, column: 2, scope: !10470, inlinedAt: !10474)
!10470 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10471)
!10471 = !{!10472, !10473}
!10472 = !DILocalVariable(name: "key", scope: !10470, file: !5914, line: 44, type: !32)
!10473 = !DILocalVariable(name: "tmp", scope: !10470, file: !5914, line: 53, type: !32)
!10474 = distinct !DILocation(line: 145, column: 10, scope: !10461, inlinedAt: !10468)
!10475 = !{i64 2220785}
!10476 = !DILocation(line: 0, scope: !10470, inlinedAt: !10474)
!10477 = !DILocation(line: 178, column: 21, scope: !10433)
!10478 = !DILocation(line: 180, column: 18, scope: !10433)
!10479 = !DILocation(line: 182, column: 14, scope: !10433)
!10480 = !DILocation(line: 183, column: 15, scope: !10433)
!10481 = !DILocation(line: 185, column: 39, scope: !10433)
!10482 = !DILocation(line: 185, column: 37, scope: !10433)
!10483 = !DILocation(line: 187, column: 27, scope: !10484)
!10484 = distinct !DILexicalBlock(scope: !10433, file: !1666, line: 187, column: 6)
!10485 = !DILocation(line: 187, column: 6, scope: !10433)
!10486 = !DILocation(line: 202, column: 27, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10484, file: !1666, line: 195, column: 9)
!10488 = !DILocation(line: 202, column: 48, scope: !10487)
!10489 = !DILocation(line: 203, column: 9, scope: !10487)
!10490 = !DILocation(line: 204, column: 11, scope: !10487)
!10491 = !DILocation(line: 205, column: 13, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10487, file: !1666, line: 205, column: 7)
!10493 = !DILocation(line: 205, column: 7, scope: !10487)
!10494 = !DILocation(line: 0, scope: !10484)
!10495 = !DILocation(line: 212, column: 18, scope: !10433)
!10496 = !DILocation(line: 214, column: 28, scope: !10433)
!10497 = !DILocation(line: 214, column: 16, scope: !10433)
!10498 = !DILocation(line: 215, column: 15, scope: !10433)
!10499 = !DILocation(line: 227, column: 11, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10433, file: !1666, line: 227, column: 6)
!10501 = !DILocation(line: 227, column: 6, scope: !10433)
!10502 = !DILocation(line: 228, column: 15, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10500, file: !1666, line: 227, column: 19)
!10504 = !DILocation(line: 228, column: 38, scope: !10503)
!10505 = !DILocation(line: 228, column: 24, scope: !10503)
!10506 = !DILocation(line: 229, column: 2, scope: !10503)
!10507 = !DILocation(line: 230, column: 24, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10500, file: !1666, line: 229, column: 9)
!10509 = !DILocation(line: 230, column: 15, scope: !10508)
!10510 = !DILocation(line: 0, scope: !10500)
!10511 = !DILocalVariable(name: "key", arg: 2, scope: !10512, file: !249, line: 190, type: !10444)
!10512 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !10513, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10515)
!10513 = !DISubroutineType(types: !10514)
!10514 = !{null, !10464, !10444}
!10515 = !{!10516, !10511}
!10516 = !DILocalVariable(name: "l", arg: 1, scope: !10512, file: !249, line: 189, type: !10464)
!10517 = !DILocation(line: 0, scope: !10512, inlinedAt: !10518)
!10518 = distinct !DILocation(line: 232, column: 2, scope: !10433)
!10519 = !DILocalVariable(name: "key", arg: 1, scope: !10520, file: !5914, line: 84, type: !32)
!10520 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10521)
!10521 = !{!10519}
!10522 = !DILocation(line: 0, scope: !10520, inlinedAt: !10523)
!10523 = distinct !DILocation(line: 215, column: 2, scope: !10512, inlinedAt: !10518)
!10524 = !DILocation(line: 95, column: 2, scope: !10520, inlinedAt: !10523)
!10525 = !{i64 2221602}
!10526 = !DILocation(line: 234, column: 1, scope: !10433)
!10527 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1666, file: !1666, line: 236, type: !6169, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10528)
!10528 = !{!10529, !10530}
!10529 = !DILocalVariable(name: "key", scope: !10527, file: !1666, line: 242, type: !10444)
!10530 = !DILocalVariable(name: "cyc", scope: !10527, file: !1666, line: 243, type: !162)
!10531 = !DILocation(line: 0, scope: !10461, inlinedAt: !10532)
!10532 = distinct !DILocation(line: 242, column: 25, scope: !10527)
!10533 = !DILocation(line: 55, column: 2, scope: !10470, inlinedAt: !10534)
!10534 = distinct !DILocation(line: 145, column: 10, scope: !10461, inlinedAt: !10532)
!10535 = !DILocation(line: 0, scope: !10470, inlinedAt: !10534)
!10536 = !DILocation(line: 0, scope: !10527)
!10537 = !DILocation(line: 243, column: 17, scope: !10527)
!10538 = !DILocation(line: 243, column: 29, scope: !10527)
!10539 = !DILocation(line: 243, column: 27, scope: !10527)
!10540 = !DILocation(line: 243, column: 43, scope: !10527)
!10541 = !DILocation(line: 243, column: 41, scope: !10527)
!10542 = !DILocation(line: 0, scope: !10512, inlinedAt: !10543)
!10543 = distinct !DILocation(line: 245, column: 2, scope: !10527)
!10544 = !DILocation(line: 0, scope: !10520, inlinedAt: !10545)
!10545 = distinct !DILocation(line: 215, column: 2, scope: !10512, inlinedAt: !10543)
!10546 = !DILocation(line: 95, column: 2, scope: !10520, inlinedAt: !10545)
!10547 = !DILocation(line: 246, column: 13, scope: !10527)
!10548 = !DILocation(line: 246, column: 2, scope: !10527)
!10549 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1666, file: !1666, line: 249, type: !6169, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !10550)
!10550 = !{!10551, !10552}
!10551 = !DILocalVariable(name: "key", scope: !10549, file: !1666, line: 251, type: !10444)
!10552 = !DILocalVariable(name: "ret", scope: !10549, file: !1666, line: 252, type: !162)
!10553 = !DILocation(line: 0, scope: !10461, inlinedAt: !10554)
!10554 = distinct !DILocation(line: 251, column: 25, scope: !10549)
!10555 = !DILocation(line: 55, column: 2, scope: !10470, inlinedAt: !10556)
!10556 = distinct !DILocation(line: 145, column: 10, scope: !10461, inlinedAt: !10554)
!10557 = !DILocation(line: 0, scope: !10470, inlinedAt: !10556)
!10558 = !DILocation(line: 0, scope: !10549)
!10559 = !DILocation(line: 252, column: 17, scope: !10549)
!10560 = !DILocation(line: 252, column: 29, scope: !10549)
!10561 = !DILocation(line: 252, column: 27, scope: !10549)
!10562 = !DILocation(line: 0, scope: !10512, inlinedAt: !10563)
!10563 = distinct !DILocation(line: 254, column: 2, scope: !10549)
!10564 = !DILocation(line: 0, scope: !10520, inlinedAt: !10565)
!10565 = distinct !DILocation(line: 215, column: 2, scope: !10512, inlinedAt: !10563)
!10566 = !DILocation(line: 95, column: 2, scope: !10520, inlinedAt: !10565)
!10567 = !DILocation(line: 255, column: 2, scope: !10549)
!10568 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1666, file: !1666, line: 258, type: !3130, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !250)
!10569 = !DILocation(line: 260, column: 6, scope: !10570)
!10570 = distinct !DILexicalBlock(scope: !10568, file: !1666, line: 260, column: 6)
!10571 = !DILocation(line: 260, column: 16, scope: !10570)
!10572 = !DILocation(line: 260, column: 6, scope: !10568)
!10573 = !DILocation(line: 261, column: 17, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10570, file: !1666, line: 260, column: 34)
!10575 = !DILocation(line: 262, column: 2, scope: !10574)
!10576 = !DILocation(line: 263, column: 1, scope: !10568)
!10577 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1666, file: !1666, line: 265, type: !3130, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1590, retainedNodes: !250)
!10578 = !DILocation(line: 267, column: 16, scope: !10577)
!10579 = !DILocation(line: 268, column: 1, scope: !10577)
!10580 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10581, file: !10581, line: 9, type: !10582, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2835, retainedNodes: !10605)
!10581 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10582 = !DISubroutineType(types: !10583)
!10583 = !{!107, !10584, !133, !10604}
!10584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10585, size: 32)
!10585 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10586)
!10586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1524, line: 60, size: 64, elements: !10587)
!10587 = !{!10588, !10603}
!10588 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10586, file: !1524, line: 69, baseType: !10589, size: 32)
!10589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10590, size: 32)
!10590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10591)
!10591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1524, line: 50, size: 64, elements: !10592)
!10592 = !{!10593, !10601, !10602}
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10591, file: !1524, line: 52, baseType: !10594, size: 32)
!10594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10595, size: 32)
!10595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10596)
!10596 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1535, line: 37, baseType: !10597)
!10597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1535, line: 32, size: 64, elements: !10598)
!10598 = !{!10599, !10600}
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10597, file: !1535, line: 34, baseType: !162, size: 32)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10597, file: !1535, line: 36, baseType: !162, size: 32, offset: 32)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10591, file: !1524, line: 54, baseType: !133, size: 8, offset: 32)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10591, file: !1524, line: 56, baseType: !133, size: 8, offset: 40)
!10603 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10586, file: !1524, line: 71, baseType: !133, size: 8, offset: 32)
!10604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10589, size: 32)
!10605 = !{!10606, !10607, !10608}
!10606 = !DILocalVariable(name: "config", arg: 1, scope: !10580, file: !10581, line: 9, type: !10584)
!10607 = !DILocalVariable(name: "id", arg: 2, scope: !10580, file: !10581, line: 9, type: !133)
!10608 = !DILocalVariable(name: "state", arg: 3, scope: !10580, file: !10581, line: 10, type: !10604)
!10609 = !DILocation(line: 0, scope: !10580)
!10610 = !DILocation(line: 12, column: 20, scope: !10580)
!10611 = !DILocation(line: 13, column: 27, scope: !10580)
!10612 = !DILocation(line: 13, column: 42, scope: !10580)
!10613 = !DILocation(line: 13, column: 19, scope: !10580)
!10614 = !DILocation(line: 13, column: 16, scope: !10580)
!10615 = !DILocation(line: 13, column: 2, scope: !10580)
!10616 = distinct !{!10616, !10615, !10617}
!10617 = !DILocation(line: 19, column: 2, scope: !10580)
!10618 = !DILocation(line: 14, column: 23, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10620, file: !10581, line: 14, column: 7)
!10620 = distinct !DILexicalBlock(scope: !10580, file: !10581, line: 13, column: 54)
!10621 = !DILocation(line: 14, column: 10, scope: !10619)
!10622 = !DILocation(line: 18, column: 11, scope: !10620)
!10623 = !DILocation(line: 14, column: 7, scope: !10620)
!10624 = !DILocation(line: 22, column: 1, scope: !10580)
!10625 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1783, file: !1783, line: 193, type: !10626, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !10635)
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!107, !10628, !133, !22}
!10628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10629, size: 32)
!10629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10630)
!10630 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1535, line: 37, baseType: !10631)
!10631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1535, line: 32, size: 64, elements: !10632)
!10632 = !{!10633, !10634}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10631, file: !1535, line: 34, baseType: !162, size: 32)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10631, file: !1535, line: 36, baseType: !162, size: 32, offset: 32)
!10635 = !{!10636, !10637, !10638, !10639, !10640, !10641, !10642, !10643, !10645}
!10636 = !DILocalVariable(name: "pins", arg: 1, scope: !10625, file: !1783, line: 193, type: !10628)
!10637 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10625, file: !1783, line: 193, type: !133)
!10638 = !DILocalVariable(name: "reg", arg: 3, scope: !10625, file: !1783, line: 194, type: !22)
!10639 = !DILocalVariable(name: "pin", scope: !10625, file: !1783, line: 196, type: !162)
!10640 = !DILocalVariable(name: "mux", scope: !10625, file: !1783, line: 196, type: !162)
!10641 = !DILocalVariable(name: "pin_cgf", scope: !10625, file: !1783, line: 197, type: !162)
!10642 = !DILocalVariable(name: "ret", scope: !10625, file: !1783, line: 198, type: !107)
!10643 = !DILocalVariable(name: "i", scope: !10644, file: !1783, line: 209, type: !133)
!10644 = distinct !DILexicalBlock(scope: !10625, file: !1783, line: 209, column: 2)
!10645 = !DILocalVariable(name: "gpio_out", scope: !10646, file: !1783, line: 239, type: !162)
!10646 = distinct !DILexicalBlock(scope: !10647, file: !1783, line: 238, column: 55)
!10647 = distinct !DILexicalBlock(scope: !10648, file: !1783, line: 238, column: 14)
!10648 = distinct !DILexicalBlock(scope: !10649, file: !1783, line: 236, column: 14)
!10649 = distinct !DILexicalBlock(scope: !10650, file: !1783, line: 234, column: 7)
!10650 = distinct !DILexicalBlock(scope: !10651, file: !1783, line: 209, column: 41)
!10651 = distinct !DILexicalBlock(scope: !10644, file: !1783, line: 209, column: 2)
!10652 = !DILocation(line: 0, scope: !10625)
!10653 = !DILocation(line: 0, scope: !10644)
!10654 = !DILocation(line: 209, column: 25, scope: !10651)
!10655 = !DILocation(line: 209, column: 2, scope: !10644)
!10656 = distinct !{!10656, !10655, !10657}
!10657 = !DILocation(line: 259, column: 2, scope: !10644)
!10658 = !DILocation(line: 210, column: 17, scope: !10650)
!10659 = !DILocation(line: 234, column: 7, scope: !10649)
!10660 = !DILocation(line: 234, column: 33, scope: !10649)
!10661 = !DILocation(line: 234, column: 7, scope: !10650)
!10662 = !DILocation(line: 235, column: 22, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10649, file: !1783, line: 234, column: 49)
!10664 = !DILocation(line: 235, column: 29, scope: !10663)
!10665 = !DILocation(line: 236, column: 3, scope: !10663)
!10666 = !DILocation(line: 236, column: 14, scope: !10649)
!10667 = !DILocation(line: 239, column: 32, scope: !10646)
!10668 = !DILocation(line: 0, scope: !10646)
!10669 = !DILocation(line: 241, column: 8, scope: !10646)
!10670 = !DILocation(line: 246, column: 3, scope: !10646)
!10671 = !DILocation(line: 252, column: 9, scope: !10650)
!10672 = !DILocation(line: 255, column: 9, scope: !10650)
!10673 = !DILocation(line: 256, column: 11, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10650, file: !1783, line: 256, column: 7)
!10675 = !DILocation(line: 209, column: 37, scope: !10651)
!10676 = !DILocation(line: 256, column: 7, scope: !10650)
!10677 = !DILocation(line: 262, column: 1, scope: !10625)
!10678 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1783, file: !1783, line: 176, type: !10679, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !10681)
!10679 = !DISubroutineType(types: !10680)
!10680 = !{!107, !162, !162, !162}
!10681 = !{!10682, !10683, !10684, !10685}
!10682 = !DILocalVariable(name: "pin", arg: 1, scope: !10678, file: !1783, line: 176, type: !162)
!10683 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !10678, file: !1783, line: 176, type: !162)
!10684 = !DILocalVariable(name: "pin_func", arg: 3, scope: !10678, file: !1783, line: 176, type: !162)
!10685 = !DILocalVariable(name: "port_device", scope: !10678, file: !1783, line: 178, type: !1713)
!10686 = !DILocation(line: 0, scope: !10678)
!10687 = !DILocation(line: 180, column: 22, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10678, file: !1783, line: 180, column: 6)
!10689 = !DILocation(line: 180, column: 6, scope: !10678)
!10690 = !DILocation(line: 180, column: 6, scope: !10688)
!10691 = !DILocation(line: 184, column: 16, scope: !10678)
!10692 = !DILocation(line: 186, column: 19, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10678, file: !1783, line: 186, column: 6)
!10694 = !DILocation(line: 186, column: 28, scope: !10693)
!10695 = !DILocation(line: 186, column: 33, scope: !10693)
!10696 = !DILocation(line: 186, column: 6, scope: !10678)
!10697 = !DILocation(line: 190, column: 43, scope: !10678)
!10698 = !DILocation(line: 190, column: 9, scope: !10678)
!10699 = !DILocation(line: 190, column: 2, scope: !10678)
!10700 = !DILocation(line: 191, column: 1, scope: !10678)
!10701 = distinct !DISubprogram(name: "device_is_ready", scope: !3413, file: !3413, line: 47, type: !10702, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !10704)
!10702 = !DISubroutineType(types: !10703)
!10703 = !{!136, !1713}
!10704 = !{!10705}
!10705 = !DILocalVariable(name: "dev", arg: 1, scope: !10701, file: !3413, line: 47, type: !1713)
!10706 = !DILocation(line: 0, scope: !10701)
!10707 = !DILocation(line: 55, column: 2, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10701, file: !3413, line: 55, column: 2)
!10709 = !{i64 2149458855}
!10710 = !DILocation(line: 56, column: 9, scope: !10701)
!10711 = !DILocation(line: 56, column: 2, scope: !10701)
!10712 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !120, file: !120, line: 730, type: !10702, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1701, retainedNodes: !10713)
!10713 = !{!10714}
!10714 = !DILocalVariable(name: "dev", arg: 1, scope: !10712, file: !120, line: 730, type: !1713)
!10715 = !DILocation(line: 0, scope: !10712)
!10716 = !DILocation(line: 732, column: 9, scope: !10712)
!10717 = !DILocation(line: 732, column: 2, scope: !10712)
!10718 = distinct !DISubprogram(name: "SystemInit", scope: !1832, file: !1832, line: 167, type: !3130, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !250)
!10719 = !DILocation(line: 182, column: 1, scope: !10718)
!10720 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1832, file: !1832, line: 220, type: !3130, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1791, retainedNodes: !10721)
!10721 = !{!10722, !10723, !10724, !10725, !10726}
!10722 = !DILocalVariable(name: "tmp", scope: !10720, file: !1832, line: 222, type: !162)
!10723 = !DILocalVariable(name: "pllvco", scope: !10720, file: !1832, line: 222, type: !162)
!10724 = !DILocalVariable(name: "pllp", scope: !10720, file: !1832, line: 222, type: !162)
!10725 = !DILocalVariable(name: "pllsource", scope: !10720, file: !1832, line: 222, type: !162)
!10726 = !DILocalVariable(name: "pllm", scope: !10720, file: !1832, line: 222, type: !162)
!10727 = !DILocation(line: 0, scope: !10720)
!10728 = !DILocation(line: 225, column: 14, scope: !10720)
!10729 = !DILocation(line: 225, column: 19, scope: !10720)
!10730 = !DILocation(line: 227, column: 3, scope: !10720)
!10731 = !DILocation(line: 240, column: 25, scope: !10732)
!10732 = distinct !DILexicalBlock(scope: !10720, file: !1832, line: 228, column: 3)
!10733 = !DILocation(line: 241, column: 19, scope: !10732)
!10734 = !DILocation(line: 241, column: 27, scope: !10732)
!10735 = !DILocation(line: 0, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10732, file: !1832, line: 243, column: 11)
!10737 = !DILocation(line: 254, column: 22, scope: !10732)
!10738 = !DILocation(line: 254, column: 62, scope: !10732)
!10739 = !DILocation(line: 255, column: 31, scope: !10732)
!10740 = !DILocation(line: 256, column: 7, scope: !10732)
!10741 = !DILocation(line: 0, scope: !10732)
!10742 = !DILocation(line: 263, column: 30, scope: !10720)
!10743 = !DILocation(line: 263, column: 52, scope: !10720)
!10744 = !DILocation(line: 263, column: 9, scope: !10720)
!10745 = !DILocation(line: 265, column: 19, scope: !10720)
!10746 = !DILocation(line: 266, column: 1, scope: !10720)
!10747 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !10748, file: !10748, line: 200, type: !10749, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !250)
!10748 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10749 = !DISubroutineType(types: !10750)
!10750 = !{!10751}
!10751 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2841, line: 44, baseType: !2840)
!10752 = !DILocation(line: 202, column: 3, scope: !10747)
!10753 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !10748, file: !10748, line: 219, type: !10754, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !10779)
!10754 = !DISubroutineType(types: !10755)
!10755 = !{!10751, !10756}
!10756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10757, size: 32)
!10757 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !10758, line: 70, baseType: !10759)
!10758 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10758, line: 49, size: 416, elements: !10760)
!10760 = !{!10761, !10762, !10763, !10764, !10765, !10766, !10767}
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !10759, file: !10758, line: 51, baseType: !162, size: 32)
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !10759, file: !10758, line: 54, baseType: !162, size: 32, offset: 32)
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !10759, file: !10758, line: 57, baseType: !162, size: 32, offset: 64)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !10759, file: !10758, line: 60, baseType: !162, size: 32, offset: 96)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !10759, file: !10758, line: 63, baseType: !162, size: 32, offset: 128)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !10759, file: !10758, line: 66, baseType: !162, size: 32, offset: 160)
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !10759, file: !10758, line: 69, baseType: !10768, size: 224, offset: 192)
!10768 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !10769, line: 73, baseType: !10770)
!10769 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10769, line: 45, size: 224, elements: !10771)
!10771 = !{!10772, !10773, !10774, !10775, !10776, !10777, !10778}
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !10770, file: !10769, line: 47, baseType: !162, size: 32)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !10770, file: !10769, line: 50, baseType: !162, size: 32, offset: 32)
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !10770, file: !10769, line: 53, baseType: !162, size: 32, offset: 64)
!10775 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !10770, file: !10769, line: 56, baseType: !162, size: 32, offset: 96)
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !10770, file: !10769, line: 60, baseType: !162, size: 32, offset: 128)
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !10770, file: !10769, line: 63, baseType: !162, size: 32, offset: 160)
!10778 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !10770, file: !10769, line: 68, baseType: !162, size: 32, offset: 192)
!10779 = !{!10780, !10781, !10782, !10783, !10787}
!10780 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !10753, file: !10748, line: 219, type: !10756)
!10781 = !DILocalVariable(name: "tickstart", scope: !10753, file: !10748, line: 221, type: !162)
!10782 = !DILocalVariable(name: "pll_config", scope: !10753, file: !10748, line: 221, type: !162)
!10783 = !DILocalVariable(name: "pwrclkchanged", scope: !10784, file: !10748, line: 391, type: !10786)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !10748, line: 390, column: 3)
!10785 = distinct !DILexicalBlock(scope: !10753, file: !10748, line: 389, column: 6)
!10786 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !792, line: 188, baseType: !2847)
!10787 = !DILocalVariable(name: "tmpreg", scope: !10788, file: !10748, line: 400, type: !283)
!10788 = distinct !DILexicalBlock(scope: !10789, file: !10748, line: 400, column: 7)
!10789 = distinct !DILexicalBlock(scope: !10790, file: !10748, line: 399, column: 5)
!10790 = distinct !DILexicalBlock(scope: !10784, file: !10748, line: 398, column: 8)
!10791 = !DILocation(line: 0, scope: !10753)
!10792 = !DILocation(line: 224, column: 24, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10753, file: !10748, line: 224, column: 6)
!10794 = !DILocation(line: 224, column: 6, scope: !10753)
!10795 = !DILocation(line: 232, column: 27, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10753, file: !10748, line: 232, column: 6)
!10797 = !DILocation(line: 232, column: 43, scope: !10796)
!10798 = !DILocation(line: 232, column: 69, scope: !10796)
!10799 = !DILocation(line: 232, column: 6, scope: !10753)
!10800 = !DILocation(line: 237, column: 9, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10802, file: !10748, line: 237, column: 8)
!10802 = distinct !DILexicalBlock(scope: !10796, file: !10748, line: 233, column: 3)
!10803 = !DILocation(line: 237, column: 39, scope: !10801)
!10804 = !DILocation(line: 237, column: 60, scope: !10801)
!10805 = !DILocation(line: 238, column: 9, scope: !10801)
!10806 = !DILocation(line: 238, column: 39, scope: !10801)
!10807 = !DILocation(line: 238, column: 60, scope: !10801)
!10808 = !DILocation(line: 238, column: 70, scope: !10801)
!10809 = !DILocation(line: 238, column: 78, scope: !10801)
!10810 = !DILocation(line: 238, column: 100, scope: !10801)
!10811 = !DILocation(line: 237, column: 8, scope: !10802)
!10812 = !DILocation(line: 240, column: 11, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !10748, line: 240, column: 10)
!10814 = distinct !DILexicalBlock(scope: !10801, file: !10748, line: 239, column: 5)
!10815 = !DILocation(line: 240, column: 57, scope: !10813)
!10816 = !DILocation(line: 240, column: 80, scope: !10813)
!10817 = !DILocation(line: 240, column: 89, scope: !10813)
!10818 = !DILocation(line: 240, column: 10, scope: !10814)
!10819 = !DILocation(line: 248, column: 7, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10821, file: !10748, line: 248, column: 7)
!10821 = distinct !DILexicalBlock(scope: !10822, file: !10748, line: 248, column: 7)
!10822 = distinct !DILexicalBlock(scope: !10801, file: !10748, line: 246, column: 5)
!10823 = !DILocation(line: 248, column: 7, scope: !10821)
!10824 = !DILocation(line: 248, column: 7, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10820, file: !10748, line: 248, column: 7)
!10826 = !DILocation(line: 248, column: 7, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10828, file: !10748, line: 248, column: 7)
!10828 = distinct !DILexicalBlock(scope: !10820, file: !10748, line: 248, column: 7)
!10829 = !DILocation(line: 248, column: 7, scope: !10830)
!10830 = distinct !DILexicalBlock(scope: !10828, file: !10748, line: 248, column: 7)
!10831 = !DILocation(line: 0, scope: !10820)
!10832 = !DILocation(line: 251, column: 30, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10822, file: !10748, line: 251, column: 10)
!10834 = !DILocation(line: 251, column: 40, scope: !10833)
!10835 = !DILocation(line: 0, scope: !10833)
!10836 = !DILocation(line: 251, column: 10, scope: !10822)
!10837 = !DILocation(line: 257, column: 15, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10833, file: !10748, line: 252, column: 7)
!10839 = !DILocation(line: 257, column: 51, scope: !10838)
!10840 = !DILocation(line: 257, column: 9, scope: !10838)
!10841 = !DILocation(line: 259, column: 15, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !10748, line: 259, column: 14)
!10843 = distinct !DILexicalBlock(scope: !10838, file: !10748, line: 258, column: 9)
!10844 = !DILocation(line: 259, column: 29, scope: !10842)
!10845 = !DILocation(line: 259, column: 43, scope: !10842)
!10846 = !DILocation(line: 259, column: 14, scope: !10843)
!10847 = distinct !{!10847, !10840, !10848}
!10848 = !DILocation(line: 263, column: 9, scope: !10838)
!10849 = !DILocation(line: 271, column: 15, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10833, file: !10748, line: 266, column: 7)
!10851 = !DILocation(line: 271, column: 9, scope: !10850)
!10852 = !DILocation(line: 273, column: 15, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10854, file: !10748, line: 273, column: 14)
!10854 = distinct !DILexicalBlock(scope: !10850, file: !10748, line: 272, column: 9)
!10855 = !DILocation(line: 273, column: 29, scope: !10853)
!10856 = !DILocation(line: 273, column: 43, scope: !10853)
!10857 = !DILocation(line: 273, column: 14, scope: !10854)
!10858 = distinct !{!10858, !10851, !10859}
!10859 = !DILocation(line: 277, column: 9, scope: !10850)
!10860 = !DILocation(line: 282, column: 27, scope: !10861)
!10861 = distinct !DILexicalBlock(scope: !10753, file: !10748, line: 282, column: 6)
!10862 = !DILocation(line: 282, column: 43, scope: !10861)
!10863 = !DILocation(line: 282, column: 69, scope: !10861)
!10864 = !DILocation(line: 282, column: 6, scope: !10753)
!10865 = !DILocation(line: 289, column: 9, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !10748, line: 289, column: 8)
!10867 = distinct !DILexicalBlock(scope: !10861, file: !10748, line: 283, column: 3)
!10868 = !DILocation(line: 289, column: 39, scope: !10866)
!10869 = !DILocation(line: 289, column: 60, scope: !10866)
!10870 = !DILocation(line: 290, column: 9, scope: !10866)
!10871 = !DILocation(line: 290, column: 39, scope: !10866)
!10872 = !DILocation(line: 290, column: 60, scope: !10866)
!10873 = !DILocation(line: 290, column: 70, scope: !10866)
!10874 = !DILocation(line: 290, column: 78, scope: !10866)
!10875 = !DILocation(line: 290, column: 100, scope: !10866)
!10876 = !DILocation(line: 289, column: 8, scope: !10867)
!10877 = !DILocation(line: 293, column: 11, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10879, file: !10748, line: 293, column: 10)
!10879 = distinct !DILexicalBlock(scope: !10866, file: !10748, line: 291, column: 5)
!10880 = !DILocation(line: 293, column: 57, scope: !10878)
!10881 = !DILocation(line: 293, column: 80, scope: !10878)
!10882 = !DILocation(line: 293, column: 89, scope: !10878)
!10883 = !DILocation(line: 293, column: 10, scope: !10879)
!10884 = !DILocation(line: 307, column: 30, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10886, file: !10748, line: 307, column: 10)
!10886 = distinct !DILexicalBlock(scope: !10866, file: !10748, line: 305, column: 5)
!10887 = !DILocation(line: 307, column: 39, scope: !10885)
!10888 = !DILocation(line: 307, column: 10, scope: !10886)
!10889 = !DILocation(line: 310, column: 9, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10885, file: !10748, line: 308, column: 7)
!10891 = !DILocation(line: 313, column: 21, scope: !10890)
!10892 = !DILocation(line: 316, column: 9, scope: !10890)
!10893 = !DILocation(line: 316, column: 15, scope: !10890)
!10894 = !DILocation(line: 316, column: 51, scope: !10890)
!10895 = !DILocation(line: 318, column: 15, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10897, file: !10748, line: 318, column: 14)
!10897 = distinct !DILexicalBlock(scope: !10890, file: !10748, line: 317, column: 9)
!10898 = !DILocation(line: 318, column: 29, scope: !10896)
!10899 = !DILocation(line: 318, column: 43, scope: !10896)
!10900 = !DILocation(line: 318, column: 14, scope: !10897)
!10901 = distinct !{!10901, !10892, !10902}
!10902 = !DILocation(line: 322, column: 9, scope: !10890)
!10903 = !DILocation(line: 330, column: 9, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10885, file: !10748, line: 328, column: 7)
!10905 = !DILocation(line: 333, column: 21, scope: !10904)
!10906 = !DILocation(line: 336, column: 9, scope: !10904)
!10907 = !DILocation(line: 336, column: 15, scope: !10904)
!10908 = !DILocation(line: 338, column: 15, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10910, file: !10748, line: 338, column: 14)
!10910 = distinct !DILexicalBlock(scope: !10904, file: !10748, line: 337, column: 9)
!10911 = !DILocation(line: 338, column: 29, scope: !10909)
!10912 = !DILocation(line: 338, column: 43, scope: !10909)
!10913 = !DILocation(line: 338, column: 14, scope: !10910)
!10914 = distinct !{!10914, !10906, !10915}
!10915 = !DILocation(line: 342, column: 9, scope: !10904)
!10916 = !DILocation(line: 0, scope: !10866)
!10917 = !DILocation(line: 347, column: 27, scope: !10918)
!10918 = distinct !DILexicalBlock(scope: !10753, file: !10748, line: 347, column: 6)
!10919 = !DILocation(line: 347, column: 43, scope: !10918)
!10920 = !DILocation(line: 347, column: 69, scope: !10918)
!10921 = !DILocation(line: 347, column: 6, scope: !10753)
!10922 = !DILocation(line: 353, column: 28, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10924, file: !10748, line: 353, column: 8)
!10924 = distinct !DILexicalBlock(scope: !10918, file: !10748, line: 348, column: 3)
!10925 = !DILocation(line: 353, column: 37, scope: !10923)
!10926 = !DILocation(line: 353, column: 8, scope: !10924)
!10927 = !DILocation(line: 356, column: 7, scope: !10928)
!10928 = distinct !DILexicalBlock(scope: !10923, file: !10748, line: 354, column: 5)
!10929 = !DILocation(line: 359, column: 19, scope: !10928)
!10930 = !DILocation(line: 362, column: 7, scope: !10928)
!10931 = !DILocation(line: 362, column: 13, scope: !10928)
!10932 = !DILocation(line: 362, column: 49, scope: !10928)
!10933 = !DILocation(line: 364, column: 13, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !10748, line: 364, column: 12)
!10935 = distinct !DILexicalBlock(scope: !10928, file: !10748, line: 363, column: 7)
!10936 = !DILocation(line: 364, column: 27, scope: !10934)
!10937 = !DILocation(line: 364, column: 41, scope: !10934)
!10938 = !DILocation(line: 364, column: 12, scope: !10935)
!10939 = distinct !{!10939, !10930, !10940}
!10940 = !DILocation(line: 368, column: 7, scope: !10928)
!10941 = !DILocation(line: 373, column: 7, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10923, file: !10748, line: 371, column: 5)
!10943 = !DILocation(line: 376, column: 19, scope: !10942)
!10944 = !DILocation(line: 379, column: 7, scope: !10942)
!10945 = !DILocation(line: 379, column: 13, scope: !10942)
!10946 = !DILocation(line: 381, column: 13, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10948, file: !10748, line: 381, column: 12)
!10948 = distinct !DILexicalBlock(scope: !10942, file: !10748, line: 380, column: 7)
!10949 = !DILocation(line: 381, column: 27, scope: !10947)
!10950 = !DILocation(line: 381, column: 41, scope: !10947)
!10951 = !DILocation(line: 381, column: 12, scope: !10948)
!10952 = distinct !{!10952, !10944, !10953}
!10953 = !DILocation(line: 385, column: 7, scope: !10942)
!10954 = !DILocation(line: 389, column: 27, scope: !10785)
!10955 = !DILocation(line: 389, column: 43, scope: !10785)
!10956 = !DILocation(line: 389, column: 69, scope: !10785)
!10957 = !DILocation(line: 389, column: 6, scope: !10753)
!10958 = !DILocation(line: 0, scope: !10784)
!10959 = !DILocation(line: 398, column: 8, scope: !10790)
!10960 = !DILocation(line: 398, column: 8, scope: !10784)
!10961 = !DILocation(line: 400, column: 7, scope: !10788)
!10962 = !DILocation(line: 400, column: 7, scope: !10789)
!10963 = !DILocation(line: 402, column: 5, scope: !10789)
!10964 = !DILocation(line: 404, column: 8, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10784, file: !10748, line: 404, column: 8)
!10966 = !DILocation(line: 404, column: 8, scope: !10784)
!10967 = !DILocation(line: 407, column: 7, scope: !10968)
!10968 = distinct !DILexicalBlock(scope: !10965, file: !10748, line: 405, column: 5)
!10969 = !DILocation(line: 410, column: 19, scope: !10968)
!10970 = !DILocation(line: 412, column: 7, scope: !10968)
!10971 = !DILocation(line: 412, column: 13, scope: !10968)
!10972 = !DILocation(line: 414, column: 13, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !10748, line: 414, column: 12)
!10974 = distinct !DILexicalBlock(scope: !10968, file: !10748, line: 413, column: 7)
!10975 = !DILocation(line: 414, column: 27, scope: !10973)
!10976 = !DILocation(line: 414, column: 40, scope: !10973)
!10977 = !DILocation(line: 414, column: 12, scope: !10974)
!10978 = distinct !{!10978, !10970, !10979}
!10979 = !DILocation(line: 418, column: 7, scope: !10968)
!10980 = !DILocation(line: 422, column: 5, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !10748, line: 422, column: 5)
!10982 = distinct !DILexicalBlock(scope: !10784, file: !10748, line: 422, column: 5)
!10983 = !DILocation(line: 422, column: 5, scope: !10982)
!10984 = !DILocation(line: 422, column: 5, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10981, file: !10748, line: 422, column: 5)
!10986 = !DILocation(line: 422, column: 5, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10988, file: !10748, line: 422, column: 5)
!10988 = distinct !DILexicalBlock(scope: !10981, file: !10748, line: 422, column: 5)
!10989 = !DILocation(line: 422, column: 5, scope: !10990)
!10990 = distinct !DILexicalBlock(scope: !10988, file: !10748, line: 422, column: 5)
!10991 = !DILocation(line: 0, scope: !10981)
!10992 = !DILocation(line: 424, column: 28, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10784, file: !10748, line: 424, column: 8)
!10994 = !DILocation(line: 424, column: 38, scope: !10993)
!10995 = !DILocation(line: 0, scope: !10993)
!10996 = !DILocation(line: 424, column: 8, scope: !10784)
!10997 = !DILocation(line: 430, column: 13, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10993, file: !10748, line: 425, column: 5)
!10999 = !DILocation(line: 430, column: 49, scope: !10998)
!11000 = !DILocation(line: 430, column: 7, scope: !10998)
!11001 = !DILocation(line: 432, column: 13, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !11003, file: !10748, line: 432, column: 12)
!11003 = distinct !DILexicalBlock(scope: !10998, file: !10748, line: 431, column: 7)
!11004 = !DILocation(line: 432, column: 27, scope: !11002)
!11005 = !DILocation(line: 432, column: 41, scope: !11002)
!11006 = !DILocation(line: 432, column: 12, scope: !11003)
!11007 = distinct !{!11007, !11000, !11008}
!11008 = !DILocation(line: 436, column: 7, scope: !10998)
!11009 = !DILocation(line: 444, column: 13, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !10993, file: !10748, line: 439, column: 5)
!11011 = !DILocation(line: 444, column: 7, scope: !11010)
!11012 = !DILocation(line: 446, column: 13, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !10748, line: 446, column: 12)
!11014 = distinct !DILexicalBlock(scope: !11010, file: !10748, line: 445, column: 7)
!11015 = !DILocation(line: 446, column: 27, scope: !11013)
!11016 = !DILocation(line: 446, column: 41, scope: !11013)
!11017 = !DILocation(line: 446, column: 12, scope: !11014)
!11018 = distinct !{!11018, !11011, !11019}
!11019 = !DILocation(line: 450, column: 7, scope: !11010)
!11020 = !DILocation(line: 454, column: 8, scope: !10784)
!11021 = !DILocation(line: 456, column: 7, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !10748, line: 455, column: 5)
!11023 = distinct !DILexicalBlock(scope: !10784, file: !10748, line: 454, column: 8)
!11024 = !DILocation(line: 457, column: 5, scope: !11022)
!11025 = !DILocation(line: 462, column: 31, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !10753, file: !10748, line: 462, column: 7)
!11027 = !DILocation(line: 462, column: 41, scope: !11026)
!11028 = !DILocation(line: 462, column: 7, scope: !10753)
!11029 = !DILocation(line: 465, column: 8, scope: !11030)
!11030 = distinct !DILexicalBlock(scope: !11031, file: !10748, line: 465, column: 8)
!11031 = distinct !DILexicalBlock(scope: !11026, file: !10748, line: 463, column: 3)
!11032 = !DILocation(line: 465, column: 38, scope: !11030)
!11033 = !DILocation(line: 465, column: 8, scope: !11031)
!11034 = !DILocation(line: 467, column: 44, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11036, file: !10748, line: 467, column: 10)
!11036 = distinct !DILexicalBlock(scope: !11030, file: !10748, line: 466, column: 5)
!11037 = !DILocation(line: 0, scope: !11035)
!11038 = !DILocation(line: 467, column: 10, scope: !11036)
!11039 = !DILocation(line: 483, column: 15, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11035, file: !10748, line: 468, column: 7)
!11041 = !DILocation(line: 483, column: 9, scope: !11040)
!11042 = !DILocation(line: 485, column: 15, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !10748, line: 485, column: 14)
!11044 = distinct !DILexicalBlock(scope: !11040, file: !10748, line: 484, column: 9)
!11045 = !DILocation(line: 485, column: 29, scope: !11043)
!11046 = !DILocation(line: 485, column: 43, scope: !11043)
!11047 = !DILocation(line: 485, column: 14, scope: !11044)
!11048 = distinct !{!11048, !11041, !11049}
!11049 = !DILocation(line: 489, column: 9, scope: !11040)
!11050 = !DILocation(line: 492, column: 9, scope: !11040)
!11051 = !DILocation(line: 498, column: 9, scope: !11040)
!11052 = !DILocation(line: 501, column: 21, scope: !11040)
!11053 = !DILocation(line: 504, column: 9, scope: !11040)
!11054 = !DILocation(line: 504, column: 15, scope: !11040)
!11055 = !DILocation(line: 504, column: 51, scope: !11040)
!11056 = !DILocation(line: 506, column: 15, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !10748, line: 506, column: 14)
!11058 = distinct !DILexicalBlock(scope: !11040, file: !10748, line: 505, column: 9)
!11059 = !DILocation(line: 506, column: 29, scope: !11057)
!11060 = !DILocation(line: 506, column: 43, scope: !11057)
!11061 = !DILocation(line: 506, column: 14, scope: !11058)
!11062 = distinct !{!11062, !11053, !11063}
!11063 = !DILocation(line: 510, column: 9, scope: !11040)
!11064 = !DILocation(line: 521, column: 15, scope: !11065)
!11065 = distinct !DILexicalBlock(scope: !11035, file: !10748, line: 513, column: 7)
!11066 = !DILocation(line: 521, column: 9, scope: !11065)
!11067 = !DILocation(line: 523, column: 15, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !11069, file: !10748, line: 523, column: 14)
!11069 = distinct !DILexicalBlock(scope: !11065, file: !10748, line: 522, column: 9)
!11070 = !DILocation(line: 523, column: 29, scope: !11068)
!11071 = !DILocation(line: 523, column: 43, scope: !11068)
!11072 = !DILocation(line: 523, column: 14, scope: !11069)
!11073 = distinct !{!11073, !11066, !11074}
!11074 = !DILocation(line: 527, column: 9, scope: !11065)
!11075 = !DILocation(line: 533, column: 44, scope: !11076)
!11076 = distinct !DILexicalBlock(scope: !11077, file: !10748, line: 533, column: 10)
!11077 = distinct !DILexicalBlock(scope: !11030, file: !10748, line: 531, column: 5)
!11078 = !DILocation(line: 533, column: 10, scope: !11077)
!11079 = !DILocation(line: 540, column: 27, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11076, file: !10748, line: 538, column: 7)
!11081 = !DILocation(line: 543, column: 14, scope: !11082)
!11082 = distinct !DILexicalBlock(scope: !11080, file: !10748, line: 542, column: 13)
!11083 = !DILocation(line: 543, column: 81, scope: !11082)
!11084 = !DILocation(line: 543, column: 55, scope: !11082)
!11085 = !DILocation(line: 543, column: 92, scope: !11082)
!11086 = !DILocation(line: 544, column: 14, scope: !11082)
!11087 = !DILocation(line: 544, column: 80, scope: !11082)
!11088 = !DILocation(line: 544, column: 53, scope: !11082)
!11089 = !DILocation(line: 544, column: 111, scope: !11082)
!11090 = !DILocation(line: 545, column: 14, scope: !11082)
!11091 = !DILocation(line: 545, column: 80, scope: !11082)
!11092 = !DILocation(line: 545, column: 86, scope: !11082)
!11093 = !DILocation(line: 545, column: 53, scope: !11082)
!11094 = !DILocation(line: 545, column: 111, scope: !11082)
!11095 = !DILocation(line: 546, column: 14, scope: !11082)
!11096 = !DILocation(line: 546, column: 82, scope: !11082)
!11097 = !DILocation(line: 546, column: 101, scope: !11082)
!11098 = !DILocation(line: 546, column: 53, scope: !11082)
!11099 = !DILocation(line: 546, column: 126, scope: !11082)
!11100 = !DILocation(line: 547, column: 14, scope: !11082)
!11101 = !DILocation(line: 547, column: 80, scope: !11082)
!11102 = !DILocation(line: 547, column: 85, scope: !11082)
!11103 = !DILocation(line: 547, column: 53, scope: !11082)
!11104 = !DILocation(line: 547, column: 111, scope: !11082)
!11105 = !DILocation(line: 548, column: 14, scope: !11082)
!11106 = !DILocation(line: 548, column: 80, scope: !11082)
!11107 = !DILocation(line: 548, column: 85, scope: !11082)
!11108 = !DILocation(line: 548, column: 53, scope: !11082)
!11109 = !DILocation(line: 542, column: 13, scope: !11080)
!11110 = !DILocation(line: 563, column: 3, scope: !10753)
!11111 = !DILocation(line: 564, column: 1, scope: !10753)
!11112 = !DISubprogram(name: "HAL_GetTick", scope: !11113, file: !11113, line: 234, type: !6169, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11113 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11114 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !10748, file: !10748, line: 591, type: !11115, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !11126)
!11115 = !DISubroutineType(types: !11116)
!11116 = !{!10751, !11117, !162}
!11117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11118, size: 32)
!11118 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !10758, line: 92, baseType: !11119)
!11119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !10758, line: 75, size: 160, elements: !11120)
!11120 = !{!11121, !11122, !11123, !11124, !11125}
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11119, file: !10758, line: 77, baseType: !162, size: 32)
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11119, file: !10758, line: 80, baseType: !162, size: 32, offset: 32)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11119, file: !10758, line: 83, baseType: !162, size: 32, offset: 64)
!11124 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11119, file: !10758, line: 86, baseType: !162, size: 32, offset: 96)
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11119, file: !10758, line: 89, baseType: !162, size: 32, offset: 128)
!11126 = !{!11127, !11128, !11129}
!11127 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11114, file: !10748, line: 591, type: !11117)
!11128 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11114, file: !10748, line: 591, type: !162)
!11129 = !DILocalVariable(name: "tickstart", scope: !11114, file: !10748, line: 593, type: !162)
!11130 = !DILocation(line: 0, scope: !11114)
!11131 = !DILocation(line: 596, column: 24, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11114, file: !10748, line: 596, column: 6)
!11133 = !DILocation(line: 596, column: 6, scope: !11114)
!11134 = !DILocation(line: 610, column: 17, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11114, file: !10748, line: 610, column: 6)
!11136 = !DILocation(line: 610, column: 15, scope: !11135)
!11137 = !DILocation(line: 610, column: 6, scope: !11114)
!11138 = !DILocation(line: 613, column: 5, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11135, file: !10748, line: 611, column: 3)
!11140 = !DILocation(line: 617, column: 8, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11139, file: !10748, line: 617, column: 8)
!11142 = !DILocation(line: 617, column: 34, scope: !11141)
!11143 = !DILocation(line: 617, column: 8, scope: !11139)
!11144 = !DILocation(line: 624, column: 27, scope: !11145)
!11145 = distinct !DILexicalBlock(scope: !11114, file: !10748, line: 624, column: 6)
!11146 = !DILocation(line: 624, column: 38, scope: !11145)
!11147 = !DILocation(line: 624, column: 60, scope: !11145)
!11148 = !DILocation(line: 624, column: 6, scope: !11114)
!11149 = !DILocation(line: 628, column: 40, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11151, file: !10748, line: 628, column: 8)
!11151 = distinct !DILexicalBlock(scope: !11145, file: !10748, line: 625, column: 3)
!11152 = !DILocation(line: 628, column: 63, scope: !11150)
!11153 = !DILocation(line: 628, column: 8, scope: !11151)
!11154 = !DILocation(line: 630, column: 7, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11150, file: !10748, line: 629, column: 5)
!11156 = !DILocation(line: 633, column: 29, scope: !11157)
!11157 = distinct !DILexicalBlock(scope: !11151, file: !10748, line: 633, column: 8)
!11158 = !DILocation(line: 631, column: 5, scope: !11155)
!11159 = !DILocation(line: 633, column: 40, scope: !11157)
!11160 = !DILocation(line: 633, column: 63, scope: !11157)
!11161 = !DILocation(line: 633, column: 8, scope: !11151)
!11162 = !DILocation(line: 635, column: 7, scope: !11163)
!11163 = distinct !DILexicalBlock(scope: !11157, file: !10748, line: 634, column: 5)
!11164 = !DILocation(line: 636, column: 5, scope: !11163)
!11165 = !DILocation(line: 639, column: 5, scope: !11151)
!11166 = !DILocation(line: 643, column: 27, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11114, file: !10748, line: 643, column: 6)
!11168 = !DILocation(line: 640, column: 3, scope: !11151)
!11169 = !DILocation(line: 643, column: 38, scope: !11167)
!11170 = !DILocation(line: 643, column: 62, scope: !11167)
!11171 = !DILocation(line: 643, column: 6, scope: !11114)
!11172 = !DILocation(line: 648, column: 27, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11174, file: !10748, line: 648, column: 8)
!11174 = distinct !DILexicalBlock(scope: !11167, file: !10748, line: 644, column: 3)
!11175 = !DILocation(line: 648, column: 8, scope: !11174)
!11176 = !DILocation(line: 651, column: 10, scope: !11177)
!11177 = distinct !DILexicalBlock(scope: !11178, file: !10748, line: 651, column: 10)
!11178 = distinct !DILexicalBlock(scope: !11173, file: !10748, line: 649, column: 5)
!11179 = !DILocation(line: 651, column: 46, scope: !11177)
!11180 = !DILocation(line: 651, column: 10, scope: !11178)
!11181 = !DILocation(line: 661, column: 10, scope: !11182)
!11182 = distinct !DILexicalBlock(scope: !11183, file: !10748, line: 661, column: 10)
!11183 = distinct !DILexicalBlock(scope: !11184, file: !10748, line: 659, column: 5)
!11184 = distinct !DILexicalBlock(scope: !11173, file: !10748, line: 657, column: 13)
!11185 = !DILocation(line: 661, column: 46, scope: !11182)
!11186 = !DILocation(line: 661, column: 10, scope: !11183)
!11187 = !DILocation(line: 670, column: 10, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11189, file: !10748, line: 670, column: 10)
!11189 = distinct !DILexicalBlock(scope: !11184, file: !10748, line: 668, column: 5)
!11190 = !DILocation(line: 670, column: 46, scope: !11188)
!11191 = !DILocation(line: 670, column: 10, scope: !11189)
!11192 = !DILocation(line: 676, column: 5, scope: !11174)
!11193 = !DILocation(line: 679, column: 17, scope: !11174)
!11194 = !DILocation(line: 681, column: 5, scope: !11174)
!11195 = !DILocation(line: 681, column: 12, scope: !11174)
!11196 = !DILocation(line: 681, column: 65, scope: !11174)
!11197 = !DILocation(line: 681, column: 78, scope: !11174)
!11198 = !DILocation(line: 681, column: 42, scope: !11174)
!11199 = !DILocation(line: 683, column: 12, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !10748, line: 683, column: 11)
!11201 = distinct !DILexicalBlock(scope: !11174, file: !10748, line: 682, column: 5)
!11202 = !DILocation(line: 683, column: 26, scope: !11200)
!11203 = !DILocation(line: 683, column: 39, scope: !11200)
!11204 = !DILocation(line: 683, column: 11, scope: !11201)
!11205 = distinct !{!11205, !11194, !11206}
!11206 = !DILocation(line: 687, column: 5, scope: !11174)
!11207 = !DILocation(line: 691, column: 17, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11114, file: !10748, line: 691, column: 6)
!11209 = !DILocation(line: 691, column: 15, scope: !11208)
!11210 = !DILocation(line: 691, column: 6, scope: !11114)
!11211 = !DILocation(line: 694, column: 5, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11208, file: !10748, line: 692, column: 3)
!11213 = !DILocation(line: 698, column: 8, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11212, file: !10748, line: 698, column: 8)
!11215 = !DILocation(line: 698, column: 34, scope: !11214)
!11216 = !DILocation(line: 698, column: 8, scope: !11212)
!11217 = !DILocation(line: 705, column: 27, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11114, file: !10748, line: 705, column: 6)
!11219 = !DILocation(line: 705, column: 38, scope: !11218)
!11220 = !DILocation(line: 705, column: 61, scope: !11218)
!11221 = !DILocation(line: 705, column: 6, scope: !11114)
!11222 = !DILocation(line: 708, column: 5, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11218, file: !10748, line: 706, column: 3)
!11224 = !DILocation(line: 712, column: 27, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11114, file: !10748, line: 712, column: 6)
!11226 = !DILocation(line: 709, column: 3, scope: !11223)
!11227 = !DILocation(line: 712, column: 38, scope: !11225)
!11228 = !DILocation(line: 712, column: 61, scope: !11225)
!11229 = !DILocation(line: 712, column: 6, scope: !11114)
!11230 = !DILocation(line: 715, column: 5, scope: !11231)
!11231 = distinct !DILexicalBlock(scope: !11225, file: !10748, line: 713, column: 3)
!11232 = !DILocation(line: 716, column: 3, scope: !11231)
!11233 = !DILocation(line: 719, column: 21, scope: !11114)
!11234 = !DILocation(line: 719, column: 70, scope: !11114)
!11235 = !DILocation(line: 719, column: 91, scope: !11114)
!11236 = !DILocation(line: 719, column: 50, scope: !11114)
!11237 = !DILocation(line: 719, column: 47, scope: !11114)
!11238 = !DILocation(line: 719, column: 19, scope: !11114)
!11239 = !DILocation(line: 722, column: 17, scope: !11114)
!11240 = !DILocation(line: 722, column: 3, scope: !11114)
!11241 = !DILocation(line: 724, column: 3, scope: !11114)
!11242 = !DILocation(line: 725, column: 1, scope: !11114)
!11243 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !10748, file: !10748, line: 885, type: !6169, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !11244)
!11244 = !{!11245, !11246, !11247, !11248}
!11245 = !DILocalVariable(name: "pllm", scope: !11243, file: !10748, line: 887, type: !162)
!11246 = !DILocalVariable(name: "pllvco", scope: !11243, file: !10748, line: 887, type: !162)
!11247 = !DILocalVariable(name: "pllp", scope: !11243, file: !10748, line: 887, type: !162)
!11248 = !DILocalVariable(name: "sysclockfreq", scope: !11243, file: !10748, line: 888, type: !162)
!11249 = !DILocation(line: 0, scope: !11243)
!11250 = !DILocation(line: 891, column: 16, scope: !11243)
!11251 = !DILocation(line: 891, column: 21, scope: !11243)
!11252 = !DILocation(line: 891, column: 3, scope: !11243)
!11253 = !DILocation(line: 907, column: 19, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11255, file: !10748, line: 904, column: 5)
!11255 = distinct !DILexicalBlock(scope: !11243, file: !10748, line: 892, column: 3)
!11256 = !DILocation(line: 907, column: 27, scope: !11254)
!11257 = !DILocation(line: 908, column: 10, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11254, file: !10748, line: 908, column: 10)
!11259 = !DILocation(line: 0, scope: !11258)
!11260 = !DILocation(line: 918, column: 23, scope: !11254)
!11261 = !DILocation(line: 918, column: 82, scope: !11254)
!11262 = !DILocation(line: 920, column: 28, scope: !11254)
!11263 = !DILocation(line: 921, column: 7, scope: !11254)
!11264 = !DILocation(line: 0, scope: !11255)
!11265 = !DILocation(line: 929, column: 3, scope: !11243)
!11266 = !DISubprogram(name: "HAL_InitTick", scope: !11113, file: !11113, line: 223, type: !11267, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11267 = !DISubroutineType(types: !11268)
!11268 = !{!10751, !162}
!11269 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !10748, file: !10748, line: 775, type: !11270, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !11272)
!11270 = !DISubroutineType(types: !11271)
!11271 = !{null, !162, !162, !162}
!11272 = !{!11273, !11274, !11275, !11276, !11286}
!11273 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11269, file: !10748, line: 775, type: !162)
!11274 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11269, file: !10748, line: 775, type: !162)
!11275 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11269, file: !10748, line: 775, type: !162)
!11276 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11269, file: !10748, line: 777, type: !11277)
!11277 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11278, line: 62, baseType: !11279)
!11278 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11279 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11278, line: 46, size: 160, elements: !11280)
!11280 = !{!11281, !11282, !11283, !11284, !11285}
!11281 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11279, file: !11278, line: 48, baseType: !162, size: 32)
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11279, file: !11278, line: 51, baseType: !162, size: 32, offset: 32)
!11283 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11279, file: !11278, line: 54, baseType: !162, size: 32, offset: 64)
!11284 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11279, file: !11278, line: 57, baseType: !162, size: 32, offset: 96)
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11279, file: !11278, line: 60, baseType: !162, size: 32, offset: 128)
!11286 = !DILocalVariable(name: "tmpreg", scope: !11287, file: !10748, line: 787, type: !283)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !10748, line: 787, column: 5)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !10748, line: 783, column: 3)
!11289 = distinct !DILexicalBlock(scope: !11269, file: !10748, line: 782, column: 6)
!11290 = !DILocation(line: 0, scope: !11269)
!11291 = !DILocation(line: 777, column: 3, scope: !11269)
!11292 = !DILocation(line: 777, column: 20, scope: !11269)
!11293 = !DILocation(line: 782, column: 15, scope: !11289)
!11294 = !DILocation(line: 782, column: 6, scope: !11269)
!11295 = !DILocation(line: 787, column: 5, scope: !11287)
!11296 = !DILocation(line: 787, column: 5, scope: !11288)
!11297 = !DILocation(line: 790, column: 21, scope: !11288)
!11298 = !DILocation(line: 790, column: 25, scope: !11288)
!11299 = !DILocation(line: 791, column: 21, scope: !11288)
!11300 = !DILocation(line: 791, column: 26, scope: !11288)
!11301 = !DILocation(line: 792, column: 21, scope: !11288)
!11302 = !DILocation(line: 792, column: 27, scope: !11288)
!11303 = !DILocation(line: 793, column: 21, scope: !11288)
!11304 = !DILocation(line: 793, column: 26, scope: !11288)
!11305 = !DILocation(line: 794, column: 21, scope: !11288)
!11306 = !DILocation(line: 794, column: 31, scope: !11288)
!11307 = !DILocation(line: 795, column: 5, scope: !11288)
!11308 = !DILocation(line: 798, column: 5, scope: !11288)
!11309 = !DILocation(line: 804, column: 3, scope: !11288)
!11310 = !DILocation(line: 830, column: 1, scope: !11269)
!11311 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11278, file: !11278, line: 224, type: !11312, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!11312 = !DISubroutineType(types: !11313)
!11313 = !{null, !2909, !11314}
!11314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11277, size: 32)
!11315 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !10748, file: !10748, line: 841, type: !3130, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !250)
!11316 = !DILocation(line: 843, column: 38, scope: !11315)
!11317 = !DILocation(line: 844, column: 1, scope: !11315)
!11318 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !10748, file: !10748, line: 850, type: !3130, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !250)
!11319 = !DILocation(line: 852, column: 38, scope: !11318)
!11320 = !DILocation(line: 853, column: 1, scope: !11318)
!11321 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !10748, file: !10748, line: 941, type: !6169, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !250)
!11322 = !DILocation(line: 943, column: 10, scope: !11321)
!11323 = !DILocation(line: 943, column: 3, scope: !11321)
!11324 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !10748, file: !10748, line: 952, type: !6169, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !250)
!11325 = !DILocation(line: 955, column: 11, scope: !11324)
!11326 = !DILocation(line: 955, column: 56, scope: !11324)
!11327 = !DILocation(line: 955, column: 78, scope: !11324)
!11328 = !DILocation(line: 955, column: 36, scope: !11324)
!11329 = !DILocation(line: 955, column: 33, scope: !11324)
!11330 = !DILocation(line: 955, column: 3, scope: !11324)
!11331 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !10748, file: !10748, line: 964, type: !6169, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !250)
!11332 = !DILocation(line: 967, column: 11, scope: !11331)
!11333 = !DILocation(line: 967, column: 55, scope: !11331)
!11334 = !DILocation(line: 967, column: 77, scope: !11331)
!11335 = !DILocation(line: 967, column: 35, scope: !11331)
!11336 = !DILocation(line: 967, column: 32, scope: !11331)
!11337 = !DILocation(line: 967, column: 3, scope: !11331)
!11338 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !10748, file: !10748, line: 977, type: !11339, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !11341)
!11339 = !DISubroutineType(types: !11340)
!11340 = !{null, !10756}
!11341 = !{!11342}
!11342 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11338, file: !10748, line: 977, type: !10756)
!11343 = !DILocation(line: 0, scope: !11338)
!11344 = !DILocation(line: 980, column: 22, scope: !11338)
!11345 = !DILocation(line: 980, column: 37, scope: !11338)
!11346 = !DILocation(line: 983, column: 12, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11338, file: !10748, line: 983, column: 6)
!11348 = !DILocation(line: 983, column: 15, scope: !11347)
!11349 = !DILocation(line: 983, column: 31, scope: !11347)
!11350 = !DILocation(line: 983, column: 6, scope: !11338)
!11351 = !DILocation(line: 985, column: 24, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11347, file: !10748, line: 984, column: 3)
!11353 = !DILocation(line: 985, column: 33, scope: !11352)
!11354 = !DILocation(line: 986, column: 3, scope: !11352)
!11355 = !DILocation(line: 987, column: 17, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11347, file: !10748, line: 987, column: 11)
!11357 = !DILocation(line: 987, column: 20, scope: !11356)
!11358 = !DILocation(line: 987, column: 35, scope: !11356)
!11359 = !DILocation(line: 0, scope: !11356)
!11360 = !DILocation(line: 987, column: 11, scope: !11347)
!11361 = !DILocation(line: 989, column: 33, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11356, file: !10748, line: 988, column: 3)
!11363 = !DILocation(line: 990, column: 3, scope: !11362)
!11364 = !DILocation(line: 993, column: 33, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11356, file: !10748, line: 992, column: 3)
!11366 = !DILocation(line: 997, column: 12, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11338, file: !10748, line: 997, column: 6)
!11368 = !DILocation(line: 997, column: 15, scope: !11367)
!11369 = !DILocation(line: 1003, column: 24, scope: !11370)
!11370 = distinct !DILexicalBlock(scope: !11367, file: !10748, line: 1002, column: 3)
!11371 = !DILocation(line: 1003, column: 33, scope: !11370)
!11372 = !DILocation(line: 1006, column: 61, scope: !11338)
!11373 = !DILocation(line: 1006, column: 81, scope: !11338)
!11374 = !DILocation(line: 1006, column: 22, scope: !11338)
!11375 = !DILocation(line: 1006, column: 42, scope: !11338)
!11376 = !DILocation(line: 1009, column: 12, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11338, file: !10748, line: 1009, column: 6)
!11378 = !DILocation(line: 1009, column: 17, scope: !11377)
!11379 = !DILocation(line: 1009, column: 35, scope: !11377)
!11380 = !DILocation(line: 1009, column: 6, scope: !11338)
!11381 = !DILocation(line: 1011, column: 24, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11377, file: !10748, line: 1010, column: 3)
!11383 = !DILocation(line: 1011, column: 33, scope: !11382)
!11384 = !DILocation(line: 1012, column: 3, scope: !11382)
!11385 = !DILocation(line: 1013, column: 17, scope: !11386)
!11386 = distinct !DILexicalBlock(scope: !11377, file: !10748, line: 1013, column: 11)
!11387 = !DILocation(line: 1013, column: 22, scope: !11386)
!11388 = !DILocation(line: 1013, column: 39, scope: !11386)
!11389 = !DILocation(line: 0, scope: !11386)
!11390 = !DILocation(line: 1013, column: 11, scope: !11377)
!11391 = !DILocation(line: 1015, column: 33, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11386, file: !10748, line: 1014, column: 3)
!11393 = !DILocation(line: 1016, column: 3, scope: !11392)
!11394 = !DILocation(line: 1019, column: 33, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11386, file: !10748, line: 1018, column: 3)
!11396 = !DILocation(line: 1023, column: 12, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11338, file: !10748, line: 1023, column: 6)
!11398 = !DILocation(line: 1023, column: 16, scope: !11397)
!11399 = !DILocation(line: 1029, column: 24, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11397, file: !10748, line: 1028, column: 3)
!11401 = !DILocation(line: 1029, column: 33, scope: !11400)
!11402 = !DILocation(line: 1033, column: 12, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11338, file: !10748, line: 1033, column: 6)
!11404 = !DILocation(line: 1033, column: 15, scope: !11403)
!11405 = !DILocation(line: 1033, column: 30, scope: !11403)
!11406 = !DILocation(line: 1033, column: 6, scope: !11338)
!11407 = !DILocation(line: 1039, column: 28, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11403, file: !10748, line: 1038, column: 3)
!11409 = !DILocation(line: 1039, column: 37, scope: !11408)
!11410 = !DILocation(line: 1041, column: 54, scope: !11338)
!11411 = !DILocation(line: 1041, column: 62, scope: !11338)
!11412 = !DILocation(line: 1041, column: 26, scope: !11338)
!11413 = !DILocation(line: 1041, column: 36, scope: !11338)
!11414 = !DILocation(line: 1042, column: 49, scope: !11338)
!11415 = !DILocation(line: 1042, column: 57, scope: !11338)
!11416 = !DILocation(line: 1042, column: 26, scope: !11338)
!11417 = !DILocation(line: 1042, column: 31, scope: !11338)
!11418 = !DILocation(line: 1043, column: 50, scope: !11338)
!11419 = !DILocation(line: 1043, column: 78, scope: !11338)
!11420 = !DILocation(line: 1043, column: 26, scope: !11338)
!11421 = !DILocation(line: 1043, column: 31, scope: !11338)
!11422 = !DILocation(line: 1044, column: 52, scope: !11338)
!11423 = !DILocation(line: 1044, column: 102, scope: !11338)
!11424 = !DILocation(line: 1044, column: 109, scope: !11338)
!11425 = !DILocation(line: 1044, column: 26, scope: !11338)
!11426 = !DILocation(line: 1044, column: 31, scope: !11338)
!11427 = !DILocation(line: 1045, column: 50, scope: !11338)
!11428 = !DILocation(line: 1045, column: 78, scope: !11338)
!11429 = !DILocation(line: 1045, column: 26, scope: !11338)
!11430 = !DILocation(line: 1045, column: 31, scope: !11338)
!11431 = !DILocation(line: 1046, column: 1, scope: !11338)
!11432 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !10748, file: !10748, line: 1056, type: !11433, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !11435)
!11433 = !DISubroutineType(types: !11434)
!11434 = !{null, !11117, !846}
!11435 = !{!11436, !11437}
!11436 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11432, file: !10748, line: 1056, type: !11117)
!11437 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11432, file: !10748, line: 1056, type: !846)
!11438 = !DILocation(line: 0, scope: !11432)
!11439 = !DILocation(line: 1059, column: 22, scope: !11432)
!11440 = !DILocation(line: 1059, column: 32, scope: !11432)
!11441 = !DILocation(line: 1062, column: 53, scope: !11432)
!11442 = !DILocation(line: 1062, column: 58, scope: !11432)
!11443 = !DILocation(line: 1062, column: 22, scope: !11432)
!11444 = !DILocation(line: 1062, column: 35, scope: !11432)
!11445 = !DILocation(line: 1065, column: 54, scope: !11432)
!11446 = !DILocation(line: 1065, column: 59, scope: !11432)
!11447 = !DILocation(line: 1065, column: 22, scope: !11432)
!11448 = !DILocation(line: 1065, column: 36, scope: !11432)
!11449 = !DILocation(line: 1068, column: 55, scope: !11432)
!11450 = !DILocation(line: 1068, column: 60, scope: !11432)
!11451 = !DILocation(line: 1068, column: 22, scope: !11432)
!11452 = !DILocation(line: 1068, column: 37, scope: !11432)
!11453 = !DILocation(line: 1071, column: 56, scope: !11432)
!11454 = !DILocation(line: 1071, column: 79, scope: !11432)
!11455 = !DILocation(line: 1071, column: 22, scope: !11432)
!11456 = !DILocation(line: 1071, column: 37, scope: !11432)
!11457 = !DILocation(line: 1074, column: 34, scope: !11432)
!11458 = !DILocation(line: 1074, column: 38, scope: !11432)
!11459 = !DILocation(line: 1074, column: 14, scope: !11432)
!11460 = !DILocation(line: 1075, column: 1, scope: !11432)
!11461 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !10748, file: !10748, line: 1082, type: !3130, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !250)
!11462 = !DILocation(line: 1085, column: 6, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11461, file: !10748, line: 1085, column: 6)
!11464 = !DILocation(line: 1085, column: 6, scope: !11461)
!11465 = !DILocation(line: 1088, column: 5, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11463, file: !10748, line: 1086, column: 3)
!11467 = !DILocation(line: 1091, column: 5, scope: !11466)
!11468 = !DILocation(line: 1092, column: 3, scope: !11466)
!11469 = !DILocation(line: 1093, column: 1, scope: !11461)
!11470 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !10748, file: !10748, line: 1099, type: !3130, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2837, retainedNodes: !250)
!11471 = !DILocation(line: 1104, column: 1, scope: !11470)
!11472 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11473, file: !11473, line: 257, type: !6179, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11474)
!11473 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11474 = !{!11475}
!11475 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11472, file: !11473, line: 257, type: !162)
!11476 = !DILocation(line: 0, scope: !11472)
!11477 = !DILocation(line: 260, column: 3, scope: !11472)
!11478 = !DILocation(line: 261, column: 1, scope: !11472)
!11479 = distinct !DISubprogram(name: "LL_InitTick", scope: !11480, file: !11480, line: 260, type: !8781, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11481)
!11480 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11481 = !{!11482, !11483}
!11482 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11479, file: !11480, line: 260, type: !162)
!11483 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11479, file: !11480, line: 260, type: !162)
!11484 = !DILocation(line: 0, scope: !11479)
!11485 = !DILocation(line: 263, column: 46, scope: !11479)
!11486 = !DILocation(line: 263, column: 55, scope: !11479)
!11487 = !DILocation(line: 263, column: 18, scope: !11479)
!11488 = !DILocation(line: 264, column: 18, scope: !11479)
!11489 = !DILocation(line: 265, column: 18, scope: !11479)
!11490 = !DILocation(line: 267, column: 1, scope: !11479)
!11491 = distinct !DISubprogram(name: "LL_mDelay", scope: !11473, file: !11473, line: 273, type: !6179, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11492)
!11492 = !{!11493, !11494}
!11493 = !DILocalVariable(name: "Delay", arg: 1, scope: !11491, file: !11473, line: 273, type: !162)
!11494 = !DILocalVariable(name: "tmp", scope: !11491, file: !11473, line: 275, type: !283)
!11495 = !DILocation(line: 0, scope: !11491)
!11496 = !DILocation(line: 275, column: 3, scope: !11491)
!11497 = !DILocation(line: 275, column: 18, scope: !11491)
!11498 = !DILocation(line: 275, column: 33, scope: !11491)
!11499 = !DILocation(line: 277, column: 10, scope: !11491)
!11500 = !DILocation(line: 280, column: 12, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11491, file: !11473, line: 280, column: 6)
!11502 = !DILocation(line: 285, column: 3, scope: !11491)
!11503 = !DILocation(line: 287, column: 18, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !11473, line: 287, column: 8)
!11505 = distinct !DILexicalBlock(scope: !11491, file: !11473, line: 286, column: 3)
!11506 = !DILocation(line: 292, column: 1, scope: !11491)
!11507 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11473, file: !11473, line: 323, type: !6179, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11508)
!11508 = !{!11509}
!11509 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11507, file: !11473, line: 323, type: !162)
!11510 = !DILocation(line: 0, scope: !11507)
!11511 = !DILocation(line: 326, column: 19, scope: !11507)
!11512 = !DILocation(line: 327, column: 1, scope: !11507)
!11513 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11473, file: !11473, line: 338, type: !11514, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11517)
!11514 = !DISubroutineType(types: !11515)
!11515 = !{!11516, !162}
!11516 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !792, line: 201, baseType: !791)
!11517 = !{!11518, !11519, !11520, !11521, !11522}
!11518 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11513, file: !11473, line: 338, type: !162)
!11519 = !DILocalVariable(name: "timeout", scope: !11513, file: !11473, line: 340, type: !162)
!11520 = !DILocalVariable(name: "getlatency", scope: !11513, file: !11473, line: 341, type: !162)
!11521 = !DILocalVariable(name: "latency", scope: !11513, file: !11473, line: 342, type: !162)
!11522 = !DILocalVariable(name: "status", scope: !11513, file: !11473, line: 343, type: !11516)
!11523 = !DILocation(line: 0, scope: !11513)
!11524 = !DILocation(line: 347, column: 21, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11513, file: !11473, line: 347, column: 6)
!11526 = !DILocation(line: 347, column: 6, scope: !11513)
!11527 = !DILocation(line: 353, column: 8, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !11473, line: 353, column: 8)
!11529 = distinct !DILexicalBlock(scope: !11525, file: !11473, line: 352, column: 3)
!11530 = !DILocation(line: 353, column: 40, scope: !11528)
!11531 = !DILocation(line: 353, column: 8, scope: !11529)
!11532 = !DILocation(line: 374, column: 55, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11534, file: !11473, line: 374, column: 10)
!11534 = distinct !DILexicalBlock(scope: !11528, file: !11473, line: 354, column: 5)
!11535 = !DILocation(line: 368, column: 26, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11534, file: !11473, line: 368, column: 10)
!11537 = !DILocation(line: 368, column: 55, scope: !11536)
!11538 = !DILocation(line: 380, column: 57, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11540, file: !11473, line: 380, column: 12)
!11540 = distinct !DILexicalBlock(scope: !11533, file: !11473, line: 379, column: 7)
!11541 = !DILocation(line: 387, column: 8, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11529, file: !11473, line: 387, column: 8)
!11543 = !DILocation(line: 387, column: 40, scope: !11542)
!11544 = !DILocation(line: 387, column: 8, scope: !11529)
!11545 = !DILocation(line: 407, column: 26, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11547, file: !11473, line: 407, column: 10)
!11547 = distinct !DILexicalBlock(scope: !11542, file: !11473, line: 388, column: 5)
!11548 = !DILocation(line: 407, column: 55, scope: !11546)
!11549 = !DILocation(line: 413, column: 28, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11551, file: !11473, line: 413, column: 12)
!11551 = distinct !DILexicalBlock(scope: !11546, file: !11473, line: 412, column: 7)
!11552 = !DILocation(line: 413, column: 57, scope: !11550)
!11553 = !DILocation(line: 0, scope: !11529)
!11554 = !DILocation(line: 420, column: 8, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11529, file: !11473, line: 420, column: 8)
!11556 = !DILocation(line: 420, column: 40, scope: !11555)
!11557 = !DILocation(line: 420, column: 8, scope: !11529)
!11558 = !DILocation(line: 429, column: 26, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11560, file: !11473, line: 429, column: 10)
!11560 = distinct !DILexicalBlock(scope: !11555, file: !11473, line: 421, column: 5)
!11561 = !DILocation(line: 429, column: 55, scope: !11559)
!11562 = !DILocation(line: 435, column: 28, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11564, file: !11473, line: 435, column: 12)
!11564 = distinct !DILexicalBlock(scope: !11559, file: !11473, line: 434, column: 7)
!11565 = !DILocation(line: 435, column: 57, scope: !11563)
!11566 = !DILocation(line: 444, column: 5, scope: !11529)
!11567 = !DILocation(line: 448, column: 5, scope: !11529)
!11568 = !DILocation(line: 451, column: 18, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11529, file: !11473, line: 449, column: 5)
!11570 = !DILocation(line: 452, column: 12, scope: !11569)
!11571 = !DILocation(line: 453, column: 26, scope: !11529)
!11572 = !DILocation(line: 453, column: 38, scope: !11529)
!11573 = !DILocation(line: 453, column: 5, scope: !11569)
!11574 = distinct !{!11574, !11567, !11575}
!11575 = !DILocation(line: 453, column: 54, scope: !11529)
!11576 = !DILocation(line: 0, scope: !11525)
!11577 = !DILocation(line: 464, column: 3, scope: !11513)
!11578 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11579, file: !11579, line: 519, type: !6169, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11579 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11580 = !DILocation(line: 521, column: 21, scope: !11578)
!11581 = !DILocation(line: 521, column: 3, scope: !11578)
!11582 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !5935, file: !5935, line: 1543, type: !6179, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11583)
!11583 = !{!11584}
!11584 = !DILocalVariable(name: "Latency", arg: 1, scope: !11582, file: !5935, line: 1543, type: !162)
!11585 = !DILocation(line: 0, scope: !11582)
!11586 = !DILocation(line: 1545, column: 3, scope: !11582)
!11587 = !DILocation(line: 1546, column: 1, scope: !11582)
!11588 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !5935, file: !5935, line: 1569, type: !6169, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11589 = !DILocation(line: 1571, column: 21, scope: !11588)
!11590 = !DILocation(line: 1571, column: 3, scope: !11588)
!11591 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11473, file: !11473, line: 483, type: !11592, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11608)
!11592 = !DISubroutineType(types: !11593)
!11593 = !{!11516, !11594, !11601}
!11594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11595, size: 32)
!11595 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11480, line: 114, baseType: !11596)
!11596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11480, line: 94, size: 96, elements: !11597)
!11597 = !{!11598, !11599, !11600}
!11598 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11596, file: !11480, line: 96, baseType: !162, size: 32)
!11599 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11596, file: !11480, line: 102, baseType: !162, size: 32, offset: 32)
!11600 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11596, file: !11480, line: 109, baseType: !162, size: 32, offset: 64)
!11601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11602, size: 32)
!11602 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11480, line: 139, baseType: !11603)
!11603 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11480, line: 119, size: 96, elements: !11604)
!11604 = !{!11605, !11606, !11607}
!11605 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11603, file: !11480, line: 121, baseType: !162, size: 32)
!11606 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11603, file: !11480, line: 127, baseType: !162, size: 32, offset: 32)
!11607 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11603, file: !11480, line: 133, baseType: !162, size: 32, offset: 64)
!11608 = !{!11609, !11610, !11611, !11612}
!11609 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11591, file: !11473, line: 483, type: !11594)
!11610 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11591, file: !11473, line: 484, type: !11601)
!11611 = !DILocalVariable(name: "status", scope: !11591, file: !11473, line: 486, type: !11516)
!11612 = !DILocalVariable(name: "pllfreq", scope: !11591, file: !11473, line: 487, type: !162)
!11613 = !DILocation(line: 0, scope: !11591)
!11614 = !DILocation(line: 490, column: 6, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11591, file: !11473, line: 490, column: 6)
!11616 = !DILocation(line: 490, column: 25, scope: !11615)
!11617 = !DILocation(line: 490, column: 6, scope: !11591)
!11618 = !DILocation(line: 493, column: 15, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11615, file: !11473, line: 491, column: 3)
!11620 = !DILocation(line: 496, column: 8, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11619, file: !11473, line: 496, column: 8)
!11622 = !DILocation(line: 496, column: 29, scope: !11621)
!11623 = !DILocation(line: 496, column: 8, scope: !11619)
!11624 = !DILocation(line: 498, column: 7, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11621, file: !11473, line: 497, column: 5)
!11626 = !DILocation(line: 499, column: 7, scope: !11625)
!11627 = !DILocation(line: 499, column: 14, scope: !11625)
!11628 = !DILocation(line: 499, column: 35, scope: !11625)
!11629 = distinct !{!11629, !11626, !11630}
!11630 = !DILocation(line: 502, column: 7, scope: !11625)
!11631 = !DILocation(line: 506, column: 76, scope: !11619)
!11632 = !DILocation(line: 506, column: 103, scope: !11619)
!11633 = !DILocation(line: 507, column: 54, scope: !11619)
!11634 = !DILocation(line: 506, column: 5, scope: !11619)
!11635 = !DILocation(line: 510, column: 14, scope: !11619)
!11636 = !DILocation(line: 511, column: 3, scope: !11619)
!11637 = !DILocation(line: 0, scope: !11615)
!11638 = !DILocation(line: 518, column: 3, scope: !11591)
!11639 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11473, file: !11473, line: 642, type: !11640, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11642)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{!11516}
!11642 = !{!11643}
!11643 = !DILocalVariable(name: "status", scope: !11639, file: !11473, line: 644, type: !11516)
!11644 = !DILocation(line: 0, scope: !11639)
!11645 = !DILocation(line: 647, column: 6, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11639, file: !11473, line: 647, column: 6)
!11647 = !DILocation(line: 647, column: 27, scope: !11646)
!11648 = !DILocation(line: 663, column: 6, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11639, file: !11473, line: 663, column: 6)
!11650 = !DILocation(line: 663, column: 30, scope: !11649)
!11651 = !DILocation(line: 663, column: 6, scope: !11639)
!11652 = !DILocation(line: 669, column: 3, scope: !11639)
!11653 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11473, file: !11473, line: 611, type: !11654, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11656)
!11654 = !DISubroutineType(types: !11655)
!11655 = !{!162, !162, !11594}
!11656 = !{!11657, !11658, !11659}
!11657 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11653, file: !11473, line: 611, type: !162)
!11658 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11653, file: !11473, line: 611, type: !11594)
!11659 = !DILocalVariable(name: "pllfreq", scope: !11653, file: !11473, line: 613, type: !162)
!11660 = !DILocation(line: 0, scope: !11653)
!11661 = !DILocation(line: 622, column: 56, scope: !11653)
!11662 = !DILocation(line: 622, column: 61, scope: !11653)
!11663 = !DILocation(line: 622, column: 32, scope: !11653)
!11664 = !DILocation(line: 626, column: 45, scope: !11653)
!11665 = !DILocation(line: 626, column: 50, scope: !11653)
!11666 = !DILocation(line: 626, column: 21, scope: !11653)
!11667 = !DILocation(line: 630, column: 47, scope: !11653)
!11668 = !DILocation(line: 630, column: 82, scope: !11653)
!11669 = !DILocation(line: 630, column: 21, scope: !11653)
!11670 = !DILocation(line: 633, column: 3, scope: !11653)
!11671 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8123, file: !8123, line: 3007, type: !6169, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11672 = !DILocation(line: 3009, column: 11, scope: !11671)
!11673 = !DILocation(line: 3009, column: 44, scope: !11671)
!11674 = !DILocation(line: 3009, column: 3, scope: !11671)
!11675 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8123, file: !8123, line: 2987, type: !3130, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11676 = !DILocation(line: 2989, column: 3, scope: !11675)
!11677 = !DILocation(line: 2990, column: 1, scope: !11675)
!11678 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8123, file: !8123, line: 4304, type: !8257, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11679)
!11679 = !{!11680, !11681, !11682, !11683}
!11680 = !DILocalVariable(name: "Source", arg: 1, scope: !11678, file: !8123, line: 4304, type: !162)
!11681 = !DILocalVariable(name: "PLLM", arg: 2, scope: !11678, file: !8123, line: 4304, type: !162)
!11682 = !DILocalVariable(name: "PLLN", arg: 3, scope: !11678, file: !8123, line: 4304, type: !162)
!11683 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !11678, file: !8123, line: 4304, type: !162)
!11684 = !DILocation(line: 0, scope: !11678)
!11685 = !DILocation(line: 4306, column: 3, scope: !11678)
!11686 = !DILocation(line: 4308, column: 3, scope: !11678)
!11687 = !DILocation(line: 4312, column: 1, scope: !11678)
!11688 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11473, file: !11473, line: 681, type: !11689, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11691)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{!11516, !162, !11601}
!11691 = !{!11692, !11693, !11694, !11695}
!11692 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !11688, file: !11473, line: 681, type: !162)
!11693 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11688, file: !11473, line: 681, type: !11601)
!11694 = !DILocalVariable(name: "status", scope: !11688, file: !11473, line: 683, type: !11516)
!11695 = !DILocalVariable(name: "hclk_frequency", scope: !11688, file: !11473, line: 684, type: !162)
!11696 = !DILocation(line: 0, scope: !11688)
!11697 = !DILocation(line: 691, column: 20, scope: !11688)
!11698 = !DILocation(line: 694, column: 6, scope: !11699)
!11699 = distinct !DILexicalBlock(scope: !11688, file: !11473, line: 694, column: 6)
!11700 = !DILocation(line: 694, column: 22, scope: !11699)
!11701 = !DILocation(line: 694, column: 6, scope: !11688)
!11702 = !DILocation(line: 697, column: 14, scope: !11703)
!11703 = distinct !DILexicalBlock(scope: !11699, file: !11473, line: 695, column: 3)
!11704 = !DILocation(line: 701, column: 13, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11688, file: !11473, line: 701, column: 6)
!11706 = !DILocation(line: 701, column: 6, scope: !11688)
!11707 = !DILocation(line: 704, column: 5, scope: !11708)
!11708 = distinct !DILexicalBlock(scope: !11705, file: !11473, line: 702, column: 3)
!11709 = !DILocation(line: 705, column: 5, scope: !11708)
!11710 = !DILocation(line: 705, column: 12, scope: !11708)
!11711 = !DILocation(line: 705, column: 33, scope: !11708)
!11712 = distinct !{!11712, !11709, !11713}
!11713 = !DILocation(line: 708, column: 5, scope: !11708)
!11714 = !DILocation(line: 711, column: 49, scope: !11708)
!11715 = !DILocation(line: 711, column: 5, scope: !11708)
!11716 = !DILocation(line: 712, column: 5, scope: !11708)
!11717 = !DILocation(line: 713, column: 5, scope: !11708)
!11718 = !DILocation(line: 713, column: 12, scope: !11708)
!11719 = !DILocation(line: 713, column: 37, scope: !11708)
!11720 = distinct !{!11720, !11717, !11721}
!11721 = !DILocation(line: 716, column: 5, scope: !11708)
!11722 = !DILocation(line: 719, column: 50, scope: !11708)
!11723 = !DILocation(line: 719, column: 5, scope: !11708)
!11724 = !DILocation(line: 720, column: 50, scope: !11708)
!11725 = !DILocation(line: 720, column: 5, scope: !11708)
!11726 = !DILocation(line: 721, column: 3, scope: !11708)
!11727 = !DILocation(line: 724, column: 6, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11688, file: !11473, line: 724, column: 6)
!11729 = !DILocation(line: 724, column: 22, scope: !11728)
!11730 = !DILocation(line: 724, column: 6, scope: !11688)
!11731 = !DILocation(line: 727, column: 14, scope: !11732)
!11732 = distinct !DILexicalBlock(scope: !11728, file: !11473, line: 725, column: 3)
!11733 = !DILocation(line: 728, column: 3, scope: !11732)
!11734 = !DILocation(line: 731, column: 13, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11688, file: !11473, line: 731, column: 6)
!11736 = !DILocation(line: 731, column: 6, scope: !11688)
!11737 = !DILocation(line: 733, column: 5, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11735, file: !11473, line: 732, column: 3)
!11739 = !DILocation(line: 734, column: 3, scope: !11738)
!11740 = !DILocation(line: 736, column: 3, scope: !11688)
!11741 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8123, file: !8123, line: 4184, type: !3130, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11742 = !DILocation(line: 4186, column: 3, scope: !11741)
!11743 = !DILocation(line: 4187, column: 1, scope: !11741)
!11744 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8123, file: !8123, line: 4205, type: !6169, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11745 = !DILocation(line: 4207, column: 11, scope: !11744)
!11746 = !DILocation(line: 4207, column: 44, scope: !11744)
!11747 = !DILocation(line: 4207, column: 3, scope: !11744)
!11748 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8123, file: !8123, line: 3224, type: !6179, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11749)
!11749 = !{!11750}
!11750 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11748, file: !8123, line: 3224, type: !162)
!11751 = !DILocation(line: 0, scope: !11748)
!11752 = !DILocation(line: 3226, column: 3, scope: !11748)
!11753 = !DILocation(line: 3227, column: 1, scope: !11748)
!11754 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8123, file: !8123, line: 3188, type: !6179, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11755)
!11755 = !{!11756}
!11756 = !DILocalVariable(name: "Source", arg: 1, scope: !11754, file: !8123, line: 3188, type: !162)
!11757 = !DILocation(line: 0, scope: !11754)
!11758 = !DILocation(line: 3190, column: 3, scope: !11754)
!11759 = !DILocation(line: 3191, column: 1, scope: !11754)
!11760 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8123, file: !8123, line: 3204, type: !6169, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11761 = !DILocation(line: 3206, column: 21, scope: !11760)
!11762 = !DILocation(line: 3206, column: 3, scope: !11760)
!11763 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8123, file: !8123, line: 3240, type: !6179, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11764)
!11764 = !{!11765}
!11765 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11763, file: !8123, line: 3240, type: !162)
!11766 = !DILocation(line: 0, scope: !11763)
!11767 = !DILocation(line: 3242, column: 3, scope: !11763)
!11768 = !DILocation(line: 3243, column: 1, scope: !11763)
!11769 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8123, file: !8123, line: 3256, type: !6179, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11770)
!11770 = !{!11771}
!11771 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !11769, file: !8123, line: 3256, type: !162)
!11772 = !DILocation(line: 0, scope: !11769)
!11773 = !DILocation(line: 3258, column: 3, scope: !11769)
!11774 = !DILocation(line: 3259, column: 1, scope: !11769)
!11775 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8123, file: !8123, line: 5153, type: !6169, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11776 = !DILocation(line: 5155, column: 11, scope: !11775)
!11777 = !DILocation(line: 5155, column: 47, scope: !11775)
!11778 = !DILocation(line: 5155, column: 3, scope: !11775)
!11779 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11473, file: !11473, line: 540, type: !11780, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{!11516, !162, !162, !11594, !11601}
!11782 = !{!11783, !11784, !11785, !11786, !11787, !11788}
!11783 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !11779, file: !11473, line: 540, type: !162)
!11784 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !11779, file: !11473, line: 540, type: !162)
!11785 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !11779, file: !11473, line: 541, type: !11594)
!11786 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !11779, file: !11473, line: 541, type: !11601)
!11787 = !DILocalVariable(name: "status", scope: !11779, file: !11473, line: 543, type: !11516)
!11788 = !DILocalVariable(name: "pllfreq", scope: !11779, file: !11473, line: 544, type: !162)
!11789 = !DILocation(line: 0, scope: !11779)
!11790 = !DILocation(line: 551, column: 6, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11779, file: !11473, line: 551, column: 6)
!11792 = !DILocation(line: 551, column: 25, scope: !11791)
!11793 = !DILocation(line: 551, column: 6, scope: !11779)
!11794 = !DILocation(line: 554, column: 15, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11791, file: !11473, line: 552, column: 3)
!11796 = !DILocation(line: 557, column: 8, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11795, file: !11473, line: 557, column: 8)
!11798 = !DILocation(line: 557, column: 29, scope: !11797)
!11799 = !DILocation(line: 557, column: 8, scope: !11795)
!11800 = !DILocation(line: 560, column: 20, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11802, file: !11473, line: 560, column: 10)
!11802 = distinct !DILexicalBlock(scope: !11797, file: !11473, line: 558, column: 5)
!11803 = !DILocation(line: 560, column: 10, scope: !11802)
!11804 = !DILocation(line: 562, column: 9, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11801, file: !11473, line: 561, column: 7)
!11806 = !DILocation(line: 563, column: 7, scope: !11805)
!11807 = !DILocation(line: 566, column: 9, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11801, file: !11473, line: 565, column: 7)
!11809 = !DILocation(line: 570, column: 7, scope: !11802)
!11810 = !DILocation(line: 571, column: 7, scope: !11802)
!11811 = !DILocation(line: 571, column: 14, scope: !11802)
!11812 = !DILocation(line: 571, column: 35, scope: !11802)
!11813 = distinct !{!11813, !11810, !11814}
!11814 = !DILocation(line: 574, column: 7, scope: !11802)
!11815 = !DILocation(line: 578, column: 76, scope: !11795)
!11816 = !DILocation(line: 578, column: 103, scope: !11795)
!11817 = !DILocation(line: 579, column: 54, scope: !11795)
!11818 = !DILocation(line: 578, column: 5, scope: !11795)
!11819 = !DILocation(line: 582, column: 14, scope: !11795)
!11820 = !DILocation(line: 583, column: 3, scope: !11795)
!11821 = !DILocation(line: 0, scope: !11791)
!11822 = !DILocation(line: 590, column: 3, scope: !11779)
!11823 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8123, file: !8123, line: 2969, type: !6169, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11824 = !DILocation(line: 2971, column: 11, scope: !11823)
!11825 = !DILocation(line: 2971, column: 44, scope: !11823)
!11826 = !DILocation(line: 2971, column: 3, scope: !11823)
!11827 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8123, file: !8123, line: 2929, type: !3130, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11828 = !DILocation(line: 2931, column: 3, scope: !11827)
!11829 = !DILocation(line: 2932, column: 1, scope: !11827)
!11830 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8123, file: !8123, line: 2939, type: !3130, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11831 = !DILocation(line: 2941, column: 3, scope: !11830)
!11832 = !DILocation(line: 2942, column: 1, scope: !11830)
!11833 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8123, file: !8123, line: 2949, type: !3130, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2922, retainedNodes: !250)
!11834 = !DILocation(line: 2951, column: 3, scope: !11833)
!11835 = !DILocation(line: 2952, column: 1, scope: !11833)
!11836 = distinct !DISubprogram(name: "z_device_state_init", scope: !11837, file: !11837, line: 23, type: !3130, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !11838)
!11837 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11838 = !{!11839}
!11839 = !DILocalVariable(name: "dev", scope: !11836, file: !11837, line: 25, type: !11840)
!11840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11841, size: 32)
!11841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11842)
!11842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !120, line: 378, size: 192, elements: !11843)
!11843 = !{!11844, !11845, !11846, !11847, !11853, !11854}
!11844 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11842, file: !120, line: 380, baseType: !123, size: 32)
!11845 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !11842, file: !120, line: 382, baseType: !13, size: 32, offset: 32)
!11846 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !11842, file: !120, line: 384, baseType: !13, size: 32, offset: 64)
!11847 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11842, file: !120, line: 386, baseType: !11848, size: 32, offset: 96)
!11848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11849, size: 32)
!11849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !120, line: 351, size: 16, elements: !11850)
!11850 = !{!11851, !11852}
!11851 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !11849, file: !120, line: 359, baseType: !133, size: 8)
!11852 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !11849, file: !120, line: 364, baseType: !136, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!11853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11842, file: !120, line: 388, baseType: !102, size: 32, offset: 128)
!11854 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !11842, file: !120, line: 396, baseType: !139, size: 32, offset: 160)
!11855 = !DILocation(line: 0, scope: !11836)
!11856 = !DILocation(line: 31, column: 1, scope: !11836)
!11857 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !11837, file: !11837, line: 33, type: !11858, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !11860)
!11858 = !DISubroutineType(types: !11859)
!11859 = !{!11840, !123}
!11860 = !{!11861, !11862}
!11861 = !DILocalVariable(name: "name", arg: 1, scope: !11857, file: !11837, line: 33, type: !123)
!11862 = !DILocalVariable(name: "dev", scope: !11857, file: !11837, line: 35, type: !11840)
!11863 = !DILocation(line: 0, scope: !11857)
!11864 = !DILocation(line: 40, column: 12, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11857, file: !11837, line: 40, column: 6)
!11866 = !DILocation(line: 40, column: 21, scope: !11865)
!11867 = !DILocation(line: 40, column: 25, scope: !11865)
!11868 = !DILocation(line: 40, column: 33, scope: !11865)
!11869 = !DILocation(line: 40, column: 6, scope: !11857)
!11870 = !DILocation(line: 55, column: 2, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11857, file: !11837, line: 55, column: 2)
!11872 = !DILocation(line: 50, column: 7, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11874, file: !11837, line: 50, column: 7)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !11837, line: 49, column: 57)
!11875 = distinct !DILexicalBlock(scope: !11876, file: !11837, line: 49, column: 2)
!11876 = distinct !DILexicalBlock(scope: !11857, file: !11837, line: 49, column: 2)
!11877 = !DILocation(line: 50, column: 30, scope: !11873)
!11878 = !DILocation(line: 50, column: 39, scope: !11873)
!11879 = !DILocation(line: 50, column: 44, scope: !11873)
!11880 = !DILocation(line: 50, column: 7, scope: !11874)
!11881 = !DILocation(line: 49, column: 53, scope: !11875)
!11882 = !DILocation(line: 49, column: 33, scope: !11875)
!11883 = !DILocation(line: 49, column: 2, scope: !11876)
!11884 = distinct !{!11884, !11883, !11885}
!11885 = !DILocation(line: 53, column: 2, scope: !11876)
!11886 = !DILocation(line: 56, column: 7, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !11837, line: 56, column: 7)
!11888 = distinct !DILexicalBlock(scope: !11889, file: !11837, line: 55, column: 57)
!11889 = distinct !DILexicalBlock(scope: !11871, file: !11837, line: 55, column: 2)
!11890 = !DILocation(line: 56, column: 30, scope: !11887)
!11891 = !DILocation(line: 56, column: 52, scope: !11887)
!11892 = !DILocation(line: 56, column: 34, scope: !11887)
!11893 = !DILocation(line: 56, column: 58, scope: !11887)
!11894 = !DILocation(line: 56, column: 7, scope: !11888)
!11895 = !DILocation(line: 55, column: 53, scope: !11889)
!11896 = !DILocation(line: 55, column: 33, scope: !11889)
!11897 = distinct !{!11897, !11870, !11898}
!11898 = !DILocation(line: 59, column: 2, scope: !11871)
!11899 = !DILocation(line: 62, column: 1, scope: !11857)
!11900 = distinct !DISubprogram(name: "z_device_is_ready", scope: !11837, file: !11837, line: 93, type: !11901, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !11903)
!11901 = !DISubroutineType(types: !11902)
!11902 = !{!136, !11840}
!11903 = !{!11904}
!11904 = !DILocalVariable(name: "dev", arg: 1, scope: !11900, file: !11837, line: 93, type: !11840)
!11905 = !DILocation(line: 0, scope: !11900)
!11906 = !DILocation(line: 99, column: 10, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11900, file: !11837, line: 99, column: 6)
!11908 = !DILocation(line: 99, column: 6, scope: !11900)
!11909 = !DILocation(line: 103, column: 14, scope: !11900)
!11910 = !DILocation(line: 103, column: 21, scope: !11900)
!11911 = !DILocation(line: 103, column: 33, scope: !11900)
!11912 = !DILocation(line: 103, column: 49, scope: !11900)
!11913 = !DILocation(line: 103, column: 58, scope: !11900)
!11914 = !DILocation(line: 104, column: 1, scope: !11900)
!11915 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !11837, file: !11837, line: 87, type: !11916, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !11919)
!11916 = !DISubroutineType(types: !11917)
!11917 = !{!252, !11918}
!11918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11840, size: 32)
!11919 = !{!11920}
!11920 = !DILocalVariable(name: "devices", arg: 1, scope: !11915, file: !11837, line: 87, type: !11918)
!11921 = !DILocation(line: 0, scope: !11915)
!11922 = !DILocation(line: 89, column: 11, scope: !11915)
!11923 = !DILocation(line: 90, column: 2, scope: !11915)
!11924 = distinct !DISubprogram(name: "device_required_foreach", scope: !11837, file: !11837, line: 125, type: !11925, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !11931)
!11925 = !DISubroutineType(types: !11926)
!11926 = !{!107, !11840, !11927, !102}
!11927 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !120, line: 471, baseType: !11928)
!11928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11929, size: 32)
!11929 = !DISubroutineType(types: !11930)
!11930 = !{!107, !11840, !102}
!11931 = !{!11932, !11933, !11934, !11935, !11936}
!11932 = !DILocalVariable(name: "dev", arg: 1, scope: !11924, file: !11837, line: 125, type: !11840)
!11933 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !11924, file: !11837, line: 126, type: !11927)
!11934 = !DILocalVariable(name: "context", arg: 3, scope: !11924, file: !11837, line: 127, type: !102)
!11935 = !DILocalVariable(name: "handle_count", scope: !11924, file: !11837, line: 129, type: !252)
!11936 = !DILocalVariable(name: "handles", scope: !11924, file: !11837, line: 130, type: !139)
!11937 = !DILocation(line: 0, scope: !11924)
!11938 = !DILocation(line: 129, column: 2, scope: !11924)
!11939 = !DILocation(line: 129, column: 9, scope: !11924)
!11940 = !DILocation(line: 130, column: 35, scope: !11924)
!11941 = !DILocation(line: 132, column: 33, scope: !11924)
!11942 = !DILocation(line: 132, column: 9, scope: !11924)
!11943 = !DILocation(line: 133, column: 1, scope: !11924)
!11944 = !DILocation(line: 132, column: 2, scope: !11924)
!11945 = distinct !DISubprogram(name: "device_required_handles_get", scope: !120, file: !120, line: 493, type: !11946, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !11948)
!11946 = !DISubroutineType(types: !11947)
!11947 = !{!139, !11840, !2485}
!11948 = !{!11949, !11950, !11951, !11952}
!11949 = !DILocalVariable(name: "dev", arg: 1, scope: !11945, file: !120, line: 493, type: !11840)
!11950 = !DILocalVariable(name: "count", arg: 2, scope: !11945, file: !120, line: 493, type: !2485)
!11951 = !DILocalVariable(name: "rv", scope: !11945, file: !120, line: 495, type: !139)
!11952 = !DILocalVariable(name: "i", scope: !11953, file: !120, line: 498, type: !252)
!11953 = distinct !DILexicalBlock(scope: !11954, file: !120, line: 497, column: 18)
!11954 = distinct !DILexicalBlock(scope: !11945, file: !120, line: 497, column: 6)
!11955 = !DILocation(line: 0, scope: !11945)
!11956 = !DILocation(line: 495, column: 35, scope: !11945)
!11957 = !DILocation(line: 497, column: 9, scope: !11954)
!11958 = !DILocation(line: 497, column: 6, scope: !11945)
!11959 = !DILocation(line: 0, scope: !11953)
!11960 = !DILocation(line: 500, column: 11, scope: !11953)
!11961 = !DILocation(line: 500, column: 40, scope: !11953)
!11962 = !DILocation(line: 502, column: 4, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11953, file: !120, line: 501, column: 40)
!11964 = distinct !{!11964, !11965, !11966}
!11965 = !DILocation(line: 500, column: 3, scope: !11953)
!11966 = !DILocation(line: 503, column: 3, scope: !11953)
!11967 = !DILocation(line: 504, column: 10, scope: !11953)
!11968 = !DILocation(line: 505, column: 2, scope: !11953)
!11969 = !DILocation(line: 507, column: 2, scope: !11945)
!11970 = distinct !DISubprogram(name: "device_visitor", scope: !11837, file: !11837, line: 106, type: !11971, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !11973)
!11971 = !DISubroutineType(types: !11972)
!11972 = !{!107, !139, !252, !11927, !102}
!11973 = !{!11974, !11975, !11976, !11977, !11978, !11980, !11983, !11984}
!11974 = !DILocalVariable(name: "handles", arg: 1, scope: !11970, file: !11837, line: 106, type: !139)
!11975 = !DILocalVariable(name: "handle_count", arg: 2, scope: !11970, file: !11837, line: 107, type: !252)
!11976 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !11970, file: !11837, line: 108, type: !11927)
!11977 = !DILocalVariable(name: "context", arg: 4, scope: !11970, file: !11837, line: 109, type: !102)
!11978 = !DILocalVariable(name: "i", scope: !11979, file: !11837, line: 112, type: !252)
!11979 = distinct !DILexicalBlock(scope: !11970, file: !11837, line: 112, column: 2)
!11980 = !DILocalVariable(name: "dh", scope: !11981, file: !11837, line: 113, type: !141)
!11981 = distinct !DILexicalBlock(scope: !11982, file: !11837, line: 112, column: 44)
!11982 = distinct !DILexicalBlock(scope: !11979, file: !11837, line: 112, column: 2)
!11983 = !DILocalVariable(name: "rdev", scope: !11981, file: !11837, line: 114, type: !11840)
!11984 = !DILocalVariable(name: "rc", scope: !11981, file: !11837, line: 115, type: !107)
!11985 = !DILocation(line: 0, scope: !11970)
!11986 = !DILocation(line: 0, scope: !11979)
!11987 = !DILocation(line: 112, column: 23, scope: !11982)
!11988 = !DILocation(line: 112, column: 2, scope: !11979)
!11989 = distinct !{!11989, !11988, !11990}
!11990 = !DILocation(line: 120, column: 2, scope: !11979)
!11991 = !DILocation(line: 113, column: 24, scope: !11981)
!11992 = !DILocation(line: 0, scope: !11981)
!11993 = !DILocation(line: 114, column: 31, scope: !11981)
!11994 = !DILocation(line: 115, column: 12, scope: !11981)
!11995 = !DILocation(line: 117, column: 10, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11981, file: !11837, line: 117, column: 7)
!11997 = !DILocation(line: 112, column: 39, scope: !11982)
!11998 = !DILocation(line: 123, column: 1, scope: !11970)
!11999 = distinct !DISubprogram(name: "device_from_handle", scope: !120, file: !120, line: 439, type: !12000, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12002)
!12000 = !DISubroutineType(types: !12001)
!12001 = !{!11840, !141}
!12002 = !{!12003, !12004, !12005}
!12003 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !11999, file: !120, line: 439, type: !141)
!12004 = !DILocalVariable(name: "dev", scope: !11999, file: !120, line: 443, type: !11840)
!12005 = !DILocalVariable(name: "numdev", scope: !11999, file: !120, line: 444, type: !252)
!12006 = !DILocation(line: 0, scope: !11999)
!12007 = !DILocation(line: 446, column: 7, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11999, file: !120, line: 446, column: 6)
!12009 = !DILocation(line: 446, column: 18, scope: !12008)
!12010 = !DILocation(line: 446, column: 23, scope: !12008)
!12011 = !DILocation(line: 450, column: 2, scope: !11999)
!12012 = distinct !DISubprogram(name: "device_supported_foreach", scope: !11837, file: !11837, line: 135, type: !11925, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12013)
!12013 = !{!12014, !12015, !12016, !12017, !12018}
!12014 = !DILocalVariable(name: "dev", arg: 1, scope: !12012, file: !11837, line: 135, type: !11840)
!12015 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12012, file: !11837, line: 136, type: !11927)
!12016 = !DILocalVariable(name: "context", arg: 3, scope: !12012, file: !11837, line: 137, type: !102)
!12017 = !DILocalVariable(name: "handle_count", scope: !12012, file: !11837, line: 139, type: !252)
!12018 = !DILocalVariable(name: "handles", scope: !12012, file: !11837, line: 140, type: !139)
!12019 = !DILocation(line: 0, scope: !12012)
!12020 = !DILocation(line: 139, column: 2, scope: !12012)
!12021 = !DILocation(line: 139, column: 9, scope: !12012)
!12022 = !DILocation(line: 140, column: 35, scope: !12012)
!12023 = !DILocation(line: 142, column: 33, scope: !12012)
!12024 = !DILocation(line: 142, column: 9, scope: !12012)
!12025 = !DILocation(line: 143, column: 1, scope: !12012)
!12026 = !DILocation(line: 142, column: 2, scope: !12012)
!12027 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !120, file: !120, line: 573, type: !11946, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2986, retainedNodes: !12028)
!12028 = !{!12029, !12030, !12031, !12032, !12033}
!12029 = !DILocalVariable(name: "dev", arg: 1, scope: !12027, file: !120, line: 573, type: !11840)
!12030 = !DILocalVariable(name: "count", arg: 2, scope: !12027, file: !120, line: 573, type: !2485)
!12031 = !DILocalVariable(name: "rv", scope: !12027, file: !120, line: 575, type: !139)
!12032 = !DILocalVariable(name: "region", scope: !12027, file: !120, line: 576, type: !252)
!12033 = !DILocalVariable(name: "i", scope: !12027, file: !120, line: 577, type: !252)
!12034 = !DILocation(line: 0, scope: !12027)
!12035 = !DILocation(line: 575, column: 35, scope: !12027)
!12036 = !DILocation(line: 579, column: 9, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12027, file: !120, line: 579, column: 6)
!12038 = !DILocation(line: 579, column: 6, scope: !12027)
!12039 = !DILocation(line: 582, column: 8, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12041, file: !120, line: 582, column: 8)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !120, line: 581, column: 23)
!12042 = distinct !DILexicalBlock(scope: !12037, file: !120, line: 579, column: 18)
!12043 = !DILocation(line: 582, column: 12, scope: !12040)
!12044 = !DILocation(line: 585, column: 6, scope: !12041)
!12045 = !DILocation(line: 0, scope: !12042)
!12046 = !DILocation(line: 581, column: 17, scope: !12042)
!12047 = !DILocation(line: 581, column: 3, scope: !12042)
!12048 = !DILocation(line: 588, column: 10, scope: !12042)
!12049 = !DILocation(line: 588, column: 16, scope: !12042)
!12050 = !DILocation(line: 589, column: 4, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12042, file: !120, line: 588, column: 39)
!12052 = !DILocation(line: 588, column: 3, scope: !12042)
!12053 = distinct !{!12053, !12052, !12054}
!12054 = !DILocation(line: 590, column: 3, scope: !12042)
!12055 = !DILocation(line: 591, column: 10, scope: !12042)
!12056 = !DILocation(line: 592, column: 2, scope: !12042)
!12057 = !DILocation(line: 575, column: 25, scope: !12027)
!12058 = !DILocation(line: 594, column: 2, scope: !12027)
!12059 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1844, file: !1844, line: 49, type: !12060, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1841, retainedNodes: !250)
!12060 = !DISubroutineType(types: !12061)
!12061 = !{!2478}
!12062 = !DILocation(line: 51, column: 10, scope: !12059)
!12063 = !DILocation(line: 51, column: 20, scope: !12059)
!12064 = !DILocation(line: 51, column: 2, scope: !12059)
!12065 = distinct !DISubprogram(name: "coredump", scope: !2993, file: !2993, line: 209, type: !12066, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12212)
!12066 = !DISubroutineType(types: !12067)
!12067 = !{null, !32, !12068, !12112}
!12068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12069, size: 32)
!12069 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12070)
!12070 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2610, line: 141, baseType: !12071)
!12071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2610, line: 97, size: 256, elements: !12072)
!12072 = !{!12073}
!12073 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12071, file: !2610, line: 107, baseType: !12074, size: 256)
!12074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2610, line: 98, size: 256, elements: !12075)
!12075 = !{!12076, !12081, !12086, !12091, !12096, !12101, !12106, !12111}
!12076 = !DIDerivedType(tag: DW_TAG_member, scope: !12074, file: !2610, line: 99, baseType: !12077, size: 32)
!12077 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12074, file: !2610, line: 99, size: 32, elements: !12078)
!12078 = !{!12079, !12080}
!12079 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12077, file: !2610, line: 99, baseType: !162, size: 32)
!12080 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12077, file: !2610, line: 99, baseType: !162, size: 32)
!12081 = !DIDerivedType(tag: DW_TAG_member, scope: !12074, file: !2610, line: 100, baseType: !12082, size: 32, offset: 32)
!12082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12074, file: !2610, line: 100, size: 32, elements: !12083)
!12083 = !{!12084, !12085}
!12084 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12082, file: !2610, line: 100, baseType: !162, size: 32)
!12085 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12082, file: !2610, line: 100, baseType: !162, size: 32)
!12086 = !DIDerivedType(tag: DW_TAG_member, scope: !12074, file: !2610, line: 101, baseType: !12087, size: 32, offset: 64)
!12087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12074, file: !2610, line: 101, size: 32, elements: !12088)
!12088 = !{!12089, !12090}
!12089 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12087, file: !2610, line: 101, baseType: !162, size: 32)
!12090 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12087, file: !2610, line: 101, baseType: !162, size: 32)
!12091 = !DIDerivedType(tag: DW_TAG_member, scope: !12074, file: !2610, line: 102, baseType: !12092, size: 32, offset: 96)
!12092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12074, file: !2610, line: 102, size: 32, elements: !12093)
!12093 = !{!12094, !12095}
!12094 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12092, file: !2610, line: 102, baseType: !162, size: 32)
!12095 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12092, file: !2610, line: 102, baseType: !162, size: 32)
!12096 = !DIDerivedType(tag: DW_TAG_member, scope: !12074, file: !2610, line: 103, baseType: !12097, size: 32, offset: 128)
!12097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12074, file: !2610, line: 103, size: 32, elements: !12098)
!12098 = !{!12099, !12100}
!12099 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12097, file: !2610, line: 103, baseType: !162, size: 32)
!12100 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12097, file: !2610, line: 103, baseType: !162, size: 32)
!12101 = !DIDerivedType(tag: DW_TAG_member, scope: !12074, file: !2610, line: 104, baseType: !12102, size: 32, offset: 160)
!12102 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12074, file: !2610, line: 104, size: 32, elements: !12103)
!12103 = !{!12104, !12105}
!12104 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12102, file: !2610, line: 104, baseType: !162, size: 32)
!12105 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12102, file: !2610, line: 104, baseType: !162, size: 32)
!12106 = !DIDerivedType(tag: DW_TAG_member, scope: !12074, file: !2610, line: 105, baseType: !12107, size: 32, offset: 192)
!12107 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12074, file: !2610, line: 105, size: 32, elements: !12108)
!12108 = !{!12109, !12110}
!12109 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12107, file: !2610, line: 105, baseType: !162, size: 32)
!12110 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12107, file: !2610, line: 105, baseType: !162, size: 32)
!12111 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12074, file: !2610, line: 106, baseType: !162, size: 32, offset: 224)
!12112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12113, size: 32)
!12113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !359, line: 245, size: 1024, elements: !12114)
!12114 = !{!12115, !12173, !12185, !12186, !12187, !12188, !12194, !12207}
!12115 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12113, file: !359, line: 247, baseType: !12116, size: 384)
!12116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !359, line: 57, size: 384, elements: !12117)
!12117 = !{!12118, !12142, !12149, !12150, !12151, !12160, !12161, !12162}
!12118 = !DIDerivedType(tag: DW_TAG_member, scope: !12116, file: !359, line: 60, baseType: !12119, size: 64)
!12119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12116, file: !359, line: 60, size: 64, elements: !12120)
!12120 = !{!12121, !12136}
!12121 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12119, file: !359, line: 61, baseType: !12122, size: 64)
!12122 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !233, line: 49, baseType: !12123)
!12123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !233, line: 37, size: 64, elements: !12124)
!12124 = !{!12125, !12131}
!12125 = !DIDerivedType(tag: DW_TAG_member, scope: !12123, file: !233, line: 38, baseType: !12126, size: 32)
!12126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12123, file: !233, line: 38, size: 32, elements: !12127)
!12127 = !{!12128, !12130}
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12126, file: !233, line: 39, baseType: !12129, size: 32)
!12129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12123, size: 32)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12126, file: !233, line: 40, baseType: !12129, size: 32)
!12131 = !DIDerivedType(tag: DW_TAG_member, scope: !12123, file: !233, line: 42, baseType: !12132, size: 32, offset: 32)
!12132 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12123, file: !233, line: 42, size: 32, elements: !12133)
!12133 = !{!12134, !12135}
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12132, file: !233, line: 43, baseType: !12129, size: 32)
!12135 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12132, file: !233, line: 44, baseType: !12129, size: 32)
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12119, file: !359, line: 62, baseType: !12137, size: 64)
!12137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !384, line: 49, size: 64, elements: !12138)
!12138 = !{!12139}
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12137, file: !384, line: 50, baseType: !12140, size: 64)
!12140 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12141, size: 64, elements: !389)
!12141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12137, size: 32)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12116, file: !359, line: 68, baseType: !12143, size: 32, offset: 64)
!12143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12144, size: 32)
!12144 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !12145)
!12145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !12146)
!12146 = !{!12147}
!12147 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12145, file: !228, line: 232, baseType: !12148, size: 64)
!12148 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !12123)
!12149 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12116, file: !359, line: 71, baseType: !133, size: 8, offset: 96)
!12150 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12116, file: !359, line: 74, baseType: !133, size: 8, offset: 104)
!12151 = !DIDerivedType(tag: DW_TAG_member, scope: !12116, file: !359, line: 90, baseType: !12152, size: 16, offset: 112)
!12152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12116, file: !359, line: 90, size: 16, elements: !12153)
!12153 = !{!12154, !12159}
!12154 = !DIDerivedType(tag: DW_TAG_member, scope: !12152, file: !359, line: 91, baseType: !12155, size: 16)
!12155 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12152, file: !359, line: 91, size: 16, elements: !12156)
!12156 = !{!12157, !12158}
!12157 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12155, file: !359, line: 96, baseType: !407, size: 8)
!12158 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12155, file: !359, line: 97, baseType: !133, size: 8, offset: 8)
!12159 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12152, file: !359, line: 100, baseType: !411, size: 16)
!12160 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12116, file: !359, line: 107, baseType: !162, size: 32, offset: 128)
!12161 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12116, file: !359, line: 127, baseType: !102, size: 32, offset: 160)
!12162 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12116, file: !359, line: 131, baseType: !12163, size: 192, offset: 192)
!12163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !228, line: 244, size: 192, elements: !12164)
!12164 = !{!12165, !12166, !12172}
!12165 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12163, file: !228, line: 245, baseType: !12122, size: 64)
!12166 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12163, file: !228, line: 246, baseType: !12167, size: 32, offset: 64)
!12167 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !228, line: 242, baseType: !12168)
!12168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12169, size: 32)
!12169 = !DISubroutineType(types: !12170)
!12170 = !{null, !12171}
!12171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12163, size: 32)
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12163, file: !228, line: 249, baseType: !105, size: 64, offset: 128)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12113, file: !359, line: 250, baseType: !12174, size: 288, offset: 384)
!12174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !428, line: 25, size: 288, elements: !12175)
!12175 = !{!12176, !12177, !12178, !12179, !12180, !12181, !12182, !12183, !12184}
!12176 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12174, file: !428, line: 26, baseType: !162, size: 32)
!12177 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12174, file: !428, line: 27, baseType: !162, size: 32, offset: 32)
!12178 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12174, file: !428, line: 28, baseType: !162, size: 32, offset: 64)
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12174, file: !428, line: 29, baseType: !162, size: 32, offset: 96)
!12180 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12174, file: !428, line: 30, baseType: !162, size: 32, offset: 128)
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12174, file: !428, line: 31, baseType: !162, size: 32, offset: 160)
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12174, file: !428, line: 32, baseType: !162, size: 32, offset: 192)
!12183 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12174, file: !428, line: 33, baseType: !162, size: 32, offset: 224)
!12184 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12174, file: !428, line: 34, baseType: !162, size: 32, offset: 256)
!12185 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12113, file: !359, line: 253, baseType: !102, size: 32, offset: 672)
!12186 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12113, file: !359, line: 256, baseType: !12144, size: 64, offset: 704)
!12187 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12113, file: !359, line: 294, baseType: !107, size: 32, offset: 768)
!12188 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12113, file: !359, line: 300, baseType: !12189, size: 96, offset: 800)
!12189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !359, line: 149, size: 96, elements: !12190)
!12190 = !{!12191, !12192, !12193}
!12191 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12189, file: !359, line: 153, baseType: !22, size: 32)
!12192 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12189, file: !359, line: 162, baseType: !252, size: 32, offset: 32)
!12193 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12189, file: !359, line: 168, baseType: !252, size: 32, offset: 64)
!12194 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12113, file: !359, line: 325, baseType: !12195, size: 32, offset: 896)
!12195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12196, size: 32)
!12196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !12197)
!12197 = !{!12198, !12204, !12205}
!12198 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12196, file: !224, line: 5074, baseType: !12199, size: 96)
!12199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !12200)
!12200 = !{!12201, !12202, !12203}
!12201 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12199, file: !454, line: 57, baseType: !457, size: 32)
!12202 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12199, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!12203 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12199, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!12204 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12196, file: !224, line: 5075, baseType: !12144, size: 64, offset: 96)
!12205 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12196, file: !224, line: 5076, baseType: !12206, offset: 160)
!12206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!12207 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12113, file: !359, line: 343, baseType: !12208, size: 64, offset: 928)
!12208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !428, line: 60, size: 64, elements: !12209)
!12209 = !{!12210, !12211}
!12210 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12208, file: !428, line: 63, baseType: !162, size: 32)
!12211 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12208, file: !428, line: 66, baseType: !162, size: 32, offset: 32)
!12212 = !{!12213, !12214, !12215}
!12213 = !DILocalVariable(name: "reason", arg: 1, scope: !12065, file: !2993, line: 209, type: !32)
!12214 = !DILocalVariable(name: "esf", arg: 2, scope: !12065, file: !2993, line: 209, type: !12068)
!12215 = !DILocalVariable(name: "thread", arg: 3, scope: !12065, file: !2993, line: 210, type: !12112)
!12216 = !DILocation(line: 0, scope: !12065)
!12217 = !DILocation(line: 212, column: 1, scope: !12065)
!12218 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !2993, file: !2993, line: 214, type: !12219, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12221)
!12219 = !DISubroutineType(types: !12220)
!12220 = !{null, !22, !22}
!12221 = !{!12222, !12223}
!12222 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12218, file: !2993, line: 214, type: !22)
!12223 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12218, file: !2993, line: 214, type: !22)
!12224 = !DILocation(line: 0, scope: !12218)
!12225 = !DILocation(line: 216, column: 1, scope: !12218)
!12226 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !2993, file: !2993, line: 218, type: !12227, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12229)
!12227 = !DISubroutineType(types: !12228)
!12228 = !{null, !182, !252}
!12229 = !{!12230, !12231}
!12230 = !DILocalVariable(name: "buf", arg: 1, scope: !12226, file: !2993, line: 218, type: !182)
!12231 = !DILocalVariable(name: "buflen", arg: 2, scope: !12226, file: !2993, line: 218, type: !252)
!12232 = !DILocation(line: 0, scope: !12226)
!12233 = !DILocation(line: 220, column: 1, scope: !12226)
!12234 = distinct !DISubprogram(name: "coredump_query", scope: !2993, file: !2993, line: 222, type: !12235, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12237)
!12235 = !DISubroutineType(types: !12236)
!12236 = !{!107, !2992, !102}
!12237 = !{!12238, !12239}
!12238 = !DILocalVariable(name: "query_id", arg: 1, scope: !12234, file: !2993, line: 222, type: !2992)
!12239 = !DILocalVariable(name: "arg", arg: 2, scope: !12234, file: !2993, line: 222, type: !102)
!12240 = !DILocation(line: 0, scope: !12234)
!12241 = !DILocation(line: 224, column: 2, scope: !12234)
!12242 = distinct !DISubprogram(name: "coredump_cmd", scope: !2993, file: !2993, line: 227, type: !12243, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12245)
!12243 = !DISubroutineType(types: !12244)
!12244 = !{!107, !2999, !102}
!12245 = !{!12246, !12247}
!12246 = !DILocalVariable(name: "query_id", arg: 1, scope: !12242, file: !2993, line: 227, type: !2999)
!12247 = !DILocalVariable(name: "arg", arg: 2, scope: !12242, file: !2993, line: 227, type: !102)
!12248 = !DILocation(line: 0, scope: !12242)
!12249 = !DILocation(line: 229, column: 2, scope: !12242)
!12250 = distinct !DISubprogram(name: "arch_system_halt", scope: !12251, file: !12251, line: 23, type: !5925, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12252)
!12251 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12252 = !{!12253}
!12253 = !DILocalVariable(name: "reason", arg: 1, scope: !12250, file: !12251, line: 23, type: !32)
!12254 = !DILocation(line: 0, scope: !12250)
!12255 = !DILocation(line: 55, column: 2, scope: !12256, inlinedAt: !12260)
!12256 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12257)
!12257 = !{!12258, !12259}
!12258 = !DILocalVariable(name: "key", scope: !12256, file: !5914, line: 44, type: !32)
!12259 = !DILocalVariable(name: "tmp", scope: !12256, file: !5914, line: 53, type: !32)
!12260 = distinct !DILocation(line: 31, column: 8, scope: !12250)
!12261 = !{i64 2240810}
!12262 = !DILocation(line: 0, scope: !12256, inlinedAt: !12260)
!12263 = !DILocation(line: 32, column: 2, scope: !12250)
!12264 = !DILocation(line: 32, column: 2, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12266, file: !12251, line: 32, column: 2)
!12266 = distinct !DILexicalBlock(scope: !12250, file: !12251, line: 32, column: 2)
!12267 = distinct !{!12267, !12268, !12269}
!12268 = !DILocation(line: 32, column: 2, scope: !12266)
!12269 = !DILocation(line: 34, column: 2, scope: !12266)
!12270 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12251, file: !12251, line: 39, type: !12271, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12273)
!12271 = !DISubroutineType(types: !12272)
!12272 = !{null, !32, !12068}
!12273 = !{!12274, !12275}
!12274 = !DILocalVariable(name: "reason", arg: 1, scope: !12270, file: !12251, line: 39, type: !32)
!12275 = !DILocalVariable(name: "esf", arg: 2, scope: !12270, file: !12251, line: 40, type: !12068)
!12276 = !DILocation(line: 0, scope: !12270)
!12277 = !DILocation(line: 46, column: 2, scope: !12270)
!12278 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12251, file: !12251, line: 81, type: !5925, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12279)
!12279 = !{!12280}
!12280 = !DILocalVariable(name: "reason", arg: 1, scope: !12278, file: !12251, line: 81, type: !32)
!12281 = !DILocation(line: 0, scope: !12278)
!12282 = !DILocation(line: 83, column: 2, scope: !12278)
!12283 = distinct !DISubprogram(name: "z_fatal_error", scope: !12251, file: !12251, line: 96, type: !12271, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12284)
!12284 = !{!12285, !12286, !12287, !12288}
!12285 = !DILocalVariable(name: "reason", arg: 1, scope: !12283, file: !12251, line: 96, type: !32)
!12286 = !DILocalVariable(name: "esf", arg: 2, scope: !12283, file: !12251, line: 96, type: !12068)
!12287 = !DILocalVariable(name: "key", scope: !12283, file: !12251, line: 102, type: !32)
!12288 = !DILocalVariable(name: "thread", scope: !12283, file: !12251, line: 103, type: !12112)
!12289 = !DILocation(line: 0, scope: !12283)
!12290 = !DILocation(line: 55, column: 2, scope: !12256, inlinedAt: !12291)
!12291 = distinct !DILocation(line: 102, column: 21, scope: !12283)
!12292 = !DILocation(line: 0, scope: !12256, inlinedAt: !12291)
!12293 = !DILocation(line: 119, column: 11, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12283, file: !12251, line: 119, column: 6)
!12295 = !DILocation(line: 119, column: 20, scope: !12294)
!12296 = !DILocation(line: 131, column: 2, scope: !12283)
!12297 = !DILocation(line: 151, column: 7, scope: !12298)
!12298 = distinct !DILexicalBlock(scope: !12299, file: !12251, line: 146, column: 32)
!12299 = distinct !DILexicalBlock(scope: !12283, file: !12251, line: 146, column: 6)
!12300 = !DILocation(line: 151, column: 21, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12298, file: !12251, line: 151, column: 7)
!12302 = !DILocation(line: 104, column: 4, scope: !12283)
!12303 = !DILocalVariable(name: "key", arg: 1, scope: !12304, file: !5914, line: 84, type: !32)
!12304 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12305)
!12305 = !{!12303}
!12306 = !DILocation(line: 0, scope: !12304, inlinedAt: !12307)
!12307 = distinct !DILocation(line: 186, column: 2, scope: !12283)
!12308 = !DILocation(line: 95, column: 2, scope: !12304, inlinedAt: !12307)
!12309 = !{i64 2241627}
!12310 = !DILocation(line: 189, column: 3, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12312, file: !12251, line: 188, column: 41)
!12312 = distinct !DILexicalBlock(scope: !12283, file: !12251, line: 188, column: 6)
!12313 = !DILocation(line: 191, column: 1, scope: !12283)
!12314 = distinct !DISubprogram(name: "k_current_get", scope: !224, file: !224, line: 530, type: !12315, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !250)
!12315 = !DISubroutineType(types: !12316)
!12316 = !{!12317}
!12317 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !12112)
!12318 = !DILocation(line: 535, column: 9, scope: !12314)
!12319 = !DILocation(line: 535, column: 2, scope: !12314)
!12320 = distinct !DISubprogram(name: "k_thread_abort", scope: !3315, file: !3315, line: 188, type: !12321, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !12323)
!12321 = !DISubroutineType(types: !12322)
!12322 = !{null, !12317}
!12323 = !{!12324}
!12324 = !DILocalVariable(name: "thread", arg: 1, scope: !12320, file: !3315, line: 188, type: !12317)
!12325 = !DILocation(line: 0, scope: !12320)
!12326 = !DILocation(line: 197, column: 2, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12320, file: !3315, line: 197, column: 2)
!12328 = !{i64 2154741589}
!12329 = !DILocation(line: 198, column: 2, scope: !12320)
!12330 = !DILocation(line: 199, column: 1, scope: !12320)
!12331 = distinct !DISubprogram(name: "z_current_get", scope: !3315, file: !3315, line: 173, type: !12315, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2989, retainedNodes: !250)
!12332 = !DILocation(line: 180, column: 2, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12331, file: !3315, line: 180, column: 2)
!12334 = !{i64 2154741521}
!12335 = !DILocation(line: 181, column: 9, scope: !12331)
!12336 = !DILocation(line: 181, column: 2, scope: !12331)
!12337 = distinct !DISubprogram(name: "z_early_memset", scope: !1851, file: !1851, line: 108, type: !12338, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12340)
!12338 = !DISubroutineType(types: !12339)
!12339 = !{null, !102, !107, !252}
!12340 = !{!12341, !12342, !12343}
!12341 = !DILocalVariable(name: "dst", arg: 1, scope: !12337, file: !1851, line: 108, type: !102)
!12342 = !DILocalVariable(name: "c", arg: 2, scope: !12337, file: !1851, line: 108, type: !107)
!12343 = !DILocalVariable(name: "n", arg: 3, scope: !12337, file: !1851, line: 108, type: !252)
!12344 = !DILocation(line: 0, scope: !12337)
!12345 = !DILocation(line: 110, column: 9, scope: !12337)
!12346 = !DILocation(line: 111, column: 1, scope: !12337)
!12347 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1851, file: !1851, line: 121, type: !12348, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12350)
!12348 = !DISubroutineType(types: !12349)
!12349 = !{null, !102, !13, !252}
!12350 = !{!12351, !12352, !12353}
!12351 = !DILocalVariable(name: "dst", arg: 1, scope: !12347, file: !1851, line: 121, type: !102)
!12352 = !DILocalVariable(name: "src", arg: 2, scope: !12347, file: !1851, line: 121, type: !13)
!12353 = !DILocalVariable(name: "n", arg: 3, scope: !12347, file: !1851, line: 121, type: !252)
!12354 = !DILocation(line: 0, scope: !12347)
!12355 = !DILocation(line: 123, column: 9, scope: !12347)
!12356 = !DILocation(line: 124, column: 1, scope: !12347)
!12357 = distinct !DISubprogram(name: "z_bss_zero", scope: !1851, file: !1851, line: 132, type: !3130, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !250)
!12358 = !DILocation(line: 143, column: 2, scope: !12357)
!12359 = !DILocation(line: 168, column: 1, scope: !12357)
!12360 = distinct !DISubprogram(name: "z_init_cpu", scope: !1851, file: !1851, line: 372, type: !7732, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12361)
!12361 = !{!12362}
!12362 = !DILocalVariable(name: "id", arg: 1, scope: !12360, file: !1851, line: 372, type: !107)
!12363 = !DILocation(line: 0, scope: !12360)
!12364 = !DILocation(line: 374, column: 2, scope: !12360)
!12365 = !DILocation(line: 375, column: 34, scope: !12360)
!12366 = !DILocation(line: 375, column: 19, scope: !12360)
!12367 = !DILocation(line: 375, column: 31, scope: !12360)
!12368 = !DILocation(line: 376, column: 24, scope: !12360)
!12369 = !DILocation(line: 376, column: 19, scope: !12360)
!12370 = !DILocation(line: 376, column: 22, scope: !12360)
!12371 = !DILocation(line: 378, column: 26, scope: !12360)
!12372 = !DILocation(line: 378, column: 4, scope: !12360)
!12373 = !DILocation(line: 378, column: 50, scope: !12360)
!12374 = !DILocation(line: 377, column: 19, scope: !12360)
!12375 = !DILocation(line: 377, column: 29, scope: !12360)
!12376 = !DILocation(line: 384, column: 1, scope: !12360)
!12377 = distinct !DISubprogram(name: "init_idle_thread", scope: !1851, file: !1851, line: 343, type: !7732, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12378)
!12378 = !{!12379, !12380, !12381, !12384}
!12379 = !DILocalVariable(name: "i", arg: 1, scope: !12377, file: !1851, line: 343, type: !107)
!12380 = !DILocalVariable(name: "thread", scope: !12377, file: !1851, line: 345, type: !1943)
!12381 = !DILocalVariable(name: "stack", scope: !12377, file: !1851, line: 346, type: !12382)
!12382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12383, size: 32)
!12383 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3671, line: 44, baseType: !2057)
!12384 = !DILocalVariable(name: "tname", scope: !12377, file: !1851, line: 358, type: !256)
!12385 = !DILocation(line: 0, scope: !12377)
!12386 = !DILocation(line: 345, column: 29, scope: !12377)
!12387 = !DILocation(line: 346, column: 28, scope: !12377)
!12388 = !DILocation(line: 362, column: 37, scope: !12377)
!12389 = !DILocation(line: 362, column: 36, scope: !12377)
!12390 = !DILocation(line: 361, column: 2, scope: !12377)
!12391 = !DILocation(line: 365, column: 2, scope: !12377)
!12392 = !DILocation(line: 370, column: 1, scope: !12377)
!12393 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2058, file: !2058, line: 331, type: !12394, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12396)
!12394 = !DISubroutineType(types: !12395)
!12395 = !{!256, !12382}
!12396 = !{!12397}
!12397 = !DILocalVariable(name: "sym", arg: 1, scope: !12393, file: !2058, line: 331, type: !12382)
!12398 = !DILocation(line: 0, scope: !12393)
!12399 = !DILocation(line: 333, column: 21, scope: !12393)
!12400 = !DILocation(line: 333, column: 2, scope: !12393)
!12401 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12402, file: !12402, line: 155, type: !12403, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12405)
!12402 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12403 = !DISubroutineType(types: !12404)
!12404 = !{null, !1943}
!12405 = !{!12406}
!12406 = !DILocalVariable(name: "thread", arg: 1, scope: !12401, file: !12402, line: 155, type: !1943)
!12407 = !DILocation(line: 0, scope: !12401)
!12408 = !DILocation(line: 157, column: 15, scope: !12401)
!12409 = !DILocation(line: 157, column: 28, scope: !12401)
!12410 = !DILocation(line: 158, column: 1, scope: !12401)
!12411 = distinct !DISubprogram(name: "z_cstart", scope: !1851, file: !1851, line: 501, type: !3130, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12412)
!12412 = !{!12413}
!12413 = !DILocalVariable(name: "dummy_thread", scope: !12411, file: !1851, line: 518, type: !1944)
!12414 = !DILocation(line: 507, column: 2, scope: !12411)
!12415 = !DILocation(line: 43, column: 14, scope: !12416, inlinedAt: !12420)
!12416 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12417, file: !12417, line: 40, type: !3130, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12418)
!12417 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12418 = !{!12419}
!12419 = !DILocalVariable(name: "msp", scope: !12416, file: !12417, line: 42, type: !162)
!12420 = distinct !DILocation(line: 44, column: 2, scope: !12421, inlinedAt: !12423)
!12421 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12422, file: !12422, line: 42, type: !3130, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !250)
!12422 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12423 = distinct !DILocation(line: 510, column: 2, scope: !12411)
!12424 = !DILocation(line: 43, column: 3, scope: !12416, inlinedAt: !12420)
!12425 = !DILocation(line: 43, column: 60, scope: !12416, inlinedAt: !12420)
!12426 = !DILocation(line: 0, scope: !12416, inlinedAt: !12420)
!12427 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12428, file: !6088, line: 1153, type: !162)
!12428 = distinct !DISubprogram(name: "__set_MSP", scope: !6088, file: !6088, line: 1153, type: !6179, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12429)
!12429 = !{!12427}
!12430 = !DILocation(line: 0, scope: !12428, inlinedAt: !12431)
!12431 = distinct !DILocation(line: 46, column: 2, scope: !12416, inlinedAt: !12420)
!12432 = !DILocation(line: 1155, column: 3, scope: !12428, inlinedAt: !12431)
!12433 = !{i64 3515186}
!12434 = !DILocation(line: 62, column: 11, scope: !12416, inlinedAt: !12420)
!12435 = !DILocation(line: 102, column: 2, scope: !12436, inlinedAt: !12437)
!12436 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !6882, file: !6882, line: 97, type: !3130, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !250)
!12437 = distinct !DILocation(line: 45, column: 2, scope: !12421, inlinedAt: !12423)
!12438 = !DILocation(line: 108, column: 2, scope: !12436, inlinedAt: !12437)
!12439 = !DILocation(line: 112, column: 2, scope: !12436, inlinedAt: !12437)
!12440 = !DILocation(line: 113, column: 2, scope: !12436, inlinedAt: !12437)
!12441 = !DILocation(line: 114, column: 2, scope: !12436, inlinedAt: !12437)
!12442 = !DILocation(line: 116, column: 2, scope: !12436, inlinedAt: !12437)
!12443 = !DILocation(line: 123, column: 13, scope: !12436, inlinedAt: !12437)
!12444 = !DILocation(line: 46, column: 2, scope: !12421, inlinedAt: !12423)
!12445 = !DILocation(line: 47, column: 2, scope: !12421, inlinedAt: !12423)
!12446 = !DILocation(line: 174, column: 12, scope: !12447, inlinedAt: !12448)
!12447 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !6882, file: !6882, line: 169, type: !3130, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !250)
!12448 = distinct !DILocation(line: 48, column: 2, scope: !12421, inlinedAt: !12423)
!12449 = !DILocation(line: 179, column: 12, scope: !12447, inlinedAt: !12448)
!12450 = !DILocation(line: 50, column: 2, scope: !12421, inlinedAt: !12423)
!12451 = !DILocation(line: 57, column: 2, scope: !12421, inlinedAt: !12423)
!12452 = !DILocation(line: 518, column: 2, scope: !12411)
!12453 = !DILocation(line: 518, column: 18, scope: !12411)
!12454 = !DILocation(line: 520, column: 2, scope: !12411)
!12455 = !DILocation(line: 523, column: 2, scope: !12411)
!12456 = !DILocation(line: 526, column: 2, scope: !12411)
!12457 = !DILocation(line: 527, column: 2, scope: !12411)
!12458 = !DILocation(line: 543, column: 24, scope: !12411)
!12459 = !DILocation(line: 543, column: 2, scope: !12411)
!12460 = !DILocation(line: 0, scope: !2077)
!12461 = !DILocation(line: 246, column: 15, scope: !2095)
!12462 = !DILocation(line: 246, column: 36, scope: !2094)
!12463 = !DILocation(line: 246, column: 2, scope: !2095)
!12464 = !DILocation(line: 247, column: 37, scope: !2093)
!12465 = !DILocation(line: 0, scope: !2093)
!12466 = !DILocation(line: 248, column: 19, scope: !2093)
!12467 = !DILocation(line: 248, column: 12, scope: !2093)
!12468 = !DILocation(line: 250, column: 11, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !2093, file: !1851, line: 250, column: 7)
!12470 = !DILocation(line: 250, column: 7, scope: !2093)
!12471 = !DILocation(line: 254, column: 11, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12473, file: !1851, line: 254, column: 8)
!12473 = distinct !DILexicalBlock(scope: !12469, file: !1851, line: 250, column: 20)
!12474 = !DILocation(line: 254, column: 8, scope: !12473)
!12475 = !DILocation(line: 255, column: 9, scope: !12476)
!12476 = distinct !DILexicalBlock(scope: !12472, file: !1851, line: 254, column: 17)
!12477 = !DILocation(line: 258, column: 9, scope: !12476)
!12478 = !DILocation(line: 261, column: 28, scope: !12476)
!12479 = !DILocation(line: 261, column: 10, scope: !12476)
!12480 = !DILocation(line: 261, column: 17, scope: !12476)
!12481 = !DILocation(line: 261, column: 26, scope: !12476)
!12482 = !DILocation(line: 262, column: 4, scope: !12476)
!12483 = !DILocation(line: 263, column: 9, scope: !12473)
!12484 = !DILocation(line: 263, column: 16, scope: !12473)
!12485 = !DILocation(line: 263, column: 28, scope: !12473)
!12486 = !DILocation(line: 264, column: 3, scope: !12473)
!12487 = !DILocation(line: 246, column: 60, scope: !2094)
!12488 = distinct !{!12488, !12463, !12489}
!12489 = !DILocation(line: 265, column: 2, scope: !2095)
!12490 = !DILocation(line: 266, column: 1, scope: !2077)
!12491 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !497, file: !497, line: 1814, type: !6122, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12492)
!12492 = !{!12493, !12494}
!12493 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12491, file: !497, line: 1814, type: !753)
!12494 = !DILocalVariable(name: "priority", arg: 2, scope: !12491, file: !497, line: 1814, type: !162)
!12495 = !DILocation(line: 0, scope: !12491)
!12496 = !DILocation(line: 1822, column: 48, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12498, file: !497, line: 1821, column: 3)
!12498 = distinct !DILexicalBlock(scope: !12491, file: !497, line: 1816, column: 7)
!12499 = !DILocation(line: 1822, column: 32, scope: !12497)
!12500 = !DILocation(line: 1822, column: 40, scope: !12497)
!12501 = !DILocation(line: 1822, column: 5, scope: !12497)
!12502 = !DILocation(line: 1822, column: 46, scope: !12497)
!12503 = !DILocation(line: 1824, column: 1, scope: !12491)
!12504 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12422, file: !12422, line: 32, type: !3130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!12505 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12506, file: !12506, line: 215, type: !12403, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12507)
!12506 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12507 = !{!12508}
!12508 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12505, file: !12506, line: 215, type: !1943)
!12509 = !DILocation(line: 0, scope: !12505)
!12510 = !DILocation(line: 217, column: 21, scope: !12505)
!12511 = !DILocation(line: 217, column: 34, scope: !12505)
!12512 = !DILocation(line: 221, column: 21, scope: !12505)
!12513 = !DILocation(line: 221, column: 34, scope: !12505)
!12514 = !DILocation(line: 223, column: 27, scope: !12505)
!12515 = !DILocation(line: 223, column: 33, scope: !12505)
!12516 = !DILocation(line: 224, column: 27, scope: !12505)
!12517 = !DILocation(line: 224, column: 32, scope: !12505)
!12518 = !DILocation(line: 232, column: 16, scope: !12505)
!12519 = !DILocation(line: 232, column: 30, scope: !12505)
!12520 = !DILocation(line: 239, column: 24, scope: !12505)
!12521 = !DILocation(line: 240, column: 1, scope: !12505)
!12522 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1851, file: !1851, line: 399, type: !12523, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12525)
!12523 = !DISubroutineType(types: !12524)
!12524 = !{!256}
!12525 = !{!12526}
!12526 = !DILocalVariable(name: "stack_ptr", scope: !12522, file: !1851, line: 401, type: !256)
!12527 = !DILocation(line: 404, column: 2, scope: !12522)
!12528 = !DILocation(line: 416, column: 24, scope: !12522)
!12529 = !DILocation(line: 418, column: 14, scope: !12522)
!12530 = !DILocation(line: 0, scope: !12522)
!12531 = !DILocation(line: 423, column: 2, scope: !12522)
!12532 = !DILocation(line: 424, column: 2, scope: !12522)
!12533 = !DILocation(line: 426, column: 2, scope: !12522)
!12534 = !DILocation(line: 428, column: 2, scope: !12522)
!12535 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1851, file: !1851, line: 432, type: !3347, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12536)
!12536 = !{!12537}
!12537 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12535, file: !1851, line: 432, type: !256)
!12538 = !DILocation(line: 0, scope: !12535)
!12539 = !DILocation(line: 435, column: 2, scope: !12535)
!12540 = !DILocation(line: 445, column: 2, scope: !12535)
!12541 = distinct !DISubprogram(name: "bg_thread_main", scope: !1851, file: !1851, line: 277, type: !3673, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1847, retainedNodes: !12542)
!12542 = !{!12543, !12544, !12545}
!12543 = !DILocalVariable(name: "unused1", arg: 1, scope: !12541, file: !1851, line: 277, type: !102)
!12544 = !DILocalVariable(name: "unused2", arg: 2, scope: !12541, file: !1851, line: 277, type: !102)
!12545 = !DILocalVariable(name: "unused3", arg: 3, scope: !12541, file: !1851, line: 277, type: !102)
!12546 = !DILocation(line: 0, scope: !12541)
!12547 = !DILocation(line: 291, column: 20, scope: !12541)
!12548 = !DILocation(line: 293, column: 2, scope: !12541)
!12549 = !DILocation(line: 297, column: 2, scope: !12541)
!12550 = !DILocation(line: 305, column: 2, scope: !12541)
!12551 = !DILocation(line: 307, column: 2, scope: !12541)
!12552 = !DILocation(line: 330, column: 8, scope: !12541)
!12553 = !DILocation(line: 333, column: 34, scope: !12541)
!12554 = !DILocation(line: 339, column: 1, scope: !12541)
!12555 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2104, file: !2104, line: 45, type: !12556, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12564)
!12556 = !DISubroutineType(types: !12557)
!12557 = !{null, !12558, !102}
!12558 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !224, line: 103, baseType: !12559)
!12559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12560, size: 32)
!12560 = !DISubroutineType(types: !12561)
!12561 = !{null, !12562, !102}
!12562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12563, size: 32)
!12563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2109)
!12564 = !{!12565, !12566}
!12565 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12555, file: !2104, line: 45, type: !12558)
!12566 = !DILocalVariable(name: "user_data", arg: 2, scope: !12555, file: !2104, line: 45, type: !102)
!12567 = !DILocation(line: 0, scope: !12555)
!12568 = !DILocation(line: 71, column: 1, scope: !12555)
!12569 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2104, file: !2104, line: 73, type: !12556, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12570)
!12570 = !{!12571, !12572}
!12571 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12569, file: !2104, line: 73, type: !12558)
!12572 = !DILocalVariable(name: "user_data", arg: 2, scope: !12569, file: !2104, line: 73, type: !102)
!12573 = !DILocation(line: 0, scope: !12569)
!12574 = !DILocation(line: 95, column: 1, scope: !12569)
!12575 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2104, file: !2104, line: 97, type: !6883, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!12576 = !DILocation(line: 1031, column: 3, scope: !12577, inlinedAt: !12580)
!12577 = distinct !DISubprogram(name: "__get_IPSR", scope: !6088, file: !6088, line: 1027, type: !6169, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12578)
!12578 = !{!12579}
!12579 = !DILocalVariable(name: "result", scope: !12577, file: !6088, line: 1029, type: !162)
!12580 = distinct !DILocation(line: 48, column: 10, scope: !12581, inlinedAt: !12582)
!12581 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6882, file: !6882, line: 46, type: !6883, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!12582 = distinct !DILocation(line: 99, column: 9, scope: !12575)
!12583 = !{i64 3520837}
!12584 = !DILocation(line: 0, scope: !12577, inlinedAt: !12580)
!12585 = !DILocation(line: 48, column: 9, scope: !12581, inlinedAt: !12582)
!12586 = !DILocation(line: 99, column: 2, scope: !12575)
!12587 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2104, file: !2104, line: 106, type: !3130, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!12588 = !DILocation(line: 108, column: 2, scope: !12587)
!12589 = !DILocation(line: 108, column: 17, scope: !12587)
!12590 = !DILocation(line: 108, column: 30, scope: !12587)
!12591 = !DILocation(line: 109, column: 1, scope: !12587)
!12592 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2104, file: !2104, line: 116, type: !3130, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!12593 = !DILocation(line: 118, column: 2, scope: !12592)
!12594 = !DILocation(line: 118, column: 17, scope: !12592)
!12595 = !DILocation(line: 118, column: 30, scope: !12592)
!12596 = !DILocation(line: 119, column: 1, scope: !12592)
!12597 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2104, file: !2104, line: 126, type: !6883, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !250)
!12598 = !DILocation(line: 128, column: 10, scope: !12597)
!12599 = !DILocation(line: 128, column: 25, scope: !12597)
!12600 = !DILocation(line: 128, column: 38, scope: !12597)
!12601 = !DILocation(line: 128, column: 53, scope: !12597)
!12602 = !DILocation(line: 128, column: 2, scope: !12597)
!12603 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2104, file: !2104, line: 187, type: !12604, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12606)
!12604 = !DISubroutineType(types: !12605)
!12605 = !{!107, !2108, !123}
!12606 = !{!12607, !12608}
!12607 = !DILocalVariable(name: "thread", arg: 1, scope: !12603, file: !2104, line: 187, type: !2108)
!12608 = !DILocalVariable(name: "value", arg: 2, scope: !12603, file: !2104, line: 187, type: !123)
!12609 = !DILocation(line: 0, scope: !12603)
!12610 = !DILocation(line: 206, column: 2, scope: !12603)
!12611 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2104, file: !2104, line: 238, type: !12612, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12614)
!12612 = !DISubroutineType(types: !12613)
!12613 = !{!123, !2108}
!12614 = !{!12615}
!12615 = !DILocalVariable(name: "thread", arg: 1, scope: !12611, file: !2104, line: 238, type: !2108)
!12616 = !DILocation(line: 0, scope: !12611)
!12617 = !DILocation(line: 244, column: 2, scope: !12611)
!12618 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2104, file: !2104, line: 248, type: !12619, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12621)
!12619 = !DISubroutineType(types: !12620)
!12620 = !{!107, !2107, !256, !252}
!12621 = !{!12622, !12623, !12624}
!12622 = !DILocalVariable(name: "thread", arg: 1, scope: !12618, file: !2104, line: 248, type: !2107)
!12623 = !DILocalVariable(name: "buf", arg: 2, scope: !12618, file: !2104, line: 248, type: !256)
!12624 = !DILocalVariable(name: "size", arg: 3, scope: !12618, file: !2104, line: 248, type: !252)
!12625 = !DILocation(line: 0, scope: !12618)
!12626 = !DILocation(line: 257, column: 2, scope: !12618)
!12627 = !DILocation(line: 0, scope: !2103)
!12628 = !DILocation(line: 281, column: 11, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !2103, file: !2104, line: 281, column: 6)
!12630 = !DILocation(line: 281, column: 20, scope: !12629)
!12631 = !DILocation(line: 275, column: 45, scope: !2103)
!12632 = !DILocation(line: 285, column: 10, scope: !2103)
!12633 = !DILocation(line: 0, scope: !2224)
!12634 = !DILocation(line: 293, column: 39, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !2224, file: !2104, line: 293, column: 2)
!12636 = !DILocation(line: 293, column: 2, scope: !2224)
!12637 = !DILocation(line: 273, column: 14, scope: !2103)
!12638 = !DILocation(line: 309, column: 2, scope: !2103)
!12639 = !DILocation(line: 309, column: 11, scope: !2103)
!12640 = !DILocation(line: 311, column: 2, scope: !2103)
!12641 = !DILocation(line: 293, column: 26, scope: !12635)
!12642 = !DILocation(line: 294, column: 9, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12635, file: !2104, line: 293, column: 54)
!12644 = !DILocation(line: 295, column: 21, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12643, file: !2104, line: 295, column: 7)
!12646 = !DILocation(line: 295, column: 28, scope: !12645)
!12647 = !DILocation(line: 295, column: 7, scope: !12643)
!12648 = !DILocation(line: 299, column: 25, scope: !12643)
!12649 = !DILocation(line: 299, column: 41, scope: !12643)
!12650 = !DILocation(line: 300, column: 7, scope: !12643)
!12651 = !DILocation(line: 300, column: 26, scope: !12643)
!12652 = !DILocation(line: 299, column: 10, scope: !12643)
!12653 = !DILocation(line: 299, column: 7, scope: !12643)
!12654 = !DILocation(line: 302, column: 16, scope: !12643)
!12655 = !DILocation(line: 304, column: 20, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12643, file: !2104, line: 304, column: 7)
!12657 = !DILocation(line: 304, column: 7, scope: !12643)
!12658 = !DILocation(line: 305, column: 26, scope: !12659)
!12659 = distinct !DILexicalBlock(scope: !12656, file: !2104, line: 304, column: 26)
!12660 = !DILocation(line: 305, column: 42, scope: !12659)
!12661 = !DILocation(line: 305, column: 11, scope: !12659)
!12662 = !DILocation(line: 305, column: 8, scope: !12659)
!12663 = !DILocation(line: 306, column: 3, scope: !12659)
!12664 = !DILocation(line: 293, column: 50, scope: !12635)
!12665 = !DILocation(line: 312, column: 1, scope: !2103)
!12666 = distinct !DISubprogram(name: "copy_bytes", scope: !2104, file: !2104, line: 261, type: !12667, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12669)
!12667 = !DISubroutineType(types: !12668)
!12668 = !{!252, !256, !252, !123, !252}
!12669 = !{!12670, !12671, !12672, !12673, !12674}
!12670 = !DILocalVariable(name: "dest", arg: 1, scope: !12666, file: !2104, line: 261, type: !256)
!12671 = !DILocalVariable(name: "dest_size", arg: 2, scope: !12666, file: !2104, line: 261, type: !252)
!12672 = !DILocalVariable(name: "src", arg: 3, scope: !12666, file: !2104, line: 261, type: !123)
!12673 = !DILocalVariable(name: "src_size", arg: 4, scope: !12666, file: !2104, line: 261, type: !252)
!12674 = !DILocalVariable(name: "bytes_to_copy", scope: !12666, file: !2104, line: 263, type: !252)
!12675 = !DILocation(line: 0, scope: !12666)
!12676 = !DILocation(line: 265, column: 18, scope: !12666)
!12677 = !DILocation(line: 266, column: 2, scope: !12666)
!12678 = !DILocation(line: 268, column: 2, scope: !12666)
!12679 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2104, file: !2104, line: 383, type: !12680, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12682)
!12680 = !DISubroutineType(types: !12681)
!12681 = !{null, !2108}
!12682 = !{!12683}
!12683 = !DILocalVariable(name: "thread", arg: 1, scope: !12679, file: !2104, line: 383, type: !2108)
!12684 = !DILocation(line: 0, scope: !12679)
!12685 = !DILocation(line: 387, column: 2, scope: !12679)
!12686 = !DILocation(line: 388, column: 1, scope: !12679)
!12687 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2104, file: !2104, line: 528, type: !12688, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12695)
!12688 = !DISubroutineType(types: !12689)
!12689 = !{!256, !2108, !12690, !252, !3670, !102, !102, !102, !107, !162, !123}
!12690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12691, size: 32)
!12691 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3671, line: 44, baseType: !12692)
!12692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2058, line: 47, size: 8, elements: !12693)
!12693 = !{!12694}
!12694 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12692, file: !2058, line: 48, baseType: !125, size: 8)
!12695 = !{!12696, !12697, !12698, !12699, !12700, !12701, !12702, !12703, !12704, !12705, !12706}
!12696 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12687, file: !2104, line: 528, type: !2108)
!12697 = !DILocalVariable(name: "stack", arg: 2, scope: !12687, file: !2104, line: 529, type: !12690)
!12698 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12687, file: !2104, line: 529, type: !252)
!12699 = !DILocalVariable(name: "entry", arg: 4, scope: !12687, file: !2104, line: 530, type: !3670)
!12700 = !DILocalVariable(name: "p1", arg: 5, scope: !12687, file: !2104, line: 531, type: !102)
!12701 = !DILocalVariable(name: "p2", arg: 6, scope: !12687, file: !2104, line: 531, type: !102)
!12702 = !DILocalVariable(name: "p3", arg: 7, scope: !12687, file: !2104, line: 531, type: !102)
!12703 = !DILocalVariable(name: "prio", arg: 8, scope: !12687, file: !2104, line: 532, type: !107)
!12704 = !DILocalVariable(name: "options", arg: 9, scope: !12687, file: !2104, line: 532, type: !162)
!12705 = !DILocalVariable(name: "name", arg: 10, scope: !12687, file: !2104, line: 532, type: !123)
!12706 = !DILocalVariable(name: "stack_ptr", scope: !12687, file: !2104, line: 534, type: !256)
!12707 = !DILocation(line: 0, scope: !12687)
!12708 = !DILocation(line: 550, column: 28, scope: !12687)
!12709 = !DILocation(line: 550, column: 2, scope: !12687)
!12710 = !DILocation(line: 553, column: 34, scope: !12687)
!12711 = !DILocation(line: 553, column: 2, scope: !12687)
!12712 = !DILocation(line: 554, column: 14, scope: !12687)
!12713 = !DILocation(line: 564, column: 2, scope: !12687)
!12714 = !DILocation(line: 567, column: 14, scope: !12687)
!12715 = !DILocation(line: 567, column: 24, scope: !12687)
!12716 = !DILocation(line: 612, column: 7, scope: !12717)
!12717 = distinct !DILexicalBlock(scope: !12687, file: !2104, line: 612, column: 6)
!12718 = !DILocation(line: 612, column: 6, scope: !12687)
!12719 = !DILocation(line: 627, column: 40, scope: !12687)
!12720 = !DILocation(line: 637, column: 2, scope: !12687)
!12721 = !DILocation(line: 613, column: 15, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12717, file: !2104, line: 612, column: 17)
!12723 = !DILocation(line: 613, column: 29, scope: !12722)
!12724 = !DILocation(line: 638, column: 1, scope: !12687)
!12725 = distinct !DISubprogram(name: "z_waitq_init", scope: !12726, file: !12726, line: 47, type: !12727, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12729)
!12726 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12727 = !DISubroutineType(types: !12728)
!12728 = !{null, !2139}
!12729 = !{!12730}
!12730 = !DILocalVariable(name: "w", arg: 1, scope: !12725, file: !12726, line: 47, type: !2139)
!12731 = !DILocation(line: 0, scope: !12725)
!12732 = !DILocation(line: 49, column: 21, scope: !12725)
!12733 = !DILocation(line: 49, column: 2, scope: !12725)
!12734 = !DILocation(line: 50, column: 1, scope: !12725)
!12735 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2104, file: !2104, line: 791, type: !12736, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12739)
!12736 = !DISubroutineType(types: !12737)
!12737 = !{null, !12738, !107, !162, !32}
!12738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!12739 = !{!12740, !12741, !12742, !12743}
!12740 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12735, file: !2104, line: 791, type: !12738)
!12741 = !DILocalVariable(name: "priority", arg: 2, scope: !12735, file: !2104, line: 791, type: !107)
!12742 = !DILocalVariable(name: "initial_state", arg: 3, scope: !12735, file: !2104, line: 792, type: !162)
!12743 = !DILocalVariable(name: "options", arg: 4, scope: !12735, file: !2104, line: 792, type: !32)
!12744 = !DILocation(line: 0, scope: !12735)
!12745 = !DILocation(line: 795, column: 15, scope: !12735)
!12746 = !DILocation(line: 795, column: 25, scope: !12735)
!12747 = !DILocation(line: 796, column: 30, scope: !12735)
!12748 = !DILocation(line: 796, column: 15, scope: !12735)
!12749 = !DILocation(line: 796, column: 28, scope: !12735)
!12750 = !DILocation(line: 797, column: 30, scope: !12735)
!12751 = !DILocation(line: 797, column: 15, scope: !12735)
!12752 = !DILocation(line: 797, column: 28, scope: !12735)
!12753 = !DILocation(line: 799, column: 22, scope: !12735)
!12754 = !DILocation(line: 799, column: 15, scope: !12735)
!12755 = !DILocation(line: 799, column: 20, scope: !12735)
!12756 = !DILocation(line: 801, column: 15, scope: !12735)
!12757 = !DILocation(line: 801, column: 28, scope: !12735)
!12758 = !DILocation(line: 814, column: 2, scope: !12735)
!12759 = !DILocation(line: 815, column: 1, scope: !12735)
!12760 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2104, file: !2104, line: 449, type: !12761, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12763)
!12761 = !DISubroutineType(types: !12762)
!12762 = !{!256, !2108, !12690, !252}
!12763 = !{!12764, !12765, !12766, !12767, !12768, !12769, !12770, !12771}
!12764 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12760, file: !2104, line: 449, type: !2108)
!12765 = !DILocalVariable(name: "stack", arg: 2, scope: !12760, file: !2104, line: 450, type: !12690)
!12766 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12760, file: !2104, line: 450, type: !252)
!12767 = !DILocalVariable(name: "stack_obj_size", scope: !12760, file: !2104, line: 452, type: !252)
!12768 = !DILocalVariable(name: "stack_buf_size", scope: !12760, file: !2104, line: 452, type: !252)
!12769 = !DILocalVariable(name: "stack_ptr", scope: !12760, file: !2104, line: 453, type: !256)
!12770 = !DILocalVariable(name: "stack_buf_start", scope: !12760, file: !2104, line: 453, type: !256)
!12771 = !DILocalVariable(name: "delta", scope: !12760, file: !2104, line: 454, type: !252)
!12772 = !DILocation(line: 0, scope: !12760)
!12773 = !DILocation(line: 465, column: 20, scope: !12774)
!12774 = distinct !DILexicalBlock(scope: !12760, file: !2104, line: 463, column: 2)
!12775 = !DILocation(line: 466, column: 21, scope: !12774)
!12776 = !DILocation(line: 473, column: 28, scope: !12760)
!12777 = !DILocation(line: 514, column: 33, scope: !12760)
!12778 = !DILocation(line: 514, column: 25, scope: !12760)
!12779 = !DILocation(line: 514, column: 31, scope: !12760)
!12780 = !DILocation(line: 515, column: 25, scope: !12760)
!12781 = !DILocation(line: 515, column: 30, scope: !12760)
!12782 = !DILocation(line: 516, column: 25, scope: !12760)
!12783 = !DILocation(line: 516, column: 31, scope: !12760)
!12784 = !DILocation(line: 520, column: 2, scope: !12760)
!12785 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2058, file: !2058, line: 331, type: !12786, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12788)
!12786 = !DISubroutineType(types: !12787)
!12787 = !{!256, !12690}
!12788 = !{!12789}
!12789 = !DILocalVariable(name: "sym", arg: 1, scope: !12785, file: !2058, line: 331, type: !12690)
!12790 = !DILocation(line: 0, scope: !12785)
!12791 = !DILocation(line: 333, column: 21, scope: !12785)
!12792 = !DILocation(line: 333, column: 2, scope: !12785)
!12793 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !12794, file: !12794, line: 40, type: !12795, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12797)
!12794 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12795 = !DISubroutineType(types: !12796)
!12796 = !{null, !12738}
!12797 = !{!12798}
!12798 = !DILocalVariable(name: "thread_base", arg: 1, scope: !12793, file: !12794, line: 40, type: !12738)
!12799 = !DILocation(line: 0, scope: !12793)
!12800 = !DILocation(line: 42, column: 31, scope: !12793)
!12801 = !DILocation(line: 42, column: 2, scope: !12793)
!12802 = !DILocation(line: 43, column: 1, scope: !12793)
!12803 = distinct !DISubprogram(name: "z_init_timeout", scope: !12794, file: !12794, line: 25, type: !2165, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12804)
!12804 = !{!12805}
!12805 = !DILocalVariable(name: "to", arg: 1, scope: !12803, file: !12794, line: 25, type: !2167)
!12806 = !DILocation(line: 0, scope: !12803)
!12807 = !DILocation(line: 27, column: 22, scope: !12803)
!12808 = !DILocation(line: 27, column: 2, scope: !12803)
!12809 = !DILocation(line: 28, column: 1, scope: !12803)
!12810 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !12811, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12813)
!12811 = !DISubroutineType(types: !12812)
!12812 = !{null, !2211}
!12813 = !{!12814}
!12814 = !DILocalVariable(name: "node", arg: 1, scope: !12810, file: !233, line: 211, type: !2211)
!12815 = !DILocation(line: 0, scope: !12810)
!12816 = !DILocation(line: 213, column: 8, scope: !12810)
!12817 = !DILocation(line: 213, column: 13, scope: !12810)
!12818 = !DILocation(line: 214, column: 8, scope: !12810)
!12819 = !DILocation(line: 214, column: 13, scope: !12810)
!12820 = !DILocation(line: 215, column: 1, scope: !12810)
!12821 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !12822, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12825)
!12822 = !DISubroutineType(types: !12823)
!12823 = !{null, !12824}
!12824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!12825 = !{!12826}
!12826 = !DILocalVariable(name: "list", arg: 1, scope: !12821, file: !233, line: 197, type: !12824)
!12827 = !DILocation(line: 0, scope: !12821)
!12828 = !DILocation(line: 199, column: 8, scope: !12821)
!12829 = !DILocation(line: 199, column: 13, scope: !12821)
!12830 = !DILocation(line: 200, column: 8, scope: !12821)
!12831 = !DILocation(line: 200, column: 13, scope: !12821)
!12832 = !DILocation(line: 201, column: 1, scope: !12821)
!12833 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2104, file: !2104, line: 641, type: !12834, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12840)
!12834 = !DISubroutineType(types: !12835)
!12835 = !{!2107, !2108, !12690, !252, !3670, !102, !102, !102, !107, !162, !12836}
!12836 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !12837)
!12837 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !12838)
!12838 = !{!12839}
!12839 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !12837, file: !104, line: 66, baseType: !103, size: 64)
!12840 = !{!12841, !12842, !12843, !12844, !12845, !12846, !12847, !12848, !12849, !12850}
!12841 = !DILocalVariable(name: "new_thread", arg: 1, scope: !12833, file: !2104, line: 641, type: !2108)
!12842 = !DILocalVariable(name: "stack", arg: 2, scope: !12833, file: !2104, line: 642, type: !12690)
!12843 = !DILocalVariable(name: "stack_size", arg: 3, scope: !12833, file: !2104, line: 643, type: !252)
!12844 = !DILocalVariable(name: "entry", arg: 4, scope: !12833, file: !2104, line: 643, type: !3670)
!12845 = !DILocalVariable(name: "p1", arg: 5, scope: !12833, file: !2104, line: 644, type: !102)
!12846 = !DILocalVariable(name: "p2", arg: 6, scope: !12833, file: !2104, line: 644, type: !102)
!12847 = !DILocalVariable(name: "p3", arg: 7, scope: !12833, file: !2104, line: 644, type: !102)
!12848 = !DILocalVariable(name: "prio", arg: 8, scope: !12833, file: !2104, line: 645, type: !107)
!12849 = !DILocalVariable(name: "options", arg: 9, scope: !12833, file: !2104, line: 645, type: !162)
!12850 = !DILocalVariable(name: "delay", arg: 10, scope: !12833, file: !2104, line: 645, type: !12836)
!12851 = !DILocation(line: 0, scope: !12833)
!12852 = !DILocation(line: 649, column: 2, scope: !12833)
!12853 = !DILocation(line: 652, column: 7, scope: !12854)
!12854 = distinct !DILexicalBlock(scope: !12833, file: !2104, line: 652, column: 6)
!12855 = !DILocation(line: 652, column: 6, scope: !12833)
!12856 = !DILocation(line: 653, column: 3, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12854, file: !2104, line: 652, column: 39)
!12858 = !DILocation(line: 654, column: 2, scope: !12857)
!12859 = !DILocation(line: 656, column: 2, scope: !12833)
!12860 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2104, file: !2104, line: 401, type: !12861, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12863)
!12861 = !DISubroutineType(types: !12862)
!12862 = !{null, !2108, !12836}
!12863 = !{!12864, !12865}
!12864 = !DILocalVariable(name: "thread", arg: 1, scope: !12860, file: !2104, line: 401, type: !2108)
!12865 = !DILocalVariable(name: "delay", arg: 2, scope: !12860, file: !2104, line: 401, type: !12836)
!12866 = !DILocation(line: 0, scope: !12860)
!12867 = !DILocation(line: 404, column: 6, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12860, file: !2104, line: 404, column: 6)
!12869 = !DILocation(line: 404, column: 6, scope: !12860)
!12870 = !DILocation(line: 405, column: 3, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12868, file: !2104, line: 404, column: 38)
!12872 = !DILocation(line: 406, column: 2, scope: !12871)
!12873 = !DILocation(line: 407, column: 3, scope: !12874)
!12874 = distinct !DILexicalBlock(scope: !12868, file: !2104, line: 406, column: 9)
!12875 = !DILocation(line: 413, column: 1, scope: !12860)
!12876 = distinct !DISubprogram(name: "k_thread_start", scope: !3315, file: !3315, line: 205, type: !12877, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12879)
!12877 = !DISubroutineType(types: !12878)
!12878 = !{null, !2107}
!12879 = !{!12880}
!12880 = !DILocalVariable(name: "thread", arg: 1, scope: !12876, file: !3315, line: 205, type: !2107)
!12881 = !DILocation(line: 0, scope: !12876)
!12882 = !DILocation(line: 214, column: 2, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12876, file: !3315, line: 214, column: 2)
!12884 = !{i64 2154766813}
!12885 = !DILocation(line: 215, column: 2, scope: !12876)
!12886 = !DILocation(line: 216, column: 1, scope: !12876)
!12887 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12794, file: !12794, line: 47, type: !12861, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12888)
!12888 = !{!12889, !12890}
!12889 = !DILocalVariable(name: "thread", arg: 1, scope: !12887, file: !12794, line: 47, type: !2108)
!12890 = !DILocalVariable(name: "ticks", arg: 2, scope: !12887, file: !12794, line: 47, type: !12836)
!12891 = !DILocation(line: 0, scope: !12887)
!12892 = !DILocation(line: 49, column: 30, scope: !12887)
!12893 = !DILocation(line: 49, column: 2, scope: !12887)
!12894 = !DILocation(line: 50, column: 1, scope: !12887)
!12895 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2104, file: !2104, line: 748, type: !3130, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12896)
!12896 = !{!12897, !12915}
!12897 = !DILocalVariable(name: "thread_data", scope: !12898, file: !2104, line: 750, type: !12899)
!12898 = distinct !DILexicalBlock(scope: !12895, file: !2104, line: 750, column: 2)
!12899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12900, size: 32)
!12900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !224, line: 620, size: 384, elements: !12901)
!12901 = !{!12902, !12903, !12904, !12905, !12906, !12907, !12908, !12909, !12910, !12911, !12912, !12914}
!12902 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !12900, file: !224, line: 621, baseType: !2108, size: 32)
!12903 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !12900, file: !224, line: 622, baseType: !12690, size: 32, offset: 32)
!12904 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !12900, file: !224, line: 623, baseType: !32, size: 32, offset: 64)
!12905 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !12900, file: !224, line: 624, baseType: !3670, size: 32, offset: 96)
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !12900, file: !224, line: 625, baseType: !102, size: 32, offset: 128)
!12907 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !12900, file: !224, line: 626, baseType: !102, size: 32, offset: 160)
!12908 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !12900, file: !224, line: 627, baseType: !102, size: 32, offset: 192)
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !12900, file: !224, line: 628, baseType: !107, size: 32, offset: 224)
!12910 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !12900, file: !224, line: 629, baseType: !162, size: 32, offset: 256)
!12911 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !12900, file: !224, line: 630, baseType: !727, size: 32, offset: 288)
!12912 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !12900, file: !224, line: 631, baseType: !12913, size: 32, offset: 320)
!12913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 32)
!12914 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !12900, file: !224, line: 632, baseType: !123, size: 32, offset: 352)
!12915 = !DILocalVariable(name: "thread_data", scope: !12916, file: !2104, line: 781, type: !12899)
!12916 = distinct !DILexicalBlock(scope: !12895, file: !2104, line: 781, column: 2)
!12917 = !DILocation(line: 0, scope: !12898)
!12918 = !DILocation(line: 750, column: 2, scope: !12898)
!12919 = !DILocation(line: 780, column: 2, scope: !12895)
!12920 = !DILocation(line: 0, scope: !12916)
!12921 = !DILocation(line: 781, column: 2, scope: !12916)
!12922 = !DILocation(line: 752, column: 17, scope: !12923)
!12923 = distinct !DILexicalBlock(scope: !12924, file: !2104, line: 750, column: 38)
!12924 = distinct !DILexicalBlock(scope: !12898, file: !2104, line: 750, column: 2)
!12925 = !DILocation(line: 753, column: 17, scope: !12923)
!12926 = !DILocation(line: 754, column: 17, scope: !12923)
!12927 = !DILocation(line: 755, column: 17, scope: !12923)
!12928 = !DILocation(line: 756, column: 17, scope: !12923)
!12929 = !DILocation(line: 757, column: 17, scope: !12923)
!12930 = !DILocation(line: 758, column: 17, scope: !12923)
!12931 = !DILocation(line: 759, column: 17, scope: !12923)
!12932 = !DILocation(line: 760, column: 17, scope: !12923)
!12933 = !DILocation(line: 751, column: 3, scope: !12923)
!12934 = !DILocation(line: 763, column: 16, scope: !12923)
!12935 = !DILocation(line: 763, column: 29, scope: !12923)
!12936 = !DILocation(line: 763, column: 39, scope: !12923)
!12937 = !DILocation(line: 750, column: 2, scope: !12924)
!12938 = !DILocation(line: 750, column: 2, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12924, file: !2104, line: 750, column: 2)
!12940 = distinct !{!12940, !12918, !12941}
!12941 = !DILocation(line: 764, column: 2, scope: !12898)
!12942 = !DILocation(line: 787, column: 2, scope: !12895)
!12943 = !DILocation(line: 788, column: 1, scope: !12895)
!12944 = !DILocation(line: 782, column: 20, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !2104, line: 782, column: 7)
!12946 = distinct !DILexicalBlock(scope: !12947, file: !2104, line: 781, column: 38)
!12947 = distinct !DILexicalBlock(scope: !12916, file: !2104, line: 781, column: 2)
!12948 = !DILocation(line: 782, column: 31, scope: !12945)
!12949 = !DILocation(line: 782, column: 7, scope: !12946)
!12950 = !DILocation(line: 783, column: 37, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12945, file: !2104, line: 782, column: 51)
!12952 = !DILocation(line: 784, column: 10, scope: !12951)
!12953 = !DILocation(line: 783, column: 4, scope: !12951)
!12954 = !DILocation(line: 785, column: 3, scope: !12951)
!12955 = !DILocation(line: 781, column: 2, scope: !12947)
!12956 = !DILocation(line: 781, column: 2, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12947, file: !2104, line: 781, column: 2)
!12958 = distinct !{!12958, !12921, !12959}
!12959 = !DILocation(line: 786, column: 2, scope: !12916)
!12960 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !12961, file: !12961, line: 403, type: !12962, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12964)
!12961 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12962 = !DISubroutineType(types: !12963)
!12963 = !{!1491, !1491}
!12964 = !{!12965}
!12965 = !DILocalVariable(name: "t", arg: 1, scope: !12960, file: !12961, line: 403, type: !1491)
!12966 = !DILocation(line: 0, scope: !12960)
!12967 = !DILocalVariable(name: "t", arg: 1, scope: !12968, file: !12961, line: 102, type: !1491)
!12968 = distinct !DISubprogram(name: "z_tmcvt", scope: !12961, file: !12961, line: 102, type: !12969, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12971)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!1491, !1491, !162, !162, !136, !136, !136, !136}
!12971 = !{!12967, !12972, !12973, !12974, !12975, !12976, !12977, !12978, !12979, !12980, !12981}
!12972 = !DILocalVariable(name: "from_hz", arg: 2, scope: !12968, file: !12961, line: 102, type: !162)
!12973 = !DILocalVariable(name: "to_hz", arg: 3, scope: !12968, file: !12961, line: 103, type: !162)
!12974 = !DILocalVariable(name: "const_hz", arg: 4, scope: !12968, file: !12961, line: 103, type: !136)
!12975 = !DILocalVariable(name: "result32", arg: 5, scope: !12968, file: !12961, line: 104, type: !136)
!12976 = !DILocalVariable(name: "round_up", arg: 6, scope: !12968, file: !12961, line: 104, type: !136)
!12977 = !DILocalVariable(name: "round_off", arg: 7, scope: !12968, file: !12961, line: 105, type: !136)
!12978 = !DILocalVariable(name: "mul_ratio", scope: !12968, file: !12961, line: 107, type: !136)
!12979 = !DILocalVariable(name: "div_ratio", scope: !12968, file: !12961, line: 109, type: !136)
!12980 = !DILocalVariable(name: "off", scope: !12968, file: !12961, line: 116, type: !1491)
!12981 = !DILocalVariable(name: "rdivisor", scope: !12982, file: !12961, line: 119, type: !162)
!12982 = distinct !DILexicalBlock(scope: !12983, file: !12961, line: 118, column: 18)
!12983 = distinct !DILexicalBlock(scope: !12968, file: !12961, line: 118, column: 6)
!12984 = !DILocation(line: 0, scope: !12968, inlinedAt: !12985)
!12985 = distinct !DILocation(line: 406, column: 9, scope: !12960)
!12986 = !DILocation(line: 145, column: 13, scope: !12987, inlinedAt: !12985)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !12961, line: 144, column: 10)
!12988 = distinct !DILexicalBlock(scope: !12989, file: !12961, line: 142, column: 7)
!12989 = distinct !DILexicalBlock(scope: !12990, file: !12961, line: 141, column: 24)
!12990 = distinct !DILexicalBlock(scope: !12991, file: !12961, line: 141, column: 13)
!12991 = distinct !DILexicalBlock(scope: !12968, file: !12961, line: 134, column: 6)
!12992 = !DILocation(line: 406, column: 2, scope: !12960)
!12993 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2104, file: !2104, line: 817, type: !3668, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !12994)
!12994 = !{!12995, !12996, !12997, !12998}
!12995 = !DILocalVariable(name: "entry", arg: 1, scope: !12993, file: !2104, line: 817, type: !3670)
!12996 = !DILocalVariable(name: "p1", arg: 2, scope: !12993, file: !2104, line: 818, type: !102)
!12997 = !DILocalVariable(name: "p2", arg: 3, scope: !12993, file: !2104, line: 818, type: !102)
!12998 = !DILocalVariable(name: "p3", arg: 4, scope: !12993, file: !2104, line: 818, type: !102)
!12999 = !DILocation(line: 0, scope: !12993)
!13000 = !DILocation(line: 822, column: 2, scope: !12993)
!13001 = !DILocation(line: 822, column: 17, scope: !12993)
!13002 = !DILocation(line: 822, column: 30, scope: !12993)
!13003 = !DILocation(line: 823, column: 2, scope: !12993)
!13004 = !DILocation(line: 845, column: 2, scope: !12993)
!13005 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2104, file: !2104, line: 888, type: !13006, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13008)
!13006 = !DISubroutineType(types: !13007)
!13007 = !{!107, !2108}
!13008 = !{!13009}
!13009 = !DILocalVariable(name: "thread", arg: 1, scope: !13005, file: !2104, line: 888, type: !2108)
!13010 = !DILocation(line: 0, scope: !13005)
!13011 = !DILocation(line: 893, column: 2, scope: !13005)
!13012 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2104, file: !2104, line: 897, type: !13013, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13015)
!13013 = !DISubroutineType(types: !13014)
!13014 = !{!107, !2108, !32}
!13015 = !{!13016, !13017}
!13016 = !DILocalVariable(name: "thread", arg: 1, scope: !13012, file: !2104, line: 897, type: !2108)
!13017 = !DILocalVariable(name: "options", arg: 2, scope: !13012, file: !2104, line: 897, type: !32)
!13018 = !DILocation(line: 0, scope: !13012)
!13019 = !DILocation(line: 902, column: 2, scope: !13012)
!13020 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2104, file: !2104, line: 1072, type: !13021, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13026)
!13021 = !DISubroutineType(types: !13022)
!13022 = !{!107, !2107, !13023}
!13023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13024, size: 32)
!13024 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !359, line: 234, baseType: !13025)
!13025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !359, line: 192, elements: !250)
!13026 = !{!13027, !13028}
!13027 = !DILocalVariable(name: "thread", arg: 1, scope: !13020, file: !2104, line: 1072, type: !2107)
!13028 = !DILocalVariable(name: "stats", arg: 2, scope: !13020, file: !2104, line: 1073, type: !13023)
!13029 = !DILocation(line: 0, scope: !13020)
!13030 = !DILocation(line: 1075, column: 14, scope: !13031)
!13031 = distinct !DILexicalBlock(scope: !13020, file: !2104, line: 1075, column: 6)
!13032 = !DILocation(line: 1075, column: 23, scope: !13031)
!13033 = !DILocation(line: 1086, column: 1, scope: !13020)
!13034 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2104, file: !2104, line: 1088, type: !13035, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2208, retainedNodes: !13037)
!13035 = !DISubroutineType(types: !13036)
!13036 = !{!107, !13023}
!13037 = !{!13038}
!13038 = !DILocalVariable(name: "stats", arg: 1, scope: !13034, file: !2104, line: 1088, type: !13023)
!13039 = !DILocation(line: 0, scope: !13034)
!13040 = !DILocation(line: 1094, column: 12, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13034, file: !2104, line: 1094, column: 6)
!13042 = !DILocation(line: 1120, column: 1, scope: !13034)
!13043 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13044, file: !13044, line: 20, type: !3130, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !250)
!13044 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13045 = !DILocation(line: 30, column: 2, scope: !13043)
!13046 = !DILocation(line: 31, column: 1, scope: !13043)
!13047 = distinct !DISubprogram(name: "idle", scope: !13044, file: !13044, line: 33, type: !3673, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !13048)
!13048 = !{!13049, !13050, !13051}
!13049 = !DILocalVariable(name: "unused1", arg: 1, scope: !13047, file: !13044, line: 33, type: !102)
!13050 = !DILocalVariable(name: "unused2", arg: 2, scope: !13047, file: !13044, line: 33, type: !102)
!13051 = !DILocalVariable(name: "unused3", arg: 3, scope: !13047, file: !13044, line: 33, type: !102)
!13052 = !DILocation(line: 0, scope: !13047)
!13053 = !DILocation(line: 41, column: 2, scope: !13047)
!13054 = !DILocation(line: 55, column: 2, scope: !13055, inlinedAt: !13059)
!13055 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !13056)
!13056 = !{!13057, !13058}
!13057 = !DILocalVariable(name: "key", scope: !13055, file: !5914, line: 44, type: !32)
!13058 = !DILocalVariable(name: "tmp", scope: !13055, file: !5914, line: 53, type: !32)
!13059 = distinct !DILocation(line: 62, column: 10, scope: !13060)
!13060 = distinct !DILexicalBlock(scope: !13047, file: !13044, line: 41, column: 15)
!13061 = !{i64 2239152}
!13062 = !DILocation(line: 0, scope: !13055, inlinedAt: !13059)
!13063 = !DILocation(line: 86, column: 3, scope: !13060)
!13064 = distinct !{!13064, !13053, !13065}
!13065 = !DILocation(line: 105, column: 2, scope: !13047)
!13066 = distinct !DISubprogram(name: "k_cpu_idle", scope: !224, file: !224, line: 5627, type: !3130, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3007, retainedNodes: !250)
!13067 = !DILocation(line: 5629, column: 2, scope: !13066)
!13068 = !DILocation(line: 5630, column: 1, scope: !13066)
!13069 = !DISubprogram(name: "arch_cpu_idle", scope: !3671, file: !3671, line: 167, type: !3130, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13070 = distinct !DISubprogram(name: "k_msgq_init", scope: !13071, file: !13071, line: 35, type: !13072, scopeLine: 37, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13087)
!13071 = !DIFile(filename: "zephyr/kernel/msg_q.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13072 = !DISubroutineType(types: !13073)
!13073 = !{null, !13074, !256, !252, !162}
!13074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13075, size: 32)
!13075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !224, line: 4204, size: 320, elements: !13076)
!13076 = !{!13077, !13078, !13079, !13080, !13081, !13082, !13083, !13084, !13085, !13086}
!13077 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13075, file: !224, line: 4206, baseType: !3045, size: 64)
!13078 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13075, file: !224, line: 4208, baseType: !3107, offset: 64)
!13079 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13075, file: !224, line: 4210, baseType: !252, size: 32, offset: 64)
!13080 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13075, file: !224, line: 4212, baseType: !162, size: 32, offset: 96)
!13081 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !13075, file: !224, line: 4214, baseType: !256, size: 32, offset: 128)
!13082 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !13075, file: !224, line: 4216, baseType: !256, size: 32, offset: 160)
!13083 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !13075, file: !224, line: 4218, baseType: !256, size: 32, offset: 192)
!13084 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !13075, file: !224, line: 4220, baseType: !256, size: 32, offset: 224)
!13085 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13075, file: !224, line: 4222, baseType: !162, size: 32, offset: 256)
!13086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13075, file: !224, line: 4227, baseType: !133, size: 8, offset: 288)
!13087 = !{!13088, !13089, !13090, !13091}
!13088 = !DILocalVariable(name: "msgq", arg: 1, scope: !13070, file: !13071, line: 35, type: !13074)
!13089 = !DILocalVariable(name: "buffer", arg: 2, scope: !13070, file: !13071, line: 35, type: !256)
!13090 = !DILocalVariable(name: "msg_size", arg: 3, scope: !13070, file: !13071, line: 35, type: !252)
!13091 = !DILocalVariable(name: "max_msgs", arg: 4, scope: !13070, file: !13071, line: 36, type: !162)
!13092 = !DILocation(line: 0, scope: !13070)
!13093 = !DILocation(line: 38, column: 8, scope: !13070)
!13094 = !DILocation(line: 38, column: 17, scope: !13070)
!13095 = !DILocation(line: 39, column: 8, scope: !13070)
!13096 = !DILocation(line: 39, column: 17, scope: !13070)
!13097 = !DILocation(line: 40, column: 8, scope: !13070)
!13098 = !DILocation(line: 40, column: 21, scope: !13070)
!13099 = !DILocation(line: 41, column: 40, scope: !13070)
!13100 = !DILocation(line: 41, column: 28, scope: !13070)
!13101 = !DILocation(line: 41, column: 8, scope: !13070)
!13102 = !DILocation(line: 41, column: 19, scope: !13070)
!13103 = !DILocation(line: 42, column: 8, scope: !13070)
!13104 = !DILocation(line: 42, column: 17, scope: !13070)
!13105 = !DILocation(line: 43, column: 8, scope: !13070)
!13106 = !DILocation(line: 43, column: 18, scope: !13070)
!13107 = !DILocation(line: 44, column: 8, scope: !13070)
!13108 = !DILocation(line: 44, column: 18, scope: !13070)
!13109 = !DILocation(line: 45, column: 8, scope: !13070)
!13110 = !DILocation(line: 45, column: 14, scope: !13070)
!13111 = !DILocation(line: 46, column: 22, scope: !13070)
!13112 = !DILocation(line: 46, column: 2, scope: !13070)
!13113 = !DILocation(line: 55, column: 1, scope: !13070)
!13114 = distinct !DISubprogram(name: "z_waitq_init", scope: !12726, file: !12726, line: 47, type: !13115, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13117)
!13115 = !DISubroutineType(types: !13116)
!13116 = !{null, !3044}
!13117 = !{!13118}
!13118 = !DILocalVariable(name: "w", arg: 1, scope: !13114, file: !12726, line: 47, type: !3044)
!13119 = !DILocation(line: 0, scope: !13114)
!13120 = !DILocation(line: 49, column: 21, scope: !13114)
!13121 = !DILocation(line: 49, column: 2, scope: !13114)
!13122 = !DILocation(line: 50, column: 1, scope: !13114)
!13123 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !13124, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13127)
!13124 = !DISubroutineType(types: !13125)
!13125 = !{null, !13126}
!13126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3049, size: 32)
!13127 = !{!13128}
!13128 = !DILocalVariable(name: "list", arg: 1, scope: !13123, file: !233, line: 197, type: !13126)
!13129 = !DILocation(line: 0, scope: !13123)
!13130 = !DILocation(line: 199, column: 8, scope: !13123)
!13131 = !DILocation(line: 199, column: 13, scope: !13123)
!13132 = !DILocation(line: 200, column: 8, scope: !13123)
!13133 = !DILocation(line: 200, column: 13, scope: !13123)
!13134 = !DILocation(line: 201, column: 1, scope: !13123)
!13135 = distinct !DISubprogram(name: "z_impl_k_msgq_alloc_init", scope: !13071, file: !13071, line: 57, type: !13136, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13138)
!13136 = !DISubroutineType(types: !13137)
!13137 = !{!107, !13074, !252, !162}
!13138 = !{!13139, !13140, !13141, !13142, !13143, !13144}
!13139 = !DILocalVariable(name: "msgq", arg: 1, scope: !13135, file: !13071, line: 57, type: !13074)
!13140 = !DILocalVariable(name: "msg_size", arg: 2, scope: !13135, file: !13071, line: 57, type: !252)
!13141 = !DILocalVariable(name: "max_msgs", arg: 3, scope: !13135, file: !13071, line: 58, type: !162)
!13142 = !DILocalVariable(name: "buffer", scope: !13135, file: !13071, line: 60, type: !102)
!13143 = !DILocalVariable(name: "ret", scope: !13135, file: !13071, line: 61, type: !107)
!13144 = !DILocalVariable(name: "total_size", scope: !13135, file: !13071, line: 62, type: !252)
!13145 = !DILocation(line: 0, scope: !13135)
!13146 = !DILocation(line: 62, column: 2, scope: !13135)
!13147 = !DILocation(line: 66, column: 6, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13135, file: !13071, line: 66, column: 6)
!13149 = !DILocation(line: 66, column: 6, scope: !13135)
!13150 = !DILocation(line: 69, column: 28, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13148, file: !13071, line: 68, column: 9)
!13152 = !DILocation(line: 69, column: 12, scope: !13151)
!13153 = !DILocation(line: 70, column: 14, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13151, file: !13071, line: 70, column: 7)
!13155 = !DILocation(line: 70, column: 7, scope: !13151)
!13156 = !DILocation(line: 71, column: 4, scope: !13157)
!13157 = distinct !DILexicalBlock(scope: !13154, file: !13071, line: 70, column: 23)
!13158 = !DILocation(line: 72, column: 10, scope: !13157)
!13159 = !DILocation(line: 72, column: 16, scope: !13157)
!13160 = !DILocation(line: 74, column: 3, scope: !13157)
!13161 = !DILocation(line: 0, scope: !13148)
!13162 = !DILocation(line: 82, column: 1, scope: !13135)
!13163 = !DILocation(line: 81, column: 2, scope: !13135)
!13164 = distinct !DISubprogram(name: "size_mul_overflow", scope: !13165, file: !13165, line: 105, type: !13166, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13168)
!13165 = !DIFile(filename: "zephyr/include/zephyr/sys/math_extras_impl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13166 = !DISubroutineType(types: !13167)
!13167 = !{!136, !252, !252, !2485}
!13168 = !{!13169, !13170, !13171}
!13169 = !DILocalVariable(name: "a", arg: 1, scope: !13164, file: !13165, line: 105, type: !252)
!13170 = !DILocalVariable(name: "b", arg: 2, scope: !13164, file: !13165, line: 105, type: !252)
!13171 = !DILocalVariable(name: "result", arg: 3, scope: !13164, file: !13165, line: 105, type: !2485)
!13172 = !DILocation(line: 0, scope: !13164)
!13173 = !DILocation(line: 107, column: 9, scope: !13164)
!13174 = !DILocation(line: 107, column: 2, scope: !13164)
!13175 = distinct !DISubprogram(name: "z_thread_malloc", scope: !13176, file: !13176, line: 102, type: !13177, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13178)
!13176 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13177 = !DISubroutineType(types: !2988)
!13178 = !{!13179}
!13179 = !DILocalVariable(name: "size", arg: 1, scope: !13175, file: !13176, line: 102, type: !252)
!13180 = !DILocation(line: 0, scope: !13175)
!13181 = !DILocation(line: 104, column: 9, scope: !13175)
!13182 = !DILocation(line: 104, column: 2, scope: !13175)
!13183 = !DISubprogram(name: "z_thread_aligned_alloc", scope: !13176, file: !13176, line: 87, type: !13184, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13184 = !DISubroutineType(types: !13185)
!13185 = !{!102, !252, !252}
!13186 = distinct !DISubprogram(name: "k_msgq_cleanup", scope: !13071, file: !13071, line: 95, type: !13187, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13189)
!13187 = !DISubroutineType(types: !13188)
!13188 = !{!107, !13074}
!13189 = !{!13190}
!13190 = !DILocalVariable(name: "msgq", arg: 1, scope: !13186, file: !13071, line: 95, type: !13074)
!13191 = !DILocation(line: 0, scope: !13186)
!13192 = !DILocation(line: 99, column: 2, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13186, file: !13071, line: 99, column: 2)
!13194 = !DILocation(line: 99, column: 2, scope: !13186)
!13195 = !DILocation(line: 105, column: 13, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13186, file: !13071, line: 105, column: 6)
!13197 = !DILocation(line: 105, column: 19, scope: !13196)
!13198 = !DILocation(line: 105, column: 40, scope: !13196)
!13199 = !DILocation(line: 105, column: 6, scope: !13186)
!13200 = !DILocation(line: 106, column: 16, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13196, file: !13071, line: 105, column: 47)
!13202 = !DILocation(line: 106, column: 3, scope: !13201)
!13203 = !DILocation(line: 107, column: 15, scope: !13201)
!13204 = !DILocation(line: 108, column: 2, scope: !13201)
!13205 = !DILocation(line: 113, column: 1, scope: !13186)
!13206 = distinct !DISubprogram(name: "z_waitq_head", scope: !12726, file: !12726, line: 52, type: !13207, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13209)
!13207 = !DISubroutineType(types: !13208)
!13208 = !{!3027, !3044}
!13209 = !{!13210}
!13210 = !DILocalVariable(name: "w", arg: 1, scope: !13206, file: !12726, line: 52, type: !3044)
!13211 = !DILocation(line: 0, scope: !13206)
!13212 = !DILocation(line: 54, column: 52, scope: !13206)
!13213 = !DILocation(line: 54, column: 28, scope: !13206)
!13214 = !DILocation(line: 54, column: 9, scope: !13206)
!13215 = !DILocation(line: 54, column: 2, scope: !13206)
!13216 = !DISubprogram(name: "k_free", scope: !224, file: !224, line: 5272, type: !6025, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!13217 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13218, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13220)
!13218 = !DISubroutineType(types: !13219)
!13219 = !{!3012, !13126}
!13220 = !{!13221}
!13221 = !DILocalVariable(name: "list", arg: 1, scope: !13217, file: !233, line: 294, type: !13126)
!13222 = !DILocation(line: 0, scope: !13217)
!13223 = !DILocation(line: 296, column: 9, scope: !13217)
!13224 = !DILocation(line: 296, column: 49, scope: !13217)
!13225 = !DILocation(line: 296, column: 2, scope: !13217)
!13226 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13227, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13229)
!13227 = !DISubroutineType(types: !13228)
!13228 = !{!136, !13126}
!13229 = !{!13230}
!13230 = !DILocalVariable(name: "list", arg: 1, scope: !13226, file: !233, line: 266, type: !13126)
!13231 = !DILocation(line: 0, scope: !13226)
!13232 = !DILocation(line: 268, column: 15, scope: !13226)
!13233 = !DILocation(line: 268, column: 20, scope: !13226)
!13234 = !DILocation(line: 268, column: 2, scope: !13226)
!13235 = distinct !DISubprogram(name: "z_impl_k_msgq_put", scope: !13071, file: !13071, line: 116, type: !13236, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13242)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{!107, !13074, !13, !13238}
!13238 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13239)
!13239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13240)
!13240 = !{!13241}
!13241 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13239, file: !104, line: 66, baseType: !103, size: 64)
!13242 = !{!13243, !13244, !13245, !13246, !13247, !13252}
!13243 = !DILocalVariable(name: "msgq", arg: 1, scope: !13235, file: !13071, line: 116, type: !13074)
!13244 = !DILocalVariable(name: "data", arg: 2, scope: !13235, file: !13071, line: 116, type: !13)
!13245 = !DILocalVariable(name: "timeout", arg: 3, scope: !13235, file: !13071, line: 116, type: !13238)
!13246 = !DILocalVariable(name: "pending_thread", scope: !13235, file: !13071, line: 120, type: !3027)
!13247 = !DILocalVariable(name: "key", scope: !13235, file: !13071, line: 121, type: !13248)
!13248 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13249)
!13249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13250)
!13250 = !{!13251}
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13249, file: !249, line: 33, baseType: !107, size: 32)
!13252 = !DILocalVariable(name: "result", scope: !13235, file: !13071, line: 122, type: !107)
!13253 = !DILocation(line: 0, scope: !13235)
!13254 = !DILocation(line: 124, column: 27, scope: !13235)
!13255 = !DILocalVariable(name: "l", arg: 1, scope: !13256, file: !249, line: 136, type: !13259)
!13256 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13257, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13260)
!13257 = !DISubroutineType(types: !13258)
!13258 = !{!13248, !13259}
!13259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 32)
!13260 = !{!13255, !13261}
!13261 = !DILocalVariable(name: "k", scope: !13256, file: !249, line: 139, type: !13248)
!13262 = !DILocation(line: 0, scope: !13256, inlinedAt: !13263)
!13263 = distinct !DILocation(line: 124, column: 8, scope: !13235)
!13264 = !DILocation(line: 55, column: 2, scope: !13265, inlinedAt: !13269)
!13265 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13266)
!13266 = !{!13267, !13268}
!13267 = !DILocalVariable(name: "key", scope: !13265, file: !5914, line: 44, type: !32)
!13268 = !DILocalVariable(name: "tmp", scope: !13265, file: !5914, line: 53, type: !32)
!13269 = distinct !DILocation(line: 145, column: 10, scope: !13256, inlinedAt: !13263)
!13270 = !{i64 2245289}
!13271 = !DILocation(line: 0, scope: !13265, inlinedAt: !13269)
!13272 = !DILocation(line: 128, column: 12, scope: !13273)
!13273 = distinct !DILexicalBlock(scope: !13235, file: !13071, line: 128, column: 6)
!13274 = !DILocation(line: 128, column: 30, scope: !13273)
!13275 = !DILocation(line: 128, column: 22, scope: !13273)
!13276 = !DILocation(line: 128, column: 6, scope: !13235)
!13277 = !DILocation(line: 130, column: 49, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13273, file: !13071, line: 128, column: 40)
!13279 = !DILocation(line: 130, column: 20, scope: !13278)
!13280 = !DILocation(line: 131, column: 22, scope: !13281)
!13281 = distinct !DILexicalBlock(scope: !13278, file: !13071, line: 131, column: 7)
!13282 = !DILocation(line: 131, column: 7, scope: !13278)
!13283 = !DILocation(line: 135, column: 38, scope: !13284)
!13284 = distinct !DILexicalBlock(scope: !13281, file: !13071, line: 131, column: 31)
!13285 = !DILocation(line: 136, column: 17, scope: !13284)
!13286 = !DILocation(line: 135, column: 10, scope: !13284)
!13287 = !DILocalVariable(name: "thread", arg: 1, scope: !13288, file: !12422, line: 65, type: !3027)
!13288 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12422, file: !12422, line: 65, type: !13289, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13291)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{null, !3027, !32}
!13291 = !{!13287, !13292}
!13292 = !DILocalVariable(name: "value", arg: 2, scope: !13288, file: !12422, line: 65, type: !32)
!13293 = !DILocation(line: 0, scope: !13288, inlinedAt: !13294)
!13294 = distinct !DILocation(line: 138, column: 4, scope: !13284)
!13295 = !DILocation(line: 67, column: 15, scope: !13288, inlinedAt: !13294)
!13296 = !DILocation(line: 67, column: 33, scope: !13288, inlinedAt: !13294)
!13297 = !DILocation(line: 139, column: 4, scope: !13284)
!13298 = !DILocation(line: 140, column: 4, scope: !13284)
!13299 = !DILocation(line: 141, column: 4, scope: !13284)
!13300 = !DILocation(line: 144, column: 23, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13281, file: !13071, line: 142, column: 10)
!13302 = !DILocation(line: 144, column: 46, scope: !13301)
!13303 = !DILocation(line: 144, column: 10, scope: !13301)
!13304 = !DILocation(line: 145, column: 29, scope: !13301)
!13305 = !DILocation(line: 145, column: 20, scope: !13301)
!13306 = !DILocation(line: 146, column: 33, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13301, file: !13071, line: 146, column: 8)
!13308 = !DILocation(line: 146, column: 24, scope: !13307)
!13309 = !DILocation(line: 146, column: 8, scope: !13301)
!13310 = !DILocation(line: 147, column: 29, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13307, file: !13071, line: 146, column: 45)
!13312 = !DILocation(line: 147, column: 21, scope: !13311)
!13313 = !DILocation(line: 148, column: 4, scope: !13311)
!13314 = !DILocation(line: 149, column: 19, scope: !13301)
!13315 = !DILocation(line: 155, column: 2, scope: !13278)
!13316 = !DILocation(line: 155, column: 13, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13273, file: !13071, line: 155, column: 13)
!13318 = !DILocation(line: 155, column: 13, scope: !13273)
!13319 = !DILocation(line: 162, column: 3, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13317, file: !13071, line: 158, column: 9)
!13321 = !DILocation(line: 162, column: 18, scope: !13320)
!13322 = !DILocation(line: 162, column: 28, scope: !13320)
!13323 = !DILocation(line: 164, column: 49, scope: !13320)
!13324 = !DILocation(line: 164, column: 12, scope: !13320)
!13325 = !DILocation(line: 166, column: 3, scope: !13320)
!13326 = !DILocation(line: 0, scope: !13273)
!13327 = !DILocalVariable(name: "key", arg: 2, scope: !13328, file: !249, line: 190, type: !13248)
!13328 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13329, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13331)
!13329 = !DISubroutineType(types: !13330)
!13330 = !{null, !13259, !13248}
!13331 = !{!13332, !13327}
!13332 = !DILocalVariable(name: "l", arg: 1, scope: !13328, file: !249, line: 189, type: !13259)
!13333 = !DILocation(line: 0, scope: !13328, inlinedAt: !13334)
!13334 = distinct !DILocation(line: 171, column: 2, scope: !13235)
!13335 = !DILocalVariable(name: "key", arg: 1, scope: !13336, file: !5914, line: 84, type: !32)
!13336 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13337)
!13337 = !{!13335}
!13338 = !DILocation(line: 0, scope: !13336, inlinedAt: !13339)
!13339 = distinct !DILocation(line: 215, column: 2, scope: !13328, inlinedAt: !13334)
!13340 = !DILocation(line: 95, column: 2, scope: !13336, inlinedAt: !13339)
!13341 = !{i64 2246106}
!13342 = !DILocation(line: 173, column: 2, scope: !13235)
!13343 = !DILocation(line: 174, column: 1, scope: !13235)
!13344 = distinct !DISubprogram(name: "z_impl_k_msgq_get_attrs", scope: !13071, file: !13071, line: 188, type: !13345, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13353)
!13345 = !DISubroutineType(types: !13346)
!13346 = !{null, !13074, !13347}
!13347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13348, size: 32)
!13348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq_attrs", file: !224, line: 4259, size: 96, elements: !13349)
!13349 = !{!13350, !13351, !13352}
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !13348, file: !224, line: 4261, baseType: !252, size: 32)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !13348, file: !224, line: 4263, baseType: !162, size: 32, offset: 32)
!13352 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !13348, file: !224, line: 4265, baseType: !162, size: 32, offset: 64)
!13353 = !{!13354, !13355}
!13354 = !DILocalVariable(name: "msgq", arg: 1, scope: !13344, file: !13071, line: 188, type: !13074)
!13355 = !DILocalVariable(name: "attrs", arg: 2, scope: !13344, file: !13071, line: 188, type: !13347)
!13356 = !DILocation(line: 0, scope: !13344)
!13357 = !DILocation(line: 190, column: 26, scope: !13344)
!13358 = !DILocation(line: 190, column: 9, scope: !13344)
!13359 = !DILocation(line: 190, column: 18, scope: !13344)
!13360 = !DILocation(line: 191, column: 26, scope: !13344)
!13361 = !DILocation(line: 191, column: 9, scope: !13344)
!13362 = !DILocation(line: 191, column: 18, scope: !13344)
!13363 = !DILocation(line: 192, column: 27, scope: !13344)
!13364 = !DILocation(line: 192, column: 9, scope: !13344)
!13365 = !DILocation(line: 192, column: 19, scope: !13344)
!13366 = !DILocation(line: 193, column: 1, scope: !13344)
!13367 = distinct !DISubprogram(name: "z_impl_k_msgq_get", scope: !13071, file: !13071, line: 206, type: !13368, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13370)
!13368 = !DISubroutineType(types: !13369)
!13369 = !{!107, !13074, !102, !13238}
!13370 = !{!13371, !13372, !13373, !13374, !13375, !13376}
!13371 = !DILocalVariable(name: "msgq", arg: 1, scope: !13367, file: !13071, line: 206, type: !13074)
!13372 = !DILocalVariable(name: "data", arg: 2, scope: !13367, file: !13071, line: 206, type: !102)
!13373 = !DILocalVariable(name: "timeout", arg: 3, scope: !13367, file: !13071, line: 206, type: !13238)
!13374 = !DILocalVariable(name: "key", scope: !13367, file: !13071, line: 210, type: !13248)
!13375 = !DILocalVariable(name: "pending_thread", scope: !13367, file: !13071, line: 211, type: !3027)
!13376 = !DILocalVariable(name: "result", scope: !13367, file: !13071, line: 212, type: !107)
!13377 = !DILocation(line: 0, scope: !13367)
!13378 = !DILocation(line: 214, column: 27, scope: !13367)
!13379 = !DILocation(line: 0, scope: !13256, inlinedAt: !13380)
!13380 = distinct !DILocation(line: 214, column: 8, scope: !13367)
!13381 = !DILocation(line: 55, column: 2, scope: !13265, inlinedAt: !13382)
!13382 = distinct !DILocation(line: 145, column: 10, scope: !13256, inlinedAt: !13380)
!13383 = !DILocation(line: 0, scope: !13265, inlinedAt: !13382)
!13384 = !DILocation(line: 218, column: 12, scope: !13385)
!13385 = distinct !DILexicalBlock(scope: !13367, file: !13071, line: 218, column: 6)
!13386 = !DILocation(line: 218, column: 22, scope: !13385)
!13387 = !DILocation(line: 218, column: 6, scope: !13367)
!13388 = !DILocation(line: 220, column: 28, scope: !13389)
!13389 = distinct !DILexicalBlock(scope: !13385, file: !13071, line: 218, column: 28)
!13390 = !DILocation(line: 220, column: 44, scope: !13389)
!13391 = !DILocation(line: 220, column: 9, scope: !13389)
!13392 = !DILocation(line: 221, column: 27, scope: !13389)
!13393 = !DILocation(line: 221, column: 18, scope: !13389)
!13394 = !DILocation(line: 222, column: 31, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13389, file: !13071, line: 222, column: 7)
!13396 = !DILocation(line: 222, column: 22, scope: !13395)
!13397 = !DILocation(line: 222, column: 7, scope: !13389)
!13398 = !DILocation(line: 223, column: 27, scope: !13399)
!13399 = distinct !DILexicalBlock(scope: !13395, file: !13071, line: 222, column: 43)
!13400 = !DILocation(line: 223, column: 19, scope: !13399)
!13401 = !DILocation(line: 224, column: 3, scope: !13399)
!13402 = !DILocation(line: 225, column: 18, scope: !13389)
!13403 = !DILocation(line: 228, column: 49, scope: !13389)
!13404 = !DILocation(line: 228, column: 20, scope: !13389)
!13405 = !DILocation(line: 229, column: 22, scope: !13406)
!13406 = distinct !DILexicalBlock(scope: !13389, file: !13071, line: 229, column: 7)
!13407 = !DILocation(line: 229, column: 7, scope: !13389)
!13408 = !DILocation(line: 233, column: 23, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13406, file: !13071, line: 229, column: 31)
!13410 = !DILocation(line: 233, column: 55, scope: !13409)
!13411 = !DILocation(line: 234, column: 17, scope: !13409)
!13412 = !DILocation(line: 233, column: 10, scope: !13409)
!13413 = !DILocation(line: 235, column: 29, scope: !13409)
!13414 = !DILocation(line: 235, column: 20, scope: !13409)
!13415 = !DILocation(line: 236, column: 33, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13409, file: !13071, line: 236, column: 8)
!13417 = !DILocation(line: 236, column: 24, scope: !13416)
!13418 = !DILocation(line: 236, column: 8, scope: !13409)
!13419 = !DILocation(line: 237, column: 29, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13416, file: !13071, line: 236, column: 45)
!13421 = !DILocation(line: 237, column: 21, scope: !13420)
!13422 = !DILocation(line: 238, column: 4, scope: !13420)
!13423 = !DILocation(line: 239, column: 19, scope: !13409)
!13424 = !DILocation(line: 0, scope: !13288, inlinedAt: !13425)
!13425 = distinct !DILocation(line: 242, column: 4, scope: !13409)
!13426 = !DILocation(line: 67, column: 15, scope: !13288, inlinedAt: !13425)
!13427 = !DILocation(line: 67, column: 33, scope: !13288, inlinedAt: !13425)
!13428 = !DILocation(line: 243, column: 4, scope: !13409)
!13429 = !DILocation(line: 244, column: 4, scope: !13409)
!13430 = !DILocation(line: 248, column: 4, scope: !13409)
!13431 = !DILocation(line: 251, column: 13, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13385, file: !13071, line: 251, column: 13)
!13433 = !DILocation(line: 251, column: 13, scope: !13385)
!13434 = !DILocation(line: 258, column: 3, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13432, file: !13071, line: 254, column: 9)
!13436 = !DILocation(line: 258, column: 18, scope: !13435)
!13437 = !DILocation(line: 258, column: 28, scope: !13435)
!13438 = !DILocation(line: 260, column: 49, scope: !13435)
!13439 = !DILocation(line: 260, column: 12, scope: !13435)
!13440 = !DILocation(line: 262, column: 3, scope: !13435)
!13441 = !DILocation(line: 0, scope: !13385)
!13442 = !DILocation(line: 0, scope: !13328, inlinedAt: !13443)
!13443 = distinct !DILocation(line: 267, column: 2, scope: !13367)
!13444 = !DILocation(line: 0, scope: !13336, inlinedAt: !13445)
!13445 = distinct !DILocation(line: 215, column: 2, scope: !13328, inlinedAt: !13443)
!13446 = !DILocation(line: 95, column: 2, scope: !13336, inlinedAt: !13445)
!13447 = !DILocation(line: 269, column: 2, scope: !13367)
!13448 = !DILocation(line: 270, column: 1, scope: !13367)
!13449 = distinct !DISubprogram(name: "z_impl_k_msgq_peek", scope: !13071, file: !13071, line: 284, type: !13450, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13452)
!13450 = !DISubroutineType(types: !13451)
!13451 = !{!107, !13074, !102}
!13452 = !{!13453, !13454, !13455, !13456}
!13453 = !DILocalVariable(name: "msgq", arg: 1, scope: !13449, file: !13071, line: 284, type: !13074)
!13454 = !DILocalVariable(name: "data", arg: 2, scope: !13449, file: !13071, line: 284, type: !102)
!13455 = !DILocalVariable(name: "key", scope: !13449, file: !13071, line: 286, type: !13248)
!13456 = !DILocalVariable(name: "result", scope: !13449, file: !13071, line: 287, type: !107)
!13457 = !DILocation(line: 0, scope: !13449)
!13458 = !DILocation(line: 0, scope: !13256, inlinedAt: !13459)
!13459 = distinct !DILocation(line: 289, column: 8, scope: !13449)
!13460 = !DILocation(line: 55, column: 2, scope: !13265, inlinedAt: !13461)
!13461 = distinct !DILocation(line: 145, column: 10, scope: !13256, inlinedAt: !13459)
!13462 = !DILocation(line: 0, scope: !13265, inlinedAt: !13461)
!13463 = !DILocation(line: 291, column: 12, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13449, file: !13071, line: 291, column: 6)
!13465 = !DILocation(line: 291, column: 22, scope: !13464)
!13466 = !DILocation(line: 291, column: 6, scope: !13449)
!13467 = !DILocation(line: 293, column: 28, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13464, file: !13071, line: 291, column: 28)
!13469 = !DILocation(line: 293, column: 44, scope: !13468)
!13470 = !DILocation(line: 293, column: 9, scope: !13468)
!13471 = !DILocation(line: 295, column: 2, scope: !13468)
!13472 = !DILocation(line: 0, scope: !13464)
!13473 = !DILocation(line: 0, scope: !13328, inlinedAt: !13474)
!13474 = distinct !DILocation(line: 302, column: 2, scope: !13449)
!13475 = !DILocation(line: 0, scope: !13336, inlinedAt: !13476)
!13476 = distinct !DILocation(line: 215, column: 2, scope: !13328, inlinedAt: !13474)
!13477 = !DILocation(line: 95, column: 2, scope: !13336, inlinedAt: !13476)
!13478 = !DILocation(line: 304, column: 2, scope: !13449)
!13479 = distinct !DISubprogram(name: "z_impl_k_msgq_purge", scope: !13071, file: !13071, line: 318, type: !13480, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3009, retainedNodes: !13482)
!13480 = !DISubroutineType(types: !13481)
!13481 = !{null, !13074}
!13482 = !{!13483, !13484, !13485}
!13483 = !DILocalVariable(name: "msgq", arg: 1, scope: !13479, file: !13071, line: 318, type: !13074)
!13484 = !DILocalVariable(name: "key", scope: !13479, file: !13071, line: 320, type: !13248)
!13485 = !DILocalVariable(name: "pending_thread", scope: !13479, file: !13071, line: 321, type: !3027)
!13486 = !DILocation(line: 0, scope: !13479)
!13487 = !DILocation(line: 0, scope: !13256, inlinedAt: !13488)
!13488 = distinct !DILocation(line: 323, column: 8, scope: !13479)
!13489 = !DILocation(line: 55, column: 2, scope: !13265, inlinedAt: !13490)
!13490 = distinct !DILocation(line: 145, column: 10, scope: !13256, inlinedAt: !13488)
!13491 = !DILocation(line: 0, scope: !13265, inlinedAt: !13490)
!13492 = !DILocation(line: 328, column: 27, scope: !13479)
!13493 = !DILocation(line: 328, column: 65, scope: !13479)
!13494 = !DILocation(line: 328, column: 2, scope: !13479)
!13495 = !DILocation(line: 0, scope: !13288, inlinedAt: !13496)
!13496 = distinct !DILocation(line: 329, column: 3, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13479, file: !13071, line: 328, column: 74)
!13498 = !DILocation(line: 67, column: 15, scope: !13288, inlinedAt: !13496)
!13499 = !DILocation(line: 67, column: 33, scope: !13288, inlinedAt: !13496)
!13500 = !DILocation(line: 330, column: 3, scope: !13497)
!13501 = distinct !{!13501, !13494, !13502}
!13502 = !DILocation(line: 331, column: 2, scope: !13479)
!13503 = !DILocation(line: 323, column: 27, scope: !13479)
!13504 = !DILocation(line: 333, column: 8, scope: !13479)
!13505 = !DILocation(line: 333, column: 18, scope: !13479)
!13506 = !DILocation(line: 334, column: 25, scope: !13479)
!13507 = !DILocation(line: 334, column: 8, scope: !13479)
!13508 = !DILocation(line: 334, column: 17, scope: !13479)
!13509 = !DILocation(line: 336, column: 2, scope: !13479)
!13510 = !DILocation(line: 337, column: 1, scope: !13479)
!13511 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2336, file: !2336, line: 93, type: !13512, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13514)
!13512 = !DISubroutineType(types: !13513)
!13513 = !{!727, !2231, !2231}
!13514 = !{!13515, !13516, !13517, !13518}
!13515 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13511, file: !2336, line: 93, type: !2231)
!13516 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13511, file: !2336, line: 94, type: !2231)
!13517 = !DILocalVariable(name: "b1", scope: !13511, file: !2336, line: 97, type: !727)
!13518 = !DILocalVariable(name: "b2", scope: !13511, file: !2336, line: 98, type: !727)
!13519 = !DILocation(line: 0, scope: !13511)
!13520 = !DILocation(line: 97, column: 30, scope: !13511)
!13521 = !DILocation(line: 98, column: 30, scope: !13511)
!13522 = !DILocation(line: 100, column: 9, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13511, file: !2336, line: 100, column: 6)
!13524 = !DILocation(line: 100, column: 6, scope: !13511)
!13525 = !DILocation(line: 125, column: 1, scope: !13511)
!13526 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2336, file: !2336, line: 428, type: !13527, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13529)
!13527 = !DISubroutineType(types: !13528)
!13528 = !{null, !2231}
!13529 = !{!13530}
!13530 = !DILocalVariable(name: "curr", arg: 1, scope: !13526, file: !2336, line: 428, type: !2231)
!13531 = !DILocation(line: 0, scope: !13526)
!13532 = !DILocation(line: 434, column: 6, scope: !13533)
!13533 = distinct !DILexicalBlock(scope: !13526, file: !2336, line: 434, column: 6)
!13534 = !DILocation(line: 434, column: 23, scope: !13533)
!13535 = !DILocation(line: 434, column: 6, scope: !13526)
!13536 = !DILocation(line: 435, column: 50, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13533, file: !2336, line: 434, column: 29)
!13538 = !DILocation(line: 435, column: 48, scope: !13537)
!13539 = !DILocation(line: 435, column: 29, scope: !13537)
!13540 = !DILocation(line: 436, column: 24, scope: !13537)
!13541 = !DILocation(line: 436, column: 3, scope: !13537)
!13542 = !DILocation(line: 437, column: 2, scope: !13537)
!13543 = !DILocation(line: 438, column: 1, scope: !13526)
!13544 = distinct !DISubprogram(name: "slice_time", scope: !2336, file: !2336, line: 407, type: !13545, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13547)
!13545 = !DISubroutineType(types: !13546)
!13546 = !{!107, !2231}
!13547 = !{!13548, !13549}
!13548 = !DILocalVariable(name: "curr", arg: 1, scope: !13544, file: !2336, line: 407, type: !2231)
!13549 = !DILocalVariable(name: "ret", scope: !13544, file: !2336, line: 409, type: !107)
!13550 = !DILocation(line: 0, scope: !13544)
!13551 = !DILocation(line: 409, column: 12, scope: !13544)
!13552 = !DILocation(line: 416, column: 2, scope: !13544)
!13553 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2336, file: !2336, line: 440, type: !13554, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13556)
!13554 = !DISubroutineType(types: !13555)
!13555 = !{null, !727, !107}
!13556 = !{!13557, !13558, !13559, !13565}
!13557 = !DILocalVariable(name: "slice", arg: 1, scope: !13553, file: !2336, line: 440, type: !727)
!13558 = !DILocalVariable(name: "prio", arg: 2, scope: !13553, file: !2336, line: 440, type: !107)
!13559 = !DILocalVariable(name: "__i", scope: !13560, file: !2336, line: 442, type: !13561)
!13560 = distinct !DILexicalBlock(scope: !13553, file: !2336, line: 442, column: 2)
!13561 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !13562)
!13562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !13563)
!13563 = !{!13564}
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13562, file: !249, line: 33, baseType: !107, size: 32)
!13565 = !DILocalVariable(name: "__key", scope: !13560, file: !2336, line: 442, type: !13561)
!13566 = !DILocation(line: 0, scope: !13553)
!13567 = !DILocation(line: 0, scope: !13560)
!13568 = !DILocalVariable(name: "l", arg: 1, scope: !13569, file: !249, line: 136, type: !13572)
!13569 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !13570, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13573)
!13570 = !DISubroutineType(types: !13571)
!13571 = !{!13561, !13572}
!13572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 32)
!13573 = !{!13568, !13574}
!13574 = !DILocalVariable(name: "k", scope: !13569, file: !249, line: 139, type: !13561)
!13575 = !DILocation(line: 0, scope: !13569, inlinedAt: !13576)
!13576 = distinct !DILocation(line: 442, column: 2, scope: !13560)
!13577 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !13582)
!13578 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13579)
!13579 = !{!13580, !13581}
!13580 = !DILocalVariable(name: "key", scope: !13578, file: !5914, line: 44, type: !32)
!13581 = !DILocalVariable(name: "tmp", scope: !13578, file: !5914, line: 53, type: !32)
!13582 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !13576)
!13583 = !{i64 2283123}
!13584 = !DILocation(line: 0, scope: !13578, inlinedAt: !13582)
!13585 = !DILocation(line: 443, column: 29, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13587, file: !2336, line: 442, column: 26)
!13587 = distinct !DILexicalBlock(scope: !13560, file: !2336, line: 442, column: 2)
!13588 = !DILocation(line: 444, column: 17, scope: !13586)
!13589 = !DILocation(line: 445, column: 51, scope: !13590)
!13590 = distinct !DILexicalBlock(scope: !13586, file: !2336, line: 445, column: 7)
!13591 = !DILocation(line: 445, column: 7, scope: !13586)
!13592 = !DILocation(line: 0, scope: !13586)
!13593 = !DILocation(line: 451, column: 18, scope: !13586)
!13594 = !DILocation(line: 452, column: 3, scope: !13586)
!13595 = !DILocalVariable(name: "key", arg: 2, scope: !13596, file: !249, line: 190, type: !13561)
!13596 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !13597, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13599)
!13597 = !DISubroutineType(types: !13598)
!13598 = !{null, !13572, !13561}
!13599 = !{!13600, !13595}
!13600 = !DILocalVariable(name: "l", arg: 1, scope: !13596, file: !249, line: 189, type: !13572)
!13601 = !DILocation(line: 0, scope: !13596, inlinedAt: !13602)
!13602 = distinct !DILocation(line: 442, column: 2, scope: !13587)
!13603 = !DILocalVariable(name: "key", arg: 1, scope: !13604, file: !5914, line: 84, type: !32)
!13604 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13605)
!13605 = !{!13603}
!13606 = !DILocation(line: 0, scope: !13604, inlinedAt: !13607)
!13607 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !13602)
!13608 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !13607)
!13609 = !{i64 2283940}
!13610 = !DILocation(line: 454, column: 1, scope: !13553)
!13611 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !12961, file: !12961, line: 389, type: !7095, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13612)
!13612 = !{!13613}
!13613 = !DILocalVariable(name: "t", arg: 1, scope: !13611, file: !12961, line: 389, type: !162)
!13614 = !DILocation(line: 0, scope: !13611)
!13615 = !DILocalVariable(name: "t", arg: 1, scope: !13616, file: !12961, line: 102, type: !1491)
!13616 = distinct !DISubprogram(name: "z_tmcvt", scope: !12961, file: !12961, line: 102, type: !12969, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13617)
!13617 = !{!13615, !13618, !13619, !13620, !13621, !13622, !13623, !13624, !13625, !13626, !13627}
!13618 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13616, file: !12961, line: 102, type: !162)
!13619 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13616, file: !12961, line: 103, type: !162)
!13620 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13616, file: !12961, line: 103, type: !136)
!13621 = !DILocalVariable(name: "result32", arg: 5, scope: !13616, file: !12961, line: 104, type: !136)
!13622 = !DILocalVariable(name: "round_up", arg: 6, scope: !13616, file: !12961, line: 104, type: !136)
!13623 = !DILocalVariable(name: "round_off", arg: 7, scope: !13616, file: !12961, line: 105, type: !136)
!13624 = !DILocalVariable(name: "mul_ratio", scope: !13616, file: !12961, line: 107, type: !136)
!13625 = !DILocalVariable(name: "div_ratio", scope: !13616, file: !12961, line: 109, type: !136)
!13626 = !DILocalVariable(name: "off", scope: !13616, file: !12961, line: 116, type: !1491)
!13627 = !DILocalVariable(name: "rdivisor", scope: !13628, file: !12961, line: 119, type: !162)
!13628 = distinct !DILexicalBlock(scope: !13629, file: !12961, line: 118, column: 18)
!13629 = distinct !DILexicalBlock(scope: !13616, file: !12961, line: 118, column: 6)
!13630 = !DILocation(line: 0, scope: !13616, inlinedAt: !13631)
!13631 = distinct !DILocation(line: 392, column: 9, scope: !13611)
!13632 = !DILocation(line: 143, column: 25, scope: !13633, inlinedAt: !13631)
!13633 = distinct !DILexicalBlock(scope: !13634, file: !12961, line: 142, column: 17)
!13634 = distinct !DILexicalBlock(scope: !13635, file: !12961, line: 142, column: 7)
!13635 = distinct !DILexicalBlock(scope: !13636, file: !12961, line: 141, column: 24)
!13636 = distinct !DILexicalBlock(scope: !13637, file: !12961, line: 141, column: 13)
!13637 = distinct !DILexicalBlock(scope: !13616, file: !12961, line: 134, column: 6)
!13638 = !DILocation(line: 392, column: 2, scope: !13611)
!13639 = distinct !DISubprogram(name: "z_time_slice", scope: !2336, file: !2336, line: 502, type: !7732, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13640)
!13640 = !{!13641, !13642}
!13641 = !DILocalVariable(name: "ticks", arg: 1, scope: !13639, file: !2336, line: 502, type: !107)
!13642 = !DILocalVariable(name: "key", scope: !13639, file: !2336, line: 511, type: !13561)
!13643 = !DILocation(line: 0, scope: !13639)
!13644 = !DILocation(line: 0, scope: !13569, inlinedAt: !13645)
!13645 = distinct !DILocation(line: 511, column: 25, scope: !13639)
!13646 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !13647)
!13647 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !13645)
!13648 = !DILocation(line: 0, scope: !13578, inlinedAt: !13647)
!13649 = !DILocation(line: 514, column: 6, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13639, file: !2336, line: 514, column: 6)
!13651 = !DILocation(line: 514, column: 25, scope: !13650)
!13652 = !DILocation(line: 514, column: 22, scope: !13650)
!13653 = !DILocation(line: 514, column: 6, scope: !13639)
!13654 = !DILocation(line: 515, column: 3, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13650, file: !2336, line: 514, column: 35)
!13656 = !DILocation(line: 0, scope: !13596, inlinedAt: !13657)
!13657 = distinct !DILocation(line: 516, column: 3, scope: !13655)
!13658 = !DILocation(line: 0, scope: !13604, inlinedAt: !13659)
!13659 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !13657)
!13660 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !13659)
!13661 = !DILocation(line: 517, column: 3, scope: !13655)
!13662 = !DILocation(line: 519, column: 18, scope: !13639)
!13663 = !DILocation(line: 522, column: 6, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13639, file: !2336, line: 522, column: 6)
!13665 = !DILocation(line: 522, column: 27, scope: !13664)
!13666 = !DILocation(line: 522, column: 30, scope: !13664)
!13667 = !DILocation(line: 522, column: 6, scope: !13639)
!13668 = !DILocation(line: 523, column: 30, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13670, file: !2336, line: 523, column: 7)
!13670 = distinct !DILexicalBlock(scope: !13664, file: !2336, line: 522, column: 51)
!13671 = !DILocation(line: 523, column: 13, scope: !13669)
!13672 = !DILocation(line: 523, column: 7, scope: !13670)
!13673 = !DILocation(line: 530, column: 10, scope: !13674)
!13674 = distinct !DILexicalBlock(scope: !13669, file: !2336, line: 523, column: 43)
!13675 = !DILocation(line: 531, column: 3, scope: !13674)
!13676 = !DILocation(line: 532, column: 30, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13669, file: !2336, line: 531, column: 10)
!13678 = !DILocation(line: 535, column: 29, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13664, file: !2336, line: 534, column: 9)
!13680 = !DILocation(line: 0, scope: !13596, inlinedAt: !13681)
!13681 = distinct !DILocation(line: 537, column: 2, scope: !13639)
!13682 = !DILocation(line: 0, scope: !13604, inlinedAt: !13683)
!13683 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !13681)
!13684 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !13683)
!13685 = !DILocation(line: 538, column: 1, scope: !13639)
!13686 = distinct !DISubprogram(name: "sliceable", scope: !2336, file: !2336, line: 468, type: !13687, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13689)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{!136, !2231}
!13689 = !{!13690, !13691}
!13690 = !DILocalVariable(name: "thread", arg: 1, scope: !13686, file: !2336, line: 468, type: !2231)
!13691 = !DILocalVariable(name: "ret", scope: !13686, file: !2336, line: 470, type: !136)
!13692 = !DILocation(line: 0, scope: !13686)
!13693 = !DILocation(line: 470, column: 13, scope: !13686)
!13694 = !DILocation(line: 471, column: 3, scope: !13686)
!13695 = !DILocation(line: 471, column: 7, scope: !13686)
!13696 = !DILocation(line: 472, column: 3, scope: !13686)
!13697 = !DILocation(line: 472, column: 37, scope: !13686)
!13698 = !DILocation(line: 472, column: 24, scope: !13686)
!13699 = !DILocation(line: 472, column: 43, scope: !13686)
!13700 = !DILocation(line: 472, column: 7, scope: !13686)
!13701 = !DILocation(line: 473, column: 3, scope: !13686)
!13702 = !DILocation(line: 473, column: 7, scope: !13686)
!13703 = !DILocation(line: 473, column: 6, scope: !13686)
!13704 = !DILocation(line: 479, column: 2, scope: !13686)
!13705 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2336, file: !2336, line: 482, type: !13706, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13708)
!13706 = !DISubroutineType(types: !13707)
!13707 = !{!13561, !13561}
!13708 = !{!13709, !13710}
!13709 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !13705, file: !2336, line: 482, type: !13561)
!13710 = !DILocalVariable(name: "curr", scope: !13705, file: !2336, line: 484, type: !2231)
!13711 = !DILocation(line: 0, scope: !13705)
!13712 = !DILocation(line: 484, column: 26, scope: !13705)
!13713 = !DILocation(line: 493, column: 7, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13705, file: !2336, line: 493, column: 6)
!13715 = !DILocation(line: 493, column: 6, scope: !13705)
!13716 = !DILocation(line: 494, column: 3, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13714, file: !2336, line: 493, column: 49)
!13718 = !DILocation(line: 495, column: 2, scope: !13717)
!13719 = !DILocation(line: 496, column: 2, scope: !13705)
!13720 = !DILocation(line: 499, column: 1, scope: !13705)
!13721 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12402, file: !12402, line: 106, type: !13687, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13722)
!13722 = !{!13723, !13724}
!13723 = !DILocalVariable(name: "thread", arg: 1, scope: !13721, file: !12402, line: 106, type: !2231)
!13724 = !DILocalVariable(name: "state", scope: !13721, file: !12402, line: 108, type: !133)
!13725 = !DILocation(line: 0, scope: !13721)
!13726 = !DILocation(line: 108, column: 31, scope: !13721)
!13727 = !DILocation(line: 110, column: 16, scope: !13721)
!13728 = !DILocation(line: 111, column: 41, scope: !13721)
!13729 = !DILocation(line: 110, column: 2, scope: !13721)
!13730 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2336, file: !2336, line: 393, type: !13527, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13731)
!13731 = !{!13732}
!13732 = !DILocalVariable(name: "thread", arg: 1, scope: !13730, file: !2336, line: 393, type: !2231)
!13733 = !DILocation(line: 0, scope: !13730)
!13734 = !DILocation(line: 395, column: 6, scope: !13735)
!13735 = distinct !DILexicalBlock(scope: !13730, file: !2336, line: 395, column: 6)
!13736 = !DILocation(line: 395, column: 6, scope: !13730)
!13737 = !DILocalVariable(name: "thread", arg: 1, scope: !13738, file: !2336, line: 264, type: !2231)
!13738 = distinct !DISubprogram(name: "dequeue_thread", scope: !2336, file: !2336, line: 264, type: !13527, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13739)
!13739 = !{!13737}
!13740 = !DILocation(line: 0, scope: !13738, inlinedAt: !13741)
!13741 = distinct !DILocation(line: 396, column: 3, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13735, file: !2336, line: 395, column: 34)
!13743 = !DILocation(line: 266, column: 15, scope: !13738, inlinedAt: !13741)
!13744 = !DILocation(line: 266, column: 28, scope: !13738, inlinedAt: !13741)
!13745 = !DILocalVariable(name: "thread", arg: 1, scope: !13746, file: !2336, line: 232, type: !2231)
!13746 = distinct !DISubprogram(name: "runq_remove", scope: !2336, file: !2336, line: 232, type: !13527, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13747)
!13747 = !{!13745}
!13748 = !DILocation(line: 0, scope: !13746, inlinedAt: !13749)
!13749 = distinct !DILocation(line: 268, column: 3, scope: !13750, inlinedAt: !13741)
!13750 = distinct !DILexicalBlock(scope: !13751, file: !2336, line: 267, column: 35)
!13751 = distinct !DILexicalBlock(scope: !13738, file: !2336, line: 267, column: 6)
!13752 = !DILocation(line: 234, column: 2, scope: !13746, inlinedAt: !13749)
!13753 = !DILocation(line: 397, column: 2, scope: !13742)
!13754 = !DILocalVariable(name: "thread", arg: 1, scope: !13755, file: !2336, line: 250, type: !2231)
!13755 = distinct !DISubprogram(name: "queue_thread", scope: !2336, file: !2336, line: 250, type: !13527, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13756)
!13756 = !{!13754}
!13757 = !DILocation(line: 0, scope: !13755, inlinedAt: !13758)
!13758 = distinct !DILocation(line: 398, column: 2, scope: !13730)
!13759 = !DILocation(line: 252, column: 15, scope: !13755, inlinedAt: !13758)
!13760 = !DILocation(line: 252, column: 28, scope: !13755, inlinedAt: !13758)
!13761 = !DILocalVariable(name: "thread", arg: 1, scope: !13762, file: !2336, line: 227, type: !2231)
!13762 = distinct !DISubprogram(name: "runq_add", scope: !2336, file: !2336, line: 227, type: !13527, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13763)
!13763 = !{!13761}
!13764 = !DILocation(line: 0, scope: !13762, inlinedAt: !13765)
!13765 = distinct !DILocation(line: 254, column: 3, scope: !13766, inlinedAt: !13758)
!13766 = distinct !DILexicalBlock(scope: !13767, file: !2336, line: 253, column: 35)
!13767 = distinct !DILexicalBlock(scope: !13755, file: !2336, line: 253, column: 6)
!13768 = !DILocalVariable(name: "pq", arg: 1, scope: !13769, file: !2336, line: 181, type: !13772)
!13769 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2336, file: !2336, line: 181, type: !13770, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13773)
!13770 = !DISubroutineType(types: !13771)
!13771 = !{null, !13772, !2231}
!13772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 32)
!13773 = !{!13768, !13774, !13775}
!13774 = !DILocalVariable(name: "thread", arg: 2, scope: !13769, file: !2336, line: 182, type: !2231)
!13775 = !DILocalVariable(name: "t", scope: !13769, file: !2336, line: 184, type: !2231)
!13776 = !DILocation(line: 0, scope: !13769, inlinedAt: !13777)
!13777 = distinct !DILocation(line: 229, column: 2, scope: !13762, inlinedAt: !13765)
!13778 = !DILocation(line: 188, column: 2, scope: !13779, inlinedAt: !13777)
!13779 = distinct !DILexicalBlock(scope: !13769, file: !2336, line: 188, column: 2)
!13780 = !DILocation(line: 188, column: 2, scope: !13781, inlinedAt: !13777)
!13781 = distinct !DILexicalBlock(scope: !13779, file: !2336, line: 188, column: 2)
!13782 = !DILocation(line: 0, scope: !13779, inlinedAt: !13777)
!13783 = !DILocation(line: 189, column: 7, scope: !13784, inlinedAt: !13777)
!13784 = distinct !DILexicalBlock(scope: !13785, file: !2336, line: 189, column: 7)
!13785 = distinct !DILexicalBlock(scope: !13781, file: !2336, line: 188, column: 56)
!13786 = !DILocation(line: 189, column: 35, scope: !13784, inlinedAt: !13777)
!13787 = !DILocation(line: 189, column: 7, scope: !13785, inlinedAt: !13777)
!13788 = !DILocation(line: 191, column: 21, scope: !13789, inlinedAt: !13777)
!13789 = distinct !DILexicalBlock(scope: !13784, file: !2336, line: 189, column: 40)
!13790 = !DILocation(line: 190, column: 4, scope: !13789, inlinedAt: !13777)
!13791 = !DILocation(line: 192, column: 4, scope: !13789, inlinedAt: !13777)
!13792 = distinct !{!13792, !13778, !13793}
!13793 = !DILocation(line: 194, column: 2, scope: !13779, inlinedAt: !13777)
!13794 = !DILocation(line: 196, column: 37, scope: !13769, inlinedAt: !13777)
!13795 = !DILocation(line: 196, column: 2, scope: !13769, inlinedAt: !13777)
!13796 = !DILocation(line: 197, column: 1, scope: !13769, inlinedAt: !13777)
!13797 = !DILocation(line: 399, column: 25, scope: !13730)
!13798 = !DILocation(line: 399, column: 22, scope: !13730)
!13799 = !DILocation(line: 399, column: 2, scope: !13730)
!13800 = !DILocation(line: 400, column: 1, scope: !13730)
!13801 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12402, file: !12402, line: 136, type: !13687, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13802)
!13802 = !{!13803}
!13803 = !DILocalVariable(name: "thread", arg: 1, scope: !13801, file: !12402, line: 136, type: !2231)
!13804 = !DILocation(line: 0, scope: !13801)
!13805 = !DILocation(line: 138, column: 9, scope: !13801)
!13806 = !DILocation(line: 138, column: 2, scope: !13801)
!13807 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2336, file: !2336, line: 1137, type: !13770, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13808)
!13808 = !{!13809, !13810}
!13809 = !DILocalVariable(name: "pq", arg: 1, scope: !13807, file: !2336, line: 1137, type: !13772)
!13810 = !DILocalVariable(name: "thread", arg: 2, scope: !13807, file: !2336, line: 1137, type: !2231)
!13811 = !DILocation(line: 0, scope: !13807)
!13812 = !DILocation(line: 1141, column: 33, scope: !13807)
!13813 = !DILocation(line: 1141, column: 2, scope: !13807)
!13814 = !DILocation(line: 1142, column: 1, scope: !13807)
!13815 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !13816, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13818)
!13816 = !DISubroutineType(types: !13817)
!13817 = !{!2332, !13772}
!13818 = !{!13819}
!13819 = !DILocalVariable(name: "list", arg: 1, scope: !13815, file: !233, line: 294, type: !13772)
!13820 = !DILocation(line: 0, scope: !13815)
!13821 = !DILocation(line: 296, column: 9, scope: !13815)
!13822 = !DILocation(line: 296, column: 49, scope: !13815)
!13823 = !DILocation(line: 296, column: 2, scope: !13815)
!13824 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !13825, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13827)
!13825 = !DISubroutineType(types: !13826)
!13826 = !{null, !2332, !2332}
!13827 = !{!13828, !13829, !13830}
!13828 = !DILocalVariable(name: "successor", arg: 1, scope: !13824, file: !233, line: 443, type: !2332)
!13829 = !DILocalVariable(name: "node", arg: 2, scope: !13824, file: !233, line: 443, type: !2332)
!13830 = !DILocalVariable(name: "prev", scope: !13824, file: !233, line: 445, type: !13831)
!13831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2332)
!13832 = !DILocation(line: 0, scope: !13824)
!13833 = !DILocation(line: 445, column: 39, scope: !13824)
!13834 = !DILocation(line: 447, column: 8, scope: !13824)
!13835 = !DILocation(line: 447, column: 13, scope: !13824)
!13836 = !DILocation(line: 448, column: 8, scope: !13824)
!13837 = !DILocation(line: 448, column: 13, scope: !13824)
!13838 = !DILocation(line: 449, column: 8, scope: !13824)
!13839 = !DILocation(line: 449, column: 13, scope: !13824)
!13840 = !DILocation(line: 450, column: 18, scope: !13824)
!13841 = !DILocation(line: 451, column: 1, scope: !13824)
!13842 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !13843, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13845)
!13843 = !DISubroutineType(types: !13844)
!13844 = !{!2332, !13772, !2332}
!13845 = !{!13846, !13847}
!13846 = !DILocalVariable(name: "list", arg: 1, scope: !13842, file: !233, line: 341, type: !13772)
!13847 = !DILocalVariable(name: "node", arg: 2, scope: !13842, file: !233, line: 342, type: !2332)
!13848 = !DILocation(line: 0, scope: !13842)
!13849 = !DILocation(line: 344, column: 15, scope: !13842)
!13850 = !DILocation(line: 344, column: 9, scope: !13842)
!13851 = !DILocation(line: 344, column: 26, scope: !13842)
!13852 = !DILocation(line: 344, column: 2, scope: !13842)
!13853 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !13854, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13856)
!13854 = !DISubroutineType(types: !13855)
!13855 = !{null, !13772, !2332}
!13856 = !{!13857, !13858, !13859}
!13857 = !DILocalVariable(name: "list", arg: 1, scope: !13853, file: !233, line: 404, type: !13772)
!13858 = !DILocalVariable(name: "node", arg: 2, scope: !13853, file: !233, line: 404, type: !2332)
!13859 = !DILocalVariable(name: "tail", scope: !13853, file: !233, line: 406, type: !13831)
!13860 = !DILocation(line: 0, scope: !13853)
!13861 = !DILocation(line: 406, column: 34, scope: !13853)
!13862 = !DILocation(line: 408, column: 8, scope: !13853)
!13863 = !DILocation(line: 408, column: 13, scope: !13853)
!13864 = !DILocation(line: 409, column: 8, scope: !13853)
!13865 = !DILocation(line: 409, column: 13, scope: !13853)
!13866 = !DILocation(line: 411, column: 8, scope: !13853)
!13867 = !DILocation(line: 411, column: 13, scope: !13853)
!13868 = !DILocation(line: 412, column: 13, scope: !13853)
!13869 = !DILocation(line: 413, column: 1, scope: !13853)
!13870 = distinct !DISubprogram(name: "update_cache", scope: !2336, file: !2336, line: 559, type: !7732, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13871)
!13871 = !{!13872, !13873}
!13872 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !13870, file: !2336, line: 559, type: !107)
!13873 = !DILocalVariable(name: "thread", scope: !13870, file: !2336, line: 562, type: !2231)
!13874 = !DILocation(line: 0, scope: !13870)
!13875 = !DILocation(line: 239, column: 9, scope: !13876, inlinedAt: !13879)
!13876 = distinct !DISubprogram(name: "runq_best", scope: !2336, file: !2336, line: 237, type: !13877, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!13877 = !DISubroutineType(types: !13878)
!13878 = !{!2231}
!13879 = distinct !DILocation(line: 314, column: 28, scope: !13880, inlinedAt: !13883)
!13880 = distinct !DISubprogram(name: "next_up", scope: !2336, file: !2336, line: 312, type: !13877, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13881)
!13881 = !{!13882}
!13882 = !DILocalVariable(name: "thread", scope: !13880, file: !2336, line: 314, type: !2231)
!13883 = distinct !DILocation(line: 562, column: 28, scope: !13870)
!13884 = !DILocation(line: 0, scope: !13880, inlinedAt: !13883)
!13885 = !DILocation(line: 340, column: 17, scope: !13880, inlinedAt: !13883)
!13886 = !DILocation(line: 340, column: 9, scope: !13880, inlinedAt: !13883)
!13887 = !DILocalVariable(name: "thread", arg: 1, scope: !13888, file: !2336, line: 127, type: !2231)
!13888 = distinct !DISubprogram(name: "should_preempt", scope: !2336, file: !2336, line: 127, type: !13889, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13891)
!13889 = !DISubroutineType(types: !13890)
!13890 = !{!136, !2231, !107}
!13891 = !{!13887, !13892}
!13892 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !13888, file: !2336, line: 128, type: !107)
!13893 = !DILocation(line: 0, scope: !13888, inlinedAt: !13894)
!13894 = distinct !DILocation(line: 564, column: 6, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13870, file: !2336, line: 564, column: 6)
!13896 = !DILocation(line: 133, column: 17, scope: !13897, inlinedAt: !13894)
!13897 = distinct !DILexicalBlock(scope: !13888, file: !2336, line: 133, column: 6)
!13898 = !DILocation(line: 0, scope: !13895)
!13899 = !DILocation(line: 133, column: 6, scope: !13888, inlinedAt: !13894)
!13900 = !DILocation(line: 140, column: 6, scope: !13901, inlinedAt: !13894)
!13901 = distinct !DILexicalBlock(scope: !13888, file: !2336, line: 140, column: 6)
!13902 = !DILocation(line: 140, column: 6, scope: !13888, inlinedAt: !13894)
!13903 = !DILocation(line: 150, column: 9, scope: !13904, inlinedAt: !13894)
!13904 = distinct !DILexicalBlock(scope: !13888, file: !2336, line: 149, column: 6)
!13905 = !DILocation(line: 149, column: 6, scope: !13888, inlinedAt: !13894)
!13906 = !DILocation(line: 157, column: 6, scope: !13907, inlinedAt: !13894)
!13907 = distinct !DILexicalBlock(scope: !13888, file: !2336, line: 157, column: 6)
!13908 = !DILocation(line: 564, column: 6, scope: !13870)
!13909 = !DILocation(line: 566, column: 14, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13911, file: !2336, line: 566, column: 7)
!13911 = distinct !DILexicalBlock(scope: !13895, file: !2336, line: 564, column: 42)
!13912 = !DILocation(line: 566, column: 7, scope: !13911)
!13913 = !DILocation(line: 567, column: 4, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13910, file: !2336, line: 566, column: 27)
!13915 = !DILocation(line: 568, column: 3, scope: !13914)
!13916 = !DILocation(line: 585, column: 1, scope: !13870)
!13917 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2336, file: !2336, line: 1144, type: !13918, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13920)
!13918 = !DISubroutineType(types: !13919)
!13919 = !{!2231, !13772}
!13920 = !{!13921, !13922, !13923}
!13921 = !DILocalVariable(name: "pq", arg: 1, scope: !13917, file: !2336, line: 1144, type: !13772)
!13922 = !DILocalVariable(name: "thread", scope: !13917, file: !2336, line: 1146, type: !2231)
!13923 = !DILocalVariable(name: "n", scope: !13917, file: !2336, line: 1147, type: !2332)
!13924 = !DILocation(line: 0, scope: !13917)
!13925 = !DILocation(line: 1147, column: 19, scope: !13917)
!13926 = !DILocation(line: 1152, column: 2, scope: !13917)
!13927 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12402, file: !12402, line: 115, type: !13687, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13928)
!13928 = !{!13929}
!13929 = !DILocalVariable(name: "thread", arg: 1, scope: !13927, file: !12402, line: 115, type: !2231)
!13930 = !DILocation(line: 0, scope: !13927)
!13931 = !DILocation(line: 117, column: 46, scope: !13927)
!13932 = !DILocation(line: 117, column: 10, scope: !13927)
!13933 = !DILocation(line: 117, column: 9, scope: !13927)
!13934 = !DILocation(line: 117, column: 2, scope: !13927)
!13935 = distinct !DISubprogram(name: "is_preempt", scope: !2336, file: !2336, line: 62, type: !13545, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13936)
!13936 = !{!13937}
!13937 = !DILocalVariable(name: "thread", arg: 1, scope: !13935, file: !2336, line: 62, type: !2231)
!13938 = !DILocation(line: 0, scope: !13935)
!13939 = !DILocation(line: 65, column: 22, scope: !13935)
!13940 = !DILocation(line: 65, column: 30, scope: !13935)
!13941 = !DILocation(line: 65, column: 2, scope: !13935)
!13942 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12794, file: !12794, line: 35, type: !13943, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13947)
!13943 = !DISubroutineType(types: !13944)
!13944 = !{!136, !13945}
!13945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13946, size: 32)
!13946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2282)
!13947 = !{!13948}
!13948 = !DILocalVariable(name: "to", arg: 1, scope: !13942, file: !12794, line: 35, type: !13945)
!13949 = !DILocation(line: 0, scope: !13942)
!13950 = !DILocation(line: 37, column: 35, scope: !13942)
!13951 = !DILocation(line: 37, column: 10, scope: !13942)
!13952 = !DILocation(line: 37, column: 9, scope: !13942)
!13953 = !DILocation(line: 37, column: 2, scope: !13942)
!13954 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !13955, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13959)
!13955 = !DISubroutineType(types: !13956)
!13956 = !{!136, !13957}
!13957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13958, size: 32)
!13958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2241)
!13959 = !{!13960}
!13960 = !DILocalVariable(name: "node", arg: 1, scope: !13954, file: !233, line: 225, type: !13957)
!13961 = !DILocation(line: 0, scope: !13954)
!13962 = !DILocation(line: 227, column: 15, scope: !13954)
!13963 = !DILocation(line: 227, column: 20, scope: !13954)
!13964 = !DILocation(line: 227, column: 2, scope: !13954)
!13965 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !13843, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13966)
!13966 = !{!13967, !13968}
!13967 = !DILocalVariable(name: "list", arg: 1, scope: !13965, file: !233, line: 325, type: !13772)
!13968 = !DILocalVariable(name: "node", arg: 2, scope: !13965, file: !233, line: 326, type: !2332)
!13969 = !DILocation(line: 0, scope: !13965)
!13970 = !DILocation(line: 328, column: 24, scope: !13965)
!13971 = !DILocation(line: 328, column: 15, scope: !13965)
!13972 = !DILocation(line: 328, column: 9, scope: !13965)
!13973 = !DILocation(line: 328, column: 45, scope: !13965)
!13974 = !DILocation(line: 328, column: 2, scope: !13965)
!13975 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !13976, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13978)
!13976 = !DISubroutineType(types: !13977)
!13977 = !{!136, !13772}
!13978 = !{!13979}
!13979 = !DILocalVariable(name: "list", arg: 1, scope: !13975, file: !233, line: 266, type: !13772)
!13980 = !DILocation(line: 0, scope: !13975)
!13981 = !DILocation(line: 268, column: 15, scope: !13975)
!13982 = !DILocation(line: 268, column: 20, scope: !13975)
!13983 = !DILocation(line: 268, column: 2, scope: !13975)
!13984 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !13985, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !13987)
!13985 = !DISubroutineType(types: !13986)
!13986 = !{null, !2332}
!13987 = !{!13988, !13989, !13990}
!13988 = !DILocalVariable(name: "node", arg: 1, scope: !13984, file: !233, line: 496, type: !2332)
!13989 = !DILocalVariable(name: "prev", scope: !13984, file: !233, line: 498, type: !13831)
!13990 = !DILocalVariable(name: "next", scope: !13984, file: !233, line: 499, type: !13831)
!13991 = !DILocation(line: 0, scope: !13984)
!13992 = !DILocation(line: 498, column: 34, scope: !13984)
!13993 = !DILocation(line: 499, column: 34, scope: !13984)
!13994 = !DILocation(line: 501, column: 8, scope: !13984)
!13995 = !DILocation(line: 501, column: 13, scope: !13984)
!13996 = !DILocation(line: 502, column: 8, scope: !13984)
!13997 = !DILocation(line: 502, column: 13, scope: !13984)
!13998 = !DILocation(line: 503, column: 2, scope: !13984)
!13999 = !DILocation(line: 504, column: 1, scope: !13984)
!14000 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !13985, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14001)
!14001 = !{!14002}
!14002 = !DILocalVariable(name: "node", arg: 1, scope: !14000, file: !233, line: 211, type: !2332)
!14003 = !DILocation(line: 0, scope: !14000)
!14004 = !DILocation(line: 213, column: 8, scope: !14000)
!14005 = !DILocation(line: 213, column: 13, scope: !14000)
!14006 = !DILocation(line: 214, column: 8, scope: !14000)
!14007 = !DILocation(line: 214, column: 13, scope: !14000)
!14008 = !DILocation(line: 215, column: 1, scope: !14000)
!14009 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12402, file: !12402, line: 131, type: !14010, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14012)
!14010 = !DISubroutineType(types: !14011)
!14011 = !{!136, !2231, !162}
!14012 = !{!14013, !14014}
!14013 = !DILocalVariable(name: "thread", arg: 1, scope: !14009, file: !12402, line: 131, type: !2231)
!14014 = !DILocalVariable(name: "state", arg: 2, scope: !14009, file: !12402, line: 131, type: !162)
!14015 = !DILocation(line: 0, scope: !14009)
!14016 = !DILocation(line: 133, column: 23, scope: !14009)
!14017 = !DILocation(line: 133, column: 45, scope: !14009)
!14018 = !DILocation(line: 133, column: 2, scope: !14009)
!14019 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12402, file: !12402, line: 211, type: !14020, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14022)
!14020 = !DISubroutineType(types: !14021)
!14021 = !{!136, !107, !107}
!14022 = !{!14023, !14024}
!14023 = !DILocalVariable(name: "prio", arg: 1, scope: !14019, file: !12402, line: 211, type: !107)
!14024 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14019, file: !12402, line: 211, type: !107)
!14025 = !DILocation(line: 0, scope: !14019)
!14026 = !DILocation(line: 213, column: 9, scope: !14019)
!14027 = !DILocation(line: 213, column: 2, scope: !14019)
!14028 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12402, file: !12402, line: 83, type: !13687, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14029)
!14029 = !{!14030}
!14030 = !DILocalVariable(name: "thread", arg: 1, scope: !14028, file: !12402, line: 83, type: !2231)
!14031 = !DILocation(line: 0, scope: !14028)
!14032 = !DILocation(line: 89, column: 16, scope: !14028)
!14033 = !DILocation(line: 89, column: 2, scope: !14028)
!14034 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12402, file: !12402, line: 206, type: !14020, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14035)
!14035 = !{!14036, !14037}
!14036 = !DILocalVariable(name: "prio1", arg: 1, scope: !14034, file: !12402, line: 206, type: !107)
!14037 = !DILocalVariable(name: "prio2", arg: 2, scope: !14034, file: !12402, line: 206, type: !107)
!14038 = !DILocation(line: 0, scope: !14034)
!14039 = !DILocation(line: 208, column: 15, scope: !14034)
!14040 = !DILocation(line: 208, column: 2, scope: !14034)
!14041 = distinct !DISubprogram(name: "z_ready_thread", scope: !2336, file: !2336, line: 635, type: !13527, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14042)
!14042 = !{!14043, !14044, !14046}
!14043 = !DILocalVariable(name: "thread", arg: 1, scope: !14041, file: !2336, line: 635, type: !2231)
!14044 = !DILocalVariable(name: "__i", scope: !14045, file: !2336, line: 637, type: !13561)
!14045 = distinct !DILexicalBlock(scope: !14041, file: !2336, line: 637, column: 2)
!14046 = !DILocalVariable(name: "__key", scope: !14045, file: !2336, line: 637, type: !13561)
!14047 = !DILocation(line: 0, scope: !14041)
!14048 = !DILocation(line: 0, scope: !14045)
!14049 = !DILocation(line: 0, scope: !13569, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 637, column: 2, scope: !14045)
!14051 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14052)
!14052 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14050)
!14053 = !DILocation(line: 0, scope: !13578, inlinedAt: !14052)
!14054 = !DILocation(line: 639, column: 4, scope: !14055)
!14055 = distinct !DILexicalBlock(scope: !14056, file: !2336, line: 638, column: 41)
!14056 = distinct !DILexicalBlock(scope: !14057, file: !2336, line: 638, column: 7)
!14057 = distinct !DILexicalBlock(scope: !14058, file: !2336, line: 637, column: 26)
!14058 = distinct !DILexicalBlock(scope: !14045, file: !2336, line: 637, column: 2)
!14059 = !DILocation(line: 0, scope: !13596, inlinedAt: !14060)
!14060 = distinct !DILocation(line: 637, column: 2, scope: !14058)
!14061 = !DILocation(line: 0, scope: !13604, inlinedAt: !14062)
!14062 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14060)
!14063 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14062)
!14064 = !DILocation(line: 642, column: 1, scope: !14041)
!14065 = distinct !DISubprogram(name: "ready_thread", scope: !2336, file: !2336, line: 617, type: !13527, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14066)
!14066 = !{!14067}
!14067 = !DILocalVariable(name: "thread", arg: 1, scope: !14065, file: !2336, line: 617, type: !2231)
!14068 = !DILocation(line: 0, scope: !14065)
!14069 = !DILocation(line: 626, column: 7, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14065, file: !2336, line: 626, column: 6)
!14071 = !DILocation(line: 626, column: 34, scope: !14070)
!14072 = !DILocation(line: 626, column: 37, scope: !14070)
!14073 = !DILocation(line: 626, column: 6, scope: !14065)
!14074 = !DILocation(line: 0, scope: !13755, inlinedAt: !14075)
!14075 = distinct !DILocation(line: 629, column: 3, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14070, file: !2336, line: 626, column: 64)
!14077 = !DILocation(line: 252, column: 15, scope: !13755, inlinedAt: !14075)
!14078 = !DILocation(line: 252, column: 28, scope: !13755, inlinedAt: !14075)
!14079 = !DILocation(line: 0, scope: !13762, inlinedAt: !14080)
!14080 = distinct !DILocation(line: 254, column: 3, scope: !13766, inlinedAt: !14075)
!14081 = !DILocation(line: 0, scope: !13769, inlinedAt: !14082)
!14082 = distinct !DILocation(line: 229, column: 2, scope: !13762, inlinedAt: !14080)
!14083 = !DILocation(line: 188, column: 2, scope: !13779, inlinedAt: !14082)
!14084 = !DILocation(line: 188, column: 2, scope: !13781, inlinedAt: !14082)
!14085 = !DILocation(line: 0, scope: !13779, inlinedAt: !14082)
!14086 = !DILocation(line: 189, column: 7, scope: !13784, inlinedAt: !14082)
!14087 = !DILocation(line: 189, column: 35, scope: !13784, inlinedAt: !14082)
!14088 = !DILocation(line: 189, column: 7, scope: !13785, inlinedAt: !14082)
!14089 = !DILocation(line: 191, column: 21, scope: !13789, inlinedAt: !14082)
!14090 = !DILocation(line: 190, column: 4, scope: !13789, inlinedAt: !14082)
!14091 = !DILocation(line: 192, column: 4, scope: !13789, inlinedAt: !14082)
!14092 = distinct !{!14092, !14083, !14093}
!14093 = !DILocation(line: 194, column: 2, scope: !13779, inlinedAt: !14082)
!14094 = !DILocation(line: 196, column: 37, scope: !13769, inlinedAt: !14082)
!14095 = !DILocation(line: 196, column: 2, scope: !13769, inlinedAt: !14082)
!14096 = !DILocation(line: 197, column: 1, scope: !13769, inlinedAt: !14082)
!14097 = !DILocation(line: 630, column: 3, scope: !14076)
!14098 = !DILocation(line: 632, column: 2, scope: !14076)
!14099 = !DILocation(line: 633, column: 1, scope: !14065)
!14100 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12402, file: !12402, line: 120, type: !13687, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14101)
!14101 = !{!14102}
!14102 = !DILocalVariable(name: "thread", arg: 1, scope: !14100, file: !12402, line: 120, type: !2231)
!14103 = !DILocation(line: 0, scope: !14100)
!14104 = !DILocation(line: 122, column: 12, scope: !14100)
!14105 = !DILocation(line: 122, column: 62, scope: !14100)
!14106 = !DILocation(line: 123, column: 4, scope: !14100)
!14107 = !DILocation(line: 122, column: 2, scope: !14100)
!14108 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2336, file: !2336, line: 644, type: !13527, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14109)
!14109 = !{!14110, !14111, !14113}
!14110 = !DILocalVariable(name: "thread", arg: 1, scope: !14108, file: !2336, line: 644, type: !2231)
!14111 = !DILocalVariable(name: "__i", scope: !14112, file: !2336, line: 646, type: !13561)
!14112 = distinct !DILexicalBlock(scope: !14108, file: !2336, line: 646, column: 2)
!14113 = !DILocalVariable(name: "__key", scope: !14112, file: !2336, line: 646, type: !13561)
!14114 = !DILocation(line: 0, scope: !14108)
!14115 = !DILocation(line: 0, scope: !14112)
!14116 = !DILocation(line: 0, scope: !13569, inlinedAt: !14117)
!14117 = distinct !DILocation(line: 646, column: 2, scope: !14112)
!14118 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14119)
!14119 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14117)
!14120 = !DILocation(line: 0, scope: !13578, inlinedAt: !14119)
!14121 = !DILocation(line: 647, column: 3, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14123, file: !2336, line: 646, column: 26)
!14123 = distinct !DILexicalBlock(scope: !14112, file: !2336, line: 646, column: 2)
!14124 = !DILocation(line: 0, scope: !13596, inlinedAt: !14125)
!14125 = distinct !DILocation(line: 646, column: 2, scope: !14123)
!14126 = !DILocation(line: 0, scope: !13604, inlinedAt: !14127)
!14127 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14125)
!14128 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14127)
!14129 = !DILocation(line: 649, column: 1, scope: !14108)
!14130 = distinct !DISubprogram(name: "z_sched_start", scope: !2336, file: !2336, line: 651, type: !13527, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14131)
!14131 = !{!14132, !14133}
!14132 = !DILocalVariable(name: "thread", arg: 1, scope: !14130, file: !2336, line: 651, type: !2231)
!14133 = !DILocalVariable(name: "key", scope: !14130, file: !2336, line: 653, type: !13561)
!14134 = !DILocation(line: 0, scope: !14130)
!14135 = !DILocation(line: 0, scope: !13569, inlinedAt: !14136)
!14136 = distinct !DILocation(line: 653, column: 25, scope: !14130)
!14137 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14138)
!14138 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14136)
!14139 = !DILocation(line: 0, scope: !13578, inlinedAt: !14138)
!14140 = !DILocation(line: 655, column: 6, scope: !14141)
!14141 = distinct !DILexicalBlock(scope: !14130, file: !2336, line: 655, column: 6)
!14142 = !DILocation(line: 655, column: 6, scope: !14130)
!14143 = !DILocation(line: 0, scope: !13596, inlinedAt: !14144)
!14144 = distinct !DILocation(line: 656, column: 3, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14141, file: !2336, line: 655, column: 36)
!14146 = !DILocation(line: 0, scope: !13604, inlinedAt: !14147)
!14147 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14144)
!14148 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14147)
!14149 = !DILocation(line: 657, column: 3, scope: !14145)
!14150 = !DILocation(line: 660, column: 2, scope: !14130)
!14151 = !DILocation(line: 661, column: 2, scope: !14130)
!14152 = !DILocation(line: 662, column: 2, scope: !14130)
!14153 = !DILocation(line: 663, column: 1, scope: !14130)
!14154 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12402, file: !12402, line: 126, type: !13687, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14155)
!14155 = !{!14156}
!14156 = !DILocalVariable(name: "thread", arg: 1, scope: !14154, file: !12402, line: 126, type: !2231)
!14157 = !DILocation(line: 0, scope: !14154)
!14158 = !DILocation(line: 128, column: 23, scope: !14154)
!14159 = !DILocation(line: 128, column: 36, scope: !14154)
!14160 = !DILocation(line: 128, column: 56, scope: !14154)
!14161 = !DILocation(line: 128, column: 2, scope: !14154)
!14162 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12402, file: !12402, line: 155, type: !13527, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14163)
!14163 = !{!14164}
!14164 = !DILocalVariable(name: "thread", arg: 1, scope: !14162, file: !12402, line: 155, type: !2231)
!14165 = !DILocation(line: 0, scope: !14162)
!14166 = !DILocation(line: 157, column: 15, scope: !14162)
!14167 = !DILocation(line: 157, column: 28, scope: !14162)
!14168 = !DILocation(line: 158, column: 1, scope: !14162)
!14169 = distinct !DISubprogram(name: "z_reschedule", scope: !2336, file: !2336, line: 967, type: !13597, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14170)
!14170 = !{!14171, !14172}
!14171 = !DILocalVariable(name: "lock", arg: 1, scope: !14169, file: !2336, line: 967, type: !13572)
!14172 = !DILocalVariable(name: "key", arg: 2, scope: !14169, file: !2336, line: 967, type: !13561)
!14173 = !DILocation(line: 0, scope: !14169)
!14174 = !DILocation(line: 969, column: 6, scope: !14175)
!14175 = distinct !DILexicalBlock(scope: !14169, file: !2336, line: 969, column: 6)
!14176 = !DILocation(line: 969, column: 23, scope: !14175)
!14177 = !DILocation(line: 969, column: 26, scope: !14175)
!14178 = !DILocation(line: 969, column: 6, scope: !14169)
!14179 = !DILocalVariable(name: "key", arg: 2, scope: !14180, file: !12506, line: 193, type: !13561)
!14180 = distinct !DISubprogram(name: "z_swap", scope: !12506, file: !12506, line: 193, type: !14181, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14183)
!14181 = !DISubroutineType(types: !14182)
!14182 = !{!107, !13572, !13561}
!14183 = !{!14184, !14179}
!14184 = !DILocalVariable(name: "lock", arg: 1, scope: !14180, file: !12506, line: 193, type: !13572)
!14185 = !DILocation(line: 0, scope: !14180, inlinedAt: !14186)
!14186 = distinct !DILocation(line: 970, column: 3, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14175, file: !2336, line: 969, column: 39)
!14188 = !DILocation(line: 196, column: 9, scope: !14180, inlinedAt: !14186)
!14189 = !DILocation(line: 971, column: 2, scope: !14187)
!14190 = !DILocation(line: 0, scope: !13596, inlinedAt: !14191)
!14191 = distinct !DILocation(line: 972, column: 3, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14175, file: !2336, line: 971, column: 9)
!14193 = !DILocation(line: 0, scope: !13604, inlinedAt: !14194)
!14194 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14191)
!14195 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14194)
!14196 = !DILocation(line: 975, column: 1, scope: !14169)
!14197 = distinct !DISubprogram(name: "resched", scope: !2336, file: !2336, line: 940, type: !14198, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14200)
!14198 = !DISubroutineType(types: !14199)
!14199 = !{!136, !162}
!14200 = !{!14201}
!14201 = !DILocalVariable(name: "key", arg: 1, scope: !14197, file: !2336, line: 940, type: !162)
!14202 = !DILocation(line: 0, scope: !14197)
!14203 = !DILocalVariable(name: "key", arg: 1, scope: !14204, file: !5914, line: 112, type: !32)
!14204 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !5914, file: !5914, line: 112, type: !14205, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14207)
!14205 = !DISubroutineType(types: !14206)
!14206 = !{!136, !32}
!14207 = !{!14203}
!14208 = !DILocation(line: 0, scope: !14204, inlinedAt: !14209)
!14209 = distinct !DILocation(line: 946, column: 9, scope: !14197)
!14210 = !DILocation(line: 115, column: 13, scope: !14204, inlinedAt: !14209)
!14211 = !DILocation(line: 946, column: 32, scope: !14197)
!14212 = !DILocation(line: 1031, column: 3, scope: !14213, inlinedAt: !14216)
!14213 = distinct !DISubprogram(name: "__get_IPSR", scope: !6088, file: !6088, line: 1027, type: !6169, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14214)
!14214 = !{!14215}
!14215 = !DILocalVariable(name: "result", scope: !14213, file: !6088, line: 1029, type: !162)
!14216 = distinct !DILocation(line: 48, column: 10, scope: !14217, inlinedAt: !14218)
!14217 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !6882, file: !6882, line: 46, type: !6883, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!14218 = distinct !DILocation(line: 946, column: 36, scope: !14197)
!14219 = !{i64 3537994}
!14220 = !DILocation(line: 0, scope: !14213, inlinedAt: !14216)
!14221 = !DILocation(line: 48, column: 9, scope: !14217, inlinedAt: !14218)
!14222 = !DILocation(line: 946, column: 2, scope: !14197)
!14223 = distinct !DISubprogram(name: "need_swap", scope: !2336, file: !2336, line: 953, type: !6883, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14224)
!14224 = !{!14225}
!14225 = !DILocalVariable(name: "new_thread", scope: !14223, file: !2336, line: 959, type: !2231)
!14226 = !DILocation(line: 962, column: 31, scope: !14223)
!14227 = !DILocation(line: 0, scope: !14223)
!14228 = !DILocation(line: 963, column: 23, scope: !14223)
!14229 = !DILocation(line: 963, column: 20, scope: !14223)
!14230 = !DILocation(line: 963, column: 2, scope: !14223)
!14231 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12506, file: !12506, line: 181, type: !6098, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14232)
!14232 = !{!14233, !14234}
!14233 = !DILocalVariable(name: "key", arg: 1, scope: !14231, file: !12506, line: 181, type: !32)
!14234 = !DILocalVariable(name: "ret", scope: !14231, file: !12506, line: 183, type: !107)
!14235 = !DILocation(line: 0, scope: !14231)
!14236 = !DILocation(line: 185, column: 8, scope: !14231)
!14237 = !DILocation(line: 186, column: 2, scope: !14231)
!14238 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2336, file: !2336, line: 665, type: !13527, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14239)
!14239 = !{!14240, !14241, !14243}
!14240 = !DILocalVariable(name: "thread", arg: 1, scope: !14238, file: !2336, line: 665, type: !2231)
!14241 = !DILocalVariable(name: "__i", scope: !14242, file: !2336, line: 671, type: !13561)
!14242 = distinct !DILexicalBlock(scope: !14238, file: !2336, line: 671, column: 2)
!14243 = !DILocalVariable(name: "__key", scope: !14242, file: !2336, line: 671, type: !13561)
!14244 = !DILocation(line: 0, scope: !14238)
!14245 = !DILocation(line: 669, column: 8, scope: !14238)
!14246 = !DILocation(line: 0, scope: !14242)
!14247 = !DILocation(line: 0, scope: !13569, inlinedAt: !14248)
!14248 = distinct !DILocation(line: 671, column: 2, scope: !14242)
!14249 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14250)
!14250 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14248)
!14251 = !DILocation(line: 0, scope: !13578, inlinedAt: !14250)
!14252 = !DILocation(line: 672, column: 7, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14254, file: !2336, line: 672, column: 7)
!14254 = distinct !DILexicalBlock(scope: !14255, file: !2336, line: 671, column: 26)
!14255 = distinct !DILexicalBlock(scope: !14242, file: !2336, line: 671, column: 2)
!14256 = !DILocation(line: 672, column: 7, scope: !14254)
!14257 = !DILocation(line: 0, scope: !13738, inlinedAt: !14258)
!14258 = distinct !DILocation(line: 673, column: 4, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14253, file: !2336, line: 672, column: 35)
!14260 = !DILocation(line: 266, column: 15, scope: !13738, inlinedAt: !14258)
!14261 = !DILocation(line: 266, column: 28, scope: !13738, inlinedAt: !14258)
!14262 = !DILocation(line: 0, scope: !13746, inlinedAt: !14263)
!14263 = distinct !DILocation(line: 268, column: 3, scope: !13750, inlinedAt: !14258)
!14264 = !DILocation(line: 234, column: 2, scope: !13746, inlinedAt: !14263)
!14265 = !DILocation(line: 674, column: 3, scope: !14259)
!14266 = !DILocation(line: 675, column: 3, scope: !14254)
!14267 = !DILocation(line: 676, column: 26, scope: !14254)
!14268 = !DILocation(line: 676, column: 23, scope: !14254)
!14269 = !DILocation(line: 676, column: 3, scope: !14254)
!14270 = !DILocation(line: 0, scope: !13596, inlinedAt: !14271)
!14271 = distinct !DILocation(line: 671, column: 2, scope: !14255)
!14272 = !DILocation(line: 0, scope: !13604, inlinedAt: !14273)
!14273 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14271)
!14274 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14273)
!14275 = !DILocation(line: 679, column: 16, scope: !14276)
!14276 = distinct !DILexicalBlock(scope: !14238, file: !2336, line: 679, column: 6)
!14277 = !DILocation(line: 679, column: 13, scope: !14276)
!14278 = !DILocation(line: 679, column: 6, scope: !14238)
!14279 = !DILocation(line: 680, column: 3, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14276, file: !2336, line: 679, column: 26)
!14281 = !DILocation(line: 681, column: 2, scope: !14280)
!14282 = !DILocation(line: 684, column: 1, scope: !14238)
!14283 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !12794, file: !12794, line: 52, type: !13545, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14284)
!14284 = !{!14285}
!14285 = !DILocalVariable(name: "thread", arg: 1, scope: !14283, file: !12794, line: 52, type: !2231)
!14286 = !DILocation(line: 0, scope: !14283)
!14287 = !DILocation(line: 54, column: 39, scope: !14283)
!14288 = !DILocation(line: 54, column: 9, scope: !14283)
!14289 = !DILocation(line: 54, column: 2, scope: !14283)
!14290 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12402, file: !12402, line: 141, type: !13527, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14291)
!14291 = !{!14292}
!14292 = !DILocalVariable(name: "thread", arg: 1, scope: !14290, file: !12402, line: 141, type: !2231)
!14293 = !DILocation(line: 0, scope: !14290)
!14294 = !DILocation(line: 143, column: 15, scope: !14290)
!14295 = !DILocation(line: 143, column: 28, scope: !14290)
!14296 = !DILocation(line: 146, column: 1, scope: !14290)
!14297 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12402, file: !12402, line: 73, type: !3130, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!14298 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14299)
!14299 = distinct !DILocation(line: 75, column: 30, scope: !14297)
!14300 = !DILocation(line: 0, scope: !13578, inlinedAt: !14299)
!14301 = !DILocation(line: 75, column: 9, scope: !14297)
!14302 = !DILocation(line: 76, column: 1, scope: !14297)
!14303 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2336, file: !2336, line: 977, type: !6179, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14304)
!14304 = !{!14305}
!14305 = !DILocalVariable(name: "key", arg: 1, scope: !14303, file: !2336, line: 977, type: !162)
!14306 = !DILocation(line: 0, scope: !14303)
!14307 = !DILocation(line: 979, column: 6, scope: !14308)
!14308 = distinct !DILexicalBlock(scope: !14303, file: !2336, line: 979, column: 6)
!14309 = !DILocation(line: 979, column: 6, scope: !14303)
!14310 = !DILocation(line: 980, column: 3, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14308, file: !2336, line: 979, column: 20)
!14312 = !DILocation(line: 981, column: 2, scope: !14311)
!14313 = !DILocation(line: 0, scope: !13604, inlinedAt: !14314)
!14314 = distinct !DILocation(line: 982, column: 3, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14308, file: !2336, line: 981, column: 9)
!14316 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14314)
!14317 = !DILocation(line: 985, column: 1, scope: !14303)
!14318 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2336, file: !2336, line: 695, type: !13527, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14319)
!14319 = !{!14320, !14321}
!14320 = !DILocalVariable(name: "thread", arg: 1, scope: !14318, file: !2336, line: 695, type: !2231)
!14321 = !DILocalVariable(name: "key", scope: !14318, file: !2336, line: 699, type: !13561)
!14322 = !DILocation(line: 0, scope: !14318)
!14323 = !DILocation(line: 0, scope: !13569, inlinedAt: !14324)
!14324 = distinct !DILocation(line: 699, column: 25, scope: !14318)
!14325 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14326)
!14326 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14324)
!14327 = !DILocation(line: 0, scope: !13578, inlinedAt: !14326)
!14328 = !DILocation(line: 702, column: 7, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14318, file: !2336, line: 702, column: 6)
!14330 = !DILocation(line: 702, column: 6, scope: !14318)
!14331 = !DILocation(line: 0, scope: !13596, inlinedAt: !14332)
!14332 = distinct !DILocation(line: 703, column: 3, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14329, file: !2336, line: 702, column: 38)
!14334 = !DILocation(line: 0, scope: !13604, inlinedAt: !14335)
!14335 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14332)
!14336 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14335)
!14337 = !DILocation(line: 704, column: 3, scope: !14333)
!14338 = !DILocation(line: 707, column: 2, scope: !14318)
!14339 = !DILocation(line: 708, column: 2, scope: !14318)
!14340 = !DILocation(line: 710, column: 2, scope: !14318)
!14341 = !DILocation(line: 713, column: 1, scope: !14318)
!14342 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12402, file: !12402, line: 96, type: !13687, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14343)
!14343 = !{!14344}
!14344 = !DILocalVariable(name: "thread", arg: 1, scope: !14342, file: !12402, line: 96, type: !2231)
!14345 = !DILocation(line: 0, scope: !14342)
!14346 = !DILocation(line: 98, column: 23, scope: !14342)
!14347 = !DILocation(line: 98, column: 36, scope: !14342)
!14348 = !DILocation(line: 98, column: 57, scope: !14342)
!14349 = !DILocation(line: 98, column: 2, scope: !14342)
!14350 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12402, file: !12402, line: 148, type: !13527, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14351)
!14351 = !{!14352}
!14352 = !DILocalVariable(name: "thread", arg: 1, scope: !14350, file: !12402, line: 148, type: !2231)
!14353 = !DILocation(line: 0, scope: !14350)
!14354 = !DILocation(line: 150, column: 15, scope: !14350)
!14355 = !DILocation(line: 150, column: 28, scope: !14350)
!14356 = !DILocation(line: 153, column: 1, scope: !14350)
!14357 = distinct !DISubprogram(name: "z_pend_thread", scope: !2336, file: !2336, line: 770, type: !14358, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14364)
!14358 = !DISubroutineType(types: !14359)
!14359 = !{null, !2231, !2262, !14360}
!14360 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14361)
!14361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14362)
!14362 = !{!14363}
!14363 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14361, file: !104, line: 66, baseType: !103, size: 64)
!14364 = !{!14365, !14366, !14367, !14368, !14370}
!14365 = !DILocalVariable(name: "thread", arg: 1, scope: !14357, file: !2336, line: 770, type: !2231)
!14366 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14357, file: !2336, line: 770, type: !2262)
!14367 = !DILocalVariable(name: "timeout", arg: 3, scope: !14357, file: !2336, line: 771, type: !14360)
!14368 = !DILocalVariable(name: "__i", scope: !14369, file: !2336, line: 774, type: !13561)
!14369 = distinct !DILexicalBlock(scope: !14357, file: !2336, line: 774, column: 2)
!14370 = !DILocalVariable(name: "__key", scope: !14369, file: !2336, line: 774, type: !13561)
!14371 = !DILocation(line: 0, scope: !14357)
!14372 = !DILocation(line: 0, scope: !14369)
!14373 = !DILocation(line: 0, scope: !13569, inlinedAt: !14374)
!14374 = distinct !DILocation(line: 774, column: 2, scope: !14369)
!14375 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14376)
!14376 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14374)
!14377 = !DILocation(line: 0, scope: !13578, inlinedAt: !14376)
!14378 = !DILocation(line: 775, column: 3, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !2336, line: 774, column: 26)
!14380 = distinct !DILexicalBlock(scope: !14369, file: !2336, line: 774, column: 2)
!14381 = !DILocation(line: 0, scope: !13596, inlinedAt: !14382)
!14382 = distinct !DILocation(line: 774, column: 2, scope: !14380)
!14383 = !DILocation(line: 0, scope: !13604, inlinedAt: !14384)
!14384 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14382)
!14385 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14384)
!14386 = !DILocation(line: 777, column: 1, scope: !14357)
!14387 = distinct !DISubprogram(name: "pend_locked", scope: !2336, file: !2336, line: 760, type: !14358, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14388)
!14388 = !{!14389, !14390, !14391}
!14389 = !DILocalVariable(name: "thread", arg: 1, scope: !14387, file: !2336, line: 760, type: !2231)
!14390 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14387, file: !2336, line: 760, type: !2262)
!14391 = !DILocalVariable(name: "timeout", arg: 3, scope: !14387, file: !2336, line: 761, type: !14360)
!14392 = !DILocation(line: 0, scope: !14387)
!14393 = !DILocation(line: 766, column: 2, scope: !14387)
!14394 = !DILocation(line: 767, column: 2, scope: !14387)
!14395 = !DILocation(line: 768, column: 1, scope: !14387)
!14396 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2336, file: !2336, line: 740, type: !14397, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14399)
!14397 = !DISubroutineType(types: !14398)
!14398 = !{null, !2231, !2262}
!14399 = !{!14400, !14401}
!14400 = !DILocalVariable(name: "thread", arg: 1, scope: !14396, file: !2336, line: 740, type: !2231)
!14401 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14396, file: !2336, line: 740, type: !2262)
!14402 = !DILocation(line: 0, scope: !14396)
!14403 = !DILocation(line: 742, column: 2, scope: !14396)
!14404 = !DILocation(line: 743, column: 2, scope: !14396)
!14405 = !DILocation(line: 747, column: 13, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14396, file: !2336, line: 747, column: 6)
!14407 = !DILocation(line: 747, column: 6, scope: !14396)
!14408 = !DILocation(line: 748, column: 16, scope: !14409)
!14409 = distinct !DILexicalBlock(scope: !14406, file: !2336, line: 747, column: 22)
!14410 = !DILocation(line: 748, column: 26, scope: !14409)
!14411 = !DILocation(line: 749, column: 28, scope: !14409)
!14412 = !DILocation(line: 0, scope: !13769, inlinedAt: !14413)
!14413 = distinct !DILocation(line: 749, column: 3, scope: !14409)
!14414 = !DILocation(line: 188, column: 2, scope: !13779, inlinedAt: !14413)
!14415 = !DILocation(line: 188, column: 2, scope: !13781, inlinedAt: !14413)
!14416 = !DILocation(line: 0, scope: !13779, inlinedAt: !14413)
!14417 = !DILocation(line: 189, column: 7, scope: !13784, inlinedAt: !14413)
!14418 = !DILocation(line: 189, column: 35, scope: !13784, inlinedAt: !14413)
!14419 = !DILocation(line: 189, column: 7, scope: !13785, inlinedAt: !14413)
!14420 = !DILocation(line: 191, column: 21, scope: !13789, inlinedAt: !14413)
!14421 = !DILocation(line: 190, column: 4, scope: !13789, inlinedAt: !14413)
!14422 = !DILocation(line: 192, column: 4, scope: !13789, inlinedAt: !14413)
!14423 = distinct !{!14423, !14414, !14424}
!14424 = !DILocation(line: 194, column: 2, scope: !13779, inlinedAt: !14413)
!14425 = !DILocation(line: 196, column: 37, scope: !13769, inlinedAt: !14413)
!14426 = !DILocation(line: 196, column: 2, scope: !13769, inlinedAt: !14413)
!14427 = !DILocation(line: 197, column: 1, scope: !13769, inlinedAt: !14413)
!14428 = !DILocation(line: 751, column: 1, scope: !14396)
!14429 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2336, file: !2336, line: 753, type: !14430, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14432)
!14430 = !DISubroutineType(types: !14431)
!14431 = !{null, !2231, !14360}
!14432 = !{!14433, !14434}
!14433 = !DILocalVariable(name: "thread", arg: 1, scope: !14429, file: !2336, line: 753, type: !2231)
!14434 = !DILocalVariable(name: "timeout", arg: 2, scope: !14429, file: !2336, line: 753, type: !14360)
!14435 = !DILocation(line: 0, scope: !14429)
!14436 = !DILocation(line: 755, column: 7, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14429, file: !2336, line: 755, column: 6)
!14438 = !DILocation(line: 755, column: 6, scope: !14429)
!14439 = !DILocation(line: 756, column: 3, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14437, file: !2336, line: 755, column: 41)
!14441 = !DILocation(line: 757, column: 2, scope: !14440)
!14442 = !DILocation(line: 758, column: 1, scope: !14429)
!14443 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !12794, file: !12794, line: 47, type: !14430, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14444)
!14444 = !{!14445, !14446}
!14445 = !DILocalVariable(name: "thread", arg: 1, scope: !14443, file: !12794, line: 47, type: !2231)
!14446 = !DILocalVariable(name: "ticks", arg: 2, scope: !14443, file: !12794, line: 47, type: !14360)
!14447 = !DILocation(line: 0, scope: !14443)
!14448 = !DILocation(line: 49, column: 30, scope: !14443)
!14449 = !DILocation(line: 49, column: 2, scope: !14443)
!14450 = !DILocation(line: 50, column: 1, scope: !14443)
!14451 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2336, file: !2336, line: 795, type: !2288, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14452)
!14452 = !{!14453, !14454, !14455, !14457, !14458}
!14453 = !DILocalVariable(name: "timeout", arg: 1, scope: !14451, file: !2336, line: 795, type: !2290)
!14454 = !DILocalVariable(name: "thread", scope: !14451, file: !2336, line: 797, type: !2231)
!14455 = !DILocalVariable(name: "__i", scope: !14456, file: !2336, line: 800, type: !13561)
!14456 = distinct !DILexicalBlock(scope: !14451, file: !2336, line: 800, column: 2)
!14457 = !DILocalVariable(name: "__key", scope: !14456, file: !2336, line: 800, type: !13561)
!14458 = !DILocalVariable(name: "killed", scope: !14459, file: !2336, line: 801, type: !136)
!14459 = distinct !DILexicalBlock(scope: !14460, file: !2336, line: 800, column: 26)
!14460 = distinct !DILexicalBlock(scope: !14456, file: !2336, line: 800, column: 2)
!14461 = !DILocation(line: 0, scope: !14451)
!14462 = !DILocation(line: 797, column: 28, scope: !14451)
!14463 = !DILocation(line: 0, scope: !14456)
!14464 = !DILocation(line: 0, scope: !13569, inlinedAt: !14465)
!14465 = distinct !DILocation(line: 800, column: 2, scope: !14456)
!14466 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14467)
!14467 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14465)
!14468 = !DILocation(line: 0, scope: !13578, inlinedAt: !14467)
!14469 = !DILocation(line: 801, column: 27, scope: !14459)
!14470 = !DILocation(line: 801, column: 32, scope: !14459)
!14471 = !DILocation(line: 801, column: 61, scope: !14459)
!14472 = !DILocation(line: 0, scope: !14459)
!14473 = !DILocation(line: 804, column: 7, scope: !14459)
!14474 = !DILocation(line: 805, column: 21, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14476, file: !2336, line: 805, column: 8)
!14476 = distinct !DILexicalBlock(scope: !14477, file: !2336, line: 804, column: 16)
!14477 = distinct !DILexicalBlock(scope: !14459, file: !2336, line: 804, column: 7)
!14478 = !DILocation(line: 805, column: 31, scope: !14475)
!14479 = !DILocation(line: 805, column: 8, scope: !14476)
!14480 = !DILocation(line: 806, column: 5, scope: !14481)
!14481 = distinct !DILexicalBlock(scope: !14475, file: !2336, line: 805, column: 40)
!14482 = !DILocation(line: 807, column: 4, scope: !14481)
!14483 = !DILocation(line: 808, column: 4, scope: !14476)
!14484 = !DILocation(line: 809, column: 4, scope: !14476)
!14485 = !DILocation(line: 810, column: 4, scope: !14476)
!14486 = !DILocation(line: 811, column: 3, scope: !14476)
!14487 = !DILocation(line: 0, scope: !13596, inlinedAt: !14488)
!14488 = distinct !DILocation(line: 800, column: 2, scope: !14460)
!14489 = !DILocation(line: 0, scope: !13604, inlinedAt: !14490)
!14490 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14488)
!14491 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14490)
!14492 = !DILocation(line: 813, column: 1, scope: !14451)
!14493 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2336, file: !2336, line: 779, type: !13527, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14494)
!14494 = !{!14495}
!14495 = !DILocalVariable(name: "thread", arg: 1, scope: !14493, file: !2336, line: 779, type: !2231)
!14496 = !DILocation(line: 0, scope: !14493)
!14497 = !DILocation(line: 781, column: 2, scope: !14493)
!14498 = !DILocation(line: 782, column: 2, scope: !14493)
!14499 = !DILocation(line: 783, column: 15, scope: !14493)
!14500 = !DILocation(line: 783, column: 25, scope: !14493)
!14501 = !DILocation(line: 784, column: 1, scope: !14493)
!14502 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12402, file: !12402, line: 165, type: !13527, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14503)
!14503 = !{!14504}
!14504 = !DILocalVariable(name: "thread", arg: 1, scope: !14502, file: !12402, line: 165, type: !2231)
!14505 = !DILocation(line: 0, scope: !14502)
!14506 = !DILocation(line: 167, column: 15, scope: !14502)
!14507 = !DILocation(line: 167, column: 28, scope: !14502)
!14508 = !DILocation(line: 168, column: 1, scope: !14502)
!14509 = distinct !DISubprogram(name: "unready_thread", scope: !2336, file: !2336, line: 731, type: !13527, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14510)
!14510 = !{!14511}
!14511 = !DILocalVariable(name: "thread", arg: 1, scope: !14509, file: !2336, line: 731, type: !2231)
!14512 = !DILocation(line: 0, scope: !14509)
!14513 = !DILocation(line: 733, column: 6, scope: !14514)
!14514 = distinct !DILexicalBlock(scope: !14509, file: !2336, line: 733, column: 6)
!14515 = !DILocation(line: 733, column: 6, scope: !14509)
!14516 = !DILocation(line: 0, scope: !13738, inlinedAt: !14517)
!14517 = distinct !DILocation(line: 734, column: 3, scope: !14518)
!14518 = distinct !DILexicalBlock(scope: !14514, file: !2336, line: 733, column: 34)
!14519 = !DILocation(line: 266, column: 15, scope: !13738, inlinedAt: !14517)
!14520 = !DILocation(line: 266, column: 28, scope: !13738, inlinedAt: !14517)
!14521 = !DILocation(line: 0, scope: !13746, inlinedAt: !14522)
!14522 = distinct !DILocation(line: 268, column: 3, scope: !13750, inlinedAt: !14517)
!14523 = !DILocation(line: 234, column: 2, scope: !13746, inlinedAt: !14522)
!14524 = !DILocation(line: 735, column: 2, scope: !14518)
!14525 = !DILocation(line: 736, column: 25, scope: !14509)
!14526 = !DILocation(line: 736, column: 22, scope: !14509)
!14527 = !DILocation(line: 736, column: 2, scope: !14509)
!14528 = !DILocation(line: 737, column: 1, scope: !14509)
!14529 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12402, file: !12402, line: 160, type: !13527, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14530)
!14530 = !{!14531}
!14531 = !DILocalVariable(name: "thread", arg: 1, scope: !14529, file: !12402, line: 160, type: !2231)
!14532 = !DILocation(line: 0, scope: !14529)
!14533 = !DILocation(line: 162, column: 15, scope: !14529)
!14534 = !DILocation(line: 162, column: 28, scope: !14529)
!14535 = !DILocation(line: 163, column: 1, scope: !14529)
!14536 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2336, file: !2336, line: 786, type: !13527, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14537)
!14537 = !{!14538, !14539, !14541}
!14538 = !DILocalVariable(name: "thread", arg: 1, scope: !14536, file: !2336, line: 786, type: !2231)
!14539 = !DILocalVariable(name: "__i", scope: !14540, file: !2336, line: 788, type: !13561)
!14540 = distinct !DILexicalBlock(scope: !14536, file: !2336, line: 788, column: 2)
!14541 = !DILocalVariable(name: "__key", scope: !14540, file: !2336, line: 788, type: !13561)
!14542 = !DILocation(line: 0, scope: !14536)
!14543 = !DILocation(line: 0, scope: !14540)
!14544 = !DILocation(line: 0, scope: !13569, inlinedAt: !14545)
!14545 = distinct !DILocation(line: 788, column: 2, scope: !14540)
!14546 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14547)
!14547 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14545)
!14548 = !DILocation(line: 0, scope: !13578, inlinedAt: !14547)
!14549 = !DILocation(line: 789, column: 3, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !2336, line: 788, column: 26)
!14551 = distinct !DILexicalBlock(scope: !14540, file: !2336, line: 788, column: 2)
!14552 = !DILocation(line: 0, scope: !13596, inlinedAt: !14553)
!14553 = distinct !DILocation(line: 788, column: 2, scope: !14551)
!14554 = !DILocation(line: 0, scope: !13604, inlinedAt: !14555)
!14555 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14553)
!14556 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14555)
!14557 = !DILocation(line: 791, column: 1, scope: !14536)
!14558 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2336, file: !2336, line: 816, type: !14559, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14561)
!14559 = !DISubroutineType(types: !14560)
!14560 = !{!107, !162, !2262, !14360}
!14561 = !{!14562, !14563, !14564, !14565, !14566, !14568}
!14562 = !DILocalVariable(name: "key", arg: 1, scope: !14558, file: !2336, line: 816, type: !162)
!14563 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14558, file: !2336, line: 816, type: !2262)
!14564 = !DILocalVariable(name: "timeout", arg: 3, scope: !14558, file: !2336, line: 816, type: !14360)
!14565 = !DILocalVariable(name: "ret", scope: !14558, file: !2336, line: 828, type: !107)
!14566 = !DILocalVariable(name: "__i", scope: !14567, file: !2336, line: 829, type: !13561)
!14567 = distinct !DILexicalBlock(scope: !14558, file: !2336, line: 829, column: 2)
!14568 = !DILocalVariable(name: "__key", scope: !14567, file: !2336, line: 829, type: !13561)
!14569 = !DILocation(line: 0, scope: !14558)
!14570 = !DILocation(line: 823, column: 14, scope: !14558)
!14571 = !DILocation(line: 823, column: 2, scope: !14558)
!14572 = !DILocation(line: 826, column: 20, scope: !14558)
!14573 = !DILocation(line: 826, column: 18, scope: !14558)
!14574 = !DILocation(line: 828, column: 12, scope: !14558)
!14575 = !DILocation(line: 0, scope: !14567)
!14576 = !DILocation(line: 0, scope: !13569, inlinedAt: !14577)
!14577 = distinct !DILocation(line: 829, column: 2, scope: !14567)
!14578 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14579)
!14579 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14577)
!14580 = !DILocation(line: 0, scope: !13578, inlinedAt: !14579)
!14581 = !DILocation(line: 830, column: 7, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14583, file: !2336, line: 830, column: 7)
!14583 = distinct !DILexicalBlock(scope: !14584, file: !2336, line: 829, column: 26)
!14584 = distinct !DILexicalBlock(scope: !14567, file: !2336, line: 829, column: 2)
!14585 = !DILocation(line: 830, column: 26, scope: !14582)
!14586 = !DILocation(line: 830, column: 23, scope: !14582)
!14587 = !DILocation(line: 830, column: 7, scope: !14583)
!14588 = !DILocation(line: 831, column: 20, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14582, file: !2336, line: 830, column: 36)
!14590 = !DILocation(line: 832, column: 3, scope: !14589)
!14591 = !DILocation(line: 0, scope: !13596, inlinedAt: !14592)
!14592 = distinct !DILocation(line: 829, column: 2, scope: !14584)
!14593 = !DILocation(line: 0, scope: !13604, inlinedAt: !14594)
!14594 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14592)
!14595 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14594)
!14596 = !DILocation(line: 834, column: 2, scope: !14558)
!14597 = distinct !DISubprogram(name: "z_pend_curr", scope: !2336, file: !2336, line: 840, type: !14598, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14600)
!14598 = !DISubroutineType(types: !14599)
!14599 = !{!107, !13572, !13561, !2262, !14360}
!14600 = !{!14601, !14602, !14603, !14604}
!14601 = !DILocalVariable(name: "lock", arg: 1, scope: !14597, file: !2336, line: 840, type: !13572)
!14602 = !DILocalVariable(name: "key", arg: 2, scope: !14597, file: !2336, line: 840, type: !13561)
!14603 = !DILocalVariable(name: "wait_q", arg: 3, scope: !14597, file: !2336, line: 841, type: !2262)
!14604 = !DILocalVariable(name: "timeout", arg: 4, scope: !14597, file: !2336, line: 841, type: !14360)
!14605 = !DILocation(line: 0, scope: !14597)
!14606 = !DILocation(line: 844, column: 20, scope: !14597)
!14607 = !DILocation(line: 844, column: 18, scope: !14597)
!14608 = !DILocation(line: 0, scope: !13569, inlinedAt: !14609)
!14609 = distinct !DILocation(line: 856, column: 9, scope: !14597)
!14610 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14611)
!14611 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14609)
!14612 = !DILocation(line: 0, scope: !13578, inlinedAt: !14611)
!14613 = !DILocation(line: 857, column: 14, scope: !14597)
!14614 = !DILocation(line: 857, column: 2, scope: !14597)
!14615 = !DILocation(line: 0, scope: !14180, inlinedAt: !14616)
!14616 = distinct !DILocation(line: 859, column: 9, scope: !14597)
!14617 = !DILocation(line: 196, column: 9, scope: !14180, inlinedAt: !14616)
!14618 = !DILocation(line: 859, column: 2, scope: !14597)
!14619 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2336, file: !2336, line: 862, type: !14620, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14622)
!14620 = !DISubroutineType(types: !14621)
!14621 = !{!2231, !2262}
!14622 = !{!14623, !14624, !14625, !14627}
!14623 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14619, file: !2336, line: 862, type: !2262)
!14624 = !DILocalVariable(name: "thread", scope: !14619, file: !2336, line: 864, type: !2231)
!14625 = !DILocalVariable(name: "__i", scope: !14626, file: !2336, line: 866, type: !13561)
!14626 = distinct !DILexicalBlock(scope: !14619, file: !2336, line: 866, column: 2)
!14627 = !DILocalVariable(name: "__key", scope: !14626, file: !2336, line: 866, type: !13561)
!14628 = !DILocation(line: 0, scope: !14619)
!14629 = !DILocation(line: 0, scope: !14626)
!14630 = !DILocation(line: 0, scope: !13569, inlinedAt: !14631)
!14631 = distinct !DILocation(line: 866, column: 2, scope: !14626)
!14632 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14633)
!14633 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14631)
!14634 = !DILocation(line: 0, scope: !13578, inlinedAt: !14633)
!14635 = !DILocation(line: 867, column: 12, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14637, file: !2336, line: 866, column: 26)
!14637 = distinct !DILexicalBlock(scope: !14626, file: !2336, line: 866, column: 2)
!14638 = !DILocation(line: 869, column: 14, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14636, file: !2336, line: 869, column: 7)
!14640 = !DILocation(line: 869, column: 7, scope: !14636)
!14641 = !DILocation(line: 870, column: 4, scope: !14642)
!14642 = distinct !DILexicalBlock(scope: !14639, file: !2336, line: 869, column: 23)
!14643 = !DILocation(line: 871, column: 3, scope: !14642)
!14644 = !DILocation(line: 0, scope: !13596, inlinedAt: !14645)
!14645 = distinct !DILocation(line: 866, column: 2, scope: !14637)
!14646 = !DILocation(line: 0, scope: !13604, inlinedAt: !14647)
!14647 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14645)
!14648 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14647)
!14649 = !DILocation(line: 874, column: 2, scope: !14619)
!14650 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2336, file: !2336, line: 877, type: !14620, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14651)
!14651 = !{!14652, !14653, !14654, !14656}
!14652 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14650, file: !2336, line: 877, type: !2262)
!14653 = !DILocalVariable(name: "thread", scope: !14650, file: !2336, line: 879, type: !2231)
!14654 = !DILocalVariable(name: "__i", scope: !14655, file: !2336, line: 881, type: !13561)
!14655 = distinct !DILexicalBlock(scope: !14650, file: !2336, line: 881, column: 2)
!14656 = !DILocalVariable(name: "__key", scope: !14655, file: !2336, line: 881, type: !13561)
!14657 = !DILocation(line: 0, scope: !14650)
!14658 = !DILocation(line: 0, scope: !14655)
!14659 = !DILocation(line: 0, scope: !13569, inlinedAt: !14660)
!14660 = distinct !DILocation(line: 881, column: 2, scope: !14655)
!14661 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14660)
!14663 = !DILocation(line: 0, scope: !13578, inlinedAt: !14662)
!14664 = !DILocation(line: 882, column: 12, scope: !14665)
!14665 = distinct !DILexicalBlock(scope: !14666, file: !2336, line: 881, column: 26)
!14666 = distinct !DILexicalBlock(scope: !14655, file: !2336, line: 881, column: 2)
!14667 = !DILocation(line: 884, column: 14, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14665, file: !2336, line: 884, column: 7)
!14669 = !DILocation(line: 884, column: 7, scope: !14665)
!14670 = !DILocation(line: 885, column: 4, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14668, file: !2336, line: 884, column: 23)
!14672 = !DILocation(line: 886, column: 10, scope: !14671)
!14673 = !DILocation(line: 887, column: 3, scope: !14671)
!14674 = !DILocation(line: 0, scope: !13596, inlinedAt: !14675)
!14675 = distinct !DILocation(line: 881, column: 2, scope: !14666)
!14676 = !DILocation(line: 0, scope: !13604, inlinedAt: !14677)
!14677 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14675)
!14678 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14677)
!14679 = !DILocation(line: 890, column: 2, scope: !14650)
!14680 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2336, file: !2336, line: 893, type: !13527, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14681)
!14681 = !{!14682}
!14682 = !DILocalVariable(name: "thread", arg: 1, scope: !14680, file: !2336, line: 893, type: !2231)
!14683 = !DILocation(line: 0, scope: !14680)
!14684 = !DILocation(line: 0, scope: !14536, inlinedAt: !14685)
!14685 = distinct !DILocation(line: 895, column: 2, scope: !14680)
!14686 = !DILocation(line: 0, scope: !14540, inlinedAt: !14685)
!14687 = !DILocation(line: 0, scope: !13569, inlinedAt: !14688)
!14688 = distinct !DILocation(line: 788, column: 2, scope: !14540, inlinedAt: !14685)
!14689 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14690)
!14690 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14688)
!14691 = !DILocation(line: 0, scope: !13578, inlinedAt: !14690)
!14692 = !DILocation(line: 789, column: 3, scope: !14550, inlinedAt: !14685)
!14693 = !DILocation(line: 0, scope: !13596, inlinedAt: !14694)
!14694 = distinct !DILocation(line: 788, column: 2, scope: !14551, inlinedAt: !14685)
!14695 = !DILocation(line: 0, scope: !13604, inlinedAt: !14696)
!14696 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14694)
!14697 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14696)
!14698 = !DILocation(line: 896, column: 8, scope: !14680)
!14699 = !DILocation(line: 897, column: 1, scope: !14680)
!14700 = distinct !DISubprogram(name: "z_set_prio", scope: !2336, file: !2336, line: 902, type: !13889, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14701)
!14701 = !{!14702, !14703, !14704, !14705, !14707}
!14702 = !DILocalVariable(name: "thread", arg: 1, scope: !14700, file: !2336, line: 902, type: !2231)
!14703 = !DILocalVariable(name: "prio", arg: 2, scope: !14700, file: !2336, line: 902, type: !107)
!14704 = !DILocalVariable(name: "need_sched", scope: !14700, file: !2336, line: 904, type: !136)
!14705 = !DILocalVariable(name: "__i", scope: !14706, file: !2336, line: 906, type: !13561)
!14706 = distinct !DILexicalBlock(scope: !14700, file: !2336, line: 906, column: 2)
!14707 = !DILocalVariable(name: "__key", scope: !14706, file: !2336, line: 906, type: !13561)
!14708 = !DILocation(line: 0, scope: !14700)
!14709 = !DILocation(line: 0, scope: !14706)
!14710 = !DILocation(line: 0, scope: !13569, inlinedAt: !14711)
!14711 = distinct !DILocation(line: 906, column: 2, scope: !14706)
!14712 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14713)
!14713 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14711)
!14714 = !DILocation(line: 0, scope: !13578, inlinedAt: !14713)
!14715 = !DILocation(line: 907, column: 16, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14717, file: !2336, line: 906, column: 26)
!14717 = distinct !DILexicalBlock(scope: !14706, file: !2336, line: 906, column: 2)
!14718 = !DILocation(line: 909, column: 7, scope: !14716)
!14719 = !DILocation(line: 0, scope: !13738, inlinedAt: !14720)
!14720 = distinct !DILocation(line: 912, column: 5, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14722, file: !2336, line: 911, column: 63)
!14722 = distinct !DILexicalBlock(scope: !14723, file: !2336, line: 911, column: 8)
!14723 = distinct !DILexicalBlock(scope: !14724, file: !2336, line: 909, column: 19)
!14724 = distinct !DILexicalBlock(scope: !14716, file: !2336, line: 909, column: 7)
!14725 = !DILocation(line: 266, column: 28, scope: !13738, inlinedAt: !14720)
!14726 = !DILocation(line: 0, scope: !13746, inlinedAt: !14727)
!14727 = distinct !DILocation(line: 268, column: 3, scope: !13750, inlinedAt: !14720)
!14728 = !DILocation(line: 234, column: 2, scope: !13746, inlinedAt: !14727)
!14729 = !DILocation(line: 913, column: 23, scope: !14721)
!14730 = !DILocation(line: 0, scope: !13755, inlinedAt: !14731)
!14731 = distinct !DILocation(line: 914, column: 5, scope: !14721)
!14732 = !DILocation(line: 252, column: 28, scope: !13755, inlinedAt: !14731)
!14733 = !DILocation(line: 0, scope: !13762, inlinedAt: !14734)
!14734 = distinct !DILocation(line: 254, column: 3, scope: !13766, inlinedAt: !14731)
!14735 = !DILocation(line: 0, scope: !13769, inlinedAt: !14736)
!14736 = distinct !DILocation(line: 229, column: 2, scope: !13762, inlinedAt: !14734)
!14737 = !DILocation(line: 188, column: 2, scope: !13779, inlinedAt: !14736)
!14738 = !DILocation(line: 188, column: 2, scope: !13781, inlinedAt: !14736)
!14739 = !DILocation(line: 0, scope: !13779, inlinedAt: !14736)
!14740 = !DILocation(line: 189, column: 7, scope: !13784, inlinedAt: !14736)
!14741 = !DILocation(line: 189, column: 35, scope: !13784, inlinedAt: !14736)
!14742 = !DILocation(line: 189, column: 7, scope: !13785, inlinedAt: !14736)
!14743 = !DILocation(line: 190, column: 4, scope: !13789, inlinedAt: !14736)
!14744 = !DILocation(line: 192, column: 4, scope: !13789, inlinedAt: !14736)
!14745 = distinct !{!14745, !14737, !14746}
!14746 = !DILocation(line: 194, column: 2, scope: !13779, inlinedAt: !14736)
!14747 = !DILocation(line: 196, column: 2, scope: !13769, inlinedAt: !14736)
!14748 = !DILocation(line: 197, column: 1, scope: !13769, inlinedAt: !14736)
!14749 = !DILocation(line: 918, column: 4, scope: !14723)
!14750 = !DILocation(line: 919, column: 3, scope: !14723)
!14751 = !DILocation(line: 920, column: 22, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14724, file: !2336, line: 919, column: 10)
!14753 = !DILocation(line: 0, scope: !13596, inlinedAt: !14754)
!14754 = distinct !DILocation(line: 906, column: 2, scope: !14717)
!14755 = !DILocation(line: 0, scope: !13604, inlinedAt: !14756)
!14756 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14754)
!14757 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14756)
!14758 = !DILocation(line: 926, column: 2, scope: !14700)
!14759 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2336, file: !2336, line: 929, type: !14760, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14762)
!14760 = !DISubroutineType(types: !14761)
!14761 = !{null, !2231, !107}
!14762 = !{!14763, !14764, !14765}
!14763 = !DILocalVariable(name: "thread", arg: 1, scope: !14759, file: !2336, line: 929, type: !2231)
!14764 = !DILocalVariable(name: "prio", arg: 2, scope: !14759, file: !2336, line: 929, type: !107)
!14765 = !DILocalVariable(name: "need_sched", scope: !14759, file: !2336, line: 931, type: !136)
!14766 = !DILocation(line: 0, scope: !14759)
!14767 = !DILocation(line: 931, column: 20, scope: !14759)
!14768 = !DILocation(line: 935, column: 17, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14759, file: !2336, line: 935, column: 6)
!14770 = !DILocation(line: 935, column: 20, scope: !14769)
!14771 = !DILocation(line: 935, column: 35, scope: !14769)
!14772 = !DILocation(line: 935, column: 48, scope: !14769)
!14773 = !DILocation(line: 935, column: 6, scope: !14759)
!14774 = !DILocation(line: 936, column: 3, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14769, file: !2336, line: 935, column: 55)
!14776 = !DILocation(line: 937, column: 2, scope: !14775)
!14777 = !DILocation(line: 938, column: 1, scope: !14759)
!14778 = distinct !DISubprogram(name: "k_sched_lock", scope: !2336, file: !2336, line: 987, type: !3130, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14779)
!14779 = !{!14780, !14782}
!14780 = !DILocalVariable(name: "__i", scope: !14781, file: !2336, line: 989, type: !13561)
!14781 = distinct !DILexicalBlock(scope: !14778, file: !2336, line: 989, column: 2)
!14782 = !DILocalVariable(name: "__key", scope: !14781, file: !2336, line: 989, type: !13561)
!14783 = !DILocation(line: 0, scope: !14781)
!14784 = !DILocation(line: 0, scope: !13569, inlinedAt: !14785)
!14785 = distinct !DILocation(line: 989, column: 2, scope: !14781)
!14786 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14787)
!14787 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14785)
!14788 = !DILocation(line: 0, scope: !13578, inlinedAt: !14787)
!14789 = !DILocation(line: 992, column: 3, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14791, file: !2336, line: 989, column: 26)
!14791 = distinct !DILexicalBlock(scope: !14781, file: !2336, line: 989, column: 2)
!14792 = !DILocation(line: 0, scope: !13596, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 989, column: 2, scope: !14791)
!14794 = !DILocation(line: 0, scope: !13604, inlinedAt: !14795)
!14795 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14793)
!14796 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14795)
!14797 = !DILocation(line: 994, column: 1, scope: !14778)
!14798 = distinct !DISubprogram(name: "z_sched_lock", scope: !12402, file: !12402, line: 251, type: !3130, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!14799 = !DILocation(line: 256, column: 4, scope: !14798)
!14800 = !DILocation(line: 256, column: 19, scope: !14798)
!14801 = !DILocation(line: 256, column: 2, scope: !14798)
!14802 = !DILocation(line: 258, column: 2, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14798, file: !12402, line: 258, column: 2)
!14804 = !{i64 2154865989}
!14805 = !DILocation(line: 259, column: 1, scope: !14798)
!14806 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2336, file: !2336, line: 996, type: !3130, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14807)
!14807 = !{!14808, !14810}
!14808 = !DILocalVariable(name: "__i", scope: !14809, file: !2336, line: 998, type: !13561)
!14809 = distinct !DILexicalBlock(scope: !14806, file: !2336, line: 998, column: 2)
!14810 = !DILocalVariable(name: "__key", scope: !14809, file: !2336, line: 998, type: !13561)
!14811 = !DILocation(line: 0, scope: !14809)
!14812 = !DILocation(line: 0, scope: !13569, inlinedAt: !14813)
!14813 = distinct !DILocation(line: 998, column: 2, scope: !14809)
!14814 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !14815)
!14815 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !14813)
!14816 = !DILocation(line: 0, scope: !13578, inlinedAt: !14815)
!14817 = !DILocation(line: 1002, column: 5, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14819, file: !2336, line: 998, column: 26)
!14819 = distinct !DILexicalBlock(scope: !14809, file: !2336, line: 998, column: 2)
!14820 = !DILocation(line: 1002, column: 20, scope: !14818)
!14821 = !DILocation(line: 1002, column: 3, scope: !14818)
!14822 = !DILocation(line: 1003, column: 3, scope: !14818)
!14823 = !DILocation(line: 0, scope: !13596, inlinedAt: !14824)
!14824 = distinct !DILocation(line: 998, column: 2, scope: !14819)
!14825 = !DILocation(line: 0, scope: !13604, inlinedAt: !14826)
!14826 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !14824)
!14827 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !14826)
!14828 = !DILocation(line: 1011, column: 2, scope: !14806)
!14829 = !DILocation(line: 1012, column: 1, scope: !14806)
!14830 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2336, file: !2336, line: 1014, type: !13877, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!14831 = !DILocation(line: 1028, column: 25, scope: !14830)
!14832 = !DILocation(line: 1028, column: 2, scope: !14830)
!14833 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2336, file: !2336, line: 1155, type: !14834, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14836)
!14834 = !DISubroutineType(types: !14835)
!14835 = !{!136, !2260, !2260}
!14836 = !{!14837, !14838, !14839, !14840, !14841}
!14837 = !DILocalVariable(name: "a", arg: 1, scope: !14833, file: !2336, line: 1155, type: !2260)
!14838 = !DILocalVariable(name: "b", arg: 2, scope: !14833, file: !2336, line: 1155, type: !2260)
!14839 = !DILocalVariable(name: "thread_a", scope: !14833, file: !2336, line: 1157, type: !2231)
!14840 = !DILocalVariable(name: "thread_b", scope: !14833, file: !2336, line: 1157, type: !2231)
!14841 = !DILocalVariable(name: "cmp", scope: !14833, file: !2336, line: 1158, type: !727)
!14842 = !DILocation(line: 0, scope: !14833)
!14843 = !DILocation(line: 1160, column: 13, scope: !14833)
!14844 = !DILocation(line: 1161, column: 13, scope: !14833)
!14845 = !DILocation(line: 1163, column: 8, scope: !14833)
!14846 = !DILocation(line: 1165, column: 10, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14833, file: !2336, line: 1165, column: 6)
!14848 = !DILocation(line: 1165, column: 6, scope: !14833)
!14849 = !DILocation(line: 1167, column: 17, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14847, file: !2336, line: 1167, column: 13)
!14851 = !DILocation(line: 1167, column: 13, scope: !14847)
!14852 = !DILocation(line: 1170, column: 25, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14850, file: !2336, line: 1169, column: 9)
!14854 = !DILocation(line: 1170, column: 52, scope: !14853)
!14855 = !DILocation(line: 1170, column: 35, scope: !14853)
!14856 = !DILocation(line: 1170, column: 3, scope: !14853)
!14857 = !DILocation(line: 0, scope: !14847)
!14858 = !DILocation(line: 1173, column: 1, scope: !14833)
!14859 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2336, file: !2336, line: 1175, type: !14860, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14875)
!14860 = !DISubroutineType(types: !14861)
!14861 = !{null, !14862, !2231}
!14862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14863, size: 32)
!14863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !14864, line: 37, size: 128, elements: !14865)
!14864 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14865 = !{!14866, !14874}
!14866 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !14863, file: !14864, line: 38, baseType: !14867, size: 96)
!14867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !384, line: 83, size: 96, elements: !14868)
!14868 = !{!14869, !14870, !14873}
!14869 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !14867, file: !384, line: 84, baseType: !2260, size: 32)
!14870 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !14867, file: !384, line: 85, baseType: !14871, size: 32, offset: 32)
!14871 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !384, line: 81, baseType: !14872)
!14872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14834, size: 32)
!14873 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !14867, file: !384, line: 86, baseType: !107, size: 32, offset: 64)
!14874 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !14863, file: !14864, line: 39, baseType: !107, size: 32, offset: 96)
!14875 = !{!14876, !14877, !14878, !14879, !14888}
!14876 = !DILocalVariable(name: "pq", arg: 1, scope: !14859, file: !2336, line: 1175, type: !14862)
!14877 = !DILocalVariable(name: "thread", arg: 2, scope: !14859, file: !2336, line: 1175, type: !2231)
!14878 = !DILocalVariable(name: "t", scope: !14859, file: !2336, line: 1177, type: !2231)
!14879 = !DILocalVariable(name: "__f", scope: !14880, file: !2336, line: 1190, type: !14883)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !2336, line: 1190, column: 3)
!14881 = distinct !DILexicalBlock(scope: !14882, file: !2336, line: 1189, column: 27)
!14882 = distinct !DILexicalBlock(scope: !14859, file: !2336, line: 1189, column: 6)
!14883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !384, line: 155, size: 96, elements: !14884)
!14884 = !{!14885, !14886, !14887}
!14885 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !14883, file: !384, line: 156, baseType: !2331, size: 32)
!14886 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !14883, file: !384, line: 157, baseType: !182, size: 32, offset: 32)
!14887 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !14883, file: !384, line: 158, baseType: !727, size: 32, offset: 64)
!14888 = !DILocalVariable(name: "n", scope: !14889, file: !2336, line: 1190, type: !2260)
!14889 = distinct !DILexicalBlock(scope: !14890, file: !2336, line: 1190, column: 3)
!14890 = distinct !DILexicalBlock(scope: !14880, file: !2336, line: 1190, column: 3)
!14891 = !DILocation(line: 0, scope: !14859)
!14892 = !DILocation(line: 1181, column: 31, scope: !14859)
!14893 = !DILocation(line: 1181, column: 45, scope: !14859)
!14894 = !DILocation(line: 1181, column: 15, scope: !14859)
!14895 = !DILocation(line: 1181, column: 25, scope: !14859)
!14896 = !DILocation(line: 1189, column: 11, scope: !14882)
!14897 = !DILocation(line: 1189, column: 7, scope: !14882)
!14898 = !DILocation(line: 1189, column: 6, scope: !14859)
!14899 = !DILocation(line: 1190, column: 3, scope: !14880)
!14900 = !DILocation(line: 1190, column: 3, scope: !14889)
!14901 = !DILocation(line: 0, scope: !14889)
!14902 = !DILocation(line: 1190, column: 3, scope: !14890)
!14903 = !DILocation(line: 1193, column: 2, scope: !14881)
!14904 = !DILocation(line: 1191, column: 42, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14890, file: !2336, line: 1190, column: 54)
!14906 = !DILocation(line: 1191, column: 12, scope: !14905)
!14907 = !DILocation(line: 1191, column: 22, scope: !14905)
!14908 = distinct !{!14908, !14899, !14909}
!14909 = !DILocation(line: 1192, column: 3, scope: !14880)
!14910 = !DILocation(line: 1195, column: 17, scope: !14859)
!14911 = !DILocation(line: 1195, column: 37, scope: !14859)
!14912 = !DILocation(line: 1195, column: 2, scope: !14859)
!14913 = !DILocation(line: 1196, column: 1, scope: !14859)
!14914 = !DISubprogram(name: "z_rb_foreach_next", scope: !384, file: !384, line: 176, type: !14915, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{!2260, !14917, !14918}
!14917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14867, size: 32)
!14918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14883, size: 32)
!14919 = !DISubprogram(name: "rb_insert", scope: !384, file: !384, line: 105, type: !14920, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14920 = !DISubroutineType(types: !14921)
!14921 = !{null, !14917, !2260}
!14922 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2336, file: !2336, line: 1198, type: !14860, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14923)
!14923 = !{!14924, !14925}
!14924 = !DILocalVariable(name: "pq", arg: 1, scope: !14922, file: !2336, line: 1198, type: !14862)
!14925 = !DILocalVariable(name: "thread", arg: 2, scope: !14922, file: !2336, line: 1198, type: !2231)
!14926 = !DILocation(line: 0, scope: !14922)
!14927 = !DILocation(line: 1202, column: 17, scope: !14922)
!14928 = !DILocation(line: 1202, column: 37, scope: !14922)
!14929 = !DILocation(line: 1202, column: 2, scope: !14922)
!14930 = !DILocation(line: 1204, column: 16, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14922, file: !2336, line: 1204, column: 6)
!14932 = !DILocation(line: 1204, column: 7, scope: !14931)
!14933 = !DILocation(line: 1204, column: 6, scope: !14922)
!14934 = !DILocation(line: 1205, column: 7, scope: !14935)
!14935 = distinct !DILexicalBlock(scope: !14931, file: !2336, line: 1204, column: 22)
!14936 = !DILocation(line: 1205, column: 22, scope: !14935)
!14937 = !DILocation(line: 1206, column: 2, scope: !14935)
!14938 = !DILocation(line: 1207, column: 1, scope: !14922)
!14939 = !DISubprogram(name: "rb_remove", scope: !384, file: !384, line: 110, type: !14920, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14940 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2336, file: !2336, line: 1209, type: !14941, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14943)
!14941 = !DISubroutineType(types: !14942)
!14942 = !{!2231, !14862}
!14943 = !{!14944, !14945, !14946}
!14944 = !DILocalVariable(name: "pq", arg: 1, scope: !14940, file: !2336, line: 1209, type: !14862)
!14945 = !DILocalVariable(name: "thread", scope: !14940, file: !2336, line: 1211, type: !2231)
!14946 = !DILocalVariable(name: "n", scope: !14940, file: !2336, line: 1212, type: !2260)
!14947 = !DILocation(line: 0, scope: !14940)
!14948 = !DILocation(line: 1212, column: 37, scope: !14940)
!14949 = !DILocation(line: 1212, column: 21, scope: !14940)
!14950 = !DILocation(line: 1217, column: 2, scope: !14940)
!14951 = distinct !DISubprogram(name: "rb_get_min", scope: !384, file: !384, line: 115, type: !14952, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14954)
!14952 = !DISubroutineType(types: !14953)
!14953 = !{!2260, !14917}
!14954 = !{!14955}
!14955 = !DILocalVariable(name: "tree", arg: 1, scope: !14951, file: !384, line: 115, type: !14917)
!14956 = !DILocation(line: 0, scope: !14951)
!14957 = !DILocation(line: 117, column: 9, scope: !14951)
!14958 = !DILocation(line: 117, column: 2, scope: !14951)
!14959 = !DISubprogram(name: "z_rb_get_minmax", scope: !384, file: !384, line: 100, type: !14960, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !250)
!14960 = !DISubroutineType(types: !14961)
!14961 = !{!2260, !14917, !133}
!14962 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2336, file: !2336, line: 1246, type: !14963, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14971)
!14963 = !DISubroutineType(types: !14964)
!14964 = !{!2231, !14965}
!14965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14966, size: 32)
!14966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !14864, line: 53, size: 2080, elements: !14967)
!14967 = !{!14968, !14970}
!14968 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !14966, file: !14864, line: 54, baseType: !14969, size: 2048)
!14969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2267, size: 2048, elements: !219)
!14970 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !14966, file: !14864, line: 55, baseType: !32, size: 32, offset: 2048)
!14971 = !{!14972, !14973, !14974, !14975}
!14972 = !DILocalVariable(name: "pq", arg: 1, scope: !14962, file: !2336, line: 1246, type: !14965)
!14973 = !DILocalVariable(name: "thread", scope: !14962, file: !2336, line: 1252, type: !2231)
!14974 = !DILocalVariable(name: "l", scope: !14962, file: !2336, line: 1253, type: !13772)
!14975 = !DILocalVariable(name: "n", scope: !14962, file: !2336, line: 1254, type: !2332)
!14976 = !DILocation(line: 0, scope: !14962)
!14977 = !DILocation(line: 1248, column: 11, scope: !14978)
!14978 = distinct !DILexicalBlock(scope: !14962, file: !2336, line: 1248, column: 6)
!14979 = !DILocation(line: 1248, column: 7, scope: !14978)
!14980 = !DILocation(line: 1248, column: 6, scope: !14962)
!14981 = !DILocation(line: 1253, column: 31, scope: !14962)
!14982 = !DILocation(line: 1253, column: 20, scope: !14962)
!14983 = !DILocation(line: 1254, column: 19, scope: !14962)
!14984 = !DILocation(line: 1260, column: 1, scope: !14962)
!14985 = distinct !DISubprogram(name: "z_unpend_all", scope: !2336, file: !2336, line: 1262, type: !14986, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !14988)
!14986 = !DISubroutineType(types: !14987)
!14987 = !{!107, !2262}
!14988 = !{!14989, !14990, !14991}
!14989 = !DILocalVariable(name: "wait_q", arg: 1, scope: !14985, file: !2336, line: 1262, type: !2262)
!14990 = !DILocalVariable(name: "need_sched", scope: !14985, file: !2336, line: 1264, type: !107)
!14991 = !DILocalVariable(name: "thread", scope: !14985, file: !2336, line: 1265, type: !2231)
!14992 = !DILocation(line: 0, scope: !14985)
!14993 = !DILocation(line: 1267, column: 19, scope: !14985)
!14994 = !DILocation(line: 1267, column: 41, scope: !14985)
!14995 = !DILocation(line: 1267, column: 2, scope: !14985)
!14996 = !DILocation(line: 1268, column: 3, scope: !14997)
!14997 = distinct !DILexicalBlock(scope: !14985, file: !2336, line: 1267, column: 50)
!14998 = !DILocation(line: 1269, column: 3, scope: !14997)
!14999 = distinct !{!14999, !14995, !15000}
!15000 = !DILocation(line: 1271, column: 2, scope: !14985)
!15001 = !DILocation(line: 1273, column: 2, scope: !14985)
!15002 = distinct !DISubprogram(name: "z_waitq_head", scope: !12726, file: !12726, line: 52, type: !14620, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15003)
!15003 = !{!15004}
!15004 = !DILocalVariable(name: "w", arg: 1, scope: !15002, file: !12726, line: 52, type: !2262)
!15005 = !DILocation(line: 0, scope: !15002)
!15006 = !DILocation(line: 54, column: 52, scope: !15002)
!15007 = !DILocation(line: 54, column: 28, scope: !15002)
!15008 = !DILocation(line: 54, column: 9, scope: !15002)
!15009 = !DILocation(line: 54, column: 2, scope: !15002)
!15010 = distinct !DISubprogram(name: "init_ready_q", scope: !2336, file: !2336, line: 1276, type: !15011, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15018)
!15011 = !DISubroutineType(types: !15012)
!15012 = !{null, !15013}
!15013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15014, size: 32)
!15014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !228, line: 83, size: 96, elements: !15015)
!15015 = !{!15016, !15017}
!15016 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15014, file: !228, line: 86, baseType: !2231, size: 32)
!15017 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15014, file: !228, line: 90, baseType: !2267, size: 64, offset: 32)
!15018 = !{!15019}
!15019 = !DILocalVariable(name: "rq", arg: 1, scope: !15010, file: !2336, line: 1276, type: !15013)
!15020 = !DILocation(line: 0, scope: !15010)
!15021 = !DILocation(line: 1289, column: 22, scope: !15010)
!15022 = !DILocation(line: 1289, column: 2, scope: !15010)
!15023 = !DILocation(line: 1291, column: 1, scope: !15010)
!15024 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !15025, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15027)
!15025 = !DISubroutineType(types: !15026)
!15026 = !{null, !13772}
!15027 = !{!15028}
!15028 = !DILocalVariable(name: "list", arg: 1, scope: !15024, file: !233, line: 197, type: !13772)
!15029 = !DILocation(line: 0, scope: !15024)
!15030 = !DILocation(line: 199, column: 8, scope: !15024)
!15031 = !DILocation(line: 199, column: 13, scope: !15024)
!15032 = !DILocation(line: 200, column: 8, scope: !15024)
!15033 = !DILocation(line: 200, column: 13, scope: !15024)
!15034 = !DILocation(line: 201, column: 1, scope: !15024)
!15035 = distinct !DISubprogram(name: "z_sched_init", scope: !2336, file: !2336, line: 1293, type: !3130, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!15036 = !DILocation(line: 1302, column: 2, scope: !15035)
!15037 = !DILocation(line: 1306, column: 2, scope: !15035)
!15038 = !DILocation(line: 1309, column: 1, scope: !15035)
!15039 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2336, file: !2336, line: 1311, type: !15040, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15043)
!15040 = !DISubroutineType(types: !15041)
!15041 = !{!107, !15042}
!15042 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !359, line: 347, baseType: !2231)
!15043 = !{!15044}
!15044 = !DILocalVariable(name: "thread", arg: 1, scope: !15039, file: !2336, line: 1311, type: !15042)
!15045 = !DILocation(line: 0, scope: !15039)
!15046 = !DILocation(line: 1313, column: 22, scope: !15039)
!15047 = !DILocation(line: 1313, column: 9, scope: !15039)
!15048 = !DILocation(line: 1313, column: 2, scope: !15039)
!15049 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2336, file: !2336, line: 1325, type: !15050, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15052)
!15050 = !DISubroutineType(types: !15051)
!15051 = !{null, !15042, !107}
!15052 = !{!15053, !15054, !15055}
!15053 = !DILocalVariable(name: "thread", arg: 1, scope: !15049, file: !2336, line: 1325, type: !15042)
!15054 = !DILocalVariable(name: "prio", arg: 2, scope: !15049, file: !2336, line: 1325, type: !107)
!15055 = !DILocalVariable(name: "th", scope: !15049, file: !2336, line: 1334, type: !2231)
!15056 = !DILocation(line: 0, scope: !15049)
!15057 = !DILocation(line: 1336, column: 2, scope: !15049)
!15058 = !DILocation(line: 1337, column: 1, scope: !15049)
!15059 = distinct !DISubprogram(name: "k_can_yield", scope: !2336, file: !2336, line: 1384, type: !6883, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!15060 = !DILocation(line: 1386, column: 11, scope: !15059)
!15061 = !DILocation(line: 1386, column: 29, scope: !15059)
!15062 = !DILocation(line: 1386, column: 32, scope: !15059)
!15063 = !DILocation(line: 1386, column: 46, scope: !15059)
!15064 = !DILocation(line: 1387, column: 28, scope: !15059)
!15065 = !DILocation(line: 1387, column: 4, scope: !15059)
!15066 = !DILocation(line: 1386, column: 2, scope: !15059)
!15067 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !224, file: !224, line: 989, type: !6883, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!15068 = !DILocation(line: 993, column: 10, scope: !15067)
!15069 = !DILocation(line: 993, column: 2, scope: !15067)
!15070 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2336, file: !2336, line: 1390, type: !3130, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15071)
!15071 = !{!15072}
!15072 = !DILocalVariable(name: "key", scope: !15070, file: !2336, line: 1396, type: !13561)
!15073 = !DILocation(line: 0, scope: !13569, inlinedAt: !15074)
!15074 = distinct !DILocation(line: 1396, column: 25, scope: !15070)
!15075 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !15076)
!15076 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !15074)
!15077 = !DILocation(line: 0, scope: !13578, inlinedAt: !15076)
!15078 = !DILocation(line: 0, scope: !15070)
!15079 = !DILocation(line: 1400, column: 18, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15081, file: !2336, line: 1399, column: 36)
!15081 = distinct !DILexicalBlock(scope: !15070, file: !2336, line: 1398, column: 6)
!15082 = !DILocation(line: 0, scope: !13738, inlinedAt: !15083)
!15083 = distinct !DILocation(line: 1400, column: 3, scope: !15080)
!15084 = !DILocation(line: 266, column: 15, scope: !13738, inlinedAt: !15083)
!15085 = !DILocation(line: 266, column: 28, scope: !13738, inlinedAt: !15083)
!15086 = !DILocation(line: 0, scope: !13746, inlinedAt: !15087)
!15087 = distinct !DILocation(line: 268, column: 3, scope: !13750, inlinedAt: !15083)
!15088 = !DILocation(line: 234, column: 2, scope: !13746, inlinedAt: !15087)
!15089 = !DILocation(line: 1402, column: 15, scope: !15070)
!15090 = !DILocation(line: 0, scope: !13755, inlinedAt: !15091)
!15091 = distinct !DILocation(line: 1402, column: 2, scope: !15070)
!15092 = !DILocation(line: 252, column: 15, scope: !13755, inlinedAt: !15091)
!15093 = !DILocation(line: 252, column: 28, scope: !13755, inlinedAt: !15091)
!15094 = !DILocation(line: 0, scope: !13762, inlinedAt: !15095)
!15095 = distinct !DILocation(line: 254, column: 3, scope: !13766, inlinedAt: !15091)
!15096 = !DILocation(line: 0, scope: !13769, inlinedAt: !15097)
!15097 = distinct !DILocation(line: 229, column: 2, scope: !13762, inlinedAt: !15095)
!15098 = !DILocation(line: 188, column: 2, scope: !13779, inlinedAt: !15097)
!15099 = !DILocation(line: 188, column: 2, scope: !13781, inlinedAt: !15097)
!15100 = !DILocation(line: 0, scope: !13779, inlinedAt: !15097)
!15101 = !DILocation(line: 189, column: 7, scope: !13784, inlinedAt: !15097)
!15102 = !DILocation(line: 189, column: 35, scope: !13784, inlinedAt: !15097)
!15103 = !DILocation(line: 189, column: 7, scope: !13785, inlinedAt: !15097)
!15104 = !DILocation(line: 191, column: 21, scope: !13789, inlinedAt: !15097)
!15105 = !DILocation(line: 190, column: 4, scope: !13789, inlinedAt: !15097)
!15106 = !DILocation(line: 192, column: 4, scope: !13789, inlinedAt: !15097)
!15107 = distinct !{!15107, !15098, !15108}
!15108 = !DILocation(line: 194, column: 2, scope: !13779, inlinedAt: !15097)
!15109 = !DILocation(line: 196, column: 37, scope: !13769, inlinedAt: !15097)
!15110 = !DILocation(line: 196, column: 2, scope: !13769, inlinedAt: !15097)
!15111 = !DILocation(line: 197, column: 1, scope: !13769, inlinedAt: !15097)
!15112 = !DILocation(line: 1403, column: 2, scope: !15070)
!15113 = !DILocation(line: 0, scope: !14180, inlinedAt: !15114)
!15114 = distinct !DILocation(line: 1404, column: 2, scope: !15070)
!15115 = !DILocation(line: 196, column: 9, scope: !14180, inlinedAt: !15114)
!15116 = !DILocation(line: 1405, column: 1, scope: !15070)
!15117 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2336, file: !2336, line: 1459, type: !15118, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15120)
!15118 = !DISubroutineType(types: !15119)
!15119 = !{!727, !14360}
!15120 = !{!15121, !15122, !15123}
!15121 = !DILocalVariable(name: "timeout", arg: 1, scope: !15117, file: !2336, line: 1459, type: !14360)
!15122 = !DILocalVariable(name: "ticks", scope: !15117, file: !2336, line: 1461, type: !103)
!15123 = !DILocalVariable(name: "ret", scope: !15117, file: !2336, line: 1480, type: !727)
!15124 = !DILocation(line: 0, scope: !15117)
!15125 = !DILocation(line: 1468, column: 6, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15117, file: !2336, line: 1468, column: 6)
!15127 = !DILocation(line: 1468, column: 6, scope: !15117)
!15128 = !DILocation(line: 1469, column: 20, scope: !15129)
!15129 = distinct !DILexicalBlock(scope: !15126, file: !2336, line: 1468, column: 40)
!15130 = !DILocation(line: 1469, column: 3, scope: !15129)
!15131 = !DILocation(line: 1473, column: 3, scope: !15129)
!15132 = !DILocation(line: 1478, column: 10, scope: !15117)
!15133 = !DILocation(line: 1480, column: 16, scope: !15117)
!15134 = !DILocation(line: 1485, column: 1, scope: !15117)
!15135 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3315, file: !3315, line: 310, type: !15136, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15138)
!15136 = !DISubroutineType(types: !15137)
!15137 = !{null, !15042}
!15138 = !{!15139}
!15139 = !DILocalVariable(name: "thread", arg: 1, scope: !15135, file: !3315, line: 310, type: !15042)
!15140 = !DILocation(line: 0, scope: !15135)
!15141 = !DILocation(line: 319, column: 2, scope: !15142)
!15142 = distinct !DILexicalBlock(scope: !15135, file: !3315, line: 319, column: 2)
!15143 = !{i64 2154784378}
!15144 = !DILocation(line: 320, column: 2, scope: !15135)
!15145 = !DILocation(line: 321, column: 1, scope: !15135)
!15146 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2336, file: !2336, line: 1415, type: !15147, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15149)
!15147 = !DISubroutineType(types: !15148)
!15148 = !{!727, !103}
!15149 = !{!15150, !15151, !15152, !15153}
!15150 = !DILocalVariable(name: "ticks", arg: 1, scope: !15146, file: !2336, line: 1415, type: !103)
!15151 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15146, file: !2336, line: 1418, type: !162)
!15152 = !DILocalVariable(name: "timeout", scope: !15146, file: !2336, line: 1430, type: !14360)
!15153 = !DILocalVariable(name: "key", scope: !15146, file: !2336, line: 1437, type: !13561)
!15154 = !DILocation(line: 0, scope: !15146)
!15155 = !DILocation(line: 1425, column: 12, scope: !15156)
!15156 = distinct !DILexicalBlock(scope: !15146, file: !2336, line: 1425, column: 6)
!15157 = !DILocation(line: 1425, column: 6, scope: !15146)
!15158 = !DILocation(line: 1426, column: 3, scope: !15159)
!15159 = distinct !DILexicalBlock(scope: !15156, file: !2336, line: 1425, column: 18)
!15160 = !DILocation(line: 1427, column: 3, scope: !15159)
!15161 = !DILocation(line: 1431, column: 24, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15146, file: !2336, line: 1431, column: 6)
!15163 = !DILocation(line: 1431, column: 6, scope: !15146)
!15164 = !DILocation(line: 1432, column: 35, scope: !15165)
!15165 = distinct !DILexicalBlock(scope: !15162, file: !2336, line: 1431, column: 30)
!15166 = !DILocation(line: 1432, column: 27, scope: !15165)
!15167 = !DILocation(line: 1433, column: 2, scope: !15165)
!15168 = !DILocation(line: 1434, column: 27, scope: !15169)
!15169 = distinct !DILexicalBlock(scope: !15162, file: !2336, line: 1433, column: 9)
!15170 = !DILocation(line: 0, scope: !15162)
!15171 = !DILocation(line: 0, scope: !13569, inlinedAt: !15172)
!15172 = distinct !DILocation(line: 1437, column: 25, scope: !15146)
!15173 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !15174)
!15174 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !15172)
!15175 = !DILocation(line: 0, scope: !13578, inlinedAt: !15174)
!15176 = !DILocation(line: 1440, column: 20, scope: !15146)
!15177 = !DILocation(line: 1440, column: 18, scope: !15146)
!15178 = !DILocation(line: 1442, column: 2, scope: !15146)
!15179 = !DILocation(line: 1443, column: 23, scope: !15146)
!15180 = !DILocation(line: 1443, column: 2, scope: !15146)
!15181 = !DILocation(line: 1444, column: 29, scope: !15146)
!15182 = !DILocation(line: 1444, column: 2, scope: !15146)
!15183 = !DILocation(line: 0, scope: !14180, inlinedAt: !15184)
!15184 = distinct !DILocation(line: 1446, column: 8, scope: !15146)
!15185 = !DILocation(line: 196, column: 9, scope: !14180, inlinedAt: !15184)
!15186 = !DILocation(line: 1450, column: 10, scope: !15146)
!15187 = !DILocation(line: 1450, column: 45, scope: !15146)
!15188 = !DILocation(line: 1450, column: 43, scope: !15146)
!15189 = !DILocation(line: 1451, column: 6, scope: !15146)
!15190 = !DILocation(line: 1457, column: 1, scope: !15146)
!15191 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !12961, file: !12961, line: 1103, type: !12962, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15192)
!15192 = !{!15193}
!15193 = !DILocalVariable(name: "t", arg: 1, scope: !15191, file: !12961, line: 1103, type: !1491)
!15194 = !DILocation(line: 0, scope: !15191)
!15195 = !DILocation(line: 0, scope: !13616, inlinedAt: !15196)
!15196 = distinct !DILocation(line: 1106, column: 9, scope: !15191)
!15197 = !DILocation(line: 139, column: 13, scope: !15198, inlinedAt: !15196)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !12961, line: 138, column: 10)
!15199 = distinct !DILexicalBlock(scope: !15200, file: !12961, line: 136, column: 7)
!15200 = distinct !DILexicalBlock(scope: !13637, file: !12961, line: 134, column: 17)
!15201 = !DILocation(line: 1106, column: 2, scope: !15191)
!15202 = distinct !DISubprogram(name: "k_yield", scope: !3315, file: !3315, line: 140, type: !3130, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!15203 = !DILocation(line: 148, column: 2, scope: !15204)
!15204 = distinct !DILexicalBlock(scope: !15202, file: !3315, line: 148, column: 2)
!15205 = !{i64 2154783698}
!15206 = !DILocation(line: 149, column: 2, scope: !15202)
!15207 = !DILocation(line: 150, column: 1, scope: !15202)
!15208 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2336, file: !2336, line: 1495, type: !15209, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15211)
!15209 = !DISubroutineType(types: !15210)
!15210 = !{!727, !107}
!15211 = !{!15212, !15213}
!15212 = !DILocalVariable(name: "us", arg: 1, scope: !15208, file: !2336, line: 1495, type: !107)
!15213 = !DILocalVariable(name: "ticks", scope: !15208, file: !2336, line: 1497, type: !727)
!15214 = !DILocation(line: 0, scope: !15208)
!15215 = !DILocation(line: 1501, column: 31, scope: !15208)
!15216 = !DILocation(line: 1501, column: 10, scope: !15208)
!15217 = !DILocation(line: 1502, column: 23, scope: !15208)
!15218 = !DILocation(line: 1502, column: 10, scope: !15208)
!15219 = !DILocation(line: 1506, column: 31, scope: !15208)
!15220 = !DILocation(line: 1506, column: 9, scope: !15208)
!15221 = !DILocation(line: 1506, column: 2, scope: !15208)
!15222 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !12961, file: !12961, line: 571, type: !12962, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15223)
!15223 = !{!15224}
!15224 = !DILocalVariable(name: "t", arg: 1, scope: !15222, file: !12961, line: 571, type: !1491)
!15225 = !DILocation(line: 0, scope: !15222)
!15226 = !DILocation(line: 0, scope: !13616, inlinedAt: !15227)
!15227 = distinct !DILocation(line: 574, column: 9, scope: !15222)
!15228 = !DILocation(line: 135, column: 5, scope: !15200, inlinedAt: !15227)
!15229 = !DILocation(line: 139, column: 13, scope: !15198, inlinedAt: !15227)
!15230 = !DILocation(line: 574, column: 2, scope: !15222)
!15231 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !12961, file: !12961, line: 1187, type: !12962, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15232)
!15232 = !{!15233}
!15233 = !DILocalVariable(name: "t", arg: 1, scope: !15231, file: !12961, line: 1187, type: !1491)
!15234 = !DILocation(line: 0, scope: !15231)
!15235 = !DILocation(line: 0, scope: !13616, inlinedAt: !15236)
!15236 = distinct !DILocation(line: 1190, column: 9, scope: !15231)
!15237 = !DILocation(line: 145, column: 13, scope: !15238, inlinedAt: !15236)
!15238 = distinct !DILexicalBlock(scope: !13634, file: !12961, line: 144, column: 10)
!15239 = !DILocation(line: 1190, column: 2, scope: !15231)
!15240 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2336, file: !2336, line: 1517, type: !15136, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15241)
!15241 = !{!15242}
!15242 = !DILocalVariable(name: "thread", arg: 1, scope: !15240, file: !2336, line: 1517, type: !15042)
!15243 = !DILocation(line: 0, scope: !15240)
!15244 = !DILocation(line: 1521, column: 6, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15240, file: !2336, line: 1521, column: 6)
!15246 = !DILocation(line: 1521, column: 6, scope: !15240)
!15247 = !DILocation(line: 1525, column: 6, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15240, file: !2336, line: 1525, column: 6)
!15249 = !DILocation(line: 1525, column: 37, scope: !15248)
!15250 = !DILocation(line: 1525, column: 6, scope: !15240)
!15251 = !DILocation(line: 1527, column: 20, scope: !15252)
!15252 = distinct !DILexicalBlock(scope: !15253, file: !2336, line: 1527, column: 7)
!15253 = distinct !DILexicalBlock(scope: !15248, file: !2336, line: 1525, column: 42)
!15254 = !DILocation(line: 1527, column: 33, scope: !15252)
!15255 = !DILocation(line: 1527, column: 7, scope: !15253)
!15256 = !DILocation(line: 1532, column: 2, scope: !15240)
!15257 = !DILocation(line: 1533, column: 2, scope: !15240)
!15258 = !DILocation(line: 1031, column: 3, scope: !14213, inlinedAt: !15259)
!15259 = distinct !DILocation(line: 48, column: 10, scope: !14217, inlinedAt: !15260)
!15260 = distinct !DILocation(line: 1537, column: 7, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15240, file: !2336, line: 1537, column: 6)
!15262 = !DILocation(line: 0, scope: !14213, inlinedAt: !15259)
!15263 = !DILocation(line: 48, column: 9, scope: !14217, inlinedAt: !15260)
!15264 = !DILocation(line: 1537, column: 6, scope: !15240)
!15265 = !DILocation(line: 1538, column: 3, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15261, file: !2336, line: 1537, column: 25)
!15267 = !DILocation(line: 1539, column: 2, scope: !15266)
!15268 = !DILocation(line: 1540, column: 1, scope: !15240)
!15269 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12402, file: !12402, line: 101, type: !13687, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15270)
!15270 = !{!15271}
!15271 = !DILocalVariable(name: "thread", arg: 1, scope: !15269, file: !12402, line: 101, type: !2231)
!15272 = !DILocation(line: 0, scope: !15269)
!15273 = !DILocation(line: 103, column: 23, scope: !15269)
!15274 = !DILocation(line: 103, column: 36, scope: !15269)
!15275 = !DILocation(line: 103, column: 55, scope: !15269)
!15276 = !DILocation(line: 103, column: 2, scope: !15269)
!15277 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2336, file: !2336, line: 1567, type: !15278, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15280)
!15278 = !DISubroutineType(types: !15279)
!15279 = !{!15042}
!15280 = !{!15281}
!15281 = !DILocalVariable(name: "ret", scope: !15277, file: !2336, line: 1577, type: !15042)
!15282 = !DILocation(line: 1577, column: 30, scope: !15277)
!15283 = !DILocation(line: 0, scope: !15277)
!15284 = !DILocation(line: 1582, column: 2, scope: !15277)
!15285 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2336, file: !2336, line: 1593, type: !7157, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !250)
!15286 = !DILocation(line: 1031, column: 3, scope: !14213, inlinedAt: !15287)
!15287 = distinct !DILocation(line: 48, column: 10, scope: !14217, inlinedAt: !15288)
!15288 = distinct !DILocation(line: 1595, column: 10, scope: !15285)
!15289 = !DILocation(line: 0, scope: !14213, inlinedAt: !15287)
!15290 = !DILocation(line: 48, column: 9, scope: !14217, inlinedAt: !15288)
!15291 = !DILocation(line: 1595, column: 27, scope: !15285)
!15292 = !DILocation(line: 1595, column: 41, scope: !15285)
!15293 = !DILocation(line: 1595, column: 30, scope: !15285)
!15294 = !DILocation(line: 1595, column: 2, scope: !15285)
!15295 = distinct !DISubprogram(name: "z_thread_abort", scope: !2336, file: !2336, line: 1725, type: !13527, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15296)
!15296 = !{!15297, !15298}
!15297 = !DILocalVariable(name: "thread", arg: 1, scope: !15295, file: !2336, line: 1725, type: !2231)
!15298 = !DILocalVariable(name: "key", scope: !15295, file: !2336, line: 1727, type: !13561)
!15299 = !DILocation(line: 0, scope: !15295)
!15300 = !DILocation(line: 0, scope: !13569, inlinedAt: !15301)
!15301 = distinct !DILocation(line: 1727, column: 25, scope: !15295)
!15302 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !15303)
!15303 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !15301)
!15304 = !DILocation(line: 0, scope: !13578, inlinedAt: !15303)
!15305 = !DILocation(line: 1729, column: 20, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15295, file: !2336, line: 1729, column: 6)
!15307 = !DILocation(line: 1729, column: 33, scope: !15306)
!15308 = !DILocation(line: 1729, column: 48, scope: !15306)
!15309 = !DILocation(line: 1729, column: 6, scope: !15295)
!15310 = !DILocation(line: 0, scope: !13596, inlinedAt: !15311)
!15311 = distinct !DILocation(line: 1730, column: 3, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15306, file: !2336, line: 1729, column: 54)
!15313 = !DILocation(line: 0, scope: !13604, inlinedAt: !15314)
!15314 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !15311)
!15315 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !15314)
!15316 = !DILocation(line: 1732, column: 3, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15312, file: !2336, line: 1732, column: 3)
!15318 = !{i64 2155521108, i64 2155521124, i64 2155521150, i64 2155521178, i64 2155521198}
!15319 = !DILocation(line: 1733, column: 3, scope: !15312)
!15320 = !DILocation(line: 1736, column: 20, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15295, file: !2336, line: 1736, column: 6)
!15322 = !DILocation(line: 1736, column: 33, scope: !15321)
!15323 = !DILocation(line: 1736, column: 49, scope: !15321)
!15324 = !DILocation(line: 1736, column: 6, scope: !15295)
!15325 = !DILocation(line: 0, scope: !13596, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 1737, column: 3, scope: !15327)
!15327 = distinct !DILexicalBlock(scope: !15321, file: !2336, line: 1736, column: 56)
!15328 = !DILocation(line: 0, scope: !13604, inlinedAt: !15329)
!15329 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !15326)
!15330 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !15329)
!15331 = !DILocation(line: 1738, column: 3, scope: !15327)
!15332 = !DILocation(line: 1775, column: 2, scope: !15295)
!15333 = !DILocation(line: 1776, column: 16, scope: !15334)
!15334 = distinct !DILexicalBlock(scope: !15295, file: !2336, line: 1776, column: 6)
!15335 = !DILocation(line: 1776, column: 13, scope: !15334)
!15336 = !DILocation(line: 1776, column: 25, scope: !15334)
!15337 = !DILocation(line: 1031, column: 3, scope: !14213, inlinedAt: !15338)
!15338 = distinct !DILocation(line: 48, column: 10, scope: !14217, inlinedAt: !15339)
!15339 = distinct !DILocation(line: 1776, column: 29, scope: !15334)
!15340 = !DILocation(line: 0, scope: !14213, inlinedAt: !15338)
!15341 = !DILocation(line: 48, column: 9, scope: !14217, inlinedAt: !15339)
!15342 = !DILocation(line: 1776, column: 6, scope: !15295)
!15343 = !DILocation(line: 0, scope: !14180, inlinedAt: !15344)
!15344 = distinct !DILocation(line: 1777, column: 3, scope: !15345)
!15345 = distinct !DILexicalBlock(scope: !15334, file: !2336, line: 1776, column: 47)
!15346 = !DILocation(line: 196, column: 9, scope: !14180, inlinedAt: !15344)
!15347 = !DILocation(line: 1779, column: 2, scope: !15345)
!15348 = !DILocation(line: 0, scope: !13596, inlinedAt: !15349)
!15349 = distinct !DILocation(line: 1780, column: 2, scope: !15295)
!15350 = !DILocation(line: 0, scope: !13604, inlinedAt: !15351)
!15351 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !15349)
!15352 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !15351)
!15353 = !DILocation(line: 1781, column: 1, scope: !15295)
!15354 = distinct !DISubprogram(name: "end_thread", scope: !2336, file: !2336, line: 1690, type: !13527, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15355)
!15355 = !{!15356}
!15356 = !DILocalVariable(name: "thread", arg: 1, scope: !15354, file: !2336, line: 1690, type: !2231)
!15357 = !DILocation(line: 0, scope: !15354)
!15358 = !DILocation(line: 1695, column: 20, scope: !15359)
!15359 = distinct !DILexicalBlock(scope: !15354, file: !2336, line: 1695, column: 6)
!15360 = !DILocation(line: 1695, column: 33, scope: !15359)
!15361 = !DILocation(line: 1695, column: 49, scope: !15359)
!15362 = !DILocation(line: 1695, column: 6, scope: !15354)
!15363 = !DILocation(line: 1697, column: 29, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15359, file: !2336, line: 1695, column: 56)
!15365 = !DILocation(line: 1698, column: 7, scope: !15366)
!15366 = distinct !DILexicalBlock(scope: !15364, file: !2336, line: 1698, column: 7)
!15367 = !DILocation(line: 1698, column: 7, scope: !15364)
!15368 = !DILocation(line: 0, scope: !13738, inlinedAt: !15369)
!15369 = distinct !DILocation(line: 1699, column: 4, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15366, file: !2336, line: 1698, column: 35)
!15371 = !DILocation(line: 266, column: 28, scope: !13738, inlinedAt: !15369)
!15372 = !DILocation(line: 0, scope: !13746, inlinedAt: !15373)
!15373 = distinct !DILocation(line: 268, column: 3, scope: !13750, inlinedAt: !15369)
!15374 = !DILocation(line: 234, column: 2, scope: !13746, inlinedAt: !15373)
!15375 = !DILocation(line: 1700, column: 3, scope: !15370)
!15376 = !DILocation(line: 1701, column: 20, scope: !15377)
!15377 = distinct !DILexicalBlock(scope: !15364, file: !2336, line: 1701, column: 7)
!15378 = !DILocation(line: 1701, column: 30, scope: !15377)
!15379 = !DILocation(line: 1701, column: 7, scope: !15364)
!15380 = !DILocation(line: 1702, column: 4, scope: !15381)
!15381 = distinct !DILexicalBlock(scope: !15377, file: !2336, line: 1701, column: 39)
!15382 = !DILocation(line: 1703, column: 3, scope: !15381)
!15383 = !DILocation(line: 1704, column: 9, scope: !15364)
!15384 = !DILocation(line: 1705, column: 23, scope: !15364)
!15385 = !DILocation(line: 1705, column: 3, scope: !15364)
!15386 = !DILocation(line: 1706, column: 3, scope: !15364)
!15387 = !DILocation(line: 1722, column: 2, scope: !15364)
!15388 = !DILocation(line: 1723, column: 1, scope: !15354)
!15389 = distinct !DISubprogram(name: "unpend_all", scope: !2336, file: !2336, line: 1674, type: !15390, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15392)
!15390 = !DISubroutineType(types: !15391)
!15391 = !{null, !2262}
!15392 = !{!15393, !15394}
!15393 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15389, file: !2336, line: 1674, type: !2262)
!15394 = !DILocalVariable(name: "thread", scope: !15389, file: !2336, line: 1676, type: !2231)
!15395 = !DILocation(line: 0, scope: !15389)
!15396 = !DILocation(line: 1678, column: 19, scope: !15389)
!15397 = !DILocation(line: 1678, column: 41, scope: !15389)
!15398 = !DILocation(line: 1678, column: 2, scope: !15389)
!15399 = !DILocation(line: 1679, column: 3, scope: !15400)
!15400 = distinct !DILexicalBlock(scope: !15389, file: !2336, line: 1678, column: 50)
!15401 = !DILocation(line: 1680, column: 9, scope: !15400)
!15402 = !DILocalVariable(name: "thread", arg: 1, scope: !15403, file: !12422, line: 65, type: !2231)
!15403 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12422, file: !12422, line: 65, type: !15404, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15406)
!15404 = !DISubroutineType(types: !15405)
!15405 = !{null, !2231, !32}
!15406 = !{!15402, !15407}
!15407 = !DILocalVariable(name: "value", arg: 2, scope: !15403, file: !12422, line: 65, type: !32)
!15408 = !DILocation(line: 0, scope: !15403, inlinedAt: !15409)
!15409 = distinct !DILocation(line: 1681, column: 3, scope: !15400)
!15410 = !DILocation(line: 67, column: 15, scope: !15403, inlinedAt: !15409)
!15411 = !DILocation(line: 67, column: 33, scope: !15403, inlinedAt: !15409)
!15412 = !DILocation(line: 1682, column: 3, scope: !15400)
!15413 = distinct !{!15413, !15398, !15414}
!15414 = !DILocation(line: 1683, column: 2, scope: !15389)
!15415 = !DILocation(line: 1684, column: 1, scope: !15389)
!15416 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2336, file: !2336, line: 1794, type: !15417, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15419)
!15417 = !DISubroutineType(types: !15418)
!15418 = !{!107, !2231, !14360}
!15419 = !{!15420, !15421, !15422, !15423}
!15420 = !DILocalVariable(name: "thread", arg: 1, scope: !15416, file: !2336, line: 1794, type: !2231)
!15421 = !DILocalVariable(name: "timeout", arg: 2, scope: !15416, file: !2336, line: 1794, type: !14360)
!15422 = !DILocalVariable(name: "key", scope: !15416, file: !2336, line: 1796, type: !13561)
!15423 = !DILocalVariable(name: "ret", scope: !15416, file: !2336, line: 1797, type: !107)
!15424 = !DILocation(line: 0, scope: !15416)
!15425 = !DILocation(line: 0, scope: !13569, inlinedAt: !15426)
!15426 = distinct !DILocation(line: 1796, column: 25, scope: !15416)
!15427 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !15428)
!15428 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !15426)
!15429 = !DILocation(line: 0, scope: !13578, inlinedAt: !15428)
!15430 = !DILocation(line: 1801, column: 20, scope: !15431)
!15431 = distinct !DILexicalBlock(scope: !15416, file: !2336, line: 1801, column: 6)
!15432 = !DILocation(line: 1801, column: 33, scope: !15431)
!15433 = !DILocation(line: 1801, column: 49, scope: !15431)
!15434 = !DILocation(line: 1801, column: 6, scope: !15416)
!15435 = !DILocation(line: 1803, column: 13, scope: !15436)
!15436 = distinct !DILexicalBlock(scope: !15431, file: !2336, line: 1803, column: 13)
!15437 = !DILocation(line: 1803, column: 13, scope: !15431)
!15438 = !DILocation(line: 1805, column: 24, scope: !15439)
!15439 = distinct !DILexicalBlock(scope: !15436, file: !2336, line: 1805, column: 13)
!15440 = !DILocation(line: 1805, column: 21, scope: !15439)
!15441 = !DILocation(line: 1805, column: 34, scope: !15439)
!15442 = !DILocation(line: 1806, column: 20, scope: !15439)
!15443 = !DILocation(line: 1806, column: 44, scope: !15439)
!15444 = !DILocation(line: 1806, column: 30, scope: !15439)
!15445 = !DILocation(line: 1805, column: 13, scope: !15436)
!15446 = !DILocation(line: 1810, column: 42, scope: !15447)
!15447 = distinct !DILexicalBlock(scope: !15439, file: !2336, line: 1808, column: 9)
!15448 = !DILocation(line: 1810, column: 3, scope: !15447)
!15449 = !DILocation(line: 1811, column: 22, scope: !15447)
!15450 = !DILocation(line: 1811, column: 3, scope: !15447)
!15451 = !DILocation(line: 0, scope: !14180, inlinedAt: !15452)
!15452 = distinct !DILocation(line: 1814, column: 9, scope: !15447)
!15453 = !DILocation(line: 196, column: 9, scope: !14180, inlinedAt: !15452)
!15454 = !DILocation(line: 1817, column: 3, scope: !15447)
!15455 = !DILocation(line: 0, scope: !15431)
!15456 = !DILocation(line: 0, scope: !13596, inlinedAt: !15457)
!15457 = distinct !DILocation(line: 1822, column: 2, scope: !15416)
!15458 = !DILocation(line: 0, scope: !13604, inlinedAt: !15459)
!15459 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !15457)
!15460 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !15459)
!15461 = !DILocation(line: 1823, column: 2, scope: !15416)
!15462 = !DILocation(line: 1824, column: 1, scope: !15416)
!15463 = distinct !DISubprogram(name: "z_sched_wake", scope: !2336, file: !2336, line: 1882, type: !15464, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15466)
!15464 = !DISubroutineType(types: !15465)
!15465 = !{!136, !2262, !107, !102}
!15466 = !{!15467, !15468, !15469, !15470, !15471, !15472, !15474}
!15467 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15463, file: !2336, line: 1882, type: !2262)
!15468 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !15463, file: !2336, line: 1882, type: !107)
!15469 = !DILocalVariable(name: "swap_data", arg: 3, scope: !15463, file: !2336, line: 1882, type: !102)
!15470 = !DILocalVariable(name: "thread", scope: !15463, file: !2336, line: 1884, type: !2231)
!15471 = !DILocalVariable(name: "ret", scope: !15463, file: !2336, line: 1885, type: !136)
!15472 = !DILocalVariable(name: "__i", scope: !15473, file: !2336, line: 1887, type: !13561)
!15473 = distinct !DILexicalBlock(scope: !15463, file: !2336, line: 1887, column: 2)
!15474 = !DILocalVariable(name: "__key", scope: !15473, file: !2336, line: 1887, type: !13561)
!15475 = !DILocation(line: 0, scope: !15463)
!15476 = !DILocation(line: 0, scope: !15473)
!15477 = !DILocation(line: 0, scope: !13569, inlinedAt: !15478)
!15478 = distinct !DILocation(line: 1887, column: 2, scope: !15473)
!15479 = !DILocation(line: 55, column: 2, scope: !13578, inlinedAt: !15480)
!15480 = distinct !DILocation(line: 145, column: 10, scope: !13569, inlinedAt: !15478)
!15481 = !DILocation(line: 0, scope: !13578, inlinedAt: !15480)
!15482 = !DILocation(line: 1888, column: 12, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15484, file: !2336, line: 1887, column: 26)
!15484 = distinct !DILexicalBlock(scope: !15473, file: !2336, line: 1887, column: 2)
!15485 = !DILocation(line: 1890, column: 14, scope: !15486)
!15486 = distinct !DILexicalBlock(scope: !15483, file: !2336, line: 1890, column: 7)
!15487 = !DILocation(line: 1890, column: 7, scope: !15483)
!15488 = !DILocalVariable(name: "thread", arg: 1, scope: !15489, file: !13176, line: 134, type: !2231)
!15489 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !13176, file: !13176, line: 134, type: !15490, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15492)
!15490 = !DISubroutineType(types: !15491)
!15491 = !{null, !2231, !32, !102}
!15492 = !{!15488, !15493, !15494}
!15493 = !DILocalVariable(name: "value", arg: 2, scope: !15489, file: !13176, line: 135, type: !32)
!15494 = !DILocalVariable(name: "data", arg: 3, scope: !15489, file: !13176, line: 136, type: !102)
!15495 = !DILocation(line: 0, scope: !15489, inlinedAt: !15496)
!15496 = distinct !DILocation(line: 1891, column: 4, scope: !15497)
!15497 = distinct !DILexicalBlock(scope: !15486, file: !2336, line: 1890, column: 23)
!15498 = !DILocation(line: 0, scope: !15403, inlinedAt: !15499)
!15499 = distinct !DILocation(line: 138, column: 2, scope: !15489, inlinedAt: !15496)
!15500 = !DILocation(line: 67, column: 15, scope: !15403, inlinedAt: !15499)
!15501 = !DILocation(line: 67, column: 33, scope: !15403, inlinedAt: !15499)
!15502 = !DILocation(line: 139, column: 15, scope: !15489, inlinedAt: !15496)
!15503 = !DILocation(line: 139, column: 25, scope: !15489, inlinedAt: !15496)
!15504 = !DILocation(line: 1894, column: 4, scope: !15497)
!15505 = !DILocation(line: 1895, column: 10, scope: !15497)
!15506 = !DILocation(line: 1896, column: 4, scope: !15497)
!15507 = !DILocation(line: 1898, column: 3, scope: !15497)
!15508 = !DILocation(line: 0, scope: !13596, inlinedAt: !15509)
!15509 = distinct !DILocation(line: 1887, column: 2, scope: !15484)
!15510 = !DILocation(line: 0, scope: !13604, inlinedAt: !15511)
!15511 = distinct !DILocation(line: 215, column: 2, scope: !13596, inlinedAt: !15509)
!15512 = !DILocation(line: 95, column: 2, scope: !13604, inlinedAt: !15511)
!15513 = !DILocation(line: 1901, column: 2, scope: !15463)
!15514 = distinct !DISubprogram(name: "z_sched_wait", scope: !2336, file: !2336, line: 1904, type: !15515, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2228, retainedNodes: !15518)
!15515 = !DISubroutineType(types: !15516)
!15516 = !{!107, !13572, !13561, !2262, !14360, !15517}
!15517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!15518 = !{!15519, !15520, !15521, !15522, !15523, !15524}
!15519 = !DILocalVariable(name: "lock", arg: 1, scope: !15514, file: !2336, line: 1904, type: !13572)
!15520 = !DILocalVariable(name: "key", arg: 2, scope: !15514, file: !2336, line: 1904, type: !13561)
!15521 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15514, file: !2336, line: 1905, type: !2262)
!15522 = !DILocalVariable(name: "timeout", arg: 4, scope: !15514, file: !2336, line: 1905, type: !14360)
!15523 = !DILocalVariable(name: "data", arg: 5, scope: !15514, file: !2336, line: 1905, type: !15517)
!15524 = !DILocalVariable(name: "ret", scope: !15514, file: !2336, line: 1907, type: !107)
!15525 = !DILocation(line: 0, scope: !15514)
!15526 = !DILocation(line: 1907, column: 12, scope: !15514)
!15527 = !DILocation(line: 1909, column: 11, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15514, file: !2336, line: 1909, column: 6)
!15529 = !DILocation(line: 1909, column: 6, scope: !15514)
!15530 = !DILocation(line: 1910, column: 11, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15528, file: !2336, line: 1909, column: 20)
!15532 = !DILocation(line: 1910, column: 26, scope: !15531)
!15533 = !DILocation(line: 1910, column: 9, scope: !15531)
!15534 = !DILocation(line: 1911, column: 2, scope: !15531)
!15535 = !DILocation(line: 1912, column: 2, scope: !15514)
!15536 = distinct !DISubprogram(name: "z_data_copy", scope: !15537, file: !15537, line: 22, type: !3130, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3113, retainedNodes: !250)
!15537 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15538 = !DILocation(line: 24, column: 2, scope: !15536)
!15539 = !DILocation(line: 27, column: 2, scope: !15536)
!15540 = !DILocation(line: 71, column: 1, scope: !15536)
!15541 = distinct !DISubprogram(name: "z_add_timeout", scope: !2373, file: !2373, line: 88, type: !15542, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15548)
!15542 = !DISubroutineType(types: !15543)
!15543 = !{null, !2346, !2365, !15544}
!15544 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !15545)
!15545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !15546)
!15546 = !{!15547}
!15547 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15545, file: !104, line: 66, baseType: !103, size: 64)
!15548 = !{!15549, !15550, !15551, !15552, !15558, !15559, !15562, !15565}
!15549 = !DILocalVariable(name: "to", arg: 1, scope: !15541, file: !2373, line: 88, type: !2346)
!15550 = !DILocalVariable(name: "fn", arg: 2, scope: !15541, file: !2373, line: 88, type: !2365)
!15551 = !DILocalVariable(name: "timeout", arg: 3, scope: !15541, file: !2373, line: 89, type: !15544)
!15552 = !DILocalVariable(name: "__i", scope: !15553, file: !2373, line: 102, type: !15554)
!15553 = distinct !DILexicalBlock(scope: !15541, file: !2373, line: 102, column: 2)
!15554 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !15555)
!15555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !15556)
!15556 = !{!15557}
!15557 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15555, file: !249, line: 33, baseType: !107, size: 32)
!15558 = !DILocalVariable(name: "__key", scope: !15553, file: !2373, line: 102, type: !15554)
!15559 = !DILocalVariable(name: "t", scope: !15560, file: !2373, line: 103, type: !2346)
!15560 = distinct !DILexicalBlock(scope: !15561, file: !2373, line: 102, column: 24)
!15561 = distinct !DILexicalBlock(scope: !15553, file: !2373, line: 102, column: 2)
!15562 = !DILocalVariable(name: "ticks", scope: !15563, file: !2373, line: 107, type: !103)
!15563 = distinct !DILexicalBlock(scope: !15564, file: !2373, line: 106, column: 39)
!15564 = distinct !DILexicalBlock(scope: !15560, file: !2373, line: 105, column: 7)
!15565 = !DILocalVariable(name: "next_time", scope: !15566, file: !2373, line: 137, type: !727)
!15566 = distinct !DILexicalBlock(scope: !15567, file: !2373, line: 127, column: 22)
!15567 = distinct !DILexicalBlock(scope: !15560, file: !2373, line: 127, column: 7)
!15568 = !DILocation(line: 0, scope: !15541)
!15569 = !DILocation(line: 91, column: 6, scope: !15570)
!15570 = distinct !DILexicalBlock(scope: !15541, file: !2373, line: 91, column: 6)
!15571 = !DILocation(line: 91, column: 6, scope: !15541)
!15572 = !DILocation(line: 100, column: 6, scope: !15541)
!15573 = !DILocation(line: 100, column: 9, scope: !15541)
!15574 = !DILocation(line: 0, scope: !15553)
!15575 = !DILocalVariable(name: "l", arg: 1, scope: !15576, file: !249, line: 136, type: !15579)
!15576 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !15577, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15580)
!15577 = !DISubroutineType(types: !15578)
!15578 = !{!15554, !15579}
!15579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!15580 = !{!15575, !15581}
!15581 = !DILocalVariable(name: "k", scope: !15576, file: !249, line: 139, type: !15554)
!15582 = !DILocation(line: 0, scope: !15576, inlinedAt: !15583)
!15583 = distinct !DILocation(line: 102, column: 2, scope: !15553)
!15584 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !15589)
!15585 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15586)
!15586 = !{!15587, !15588}
!15587 = !DILocalVariable(name: "key", scope: !15585, file: !5914, line: 44, type: !32)
!15588 = !DILocalVariable(name: "tmp", scope: !15585, file: !5914, line: 53, type: !32)
!15589 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !15583)
!15590 = !{i64 2244665}
!15591 = !DILocation(line: 0, scope: !15585, inlinedAt: !15589)
!15592 = !DILocation(line: 106, column: 33, scope: !15564)
!15593 = !DILocation(line: 105, column: 7, scope: !15560)
!15594 = !DILocation(line: 107, column: 50, scope: !15563)
!15595 = !DILocation(line: 107, column: 48, scope: !15563)
!15596 = !DILocation(line: 0, scope: !15563)
!15597 = !DILocation(line: 109, column: 17, scope: !15563)
!15598 = !DILocation(line: 110, column: 3, scope: !15563)
!15599 = !DILocation(line: 111, column: 31, scope: !15600)
!15600 = distinct !DILexicalBlock(scope: !15564, file: !2373, line: 110, column: 10)
!15601 = !DILocation(line: 111, column: 37, scope: !15600)
!15602 = !DILocation(line: 111, column: 35, scope: !15600)
!15603 = !DILocation(line: 0, scope: !15564)
!15604 = !DILocation(line: 109, column: 8, scope: !15563)
!15605 = !DILocation(line: 109, column: 15, scope: !15563)
!15606 = !DILocation(line: 114, column: 12, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15560, file: !2373, line: 114, column: 3)
!15608 = !DILocation(line: 0, scope: !15560)
!15609 = !DILocation(line: 114, column: 3, scope: !15607)
!15610 = !DILocation(line: 115, column: 24, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15612, file: !2373, line: 115, column: 8)
!15612 = distinct !DILexicalBlock(scope: !15613, file: !2373, line: 114, column: 45)
!15613 = distinct !DILexicalBlock(scope: !15607, file: !2373, line: 114, column: 3)
!15614 = !DILocation(line: 115, column: 11, scope: !15611)
!15615 = !DILocation(line: 115, column: 18, scope: !15611)
!15616 = !DILocation(line: 115, column: 8, scope: !15612)
!15617 = !DILocation(line: 116, column: 15, scope: !15618)
!15618 = distinct !DILexicalBlock(scope: !15611, file: !2373, line: 115, column: 32)
!15619 = !DILocation(line: 117, column: 26, scope: !15618)
!15620 = !DILocation(line: 117, column: 37, scope: !15618)
!15621 = !DILocation(line: 117, column: 5, scope: !15618)
!15622 = !DILocation(line: 123, column: 7, scope: !15560)
!15623 = !DILocation(line: 120, column: 15, scope: !15612)
!15624 = !DILocation(line: 114, column: 36, scope: !15613)
!15625 = distinct !{!15625, !15609, !15626}
!15626 = !DILocation(line: 121, column: 3, scope: !15607)
!15627 = !DILocation(line: 124, column: 41, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15629, file: !2373, line: 123, column: 18)
!15629 = distinct !DILexicalBlock(scope: !15560, file: !2373, line: 123, column: 7)
!15630 = !DILocation(line: 124, column: 4, scope: !15628)
!15631 = !DILocation(line: 125, column: 3, scope: !15628)
!15632 = !DILocation(line: 127, column: 13, scope: !15567)
!15633 = !DILocation(line: 127, column: 10, scope: !15567)
!15634 = !DILocation(line: 127, column: 7, scope: !15560)
!15635 = !DILocation(line: 137, column: 24, scope: !15566)
!15636 = !DILocation(line: 0, scope: !15566)
!15637 = !DILocation(line: 139, column: 18, scope: !15638)
!15638 = distinct !DILexicalBlock(scope: !15566, file: !2373, line: 139, column: 8)
!15639 = !DILocation(line: 139, column: 23, scope: !15638)
!15640 = !DILocation(line: 141, column: 5, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15638, file: !2373, line: 140, column: 48)
!15642 = !DILocation(line: 142, column: 4, scope: !15641)
!15643 = !DILocalVariable(name: "key", arg: 2, scope: !15644, file: !249, line: 190, type: !15554)
!15644 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !15645, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15647)
!15645 = !DISubroutineType(types: !15646)
!15646 = !{null, !15579, !15554}
!15647 = !{!15648, !15643}
!15648 = !DILocalVariable(name: "l", arg: 1, scope: !15644, file: !249, line: 189, type: !15579)
!15649 = !DILocation(line: 0, scope: !15644, inlinedAt: !15650)
!15650 = distinct !DILocation(line: 102, column: 2, scope: !15561)
!15651 = !DILocalVariable(name: "key", arg: 1, scope: !15652, file: !5914, line: 84, type: !32)
!15652 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15653)
!15653 = !{!15651}
!15654 = !DILocation(line: 0, scope: !15652, inlinedAt: !15655)
!15655 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !15650)
!15656 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !15655)
!15657 = !{i64 2245482}
!15658 = !DILocation(line: 148, column: 1, scope: !15541)
!15659 = distinct !DISubprogram(name: "elapsed", scope: !2373, file: !2373, line: 62, type: !15660, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !250)
!15660 = !DISubroutineType(types: !15661)
!15661 = !{!727}
!15662 = !DILocation(line: 64, column: 9, scope: !15659)
!15663 = !DILocation(line: 64, column: 28, scope: !15659)
!15664 = !DILocation(line: 64, column: 35, scope: !15659)
!15665 = !DILocation(line: 64, column: 2, scope: !15659)
!15666 = distinct !DISubprogram(name: "first", scope: !2373, file: !2373, line: 39, type: !15667, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15669)
!15667 = !DISubroutineType(types: !15668)
!15668 = !{!2346}
!15669 = !{!15670}
!15670 = !DILocalVariable(name: "t", scope: !15666, file: !2373, line: 41, type: !15671)
!15671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 32)
!15672 = !DILocation(line: 41, column: 19, scope: !15666)
!15673 = !DILocation(line: 0, scope: !15666)
!15674 = !DILocation(line: 43, column: 9, scope: !15666)
!15675 = !DILocation(line: 43, column: 2, scope: !15666)
!15676 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !233, file: !233, line: 443, type: !15677, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15679)
!15677 = !DISubroutineType(types: !15678)
!15678 = !{null, !15671, !15671}
!15679 = !{!15680, !15681, !15682}
!15680 = !DILocalVariable(name: "successor", arg: 1, scope: !15676, file: !233, line: 443, type: !15671)
!15681 = !DILocalVariable(name: "node", arg: 2, scope: !15676, file: !233, line: 443, type: !15671)
!15682 = !DILocalVariable(name: "prev", scope: !15676, file: !233, line: 445, type: !15683)
!15683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !15671)
!15684 = !DILocation(line: 0, scope: !15676)
!15685 = !DILocation(line: 445, column: 39, scope: !15676)
!15686 = !DILocation(line: 447, column: 8, scope: !15676)
!15687 = !DILocation(line: 447, column: 13, scope: !15676)
!15688 = !DILocation(line: 448, column: 8, scope: !15676)
!15689 = !DILocation(line: 448, column: 13, scope: !15676)
!15690 = !DILocation(line: 449, column: 8, scope: !15676)
!15691 = !DILocation(line: 449, column: 13, scope: !15676)
!15692 = !DILocation(line: 450, column: 18, scope: !15676)
!15693 = !DILocation(line: 451, column: 1, scope: !15676)
!15694 = distinct !DISubprogram(name: "next", scope: !2373, file: !2373, line: 46, type: !15695, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15697)
!15695 = !DISubroutineType(types: !15696)
!15696 = !{!2346, !2346}
!15697 = !{!15698, !15699}
!15698 = !DILocalVariable(name: "t", arg: 1, scope: !15694, file: !2373, line: 46, type: !2346)
!15699 = !DILocalVariable(name: "n", scope: !15694, file: !2373, line: 48, type: !15671)
!15700 = !DILocation(line: 0, scope: !15694)
!15701 = !DILocation(line: 48, column: 58, scope: !15694)
!15702 = !DILocation(line: 48, column: 19, scope: !15694)
!15703 = !DILocation(line: 50, column: 9, scope: !15694)
!15704 = !DILocation(line: 50, column: 2, scope: !15694)
!15705 = distinct !DISubprogram(name: "sys_dlist_append", scope: !233, file: !233, line: 404, type: !15706, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15709)
!15706 = !DISubroutineType(types: !15707)
!15707 = !{null, !15708, !15671}
!15708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!15709 = !{!15710, !15711, !15712}
!15710 = !DILocalVariable(name: "list", arg: 1, scope: !15705, file: !233, line: 404, type: !15708)
!15711 = !DILocalVariable(name: "node", arg: 2, scope: !15705, file: !233, line: 404, type: !15671)
!15712 = !DILocalVariable(name: "tail", scope: !15705, file: !233, line: 406, type: !15683)
!15713 = !DILocation(line: 0, scope: !15705)
!15714 = !DILocation(line: 406, column: 34, scope: !15705)
!15715 = !DILocation(line: 408, column: 8, scope: !15705)
!15716 = !DILocation(line: 408, column: 13, scope: !15705)
!15717 = !DILocation(line: 409, column: 8, scope: !15705)
!15718 = !DILocation(line: 409, column: 13, scope: !15705)
!15719 = !DILocation(line: 411, column: 8, scope: !15705)
!15720 = !DILocation(line: 411, column: 13, scope: !15705)
!15721 = !DILocation(line: 412, column: 13, scope: !15705)
!15722 = !DILocation(line: 413, column: 1, scope: !15705)
!15723 = distinct !DISubprogram(name: "next_timeout", scope: !2373, file: !2373, line: 67, type: !15660, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15724)
!15724 = !{!15725, !15726, !15727}
!15725 = !DILocalVariable(name: "to", scope: !15723, file: !2373, line: 69, type: !2346)
!15726 = !DILocalVariable(name: "ticks_elapsed", scope: !15723, file: !2373, line: 70, type: !727)
!15727 = !DILocalVariable(name: "ret", scope: !15723, file: !2373, line: 71, type: !727)
!15728 = !DILocation(line: 69, column: 24, scope: !15723)
!15729 = !DILocation(line: 0, scope: !15723)
!15730 = !DILocation(line: 70, column: 26, scope: !15723)
!15731 = !DILocation(line: 73, column: 10, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15723, file: !2373, line: 73, column: 6)
!15733 = !DILocation(line: 73, column: 19, scope: !15732)
!15734 = !DILocation(line: 74, column: 21, scope: !15732)
!15735 = !DILocation(line: 74, column: 30, scope: !15732)
!15736 = !DILocation(line: 74, column: 28, scope: !15732)
!15737 = !DILocation(line: 74, column: 45, scope: !15732)
!15738 = !DILocation(line: 73, column: 6, scope: !15723)
!15739 = !DILocation(line: 77, column: 9, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15732, file: !2373, line: 76, column: 9)
!15741 = !DILocation(line: 0, scope: !15732)
!15742 = !DILocation(line: 81, column: 20, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15723, file: !2373, line: 81, column: 6)
!15744 = !DILocation(line: 81, column: 6, scope: !15743)
!15745 = !DILocation(line: 81, column: 32, scope: !15743)
!15746 = !DILocation(line: 85, column: 2, scope: !15723)
!15747 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !233, file: !233, line: 341, type: !15748, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15750)
!15748 = !DISubroutineType(types: !15749)
!15749 = !{!15671, !15708, !15671}
!15750 = !{!15751, !15752}
!15751 = !DILocalVariable(name: "list", arg: 1, scope: !15747, file: !233, line: 341, type: !15708)
!15752 = !DILocalVariable(name: "node", arg: 2, scope: !15747, file: !233, line: 342, type: !15671)
!15753 = !DILocation(line: 0, scope: !15747)
!15754 = !DILocation(line: 344, column: 15, scope: !15747)
!15755 = !DILocation(line: 344, column: 9, scope: !15747)
!15756 = !DILocation(line: 344, column: 26, scope: !15747)
!15757 = !DILocation(line: 344, column: 2, scope: !15747)
!15758 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !233, file: !233, line: 325, type: !15748, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15759)
!15759 = !{!15760, !15761}
!15760 = !DILocalVariable(name: "list", arg: 1, scope: !15758, file: !233, line: 325, type: !15708)
!15761 = !DILocalVariable(name: "node", arg: 2, scope: !15758, file: !233, line: 326, type: !15671)
!15762 = !DILocation(line: 0, scope: !15758)
!15763 = !DILocation(line: 328, column: 24, scope: !15758)
!15764 = !DILocation(line: 328, column: 15, scope: !15758)
!15765 = !DILocation(line: 328, column: 9, scope: !15758)
!15766 = !DILocation(line: 328, column: 45, scope: !15758)
!15767 = !DILocation(line: 328, column: 2, scope: !15758)
!15768 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !233, file: !233, line: 294, type: !15769, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15771)
!15769 = !DISubroutineType(types: !15770)
!15770 = !{!15671, !15708}
!15771 = !{!15772}
!15772 = !DILocalVariable(name: "list", arg: 1, scope: !15768, file: !233, line: 294, type: !15708)
!15773 = !DILocation(line: 0, scope: !15768)
!15774 = !DILocation(line: 296, column: 9, scope: !15768)
!15775 = !DILocation(line: 296, column: 2, scope: !15768)
!15776 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !233, file: !233, line: 266, type: !15777, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15779)
!15777 = !DISubroutineType(types: !15778)
!15778 = !{!136, !15708}
!15779 = !{!15780}
!15780 = !DILocalVariable(name: "list", arg: 1, scope: !15776, file: !233, line: 266, type: !15708)
!15781 = !DILocation(line: 0, scope: !15776)
!15782 = !DILocation(line: 268, column: 15, scope: !15776)
!15783 = !DILocation(line: 268, column: 20, scope: !15776)
!15784 = !DILocation(line: 268, column: 2, scope: !15776)
!15785 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2373, file: !2373, line: 150, type: !15786, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15788)
!15786 = !DISubroutineType(types: !15787)
!15787 = !{!107, !2346}
!15788 = !{!15789, !15790, !15791, !15793}
!15789 = !DILocalVariable(name: "to", arg: 1, scope: !15785, file: !2373, line: 150, type: !2346)
!15790 = !DILocalVariable(name: "ret", scope: !15785, file: !2373, line: 152, type: !107)
!15791 = !DILocalVariable(name: "__i", scope: !15792, file: !2373, line: 154, type: !15554)
!15792 = distinct !DILexicalBlock(scope: !15785, file: !2373, line: 154, column: 2)
!15793 = !DILocalVariable(name: "__key", scope: !15792, file: !2373, line: 154, type: !15554)
!15794 = !DILocation(line: 0, scope: !15785)
!15795 = !DILocation(line: 0, scope: !15792)
!15796 = !DILocation(line: 0, scope: !15576, inlinedAt: !15797)
!15797 = distinct !DILocation(line: 154, column: 2, scope: !15792)
!15798 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !15799)
!15799 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !15797)
!15800 = !DILocation(line: 0, scope: !15585, inlinedAt: !15799)
!15801 = !DILocation(line: 155, column: 7, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15803, file: !2373, line: 155, column: 7)
!15803 = distinct !DILexicalBlock(scope: !15804, file: !2373, line: 154, column: 24)
!15804 = distinct !DILexicalBlock(scope: !15792, file: !2373, line: 154, column: 2)
!15805 = !DILocation(line: 155, column: 7, scope: !15803)
!15806 = !DILocation(line: 156, column: 4, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15802, file: !2373, line: 155, column: 39)
!15808 = !DILocation(line: 158, column: 3, scope: !15807)
!15809 = !DILocation(line: 0, scope: !15644, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 154, column: 2, scope: !15804)
!15811 = !DILocation(line: 0, scope: !15652, inlinedAt: !15812)
!15812 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !15810)
!15813 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !15812)
!15814 = !DILocation(line: 161, column: 2, scope: !15785)
!15815 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !233, file: !233, line: 225, type: !15816, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15820)
!15816 = !DISubroutineType(types: !15817)
!15817 = !{!136, !15818}
!15818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15819, size: 32)
!15819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!15820 = !{!15821}
!15821 = !DILocalVariable(name: "node", arg: 1, scope: !15815, file: !233, line: 225, type: !15818)
!15822 = !DILocation(line: 0, scope: !15815)
!15823 = !DILocation(line: 227, column: 15, scope: !15815)
!15824 = !DILocation(line: 227, column: 20, scope: !15815)
!15825 = !DILocation(line: 227, column: 2, scope: !15815)
!15826 = distinct !DISubprogram(name: "remove_timeout", scope: !2373, file: !2373, line: 53, type: !2367, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15827)
!15827 = !{!15828}
!15828 = !DILocalVariable(name: "t", arg: 1, scope: !15826, file: !2373, line: 53, type: !2346)
!15829 = !DILocation(line: 0, scope: !15826)
!15830 = !DILocation(line: 55, column: 6, scope: !15831)
!15831 = distinct !DILexicalBlock(scope: !15826, file: !2373, line: 55, column: 6)
!15832 = !DILocation(line: 55, column: 14, scope: !15831)
!15833 = !DILocation(line: 55, column: 6, scope: !15826)
!15834 = !DILocation(line: 56, column: 25, scope: !15835)
!15835 = distinct !DILexicalBlock(scope: !15831, file: !2373, line: 55, column: 23)
!15836 = !DILocation(line: 56, column: 12, scope: !15835)
!15837 = !DILocation(line: 56, column: 19, scope: !15835)
!15838 = !DILocation(line: 57, column: 2, scope: !15835)
!15839 = !DILocation(line: 59, column: 23, scope: !15826)
!15840 = !DILocation(line: 59, column: 2, scope: !15826)
!15841 = !DILocation(line: 60, column: 1, scope: !15826)
!15842 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !233, file: !233, line: 496, type: !15843, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15845)
!15843 = !DISubroutineType(types: !15844)
!15844 = !{null, !15671}
!15845 = !{!15846, !15847, !15848}
!15846 = !DILocalVariable(name: "node", arg: 1, scope: !15842, file: !233, line: 496, type: !15671)
!15847 = !DILocalVariable(name: "prev", scope: !15842, file: !233, line: 498, type: !15683)
!15848 = !DILocalVariable(name: "next", scope: !15842, file: !233, line: 499, type: !15683)
!15849 = !DILocation(line: 0, scope: !15842)
!15850 = !DILocation(line: 498, column: 34, scope: !15842)
!15851 = !DILocation(line: 499, column: 34, scope: !15842)
!15852 = !DILocation(line: 501, column: 8, scope: !15842)
!15853 = !DILocation(line: 501, column: 13, scope: !15842)
!15854 = !DILocation(line: 502, column: 8, scope: !15842)
!15855 = !DILocation(line: 502, column: 13, scope: !15842)
!15856 = !DILocation(line: 503, column: 2, scope: !15842)
!15857 = !DILocation(line: 504, column: 1, scope: !15842)
!15858 = distinct !DISubprogram(name: "sys_dnode_init", scope: !233, file: !233, line: 211, type: !15843, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15859)
!15859 = !{!15860}
!15860 = !DILocalVariable(name: "node", arg: 1, scope: !15858, file: !233, line: 211, type: !15671)
!15861 = !DILocation(line: 0, scope: !15858)
!15862 = !DILocation(line: 213, column: 8, scope: !15858)
!15863 = !DILocation(line: 213, column: 13, scope: !15858)
!15864 = !DILocation(line: 214, column: 8, scope: !15858)
!15865 = !DILocation(line: 214, column: 13, scope: !15858)
!15866 = !DILocation(line: 215, column: 1, scope: !15858)
!15867 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2373, file: !2373, line: 183, type: !15868, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15872)
!15868 = !DISubroutineType(types: !15869)
!15869 = !{!103, !15870}
!15870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15871, size: 32)
!15871 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2347)
!15872 = !{!15873, !15874, !15875, !15877}
!15873 = !DILocalVariable(name: "timeout", arg: 1, scope: !15867, file: !2373, line: 183, type: !15870)
!15874 = !DILocalVariable(name: "ticks", scope: !15867, file: !2373, line: 185, type: !103)
!15875 = !DILocalVariable(name: "__i", scope: !15876, file: !2373, line: 187, type: !15554)
!15876 = distinct !DILexicalBlock(scope: !15867, file: !2373, line: 187, column: 2)
!15877 = !DILocalVariable(name: "__key", scope: !15876, file: !2373, line: 187, type: !15554)
!15878 = !DILocation(line: 0, scope: !15867)
!15879 = !DILocation(line: 0, scope: !15876)
!15880 = !DILocation(line: 0, scope: !15576, inlinedAt: !15881)
!15881 = distinct !DILocation(line: 187, column: 2, scope: !15876)
!15882 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !15883)
!15883 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !15881)
!15884 = !DILocation(line: 0, scope: !15585, inlinedAt: !15883)
!15885 = !DILocation(line: 188, column: 11, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15887, file: !2373, line: 187, column: 24)
!15887 = distinct !DILexicalBlock(scope: !15876, file: !2373, line: 187, column: 2)
!15888 = !DILocation(line: 0, scope: !15644, inlinedAt: !15889)
!15889 = distinct !DILocation(line: 187, column: 2, scope: !15887)
!15890 = !DILocation(line: 0, scope: !15652, inlinedAt: !15891)
!15891 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !15889)
!15892 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !15891)
!15893 = !DILocation(line: 191, column: 2, scope: !15867)
!15894 = distinct !DISubprogram(name: "timeout_rem", scope: !2373, file: !2373, line: 165, type: !15868, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15895)
!15895 = !{!15896, !15897, !15898}
!15896 = !DILocalVariable(name: "timeout", arg: 1, scope: !15894, file: !2373, line: 165, type: !15870)
!15897 = !DILocalVariable(name: "ticks", scope: !15894, file: !2373, line: 167, type: !103)
!15898 = !DILocalVariable(name: "t", scope: !15899, file: !2373, line: 173, type: !2346)
!15899 = distinct !DILexicalBlock(scope: !15894, file: !2373, line: 173, column: 2)
!15900 = !DILocation(line: 0, scope: !15894)
!15901 = !DILocation(line: 169, column: 6, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15894, file: !2373, line: 169, column: 6)
!15903 = !DILocation(line: 169, column: 6, scope: !15894)
!15904 = !DILocation(line: 173, column: 28, scope: !15899)
!15905 = !DILocation(line: 0, scope: !15899)
!15906 = !DILocation(line: 173, column: 39, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15899, file: !2373, line: 173, column: 2)
!15908 = !DILocation(line: 173, column: 2, scope: !15899)
!15909 = !DILocation(line: 174, column: 15, scope: !15910)
!15910 = distinct !DILexicalBlock(scope: !15907, file: !2373, line: 173, column: 61)
!15911 = !DILocation(line: 174, column: 9, scope: !15910)
!15912 = !DILocation(line: 175, column: 15, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15910, file: !2373, line: 175, column: 7)
!15914 = !DILocation(line: 175, column: 7, scope: !15910)
!15915 = !DILocation(line: 173, column: 52, scope: !15907)
!15916 = distinct !{!15916, !15908, !15917}
!15917 = !DILocation(line: 178, column: 2, scope: !15899)
!15918 = !DILocation(line: 180, column: 17, scope: !15894)
!15919 = !DILocation(line: 180, column: 15, scope: !15894)
!15920 = !DILocation(line: 180, column: 2, scope: !15894)
!15921 = !DILocation(line: 181, column: 1, scope: !15894)
!15922 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !12794, file: !12794, line: 35, type: !15923, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15925)
!15923 = !DISubroutineType(types: !15924)
!15924 = !{!136, !15870}
!15925 = !{!15926}
!15926 = !DILocalVariable(name: "to", arg: 1, scope: !15922, file: !12794, line: 35, type: !15870)
!15927 = !DILocation(line: 0, scope: !15922)
!15928 = !DILocation(line: 37, column: 35, scope: !15922)
!15929 = !DILocation(line: 37, column: 10, scope: !15922)
!15930 = !DILocation(line: 37, column: 9, scope: !15922)
!15931 = !DILocation(line: 37, column: 2, scope: !15922)
!15932 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2373, file: !2373, line: 194, type: !15868, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15933)
!15933 = !{!15934, !15935, !15936, !15938}
!15934 = !DILocalVariable(name: "timeout", arg: 1, scope: !15932, file: !2373, line: 194, type: !15870)
!15935 = !DILocalVariable(name: "ticks", scope: !15932, file: !2373, line: 196, type: !103)
!15936 = !DILocalVariable(name: "__i", scope: !15937, file: !2373, line: 198, type: !15554)
!15937 = distinct !DILexicalBlock(scope: !15932, file: !2373, line: 198, column: 2)
!15938 = !DILocalVariable(name: "__key", scope: !15937, file: !2373, line: 198, type: !15554)
!15939 = !DILocation(line: 0, scope: !15932)
!15940 = !DILocation(line: 0, scope: !15937)
!15941 = !DILocation(line: 0, scope: !15576, inlinedAt: !15942)
!15942 = distinct !DILocation(line: 198, column: 2, scope: !15937)
!15943 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !15944)
!15944 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !15942)
!15945 = !DILocation(line: 0, scope: !15585, inlinedAt: !15944)
!15946 = !DILocation(line: 199, column: 11, scope: !15947)
!15947 = distinct !DILexicalBlock(scope: !15948, file: !2373, line: 198, column: 24)
!15948 = distinct !DILexicalBlock(scope: !15937, file: !2373, line: 198, column: 2)
!15949 = !DILocation(line: 199, column: 23, scope: !15947)
!15950 = !DILocation(line: 0, scope: !15644, inlinedAt: !15951)
!15951 = distinct !DILocation(line: 198, column: 2, scope: !15948)
!15952 = !DILocation(line: 0, scope: !15652, inlinedAt: !15953)
!15953 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !15951)
!15954 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !15953)
!15955 = !DILocation(line: 199, column: 21, scope: !15947)
!15956 = !DILocation(line: 202, column: 2, scope: !15932)
!15957 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2373, file: !2373, line: 205, type: !15660, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15958)
!15958 = !{!15959, !15960, !15962}
!15959 = !DILocalVariable(name: "ret", scope: !15957, file: !2373, line: 207, type: !727)
!15960 = !DILocalVariable(name: "__i", scope: !15961, file: !2373, line: 209, type: !15554)
!15961 = distinct !DILexicalBlock(scope: !15957, file: !2373, line: 209, column: 2)
!15962 = !DILocalVariable(name: "__key", scope: !15961, file: !2373, line: 209, type: !15554)
!15963 = !DILocation(line: 0, scope: !15957)
!15964 = !DILocation(line: 0, scope: !15961)
!15965 = !DILocation(line: 0, scope: !15576, inlinedAt: !15966)
!15966 = distinct !DILocation(line: 209, column: 2, scope: !15961)
!15967 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !15968)
!15968 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !15966)
!15969 = !DILocation(line: 0, scope: !15585, inlinedAt: !15968)
!15970 = !DILocation(line: 210, column: 9, scope: !15971)
!15971 = distinct !DILexicalBlock(scope: !15972, file: !2373, line: 209, column: 24)
!15972 = distinct !DILexicalBlock(scope: !15961, file: !2373, line: 209, column: 2)
!15973 = !DILocation(line: 0, scope: !15644, inlinedAt: !15974)
!15974 = distinct !DILocation(line: 209, column: 2, scope: !15972)
!15975 = !DILocation(line: 0, scope: !15652, inlinedAt: !15976)
!15976 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !15974)
!15977 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !15976)
!15978 = !DILocation(line: 212, column: 2, scope: !15957)
!15979 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2373, file: !2373, line: 215, type: !10434, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !15980)
!15980 = !{!15981, !15982, !15983, !15985, !15986, !15989, !15990}
!15981 = !DILocalVariable(name: "ticks", arg: 1, scope: !15979, file: !2373, line: 215, type: !727)
!15982 = !DILocalVariable(name: "is_idle", arg: 2, scope: !15979, file: !2373, line: 215, type: !136)
!15983 = !DILocalVariable(name: "__i", scope: !15984, file: !2373, line: 217, type: !15554)
!15984 = distinct !DILexicalBlock(scope: !15979, file: !2373, line: 217, column: 2)
!15985 = !DILocalVariable(name: "__key", scope: !15984, file: !2373, line: 217, type: !15554)
!15986 = !DILocalVariable(name: "next_to", scope: !15987, file: !2373, line: 218, type: !107)
!15987 = distinct !DILexicalBlock(scope: !15988, file: !2373, line: 217, column: 24)
!15988 = distinct !DILexicalBlock(scope: !15984, file: !2373, line: 217, column: 2)
!15989 = !DILocalVariable(name: "sooner", scope: !15987, file: !2373, line: 219, type: !136)
!15990 = !DILocalVariable(name: "imminent", scope: !15987, file: !2373, line: 221, type: !136)
!15991 = !DILocation(line: 0, scope: !15979)
!15992 = !DILocation(line: 0, scope: !15984)
!15993 = !DILocation(line: 0, scope: !15576, inlinedAt: !15994)
!15994 = distinct !DILocation(line: 217, column: 2, scope: !15984)
!15995 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !15996)
!15996 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !15994)
!15997 = !DILocation(line: 0, scope: !15585, inlinedAt: !15996)
!15998 = !DILocation(line: 218, column: 17, scope: !15987)
!15999 = !DILocation(line: 0, scope: !15987)
!16000 = !DILocation(line: 221, column: 27, scope: !15987)
!16001 = !DILocation(line: 233, column: 17, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !15987, file: !2373, line: 233, column: 7)
!16003 = !DILocation(line: 234, column: 26, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !16002, file: !2373, line: 233, column: 56)
!16005 = !DILocation(line: 234, column: 4, scope: !16004)
!16006 = !DILocation(line: 235, column: 3, scope: !16004)
!16007 = !DILocation(line: 0, scope: !15644, inlinedAt: !16008)
!16008 = distinct !DILocation(line: 217, column: 2, scope: !15988)
!16009 = !DILocation(line: 0, scope: !15652, inlinedAt: !16010)
!16010 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !16008)
!16011 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !16010)
!16012 = !DILocation(line: 237, column: 1, scope: !15979)
!16013 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2373, file: !2373, line: 239, type: !16014, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16016)
!16014 = !DISubroutineType(types: !16015)
!16015 = !{null, !727}
!16016 = !{!16017, !16018, !16019, !16021}
!16017 = !DILocalVariable(name: "ticks", arg: 1, scope: !16013, file: !2373, line: 239, type: !727)
!16018 = !DILocalVariable(name: "key", scope: !16013, file: !2373, line: 245, type: !15554)
!16019 = !DILocalVariable(name: "t", scope: !16020, file: !2373, line: 262, type: !2346)
!16020 = distinct !DILexicalBlock(scope: !16013, file: !2373, line: 261, column: 67)
!16021 = !DILocalVariable(name: "dt", scope: !16020, file: !2373, line: 263, type: !107)
!16022 = !DILocation(line: 0, scope: !16013)
!16023 = !DILocation(line: 242, column: 2, scope: !16013)
!16024 = !DILocation(line: 0, scope: !15576, inlinedAt: !16025)
!16025 = distinct !DILocation(line: 245, column: 25, scope: !16013)
!16026 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !16027)
!16027 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !16025)
!16028 = !DILocation(line: 0, scope: !15585, inlinedAt: !16027)
!16029 = !DILocation(line: 261, column: 9, scope: !16013)
!16030 = !DILocation(line: 261, column: 17, scope: !16013)
!16031 = !DILocation(line: 261, column: 25, scope: !16013)
!16032 = !DILocation(line: 261, column: 37, scope: !16013)
!16033 = !DILocation(line: 261, column: 47, scope: !16013)
!16034 = !DILocation(line: 261, column: 44, scope: !16013)
!16035 = !DILocation(line: 261, column: 2, scope: !16013)
!16036 = !DILocation(line: 0, scope: !16020)
!16037 = !DILocation(line: 263, column: 12, scope: !16020)
!16038 = !DILocation(line: 265, column: 16, scope: !16020)
!16039 = !DILocation(line: 265, column: 13, scope: !16020)
!16040 = !DILocation(line: 266, column: 13, scope: !16020)
!16041 = !DILocation(line: 267, column: 3, scope: !16020)
!16042 = !DILocation(line: 0, scope: !15644, inlinedAt: !16043)
!16043 = distinct !DILocation(line: 269, column: 3, scope: !16020)
!16044 = !DILocation(line: 0, scope: !15652, inlinedAt: !16045)
!16045 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !16043)
!16046 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !16045)
!16047 = !DILocation(line: 270, column: 6, scope: !16020)
!16048 = !DILocation(line: 270, column: 3, scope: !16020)
!16049 = !DILocation(line: 0, scope: !15576, inlinedAt: !16050)
!16050 = distinct !DILocation(line: 271, column: 9, scope: !16020)
!16051 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !16052)
!16052 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !16050)
!16053 = !DILocation(line: 0, scope: !15585, inlinedAt: !16052)
!16054 = !DILocation(line: 272, column: 22, scope: !16020)
!16055 = distinct !{!16055, !16035, !16056}
!16056 = !DILocation(line: 273, column: 2, scope: !16013)
!16057 = !DILocation(line: 276, column: 19, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16059, file: !2373, line: 275, column: 23)
!16059 = distinct !DILexicalBlock(scope: !16013, file: !2373, line: 275, column: 6)
!16060 = !DILocation(line: 277, column: 2, scope: !16058)
!16061 = !DILocation(line: 279, column: 15, scope: !16013)
!16062 = !DILocation(line: 279, column: 12, scope: !16013)
!16063 = !DILocation(line: 280, column: 21, scope: !16013)
!16064 = !DILocation(line: 282, column: 24, scope: !16013)
!16065 = !DILocation(line: 282, column: 2, scope: !16013)
!16066 = !DILocation(line: 0, scope: !15644, inlinedAt: !16067)
!16067 = distinct !DILocation(line: 284, column: 2, scope: !16013)
!16068 = !DILocation(line: 0, scope: !15652, inlinedAt: !16069)
!16069 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !16067)
!16070 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !16069)
!16071 = !DILocation(line: 285, column: 1, scope: !16013)
!16072 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2373, file: !2373, line: 287, type: !16073, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16075)
!16073 = !DISubroutineType(types: !16074)
!16074 = !{!105}
!16075 = !{!16076, !16077, !16079}
!16076 = !DILocalVariable(name: "t", scope: !16072, file: !2373, line: 289, type: !1491)
!16077 = !DILocalVariable(name: "__i", scope: !16078, file: !2373, line: 291, type: !15554)
!16078 = distinct !DILexicalBlock(scope: !16072, file: !2373, line: 291, column: 2)
!16079 = !DILocalVariable(name: "__key", scope: !16078, file: !2373, line: 291, type: !15554)
!16080 = !DILocation(line: 0, scope: !16072)
!16081 = !DILocation(line: 0, scope: !16078)
!16082 = !DILocation(line: 0, scope: !15576, inlinedAt: !16083)
!16083 = distinct !DILocation(line: 291, column: 2, scope: !16078)
!16084 = !DILocation(line: 55, column: 2, scope: !15585, inlinedAt: !16085)
!16085 = distinct !DILocation(line: 145, column: 10, scope: !15576, inlinedAt: !16083)
!16086 = !DILocation(line: 0, scope: !15585, inlinedAt: !16085)
!16087 = !DILocation(line: 292, column: 7, scope: !16088)
!16088 = distinct !DILexicalBlock(scope: !16089, file: !2373, line: 291, column: 24)
!16089 = distinct !DILexicalBlock(scope: !16078, file: !2373, line: 291, column: 2)
!16090 = !DILocation(line: 292, column: 19, scope: !16088)
!16091 = !DILocation(line: 0, scope: !15644, inlinedAt: !16092)
!16092 = distinct !DILocation(line: 291, column: 2, scope: !16089)
!16093 = !DILocation(line: 0, scope: !15652, inlinedAt: !16094)
!16094 = distinct !DILocation(line: 215, column: 2, scope: !15644, inlinedAt: !16092)
!16095 = !DILocation(line: 95, column: 2, scope: !15652, inlinedAt: !16094)
!16096 = !DILocation(line: 292, column: 17, scope: !16088)
!16097 = !DILocation(line: 294, column: 2, scope: !16072)
!16098 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2373, file: !2373, line: 297, type: !6169, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !250)
!16099 = !DILocation(line: 300, column: 19, scope: !16098)
!16100 = !DILocation(line: 300, column: 9, scope: !16098)
!16101 = !DILocation(line: 300, column: 2, scope: !16098)
!16102 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2373, file: !2373, line: 306, type: !16073, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !250)
!16103 = !DILocation(line: 308, column: 9, scope: !16102)
!16104 = !DILocation(line: 308, column: 2, scope: !16102)
!16105 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2373, file: !2373, line: 319, type: !6179, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16106)
!16106 = !{!16107, !16108, !16109, !16110}
!16107 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !16105, file: !2373, line: 319, type: !162)
!16108 = !DILocalVariable(name: "start_cycles", scope: !16105, file: !2373, line: 328, type: !162)
!16109 = !DILocalVariable(name: "cycles_to_wait", scope: !16105, file: !2373, line: 331, type: !162)
!16110 = !DILocalVariable(name: "current_cycles", scope: !16111, file: !2373, line: 338, type: !162)
!16111 = distinct !DILexicalBlock(scope: !16112, file: !2373, line: 337, column: 11)
!16112 = distinct !DILexicalBlock(scope: !16113, file: !2373, line: 337, column: 2)
!16113 = distinct !DILexicalBlock(scope: !16105, file: !2373, line: 337, column: 2)
!16114 = !DILocation(line: 0, scope: !16105)
!16115 = !DILocation(line: 322, column: 19, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16105, file: !2373, line: 322, column: 6)
!16117 = !DILocation(line: 322, column: 6, scope: !16105)
!16118 = !DILocation(line: 328, column: 26, scope: !16105)
!16119 = !DILocation(line: 333, column: 43, scope: !16105)
!16120 = !DILocation(line: 337, column: 2, scope: !16105)
!16121 = !DILocation(line: 338, column: 29, scope: !16111)
!16122 = !DILocation(line: 0, scope: !16111)
!16123 = !DILocation(line: 341, column: 23, scope: !16124)
!16124 = distinct !DILexicalBlock(scope: !16111, file: !2373, line: 341, column: 7)
!16125 = !DILocation(line: 341, column: 39, scope: !16124)
!16126 = !DILocation(line: 349, column: 1, scope: !16105)
!16127 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !224, file: !224, line: 1675, type: !6169, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !250)
!16128 = !DILocation(line: 1677, column: 9, scope: !16127)
!16129 = !DILocation(line: 1677, column: 2, scope: !16127)
!16130 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !16131, file: !16131, line: 24, type: !6169, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !250)
!16131 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16132 = !DILocation(line: 26, column: 9, scope: !16130)
!16133 = !DILocation(line: 26, column: 2, scope: !16130)
!16134 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2373, file: !2373, line: 364, type: !16135, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2343, retainedNodes: !16137)
!16135 = !DISubroutineType(types: !16136)
!16136 = !{!1491, !15544}
!16137 = !{!16138, !16139}
!16138 = !DILocalVariable(name: "timeout", arg: 1, scope: !16134, file: !2373, line: 364, type: !15544)
!16139 = !DILocalVariable(name: "dt", scope: !16134, file: !2373, line: 366, type: !103)
!16140 = !DILocation(line: 0, scope: !16134)
!16141 = !DILocation(line: 368, column: 6, scope: !16134)
!16142 = !DILocation(line: 371, column: 10, scope: !16143)
!16143 = distinct !DILexicalBlock(scope: !16144, file: !2373, line: 370, column: 47)
!16144 = distinct !DILexicalBlock(scope: !16145, file: !2373, line: 370, column: 13)
!16145 = distinct !DILexicalBlock(scope: !16134, file: !2373, line: 368, column: 6)
!16146 = !DILocation(line: 371, column: 3, scope: !16143)
!16147 = !DILocation(line: 376, column: 58, scope: !16148)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !2373, line: 376, column: 7)
!16149 = distinct !DILexicalBlock(scope: !16144, file: !2373, line: 372, column: 9)
!16150 = !DILocation(line: 376, column: 7, scope: !16149)
!16151 = !DILocation(line: 376, column: 43, scope: !16148)
!16152 = !DILocation(line: 377, column: 4, scope: !16153)
!16153 = distinct !DILexicalBlock(scope: !16148, file: !2373, line: 376, column: 64)
!16154 = !DILocation(line: 379, column: 10, scope: !16149)
!16155 = !DILocation(line: 379, column: 33, scope: !16149)
!16156 = !DILocation(line: 379, column: 31, scope: !16149)
!16157 = !DILocation(line: 379, column: 3, scope: !16149)
!16158 = !DILocation(line: 0, scope: !16145)
!16159 = !DILocation(line: 381, column: 1, scope: !16134)
!16160 = distinct !DISubprogram(name: "boot_banner", scope: !16161, file: !16161, line: 26, type: !3130, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3116, retainedNodes: !250)
!16161 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16162 = !DILocation(line: 34, column: 2, scope: !16160)
!16163 = !DILocation(line: 36, column: 1, scope: !16160)
!16164 = distinct !DISubprogram(name: "statics_init", scope: !2401, file: !2401, line: 21, type: !2407, scopeLine: 22, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16165)
!16165 = !{!16166, !16167}
!16166 = !DILocalVariable(name: "unused", arg: 1, scope: !16164, file: !2401, line: 21, type: !2409)
!16167 = !DILocalVariable(name: "h", scope: !16168, file: !2401, line: 24, type: !16169)
!16168 = distinct !DILexicalBlock(scope: !16164, file: !2401, line: 24, column: 2)
!16169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16170, size: 32)
!16170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !224, line: 5073, size: 160, elements: !16171)
!16171 = !{!16172, !16178, !16184}
!16172 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16170, file: !224, line: 5074, baseType: !16173, size: 96)
!16173 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !454, line: 56, size: 96, elements: !16174)
!16174 = !{!16175, !16176, !16177}
!16175 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16173, file: !454, line: 57, baseType: !457, size: 32)
!16176 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16173, file: !454, line: 58, baseType: !102, size: 32, offset: 32)
!16177 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16173, file: !454, line: 59, baseType: !252, size: 32, offset: 64)
!16178 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16170, file: !224, line: 5075, baseType: !16179, size: 64, offset: 96)
!16179 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !228, line: 233, baseType: !16180)
!16180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !228, line: 231, size: 64, elements: !16181)
!16181 = !{!16182}
!16182 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16180, file: !228, line: 232, baseType: !16183, size: 64)
!16183 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !233, line: 48, baseType: !2387)
!16184 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16170, file: !224, line: 5076, baseType: !16185, offset: 160)
!16185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !249, line: 43, elements: !250)
!16186 = !DILocation(line: 0, scope: !16164)
!16187 = !DILocation(line: 0, scope: !16168)
!16188 = !DILocation(line: 24, column: 2, scope: !16168)
!16189 = !DILocation(line: 52, column: 2, scope: !16164)
!16190 = !DILocation(line: 49, column: 27, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16192, file: !2401, line: 48, column: 3)
!16192 = distinct !DILexicalBlock(scope: !16193, file: !2401, line: 24, column: 36)
!16193 = distinct !DILexicalBlock(scope: !16168, file: !2401, line: 24, column: 2)
!16194 = !DILocation(line: 49, column: 45, scope: !16191)
!16195 = !DILocation(line: 49, column: 4, scope: !16191)
!16196 = !DILocation(line: 24, column: 2, scope: !16193)
!16197 = !DILocation(line: 24, column: 2, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16193, file: !2401, line: 24, column: 2)
!16199 = distinct !{!16199, !16188, !16200}
!16200 = !DILocation(line: 51, column: 2, scope: !16168)
!16201 = distinct !DISubprogram(name: "k_heap_init", scope: !2401, file: !2401, line: 13, type: !16202, scopeLine: 14, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16204)
!16202 = !DISubroutineType(types: !16203)
!16203 = !{null, !16169, !102, !252}
!16204 = !{!16205, !16206, !16207}
!16205 = !DILocalVariable(name: "h", arg: 1, scope: !16201, file: !2401, line: 13, type: !16169)
!16206 = !DILocalVariable(name: "mem", arg: 2, scope: !16201, file: !2401, line: 13, type: !102)
!16207 = !DILocalVariable(name: "bytes", arg: 3, scope: !16201, file: !2401, line: 13, type: !252)
!16208 = !DILocation(line: 0, scope: !16201)
!16209 = !DILocation(line: 15, column: 19, scope: !16201)
!16210 = !DILocation(line: 15, column: 2, scope: !16201)
!16211 = !DILocation(line: 16, column: 20, scope: !16201)
!16212 = !DILocation(line: 16, column: 2, scope: !16201)
!16213 = !DILocation(line: 19, column: 1, scope: !16201)
!16214 = distinct !DISubprogram(name: "z_waitq_init", scope: !12726, file: !12726, line: 47, type: !16215, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16218)
!16215 = !DISubroutineType(types: !16216)
!16216 = !{null, !16217}
!16217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16179, size: 32)
!16218 = !{!16219}
!16219 = !DILocalVariable(name: "w", arg: 1, scope: !16214, file: !12726, line: 47, type: !16217)
!16220 = !DILocation(line: 0, scope: !16214)
!16221 = !DILocation(line: 49, column: 21, scope: !16214)
!16222 = !DILocation(line: 49, column: 2, scope: !16214)
!16223 = !DILocation(line: 50, column: 1, scope: !16214)
!16224 = distinct !DISubprogram(name: "sys_dlist_init", scope: !233, file: !233, line: 197, type: !16225, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16228)
!16225 = !DISubroutineType(types: !16226)
!16226 = !{null, !16227}
!16227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16183, size: 32)
!16228 = !{!16229}
!16229 = !DILocalVariable(name: "list", arg: 1, scope: !16224, file: !233, line: 197, type: !16227)
!16230 = !DILocation(line: 0, scope: !16224)
!16231 = !DILocation(line: 199, column: 8, scope: !16224)
!16232 = !DILocation(line: 199, column: 13, scope: !16224)
!16233 = !DILocation(line: 200, column: 8, scope: !16224)
!16234 = !DILocation(line: 200, column: 13, scope: !16224)
!16235 = !DILocation(line: 201, column: 1, scope: !16224)
!16236 = distinct !DISubprogram(name: "k_heap_aligned_alloc", scope: !2401, file: !2401, line: 64, type: !16237, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16243)
!16237 = !DISubroutineType(types: !16238)
!16238 = !{!102, !16169, !252, !252, !16239}
!16239 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16240)
!16240 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16241)
!16241 = !{!16242}
!16242 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16240, file: !104, line: 66, baseType: !103, size: 64)
!16243 = !{!16244, !16245, !16246, !16247, !16248, !16249, !16250, !16251, !16256}
!16244 = !DILocalVariable(name: "h", arg: 1, scope: !16236, file: !2401, line: 64, type: !16169)
!16245 = !DILocalVariable(name: "align", arg: 2, scope: !16236, file: !2401, line: 64, type: !252)
!16246 = !DILocalVariable(name: "bytes", arg: 3, scope: !16236, file: !2401, line: 64, type: !252)
!16247 = !DILocalVariable(name: "timeout", arg: 4, scope: !16236, file: !2401, line: 65, type: !16239)
!16248 = !DILocalVariable(name: "now", scope: !16236, file: !2401, line: 67, type: !105)
!16249 = !DILocalVariable(name: "end", scope: !16236, file: !2401, line: 67, type: !105)
!16250 = !DILocalVariable(name: "ret", scope: !16236, file: !2401, line: 68, type: !102)
!16251 = !DILocalVariable(name: "key", scope: !16236, file: !2401, line: 72, type: !16252)
!16252 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !249, line: 106, baseType: !16253)
!16253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !249, line: 32, size: 32, elements: !16254)
!16254 = !{!16255}
!16255 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16253, file: !249, line: 33, baseType: !107, size: 32)
!16256 = !DILocalVariable(name: "blocked_alloc", scope: !16236, file: !2401, line: 78, type: !136)
!16257 = !DILocation(line: 0, scope: !16236)
!16258 = !DILocation(line: 67, column: 21, scope: !16236)
!16259 = !DILocation(line: 70, column: 8, scope: !16236)
!16260 = !DILocation(line: 72, column: 41, scope: !16236)
!16261 = !DILocalVariable(name: "l", arg: 1, scope: !16262, file: !249, line: 136, type: !16265)
!16262 = distinct !DISubprogram(name: "k_spin_lock", scope: !249, file: !249, line: 136, type: !16263, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16266)
!16263 = !DISubroutineType(types: !16264)
!16264 = !{!16252, !16265}
!16265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16185, size: 32)
!16266 = !{!16261, !16267}
!16267 = !DILocalVariable(name: "k", scope: !16262, file: !249, line: 139, type: !16252)
!16268 = !DILocation(line: 0, scope: !16262, inlinedAt: !16269)
!16269 = distinct !DILocation(line: 72, column: 25, scope: !16236)
!16270 = !DILocation(line: 55, column: 2, scope: !16271, inlinedAt: !16275)
!16271 = distinct !DISubprogram(name: "arch_irq_lock", scope: !5914, file: !5914, line: 42, type: !5915, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16272)
!16272 = !{!16273, !16274}
!16273 = !DILocalVariable(name: "key", scope: !16271, file: !5914, line: 44, type: !32)
!16274 = !DILocalVariable(name: "tmp", scope: !16271, file: !5914, line: 53, type: !32)
!16275 = distinct !DILocation(line: 145, column: 10, scope: !16262, inlinedAt: !16269)
!16276 = !{i64 2239719}
!16277 = !DILocation(line: 0, scope: !16271, inlinedAt: !16275)
!16278 = !DILocation(line: 81, column: 9, scope: !16279)
!16279 = distinct !DILexicalBlock(scope: !16236, file: !2401, line: 80, column: 22)
!16280 = !DILocation(line: 83, column: 9, scope: !16279)
!16281 = !DILocation(line: 85, column: 12, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16279, file: !2401, line: 84, column: 7)
!16283 = !DILocation(line: 85, column: 21, scope: !16282)
!16284 = !DILocation(line: 85, column: 30, scope: !16282)
!16285 = !DILocation(line: 85, column: 37, scope: !16282)
!16286 = !DILocation(line: 84, column: 7, scope: !16279)
!16287 = !DILocation(line: 99, column: 10, scope: !16279)
!16288 = !DILocation(line: 0, scope: !16262, inlinedAt: !16289)
!16289 = distinct !DILocation(line: 101, column: 9, scope: !16279)
!16290 = !DILocation(line: 55, column: 2, scope: !16271, inlinedAt: !16291)
!16291 = distinct !DILocation(line: 145, column: 10, scope: !16262, inlinedAt: !16289)
!16292 = !DILocation(line: 0, scope: !16271, inlinedAt: !16291)
!16293 = distinct !{!16293, !16294, !16295}
!16294 = !DILocation(line: 80, column: 2, scope: !16236)
!16295 = !DILocation(line: 102, column: 2, scope: !16236)
!16296 = !DILocalVariable(name: "key", arg: 2, scope: !16297, file: !249, line: 190, type: !16252)
!16297 = distinct !DISubprogram(name: "k_spin_unlock", scope: !249, file: !249, line: 189, type: !16298, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16300)
!16298 = !DISubroutineType(types: !16299)
!16299 = !{null, !16265, !16252}
!16300 = !{!16301, !16296}
!16301 = !DILocalVariable(name: "l", arg: 1, scope: !16297, file: !249, line: 189, type: !16265)
!16302 = !DILocation(line: 0, scope: !16297, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 106, column: 2, scope: !16236)
!16304 = !DILocalVariable(name: "key", arg: 1, scope: !16305, file: !5914, line: 84, type: !32)
!16305 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !5914, file: !5914, line: 84, type: !5925, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16306)
!16306 = !{!16304}
!16307 = !DILocation(line: 0, scope: !16305, inlinedAt: !16308)
!16308 = distinct !DILocation(line: 215, column: 2, scope: !16297, inlinedAt: !16303)
!16309 = !DILocation(line: 95, column: 2, scope: !16305, inlinedAt: !16308)
!16310 = !{i64 2240536}
!16311 = !DILocation(line: 107, column: 2, scope: !16236)
!16312 = distinct !DISubprogram(name: "k_heap_alloc", scope: !2401, file: !2401, line: 110, type: !16313, scopeLine: 111, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16315)
!16313 = !DISubroutineType(types: !16314)
!16314 = !{!102, !16169, !252, !16239}
!16315 = !{!16316, !16317, !16318, !16319}
!16316 = !DILocalVariable(name: "h", arg: 1, scope: !16312, file: !2401, line: 110, type: !16169)
!16317 = !DILocalVariable(name: "bytes", arg: 2, scope: !16312, file: !2401, line: 110, type: !252)
!16318 = !DILocalVariable(name: "timeout", arg: 3, scope: !16312, file: !2401, line: 110, type: !16239)
!16319 = !DILocalVariable(name: "ret", scope: !16312, file: !2401, line: 114, type: !102)
!16320 = !DILocation(line: 0, scope: !16312)
!16321 = !DILocation(line: 114, column: 14, scope: !16312)
!16322 = !DILocation(line: 118, column: 2, scope: !16312)
!16323 = distinct !DISubprogram(name: "k_heap_free", scope: !2401, file: !2401, line: 121, type: !16324, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2382, retainedNodes: !16326)
!16324 = !DISubroutineType(types: !16325)
!16325 = !{null, !16169, !102}
!16326 = !{!16327, !16328, !16329}
!16327 = !DILocalVariable(name: "h", arg: 1, scope: !16323, file: !2401, line: 121, type: !16169)
!16328 = !DILocalVariable(name: "mem", arg: 2, scope: !16323, file: !2401, line: 121, type: !102)
!16329 = !DILocalVariable(name: "key", scope: !16323, file: !2401, line: 123, type: !16252)
!16330 = !DILocation(line: 0, scope: !16323)
!16331 = !DILocation(line: 0, scope: !16262, inlinedAt: !16332)
!16332 = distinct !DILocation(line: 123, column: 25, scope: !16323)
!16333 = !DILocation(line: 55, column: 2, scope: !16271, inlinedAt: !16334)
!16334 = distinct !DILocation(line: 145, column: 10, scope: !16262, inlinedAt: !16332)
!16335 = !DILocation(line: 0, scope: !16271, inlinedAt: !16334)
!16336 = !DILocation(line: 125, column: 20, scope: !16323)
!16337 = !DILocation(line: 125, column: 2, scope: !16323)
!16338 = !DILocation(line: 128, column: 60, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16323, file: !2401, line: 128, column: 6)
!16340 = !DILocation(line: 128, column: 43, scope: !16339)
!16341 = !DILocation(line: 128, column: 68, scope: !16339)
!16342 = !DILocation(line: 128, column: 6, scope: !16323)
!16343 = !DILocation(line: 123, column: 41, scope: !16323)
!16344 = !DILocation(line: 129, column: 3, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16339, file: !2401, line: 128, column: 74)
!16346 = !DILocation(line: 130, column: 2, scope: !16345)
!16347 = !DILocation(line: 0, scope: !16297, inlinedAt: !16348)
!16348 = distinct !DILocation(line: 131, column: 3, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16339, file: !2401, line: 130, column: 9)
!16350 = !DILocation(line: 0, scope: !16305, inlinedAt: !16351)
!16351 = distinct !DILocation(line: 215, column: 2, scope: !16297, inlinedAt: !16348)
!16352 = !DILocation(line: 95, column: 2, scope: !16305, inlinedAt: !16351)
!16353 = !DILocation(line: 133, column: 1, scope: !16323)
