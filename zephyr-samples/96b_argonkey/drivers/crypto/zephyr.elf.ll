; ModuleID = 'build/96b_argonkey/crypto/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.log_source_const_data = type { i8*, i8 }
%struct.mode_test = type { i8*, void (%struct.device*)* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.ctr_params }
%struct.ctr_params = type { i32 }
%struct.arm_mpu_region = type { i32, i8*, %struct.ctr_params }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.crypto_driver_api = type { i32 (%struct.device*)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)*, i32 (%struct.device*, %struct.hash_ctx*, i32)*, i32 (%struct.device*, %struct.hash_ctx*)*, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* }
%struct.cipher_ctx = type { %struct.cipher_ops, %union.anon.4, %struct.device*, i8*, i8*, %union.anon.5, i16, i16 }
%struct.cipher_ops = type { i32, %union.anon.3 }
%union.anon.3 = type { i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)* }
%struct.cipher_pkt = type { i8*, i32, i8*, i32, i32, %struct.cipher_ctx* }
%union.anon.4 = type { i8* }
%union.anon.5 = type { %struct.ctr_params }
%struct.hash_ctx = type { %struct.device*, i8*, i32 (%struct.hash_ctx*, %struct.hash_pkt*, i1)*, i8, i16 }
%struct.hash_pkt = type { i8*, i32, i8*, %struct.hash_ctx* }
%struct.tc_shim_drv_state = type { i32, %struct.tc_aes_key_sched_struct }
%struct.tc_aes_key_sched_struct = type { [44 x i32] }
%struct.gpio_stm32_config = type { %struct.ctr_params, i32*, i32, %struct._thread_arch }
%struct._thread_arch = type { i32, i32 }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.ctr_params, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct.z_thread_stack_element = type { i8 }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %union.anon, i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %union.anon, %union.anon*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { %struct._dnode }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %union.anon, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type {}
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct.k_spinlock }
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.cipher_aead_pkt = type { %struct.cipher_pkt*, i8*, i32, i8* }
%struct.ccm_params = type { i16, i16 }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.ctr_params, %struct.ctr_params }
%struct.tc_ccm_mode_struct = type { %struct.tc_aes_key_sched_struct*, i8*, i32 }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, %struct.ctr_params, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %union.anon }
%struct._sflist = type { %struct.ctr_params*, %struct.ctr_params* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235245 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235225 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235215 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235315 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235305 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235295 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235285 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235275 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235265 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235255 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134236984 to i8*), void (i8*)* inttoptr (i32 134235235 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [45 x i8*] [i8* bitcast (%struct.log_source_const_data* @log_const_main to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_crypto_tinycrypt to i8*), i8* bitcast (%struct.init_entry* @__init___device_crypto_tinycrypt to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_tinycrypt to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@.str = private unnamed_addr constant [5 x i8] c"main\00", align 1
@log_const_main = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i8 4 }, section ".log_const_main", align 4, !dbg !25
@.str.1 = private unnamed_addr constant [80 x i8] c"%c: Please provision the key separately as the module doesnt support a raw key\0A\00", align 1
@.str.2 = private unnamed_addr constant [90 x i8] c"%c: The app assumes sync semantics. Please rewrite the app accordingly before proceeding\0A\00", align 1
@.str.3 = private unnamed_addr constant [95 x i8] c"%c: The app assumes distinct IO buffers. Please rewrite the app accordingly before proceeding\0A\00", align 1
@cap_flags = dso_local local_unnamed_addr global i32 0, align 4, !dbg !314
@__const.ecb_mode.ecb_key = private unnamed_addr constant [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1
@__const.ecb_mode.ecb_plaintext = private unnamed_addr constant [16 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF", align 1
@__const.ecb_mode.ecb_ciphertext = private unnamed_addr constant [16 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"%c: ECB mode ENCRYPT - Failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"%c: Output length (encryption): %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"%c: ECB mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"%c: ECB mode ENCRYPT - Match\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%c: ECB mode DECRYPT - Failed\0A\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"%c: Output length (decryption): %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [77 x i8] c"%c: ECB mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"%c: ECB mode DECRYPT - Match\0A\00", align 1
@key = internal global [16 x i8] c"+~\15\16(\AE\D2\A6\AB\F7\15\88\09\CFO<", align 1, !dbg !316
@plaintext = internal global [64 x i8] c"k\C1\BE\E2.@\9F\96\E9=~\11s\93\17*\AE-\8AW\1E\03\AC\9C\9E\B7o\ACE\AF\8EQ0\C8\1CF\A3\\\E4\11\E5\FB\C1\19\1A\0AR\EF\F6\9F$E\DFO\9B\17\AD+A{\E6l7\10", align 1, !dbg !318
@cbc_mode.iv = internal global [16 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F", align 1, !dbg !291
@.str.12 = private unnamed_addr constant [31 x i8] c"%c: CBC mode ENCRYPT - Failed\0A\00", align 1
@cbc_ciphertext = internal constant [80 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0FvI\AB\AC\81\19\B2F\CE\E9\8E\9B\12\E9\19}P\86\CB\9BPr\19\EE\95\DB\11:\91vx\B2s\BE\D6\B8\E3\C1t;q\16\E6\9E\22\22\95\16?\F1\CA\A1h\1F\AC\09\12\0E\CA0u\86\E1\A7", align 1, !dbg !320
@.str.13 = private unnamed_addr constant [75 x i8] c"%c: CBC mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%c: CBC mode ENCRYPT - Match\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"%c: CBC mode DECRYPT - Failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [77 x i8] c"%c: CBC mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"%c: CBC mode DECRYPT - Match\0A\00", align 1
@__const.ctr_mode.iv = private unnamed_addr constant [12 x i8] c"\F0\F1\F2\F3\F4\F5\F6\F7\F8\F9\FA\FB", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"%c: CTR mode ENCRYPT - Failed\0A\00", align 1
@ctr_ciphertext = internal constant [64 x i8] c"\22\E5/\B1w\D8e\B2\F7\C6\B5\12i-\11M\EDl\1Cr%\DA\F6\A2\AA\D9\D3\DA-\BA!h5\C0\AFko@\C3\C6\EF\C5\85\D0\90,\C2c\12+\C5\8Er\DE\\\A2\A3\\\85:\B9,\06\BB", align 1, !dbg !324
@.str.19 = private unnamed_addr constant [75 x i8] c"%c: CTR mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.20 = private unnamed_addr constant [30 x i8] c"%c: CTR mode ENCRYPT - Match\0A\00", align 1
@.str.21 = private unnamed_addr constant [31 x i8] c"%c: CTR mode DECRYPT - Failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [77 x i8] c"%c: CTR mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.23 = private unnamed_addr constant [30 x i8] c"%c: CTR mode DECRYPT - Match\0A\00", align 1
@ccm_key = internal global [16 x i8] c"\C0\C1\C2\C3\C4\C5\C6\C7\C8\C9\CA\CB\CC\CD\CE\CF", align 1, !dbg !327
@ccm_data = internal global [23 x i8] c"\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E", align 1, !dbg !329
@ccm_hdr = internal global [8 x i8] c"\00\01\02\03\04\05\06\07", align 1, !dbg !334
@ccm_nonce = internal global [13 x i8] c"\00\00\00\03\02\01\00\A0\A1\A2\A3\A4\A5", align 1, !dbg !339
@.str.24 = private unnamed_addr constant [31 x i8] c"%c: CCM mode ENCRYPT - Failed\0A\00", align 1
@ccm_expected = internal constant [31 x i8] c"X\8C\97\9Aa\C6c\D2\F0f\D0\C2\C0\F9\89\80m_ka\DA\C3\84\17\E8\D1,\FD\F9&\E0", align 1, !dbg !344
@.str.25 = private unnamed_addr constant [75 x i8] c"%c: CCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"%c: CCM mode ENCRYPT - Match\0A\00", align 1
@.str.27 = private unnamed_addr constant [31 x i8] c"%c: CCM mode DECRYPT - Failed\0A\00", align 1
@.str.28 = private unnamed_addr constant [77 x i8] c"%c: CCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.29 = private unnamed_addr constant [30 x i8] c"%c: CCM mode DECRYPT - Match\0A\00", align 1
@gcm_key = internal global [16 x i8] c"\07\1B\11;\0C\A7C\FE\CC\CF=\05\1Fss\82", align 1, !dbg !349
@gcm_data = internal global [42 x i8] c"\08\00\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./01234\00\04", align 1, !dbg !351
@gcm_hdr = internal global [20 x i8] c"\E2\01\06\D7\CD\0D\F0v\1E\8D\CD=\88\E5L*v\D4W\ED", align 1, !dbg !356
@gcm_nonce = internal global [12 x i8] c"\F0v\1E\8D\CD=\00\01v\D4W\ED", align 1, !dbg !361
@.str.30 = private unnamed_addr constant [31 x i8] c"%c: GCM mode ENCRYPT - Failed\0A\00", align 1
@gcm_expected = internal constant [58 x i8] c"\13\B4\C7+8\9D\C5\01\8Er\A1q\DD\85\A5\D3u\22t\D3\A0\19\FB\CA\ED\09\A4%\CD\9B.\1C\9Br\EE\E7\C9\DE}R\B3\F3\D6\A5(OJm?\E2*]l+\96\04\94\C3", align 1, !dbg !366
@.str.31 = private unnamed_addr constant [75 x i8] c"%c: GCM mode ENCRYPT - Mismatch between expected and returned cipher text\0A\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"%c: GCM mode ENCRYPT - Match\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c: GCM mode DECRYPT - Failed\0A\00", align 1
@.str.34 = private unnamed_addr constant [77 x i8] c"%c: GCM mode DECRYPT - Mismatch between plaintext and decrypted cipher text\0A\00", align 1
@.str.35 = private unnamed_addr constant [30 x i8] c"%c: GCM mode DECRYPT - Match\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c"%c: %s pseudo device not found\0A\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"ECB Mode\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"CBC Mode\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"CTR Mode\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"CCM Mode\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"GCM Mode\00", align 1
@__const.main.modes = private unnamed_addr constant [6 x %struct.mode_test] [%struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i32 0, i32 0), void (%struct.device*)* @ecb_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i32 0, i32 0), void (%struct.device*)* @cbc_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), void (%struct.device*)* @ctr_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), void (%struct.device*)* @ccm_mode }, %struct.mode_test { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), void (%struct.device*)* @gcm_mode }, %struct.mode_test zeroinitializer], align 4
@.str.43 = private unnamed_addr constant [22 x i8] c"%c: Incompatible h/w\0A\00", align 1
@.str.44 = private unnamed_addr constant [19 x i8] c"%c: Cipher Sample\0A\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"%c: %s\0A\00", align 1
@.str.46 = private unnamed_addr constant [19 x i8] c"Was waiting for: \0A\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"0x%02x \00", align 1
@.str.48 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"\0A But got:\0A\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !377
@.str.1.52 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !401
@.str.57 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !412
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !456
@.str.63 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.65 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.66 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.64 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.68 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.69 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.67 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@inv_sbox = internal unnamed_addr constant [256 x i8] c"R\09j\D506\A58\BF@\A3\9E\81\F3\D7\FB|\E39\82\9B/\FF\874\8ECD\C4\DE\E9\CBT{\942\A6\C2#=\EEL\95\0BB\FA\C3N\08.\A1f(\D9$\B2v[\A2Im\8B\D1%r\F8\F6d\86h\98\16\D4\A4\\\CC]e\B6\92lpHP\FD\ED\B9\DA^\15FW\A7\8D\9D\84\90\D8\AB\00\8C\BC\D3\0A\F7\E4X\05\B8\B3E\06\D0,\1E\8F\CA?\0F\02\C1\AF\BD\03\01\13\8Ak:\91\11AOg\DC\EA\97\F2\CF\CE\F0\B4\E6s\96\ACt\22\E7\AD5\85\E2\F97\E8\1Cu\DFnG\F1\1Aq\1D)\C5\89o\B7b\0E\AA\18\BE\1B\FCV>K\C6\D2y \9A\DB\C0\FEx\CDZ\F4\1F\DD\A83\88\07\C71\B1\12\10Y'\80\EC_`Q\7F\A9\19\B5J\0D-\E5z\9F\93\C9\9C\EF\A0\E0;M\AE*\F5\B0\C8\EB\BB<\83S\99a\17+\04~\BAw\D6&\E1i\14cU!\0C}", align 1, !dbg !485
@__const.tc_aes128_set_encrypt_key.rconst = private unnamed_addr constant [11 x i32] [i32 0, i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 4
@sbox = internal unnamed_addr constant [256 x i8] c"c|w{\F2ko\C50\01g+\FE\D7\ABv\CA\82\C9}\FAYG\F0\AD\D4\A2\AF\9C\A4r\C0\B7\FD\93&6?\F7\CC4\A5\E5\F1q\D81\15\04\C7#\C3\18\96\05\9A\07\12\80\E2\EB'\B2u\09\83,\1A\1BnZ\A0R;\D6\B3)\E3/\84S\D1\00\ED \FC\B1[j\CB\BE9JLX\CF\D0\EF\AA\FBCM3\85E\F9\02\7FP<\9F\A8Q\A3@\8F\92\9D8\F5\BC\B6\DA!\10\FF\F3\D2\CD\0C\13\EC_\97D\17\C4\A7~=d]\19s`\81O\DC\22*\90\88F\EE\B8\14\DE^\0B\DB\E02:\0AI\06$\\\C2\D3\ACb\91\95\E4y\E7\C87m\8D\D5N\A9lV\F4\EAez\AE\08\BAx%.\1C\A6\B4\C6\E8\DDt\1FK\BD\8B\8Ap>\B5fH\03\F6\0Ea5W\B9\86\C1\1D\9E\E1\F8\98\11i\D9\8E\94\9B\1E\87\E9\CEU(\DF\8C\A1\89\0D\BF\E6BhA\99-\0F\B0T\BB\16", align 1, !dbg !505
@.str.74 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.75 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.76 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.77 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.109 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.1.104 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.2.105 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.3.106 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.4.107 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.5.108 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.6.99 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.7.100 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.8.93 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.9.101 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.10.102 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.11.103 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.12.98 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.13.91 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.14.92 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.15.94 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.16.95 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.17.96 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.18.97 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.19.84 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.20.85 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.21.86 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.22.87 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.23.88 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.24.89 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.25.90 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.26.83 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.27.82 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.28.80 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.29.81 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !517
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.ctr_params { i32 101384192 } }], align 4, !dbg !664
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !523
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !673
@.str.121 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.1.122 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !709
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.137, i32 0, i32 0), %struct.ctr_params { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.138, i32 0, i32 0), %struct.ctr_params { i32 285933602 } }], align 4, !dbg !719
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !724
@.str.137 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.138 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !744
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !935
@.str.139 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !896
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !881
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.139, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !854
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !870
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !898
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !912
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !914
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !916
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !918
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !920
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !922
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !924
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !926
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !928
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !930
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !940
@.str.141 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !967
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1062
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !1051
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !1103
@.str.150 = private unnamed_addr constant [10 x i8] c"tinycrypt\00", align 1
@log_const_tinycrypt = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.150, i32 0, i32 0), i8 4 }, section ".log_const_tinycrypt", align 4, !dbg !1169
@__devicehdl_crypto_tinycrypt = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !962
@.str.1.152 = private unnamed_addr constant [10 x i8] c"CRYPTO_TC\00", align 1
@crypto_enc_funcs = internal global %struct.crypto_driver_api { i32 (%struct.device*)* @tc_query_caps, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)* @tc_session_setup, i32 (%struct.device*, %struct.cipher_ctx*)* @tc_session_free, i32 (%struct.device*, void (%struct.cipher_pkt*, i32)*)* null, i32 (%struct.device*, %struct.hash_ctx*, i32)* null, i32 (%struct.device*, %struct.hash_ctx*)* null, i32 (%struct.device*, void (%struct.hash_pkt*, i32)*)* null }, align 4, !dbg !1207
@__devstate_crypto_tinycrypt = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1205
@__device_crypto_tinycrypt = internal constant %struct.device { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.152, i32 0, i32 0), i8* null, i8* bitcast (%struct.crypto_driver_api* @crypto_enc_funcs to i8*), %struct.device_state* @__devstate_crypto_tinycrypt, i8* null, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_crypto_tinycrypt, i32 0, i32 0) }, section ".z_device_POST_KERNEL90_", align 4, !dbg !1178
@__init___device_crypto_tinycrypt = internal constant %struct.init_entry { i32 (%struct.device*)* @tc_shim_init, %struct.device* @__device_crypto_tinycrypt }, section ".z_init_POST_KERNEL90_", align 4, !dbg !1194
@.str.2.153 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported algo\0A\00", align 1
@.str.3.154 = private unnamed_addr constant [40 x i8] c"%c: Async not supported by this driver\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [34 x i8] c"%c: TC Shim Unsupported key size\0A\00", align 1
@.str.5.156 = private unnamed_addr constant [44 x i8] c"%c: Tinycrypt supports only 32 bit counter\0A\00", align 1
@.str.6.157 = private unnamed_addr constant [30 x i8] c"%c: TC Shim Unsupported mode\0A\00", align 1
@.str.7.158 = private unnamed_addr constant [30 x i8] c"%c: Max sessions in progress\0A\00", align 1
@tc_driver_state = internal global [2 x %struct.tc_shim_drv_state] zeroinitializer, align 4, !dbg !1335
@.str.8.159 = private unnamed_addr constant [38 x i8] c"%c: TC internal error in setting key\0A\00", align 1
@.str.9.168 = private unnamed_addr constant [45 x i8] c"%c: TC internal error during CBC encryption\0A\00", align 1
@.str.10.167 = private unnamed_addr constant [37 x i8] c"%c: TC internal error during CTR OP\0A\00", align 1
@.str.11.165 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM encryption config\0A\00", align 1
@.str.12.166 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM Encryption OP\0A\00", align 1
@.str.13.163 = private unnamed_addr constant [43 x i8] c"%c: TC needs contiguous iv and ciphertext\0A\00", align 1
@.str.14.164 = private unnamed_addr constant [50 x i8] c"%c: Func TC internal error during CBC decryption\0A\00", align 1
@.str.15.160 = private unnamed_addr constant [52 x i8] c"%c: TC internal error during CCM decryption config\0A\00", align 1
@.str.16.161 = private unnamed_addr constant [51 x i8] c"%c: TC needs contiguous hash  at the end of inbuf\0A\00", align 1
@.str.17.162 = private unnamed_addr constant [48 x i8] c"%c: TC internal error during CCM decryption OP\0A\00", align 1
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !958
@.str.169 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1351
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1632
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1602
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1588
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1530
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !956
@.str.1.170 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1634
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1606
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1604
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1544
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !954
@.str.2.171 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1647
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1610
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1608
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1553
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !952
@.str.3.172 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1649
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1614
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1612
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1562
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !950
@.str.4.173 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1651
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1618
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1616
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1568
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !948
@.str.5.174 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1653
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1622
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1620
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1574
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !946
@.str.6.175 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1655
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1626
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1624
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1580
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !944
@.str.7.176 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.ctr_params { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1657
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1630
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1628
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1586
@.str.180 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.180, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1659
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !960
@.str.1.183 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1815
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1870
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1813
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1872
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.183, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1804
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1806
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1859
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1862
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1864
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1867
@.str.2.185 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.188 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.5.191 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.141, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !1035
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.6 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1883
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1992
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1994
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1990
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1961
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1996
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.169, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1528
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.170, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1542
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.171, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1551
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.172, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1560
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.173, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1566
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.174, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1572
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.175, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1578
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.176, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1584
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !2086
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !2127
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !2130
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !2134
@.str.228 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.232 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.233 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.234 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.238 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.239 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.240 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.241 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.242 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.237 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.236 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.238, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.239, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.240, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.241, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.242, i32 0, i32 0)], align 4
@.str.244 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.244, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !2141
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2364
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2350
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2359
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2371
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2376
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.1.253 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.259, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.260, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.261, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.262, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.263, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.257, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.264, i32 0, i32 0)], align 4, !dbg !2404
@.str.258 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.259 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.260 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.261 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.262 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.263 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.257 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.264 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2516
@.str.8.256 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@sched_spinlock = dso_local local_unnamed_addr global %struct.k_spinlock zeroinitializer, align 1, !dbg !2529
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2637
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2640
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2642
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2369
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2361
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2644
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2680
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !2228
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2678
@.str.317 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3295 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #25, !dbg !3299, !srcloc !3300
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #25, !dbg !3301, !srcloc !3302
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #25, !dbg !3303, !srcloc !3304
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #25, !dbg !3305, !srcloc !3306
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3307, !srcloc !3308
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #25, !dbg !3309, !srcloc !3310
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #25, !dbg !3311, !srcloc !3312
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #25, !dbg !3313, !srcloc !3314
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #25, !dbg !3315, !srcloc !3316
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #25, !dbg !3317, !srcloc !3318
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #25, !dbg !3319, !srcloc !3320
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #25, !dbg !3321, !srcloc !3322
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #25, !dbg !3323, !srcloc !3324
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #25, !dbg !3325, !srcloc !3326
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #25, !dbg !3327, !srcloc !3328
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #25, !dbg !3329, !srcloc !3330
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #25, !dbg !3331, !srcloc !3332
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -117) #25, !dbg !3333, !srcloc !3334
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3335, !srcloc !3336
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #25, !dbg !3337, !srcloc !3338
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -101) #25, !dbg !3339, !srcloc !3340
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3341, !srcloc !3342
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #25, !dbg !3343, !srcloc !3344
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #25, !dbg !3345, !srcloc !3346
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #25, !dbg !3347, !srcloc !3348
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #25, !dbg !3349, !srcloc !3350
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #25, !dbg !3351, !srcloc !3352
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #25, !dbg !3353, !srcloc !3356
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #25, !dbg !3357, !srcloc !3358
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3359, !srcloc !3360
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3361, !srcloc !3362
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3363, !srcloc !3364
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3365, !srcloc !3366
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #25, !dbg !3367, !srcloc !3368
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #25, !dbg !3369, !srcloc !3370
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #25, !dbg !3371, !srcloc !3372
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #25, !dbg !3373, !srcloc !3374
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3375, !srcloc !3376
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #25, !dbg !3377, !srcloc !3378
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #25, !dbg !3379, !srcloc !3380
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #25, !dbg !3381, !srcloc !3382
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #25, !dbg !3383, !srcloc !3384
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #25, !dbg !3385, !srcloc !3386
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #25, !dbg !3387, !srcloc !3388
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #25, !dbg !3389, !srcloc !3390
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #25, !dbg !3391, !srcloc !3392
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #25, !dbg !3393, !srcloc !3394
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #25, !dbg !3395, !srcloc !3396
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #25, !dbg !3397, !srcloc !3398
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #25, !dbg !3399, !srcloc !3400
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #25, !dbg !3401, !srcloc !3402
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -129) #25, !dbg !3403, !srcloc !3404
  ret void, !dbg !3405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @validate_hw_compatibility(%struct.device* noundef %0) local_unnamed_addr #1 !dbg !3408 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3410, metadata !DIExpression()), !dbg !3412
  call void @llvm.dbg.value(metadata i32 0, metadata !3411, metadata !DIExpression()), !dbg !3412
  %2 = tail call fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) #26, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %2, metadata !3411, metadata !DIExpression()), !dbg !3412
  %3 = and i32 %2, 2, !dbg !3414
  %4 = icmp eq i32 %3, 0, !dbg !3416
  br i1 %4, label %5, label %8, !dbg !3417

5:                                                ; preds = %1
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3418
  %7 = zext i8 %6 to i32, !dbg !3418
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.1, i32 0, i32 0), i32 noundef %7) #27, !dbg !3418
  br label %21, !dbg !3424

8:                                                ; preds = %1
  %9 = and i32 %2, 32, !dbg !3425
  %10 = icmp eq i32 %9, 0, !dbg !3427
  br i1 %10, label %11, label %14, !dbg !3428

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3429
  %13 = zext i8 %12 to i32, !dbg !3429
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([90 x i8], [90 x i8]* @.str.2, i32 0, i32 0), i32 noundef %13) #27, !dbg !3429
  br label %21, !dbg !3435

14:                                               ; preds = %8
  %15 = and i32 %2, 16, !dbg !3436
  %16 = icmp eq i32 %15, 0, !dbg !3438
  br i1 %16, label %17, label %20, !dbg !3439

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3440
  %19 = zext i8 %18 to i32, !dbg !3440
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([95 x i8], [95 x i8]* @.str.3, i32 0, i32 0), i32 noundef %19) #27, !dbg !3440
  br label %21, !dbg !3446

20:                                               ; preds = %14
  store i32 50, i32* @cap_flags, align 4, !dbg !3447
  br label %21, !dbg !3448

21:                                               ; preds = %20, %17, %11, %5
  %22 = phi i32 [ -1, %5 ], [ -1, %11 ], [ -1, %17 ], [ 0, %20 ], !dbg !3412
  ret i32 %22, !dbg !3449
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @crypto_query_hwcaps(%struct.device* noundef %0) unnamed_addr #1 !dbg !3450 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3452, metadata !DIExpression()), !dbg !3455
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3456
  %3 = bitcast i8** %2 to %struct.crypto_driver_api**, !dbg !3456
  %4 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %3, align 4, !dbg !3456
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %4, metadata !3453, metadata !DIExpression()), !dbg !3455
  %5 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %4, i32 0, i32 0, !dbg !3457
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %5, align 4, !dbg !3457
  %7 = tail call i32 %6(%struct.device* noundef %0) #27, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %7, metadata !3454, metadata !DIExpression()), !dbg !3455
  ret i32 %7, !dbg !3459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !3460 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3465, metadata !DIExpression()), !dbg !3466
  %2 = add i32 %0, -1, !dbg !3467
  %3 = icmp ult i32 %2, 3, !dbg !3467
  %4 = trunc i32 %2 to i24, !dbg !3467
  %5 = shl i24 %4, 3, !dbg !3467
  %6 = lshr i24 4806469, %5, !dbg !3467
  %7 = trunc i24 %6 to i8, !dbg !3467
  %8 = select i1 %3, i8 %7, i8 63, !dbg !3467
  ret i8 %8, !dbg !3468
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ecb_mode(%struct.device* noundef %0) #1 !dbg !3469 {
  %2 = alloca [16 x i8], align 1
  %3 = alloca [16 x i8], align 1
  %4 = alloca [16 x i8], align 1
  %5 = alloca [16 x i8], align 1
  %6 = alloca [16 x i8], align 1
  %7 = alloca %struct.cipher_ctx, align 4
  %8 = alloca %struct.cipher_pkt, align 4
  %9 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3471, metadata !DIExpression()), !dbg !3481
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !3482
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3482
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !3472, metadata !DIExpression()), !dbg !3483
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_key, i32 0, i32 0), i32 16, i1 false), !dbg !3483
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i32 0, i32 0, !dbg !3484
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3484
  call void @llvm.dbg.declare(metadata [16 x i8]* %3, metadata !3473, metadata !DIExpression()), !dbg !3485
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_plaintext, i32 0, i32 0), i32 16, i1 false), !dbg !3485
  %12 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !3486
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3486
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !3474, metadata !DIExpression()), !dbg !3487
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %12, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.ecb_mode.ecb_ciphertext, i32 0, i32 0), i32 16, i1 false), !dbg !3487
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i32 0, i32 0, !dbg !3488
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3488
  call void @llvm.dbg.declare(metadata [16 x i8]* %5, metadata !3475, metadata !DIExpression()), !dbg !3489
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %13, i8 0, i32 16, i1 false), !dbg !3489
  %14 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3490
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3490
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3476, metadata !DIExpression()), !dbg !3491
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %14, i8 0, i32 16, i1 false), !dbg !3491
  %15 = bitcast %struct.cipher_ctx* %7 to i8*, !dbg !3492
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3492
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %7, metadata !3477, metadata !DIExpression()), !dbg !3493
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %15, i8 0, i64 28, i1 false), !dbg !3493
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 1, i32 0, !dbg !3494
  store i8* %10, i8** %16, align 4, !dbg !3494
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 6, !dbg !3495
  store i16 16, i16* %17, align 4, !dbg !3495
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %7, i32 0, i32 7, !dbg !3495
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3496
  %20 = trunc i32 %19 to i16, !dbg !3496
  store i16 %20, i16* %18, align 2, !dbg !3495
  %21 = bitcast %struct.cipher_pkt* %8 to i8*, !dbg !3497
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3497
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %8, metadata !3478, metadata !DIExpression()), !dbg !3498
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 0, !dbg !3499
  store i8* %11, i8** %22, align 4, !dbg !3499
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 1, !dbg !3499
  store i32 16, i32* %23, align 4, !dbg !3499
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 2, !dbg !3499
  store i8* %13, i8** %24, align 4, !dbg !3499
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 3, !dbg !3499
  store i32 16, i32* %25, align 4, !dbg !3499
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 4, !dbg !3499
  store i32 0, i32* %26, align 4, !dbg !3499
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %8, i32 0, i32 5, !dbg !3499
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3499
  %28 = bitcast %struct.cipher_pkt* %9 to i8*, !dbg !3500
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3500
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %9, metadata !3479, metadata !DIExpression()), !dbg !3501
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 0, !dbg !3502
  store i8* %13, i8** %29, align 4, !dbg !3502
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 1, !dbg !3502
  store i32 16, i32* %30, align 4, !dbg !3502
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 2, !dbg !3502
  store i8* %14, i8** %31, align 4, !dbg !3502
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 3, !dbg !3502
  store i32 16, i32* %32, align 4, !dbg !3502
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 4, !dbg !3502
  store i32 0, i32* %33, align 4, !dbg !3502
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %9, i32 0, i32 5, !dbg !3502
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3502
  %35 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 1) #26, !dbg !3503
  %36 = icmp eq i32 %35, 0, !dbg !3503
  br i1 %36, label %37, label %74, !dbg !3505

37:                                               ; preds = %1
  %38 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %8) #26, !dbg !3506
  %39 = icmp eq i32 %38, 0, !dbg !3506
  br i1 %39, label %43, label %40, !dbg !3508

40:                                               ; preds = %37
  %41 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3509
  %42 = zext i8 %41 to i32, !dbg !3509
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i32 0, i32 0), i32 noundef %42) #27, !dbg !3509
  br label %73, !dbg !3515

43:                                               ; preds = %37
  %44 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3516
  %45 = zext i8 %44 to i32, !dbg !3516
  %46 = load i32, i32* %26, align 4, !dbg !3516
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %45, i32 noundef %46) #27, !dbg !3516
  %47 = load i8*, i8** %24, align 4, !dbg !3521
  %48 = call i32 @memcmp(i8* noundef %47, i8* noundef nonnull %12, i32 noundef 16) #27, !dbg !3523
  %49 = icmp eq i32 %48, 0, !dbg !3523
  br i1 %49, label %54, label %50, !dbg !3524

50:                                               ; preds = %43
  %51 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3525
  %52 = zext i8 %51 to i32, !dbg !3525
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i32 0, i32 0), i32 noundef %52) #27, !dbg !3525
  %53 = load i8*, i8** %24, align 4, !dbg !3531
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %12, i8* noundef %53, i32 noundef 16) #26, !dbg !3532
  br label %73, !dbg !3533

54:                                               ; preds = %43
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i32 0, i32 0), i32 noundef %45) #27, !dbg !3534
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3539
  %55 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7, i32 noundef 1, i32 noundef 0) #26, !dbg !3540
  %56 = icmp eq i32 %55, 0, !dbg !3540
  br i1 %56, label %57, label %74, !dbg !3542

57:                                               ; preds = %54
  %58 = call fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef nonnull %7, %struct.cipher_pkt* noundef nonnull %9) #26, !dbg !3543
  %59 = icmp eq i32 %58, 0, !dbg !3543
  br i1 %59, label %63, label %60, !dbg !3545

60:                                               ; preds = %57
  %61 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3546
  %62 = zext i8 %61 to i32, !dbg !3546
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i32 0, i32 0), i32 noundef %62) #27, !dbg !3546
  br label %73, !dbg !3552

63:                                               ; preds = %57
  %64 = load i32, i32* %33, align 4, !dbg !3553
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %45, i32 noundef %64) #27, !dbg !3553
  %65 = load i8*, i8** %31, align 4, !dbg !3558
  %66 = call i32 @memcmp(i8* noundef %65, i8* noundef nonnull %11, i32 noundef 16) #27, !dbg !3560
  %67 = icmp eq i32 %66, 0, !dbg !3560
  br i1 %67, label %72, label %68, !dbg !3561

68:                                               ; preds = %63
  %69 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3562
  %70 = zext i8 %69 to i32, !dbg !3562
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.10, i32 0, i32 0), i32 noundef %70) #27, !dbg !3562
  %71 = load i8*, i8** %31, align 4, !dbg !3568
  call fastcc void @print_buffer_comparison(i8* noundef nonnull %11, i8* noundef %71, i32 noundef 16) #26, !dbg !3569
  br label %73, !dbg !3570

72:                                               ; preds = %63
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i32 0, i32 0), i32 noundef %45) #27, !dbg !3571
  br label %73, !dbg !3576

73:                                               ; preds = %72, %68, %60, %50, %40
  call void @llvm.dbg.label(metadata !3480), !dbg !3577
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %7) #26, !dbg !3578
  br label %74, !dbg !3579

74:                                               ; preds = %54, %1, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #25, !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #25, !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #25, !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #25, !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !3579
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !3579
  ret void, !dbg !3579
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #5

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #6

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !3580 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3582, metadata !DIExpression()), !dbg !3589
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3583, metadata !DIExpression()), !dbg !3589
  call void @llvm.dbg.value(metadata i32 1, metadata !3584, metadata !DIExpression()), !dbg !3589
  call void @llvm.dbg.value(metadata i32 %2, metadata !3585, metadata !DIExpression()), !dbg !3589
  call void @llvm.dbg.value(metadata i32 %3, metadata !3586, metadata !DIExpression()), !dbg !3589
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3590
  %6 = bitcast i8** %5 to %struct.crypto_driver_api**, !dbg !3590
  %7 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %6, align 4, !dbg !3590
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %7, metadata !3587, metadata !DIExpression()), !dbg !3589
  %8 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 2, !dbg !3591
  store %struct.device* %0, %struct.device** %8, align 4, !dbg !3592
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !3593
  store i32 %2, i32* %9, align 4, !dbg !3594
  call void @llvm.dbg.value(metadata i16 undef, metadata !3588, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 3, DW_OP_and, DW_OP_stack_value)), !dbg !3589
  call void @llvm.dbg.value(metadata i16 undef, metadata !3588, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_and, DW_OP_stack_value)), !dbg !3589
  call void @llvm.dbg.value(metadata i16 undef, metadata !3588, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 96, DW_OP_and, DW_OP_stack_value)), !dbg !3589
  %10 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %7, i32 0, i32 1, !dbg !3595
  %11 = load i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)*, i32 (%struct.device*, %struct.cipher_ctx*, i32, i32, i32)** %10, align 4, !dbg !3595
  %12 = tail call i32 %11(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1, i32 noundef 1, i32 noundef %2, i32 noundef %3) #27, !dbg !3596
  ret i32 %12, !dbg !3597
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_block_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) unnamed_addr #1 !dbg !3598 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3600, metadata !DIExpression()), !dbg !3602
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3601, metadata !DIExpression()), !dbg !3602
  %3 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3603
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %3, align 4, !dbg !3604
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, i32 0, !dbg !3605
  %5 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*)** %4, align 4, !dbg !3605
  %6 = tail call i32 %5(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1) #27, !dbg !3606
  ret i32 %6, !dbg !3607
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @print_buffer_comparison(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #1 !dbg !3608 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3612, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i8* %1, metadata !3613, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %2, metadata !3614, metadata !DIExpression()), !dbg !3617
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i32 0, i32 0)) #27, !dbg !3618
  call void @llvm.dbg.value(metadata i32 0, metadata !3615, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 1, metadata !3616, metadata !DIExpression()), !dbg !3617
  %4 = icmp eq i32 %2, 0, !dbg !3619
  br i1 %4, label %5, label %6, !dbg !3622

5:                                                ; preds = %3
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3623
  call void @llvm.dbg.value(metadata i32 0, metadata !3615, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 1, metadata !3616, metadata !DIExpression()), !dbg !3617
  br label %33, !dbg !3624

6:                                                ; preds = %3, %14
  %7 = phi i32 [ %17, %14 ], [ 1, %3 ]
  %8 = phi i32 [ %16, %14 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3616, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %8, metadata !3615, metadata !DIExpression()), !dbg !3617
  %9 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !3626
  %10 = load i8, i8* %9, align 1, !dbg !3626
  %11 = zext i8 %10 to i32, !dbg !3626
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %11) #27, !dbg !3628
  %12 = icmp eq i32 %7, 10, !dbg !3629
  br i1 %12, label %13, label %14, !dbg !3631

13:                                               ; preds = %6
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3632
  call void @llvm.dbg.value(metadata i32 0, metadata !3616, metadata !DIExpression()), !dbg !3617
  br label %14, !dbg !3634

14:                                               ; preds = %6, %13
  %15 = phi i32 [ 0, %13 ], [ %7, %6 ], !dbg !3635
  call void @llvm.dbg.value(metadata i32 %15, metadata !3616, metadata !DIExpression()), !dbg !3617
  %16 = add nuw i32 %8, 1, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %16, metadata !3615, metadata !DIExpression()), !dbg !3617
  %17 = add nsw i32 %15, 1, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %17, metadata !3616, metadata !DIExpression()), !dbg !3617
  %18 = icmp eq i32 %16, %2, !dbg !3619
  br i1 %18, label %19, label %6, !dbg !3622, !llvm.loop !3638

19:                                               ; preds = %14
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0)) #27, !dbg !3623
  call void @llvm.dbg.value(metadata i32 0, metadata !3615, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 1, metadata !3616, metadata !DIExpression()), !dbg !3617
  br i1 %4, label %33, label %20, !dbg !3624

20:                                               ; preds = %19, %28
  %21 = phi i32 [ %31, %28 ], [ 1, %19 ]
  %22 = phi i32 [ %30, %28 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %21, metadata !3616, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata i32 %22, metadata !3615, metadata !DIExpression()), !dbg !3617
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !3640
  %24 = load i8, i8* %23, align 1, !dbg !3640
  %25 = zext i8 %24 to i32, !dbg !3640
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 noundef %25) #27, !dbg !3643
  %26 = icmp eq i32 %21, 10, !dbg !3644
  br i1 %26, label %27, label %28, !dbg !3646

27:                                               ; preds = %20
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3647
  call void @llvm.dbg.value(metadata i32 0, metadata !3616, metadata !DIExpression()), !dbg !3617
  br label %28, !dbg !3649

28:                                               ; preds = %20, %27
  %29 = phi i32 [ 0, %27 ], [ %21, %20 ], !dbg !3650
  call void @llvm.dbg.value(metadata i32 %29, metadata !3616, metadata !DIExpression()), !dbg !3617
  %30 = add nuw i32 %22, 1, !dbg !3651
  call void @llvm.dbg.value(metadata i32 %30, metadata !3615, metadata !DIExpression()), !dbg !3617
  %31 = add nsw i32 %29, 1, !dbg !3652
  call void @llvm.dbg.value(metadata i32 %31, metadata !3616, metadata !DIExpression()), !dbg !3617
  %32 = icmp eq i32 %30, %2, !dbg !3653
  br i1 %32, label %33, label %20, !dbg !3624, !llvm.loop !3654

33:                                               ; preds = %28, %5, %19
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.48, i32 0, i32 0)) #27, !dbg !3656
  ret void, !dbg !3657
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) unnamed_addr #1 !dbg !3658 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3660, metadata !DIExpression()), !dbg !3663
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !3661, metadata !DIExpression()), !dbg !3663
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !3664
  %4 = bitcast i8** %3 to %struct.crypto_driver_api**, !dbg !3664
  %5 = load %struct.crypto_driver_api*, %struct.crypto_driver_api** %4, align 4, !dbg !3664
  call void @llvm.dbg.value(metadata %struct.crypto_driver_api* %5, metadata !3662, metadata !DIExpression()), !dbg !3663
  %6 = getelementptr inbounds %struct.crypto_driver_api, %struct.crypto_driver_api* %5, i32 0, i32 2, !dbg !3665
  %7 = load i32 (%struct.device*, %struct.cipher_ctx*)*, i32 (%struct.device*, %struct.cipher_ctx*)** %6, align 4, !dbg !3665
  %8 = tail call i32 %7(%struct.device* noundef %0, %struct.cipher_ctx* noundef %1) #27, !dbg !3666
  ret void, !dbg !3667
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: noinline nounwind optsize
define dso_local void @cbc_mode(%struct.device* noundef %0) #1 !dbg !293 {
  %2 = alloca [80 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 4
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !298, metadata !DIExpression()), !dbg !3668
  %7 = getelementptr inbounds [80 x i8], [80 x i8]* %2, i32 0, i32 0, !dbg !3669
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3669
  call void @llvm.dbg.declare(metadata [80 x i8]* %2, metadata !299, metadata !DIExpression()), !dbg !3670
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(80) %7, i8 0, i32 80, i1 false), !dbg !3670
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3671
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3671
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !303, metadata !DIExpression()), !dbg !3672
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3672
  %9 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3673
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3673
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !307, metadata !DIExpression()), !dbg !3674
  call void @llvm.memset.p0i8.i64(i8* noundef nonnull align 4 dereferenceable(32) %9, i8 0, i64 28, i1 false), !dbg !3674
  %10 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3675
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %10, align 4, !dbg !3675
  %11 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3676
  store i16 16, i16* %11, align 4, !dbg !3676
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3676
  %13 = load i32, i32* @cap_flags, align 4, !dbg !3677
  %14 = trunc i32 %13 to i16, !dbg !3677
  store i16 %14, i16* %12, align 2, !dbg !3676
  %15 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3678
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3678
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !308, metadata !DIExpression()), !dbg !3679
  %16 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3680
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %16, align 4, !dbg !3680
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3680
  store i32 64, i32* %17, align 4, !dbg !3680
  %18 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3680
  store i8* %7, i8** %18, align 4, !dbg !3680
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3680
  store i32 80, i32* %19, align 4, !dbg !3680
  %20 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3680
  store i32 0, i32* %20, align 4, !dbg !3680
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3680
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %21, align 4, !dbg !3680
  %22 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3681
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3681
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !309, metadata !DIExpression()), !dbg !3682
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3683
  store i8* %7, i8** %23, align 4, !dbg !3683
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3683
  store i32 80, i32* %24, align 4, !dbg !3683
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3683
  store i8* %8, i8** %25, align 4, !dbg !3683
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3683
  store i32 64, i32* %26, align 4, !dbg !3683
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3683
  store i32 0, i32* %27, align 4, !dbg !3683
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3683
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %28, align 4, !dbg !3683
  %29 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 1) #26, !dbg !3684
  %30 = icmp eq i32 %29, 0, !dbg !3684
  br i1 %30, label %31, label %68, !dbg !3686

31:                                               ; preds = %1
  %32 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @cbc_mode.iv, i32 0, i32 0)) #26, !dbg !3687
  %33 = icmp eq i32 %32, 0, !dbg !3687
  br i1 %33, label %37, label %34, !dbg !3689

34:                                               ; preds = %31
  %35 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3690
  %36 = zext i8 %35 to i32, !dbg !3690
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i32 0, i32 0), i32 noundef %36) #27, !dbg !3690
  br label %67, !dbg !3696

37:                                               ; preds = %31
  %38 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3697
  %39 = zext i8 %38 to i32, !dbg !3697
  %40 = load i32, i32* %20, align 4, !dbg !3697
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %39, i32 noundef %40) #27, !dbg !3697
  %41 = load i8*, i8** %18, align 4, !dbg !3702
  %42 = call i32 @memcmp(i8* noundef %41, i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i32 noundef 80) #27, !dbg !3704
  %43 = icmp eq i32 %42, 0, !dbg !3704
  br i1 %43, label %48, label %44, !dbg !3705

44:                                               ; preds = %37
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3706
  %46 = zext i8 %45 to i32, !dbg !3706
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i32 0, i32 0), i32 noundef %46) #27, !dbg !3706
  %47 = load i8*, i8** %18, align 4, !dbg !3712
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @cbc_ciphertext, i32 0, i32 0), i8* noundef %47, i32 noundef 80) #26, !dbg !3713
  br label %67, !dbg !3714

48:                                               ; preds = %37
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i32 0, i32 0), i32 noundef %39) #27, !dbg !3715
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3720
  %49 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 2, i32 noundef 0) #26, !dbg !3721
  %50 = icmp eq i32 %49, 0, !dbg !3721
  br i1 %50, label %51, label %68, !dbg !3723

51:                                               ; preds = %48
  %52 = call fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !3724
  %53 = icmp eq i32 %52, 0, !dbg !3724
  br i1 %53, label %57, label %54, !dbg !3726

54:                                               ; preds = %51
  %55 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3727
  %56 = zext i8 %55 to i32, !dbg !3727
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i32 0, i32 0), i32 noundef %56) #27, !dbg !3727
  br label %67, !dbg !3733

57:                                               ; preds = %51
  %58 = load i32, i32* %27, align 4, !dbg !3734
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %39, i32 noundef %58) #27, !dbg !3734
  %59 = load i8*, i8** %25, align 4, !dbg !3739
  %60 = call i32 @memcmp(i8* noundef %59, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3741
  %61 = icmp eq i32 %60, 0, !dbg !3741
  br i1 %61, label %66, label %62, !dbg !3742

62:                                               ; preds = %57
  %63 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3743
  %64 = zext i8 %63 to i32, !dbg !3743
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.16, i32 0, i32 0), i32 noundef %64) #27, !dbg !3743
  %65 = load i8*, i8** %25, align 4, !dbg !3749
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %65, i32 noundef 64) #26, !dbg !3750
  br label %67, !dbg !3751

66:                                               ; preds = %57
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i32 0, i32 0), i32 noundef %39) #27, !dbg !3752
  br label %67, !dbg !3757

67:                                               ; preds = %66, %62, %54, %44, %34
  call void @llvm.dbg.label(metadata !310), !dbg !3758
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3759
  br label %68, !dbg !3760

68:                                               ; preds = %48, %1, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #25, !dbg !3760
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #25, !dbg !3760
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #25, !dbg !3760
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3760
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #25, !dbg !3760
  ret void, !dbg !3760
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_cbc_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3761 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3763, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3764, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.value(metadata i8* %2, metadata !3765, metadata !DIExpression()), !dbg !3766
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3767
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3768
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3769
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3769
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3769
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3770
  ret i32 %8, !dbg !3771
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ctr_mode(%struct.device* noundef %0) #1 !dbg !3772 {
  %2 = alloca [64 x i8], align 1
  %3 = alloca [64 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_pkt, align 4
  %7 = alloca [12 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3774, metadata !DIExpression()), !dbg !3782
  %8 = getelementptr inbounds [64 x i8], [64 x i8]* %2, i32 0, i32 0, !dbg !3783
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3783
  call void @llvm.dbg.declare(metadata [64 x i8]* %2, metadata !3775, metadata !DIExpression()), !dbg !3784
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %8, i8 0, i32 64, i1 false), !dbg !3784
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i32 0, i32 0, !dbg !3785
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3785
  call void @llvm.dbg.declare(metadata [64 x i8]* %3, metadata !3776, metadata !DIExpression()), !dbg !3786
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(64) %9, i8 0, i32 64, i1 false), !dbg !3786
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3787
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3787
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3777, metadata !DIExpression()), !dbg !3788
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3789
  store i64 0, i64* %11, align 8, !dbg !3789
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3790
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @key, i32 0, i32 0), i8** %12, align 8, !dbg !3790
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3789
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3789
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3789
  store i8* null, i8** %14, align 8, !dbg !3789
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3789
  store i8* null, i8** %15, align 4, !dbg !3789
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, i32 0, i32 0, !dbg !3791
  store i32 32, i32* %16, align 8, !dbg !3791
  %17 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3789
  store i16 16, i16* %17, align 4, !dbg !3789
  %18 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3789
  %19 = load i32, i32* @cap_flags, align 4, !dbg !3792
  %20 = trunc i32 %19 to i16, !dbg !3792
  store i16 %20, i16* %18, align 2, !dbg !3789
  %21 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3793
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3793
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3778, metadata !DIExpression()), !dbg !3794
  %22 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3795
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8** %22, align 4, !dbg !3795
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3795
  store i32 64, i32* %23, align 4, !dbg !3795
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3795
  store i8* %8, i8** %24, align 4, !dbg !3795
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3795
  store i32 64, i32* %25, align 4, !dbg !3795
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3795
  store i32 0, i32* %26, align 4, !dbg !3795
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3795
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %27, align 4, !dbg !3795
  %28 = bitcast %struct.cipher_pkt* %6 to i8*, !dbg !3796
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3796
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %6, metadata !3779, metadata !DIExpression()), !dbg !3797
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 0, !dbg !3798
  store i8* %8, i8** %29, align 4, !dbg !3798
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 1, !dbg !3798
  store i32 64, i32* %30, align 4, !dbg !3798
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 2, !dbg !3798
  store i8* %9, i8** %31, align 4, !dbg !3798
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 3, !dbg !3798
  store i32 64, i32* %32, align 4, !dbg !3798
  %33 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 4, !dbg !3798
  store i32 0, i32* %33, align 4, !dbg !3798
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %6, i32 0, i32 5, !dbg !3798
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %34, align 4, !dbg !3798
  %35 = getelementptr inbounds [12 x i8], [12 x i8]* %7, i32 0, i32 0, !dbg !3799
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3799
  call void @llvm.dbg.declare(metadata [12 x i8]* %7, metadata !3780, metadata !DIExpression()), !dbg !3800
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(12) %35, i8* noundef nonnull align 1 dereferenceable(12) getelementptr inbounds ([12 x i8], [12 x i8]* @__const.ctr_mode.iv, i32 0, i32 0), i32 12, i1 false), !dbg !3800
  %36 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 1) #26, !dbg !3801
  %37 = icmp eq i32 %36, 0, !dbg !3801
  br i1 %37, label %38, label %75, !dbg !3803

38:                                               ; preds = %1
  %39 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %5, i8* noundef nonnull %35) #26, !dbg !3804
  %40 = icmp eq i32 %39, 0, !dbg !3804
  br i1 %40, label %44, label %41, !dbg !3806

41:                                               ; preds = %38
  %42 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3807
  %43 = zext i8 %42 to i32, !dbg !3807
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i32 0, i32 0), i32 noundef %43) #27, !dbg !3807
  br label %74, !dbg !3813

44:                                               ; preds = %38
  %45 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3814
  %46 = zext i8 %45 to i32, !dbg !3814
  %47 = load i32, i32* %26, align 4, !dbg !3814
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #27, !dbg !3814
  %48 = load i8*, i8** %24, align 4, !dbg !3819
  %49 = call i32 @memcmp(i8* noundef %48, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3821
  %50 = icmp eq i32 %49, 0, !dbg !3821
  br i1 %50, label %55, label %51, !dbg !3822

51:                                               ; preds = %44
  %52 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3823
  %53 = zext i8 %52 to i32, !dbg !3823
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.19, i32 0, i32 0), i32 noundef %53) #27, !dbg !3823
  %54 = load i8*, i8** %24, align 4, !dbg !3829
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @ctr_ciphertext, i32 0, i32 0), i8* noundef %54, i32 noundef 64) #26, !dbg !3830
  br label %74, !dbg !3831

55:                                               ; preds = %44
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.20, i32 0, i32 0), i32 noundef %46) #27, !dbg !3832
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3837
  %56 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 3, i32 noundef 0) #26, !dbg !3838
  %57 = icmp eq i32 %56, 0, !dbg !3838
  br i1 %57, label %58, label %75, !dbg !3840

58:                                               ; preds = %55
  %59 = call fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_pkt* noundef nonnull %6, i8* noundef nonnull %35) #26, !dbg !3841
  %60 = icmp eq i32 %59, 0, !dbg !3841
  br i1 %60, label %64, label %61, !dbg !3843

61:                                               ; preds = %58
  %62 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3844
  %63 = zext i8 %62 to i32, !dbg !3844
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i32 0, i32 0), i32 noundef %63) #27, !dbg !3844
  br label %74, !dbg !3850

64:                                               ; preds = %58
  %65 = load i32, i32* %33, align 4, !dbg !3851
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %46, i32 noundef %65) #27, !dbg !3851
  %66 = load i8*, i8** %31, align 4, !dbg !3856
  %67 = call i32 @memcmp(i8* noundef %66, i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i32 noundef 64) #27, !dbg !3858
  %68 = icmp eq i32 %67, 0, !dbg !3858
  br i1 %68, label %73, label %69, !dbg !3859

69:                                               ; preds = %64
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3860
  %71 = zext i8 %70 to i32, !dbg !3860
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.22, i32 0, i32 0), i32 noundef %71) #27, !dbg !3860
  %72 = load i8*, i8** %31, align 4, !dbg !3866
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @plaintext, i32 0, i32 0), i8* noundef %72, i32 noundef 64) #26, !dbg !3867
  br label %74, !dbg !3868

73:                                               ; preds = %64
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i32 0, i32 0), i32 noundef %46) #27, !dbg !3869
  br label %74, !dbg !3874

74:                                               ; preds = %73, %69, %61, %51, %41
  call void @llvm.dbg.label(metadata !3781), !dbg !3875
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3876
  br label %75, !dbg !3877

75:                                               ; preds = %55, %1, %74
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %35) #25, !dbg !3877
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #25, !dbg !3877
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #25, !dbg !3877
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3877
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %9) #25, !dbg !3877
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #25, !dbg !3877
  ret void, !dbg !3877
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ctr_op(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3878 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !3880, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !3881, metadata !DIExpression()), !dbg !3883
  call void @llvm.dbg.value(metadata i8* %2, metadata !3882, metadata !DIExpression()), !dbg !3883
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 5, !dbg !3884
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %4, align 4, !dbg !3885
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !3886
  %6 = bitcast %union.anon.3* %5 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !3886
  %7 = load i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %6, align 4, !dbg !3886
  %8 = tail call i32 %7(%struct.cipher_ctx* noundef %0, %struct.cipher_pkt* noundef %1, i8* noundef %2) #27, !dbg !3887
  ret i32 %8, !dbg !3888
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ccm_mode(%struct.device* noundef %0) #1 !dbg !3889 {
  %2 = alloca [50 x i8], align 1
  %3 = alloca [25 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !3891, metadata !DIExpression()), !dbg !3905
  %8 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 0, !dbg !3906
  call void @llvm.lifetime.start.p0i8(i64 50, i8* nonnull %8) #25, !dbg !3906
  call void @llvm.dbg.declare(metadata [50 x i8]* %2, metadata !3892, metadata !DIExpression()), !dbg !3907
  %9 = getelementptr inbounds [25 x i8], [25 x i8]* %3, i32 0, i32 0, !dbg !3908
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %9) #25, !dbg !3908
  call void @llvm.dbg.declare(metadata [25 x i8]* %3, metadata !3896, metadata !DIExpression()), !dbg !3909
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !3910
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !3910
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !3900, metadata !DIExpression()), !dbg !3911
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !3912
  store i64 0, i64* %11, align 8, !dbg !3912
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !3913
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @ccm_key, i32 0, i32 0), i8** %12, align 8, !dbg !3913
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !3912
  store %struct.device* null, %struct.device** %13, align 4, !dbg !3912
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !3912
  store i8* null, i8** %14, align 8, !dbg !3912
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !3912
  store i8* null, i8** %15, align 4, !dbg !3912
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !3912
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !3914
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !3915
  store i16 8, i16* %18, align 8, !dbg !3915
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !3915
  store i16 13, i16* %19, align 2, !dbg !3915
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !3912
  store i16 16, i16* %20, align 4, !dbg !3912
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !3912
  %22 = load i32, i32* @cap_flags, align 4, !dbg !3916
  %23 = trunc i32 %22 to i16, !dbg !3916
  store i16 %23, i16* %21, align 2, !dbg !3912
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !3917
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !3917
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !3901, metadata !DIExpression()), !dbg !3918
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !3919
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8** %25, align 4, !dbg !3919
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !3919
  store i32 23, i32* %26, align 4, !dbg !3919
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !3919
  store i8* %8, i8** %27, align 4, !dbg !3919
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !3919
  store i32 50, i32* %28, align 4, !dbg !3919
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !3919
  store i32 0, i32* %29, align 4, !dbg !3919
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !3919
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !3919
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !3920
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !3920
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !3902, metadata !DIExpression()), !dbg !3921
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !3922
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !3922
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @ccm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !3922
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !3922
  store i32 8, i32* %34, align 4, !dbg !3922
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !3922
  %36 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i32 0, i32 23, !dbg !3923
  store i8* %36, i8** %35, align 4, !dbg !3922
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !3924
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !3924
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !3903, metadata !DIExpression()), !dbg !3925
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !3926
  store i8* %8, i8** %38, align 4, !dbg !3926
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !3926
  store i32 23, i32* %39, align 4, !dbg !3926
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !3926
  store i8* %9, i8** %40, align 4, !dbg !3926
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !3926
  store i32 25, i32* %41, align 4, !dbg !3926
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !3926
  store i32 0, i32* %42, align 4, !dbg !3926
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !3926
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !3926
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 1) #26, !dbg !3927
  %45 = icmp eq i32 %44, 0, !dbg !3927
  br i1 %45, label %46, label %83, !dbg !3929

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !3930
  %47 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3931
  %48 = icmp eq i32 %47, 0, !dbg !3931
  br i1 %48, label %52, label %49, !dbg !3933

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3934
  %51 = zext i8 %50 to i32, !dbg !3934
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24, i32 0, i32 0), i32 noundef %51) #27, !dbg !3934
  br label %82, !dbg !3940

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !3941
  %54 = zext i8 %53 to i32, !dbg !3941
  %55 = load i32, i32* %29, align 4, !dbg !3941
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !3941
  %56 = load i8*, i8** %27, align 4, !dbg !3946
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i32 noundef 31) #27, !dbg !3948
  %58 = icmp eq i32 %57, 0, !dbg !3948
  br i1 %58, label %63, label %59, !dbg !3949

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3950
  %61 = zext i8 %60 to i32, !dbg !3950
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.25, i32 0, i32 0), i32 noundef %61) #27, !dbg !3950
  %62 = load i8*, i8** %27, align 4, !dbg !3956
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @ccm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 31) #26, !dbg !3957
  br label %82, !dbg !3958

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i32 0, i32 0), i32 noundef %54) #27, !dbg !3959
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !3964
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 4, i32 noundef 0) #26, !dbg !3965
  %65 = icmp eq i32 %64, 0, !dbg !3965
  br i1 %65, label %66, label %83, !dbg !3967

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !3968
  %67 = call fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !3969
  %68 = icmp eq i32 %67, 0, !dbg !3969
  br i1 %68, label %72, label %69, !dbg !3971

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3972
  %71 = zext i8 %70 to i32, !dbg !3972
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27, i32 0, i32 0), i32 noundef %71) #27, !dbg !3972
  br label %82, !dbg !3978

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !3979
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !3979
  %74 = load i8*, i8** %40, align 4, !dbg !3984
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i32 noundef 23) #27, !dbg !3986
  %76 = icmp eq i32 %75, 0, !dbg !3986
  br i1 %76, label %81, label %77, !dbg !3987

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !3988
  %79 = zext i8 %78 to i32, !dbg !3988
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.28, i32 0, i32 0), i32 noundef %79) #27, !dbg !3988
  %80 = load i8*, i8** %40, align 4, !dbg !3994
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @ccm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 23) #26, !dbg !3995
  br label %82, !dbg !3996

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.29, i32 0, i32 0), i32 noundef %54) #27, !dbg !3997
  br label %82, !dbg !4002

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !3904), !dbg !4003
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4004
  br label %83, !dbg !4005

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4005
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4005
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4005
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4005
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %9) #25, !dbg !4005
  call void @llvm.lifetime.end.p0i8(i64 50, i8* nonnull %8) #25, !dbg !4005
  ret void, !dbg !4005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_ccm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4006 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4008, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4009, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0), metadata !4010, metadata !DIExpression()), !dbg !4011
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4012
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4012
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4013
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4014
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4015
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4015
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4015
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @ccm_nonce, i32 0, i32 0)) #27, !dbg !4016
  ret i32 %9, !dbg !4017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gcm_mode(%struct.device* noundef %0) #1 !dbg !4018 {
  %2 = alloca [60 x i8], align 1
  %3 = alloca [44 x i8], align 1
  %4 = alloca %struct.cipher_ctx, align 8
  %5 = alloca %struct.cipher_pkt, align 4
  %6 = alloca %struct.cipher_aead_pkt, align 4
  %7 = alloca %struct.cipher_pkt, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !4020, metadata !DIExpression()), !dbg !4032
  %8 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 0, !dbg !4033
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4033
  call void @llvm.dbg.declare(metadata [60 x i8]* %2, metadata !4021, metadata !DIExpression()), !dbg !4034
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(60) %8, i8 0, i32 60, i1 false), !dbg !4034
  %9 = getelementptr inbounds [44 x i8], [44 x i8]* %3, i32 0, i32 0, !dbg !4035
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4035
  call void @llvm.dbg.declare(metadata [44 x i8]* %3, metadata !4025, metadata !DIExpression()), !dbg !4036
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(44) %9, i8 0, i32 44, i1 false), !dbg !4036
  %10 = bitcast %struct.cipher_ctx* %4 to i8*, !dbg !4037
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4037
  call void @llvm.dbg.declare(metadata %struct.cipher_ctx* %4, metadata !4027, metadata !DIExpression()), !dbg !4038
  %11 = bitcast %struct.cipher_ctx* %4 to i64*, !dbg !4039
  store i64 0, i64* %11, align 8, !dbg !4039
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 1, i32 0, !dbg !4040
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @gcm_key, i32 0, i32 0), i8** %12, align 8, !dbg !4040
  %13 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 2, !dbg !4039
  store %struct.device* null, %struct.device** %13, align 4, !dbg !4039
  %14 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 3, !dbg !4039
  store i8* null, i8** %14, align 8, !dbg !4039
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 4, !dbg !4039
  store i8* null, i8** %15, align 4, !dbg !4039
  %16 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 5, !dbg !4039
  %17 = bitcast %union.anon.5* %16 to %struct.ccm_params*, !dbg !4041
  %18 = bitcast %union.anon.5* %16 to i16*, !dbg !4042
  store i16 16, i16* %18, align 8, !dbg !4042
  %19 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %17, i32 0, i32 1, !dbg !4042
  store i16 12, i16* %19, align 2, !dbg !4042
  %20 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 6, !dbg !4039
  store i16 16, i16* %20, align 4, !dbg !4039
  %21 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %4, i32 0, i32 7, !dbg !4039
  %22 = load i32, i32* @cap_flags, align 4, !dbg !4043
  %23 = trunc i32 %22 to i16, !dbg !4043
  store i16 %23, i16* %21, align 2, !dbg !4039
  %24 = bitcast %struct.cipher_pkt* %5 to i8*, !dbg !4044
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4044
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %5, metadata !4028, metadata !DIExpression()), !dbg !4045
  %25 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 0, !dbg !4046
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8** %25, align 4, !dbg !4046
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 1, !dbg !4046
  store i32 42, i32* %26, align 4, !dbg !4046
  %27 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 2, !dbg !4046
  store i8* %8, i8** %27, align 4, !dbg !4046
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 3, !dbg !4046
  store i32 60, i32* %28, align 4, !dbg !4046
  %29 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 4, !dbg !4046
  store i32 0, i32* %29, align 4, !dbg !4046
  %30 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %5, i32 0, i32 5, !dbg !4046
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %30, align 4, !dbg !4046
  %31 = bitcast %struct.cipher_aead_pkt* %6 to i8*, !dbg !4047
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4047
  call void @llvm.dbg.declare(metadata %struct.cipher_aead_pkt* %6, metadata !4029, metadata !DIExpression()), !dbg !4048
  %32 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 0, !dbg !4049
  %33 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 1, !dbg !4049
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @gcm_hdr, i32 0, i32 0), i8** %33, align 4, !dbg !4049
  %34 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 2, !dbg !4049
  store i32 20, i32* %34, align 4, !dbg !4049
  %35 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %6, i32 0, i32 3, !dbg !4049
  %36 = getelementptr inbounds [60 x i8], [60 x i8]* %2, i32 0, i32 42, !dbg !4050
  store i8* %36, i8** %35, align 4, !dbg !4049
  %37 = bitcast %struct.cipher_pkt* %7 to i8*, !dbg !4051
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4051
  call void @llvm.dbg.declare(metadata %struct.cipher_pkt* %7, metadata !4030, metadata !DIExpression()), !dbg !4052
  %38 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 0, !dbg !4053
  store i8* %8, i8** %38, align 4, !dbg !4053
  %39 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 1, !dbg !4053
  store i32 42, i32* %39, align 4, !dbg !4053
  %40 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 2, !dbg !4053
  store i8* %9, i8** %40, align 4, !dbg !4053
  %41 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 3, !dbg !4053
  store i32 44, i32* %41, align 4, !dbg !4053
  %42 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 4, !dbg !4053
  store i32 0, i32* %42, align 4, !dbg !4053
  %43 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %7, i32 0, i32 5, !dbg !4053
  store %struct.cipher_ctx* null, %struct.cipher_ctx** %43, align 4, !dbg !4053
  %44 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 1) #26, !dbg !4054
  %45 = icmp eq i32 %44, 0, !dbg !4054
  br i1 %45, label %46, label %83, !dbg !4056

46:                                               ; preds = %1
  store %struct.cipher_pkt* %5, %struct.cipher_pkt** %32, align 4, !dbg !4057
  %47 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4058
  %48 = icmp eq i32 %47, 0, !dbg !4058
  br i1 %48, label %52, label %49, !dbg !4060

49:                                               ; preds = %46
  %50 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4061
  %51 = zext i8 %50 to i32, !dbg !4061
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef %51) #27, !dbg !4061
  br label %82, !dbg !4067

52:                                               ; preds = %46
  %53 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4068
  %54 = zext i8 %53 to i32, !dbg !4068
  %55 = load i32, i32* %29, align 4, !dbg !4068
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i32 0, i32 0), i32 noundef %54, i32 noundef %55) #27, !dbg !4068
  %56 = load i8*, i8** %27, align 4, !dbg !4073
  %57 = call i32 @memcmp(i8* noundef %56, i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i32 noundef 58) #27, !dbg !4075
  %58 = icmp eq i32 %57, 0, !dbg !4075
  br i1 %58, label %63, label %59, !dbg !4076

59:                                               ; preds = %52
  %60 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4077
  %61 = zext i8 %60 to i32, !dbg !4077
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.31, i32 0, i32 0), i32 noundef %61) #27, !dbg !4077
  %62 = load i8*, i8** %27, align 4, !dbg !4083
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @gcm_expected, i32 0, i32 0), i8* noundef %62, i32 noundef 58) #26, !dbg !4084
  br label %82, !dbg !4085

63:                                               ; preds = %52
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i32 noundef %54) #27, !dbg !4086
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4091
  %64 = call fastcc i32 @cipher_begin_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4, i32 noundef 5, i32 noundef 0) #26, !dbg !4092
  %65 = icmp eq i32 %64, 0, !dbg !4092
  br i1 %65, label %66, label %83, !dbg !4094

66:                                               ; preds = %63
  store %struct.cipher_pkt* %7, %struct.cipher_pkt** %32, align 4, !dbg !4095
  %67 = call fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef nonnull %4, %struct.cipher_aead_pkt* noundef nonnull %6) #26, !dbg !4096
  %68 = icmp eq i32 %67, 0, !dbg !4096
  br i1 %68, label %72, label %69, !dbg !4098

69:                                               ; preds = %66
  %70 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4099
  %71 = zext i8 %70 to i32, !dbg !4099
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef %71) #27, !dbg !4099
  br label %82, !dbg !4105

72:                                               ; preds = %66
  %73 = load i32, i32* %42, align 4, !dbg !4106
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i32 noundef %54, i32 noundef %73) #27, !dbg !4106
  %74 = load i8*, i8** %40, align 4, !dbg !4111
  %75 = call i32 @memcmp(i8* noundef %74, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i32 noundef 42) #27, !dbg !4113
  %76 = icmp eq i32 %75, 0, !dbg !4113
  br i1 %76, label %81, label %77, !dbg !4114

77:                                               ; preds = %72
  %78 = call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4115
  %79 = zext i8 %78 to i32, !dbg !4115
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([77 x i8], [77 x i8]* @.str.34, i32 0, i32 0), i32 noundef %79) #27, !dbg !4115
  %80 = load i8*, i8** %40, align 4, !dbg !4121
  call fastcc void @print_buffer_comparison(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @gcm_data, i32 0, i32 0), i8* noundef %80, i32 noundef 42) #26, !dbg !4122
  br label %82, !dbg !4123

81:                                               ; preds = %72
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.35, i32 0, i32 0), i32 noundef %54) #27, !dbg !4124
  br label %82, !dbg !4129

82:                                               ; preds = %81, %77, %69, %59, %49
  call void @llvm.dbg.label(metadata !4031), !dbg !4130
  call fastcc void @cipher_free_session(%struct.device* noundef %0, %struct.cipher_ctx* noundef nonnull %4) #26, !dbg !4131
  br label %83, !dbg !4132

83:                                               ; preds = %63, %1, %82
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #25, !dbg !4132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !4132
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #25, !dbg !4132
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !4132
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %9) #25, !dbg !4132
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %8) #25, !dbg !4132
  ret void, !dbg !4132
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cipher_gcm_op(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1) unnamed_addr #1 !dbg !4133 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !4135, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !4136, metadata !DIExpression()), !dbg !4138
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0), metadata !4137, metadata !DIExpression()), !dbg !4138
  %3 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !4139
  %4 = load %struct.cipher_pkt*, %struct.cipher_pkt** %3, align 4, !dbg !4139
  %5 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %4, i32 0, i32 5, !dbg !4140
  store %struct.cipher_ctx* %0, %struct.cipher_ctx** %5, align 4, !dbg !4141
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 0, i32 1, !dbg !4142
  %7 = bitcast %union.anon.3* %6 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !4142
  %8 = load i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)*, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %7, align 4, !dbg !4142
  %9 = tail call i32 %8(%struct.cipher_ctx* noundef %0, %struct.cipher_aead_pkt* noundef %1, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @gcm_nonce, i32 0, i32 0)) #27, !dbg !4143
  ret i32 %9, !dbg !4144
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !4145 {
  %1 = tail call fastcc %struct.device* @device_get_binding() #26, !dbg !4157
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !4147, metadata !DIExpression()), !dbg !4158
  %2 = icmp eq %struct.device* %1, null, !dbg !4159
  br i1 %2, label %3, label %6, !dbg !4161

3:                                                ; preds = %0
  %4 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4162
  %5 = zext i8 %4 to i32, !dbg !4162
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i32 0, i32 0), i32 noundef %5, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4162
  br label %23, !dbg !4168

6:                                                ; preds = %0
  call void @llvm.dbg.declare(metadata [6 x %struct.mode_test]* @__const.main.modes, metadata !4148, metadata !DIExpression()), !dbg !4169
  %7 = tail call i32 @validate_hw_compatibility(%struct.device* noundef nonnull %1) #26, !dbg !4170
  %8 = icmp eq i32 %7, 0, !dbg !4170
  br i1 %8, label %12, label %9, !dbg !4172

9:                                                ; preds = %6
  %10 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 1) #26, !dbg !4173
  %11 = zext i8 %10 to i32, !dbg !4173
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0), i32 noundef %11) #27, !dbg !4173
  br label %23, !dbg !4179

12:                                               ; preds = %6
  %13 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef 3) #26, !dbg !4180
  %14 = zext i8 %13 to i32, !dbg !4180
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i32 0, i32 0), i32 noundef %14) #27, !dbg !4180
  call void @llvm.dbg.value(metadata i32 0, metadata !4156, metadata !DIExpression()), !dbg !4158
  br label %15, !dbg !4185

15:                                               ; preds = %12, %15
  %16 = phi i32 [ 0, %12 ], [ %21, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4156, metadata !DIExpression()), !dbg !4158
  %17 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 0, !dbg !4187
  %18 = load i8*, i8** %17, align 4, !dbg !4189
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i32 0, i32 0), i32 noundef %14, i8* noundef %18) #27, !dbg !4189
  %19 = getelementptr inbounds [6 x %struct.mode_test], [6 x %struct.mode_test]* @__const.main.modes, i32 0, i32 %16, i32 1, !dbg !4195
  %20 = load void (%struct.device*)*, void (%struct.device*)** %19, align 4, !dbg !4195
  tail call void %20(%struct.device* noundef nonnull %1) #27, !dbg !4196
  %21 = add nuw nsw i32 %16, 1, !dbg !4197
  call void @llvm.dbg.value(metadata i32 %21, metadata !4156, metadata !DIExpression()), !dbg !4158
  %22 = icmp eq i32 %21, 5, !dbg !4185
  br i1 %22, label %23, label %15, !dbg !4185, !llvm.loop !4198

23:                                               ; preds = %15, %9, %3
  ret void, !dbg !4200
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.device* @device_get_binding() unnamed_addr #1 !dbg !4201 {
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), metadata !4206, metadata !DIExpression()), !dbg !4207
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !4208, !srcloc !4210
  %1 = tail call %struct.device* @z_impl_device_get_binding(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0)) #27, !dbg !4211
  ret %struct.device* %1, !dbg !4212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !4213 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4224, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %1, metadata !4225, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %2, metadata !4226, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %3, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4229, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4230, metadata !DIExpression()), !dbg !4290
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !4291
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4291
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !4233, metadata !DIExpression()), !dbg !4292
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !4293
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4293
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !4234, metadata !DIExpression()), !dbg !4294
  call void @llvm.dbg.value(metadata i32 0, metadata !4235, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4237, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 -1, metadata !4238, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 0, metadata !4241, metadata !DIExpression()), !dbg !4290
  %12 = and i32 %2, 4, !dbg !4295
  %13 = icmp eq i32 %12, 0, !dbg !4296
  call void @llvm.dbg.value(metadata i1 %13, metadata !4242, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4290
  %14 = lshr i32 %2, 3, !dbg !4297
  %15 = and i32 %14, 7, !dbg !4297
  %16 = add nuw nsw i32 %15, 1, !dbg !4298
  call void @llvm.dbg.value(metadata i32 %16, metadata !4243, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 0, metadata !4244, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %0, metadata !4245, metadata !DIExpression()), !dbg !4290
  %17 = ptrtoint i8* %0 to i32, !dbg !4299
  %18 = and i32 %17, 3, !dbg !4301
  %19 = icmp eq i32 %18, 0, !dbg !4301
  br i1 %19, label %20, label %316, !dbg !4302

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4303
  call void @llvm.dbg.value(metadata i8* %21, metadata !4230, metadata !DIExpression()), !dbg !4290
  %22 = icmp eq i8* %0, null, !dbg !4304
  %23 = and i32 %1, 7, !dbg !4306
  %24 = sub nuw nsw i32 8, %23, !dbg !4306
  %25 = select i1 %22, i32 %23, i32 0, !dbg !4306
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !4306
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !4306
  call void @llvm.dbg.value(metadata i32 %27, metadata !4225, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %26, metadata !4230, metadata !DIExpression()), !dbg !4290
  br i1 %22, label %33, label %28, !dbg !4307

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !4309
  %30 = sub i32 4, %17, !dbg !4309
  %31 = add i32 %30, %29, !dbg !4310
  %32 = icmp ugt i32 %31, %27, !dbg !4311
  br i1 %32, label %316, label %33, !dbg !4312

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !4313
  call void @llvm.dbg.value(metadata i8* %34, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %3, metadata !4240, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 4, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 4, metadata !4231, metadata !DIExpression()), !dbg !4290
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !4314

38:                                               ; preds = %63, %216
  %39 = phi i8 [ %221, %216 ], [ %64, %63 ]
  %40 = phi i8* [ %220, %216 ], [ %65, %63 ]
  %41 = phi i8* [ %218, %216 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %216 ], [ %67, %63 ]
  %43 = phi i8* [ %219, %216 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %216 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %216 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %216 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %42, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %43, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %44, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %45, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %72, metadata !4238, metadata !DIExpression()), !dbg !4290
  br i1 %46, label %73, label %47, !dbg !4315

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !4316
  %49 = zext i1 %48 to i32, !dbg !4320
  %50 = add nsw i32 %72, %49, !dbg !4320
  %51 = select i1 %48, i32 4, i32 %45, !dbg !4320
  %52 = select i1 %48, i32 4, i32 %44, !dbg !4320
  call void @llvm.dbg.value(metadata i32 %52, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %51, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %50, metadata !4238, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4321

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %40, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %58, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %57, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %56, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %54, metadata !4238, metadata !DIExpression()), !dbg !4290
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4322
  call void @llvm.dbg.value(metadata i8* %60, metadata !4227, metadata !DIExpression()), !dbg !4290
  %61 = load i8, i8* %60, align 1, !dbg !4324
  %62 = icmp eq i8 %61, 0, !dbg !4325
  br i1 %62, label %223, label %63, !dbg !4326, !llvm.loop !4327

63:                                               ; preds = %190, %53
  %64 = phi i8 [ %61, %53 ], [ %197, %190 ]
  %65 = phi i8* [ %60, %53 ], [ %196, %190 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %190 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %190 ]
  %68 = phi i8* [ %58, %53 ], [ %195, %190 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %190 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %190 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %190 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %190 ]
  br label %38, !dbg !4315

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !4330

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4241, metadata !DIExpression()), !dbg !4290
  %75 = add nsw i32 %72, -1, !dbg !4331
  call void @llvm.dbg.value(metadata i32 %75, metadata !4238, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4332

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !4333

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 4, metadata !4231, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4334

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 4, metadata !4231, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4335

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !4336
  %81 = icmp eq i8 %80, 108, !dbg !4338
  br i1 %81, label %82, label %109, !dbg !4339

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !4340
  %84 = load i8, i8* %83, align 1, !dbg !4340
  %85 = icmp eq i8 %84, 108, !dbg !4343
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !4344
  %89 = add i32 %88, 7, !dbg !4344
  %90 = and i32 %89, -8, !dbg !4344
  %91 = inttoptr i32 %90 to i8*, !dbg !4344
  %92 = inttoptr i32 %90 to double*, !dbg !4344
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !4344
  %94 = load double, double* %92, align 8, !dbg !4344
  call void @llvm.dbg.value(metadata i8* %93, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 8, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 8, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata double %94, metadata !4258, metadata !DIExpression()), !dbg !4346
  %95 = ptrtoint i8* %43 to i32, !dbg !4347
  %96 = add i32 %95, 7, !dbg !4347
  %97 = and i32 %96, -8, !dbg !4347
  %98 = inttoptr i32 %97 to i8*, !dbg !4348
  call void @llvm.dbg.value(metadata i8* %98, metadata !4230, metadata !DIExpression()), !dbg !4290
  br i1 %22, label %104, label %99, !dbg !4349

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !4350
  %101 = icmp ugt i32 %100, %194, !dbg !4354
  br i1 %101, label %316, label %102, !dbg !4355

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !4356
  store double %94, double* %103, align 8, !dbg !4356
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4359
  call void @llvm.dbg.value(metadata i8* %105, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !4241, metadata !DIExpression()), !dbg !4290
  br label %53, !dbg !4360

107:                                              ; preds = %73, %73
  br label %109, !dbg !4361

108:                                              ; preds = %73
  br label %109, !dbg !4361

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !4290
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !4290
  call void @llvm.dbg.value(metadata i32 %113, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %112, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  %114 = ptrtoint i8* %43 to i32, !dbg !4361
  %115 = add i32 %114, -1, !dbg !4361
  %116 = add i32 %115, %112, !dbg !4361
  %117 = sub i32 0, %112, !dbg !4361
  %118 = and i32 %116, %117, !dbg !4361
  %119 = inttoptr i32 %118 to i8*, !dbg !4362
  call void @llvm.dbg.value(metadata i8* %119, metadata !4230, metadata !DIExpression()), !dbg !4290
  br i1 %22, label %124, label %120, !dbg !4363

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !4365
  %122 = add i32 %121, %118, !dbg !4366
  %123 = icmp ugt i32 %122, %194, !dbg !4367
  br i1 %123, label %316, label %124, !dbg !4368

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %199, !dbg !4369

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !4362
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4370
  call void @llvm.dbg.value(metadata i8* %127, metadata !4228, metadata !DIExpression()), !dbg !4290
  %128 = bitcast i8* %41 to i8**, !dbg !4370
  %129 = load i8*, i8** %128, align 4, !dbg !4370
  call void @llvm.dbg.value(metadata i8* %129, metadata !4240, metadata !DIExpression()), !dbg !4290
  br label %130, !dbg !4371

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %191, %125 ], !dbg !4372
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !4373
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !4290
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %192, %125 ], !dbg !4374
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !4290
  %137 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !4375
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !4290
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !4290
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !4290
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !4290
  %142 = phi i32 [ %27, %33 ], [ %194, %125 ], !dbg !4376
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %142, metadata !4225, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %141, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %140, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %139, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %138, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %137, metadata !4235, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %136, metadata !4243, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %135, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %133, metadata !4240, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %132, metadata !4238, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %131, metadata !4237, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.label(metadata !4289), !dbg !4378
  br i1 %22, label %146, label %144, !dbg !4379

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !4380
  store i8* %133, i8** %145, align 4, !dbg !4383
  br label %146, !dbg !4384

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !4385
  call void @llvm.dbg.value(metadata i32 %147, metadata !4243, metadata !DIExpression()), !dbg !4290
  %148 = icmp sgt i32 %136, 0, !dbg !4386
  br i1 %148, label %152, label %149, !dbg !4387

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #26, !dbg !4388
  %151 = zext i1 %150 to i32, !dbg !4388
  br label %152, !dbg !4387

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !4387
  %154 = icmp eq i32 %153, 0, !dbg !4387
  call void @llvm.dbg.value(metadata i1 %154, metadata !4267, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4389
  call void @llvm.dbg.value(metadata i1 %36, metadata !4270, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4389
  %155 = or i1 %36, %154, !dbg !4390
  br i1 %155, label %156, label %190, !dbg !4390

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !4391
  %158 = sub i32 %157, %17, !dbg !4391
  %159 = lshr i32 %158, 2, !dbg !4392
  call void @llvm.dbg.value(metadata i32 %159, metadata !4271, metadata !DIExpression()), !dbg !4393
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !4394
  %162 = icmp ugt i32 %137, 15
  %163 = select i1 %161, i1 true, i1 %162, !dbg !4394
  br i1 %163, label %316, label %164, !dbg !4394

164:                                              ; preds = %156
  br i1 %22, label %175, label %165, !dbg !4396

165:                                              ; preds = %164
  %166 = trunc i32 %159 to i8, !dbg !4397
  %167 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !4400
  store i8 %166, i8* %167, align 1, !dbg !4401
  %168 = trunc i32 %132 to i8, !dbg !4402
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !4403
  store i8 %168, i8* %169, align 1, !dbg !4404
  br i1 %154, label %173, label %170, !dbg !4405

170:                                              ; preds = %165
  %171 = or i8 %166, -128, !dbg !4406
  store i8 %171, i8* %167, align 1, !dbg !4406
  %172 = add i32 %131, 1, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %172, metadata !4237, metadata !DIExpression()), !dbg !4290
  br label %185, !dbg !4410

173:                                              ; preds = %165
  %174 = add i32 %135, 1, !dbg !4411
  call void @llvm.dbg.value(metadata i32 %174, metadata !4236, metadata !DIExpression()), !dbg !4290
  br label %185

175:                                              ; preds = %164
  br i1 %154, label %178, label %176, !dbg !4413

176:                                              ; preds = %175
  %177 = add i32 %142, 1, !dbg !4414
  call void @llvm.dbg.value(metadata i32 %177, metadata !4225, metadata !DIExpression()), !dbg !4290
  br label %185, !dbg !4417

178:                                              ; preds = %175
  br i1 %13, label %181, label %179, !dbg !4418

179:                                              ; preds = %178
  %180 = add i32 %142, 2, !dbg !4419
  call void @llvm.dbg.value(metadata i32 %180, metadata !4225, metadata !DIExpression()), !dbg !4290
  br label %185, !dbg !4422

181:                                              ; preds = %178
  %182 = tail call i32 @strlen(i8* noundef %133) #27, !dbg !4423
  %183 = add i32 %142, 2, !dbg !4425
  %184 = add i32 %183, %182, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %184, metadata !4225, metadata !DIExpression()), !dbg !4290
  br label %185

185:                                              ; preds = %173, %170, %179, %181, %176
  %186 = phi i32 [ %172, %170 ], [ %131, %173 ], [ %131, %176 ], [ %131, %179 ], [ %131, %181 ], !dbg !4290
  %187 = phi i32 [ %135, %170 ], [ %174, %173 ], [ %135, %176 ], [ %135, %179 ], [ %135, %181 ], !dbg !4290
  %188 = phi i32 [ %142, %170 ], [ %142, %173 ], [ %177, %176 ], [ %180, %179 ], [ %184, %181 ], !dbg !4290
  call void @llvm.dbg.value(metadata i32 %188, metadata !4225, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %187, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %186, metadata !4237, metadata !DIExpression()), !dbg !4290
  %189 = add nuw nsw i32 %137, 1, !dbg !4427
  call void @llvm.dbg.value(metadata i32 undef, metadata !4225, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 undef, metadata !4235, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 undef, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 undef, metadata !4237, metadata !DIExpression()), !dbg !4290
  br label %190

190:                                              ; preds = %185, %152
  %191 = phi i32 [ %131, %152 ], [ %186, %185 ], !dbg !4372
  %192 = phi i32 [ %135, %152 ], [ %187, %185 ], !dbg !4374
  %193 = phi i32 [ %137, %152 ], [ %189, %185 ], !dbg !4375
  %194 = phi i32 [ %142, %152 ], [ %188, %185 ], !dbg !4376
  call void @llvm.dbg.value(metadata i32 %194, metadata !4225, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %193, metadata !4235, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %192, metadata !4236, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %191, metadata !4237, metadata !DIExpression()), !dbg !4290
  %195 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !4428
  call void @llvm.dbg.value(metadata i8* %195, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %143, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %141, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %139, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %138, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %132, metadata !4238, metadata !DIExpression()), !dbg !4290
  %196 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !4322
  call void @llvm.dbg.value(metadata i8* %196, metadata !4227, metadata !DIExpression()), !dbg !4290
  %197 = load i8, i8* %196, align 1, !dbg !4324
  %198 = icmp eq i8 %197, 0, !dbg !4325
  br i1 %198, label %223, label %63, !dbg !4326

199:                                              ; preds = %124
  switch i32 %113, label %316 [
    i32 4, label %200
    i32 8, label %206
  ], !dbg !4429

200:                                              ; preds = %199
  %201 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !4430
  call void @llvm.dbg.value(metadata i8* %201, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 undef, metadata !4274, metadata !DIExpression()), !dbg !4431
  br i1 %22, label %216, label %202, !dbg !4432

202:                                              ; preds = %200
  %203 = bitcast i8* %41 to i32*, !dbg !4430
  %204 = load i32, i32* %203, align 4, !dbg !4430
  call void @llvm.dbg.value(metadata i32 %204, metadata !4274, metadata !DIExpression()), !dbg !4431
  %205 = inttoptr i32 %118 to i32*, !dbg !4433
  store i32 %204, i32* %205, align 4, !dbg !4436
  br label %216, !dbg !4437

206:                                              ; preds = %199
  %207 = ptrtoint i8* %41 to i32, !dbg !4438
  %208 = add i32 %207, 7, !dbg !4438
  %209 = and i32 %208, -8, !dbg !4438
  %210 = inttoptr i32 %209 to i8*, !dbg !4438
  %211 = getelementptr inbounds i8, i8* %210, i32 8, !dbg !4438
  call void @llvm.dbg.value(metadata i8* %211, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i64 undef, metadata !4280, metadata !DIExpression()), !dbg !4439
  br i1 %22, label %216, label %212, !dbg !4440

212:                                              ; preds = %206
  %213 = inttoptr i32 %209 to i64*, !dbg !4438
  %214 = load i64, i64* %213, align 8, !dbg !4438
  call void @llvm.dbg.value(metadata i64 %214, metadata !4280, metadata !DIExpression()), !dbg !4439
  %215 = inttoptr i32 %118 to i64*, !dbg !4441
  store i64 %214, i64* %215, align 8, !dbg !4446
  br label %216, !dbg !4447

216:                                              ; preds = %206, %212, %200, %202
  %217 = phi i32 [ 4, %202 ], [ 4, %200 ], [ 8, %212 ], [ 8, %206 ]
  %218 = phi i8* [ %201, %202 ], [ %201, %200 ], [ %211, %212 ], [ %211, %206 ], !dbg !4448
  %219 = getelementptr inbounds i8, i8* %119, i32 %217, !dbg !4448
  call void @llvm.dbg.value(metadata i8* %218, metadata !4228, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %40, metadata !4227, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %219, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %113, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %112, metadata !4232, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4244, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8 poison, metadata !4241, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %72, metadata !4238, metadata !DIExpression()), !dbg !4290
  %220 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !4322
  call void @llvm.dbg.value(metadata i8* %220, metadata !4227, metadata !DIExpression()), !dbg !4290
  %221 = load i8, i8* %220, align 1, !dbg !4324
  %222 = icmp eq i8 %221, 0, !dbg !4325
  br i1 %222, label %223, label %38, !dbg !4326

223:                                              ; preds = %190, %216, %53
  %224 = phi i8* [ %219, %216 ], [ %58, %53 ], [ %195, %190 ], !dbg !4449
  %225 = ptrtoint i8* %224 to i32, !dbg !4450
  %226 = sub i32 %225, %17, !dbg !4450
  %227 = lshr i32 %226, 2, !dbg !4452
  %228 = icmp ugt i32 %226, 1023, !dbg !4453
  br i1 %228, label %316, label %229, !dbg !4454

229:                                              ; preds = %223
  br i1 %22, label %230, label %233, !dbg !4455

230:                                              ; preds = %229
  %231 = add i32 %194, -8, !dbg !4456
  %232 = add i32 %231, %226, !dbg !4459
  br label %316, !dbg !4460

233:                                              ; preds = %229
  %234 = trunc i32 %227 to i8, !dbg !4461
  store i8 %234, i8* %0, align 1, !dbg !4462
  %235 = trunc i32 %192 to i8, !dbg !4463
  %236 = select i1 %13, i8 %235, i8 0
  %237 = select i1 %13, i8 0, i8 %235
  %238 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4465
  store i8 %236, i8* %238, align 1, !dbg !4467
  %239 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4468
  store i8 %237, i8* %239, align 1, !dbg !4469
  %240 = trunc i32 %191 to i8, !dbg !4470
  %241 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4471
  store i8 %240, i8* %241, align 1, !dbg !4472
  %242 = icmp eq i32 %191, 0, !dbg !4473
  %243 = xor i1 %242, true, !dbg !4474
  %244 = icmp ne i32 %193, 0
  %245 = select i1 %243, i1 %244, i1 false, !dbg !4474
  call void @llvm.dbg.value(metadata i8* %224, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4239, metadata !DIExpression()), !dbg !4290
  br i1 %245, label %246, label %265, !dbg !4474

246:                                              ; preds = %233
  %247 = sub i32 1, %17
  br label %248, !dbg !4475

248:                                              ; preds = %246, %261
  %249 = phi i8* [ %224, %246 ], [ %262, %261 ]
  %250 = phi i32 [ 0, %246 ], [ %263, %261 ]
  call void @llvm.dbg.value(metadata i8* %249, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %250, metadata !4239, metadata !DIExpression()), !dbg !4290
  %251 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %250, !dbg !4476
  %252 = load i8, i8* %251, align 1, !dbg !4476
  %253 = icmp sgt i8 %252, -1, !dbg !4478
  br i1 %253, label %261, label %254, !dbg !4479

254:                                              ; preds = %248
  call void @llvm.dbg.value(metadata i8 %252, metadata !4283, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4480
  %255 = ptrtoint i8* %249 to i32, !dbg !4481
  %256 = add i32 %247, %255, !dbg !4483
  %257 = icmp ugt i32 %256, %194, !dbg !4484
  br i1 %257, label %316, label %258, !dbg !4485

258:                                              ; preds = %254
  %259 = and i8 %252, 127, !dbg !4486
  call void @llvm.dbg.value(metadata i8 %259, metadata !4283, metadata !DIExpression()), !dbg !4480
  %260 = getelementptr inbounds i8, i8* %249, i32 1, !dbg !4487
  call void @llvm.dbg.value(metadata i8* %260, metadata !4230, metadata !DIExpression()), !dbg !4290
  store i8 %259, i8* %249, align 1, !dbg !4488
  br label %261

261:                                              ; preds = %258, %248
  %262 = phi i8* [ %260, %258 ], [ %249, %248 ], !dbg !4428
  call void @llvm.dbg.value(metadata i8* %262, metadata !4230, metadata !DIExpression()), !dbg !4290
  %263 = add nuw i32 %250, 1, !dbg !4489
  call void @llvm.dbg.value(metadata i32 %263, metadata !4239, metadata !DIExpression()), !dbg !4290
  %264 = icmp eq i32 %263, %193, !dbg !4490
  br i1 %264, label %265, label %248, !dbg !4475, !llvm.loop !4491

265:                                              ; preds = %261, %233
  %266 = phi i8* [ %224, %233 ], [ %262, %261 ], !dbg !4428
  call void @llvm.dbg.value(metadata i8* %266, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 0, metadata !4239, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %133, metadata !4240, metadata !DIExpression()), !dbg !4290
  %267 = icmp eq i32 %193, 0, !dbg !4493
  br i1 %267, label %312, label %268, !dbg !4496

268:                                              ; preds = %265
  %269 = sub i32 1, %17
  br label %270, !dbg !4496

270:                                              ; preds = %268, %307
  %271 = phi i8* [ %266, %268 ], [ %309, %307 ]
  %272 = phi i8* [ %133, %268 ], [ %308, %307 ]
  %273 = phi i32 [ 0, %268 ], [ %310, %307 ]
  call void @llvm.dbg.value(metadata i8* %271, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %272, metadata !4240, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %273, metadata !4239, metadata !DIExpression()), !dbg !4290
  br i1 %242, label %278, label %274, !dbg !4497

274:                                              ; preds = %270
  %275 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4500
  %276 = load i8, i8* %275, align 1, !dbg !4500
  %277 = icmp sgt i8 %276, -1, !dbg !4501
  br i1 %277, label %278, label %307, !dbg !4502

278:                                              ; preds = %274, %270
  br i1 %13, label %283, label %279, !dbg !4503

279:                                              ; preds = %278
  call void @llvm.dbg.value(metadata i32 0, metadata !4231, metadata !DIExpression()), !dbg !4290
  %280 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %273, !dbg !4504
  %281 = load i8, i8* %280, align 1, !dbg !4504
  %282 = getelementptr inbounds i8, i8* %271, i32 1, !dbg !4507
  call void @llvm.dbg.value(metadata i8* %282, metadata !4230, metadata !DIExpression()), !dbg !4290
  store i8 %281, i8* %271, align 1, !dbg !4508
  br label %293, !dbg !4509

283:                                              ; preds = %278
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4510
  %285 = load i8, i8* %284, align 1, !dbg !4510
  %286 = zext i8 %285 to i32, !dbg !4510
  %287 = shl nuw nsw i32 %286, 2, !dbg !4512
  %288 = getelementptr inbounds i8, i8* %0, i32 %287, !dbg !4513
  %289 = bitcast i8* %288 to i8**, !dbg !4514
  %290 = load i8*, i8** %289, align 4, !dbg !4514
  call void @llvm.dbg.value(metadata i8* %290, metadata !4240, metadata !DIExpression()), !dbg !4290
  store i8* null, i8** %289, align 4, !dbg !4515
  %291 = tail call i32 @strlen(i8* noundef %290) #27, !dbg !4516
  %292 = add i32 %291, 1, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %292, metadata !4231, metadata !DIExpression()), !dbg !4290
  br label %293

293:                                              ; preds = %283, %279
  %294 = phi i8* [ %272, %279 ], [ %290, %283 ], !dbg !4290
  %295 = phi i32 [ 0, %279 ], [ %292, %283 ], !dbg !4518
  %296 = phi i8* [ %282, %279 ], [ %271, %283 ], !dbg !4290
  call void @llvm.dbg.value(metadata i8* %296, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i32 %295, metadata !4231, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %294, metadata !4240, metadata !DIExpression()), !dbg !4290
  %297 = ptrtoint i8* %296 to i32, !dbg !4519
  %298 = add i32 %269, %295, !dbg !4521
  %299 = add i32 %298, %297, !dbg !4522
  %300 = icmp ugt i32 %299, %194, !dbg !4523
  br i1 %300, label %316, label %301, !dbg !4524

301:                                              ; preds = %293
  %302 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %273, !dbg !4525
  %303 = load i8, i8* %302, align 1, !dbg !4525
  %304 = getelementptr inbounds i8, i8* %296, i32 1, !dbg !4526
  call void @llvm.dbg.value(metadata i8* %304, metadata !4230, metadata !DIExpression()), !dbg !4290
  store i8 %303, i8* %296, align 1, !dbg !4527
  %305 = tail call i8* @memcpy(i8* noundef nonnull %304, i8* noundef %294, i32 noundef %295) #27, !dbg !4528
  %306 = getelementptr inbounds i8, i8* %304, i32 %295, !dbg !4529
  call void @llvm.dbg.value(metadata i8* %306, metadata !4230, metadata !DIExpression()), !dbg !4290
  br label %307, !dbg !4530

307:                                              ; preds = %274, %301
  %308 = phi i8* [ %272, %274 ], [ %294, %301 ], !dbg !4531
  %309 = phi i8* [ %271, %274 ], [ %306, %301 ], !dbg !4290
  call void @llvm.dbg.value(metadata i8* %309, metadata !4230, metadata !DIExpression()), !dbg !4290
  call void @llvm.dbg.value(metadata i8* %308, metadata !4240, metadata !DIExpression()), !dbg !4290
  %310 = add nuw i32 %273, 1, !dbg !4532
  call void @llvm.dbg.value(metadata i32 %310, metadata !4239, metadata !DIExpression()), !dbg !4290
  %311 = icmp eq i32 %310, %193, !dbg !4493
  br i1 %311, label %312, label %270, !dbg !4496, !llvm.loop !4533

312:                                              ; preds = %307, %265
  %313 = phi i8* [ %266, %265 ], [ %309, %307 ], !dbg !4428
  %314 = ptrtoint i8* %313 to i32, !dbg !4535
  %315 = sub i32 %314, %17, !dbg !4535
  br label %316, !dbg !4536

316:                                              ; preds = %156, %199, %120, %99, %254, %293, %223, %28, %5, %312, %230
  %317 = phi i32 [ %232, %230 ], [ %315, %312 ], [ -14, %5 ], [ -28, %28 ], [ -22, %223 ], [ -28, %293 ], [ -28, %254 ], [ -28, %120 ], [ -22, %199 ], [ -28, %99 ], [ -22, %156 ], !dbg !4290
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #25, !dbg !4537
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !4537
  ret i32 %317, !dbg !4537
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4538 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4542, metadata !DIExpression()), !dbg !4543
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #26, !dbg !4544
  ret i1 %2, !dbg !4545
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !4546 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4551, metadata !DIExpression()), !dbg !4552
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !4553
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !4554
  %4 = and i1 %2, %3, !dbg !4554
  ret i1 %4, !dbg !4555
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !4556 {
  %5 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4560, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %1, metadata !4561, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %2, metadata !4562, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i8* %3, metadata !4563, metadata !DIExpression()), !dbg !4566
  %6 = bitcast %union.anon.4* %5 to i8*, !dbg !4567
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4567
  call void @llvm.dbg.declare(metadata %union.anon.4* %5, metadata !4564, metadata !DIExpression()), !dbg !4568
  call void @llvm.va_start(i8* nonnull %6), !dbg !4569
  %7 = bitcast %union.anon.4* %5 to i32*, !dbg !4570
  %8 = load i32, i32* %7, align 4, !dbg !4570
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !4570
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #26, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %10, metadata !4565, metadata !DIExpression()), !dbg !4566
  call void @llvm.va_end(i8* nonnull %6), !dbg !4571
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #25, !dbg !4572
  ret i32 %10, !dbg !4573
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #7

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #7

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !4574 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4586, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4587, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %2, metadata !4588, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %3, metadata !4589, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %3, metadata !4590, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8* %3, metadata !4591, metadata !DIExpression()), !dbg !4605
  %5 = icmp eq i8* %3, null, !dbg !4606
  br i1 %5, label %45, label %6, !dbg !4608

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !4600, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4605
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !4609
  %8 = load i8, i8* %7, align 1, !dbg !4609
  %9 = zext i8 %8 to i32, !dbg !4610
  call void @llvm.dbg.value(metadata i32 %9, metadata !4601, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i8 undef, metadata !4602, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata i8 undef, metadata !4603, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata i32 0, metadata !4599, metadata !DIExpression()), !dbg !4605
  %10 = icmp eq i8 %8, 0, !dbg !4611
  br i1 %10, label %39, label %11, !dbg !4614

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !4615
  call void @llvm.dbg.value(metadata i8 %12, metadata !4600, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %13 = zext i8 %12 to i32, !dbg !4616
  call void @llvm.dbg.value(metadata i32 %13, metadata !4600, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %14 = shl nuw nsw i32 %13, 2, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %14, metadata !4600, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !4618
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !4619
  %17 = load i8, i8* %16, align 1, !dbg !4619
  call void @llvm.dbg.value(metadata i8 %17, metadata !4602, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %18 = zext i8 %17 to i32, !dbg !4620
  call void @llvm.dbg.value(metadata i32 %18, metadata !4602, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !4621
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !4622
  %21 = load i8, i8* %20, align 1, !dbg !4622
  call void @llvm.dbg.value(metadata i8 %21, metadata !4603, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %22 = zext i8 %21 to i32, !dbg !4623
  call void @llvm.dbg.value(metadata i32 %22, metadata !4603, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %23 = shl nuw nsw i32 %22, 1, !dbg !4624
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !4597, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !4605
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !4625
  call void @llvm.dbg.value(metadata i8* %24, metadata !4597, metadata !DIExpression()), !dbg !4605
  br label %25, !dbg !4614

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !4597, metadata !DIExpression()), !dbg !4605
  call void @llvm.dbg.value(metadata i32 %27, metadata !4599, metadata !DIExpression()), !dbg !4605
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !4626
  call void @llvm.dbg.value(metadata i8* %28, metadata !4597, metadata !DIExpression()), !dbg !4605
  %29 = load i8, i8* %26, align 1, !dbg !4628
  %30 = zext i8 %29 to i32, !dbg !4628
  call void @llvm.dbg.value(metadata i32 %30, metadata !4604, metadata !DIExpression()), !dbg !4605
  %31 = shl nuw nsw i32 %30, 2, !dbg !4629
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !4630
  %33 = bitcast i8* %32 to i8**, !dbg !4631
  call void @llvm.dbg.value(metadata i8** %33, metadata !4598, metadata !DIExpression()), !dbg !4605
  store i8* %28, i8** %33, align 4, !dbg !4632
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #27, !dbg !4633
  %35 = add i32 %34, 1, !dbg !4634
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !4635
  call void @llvm.dbg.value(metadata i8* %36, metadata !4597, metadata !DIExpression()), !dbg !4605
  %37 = add nuw nsw i32 %27, 1, !dbg !4636
  call void @llvm.dbg.value(metadata i32 %37, metadata !4599, metadata !DIExpression()), !dbg !4605
  %38 = icmp eq i32 %37, %9, !dbg !4611
  br i1 %38, label %39, label %25, !dbg !4614, !llvm.loop !4637

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !4639
  call void @llvm.dbg.value(metadata i8* %40, metadata !4590, metadata !DIExpression()), !dbg !4605
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !4640
  %42 = bitcast i8* %41 to i8**, !dbg !4640
  %43 = load i8*, i8** %42, align 1, !dbg !4640
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #26, !dbg !4641
  br label %45, !dbg !4642

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !4605
  ret i32 %46, !dbg !4643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !4644 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4648, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !4649, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i8* %2, metadata !4650, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i8* %3, metadata !4651, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i8* %4, metadata !4652, metadata !DIExpression()), !dbg !4658
  call void @llvm.dbg.value(metadata i8* %4, metadata !4653, metadata !DIExpression()), !dbg !4658
  %6 = ptrtoint i8* %4 to i32, !dbg !4659
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4659
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #27, !dbg !4659
  ret i32 %8, !dbg !4660
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !4661 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4665, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 %1, metadata !4666, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i8 0, metadata !4668, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i32 0, metadata !4669, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i8 poison, metadata !4668, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i8* %0, metadata !4665, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4670
  %3 = load i8, i8* %0, align 1, !dbg !4671
  call void @llvm.dbg.value(metadata i8 %3, metadata !4667, metadata !DIExpression()), !dbg !4670
  %4 = icmp eq i8 %3, 0, !dbg !4672
  br i1 %4, label %29, label %5, !dbg !4673

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !4674
  call void @llvm.dbg.value(metadata i32 %8, metadata !4669, metadata !DIExpression()), !dbg !4670
  br i1 %9, label %11, label %22, !dbg !4675

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !4677
  br i1 %12, label %13, label %17, !dbg !4681

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !4682
  br i1 %14, label %29, label %15, !dbg !4685

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4686
  br i1 %16, label %29, label %22, !dbg !4688

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #26, !dbg !4689
  %19 = xor i1 %18, true, !dbg !4691
  %20 = zext i1 %18 to i32, !dbg !4691
  %21 = add nsw i32 %8, %20, !dbg !4691
  br label %22, !dbg !4691

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !4670
  call void @llvm.dbg.value(metadata i32 %24, metadata !4669, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i8 poison, metadata !4668, metadata !DIExpression()), !dbg !4670
  %25 = icmp eq i8 %6, 37, !dbg !4692
  %26 = xor i1 %25, %23, !dbg !4694
  call void @llvm.dbg.value(metadata i8* %10, metadata !4665, metadata !DIExpression()), !dbg !4670
  call void @llvm.dbg.value(metadata i8* %10, metadata !4665, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4670
  %27 = load i8, i8* %10, align 1, !dbg !4671
  call void @llvm.dbg.value(metadata i8 %27, metadata !4667, metadata !DIExpression()), !dbg !4670
  %28 = icmp eq i8 %27, 0, !dbg !4672
  br i1 %28, label %29, label %5, !dbg !4673, !llvm.loop !4695

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !4670
  ret i1 %30, !dbg !4697
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !4698 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !4702, metadata !DIExpression()), !dbg !4703
  %2 = add i8 %0, -64, !dbg !4704
  %3 = icmp ult i8 %2, 59, !dbg !4704
  ret i1 %3, !dbg !4705
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !4706 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4714, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %1, metadata !4715, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !4716, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8* %3, metadata !4717, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %4, metadata !4718, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i16* %5, metadata !4719, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %6, metadata !4720, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8* %0, metadata !4721, metadata !DIExpression()), !dbg !4783
  %11 = bitcast i8* %0 to i32*, !dbg !4784
  call void @llvm.dbg.value(metadata i32* %11, metadata !4722, metadata !DIExpression()), !dbg !4783
  %12 = and i32 %4, 8, !dbg !4785
  %13 = icmp eq i32 %12, 0, !dbg !4786
  call void @llvm.dbg.value(metadata i1 %13, metadata !4726, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4783
  call void @llvm.dbg.value(metadata i8* %0, metadata !4729, metadata !DIExpression()), !dbg !4783
  %14 = icmp eq i32 %1, 0, !dbg !4787
  br i1 %14, label %15, label %17, !dbg !4788

15:                                               ; preds = %7
  %16 = tail call fastcc i32 @get_package_len(i8* noundef %0) #26, !dbg !4789
  br label %17, !dbg !4788

17:                                               ; preds = %7, %15
  %18 = phi i32 [ %16, %15 ], [ %1, %7 ], !dbg !4788
  call void @llvm.dbg.value(metadata i32 %18, metadata !4715, metadata !DIExpression()), !dbg !4783
  %19 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4790
  %20 = load i8, i8* %19, align 1, !dbg !4790
  %21 = zext i8 %20 to i32, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %21, metadata !4724, metadata !DIExpression()), !dbg !4783
  %22 = icmp ne i8 %20, 0, !dbg !4792
  %23 = and i32 %4, 1, !dbg !4793
  %24 = icmp ne i32 %23, 0, !dbg !4793
  %25 = and i1 %24, %22, !dbg !4793
  call void @llvm.dbg.value(metadata i1 %25, metadata !4728, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4783
  %26 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !4794
  %27 = load i8, i8* %26, align 1, !dbg !4794
  %28 = zext i8 %27 to i32, !dbg !4795
  call void @llvm.dbg.value(metadata i32 %28, metadata !4725, metadata !DIExpression()), !dbg !4783
  %29 = icmp ne i8 %27, 0, !dbg !4796
  %30 = and i32 %4, 2, !dbg !4797
  %31 = icmp ne i32 %30, 0, !dbg !4797
  %32 = and i1 %31, %29, !dbg !4797
  call void @llvm.dbg.value(metadata i1 %32, metadata !4727, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4783
  %33 = select i1 %32, i1 true, i1 %25, !dbg !4798
  br i1 %33, label %38, label %34, !dbg !4798

34:                                               ; preds = %17
  %35 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4800
  br i1 %35, label %267, label %36, !dbg !4803

36:                                               ; preds = %34
  %37 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %18, i8* noundef %3) #27, !dbg !4804
  br label %267, !dbg !4806

38:                                               ; preds = %17
  %39 = load i8, i8* %0, align 1, !dbg !4807
  %40 = zext i8 %39 to i32, !dbg !4808
  %41 = shl nuw nsw i32 %40, 2, !dbg !4809
  call void @llvm.dbg.value(metadata i32 %41, metadata !4723, metadata !DIExpression()), !dbg !4783
  %42 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4810
  %43 = bitcast i8* %42 to i8**, !dbg !4811
  %44 = load i8*, i8** %43, align 4, !dbg !4811
  call void @llvm.dbg.value(metadata i8* %44, metadata !4732, metadata !DIExpression()), !dbg !4783
  %45 = getelementptr inbounds i8, i8* %0, i32 %41, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %45, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 0, metadata !4734, metadata !DIExpression()), !dbg !4783
  %46 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4813
  br i1 %46, label %47, label %132, !dbg !4814

47:                                               ; preds = %38
  call void @llvm.dbg.value(metadata i32 %18, metadata !4731, metadata !DIExpression()), !dbg !4783
  br i1 %25, label %48, label %73, !dbg !4815

48:                                               ; preds = %47
  call void @llvm.dbg.value(metadata i32 %18, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8* %45, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 0, metadata !4734, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 0, metadata !4735, metadata !DIExpression()), !dbg !4816
  %49 = icmp ne i16* %5, null
  br label %50, !dbg !4817

50:                                               ; preds = %48, %67
  %51 = phi i32 [ %18, %48 ], [ %69, %67 ]
  %52 = phi i8* [ %45, %48 ], [ %70, %67 ]
  %53 = phi i32 [ 0, %48 ], [ %68, %67 ]
  %54 = phi i32 [ 0, %48 ], [ %71, %67 ]
  call void @llvm.dbg.value(metadata i32 %51, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8* %52, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %53, metadata !4734, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %54, metadata !4735, metadata !DIExpression()), !dbg !4816
  %55 = load i8, i8* %52, align 1, !dbg !4818
  %56 = zext i8 %55 to i32, !dbg !4819
  %57 = getelementptr inbounds i32, i32* %11, i32 %56, !dbg !4819
  %58 = bitcast i32* %57 to i8**, !dbg !4820
  %59 = load i8*, i8** %58, align 4, !dbg !4820
  call void @llvm.dbg.value(metadata i8* %59, metadata !4741, metadata !DIExpression()), !dbg !4821
  %60 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %59, i16 noundef zeroext 0) #26, !dbg !4822
  call void @llvm.dbg.value(metadata i32 %60, metadata !4744, metadata !DIExpression()), !dbg !4821
  %61 = icmp ult i32 %53, %6
  %62 = select i1 %49, i1 %61, i1 false, !dbg !4823
  br i1 %62, label %63, label %67, !dbg !4823

63:                                               ; preds = %50
  %64 = trunc i32 %60 to i16, !dbg !4825
  %65 = add nuw i32 %53, 1, !dbg !4827
  call void @llvm.dbg.value(metadata i32 %65, metadata !4734, metadata !DIExpression()), !dbg !4783
  %66 = getelementptr inbounds i16, i16* %5, i32 %53, !dbg !4828
  store i16 %64, i16* %66, align 2, !dbg !4829
  br label %67, !dbg !4830

67:                                               ; preds = %63, %50
  %68 = phi i32 [ %65, %63 ], [ %53, %50 ], !dbg !4783
  call void @llvm.dbg.value(metadata i32 %68, metadata !4734, metadata !DIExpression()), !dbg !4783
  %69 = add nsw i32 %60, %51, !dbg !4831
  call void @llvm.dbg.value(metadata i32 %69, metadata !4731, metadata !DIExpression()), !dbg !4783
  %70 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !4832
  call void @llvm.dbg.value(metadata i8* %70, metadata !4733, metadata !DIExpression()), !dbg !4783
  %71 = add nuw nsw i32 %54, 1, !dbg !4833
  call void @llvm.dbg.value(metadata i32 %71, metadata !4735, metadata !DIExpression()), !dbg !4816
  %72 = icmp eq i32 %71, %21, !dbg !4834
  br i1 %72, label %79, label %50, !dbg !4817, !llvm.loop !4835

73:                                               ; preds = %47
  %74 = and i32 %4, 4
  %75 = icmp ne i32 %74, 0
  %76 = and i1 %75, %22, !dbg !4837
  %77 = select i1 %76, i32 %21, i32 0, !dbg !4837
  %78 = getelementptr i8, i8* %45, i32 %77, !dbg !4837
  br label %79, !dbg !4837

79:                                               ; preds = %67, %73
  %80 = phi i32 [ 0, %73 ], [ %68, %67 ], !dbg !4840
  %81 = phi i8* [ %78, %73 ], [ %70, %67 ], !dbg !4783
  %82 = phi i32 [ %18, %73 ], [ %69, %67 ], !dbg !4841
  call void @llvm.dbg.value(metadata i1 undef, metadata !4745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4842
  call void @llvm.dbg.value(metadata i32 0, metadata !4746, metadata !DIExpression()), !dbg !4843
  call void @llvm.dbg.value(metadata i32 %82, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8* %81, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %80, metadata !4734, metadata !DIExpression()), !dbg !4783
  %83 = icmp eq i8 %27, 0, !dbg !4844
  br i1 %83, label %267, label %84, !dbg !4845

84:                                               ; preds = %79
  %85 = and i32 %4, 5, !dbg !4846
  %86 = icmp eq i32 %85, 0, !dbg !4847
  call void @llvm.dbg.value(metadata i1 %86, metadata !4745, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4842
  %87 = icmp eq i32 %30, 0
  %88 = icmp eq i32 %23, 0
  %89 = icmp ne i16* %5, null
  %90 = select i1 %86, i32 -2, i32 -1
  br label %91, !dbg !4845

91:                                               ; preds = %84, %127
  %92 = phi i32 [ %82, %84 ], [ %129, %127 ]
  %93 = phi i8* [ %81, %84 ], [ %97, %127 ]
  %94 = phi i32 [ %80, %84 ], [ %128, %127 ]
  %95 = phi i32 [ 0, %84 ], [ %130, %127 ]
  call void @llvm.dbg.value(metadata i32 %92, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8* %93, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %94, metadata !4734, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %95, metadata !4746, metadata !DIExpression()), !dbg !4843
  %96 = getelementptr inbounds i8, i8* %93, i32 1, !dbg !4848
  call void @llvm.dbg.value(metadata i8* %96, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 undef, metadata !4748, metadata !DIExpression()), !dbg !4849
  %97 = getelementptr inbounds i8, i8* %93, i32 2, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %97, metadata !4733, metadata !DIExpression()), !dbg !4783
  %98 = load i8, i8* %96, align 1, !dbg !4851
  call void @llvm.dbg.value(metadata i8 %98, metadata !4751, metadata !DIExpression()), !dbg !4849
  %99 = zext i8 %98 to i32, !dbg !4852
  %100 = getelementptr inbounds i32, i32* %11, i32 %99, !dbg !4852
  %101 = bitcast i32* %100 to i8**, !dbg !4853
  %102 = load i8*, i8** %101, align 4, !dbg !4853
  call void @llvm.dbg.value(metadata i8* %102, metadata !4752, metadata !DIExpression()), !dbg !4849
  %103 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %102) #26, !dbg !4854
  call void @llvm.dbg.value(metadata i1 %103, metadata !4753, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4849
  br i1 %13, label %110, label %104, !dbg !4855

104:                                              ; preds = %91
  %105 = load i8, i8* %93, align 1, !dbg !4857
  call void @llvm.dbg.value(metadata i8 %105, metadata !4748, metadata !DIExpression()), !dbg !4849
  %106 = zext i8 %105 to i32, !dbg !4858
  %107 = tail call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %106) #26, !dbg !4859
  br i1 %107, label %108, label %110, !dbg !4860

108:                                              ; preds = %104
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.1.52, i32 0, i32 0), i32 noundef 87, i8* noundef %44, i32 noundef %106) #27, !dbg !4861
  %109 = add nsw i32 %92, -2, !dbg !4867
  call void @llvm.dbg.value(metadata i32 %109, metadata !4731, metadata !DIExpression()), !dbg !4783
  br label %127, !dbg !4868

110:                                              ; preds = %104, %91
  br i1 %103, label %111, label %114, !dbg !4869

111:                                              ; preds = %110
  br i1 %88, label %112, label %115, !dbg !4870

112:                                              ; preds = %111
  %113 = add i32 %92, %90, !dbg !4872
  call void @llvm.dbg.value(metadata i32 %113, metadata !4731, metadata !DIExpression()), !dbg !4783
  br label %127, !dbg !4875

114:                                              ; preds = %110
  br i1 %87, label %127, label %115, !dbg !4876

115:                                              ; preds = %114, %111
  call void @llvm.dbg.label(metadata !4779), !dbg !4877
  %116 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %102, i16 noundef zeroext 0) #26, !dbg !4878
  call void @llvm.dbg.value(metadata i32 %116, metadata !4754, metadata !DIExpression()), !dbg !4849
  %117 = icmp ult i32 %94, %6
  %118 = select i1 %89, i1 %117, i1 false, !dbg !4879
  br i1 %118, label %119, label %123, !dbg !4879

119:                                              ; preds = %115
  %120 = trunc i32 %116 to i16, !dbg !4881
  %121 = add nuw i32 %94, 1, !dbg !4883
  call void @llvm.dbg.value(metadata i32 %121, metadata !4734, metadata !DIExpression()), !dbg !4783
  %122 = getelementptr inbounds i16, i16* %5, i32 %94, !dbg !4884
  store i16 %120, i16* %122, align 2, !dbg !4885
  br label %123, !dbg !4886

123:                                              ; preds = %119, %115
  %124 = phi i32 [ %121, %119 ], [ %94, %115 ], !dbg !4783
  call void @llvm.dbg.value(metadata i32 %124, metadata !4734, metadata !DIExpression()), !dbg !4783
  %125 = add i32 %92, -1, !dbg !4887
  %126 = add i32 %125, %116, !dbg !4888
  call void @llvm.dbg.value(metadata i32 %126, metadata !4731, metadata !DIExpression()), !dbg !4783
  br label %127, !dbg !4889

127:                                              ; preds = %112, %123, %114, %108
  %128 = phi i32 [ %94, %108 ], [ %124, %123 ], [ %94, %112 ], [ %94, %114 ], !dbg !4783
  %129 = phi i32 [ %109, %108 ], [ %126, %123 ], [ %113, %112 ], [ %92, %114 ], !dbg !4849
  call void @llvm.dbg.value(metadata i32 %129, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %128, metadata !4734, metadata !DIExpression()), !dbg !4783
  %130 = add nuw nsw i32 %95, 1, !dbg !4890
  call void @llvm.dbg.value(metadata i8* %97, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %130, metadata !4746, metadata !DIExpression()), !dbg !4843
  %131 = icmp eq i32 %130, %28, !dbg !4844
  br i1 %131, label %267, label %91, !dbg !4845, !llvm.loop !4891

132:                                              ; preds = %38
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !4756, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !4757, metadata !DIExpression()), !dbg !4894
  br i1 %25, label %133, label %135, !dbg !4895

133:                                              ; preds = %132
  call void @llvm.dbg.value(metadata i8 %20, metadata !4758, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 0, metadata !4759, metadata !DIExpression()), !dbg !4783
  %134 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4896
  call void @llvm.dbg.value(metadata i8* %134, metadata !4760, metadata !DIExpression()), !dbg !4783
  br label %140, !dbg !4899

135:                                              ; preds = %132
  %136 = and i32 %4, 4
  %137 = icmp ne i32 %136, 0
  %138 = and i1 %137, %22, !dbg !4900
  %139 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %138, label %140, label %145, !dbg !4900

140:                                              ; preds = %133, %135
  %141 = phi i8 [ 0, %135 ], [ %20, %133 ]
  %142 = phi i8 [ %20, %135 ], [ 0, %133 ]
  %143 = phi i8* [ %139, %135 ], [ %134, %133 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !4760, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 undef, metadata !4759, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 0, metadata !4758, metadata !DIExpression()), !dbg !4783
  %144 = call i8* @memcpy(i8* noundef nonnull %143, i8* noundef nonnull %45, i32 noundef %21) #27, !dbg !4902
  br label %145, !dbg !4905

145:                                              ; preds = %135, %140
  %146 = phi i8 [ %142, %140 ], [ 0, %135 ]
  %147 = phi i8 [ %141, %140 ], [ 0, %135 ]
  %148 = getelementptr inbounds i8, i8* %45, i32 %21, !dbg !4906
  call void @llvm.dbg.value(metadata i8* %148, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 0, metadata !4762, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i8 %146, metadata !4759, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 %147, metadata !4758, metadata !DIExpression()), !dbg !4783
  %149 = icmp eq i8 %27, 0, !dbg !4908
  br i1 %149, label %150, label %152, !dbg !4909

150:                                              ; preds = %145
  %151 = and i32 %4, 4, !dbg !4910
  br label %157, !dbg !4909

152:                                              ; preds = %145
  %153 = icmp eq i32 %30, 0
  %154 = icmp eq i32 %23, 0
  %155 = and i32 %4, 4
  %156 = icmp eq i32 %155, 0
  br label %176, !dbg !4909

157:                                              ; preds = %215, %150
  %158 = phi i32 [ %151, %150 ], [ %155, %215 ], !dbg !4910
  %159 = phi i8 [ %147, %150 ], [ %216, %215 ], !dbg !4911
  %160 = phi i8 [ %146, %150 ], [ %217, %215 ], !dbg !4912
  %161 = phi i8* [ %148, %150 ], [ %183, %215 ], !dbg !4783
  call void @llvm.dbg.value(metadata i8 undef, metadata !4755, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !4783
  %162 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4913
  %163 = load i8, i8* %162, align 1, !dbg !4913
  %164 = zext i8 %159 to i32, !dbg !4914
  %165 = add i8 %163, %159, !dbg !4915
  call void @llvm.dbg.value(metadata i8 %165, metadata !4755, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !4783
  %166 = icmp eq i32 %30, 0, !dbg !4916
  %167 = lshr i8 %160, 1, !dbg !4917
  %168 = select i1 %166, i8 %167, i8 0, !dbg !4917
  call void @llvm.dbg.value(metadata i8 %168, metadata !4755, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !4783
  %169 = icmp eq i32 %23, 0, !dbg !4918
  %170 = icmp eq i32 %158, 0, !dbg !4910
  %171 = select i1 %170, i8 0, i8 %160, !dbg !4910
  %172 = select i1 %169, i8 %171, i8 0, !dbg !4910
  call void @llvm.dbg.value(metadata i8 %172, metadata !4755, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !4783
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !4770, metadata !DIExpression()), !dbg !4919
  %173 = load i32, i32* %11, align 1, !dbg !4920
  store i8 %165, i8* %162, align 1, !dbg !4921
  store i8 %172, i8* %19, align 1, !dbg !4921
  store i8 %168, i8* %26, align 1, !dbg !4921
  %174 = call i32 %2(i8* noundef nonnull %0, i32 noundef %41, i8* noundef %3) #27, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %174, metadata !4761, metadata !DIExpression()), !dbg !4783
  %175 = icmp slt i32 %174, 0, !dbg !4923
  br i1 %175, label %267, label %220, !dbg !4925

176:                                              ; preds = %152, %215
  %177 = phi i8* [ %148, %152 ], [ %183, %215 ]
  %178 = phi i32 [ 0, %152 ], [ %218, %215 ]
  %179 = phi i8 [ %146, %152 ], [ %217, %215 ]
  %180 = phi i8 [ %147, %152 ], [ %216, %215 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %178, metadata !4762, metadata !DIExpression()), !dbg !4907
  call void @llvm.dbg.value(metadata i8 %179, metadata !4759, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 %180, metadata !4758, metadata !DIExpression()), !dbg !4783
  %181 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4926
  call void @llvm.dbg.value(metadata i8* %181, metadata !4733, metadata !DIExpression()), !dbg !4783
  %182 = load i8, i8* %177, align 1, !dbg !4927
  call void @llvm.dbg.value(metadata i8 %182, metadata !4764, metadata !DIExpression()), !dbg !4928
  %183 = getelementptr inbounds i8, i8* %177, i32 2, !dbg !4929
  call void @llvm.dbg.value(metadata i8* %183, metadata !4733, metadata !DIExpression()), !dbg !4783
  %184 = load i8, i8* %181, align 1, !dbg !4930
  call void @llvm.dbg.value(metadata i8 %184, metadata !4767, metadata !DIExpression()), !dbg !4928
  %185 = zext i8 %184 to i32, !dbg !4931
  %186 = getelementptr inbounds i32, i32* %11, i32 %185, !dbg !4931
  %187 = bitcast i32* %186 to i8**, !dbg !4932
  %188 = load i8*, i8** %187, align 4, !dbg !4932
  call void @llvm.dbg.value(metadata i8* %188, metadata !4768, metadata !DIExpression()), !dbg !4928
  %189 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %188) #26, !dbg !4933
  call void @llvm.dbg.value(metadata i1 %189, metadata !4769, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4928
  br i1 %13, label %193, label %190, !dbg !4934

190:                                              ; preds = %176
  %191 = zext i8 %182 to i32, !dbg !4936
  %192 = call zeroext i1 @is_ptr(i8* noundef %44, i32 noundef %191) #26, !dbg !4937
  br i1 %192, label %215, label %193, !dbg !4938

193:                                              ; preds = %190, %176
  br i1 %189, label %194, label %200, !dbg !4939

194:                                              ; preds = %193
  br i1 %154, label %197, label %195, !dbg !4940

195:                                              ; preds = %194
  %196 = add i8 %180, 1, !dbg !4943
  call void @llvm.dbg.value(metadata i8 %196, metadata !4758, metadata !DIExpression()), !dbg !4783
  br label %208, !dbg !4946

197:                                              ; preds = %194
  br i1 %156, label %215, label %198, !dbg !4947

198:                                              ; preds = %197
  %199 = add i8 %179, 1, !dbg !4948
  call void @llvm.dbg.value(metadata i8 %199, metadata !4759, metadata !DIExpression()), !dbg !4783
  br label %208, !dbg !4951

200:                                              ; preds = %193
  br i1 %153, label %203, label %201, !dbg !4952

201:                                              ; preds = %200
  %202 = add i8 %180, 1, !dbg !4954
  call void @llvm.dbg.value(metadata i8 %202, metadata !4758, metadata !DIExpression()), !dbg !4783
  br label %208, !dbg !4957

203:                                              ; preds = %200
  %204 = add i8 %179, 1, !dbg !4958
  call void @llvm.dbg.value(metadata i8 %204, metadata !4759, metadata !DIExpression()), !dbg !4783
  %205 = zext i8 %179 to i32, !dbg !4960
  %206 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %205, !dbg !4960
  store i8 %182, i8* %206, align 1, !dbg !4961
  %207 = add i8 %179, 2, !dbg !4962
  call void @llvm.dbg.value(metadata i8 %207, metadata !4759, metadata !DIExpression()), !dbg !4783
  br label %208

208:                                              ; preds = %201, %203, %195, %198
  %209 = phi i8 [ %179, %198 ], [ %180, %195 ], [ %204, %203 ], [ %180, %201 ]
  %210 = phi [16 x i8]* [ %9, %198 ], [ %8, %195 ], [ %9, %203 ], [ %8, %201 ]
  %211 = phi i8 [ %180, %198 ], [ %196, %195 ], [ %180, %203 ], [ %202, %201 ]
  %212 = phi i8 [ %199, %198 ], [ %179, %195 ], [ %207, %203 ], [ %179, %201 ]
  %213 = zext i8 %209 to i32, !dbg !4963
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %210, i32 0, i32 %213, !dbg !4963
  store i8 %184, i8* %214, align 1, !dbg !4963
  br label %215, !dbg !4964

215:                                              ; preds = %208, %197, %190
  %216 = phi i8 [ %180, %190 ], [ %180, %197 ], [ %211, %208 ], !dbg !4783
  %217 = phi i8 [ %179, %190 ], [ %179, %197 ], [ %212, %208 ], !dbg !4912
  call void @llvm.dbg.value(metadata i8 %217, metadata !4759, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i8 %216, metadata !4758, metadata !DIExpression()), !dbg !4783
  %218 = add nuw nsw i32 %178, 1, !dbg !4964
  call void @llvm.dbg.value(metadata i8* %183, metadata !4733, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 %218, metadata !4762, metadata !DIExpression()), !dbg !4907
  %219 = icmp eq i32 %218, %28, !dbg !4908
  br i1 %219, label %157, label %176, !dbg !4909, !llvm.loop !4965

220:                                              ; preds = %157
  %221 = zext i8 %160 to i32, !dbg !4917
  call void @llvm.dbg.value(metadata i32 %174, metadata !4731, metadata !DIExpression()), !dbg !4783
  store i32 %173, i32* %11, align 1, !dbg !4967
  %222 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4968
  %223 = call i32 %2(i8* noundef nonnull %222, i32 noundef %221, i8* noundef %3) #27, !dbg !4969
  call void @llvm.dbg.value(metadata i32 %223, metadata !4761, metadata !DIExpression()), !dbg !4783
  %224 = icmp slt i32 %223, 0, !dbg !4970
  br i1 %224, label %267, label %225, !dbg !4972

225:                                              ; preds = %220
  call void @llvm.dbg.value(metadata !DIArgList(i32 %174, i32 %223), metadata !4731, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4783
  %226 = mul nsw i32 %28, -2
  %227 = add i32 %18, %226, !dbg !4973
  %228 = add nuw nsw i32 %41, %21, !dbg !4973
  %229 = sub i32 %227, %228, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %229, metadata !4771, metadata !DIExpression()), !dbg !4783
  %230 = call i32 %2(i8* noundef %161, i32 noundef %229, i8* noundef %3) #27, !dbg !4974
  call void @llvm.dbg.value(metadata i32 %230, metadata !4761, metadata !DIExpression()), !dbg !4783
  %231 = icmp slt i32 %230, 0, !dbg !4975
  br i1 %231, label %267, label %232, !dbg !4977

232:                                              ; preds = %225
  %233 = add nuw nsw i32 %223, %174, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %233, metadata !4731, metadata !DIExpression()), !dbg !4783
  %234 = add nuw nsw i32 %233, %230, !dbg !4979
  call void @llvm.dbg.value(metadata i32 %234, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.value(metadata i32 0, metadata !4772, metadata !DIExpression()), !dbg !4980
  %235 = icmp eq i8 %159, 0, !dbg !4981
  br i1 %235, label %264, label %236, !dbg !4982

236:                                              ; preds = %232
  %237 = icmp eq i16* %5, null
  br label %238, !dbg !4982

238:                                              ; preds = %236, %259
  %239 = phi i32 [ 0, %236 ], [ %262, %259 ]
  %240 = phi i32 [ %234, %236 ], [ %261, %259 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !4772, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.value(metadata i32 %240, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4983
  %241 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %239, !dbg !4984
  %242 = load i8, i8* %241, align 1, !dbg !4984
  call void @llvm.dbg.value(metadata i8 %242, metadata !4774, metadata !DIExpression()), !dbg !4985
  store i8 %242, i8* %10, align 1, !dbg !4986
  %243 = zext i8 %242 to i32, !dbg !4987
  %244 = getelementptr inbounds i32, i32* %11, i32 %243, !dbg !4987
  %245 = bitcast i32* %244 to i8**, !dbg !4988
  %246 = load i8*, i8** %245, align 4, !dbg !4988
  call void @llvm.dbg.value(metadata i8* %246, metadata !4777, metadata !DIExpression()), !dbg !4985
  br i1 %237, label %250, label %247, !dbg !4989

247:                                              ; preds = %238
  %248 = getelementptr inbounds i16, i16* %5, i32 %239, !dbg !4990
  %249 = load i16, i16* %248, align 2, !dbg !4990
  br label %250, !dbg !4989

250:                                              ; preds = %238, %247
  %251 = phi i16 [ %249, %247 ], [ 0, %238 ], !dbg !4989
  call void @llvm.dbg.value(metadata i32 undef, metadata !4778, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4985
  call void @llvm.dbg.value(metadata i8* %10, metadata !4774, metadata !DIExpression(DW_OP_deref)), !dbg !4985
  %252 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #27, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %252, metadata !4761, metadata !DIExpression()), !dbg !4783
  %253 = icmp slt i32 %252, 0, !dbg !4992
  br i1 %253, label %257, label %254, !dbg !4994

254:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i16 %251, metadata !4778, metadata !DIExpression()), !dbg !4985
  call void @llvm.dbg.value(metadata !DIArgList(i32 %240, i32 %252), metadata !4731, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4783
  %255 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %246, i16 noundef zeroext %251) #26, !dbg !4995
  call void @llvm.dbg.value(metadata i32 %255, metadata !4761, metadata !DIExpression()), !dbg !4783
  %256 = icmp slt i32 %255, 0, !dbg !4996
  br i1 %256, label %257, label %259, !dbg !4998

257:                                              ; preds = %254, %250
  %258 = phi i32 [ %255, %254 ], [ %252, %250 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4999
  call void @llvm.dbg.value(metadata i32 undef, metadata !4731, metadata !DIExpression()), !dbg !4783
  br label %267

259:                                              ; preds = %254
  %260 = add nsw i32 %252, %240, !dbg !5000
  call void @llvm.dbg.value(metadata i32 %260, metadata !4731, metadata !DIExpression()), !dbg !4783
  %261 = add nsw i32 %260, %255, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %261, metadata !4731, metadata !DIExpression()), !dbg !4783
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #25, !dbg !4999
  %262 = add nuw nsw i32 %239, 1, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %262, metadata !4772, metadata !DIExpression()), !dbg !4980
  %263 = icmp eq i32 %262, %164, !dbg !4981
  br i1 %263, label %264, label %238, !dbg !4982, !llvm.loop !5003

264:                                              ; preds = %259, %232
  %265 = phi i32 [ %234, %232 ], [ %261, %259 ], !dbg !4979
  call void @llvm.dbg.value(metadata i32 %265, metadata !4731, metadata !DIExpression()), !dbg !4783
  %266 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #27, !dbg !5005
  br label %267, !dbg !5006

267:                                              ; preds = %127, %79, %257, %264, %157, %220, %225, %34, %36
  %268 = phi i32 [ %18, %36 ], [ %18, %34 ], [ %265, %264 ], [ %174, %157 ], [ %223, %220 ], [ %230, %225 ], [ %258, %257 ], [ %82, %79 ], [ %129, %127 ], !dbg !4783
  ret i32 %268, !dbg !5007
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !5008 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5012, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i8* %0, metadata !5013, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i8* %0, metadata !5014, metadata !DIExpression()), !dbg !5020
  %2 = load i8, i8* %0, align 1, !dbg !5021
  %3 = zext i8 %2 to i32, !dbg !5021
  %4 = shl nuw nsw i32 %3, 2, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %4, metadata !5015, metadata !DIExpression()), !dbg !5020
  %5 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !5023
  %6 = load i8, i8* %5, align 1, !dbg !5023
  %7 = zext i8 %6 to i32, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %7, metadata !5016, metadata !DIExpression()), !dbg !5020
  %8 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !5024
  %9 = load i8, i8* %8, align 1, !dbg !5024
  %10 = zext i8 %9 to i32, !dbg !5024
  call void @llvm.dbg.value(metadata i32 %10, metadata !5017, metadata !DIExpression()), !dbg !5020
  %11 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !5025
  call void @llvm.dbg.value(metadata i8* %11, metadata !5013, metadata !DIExpression()), !dbg !5020
  %12 = getelementptr inbounds i8, i8* %11, i32 %10, !dbg !5026
  call void @llvm.dbg.value(metadata i8* %12, metadata !5013, metadata !DIExpression()), !dbg !5020
  call void @llvm.dbg.value(metadata i32 0, metadata !5018, metadata !DIExpression()), !dbg !5027
  %13 = icmp eq i8 %6, 0, !dbg !5028
  br i1 %13, label %14, label %19, !dbg !5030

14:                                               ; preds = %19, %1
  %15 = phi i8* [ %12, %1 ], [ %25, %19 ], !dbg !5020
  %16 = ptrtoint i8* %15 to i32, !dbg !5031
  %17 = ptrtoint i8* %0 to i32, !dbg !5031
  %18 = sub i32 %16, %17, !dbg !5031
  ret i32 %18, !dbg !5032

19:                                               ; preds = %1, %19
  %20 = phi i32 [ %26, %19 ], [ 0, %1 ]
  %21 = phi i8* [ %25, %19 ], [ %12, %1 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !5018, metadata !DIExpression()), !dbg !5027
  call void @llvm.dbg.value(metadata i8* %21, metadata !5013, metadata !DIExpression()), !dbg !5020
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !5033
  call void @llvm.dbg.value(metadata i8* %22, metadata !5013, metadata !DIExpression()), !dbg !5020
  %23 = tail call i32 @strlen(i8* noundef nonnull %22) #27, !dbg !5035
  %24 = add i32 %23, 1, !dbg !5036
  %25 = getelementptr inbounds i8, i8* %22, i32 %24, !dbg !5037
  call void @llvm.dbg.value(metadata i8* %25, metadata !5013, metadata !DIExpression()), !dbg !5020
  %26 = add nuw nsw i32 %20, 1, !dbg !5038
  call void @llvm.dbg.value(metadata i32 %26, metadata !5018, metadata !DIExpression()), !dbg !5027
  %27 = icmp eq i32 %26, %7, !dbg !5028
  br i1 %27, label %14, label %19, !dbg !5030, !llvm.loop !5039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !5041 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !5045, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i8* %1, metadata !5046, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i8* %2, metadata !5047, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i16 %3, metadata !5048, metadata !DIExpression()), !dbg !5049
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !5050
  br i1 %5, label %6, label %9, !dbg !5052

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5053
  %8 = add i32 %7, 1, !dbg !5055
  br label %20, !dbg !5056

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !5057
  br i1 %10, label %13, label %11, !dbg !5058

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !5058
  br label %16, !dbg !5058

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #27, !dbg !5059
  %15 = add i32 %14, 1, !dbg !5060
  br label %16, !dbg !5058

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !5058
  %18 = and i32 %17, 65535, !dbg !5061
  call void @llvm.dbg.value(metadata i32 %17, metadata !5048, metadata !DIExpression()), !dbg !5049
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #27, !dbg !5062
  br label %20, !dbg !5063

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !5049
  ret i32 %21, !dbg !5064
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !5065 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5067, metadata !DIExpression()), !dbg !5068
  ret i32 0, !dbg !5069
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !5070 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !5074, metadata !DIExpression()), !dbg !5075
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !5076
  ret void, !dbg !5077
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #10 !dbg !5078 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !5081
  ret i8* %1, !dbg !5082
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !5083 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5094, metadata !DIExpression()), !dbg !5105
  call void @llvm.dbg.value(metadata i8* %0, metadata !5093, metadata !DIExpression()), !dbg !5105
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #26, !dbg !5106
  ret void, !dbg !5108
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !5109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5113, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i8* %1, metadata !5114, metadata !DIExpression()), !dbg !5115
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5116
  %4 = tail call i32 %3(i32 noundef %0) #27, !dbg !5116
  ret i32 %4, !dbg !5117
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !5118 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !5125, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5122, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i8* %1, metadata !5123, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.value(metadata i8* %2, metadata !5124, metadata !DIExpression()), !dbg !5126
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #27, !dbg !5127
  ret void, !dbg !5128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5133, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 %1, metadata !5134, metadata !DIExpression()), !dbg !5136
  call void @llvm.dbg.value(metadata i32 0, metadata !5135, metadata !DIExpression()), !dbg !5136
  %3 = icmp eq i32 %1, 0, !dbg !5137
  br i1 %3, label %13, label %4, !dbg !5140

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5135, metadata !DIExpression()), !dbg !5136
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !5141
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !5143
  %8 = load i8, i8* %7, align 1, !dbg !5143
  %9 = zext i8 %8 to i32, !dbg !5143
  %10 = tail call i32 %6(i32 noundef %9) #27, !dbg !5141
  %11 = add nuw i32 %5, 1, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %11, metadata !5135, metadata !DIExpression()), !dbg !5136
  %12 = icmp eq i32 %11, %1, !dbg !5137
  br i1 %12, label %13, label %4, !dbg !5140, !llvm.loop !5145

13:                                               ; preds = %4, %2
  ret void, !dbg !5147
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5148 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5152, metadata !DIExpression()), !dbg !5154
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !5155
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5155
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !5153, metadata !DIExpression()), !dbg !5156
  call void @llvm.va_start(i8* nonnull %3), !dbg !5157
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !5158
  %5 = load i32, i32* %4, align 4, !dbg !5158
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5158
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #26, !dbg !5158
  call void @llvm.va_end(i8* nonnull %3), !dbg !5159
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !5160
  ret void, !dbg !5160
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !5161 {
  %4 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5165, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i32 %1, metadata !5166, metadata !DIExpression()), !dbg !5170
  call void @llvm.dbg.value(metadata i8* %2, metadata !5167, metadata !DIExpression()), !dbg !5170
  %5 = bitcast %union.anon.4* %4 to i8*, !dbg !5171
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5171
  call void @llvm.dbg.declare(metadata %union.anon.4* %4, metadata !5168, metadata !DIExpression()), !dbg !5172
  call void @llvm.va_start(i8* nonnull %5), !dbg !5173
  %6 = bitcast %union.anon.4* %4 to i32*, !dbg !5174
  %7 = load i32, i32* %6, align 4, !dbg !5174
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !5174
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #26, !dbg !5174
  call void @llvm.dbg.value(metadata i32 %9, metadata !5169, metadata !DIExpression()), !dbg !5170
  call void @llvm.va_end(i8* nonnull %5), !dbg !5175
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !5176
  ret i32 %9, !dbg !5177
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !5178 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5185, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i8* %0, metadata !5182, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i32 %1, metadata !5183, metadata !DIExpression()), !dbg !5192
  call void @llvm.dbg.value(metadata i8* %2, metadata !5184, metadata !DIExpression()), !dbg !5192
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !5193
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5193
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !5186, metadata !DIExpression()), !dbg !5194
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !5195
  store i8* %0, i8** %7, align 4, !dbg !5195
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !5195
  store i32 %1, i32* %8, align 4, !dbg !5195
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !5195
  store i32 0, i32* %9, align 4, !dbg !5195
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #26, !dbg !5196
  %10 = load i32, i32* %9, align 4, !dbg !5197
  %11 = load i32, i32* %8, align 4, !dbg !5199
  %12 = icmp slt i32 %10, %11, !dbg !5200
  br i1 %12, label %13, label %15, !dbg !5201

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !5202
  store i8 0, i8* %14, align 1, !dbg !5204
  br label %15, !dbg !5205

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #25, !dbg !5206
  ret i32 %10, !dbg !5207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #11 !dbg !5208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5213, metadata !DIExpression()), !dbg !5215
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !5214, metadata !DIExpression()), !dbg !5215
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !5216
  %4 = load i8*, i8** %3, align 4, !dbg !5216
  %5 = icmp eq i8* %4, null, !dbg !5218
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !5219
  br i1 %5, label %12, label %8, !dbg !5220

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !5221
  %10 = load i32, i32* %9, align 4, !dbg !5221
  %11 = icmp slt i32 %7, %10, !dbg !5222
  br i1 %11, label %15, label %12, !dbg !5223

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !5224
  %14 = add nsw i32 %7, 1, !dbg !5226
  store i32 %14, i32* %13, align 4, !dbg !5226
  br label %25, !dbg !5227

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !5228
  %17 = icmp eq i32 %7, %16, !dbg !5230
  br i1 %17, label %18, label %21, !dbg !5231

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !5232
  store i32 %19, i32* %6, align 4, !dbg !5232
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5234
  store i8 0, i8* %20, align 1, !dbg !5235
  br label %25, !dbg !5236

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !5237
  %23 = add nsw i32 %7, 1, !dbg !5239
  store i32 %23, i32* %6, align 4, !dbg !5239
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !5240
  store i8 %22, i8* %24, align 1, !dbg !5241
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !5242
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #12 !dbg !5243 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !5253, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %1, metadata !5254, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %2, metadata !5255, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i8* %3, metadata !5256, metadata !DIExpression()), !dbg !5257
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !5258
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #28, !dbg !5259
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #26, !dbg !5260
  unreachable, !dbg !5261
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #13 !dbg !5262 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #28, !dbg !5366
  ret %struct.k_thread* %1, !dbg !5367
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !5368 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !5373, metadata !DIExpression()), !dbg !5374
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5375, !srcloc !5377
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !5378
  ret void, !dbg !5379
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #13 !dbg !5380 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !5381, !srcloc !5383
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !5384
  ret %struct.k_thread* %1, !dbg !5385
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !5386 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !5399, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5396, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8* %1, metadata !5397, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8* %2, metadata !5398, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %4, metadata !5400, metadata !DIExpression()), !dbg !5525
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !5526
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5526
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !5401, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata i32 0, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i1 undef, metadata !5407, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5525
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !5528

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !5528

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !5529
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !5399, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8* %30, metadata !5398, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %29, metadata !5405, metadata !DIExpression()), !dbg !5525
  %31 = load i8, i8* %30, align 1, !dbg !5530
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !5528

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !5530
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !5531
  call void @llvm.dbg.value(metadata i8* %34, metadata !5398, metadata !DIExpression()), !dbg !5525
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #27, !dbg !5531
  call void @llvm.dbg.value(metadata i32 %35, metadata !5409, metadata !DIExpression()), !dbg !5532
  %36 = icmp slt i32 %35, 0, !dbg !5533
  %37 = add i32 %29, 1, !dbg !5531
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %36, label %365, label %28, !llvm.loop !5535

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5537
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !5414, metadata !DIExpression()), !dbg !5538
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !5538
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !5457, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !5460, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8* %30, metadata !5463, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i32 -1, metadata !5464, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i32 -1, metadata !5465, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8* null, metadata !5466, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8* %14, metadata !5467, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8 0, metadata !5468, metadata !DIExpression()), !dbg !5539
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #26, !dbg !5540
  call void @llvm.dbg.value(metadata i8* %39, metadata !5398, metadata !DIExpression()), !dbg !5525
  %40 = load i24, i24* %15, align 8, !dbg !5541
  %41 = and i24 %40, 256, !dbg !5541
  %42 = icmp eq i24 %41, 0, !dbg !5541
  br i1 %42, label %51, label %43, !dbg !5543

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !5544
  call void @llvm.dbg.value(metadata i8* %44, metadata !5399, metadata !DIExpression()), !dbg !5525
  %45 = bitcast i8* %27 to i32*, !dbg !5544
  %46 = load i32, i32* %45, align 4, !dbg !5544
  call void @llvm.dbg.value(metadata i32 %46, metadata !5464, metadata !DIExpression()), !dbg !5539
  %47 = icmp slt i32 %46, 0, !dbg !5546
  br i1 %47, label %48, label %56, !dbg !5548

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !5549
  store i24 %49, i24* %15, align 8, !dbg !5549
  %50 = sub nsw i32 0, %46, !dbg !5551
  call void @llvm.dbg.value(metadata i32 %50, metadata !5464, metadata !DIExpression()), !dbg !5539
  br label %56, !dbg !5552

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !5553
  %53 = icmp eq i24 %52, 0, !dbg !5553
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !5555
  br label %56, !dbg !5555

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !5556
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !5539
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !5399, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %58, metadata !5464, metadata !DIExpression()), !dbg !5539
  %60 = and i24 %57, 1024, !dbg !5556
  %61 = icmp eq i24 %60, 0, !dbg !5556
  br i1 %61, label %69, label %62, !dbg !5557

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !5558
  call void @llvm.dbg.value(metadata i8* %63, metadata !5399, metadata !DIExpression()), !dbg !5525
  %64 = bitcast i8* %59 to i32*, !dbg !5558
  %65 = load i32, i32* %64, align 4, !dbg !5558
  call void @llvm.dbg.value(metadata i32 %65, metadata !5469, metadata !DIExpression()), !dbg !5559
  %66 = icmp slt i32 %65, 0, !dbg !5560
  br i1 %66, label %67, label %74, !dbg !5562

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !5563
  store i24 %68, i24* %15, align 8, !dbg !5563
  br label %74, !dbg !5565

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !5566
  %71 = icmp eq i24 %70, 0, !dbg !5566
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !5568
  br label %74, !dbg !5568

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !5569
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !5539
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !5539
  call void @llvm.dbg.value(metadata i8* %77, metadata !5399, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %76, metadata !5465, metadata !DIExpression()), !dbg !5539
  store i32 0, i32* %16, align 4, !dbg !5570
  store i32 0, i32* %17, align 8, !dbg !5571
  %78 = lshr i24 %75, 16, !dbg !5569
  call void @llvm.dbg.value(metadata i24 %78, metadata !5472, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5539
  %79 = lshr i24 %75, 11, !dbg !5572
  %80 = and i24 %79, 15, !dbg !5572
  %81 = zext i24 %80 to i32, !dbg !5572
  call void @llvm.dbg.value(metadata i32 %81, metadata !5473, metadata !DIExpression()), !dbg !5539
  %82 = trunc i24 %78 to i3, !dbg !5573
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !5573

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !5574

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5577
  call void @llvm.dbg.value(metadata i8* %85, metadata !5399, metadata !DIExpression()), !dbg !5525
  %86 = bitcast i8* %77 to i32*, !dbg !5577
  %87 = load i32, i32* %86, align 4, !dbg !5577
  %88 = sext i32 %87 to i64, !dbg !5577
  store i64 %88, i64* %20, align 8, !dbg !5579
  br label %115, !dbg !5580

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5581
  call void @llvm.dbg.value(metadata i8* %90, metadata !5399, metadata !DIExpression()), !dbg !5525
  %91 = bitcast i8* %77 to i32*, !dbg !5581
  %92 = load i32, i32* %91, align 4, !dbg !5581
  %93 = sext i32 %92 to i64, !dbg !5581
  store i64 %93, i64* %20, align 8, !dbg !5584
  br label %115, !dbg !5585

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !5586
  %96 = add i32 %95, 7, !dbg !5586
  %97 = and i32 %96, -8, !dbg !5586
  %98 = inttoptr i32 %97 to i8*, !dbg !5586
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !5586
  call void @llvm.dbg.value(metadata i8* %99, metadata !5399, metadata !DIExpression()), !dbg !5525
  %100 = inttoptr i32 %97 to i64*, !dbg !5586
  %101 = load i64, i64* %100, align 8, !dbg !5586
  store i64 %101, i64* %20, align 8, !dbg !5587
  br label %115, !dbg !5588

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !5589
  %104 = add i32 %103, 7, !dbg !5589
  %105 = and i32 %104, -8, !dbg !5589
  %106 = inttoptr i32 %105 to i8*, !dbg !5589
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !5589
  call void @llvm.dbg.value(metadata i8* %107, metadata !5399, metadata !DIExpression()), !dbg !5525
  %108 = inttoptr i32 %105 to i64*, !dbg !5589
  %109 = load i64, i64* %108, align 8, !dbg !5589
  store i64 %109, i64* %20, align 8, !dbg !5590
  br label %115, !dbg !5591

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5592
  call void @llvm.dbg.value(metadata i8* %111, metadata !5399, metadata !DIExpression()), !dbg !5525
  %112 = bitcast i8* %77 to i32*, !dbg !5592
  %113 = load i32, i32* %112, align 4, !dbg !5592
  %114 = sext i32 %113 to i64, !dbg !5593
  store i64 %114, i64* %20, align 8, !dbg !5594
  br label %115, !dbg !5595

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !5596
  call void @llvm.dbg.value(metadata i8* %117, metadata !5399, metadata !DIExpression()), !dbg !5525
  %118 = trunc i24 %79 to i4, !dbg !5597
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !5597

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !5598
  %121 = ashr exact i64 %120, 56, !dbg !5598
  store i64 %121, i64* %20, align 8, !dbg !5601
  br label %177, !dbg !5602

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !5603
  %124 = ashr exact i64 %123, 48, !dbg !5603
  store i64 %124, i64* %20, align 8, !dbg !5606
  br label %177, !dbg !5607

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !5608

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5611
  call void @llvm.dbg.value(metadata i8* %127, metadata !5399, metadata !DIExpression()), !dbg !5525
  %128 = bitcast i8* %77 to i32*, !dbg !5611
  %129 = load i32, i32* %128, align 4, !dbg !5611
  %130 = zext i32 %129 to i64, !dbg !5611
  store i64 %130, i64* %20, align 8, !dbg !5613
  br label %157, !dbg !5614

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5615
  call void @llvm.dbg.value(metadata i8* %132, metadata !5399, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8* %132, metadata !5399, metadata !DIExpression()), !dbg !5525
  %133 = bitcast i8* %77 to i32*, !dbg !5615
  %134 = load i32, i32* %133, align 4, !dbg !5615
  %135 = zext i32 %134 to i64, !dbg !5615
  store i64 %135, i64* %20, align 8, !dbg !5615
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !5617
  %138 = add i32 %137, 7, !dbg !5617
  %139 = and i32 %138, -8, !dbg !5617
  %140 = inttoptr i32 %139 to i8*, !dbg !5617
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !5617
  call void @llvm.dbg.value(metadata i8* %141, metadata !5399, metadata !DIExpression()), !dbg !5525
  %142 = inttoptr i32 %139 to i64*, !dbg !5617
  %143 = load i64, i64* %142, align 8, !dbg !5617
  store i64 %143, i64* %20, align 8, !dbg !5618
  br label %157, !dbg !5619

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !5620
  %146 = add i32 %145, 7, !dbg !5620
  %147 = and i32 %146, -8, !dbg !5620
  %148 = inttoptr i32 %147 to i8*, !dbg !5620
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !5620
  call void @llvm.dbg.value(metadata i8* %149, metadata !5399, metadata !DIExpression()), !dbg !5525
  %150 = inttoptr i32 %147 to i64*, !dbg !5620
  %151 = load i64, i64* %150, align 8, !dbg !5620
  store i64 %151, i64* %20, align 8, !dbg !5621
  br label %157, !dbg !5622

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5623
  call void @llvm.dbg.value(metadata i8* %153, metadata !5399, metadata !DIExpression()), !dbg !5525
  %154 = bitcast i8* %77 to i32*, !dbg !5623
  %155 = load i32, i32* %154, align 4, !dbg !5623
  %156 = zext i32 %155 to i64, !dbg !5624
  store i64 %156, i64* %20, align 8, !dbg !5625
  br label %157, !dbg !5626

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !5627
  call void @llvm.dbg.value(metadata i8* %159, metadata !5399, metadata !DIExpression()), !dbg !5525
  %160 = trunc i24 %79 to i4, !dbg !5628
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !5628

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !5629
  store i64 %162, i64* %20, align 8, !dbg !5632
  br label %177, !dbg !5633

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !5634
  store i64 %164, i64* %20, align 8, !dbg !5637
  br label %177, !dbg !5638

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !5639
  %167 = add i32 %166, 7, !dbg !5639
  %168 = and i32 %167, -8, !dbg !5639
  %169 = inttoptr i32 %168 to i8*, !dbg !5639
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !5639
  call void @llvm.dbg.value(metadata i8* %170, metadata !5399, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8* %170, metadata !5399, metadata !DIExpression()), !dbg !5525
  %171 = inttoptr i32 %168 to double*, !dbg !5639
  %172 = load double, double* %171, align 8, !dbg !5639
  store double %172, double* %19, align 8, !dbg !5639
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !5643
  call void @llvm.dbg.value(metadata i8* %174, metadata !5399, metadata !DIExpression()), !dbg !5525
  %175 = bitcast i8* %77 to i8**, !dbg !5643
  %176 = load i8*, i8** %175, align 4, !dbg !5643
  store i8* %176, i8** %18, align 8, !dbg !5646
  br label %177, !dbg !5647

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !5539
  call void @llvm.dbg.value(metadata i8* %178, metadata !5399, metadata !DIExpression()), !dbg !5525
  %179 = and i24 %75, 3, !dbg !5648
  %180 = icmp eq i24 %179, 0, !dbg !5648
  br i1 %180, label %185, label %181, !dbg !5648

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #26, !dbg !5649
  call void @llvm.dbg.value(metadata i32 %182, metadata !5474, metadata !DIExpression()), !dbg !5650
  %183 = icmp slt i32 %182, 0, !dbg !5651
  %184 = add i32 %182, %29, !dbg !5649
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !5653
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !5654

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #27, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %188, metadata !5478, metadata !DIExpression()), !dbg !5656
  %189 = icmp slt i32 %188, 0, !dbg !5657
  %190 = add i32 %29, 1, !dbg !5655
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !5659
  call void @llvm.dbg.value(metadata i8* %192, metadata !5466, metadata !DIExpression()), !dbg !5539
  %193 = icmp sgt i32 %76, -1, !dbg !5660
  br i1 %193, label %194, label %196, !dbg !5662

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #27, !dbg !5663
  call void @llvm.dbg.value(metadata i32 %195, metadata !5481, metadata !DIExpression()), !dbg !5665
  br label %241, !dbg !5666

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #27, !dbg !5667
  call void @llvm.dbg.value(metadata i32 %197, metadata !5481, metadata !DIExpression()), !dbg !5665
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !5466, metadata !DIExpression()), !dbg !5539
  %199 = load i64, i64* %20, align 8, !dbg !5669
  %200 = trunc i64 %199 to i8, !dbg !5670
  store i8 %200, i8* %10, align 1, !dbg !5671
  call void @llvm.dbg.value(metadata i8* %23, metadata !5467, metadata !DIExpression()), !dbg !5539
  br label %245, !dbg !5672

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !5673
  %203 = icmp eq i24 %202, 0, !dbg !5673
  %204 = trunc i24 %75 to i8, !dbg !5675
  %205 = shl i8 %204, 1, !dbg !5675
  %206 = and i8 %205, 32, !dbg !5675
  %207 = select i1 %203, i8 %206, i8 43, !dbg !5675
  call void @llvm.dbg.value(metadata i8 %207, metadata !5468, metadata !DIExpression()), !dbg !5539
  %208 = load i64, i64* %20, align 8, !dbg !5676
  call void @llvm.dbg.value(metadata i64 %208, metadata !5406, metadata !DIExpression()), !dbg !5525
  %209 = icmp slt i64 %208, 0, !dbg !5677
  br i1 %209, label %210, label %212, !dbg !5679

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !5468, metadata !DIExpression()), !dbg !5539
  %211 = sub nsw i64 0, %208, !dbg !5680
  store i64 %211, i64* %20, align 8, !dbg !5682
  br label %212, !dbg !5683

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !5539
  call void @llvm.dbg.value(metadata i8 %213, metadata !5468, metadata !DIExpression()), !dbg !5539
  %214 = load i64, i64* %20, align 8, !dbg !5684
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5685
  call void @llvm.dbg.value(metadata i8* %215, metadata !5466, metadata !DIExpression()), !dbg !5539
  br label %216, !dbg !5686

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !5687
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !5688
  call void @llvm.dbg.value(metadata i8* %218, metadata !5466, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8 %217, metadata !5468, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.label(metadata !5524), !dbg !5689
  %219 = icmp sgt i32 %76, -1, !dbg !5690
  br i1 %219, label %222, label %220, !dbg !5691

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !5692
  br label %245, !dbg !5691

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !5694
  %224 = sub i32 %22, %223, !dbg !5694
  call void @llvm.dbg.value(metadata i32 %224, metadata !5483, metadata !DIExpression()), !dbg !5695
  %225 = load i24, i24* %15, align 8, !dbg !5696
  %226 = and i24 %225, -65, !dbg !5696
  store i24 %226, i24* %15, align 8, !dbg !5696
  %227 = icmp ugt i32 %76, %224, !dbg !5697
  br i1 %227, label %228, label %245, !dbg !5699

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !5700
  store i32 %229, i32* %16, align 4, !dbg !5702
  br label %245, !dbg !5703

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !5704
  %232 = icmp eq i8* %231, null, !dbg !5706
  br i1 %232, label %245, label %233, !dbg !5707

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !5708
  %235 = zext i32 %234 to i64, !dbg !5708
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #26, !dbg !5710
  call void @llvm.dbg.value(metadata i8* %236, metadata !5466, metadata !DIExpression()), !dbg !5539
  %237 = load i24, i24* %15, align 8, !dbg !5711
  %238 = or i24 %237, 1048576, !dbg !5711
  store i24 %238, i24* %15, align 8, !dbg !5711
  store i8 120, i8* %21, align 1, !dbg !5712
  br label %216, !dbg !5713

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !5714
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #26, !dbg !5717
  br label %363, !dbg !5718

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !5719
  call void @llvm.dbg.value(metadata i32 %242, metadata !5481, metadata !DIExpression()), !dbg !5665
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !5720
  call void @llvm.dbg.value(metadata i32 -1, metadata !5465, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i32 %29, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8* %192, metadata !5466, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8* %243, metadata !5467, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8 0, metadata !5468, metadata !DIExpression()), !dbg !5539
  %244 = icmp eq i8* %192, null, !dbg !5721
  br i1 %244, label %363, label %245, !dbg !5723, !llvm.loop !5535

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !5692
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5539
  call void @llvm.dbg.value(metadata i32 0, metadata !5487, metadata !DIExpression()), !dbg !5539
  %250 = zext i8 %249 to i32, !dbg !5724
  %251 = icmp eq i8 %249, 0, !dbg !5726
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  call void @llvm.dbg.value(metadata i32 undef, metadata !5486, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  call void @llvm.dbg.value(metadata i32 undef, metadata !5486, metadata !DIExpression()), !dbg !5539
  %252 = icmp sgt i32 %58, 0, !dbg !5727
  br i1 %252, label %253, label %302, !dbg !5728

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !5692
  %255 = icmp eq i24 %254, 0, !dbg !5692
  %256 = ptrtoint i8* %248 to i32, !dbg !5729
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  %257 = ptrtoint i8* %247 to i32, !dbg !5729
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  %258 = xor i1 %251, true, !dbg !5730
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  %259 = sext i1 %258 to i32, !dbg !5730
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  %260 = lshr i24 %246, 19, !dbg !5731
  %261 = and i24 %260, 1, !dbg !5731
  %262 = select i1 %255, i24 %261, i24 2, !dbg !5731
  %263 = zext i24 %262 to i32, !dbg !5731
  %264 = add i32 %257, %259, !dbg !5731
  %265 = add i32 %256, %263, !dbg !5731
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  %266 = and i24 %246, 4194304, !dbg !5732
  %267 = icmp eq i24 %266, 0, !dbg !5732
  %268 = load i32, i32* %16, align 4, !dbg !5734
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !5486, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !5539
  call void @llvm.dbg.value(metadata i32 undef, metadata !5486, metadata !DIExpression()), !dbg !5539
  %269 = load i32, i32* %17, align 8, !dbg !5735
  %270 = select i1 %267, i32 0, i32 %269, !dbg !5735
  call void @llvm.dbg.value(metadata i32 undef, metadata !5486, metadata !DIExpression()), !dbg !5539
  %271 = add i32 %264, %58, !dbg !5735
  %272 = add i32 %265, %268, !dbg !5735
  %273 = add i32 %272, %270, !dbg !5736
  %274 = sub i32 %271, %273, !dbg !5736
  call void @llvm.dbg.value(metadata i32 %274, metadata !5464, metadata !DIExpression()), !dbg !5539
  %275 = and i24 %246, 4, !dbg !5737
  %276 = icmp eq i24 %275, 0, !dbg !5737
  br i1 %276, label %277, label %302, !dbg !5738

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !5488, metadata !DIExpression()), !dbg !5739
  %278 = and i24 %246, 64, !dbg !5740
  %279 = icmp eq i24 %278, 0, !dbg !5740
  %280 = select i1 %279, i1 true, i1 %251, !dbg !5741
  %281 = select i1 %279, i8 %249, i8 0, !dbg !5741
  %282 = select i1 %279, i32 32, i32 48, !dbg !5741
  br i1 %280, label %287, label %283, !dbg !5741

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #27, !dbg !5742
  call void @llvm.dbg.value(metadata i32 %284, metadata !5493, metadata !DIExpression()), !dbg !5743
  %285 = icmp slt i32 %284, 0, !dbg !5744
  %286 = add i32 %29, 1, !dbg !5742
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !5539
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !5529
  call void @llvm.dbg.value(metadata i32 %290, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i8 undef, metadata !5488, metadata !DIExpression()), !dbg !5739
  call void @llvm.dbg.value(metadata i8 %288, metadata !5468, metadata !DIExpression()), !dbg !5539
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !5746
  %292 = add i32 %291, -1, !dbg !5746
  br label %293, !dbg !5746

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !5747
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !5529
  call void @llvm.dbg.value(metadata i32 %295, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %294, metadata !5464, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i32 %294, metadata !5464, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5539
  %296 = icmp sgt i32 %294, 0, !dbg !5748
  br i1 %296, label %297, label %302, !dbg !5746

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !5749
  call void @llvm.dbg.value(metadata i32 %298, metadata !5464, metadata !DIExpression()), !dbg !5539
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #27, !dbg !5750
  call void @llvm.dbg.value(metadata i32 %299, metadata !5499, metadata !DIExpression()), !dbg !5751
  %300 = icmp slt i32 %299, 0, !dbg !5752
  %301 = add i32 %295, 1, !dbg !5750
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %300, label %361, label %293, !llvm.loop !5754

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !5539
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !5539
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !5529
  call void @llvm.dbg.value(metadata i32 %305, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %304, metadata !5464, metadata !DIExpression()), !dbg !5539
  call void @llvm.dbg.value(metadata i8 %303, metadata !5468, metadata !DIExpression()), !dbg !5539
  %306 = icmp eq i8 %303, 0, !dbg !5756
  br i1 %306, label %312, label %307, !dbg !5757

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !5758
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #27, !dbg !5759
  call void @llvm.dbg.value(metadata i32 %309, metadata !5502, metadata !DIExpression()), !dbg !5760
  %310 = icmp slt i32 %309, 0, !dbg !5761
  %311 = add i32 %305, 1, !dbg !5759
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !5529
  call void @llvm.dbg.value(metadata i32 %313, metadata !5405, metadata !DIExpression()), !dbg !5525
  %314 = lshr i24 %246, 20, !dbg !5763
  %315 = lshr i24 %246, 19, !dbg !5764
  %316 = or i24 %314, %315, !dbg !5765
  %317 = and i24 %316, 1, !dbg !5765
  %318 = icmp eq i24 %317, 0, !dbg !5765
  br i1 %318, label %323, label %319, !dbg !5766

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5767
  call void @llvm.dbg.value(metadata i32 %320, metadata !5506, metadata !DIExpression()), !dbg !5768
  %321 = icmp slt i32 %320, 0, !dbg !5769
  %322 = add i32 %313, 1, !dbg !5767
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !5529
  call void @llvm.dbg.value(metadata i32 %324, metadata !5405, metadata !DIExpression()), !dbg !5525
  %325 = and i24 %246, 1048576, !dbg !5771
  %326 = icmp eq i24 %325, 0, !dbg !5771
  br i1 %326, label %333, label %327, !dbg !5772

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5773
  %329 = zext i8 %328 to i32, !dbg !5773
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #27, !dbg !5773
  call void @llvm.dbg.value(metadata i32 %330, metadata !5512, metadata !DIExpression()), !dbg !5774
  %331 = icmp slt i32 %330, 0, !dbg !5775
  %332 = add i32 %324, 1, !dbg !5773
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !5529
  call void @llvm.dbg.value(metadata i32 %334, metadata !5405, metadata !DIExpression()), !dbg !5525
  %335 = load i32, i32* %16, align 4, !dbg !5777
  call void @llvm.dbg.value(metadata i32 %335, metadata !5487, metadata !DIExpression()), !dbg !5539
  br label %336, !dbg !5778

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5779
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !5529
  call void @llvm.dbg.value(metadata i32 %338, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %337, metadata !5487, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5539
  %339 = icmp sgt i32 %337, 0, !dbg !5780
  br i1 %339, label %340, label %345, !dbg !5778

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5781
  call void @llvm.dbg.value(metadata i32 %341, metadata !5487, metadata !DIExpression()), !dbg !5539
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #27, !dbg !5782
  call void @llvm.dbg.value(metadata i32 %342, metadata !5516, metadata !DIExpression()), !dbg !5783
  %343 = icmp slt i32 %342, 0, !dbg !5784
  %344 = add i32 %338, 1, !dbg !5782
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %343, label %361, label %336, !llvm.loop !5786

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #26, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %346, metadata !5519, metadata !DIExpression()), !dbg !5789
  %347 = icmp slt i32 %346, 0, !dbg !5790
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5788
  call void @llvm.dbg.value(metadata i32 %349, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %304, metadata !5464, metadata !DIExpression()), !dbg !5539
  %350 = icmp sgt i32 %304, 0, !dbg !5792
  br i1 %350, label %351, label %363, !dbg !5793

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5793
  %353 = add i32 %352, %338, !dbg !5793
  br label %354, !dbg !5793

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %355, metadata !5464, metadata !DIExpression()), !dbg !5539
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #27, !dbg !5794
  call void @llvm.dbg.value(metadata i32 %356, metadata !5521, metadata !DIExpression()), !dbg !5795
  %357 = icmp slt i32 %356, 0, !dbg !5796
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5798
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5525
  call void @llvm.dbg.value(metadata i32 %359, metadata !5464, metadata !DIExpression()), !dbg !5539
  %360 = icmp sgt i32 %355, 1, !dbg !5792
  br i1 %360, label %354, label %363, !dbg !5793, !llvm.loop !5799

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5536
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !5529
  call void @llvm.dbg.value(metadata i32 %364, metadata !5405, metadata !DIExpression()), !dbg !5525
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #25, !dbg !5536
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !5525
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #25, !dbg !5801
  ret i32 %366, !dbg !5801
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5802 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5806, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.value(metadata i8* %1, metadata !5807, metadata !DIExpression()), !dbg !5808
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5809
  store i24 0, i24* %3, align 4, !dbg !5809
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5809
  store i8 0, i8* %4, align 1, !dbg !5809
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5809
  store i32 0, i32* %5, align 4, !dbg !5809
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5809
  store i32 0, i32* %6, align 4, !dbg !5809
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5810
  call void @llvm.dbg.value(metadata i8* %7, metadata !5807, metadata !DIExpression()), !dbg !5808
  %8 = load i8, i8* %7, align 1, !dbg !5811
  %9 = icmp eq i8 %8, 37, !dbg !5813
  br i1 %9, label %10, label %12, !dbg !5814

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5815
  call void @llvm.dbg.value(metadata i8* %11, metadata !5807, metadata !DIExpression()), !dbg !5808
  store i8 37, i8* %4, align 1, !dbg !5817
  br label %18, !dbg !5818

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #26, !dbg !5819
  call void @llvm.dbg.value(metadata i8* %13, metadata !5807, metadata !DIExpression()), !dbg !5808
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #26, !dbg !5820
  call void @llvm.dbg.value(metadata i8* %14, metadata !5807, metadata !DIExpression()), !dbg !5808
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #26, !dbg !5821
  call void @llvm.dbg.value(metadata i8* %15, metadata !5807, metadata !DIExpression()), !dbg !5808
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #26, !dbg !5822
  call void @llvm.dbg.value(metadata i8* %16, metadata !5807, metadata !DIExpression()), !dbg !5808
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #26, !dbg !5823
  call void @llvm.dbg.value(metadata i8* %17, metadata !5807, metadata !DIExpression()), !dbg !5808
  br label %18, !dbg !5824

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5808
  ret i8* %19, !dbg !5825
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5826 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5830, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i8* %1, metadata !5831, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i8* %2, metadata !5832, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i8* %3, metadata !5833, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i32 0, metadata !5834, metadata !DIExpression()), !dbg !5837
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5838

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5839
  call void @llvm.dbg.value(metadata i32 %9, metadata !5834, metadata !DIExpression()), !dbg !5837
  call void @llvm.dbg.value(metadata i8* %8, metadata !5832, metadata !DIExpression()), !dbg !5837
  %10 = icmp ult i8* %8, %3, !dbg !5840
  br i1 %10, label %11, label %13, !dbg !5841

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5842
  br label %17, !dbg !5841

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5843

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5844
  %16 = icmp eq i8 %15, 0, !dbg !5843
  br i1 %16, label %24, label %17, !dbg !5838

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5842
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5845
  call void @llvm.dbg.value(metadata i8* %19, metadata !5832, metadata !DIExpression()), !dbg !5837
  %20 = zext i8 %18 to i32, !dbg !5846
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #27, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %21, metadata !5835, metadata !DIExpression()), !dbg !5848
  %22 = icmp slt i32 %21, 0, !dbg !5849
  %23 = add i32 %9, 1, !dbg !5851
  call void @llvm.dbg.value(metadata i32 undef, metadata !5834, metadata !DIExpression()), !dbg !5837
  br i1 %22, label %24, label %7, !llvm.loop !5852

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5837
  ret i32 %25, !dbg !5854
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #14 !dbg !5855 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5859, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5860, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata i8* %2, metadata !5861, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata i8* %3, metadata !5862, metadata !DIExpression()), !dbg !5869
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5870
  %6 = load i8, i8* %5, align 1, !dbg !5870
  %7 = zext i8 %6 to i32, !dbg !5871
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #26, !dbg !5872
  %9 = icmp eq i32 %8, 0, !dbg !5872
  call void @llvm.dbg.value(metadata i1 %9, metadata !5863, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5869
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #26, !dbg !5873
  call void @llvm.dbg.value(metadata i32 %10, metadata !5864, metadata !DIExpression()), !dbg !5869
  %11 = ptrtoint i8* %3 to i32, !dbg !5874
  %12 = ptrtoint i8* %2 to i32, !dbg !5874
  %13 = sub i32 %11, %12, !dbg !5874
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5875
  call void @llvm.dbg.value(metadata i8* %14, metadata !5866, metadata !DIExpression()), !dbg !5869
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5876

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5869
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5859, metadata !DIExpression()), !dbg !5869
  call void @llvm.dbg.value(metadata i8* %18, metadata !5866, metadata !DIExpression()), !dbg !5869
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5877
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5878
  call void @llvm.dbg.value(metadata i32 %25, metadata !5867, metadata !DIExpression()), !dbg !5879
  %26 = icmp ult i32 %25, 10, !dbg !5880
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5881
  %28 = add i32 %27, %25, !dbg !5879
  %29 = trunc i32 %28 to i8, !dbg !5881
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5882
  call void @llvm.dbg.value(metadata i8* %30, metadata !5866, metadata !DIExpression()), !dbg !5869
  store i8 %29, i8* %30, align 1, !dbg !5883
  call void @llvm.dbg.value(metadata i64 %22, metadata !5859, metadata !DIExpression()), !dbg !5869
  %31 = icmp uge i64 %19, %15, !dbg !5884
  %32 = icmp ugt i8* %30, %2, !dbg !5885
  %33 = and i1 %31, %32, !dbg !5885
  br i1 %33, label %17, label %34, !dbg !5886, !llvm.loop !5887

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5889
  %36 = load i24, i24* %35, align 4, !dbg !5889
  %37 = and i24 %36, 32, !dbg !5889
  %38 = icmp eq i24 %37, 0, !dbg !5889
  br i1 %38, label %44, label %39, !dbg !5891

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5892

40:                                               ; preds = %39
  br label %41, !dbg !5894

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5898
  store i24 %43, i24* %35, align 4, !dbg !5898
  br label %44, !dbg !5899

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #11 !dbg !5900 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5906, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i8* %1, metadata !5907, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i32 %2, metadata !5908, metadata !DIExpression()), !dbg !5909
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5910
  %5 = load i24, i24* %4, align 4, !dbg !5910
  %6 = lshr i24 %5, 11, !dbg !5910
  %7 = and i24 %6, 15, !dbg !5910
  %8 = zext i24 %7 to i32, !dbg !5910
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5911

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5912
  store i32 %2, i32* %10, align 4, !dbg !5914
  br label %28, !dbg !5915

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5916
  store i8 %12, i8* %1, align 1, !dbg !5917
  br label %28, !dbg !5918

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5919
  %15 = bitcast i8* %1 to i16*, !dbg !5920
  store i16 %14, i16* %15, align 2, !dbg !5921
  br label %28, !dbg !5922

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5923
  store i32 %2, i32* %17, align 4, !dbg !5924
  br label %28, !dbg !5925

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5926
  %20 = bitcast i8* %1 to i64*, !dbg !5927
  store i64 %19, i64* %20, align 8, !dbg !5928
  br label %28, !dbg !5929

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5930
  %23 = bitcast i8* %1 to i64*, !dbg !5931
  store i64 %22, i64* %23, align 8, !dbg !5932
  br label %28, !dbg !5933

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5934
  store i32 %2, i32* %25, align 4, !dbg !5935
  br label %28, !dbg !5936

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5937
  store i32 %2, i32* %27, align 4, !dbg !5938
  br label %28, !dbg !5939

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5940
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5944, metadata !DIExpression()), !dbg !5945
  %2 = add i32 %0, -65, !dbg !5946
  %3 = icmp ult i32 %2, 26, !dbg !5947
  %4 = zext i1 %3 to i32, !dbg !5947
  ret i32 %4, !dbg !5948
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5949 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5953, metadata !DIExpression()), !dbg !5954
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5955

2:                                                ; preds = %1
  br label %4, !dbg !5956

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5958

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5959
  ret i32 %5, !dbg !5960
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #14 !dbg !5961 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5963, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i8* %1, metadata !5964, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i8 1, metadata !5965, metadata !DIExpression()), !dbg !5966
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5967

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5965, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i8* %5, metadata !5964, metadata !DIExpression()), !dbg !5966
  %6 = load i8, i8* %5, align 1, !dbg !5968
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5970

7:                                                ; preds = %4
  br label %11, !dbg !5971

8:                                                ; preds = %4
  br label %11, !dbg !5973

9:                                                ; preds = %4
  br label %11, !dbg !5974

10:                                               ; preds = %4
  br label %11, !dbg !5975

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5976
  %14 = or i24 %13, %12, !dbg !5976
  store i24 %14, i24* %3, align 4, !dbg !5976
  call void @llvm.dbg.value(metadata i8 poison, metadata !5965, metadata !DIExpression()), !dbg !5966
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5964, metadata !DIExpression()), !dbg !5966
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5965, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.value(metadata i8* %15, metadata !5964, metadata !DIExpression()), !dbg !5966
  %17 = load i24, i24* %3, align 4, !dbg !5977
  %18 = and i24 %17, 68, !dbg !5979
  %19 = icmp eq i24 %18, 68, !dbg !5979
  br i1 %19, label %20, label %22, !dbg !5979

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5980
  store i24 %21, i24* %3, align 4, !dbg !5980
  br label %22, !dbg !5982

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5983
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !5984 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5986, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.value(metadata i8* %1, metadata !5987, metadata !DIExpression()), !dbg !5990
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5991
  %5 = load i24, i24* %4, align 4, !dbg !5992
  %6 = or i24 %5, 128, !dbg !5992
  store i24 %6, i24* %4, align 4, !dbg !5992
  call void @llvm.dbg.value(metadata i8* %1, metadata !5987, metadata !DIExpression()), !dbg !5990
  %7 = load i8, i8* %1, align 1, !dbg !5993
  %8 = icmp eq i8 %7, 42, !dbg !5995
  br i1 %8, label %9, label %12, !dbg !5996

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5997
  store i24 %10, i24* %4, align 4, !dbg !5997
  call void @llvm.dbg.value(metadata i8* %1, metadata !5987, metadata !DIExpression()), !dbg !5990
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5999
  call void @llvm.dbg.value(metadata i8* %11, metadata !5987, metadata !DIExpression()), !dbg !5990
  store i8* %11, i8** %3, align 4, !dbg !5999
  br label %29, !dbg !6000

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5988, metadata !DIExpression()), !dbg !5990
  call void @llvm.dbg.value(metadata i8** %3, metadata !5987, metadata !DIExpression(DW_OP_deref)), !dbg !5990
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %13, metadata !5989, metadata !DIExpression()), !dbg !5990
  %14 = load i8*, i8** %3, align 4, !dbg !6002
  call void @llvm.dbg.value(metadata i8* %14, metadata !5987, metadata !DIExpression()), !dbg !5990
  %15 = icmp eq i8* %14, %1, !dbg !6004
  br i1 %15, label %29, label %16, !dbg !6005

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !6006
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !6008
  store i32 %13, i32* %18, align 4, !dbg !6009
  %19 = lshr i32 %13, 31, !dbg !6010
  %20 = lshr i24 %17, 1, !dbg !6011
  %21 = and i24 %20, 1, !dbg !6011
  %22 = zext i24 %21 to i32, !dbg !6011
  %23 = or i32 %19, %22, !dbg !6011
  %24 = trunc i32 %23 to i24, !dbg !6011
  %25 = shl nuw nsw i24 %24, 1, !dbg !6011
  %26 = and i24 %17, -131, !dbg !6011
  %27 = or i24 %26, 128, !dbg !6011
  %28 = or i24 %25, %27, !dbg !6011
  store i24 %28, i24* %4, align 4, !dbg !6011
  br label %29, !dbg !6012

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5990
  ret i8* %30, !dbg !6013
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #14 !dbg !6014 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6016, metadata !DIExpression()), !dbg !6019
  call void @llvm.dbg.value(metadata i8* %1, metadata !6017, metadata !DIExpression()), !dbg !6019
  %4 = load i8, i8* %1, align 1, !dbg !6020
  %5 = icmp eq i8 %4, 46, !dbg !6021
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !6022
  %7 = load i24, i24* %6, align 4, !dbg !6023
  %8 = select i1 %5, i24 512, i24 0, !dbg !6023
  %9 = and i24 %7, -513, !dbg !6023
  %10 = or i24 %9, %8, !dbg !6023
  store i24 %10, i24* %6, align 4, !dbg !6023
  br i1 %5, label %11, label %32, !dbg !6024

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6017, metadata !DIExpression()), !dbg !6019
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6025
  call void @llvm.dbg.value(metadata i8* %12, metadata !6017, metadata !DIExpression()), !dbg !6019
  store i8* %12, i8** %3, align 4, !dbg !6025
  %13 = load i8, i8* %12, align 1, !dbg !6026
  %14 = icmp eq i8 %13, 42, !dbg !6028
  br i1 %14, label %15, label %18, !dbg !6029

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !6030
  store i24 %16, i24* %6, align 4, !dbg !6030
  call void @llvm.dbg.value(metadata i8* %12, metadata !6017, metadata !DIExpression()), !dbg !6019
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6032
  call void @llvm.dbg.value(metadata i8* %17, metadata !6017, metadata !DIExpression()), !dbg !6019
  store i8* %17, i8** %3, align 4, !dbg !6032
  br label %32, !dbg !6033

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !6017, metadata !DIExpression(DW_OP_deref)), !dbg !6019
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #26, !dbg !6034
  call void @llvm.dbg.value(metadata i32 %19, metadata !6018, metadata !DIExpression()), !dbg !6019
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !6035
  store i32 %19, i32* %20, align 4, !dbg !6036
  %21 = lshr i32 %19, 31, !dbg !6037
  %22 = load i24, i24* %6, align 4, !dbg !6038
  %23 = lshr i24 %22, 1, !dbg !6038
  %24 = and i24 %23, 1, !dbg !6038
  %25 = zext i24 %24 to i32, !dbg !6038
  %26 = or i32 %21, %25, !dbg !6038
  %27 = trunc i32 %26 to i24, !dbg !6038
  %28 = shl nuw nsw i24 %27, 1, !dbg !6038
  %29 = and i24 %22, -3, !dbg !6038
  %30 = or i24 %28, %29, !dbg !6038
  store i24 %30, i24* %6, align 4, !dbg !6038
  %31 = load i8*, i8** %3, align 4, !dbg !6039
  call void @llvm.dbg.value(metadata i8* %31, metadata !6017, metadata !DIExpression()), !dbg !6019
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !6019
  ret i8* %33, !dbg !6040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6041 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6043, metadata !DIExpression()), !dbg !6045
  call void @llvm.dbg.value(metadata i8* %1, metadata !6044, metadata !DIExpression()), !dbg !6045
  %3 = load i8, i8* %1, align 1, !dbg !6046
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !6047

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6048
  call void @llvm.dbg.value(metadata i8* %5, metadata !6044, metadata !DIExpression()), !dbg !6045
  %6 = load i8, i8* %5, align 1, !dbg !6051
  %7 = icmp eq i8 %6, 104, !dbg !6052
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6053
  %9 = load i24, i24* %8, align 4, !dbg !6053
  %10 = and i24 %9, -30721, !dbg !6053
  br i1 %7, label %11, label %14, !dbg !6054

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !6055
  store i24 %12, i24* %8, align 4, !dbg !6055
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6057
  call void @llvm.dbg.value(metadata i8* %13, metadata !6044, metadata !DIExpression()), !dbg !6045
  br label %56, !dbg !6058

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !6059
  store i24 %15, i24* %8, align 4, !dbg !6059
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6061
  call void @llvm.dbg.value(metadata i8* %17, metadata !6044, metadata !DIExpression()), !dbg !6045
  %18 = load i8, i8* %17, align 1, !dbg !6063
  %19 = icmp eq i8 %18, 108, !dbg !6064
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !6065
  %21 = load i24, i24* %20, align 4, !dbg !6065
  %22 = and i24 %21, -30721, !dbg !6065
  br i1 %19, label %23, label %26, !dbg !6066

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !6067
  store i24 %24, i24* %20, align 4, !dbg !6067
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !6069
  call void @llvm.dbg.value(metadata i8* %25, metadata !6044, metadata !DIExpression()), !dbg !6045
  br label %56, !dbg !6070

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !6071
  store i24 %27, i24* %20, align 4, !dbg !6071
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !6073
  %30 = load i24, i24* %29, align 4, !dbg !6074
  %31 = and i24 %30, -30721, !dbg !6074
  %32 = or i24 %31, 10240, !dbg !6074
  store i24 %32, i24* %29, align 4, !dbg !6074
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6075
  call void @llvm.dbg.value(metadata i8* %33, metadata !6044, metadata !DIExpression()), !dbg !6045
  br label %56, !dbg !6076

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !6077
  %36 = load i24, i24* %35, align 4, !dbg !6078
  %37 = and i24 %36, -30721, !dbg !6078
  %38 = or i24 %37, 12288, !dbg !6078
  store i24 %38, i24* %35, align 4, !dbg !6078
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6079
  call void @llvm.dbg.value(metadata i8* %39, metadata !6044, metadata !DIExpression()), !dbg !6045
  br label %56, !dbg !6080

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !6081
  %42 = load i24, i24* %41, align 4, !dbg !6082
  %43 = and i24 %42, -30721, !dbg !6082
  %44 = or i24 %43, 14336, !dbg !6082
  store i24 %44, i24* %41, align 4, !dbg !6082
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6083
  call void @llvm.dbg.value(metadata i8* %45, metadata !6044, metadata !DIExpression()), !dbg !6045
  br label %56, !dbg !6084

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !6085
  %48 = load i24, i24* %47, align 4, !dbg !6086
  %49 = and i24 %48, -30723, !dbg !6086
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6087
  call void @llvm.dbg.value(metadata i8* %50, metadata !6044, metadata !DIExpression()), !dbg !6045
  %51 = or i24 %49, 16386, !dbg !6088
  store i24 %51, i24* %47, align 4, !dbg !6088
  br label %56, !dbg !6089

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !6090
  %54 = load i24, i24* %53, align 4, !dbg !6091
  %55 = and i24 %54, -30721, !dbg !6091
  store i24 %55, i24* %53, align 4, !dbg !6091
  br label %56, !dbg !6092

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6044, metadata !DIExpression()), !dbg !6045
  ret i8* %57, !dbg !6093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #11 !dbg !6094 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !6096, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8* %1, metadata !6097, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8 0, metadata !6098, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8* %1, metadata !6097, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6101
  %3 = load i8, i8* %1, align 1, !dbg !6102
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !6103
  store i8 %3, i8* %4, align 1, !dbg !6104
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !6105

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !6106

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !6107
  %9 = load i24, i24* %8, align 4, !dbg !6107
  %10 = and i24 %9, -458753, !dbg !6107
  %11 = or i24 %10, %7, !dbg !6107
  call void @llvm.dbg.label(metadata !6099), !dbg !6108
  %12 = and i24 %9, 30720, !dbg !6109
  %13 = icmp eq i24 %12, 16384, !dbg !6109
  %14 = zext i1 %13 to i24, !dbg !6111
  %15 = or i24 %11, %14, !dbg !6111
  %16 = icmp eq i8 %3, 99, !dbg !6112
  br i1 %16, label %17, label %43, !dbg !6114

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !6115
  %19 = icmp ne i24 %18, 0, !dbg !6115
  call void @llvm.dbg.value(metadata i1 %19, metadata !6098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6101
  br label %43, !dbg !6117

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !6118
  %22 = load i24, i24* %21, align 4, !dbg !6119
  %23 = and i24 %22, -458753, !dbg !6119
  %24 = or i24 %23, 262144, !dbg !6119
  call void @llvm.dbg.value(metadata i8 1, metadata !6098, metadata !DIExpression()), !dbg !6101
  br label %43, !dbg !6120

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !6123
  %27 = load i24, i24* %26, align 4, !dbg !6124
  %28 = and i24 %27, -458753, !dbg !6124
  %29 = or i24 %28, 196608, !dbg !6124
  %30 = and i24 %27, 30720, !dbg !6125
  %31 = icmp eq i24 %30, 16384, !dbg !6125
  br label %43, !dbg !6127

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !6128
  %34 = load i24, i24* %33, align 4, !dbg !6129
  %35 = and i24 %34, -458753, !dbg !6129
  %36 = or i24 %35, 196608, !dbg !6129
  %37 = and i24 %34, 30720, !dbg !6130
  %38 = icmp ne i24 %37, 0, !dbg !6130
  br label %43, !dbg !6132

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !6133
  %41 = load i24, i24* %40, align 4, !dbg !6134
  %42 = or i24 %41, 1, !dbg !6134
  br label %43, !dbg !6135

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !6136
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !6137
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !6138
  call void @llvm.dbg.value(metadata i8* %48, metadata !6097, metadata !DIExpression()), !dbg !6101
  call void @llvm.dbg.value(metadata i8 poison, metadata !6098, metadata !DIExpression()), !dbg !6101
  %49 = lshr i24 %44, 1, !dbg !6136
  %50 = and i24 %49, 1, !dbg !6136
  %51 = zext i24 %50 to i32, !dbg !6136
  %52 = or i32 %51, %47, !dbg !6136
  %53 = trunc i32 %52 to i24, !dbg !6136
  %54 = shl nuw nsw i24 %53, 1, !dbg !6136
  %55 = and i24 %44, -3, !dbg !6136
  %56 = or i24 %54, %55, !dbg !6136
  store i24 %56, i24* %46, align 4, !dbg !6136
  ret i8* %48, !dbg !6139
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #14 !dbg !6140 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !6144, metadata !DIExpression()), !dbg !6147
  %2 = load i8*, i8** %0, align 4, !dbg !6148
  call void @llvm.dbg.value(metadata i8* %2, metadata !6145, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata i32 0, metadata !6146, metadata !DIExpression()), !dbg !6147
  %3 = load i8, i8* %2, align 1, !dbg !6149
  %4 = zext i8 %3 to i32, !dbg !6150
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #26, !dbg !6151
  %6 = icmp eq i32 %5, 0, !dbg !6152
  br i1 %6, label %19, label %7, !dbg !6152

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !6146, metadata !DIExpression()), !dbg !6147
  call void @llvm.dbg.value(metadata i8* %10, metadata !6145, metadata !DIExpression()), !dbg !6147
  %11 = mul i32 %9, 10, !dbg !6153
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !6155
  call void @llvm.dbg.value(metadata i8* %12, metadata !6145, metadata !DIExpression()), !dbg !6147
  %13 = add i32 %11, -48, !dbg !6156
  %14 = add i32 %13, %8, !dbg !6157
  call void @llvm.dbg.value(metadata i32 %14, metadata !6146, metadata !DIExpression()), !dbg !6147
  %15 = load i8, i8* %12, align 1, !dbg !6149
  %16 = zext i8 %15 to i32, !dbg !6150
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #26, !dbg !6151
  %18 = icmp eq i32 %17, 0, !dbg !6152
  br i1 %18, label %19, label %7, !dbg !6152, !llvm.loop !6158

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !6147
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !6147
  store i8* %20, i8** %0, align 4, !dbg !6160
  ret i32 %21, !dbg !6161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !6162 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6164, metadata !DIExpression()), !dbg !6165
  %2 = add i32 %0, -48, !dbg !6166
  %3 = icmp ult i32 %2, 10, !dbg !6167
  %4 = zext i1 %3 to i32, !dbg !6167
  ret i32 %4, !dbg !6168
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !6169 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #25, !dbg !6171, !srcloc !6172
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #25, !dbg !6173, !srcloc !6174
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #25, !dbg !6175, !srcloc !6176
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #25, !dbg !6177, !srcloc !6178
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #25, !dbg !6179, !srcloc !6180
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #25, !dbg !6181, !srcloc !6182
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #25, !dbg !6183, !srcloc !6184
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #25, !dbg !6185, !srcloc !6186
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #25, !dbg !6187, !srcloc !6188
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #25, !dbg !6189, !srcloc !6190
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #25, !dbg !6191, !srcloc !6192
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #25, !dbg !6193, !srcloc !6194
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #25, !dbg !6195, !srcloc !6196
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #25, !dbg !6197, !srcloc !6198
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #25, !dbg !6199, !srcloc !6200
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #25, !dbg !6201, !srcloc !6202
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #25, !dbg !6203, !srcloc !6204
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #25, !dbg !6205, !srcloc !6206
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #25, !dbg !6207, !srcloc !6208
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #25, !dbg !6209, !srcloc !6210
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #25, !dbg !6211, !srcloc !6212
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT\0A\09.equ\09CONFIG_TINYCRYPT,1\0A\09.type\09CONFIG_TINYCRYPT,%object", ""() #25, !dbg !6213, !srcloc !6214
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #25, !dbg !6215, !srcloc !6216
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #25, !dbg !6217, !srcloc !6218
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #25, !dbg !6219, !srcloc !6220
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #25, !dbg !6221, !srcloc !6222
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #25, !dbg !6223, !srcloc !6224
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #25, !dbg !6225, !srcloc !6226
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #25, !dbg !6227, !srcloc !6228
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #25, !dbg !6229, !srcloc !6230
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #25, !dbg !6231, !srcloc !6232
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #25, !dbg !6233, !srcloc !6234
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #25, !dbg !6235, !srcloc !6236
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #25, !dbg !6237, !srcloc !6238
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6239, !srcloc !6240
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #25, !dbg !6241, !srcloc !6242
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #25, !dbg !6243, !srcloc !6244
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #25, !dbg !6245, !srcloc !6246
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #25, !dbg !6247, !srcloc !6248
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #25, !dbg !6249, !srcloc !6250
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #25, !dbg !6251, !srcloc !6252
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6253, !srcloc !6254
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #25, !dbg !6255, !srcloc !6256
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #25, !dbg !6257, !srcloc !6258
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #25, !dbg !6259, !srcloc !6260
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #25, !dbg !6261, !srcloc !6262
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #25, !dbg !6263, !srcloc !6264
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #25, !dbg !6265, !srcloc !6266
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #25, !dbg !6267, !srcloc !6268
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #25, !dbg !6269, !srcloc !6270
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #25, !dbg !6271, !srcloc !6272
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #25, !dbg !6273, !srcloc !6274
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #25, !dbg !6275, !srcloc !6276
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #25, !dbg !6277, !srcloc !6278
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #25, !dbg !6279, !srcloc !6280
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #25, !dbg !6281, !srcloc !6282
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #25, !dbg !6283, !srcloc !6284
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #25, !dbg !6285, !srcloc !6286
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #25, !dbg !6287, !srcloc !6288
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #25, !dbg !6289, !srcloc !6290
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #25, !dbg !6291, !srcloc !6292
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #25, !dbg !6293, !srcloc !6294
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #25, !dbg !6295, !srcloc !6296
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #25, !dbg !6297, !srcloc !6298
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #25, !dbg !6299, !srcloc !6300
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #25, !dbg !6301, !srcloc !6302
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #25, !dbg !6303, !srcloc !6304
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #25, !dbg !6305, !srcloc !6306
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #25, !dbg !6307, !srcloc !6308
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #25, !dbg !6309, !srcloc !6310
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #25, !dbg !6311, !srcloc !6312
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #25, !dbg !6313, !srcloc !6314
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #25, !dbg !6315, !srcloc !6316
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #25, !dbg !6317, !srcloc !6318
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #25, !dbg !6319, !srcloc !6320
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #25, !dbg !6321, !srcloc !6322
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #25, !dbg !6323, !srcloc !6324
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #25, !dbg !6325, !srcloc !6326
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #25, !dbg !6327, !srcloc !6328
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #25, !dbg !6329, !srcloc !6330
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #25, !dbg !6331, !srcloc !6332
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #25, !dbg !6333, !srcloc !6334
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #25, !dbg !6335, !srcloc !6336
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #25, !dbg !6337, !srcloc !6338
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #25, !dbg !6339, !srcloc !6340
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #25, !dbg !6341, !srcloc !6342
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #25, !dbg !6343, !srcloc !6344
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #25, !dbg !6345, !srcloc !6346
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #25, !dbg !6347, !srcloc !6348
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #25, !dbg !6349, !srcloc !6350
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #25, !dbg !6351, !srcloc !6352
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #25, !dbg !6353, !srcloc !6354
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES\0A\09.equ\09CONFIG_TINYCRYPT_AES,1\0A\09.type\09CONFIG_TINYCRYPT_AES,%object", ""() #25, !dbg !6355, !srcloc !6356
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CBC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CBC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CBC,%object", ""() #25, !dbg !6357, !srcloc !6358
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CTR\0A\09.equ\09CONFIG_TINYCRYPT_AES_CTR,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CTR,%object", ""() #25, !dbg !6359, !srcloc !6360
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CCM\0A\09.equ\09CONFIG_TINYCRYPT_AES_CCM,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CCM,%object", ""() #25, !dbg !6361, !srcloc !6362
  tail call void asm sideeffect ".globl\09CONFIG_TINYCRYPT_AES_CMAC\0A\09.equ\09CONFIG_TINYCRYPT_AES_CMAC,1\0A\09.type\09CONFIG_TINYCRYPT_AES_CMAC,%object", ""() #25, !dbg !6363, !srcloc !6364
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #25, !dbg !6365, !srcloc !6366
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #25, !dbg !6367, !srcloc !6368
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #25, !dbg !6369, !srcloc !6370
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #25, !dbg !6371, !srcloc !6372
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #25, !dbg !6373, !srcloc !6374
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #25, !dbg !6375, !srcloc !6376
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #25, !dbg !6377, !srcloc !6378
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #25, !dbg !6379, !srcloc !6380
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6381, !srcloc !6382
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #25, !dbg !6383, !srcloc !6384
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #25, !dbg !6385, !srcloc !6386
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #25, !dbg !6387, !srcloc !6388
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #25, !dbg !6389, !srcloc !6390
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #25, !dbg !6391, !srcloc !6392
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #25, !dbg !6393, !srcloc !6394
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #25, !dbg !6395, !srcloc !6396
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #25, !dbg !6397, !srcloc !6398
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #25, !dbg !6399, !srcloc !6400
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #25, !dbg !6401, !srcloc !6402
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #25, !dbg !6403, !srcloc !6404
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #25, !dbg !6405, !srcloc !6406
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #25, !dbg !6407, !srcloc !6408
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #25, !dbg !6409, !srcloc !6410
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #25, !dbg !6411, !srcloc !6412
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #25, !dbg !6413, !srcloc !6414
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #25, !dbg !6415, !srcloc !6416
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #25, !dbg !6417, !srcloc !6418
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #25, !dbg !6419, !srcloc !6420
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #25, !dbg !6421, !srcloc !6422
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #25, !dbg !6423, !srcloc !6424
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #25, !dbg !6425, !srcloc !6426
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #25, !dbg !6427, !srcloc !6428
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #25, !dbg !6429, !srcloc !6430
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #25, !dbg !6431, !srcloc !6432
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #25, !dbg !6433, !srcloc !6434
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #25, !dbg !6435, !srcloc !6436
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #25, !dbg !6437, !srcloc !6438
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #25, !dbg !6439, !srcloc !6440
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #25, !dbg !6441, !srcloc !6442
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #25, !dbg !6443, !srcloc !6444
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #25, !dbg !6445, !srcloc !6446
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #25, !dbg !6447, !srcloc !6448
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #25, !dbg !6449, !srcloc !6450
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #25, !dbg !6451, !srcloc !6452
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #25, !dbg !6453, !srcloc !6454
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #25, !dbg !6455, !srcloc !6456
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #25, !dbg !6457, !srcloc !6458
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #25, !dbg !6459, !srcloc !6460
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #25, !dbg !6461, !srcloc !6462
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #25, !dbg !6463, !srcloc !6464
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #25, !dbg !6465, !srcloc !6466
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #25, !dbg !6467, !srcloc !6468
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #25, !dbg !6469, !srcloc !6470
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #25, !dbg !6471, !srcloc !6472
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #25, !dbg !6473, !srcloc !6474
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #25, !dbg !6475, !srcloc !6476
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #25, !dbg !6477, !srcloc !6478
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #25, !dbg !6479, !srcloc !6480
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #25, !dbg !6481, !srcloc !6482
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #25, !dbg !6483, !srcloc !6484
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #25, !dbg !6485, !srcloc !6486
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #25, !dbg !6487, !srcloc !6488
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #25, !dbg !6489, !srcloc !6490
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #25, !dbg !6491, !srcloc !6492
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6493, !srcloc !6494
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #25, !dbg !6495, !srcloc !6496
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #25, !dbg !6497, !srcloc !6498
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #25, !dbg !6499, !srcloc !6500
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #25, !dbg !6501, !srcloc !6502
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #25, !dbg !6503, !srcloc !6504
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #25, !dbg !6505, !srcloc !6506
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #25, !dbg !6507, !srcloc !6508
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #25, !dbg !6509, !srcloc !6510
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #25, !dbg !6511, !srcloc !6512
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #25, !dbg !6513, !srcloc !6514
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #25, !dbg !6515, !srcloc !6516
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6517, !srcloc !6518
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #25, !dbg !6519, !srcloc !6520
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #25, !dbg !6521, !srcloc !6522
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #25, !dbg !6523, !srcloc !6524
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #25, !dbg !6525, !srcloc !6526
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #25, !dbg !6527, !srcloc !6528
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #25, !dbg !6529, !srcloc !6530
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #25, !dbg !6531, !srcloc !6532
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #25, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #25, !dbg !6535, !srcloc !6536
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #25, !dbg !6537, !srcloc !6538
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #25, !dbg !6539, !srcloc !6540
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #25, !dbg !6541, !srcloc !6542
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #25, !dbg !6543, !srcloc !6544
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #25, !dbg !6545, !srcloc !6546
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #25, !dbg !6547, !srcloc !6548
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #25, !dbg !6549, !srcloc !6550
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #25, !dbg !6551, !srcloc !6552
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #25, !dbg !6553, !srcloc !6554
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #25, !dbg !6555, !srcloc !6556
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #25, !dbg !6557, !srcloc !6558
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #25, !dbg !6559, !srcloc !6560
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #25, !dbg !6561, !srcloc !6562
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #25, !dbg !6563, !srcloc !6564
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #25, !dbg !6565, !srcloc !6566
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #25, !dbg !6567, !srcloc !6568
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #25, !dbg !6569, !srcloc !6570
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #25, !dbg !6571, !srcloc !6572
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #25, !dbg !6573, !srcloc !6574
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #25, !dbg !6575, !srcloc !6576
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #25, !dbg !6577, !srcloc !6578
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #25, !dbg !6579, !srcloc !6580
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #25, !dbg !6581, !srcloc !6582
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #25, !dbg !6583, !srcloc !6584
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #25, !dbg !6585, !srcloc !6586
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #25, !dbg !6587, !srcloc !6588
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #25, !dbg !6589, !srcloc !6590
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #25, !dbg !6591, !srcloc !6592
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6593, !srcloc !6594
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #25, !dbg !6595, !srcloc !6596
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #25, !dbg !6597, !srcloc !6598
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #25, !dbg !6599, !srcloc !6600
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #25, !dbg !6601, !srcloc !6602
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #25, !dbg !6603, !srcloc !6604
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6605, !srcloc !6606
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #25, !dbg !6607, !srcloc !6608
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #25, !dbg !6609, !srcloc !6610
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #25, !dbg !6611, !srcloc !6612
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #25, !dbg !6613, !srcloc !6614
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #25, !dbg !6615, !srcloc !6616
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #25, !dbg !6617, !srcloc !6618
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #25, !dbg !6619, !srcloc !6620
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #25, !dbg !6621, !srcloc !6622
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #25, !dbg !6623, !srcloc !6624
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #25, !dbg !6625, !srcloc !6626
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #25, !dbg !6627, !srcloc !6628
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6629, !srcloc !6630
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #25, !dbg !6631, !srcloc !6632
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #25, !dbg !6633, !srcloc !6634
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #25, !dbg !6635, !srcloc !6636
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #25, !dbg !6637, !srcloc !6638
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #25, !dbg !6639, !srcloc !6640
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #25, !dbg !6641, !srcloc !6642
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #25, !dbg !6643, !srcloc !6644
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #25, !dbg !6645, !srcloc !6646
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #25, !dbg !6647, !srcloc !6648
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #25, !dbg !6649, !srcloc !6650
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6651, !srcloc !6652
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #25, !dbg !6653, !srcloc !6654
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #25, !dbg !6655, !srcloc !6656
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #25, !dbg !6657, !srcloc !6658
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #25, !dbg !6659, !srcloc !6660
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #25, !dbg !6661, !srcloc !6662
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #25, !dbg !6663, !srcloc !6664
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #25, !dbg !6665, !srcloc !6666
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #25, !dbg !6667, !srcloc !6668
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #25, !dbg !6669, !srcloc !6670
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #25, !dbg !6671, !srcloc !6672
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #25, !dbg !6673, !srcloc !6674
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6675, !srcloc !6676
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #25, !dbg !6677, !srcloc !6678
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #25, !dbg !6679, !srcloc !6680
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #25, !dbg !6681, !srcloc !6682
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #25, !dbg !6683, !srcloc !6684
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO\0A\09.equ\09CONFIG_CRYPTO,1\0A\09.type\09CONFIG_CRYPTO,%object", ""() #25, !dbg !6685, !srcloc !6686
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_INIT_PRIORITY\0A\09.equ\09CONFIG_CRYPTO_INIT_PRIORITY,90\0A\09.type\09CONFIG_CRYPTO_INIT_PRIORITY,%object", ""() #25, !dbg !6687, !srcloc !6688
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL_DBG\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL_DBG,1\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL_DBG,%object", ""() #25, !dbg !6689, !srcloc !6690
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_LOG_LEVEL\0A\09.equ\09CONFIG_CRYPTO_LOG_LEVEL,4\0A\09.type\09CONFIG_CRYPTO_LOG_LEVEL,%object", ""() #25, !dbg !6691, !srcloc !6692
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM,%object", ""() #25, !dbg !6693, !srcloc !6694
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,2\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_MAX_SESSION,%object", ""() #25, !dbg !6695, !srcloc !6696
  tail call void asm sideeffect ".globl\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME\0A\09.equ\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,1\0A\09.type\09CONFIG_CRYPTO_TINYCRYPT_SHIM_DRV_NAME,%object", ""() #25, !dbg !6697, !srcloc !6698
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #25, !dbg !6699, !srcloc !6700
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #25, !dbg !6701, !srcloc !6702
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #25, !dbg !6703, !srcloc !6704
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #25, !dbg !6705, !srcloc !6706
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #25, !dbg !6707, !srcloc !6708
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #25, !dbg !6709, !srcloc !6710
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #25, !dbg !6711, !srcloc !6712
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #25, !dbg !6713, !srcloc !6714
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #25, !dbg !6715, !srcloc !6716
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #25, !dbg !6717, !srcloc !6718
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #25, !dbg !6719, !srcloc !6720
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #25, !dbg !6721, !srcloc !6722
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #25, !dbg !6723, !srcloc !6724
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #25, !dbg !6725, !srcloc !6726
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #25, !dbg !6727, !srcloc !6728
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #25, !dbg !6729, !srcloc !6730
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #25, !dbg !6731, !srcloc !6732
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #25, !dbg !6733, !srcloc !6734
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #25, !dbg !6735, !srcloc !6736
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #25, !dbg !6737, !srcloc !6738
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #25, !dbg !6739, !srcloc !6740
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #25, !dbg !6741, !srcloc !6742
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #25, !dbg !6743, !srcloc !6744
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #25, !dbg !6745, !srcloc !6746
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #25, !dbg !6747, !srcloc !6748
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #25, !dbg !6749, !srcloc !6750
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #25, !dbg !6751, !srcloc !6752
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #25, !dbg !6753, !srcloc !6754
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #25, !dbg !6755, !srcloc !6756
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #25, !dbg !6757, !srcloc !6758
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #25, !dbg !6759, !srcloc !6760
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #25, !dbg !6761, !srcloc !6762
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #25, !dbg !6763, !srcloc !6764
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #25, !dbg !6765, !srcloc !6766
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #25, !dbg !6767, !srcloc !6768
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #25, !dbg !6769, !srcloc !6770
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #25, !dbg !6771, !srcloc !6772
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #25, !dbg !6773, !srcloc !6774
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #25, !dbg !6775, !srcloc !6776
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #25, !dbg !6777, !srcloc !6778
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #25, !dbg !6779, !srcloc !6780
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #25, !dbg !6781, !srcloc !6782
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6783, !srcloc !6784
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #25, !dbg !6785, !srcloc !6786
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #25, !dbg !6787, !srcloc !6788
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #25, !dbg !6789, !srcloc !6790
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #25, !dbg !6791, !srcloc !6792
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #25, !dbg !6793, !srcloc !6794
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #25, !dbg !6795, !srcloc !6796
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #25, !dbg !6797, !srcloc !6798
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #25, !dbg !6799, !srcloc !6800
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #25, !dbg !6801, !srcloc !6802
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #25, !dbg !6803, !srcloc !6804
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #25, !dbg !6805, !srcloc !6806
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #25, !dbg !6807, !srcloc !6808
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #25, !dbg !6809, !srcloc !6810
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #25, !dbg !6811, !srcloc !6812
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #25, !dbg !6813, !srcloc !6814
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #25, !dbg !6815, !srcloc !6816
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #25, !dbg !6817, !srcloc !6818
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #25, !dbg !6819, !srcloc !6820
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #25, !dbg !6821, !srcloc !6822
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #25, !dbg !6823, !srcloc !6824
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #25, !dbg !6825, !srcloc !6826
  tail call void asm sideeffect ".globl\09CONFIG_EXPERIMENTAL\0A\09.equ\09CONFIG_EXPERIMENTAL,1\0A\09.type\09CONFIG_EXPERIMENTAL,%object", ""() #25, !dbg !6827, !srcloc !6828
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #25, !dbg !6829, !srcloc !6830
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #25, !dbg !6831, !srcloc !6832
  ret void, !dbg !6833
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6836, metadata !DIExpression()), !dbg !6838
  tail call fastcc void @LL_FLASH_EnableInstCache() #26, !dbg !6839
  tail call fastcc void @LL_FLASH_EnableDataCache() #26, !dbg !6840
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !6841, !srcloc !6850
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6841
  call void @llvm.dbg.value(metadata i32 %3, metadata !6847, metadata !DIExpression()) #25, !dbg !6851
  call void @llvm.dbg.value(metadata i32 undef, metadata !6848, metadata !DIExpression()) #25, !dbg !6851
  call void @llvm.dbg.value(metadata i32 %3, metadata !6837, metadata !DIExpression()), !dbg !6838
  call void @llvm.dbg.value(metadata i32 %3, metadata !6852, metadata !DIExpression()) #25, !dbg !6857
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !6859, !srcloc !6860
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6861
  ret i32 0, !dbg !6862
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #15 !dbg !6863 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6865
  %2 = or i32 %1, 512, !dbg !6865
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6865
  ret void, !dbg !6866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #15 !dbg !6867 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6868
  %2 = or i32 %1, 1024, !dbg !6868
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6868
  ret void, !dbg !6869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6870 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6872, metadata !DIExpression()), !dbg !6873
  ret i32 0, !dbg !6874
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6875 {
  %2 = alloca %union.anon.4, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6878, metadata !DIExpression()), !dbg !6886
  %3 = bitcast %union.anon.4* %2 to i8*, !dbg !6887
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6887
  call void @llvm.dbg.declare(metadata %union.anon.4* %2, metadata !6879, metadata !DIExpression()), !dbg !6888
  call void @llvm.va_start(i8* nonnull %3), !dbg !6889
  %4 = bitcast %union.anon.4* %2 to i32*, !dbg !6890
  %5 = load i32, i32* %4, align 4, !dbg !6890
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6890
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #27, !dbg !6890
  call void @llvm.va_end(i8* nonnull %3), !dbg !6891
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !6892
  ret void, !dbg !6892
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6893 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6898, metadata !DIExpression()), !dbg !6899
  call void @llvm.dbg.value(metadata i8* %0, metadata !6897, metadata !DIExpression()), !dbg !6899
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #27, !dbg !6900
  ret void, !dbg !6901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6906, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i8* %1, metadata !6907, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i32 %2, metadata !6908, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i8* %1, metadata !6909, metadata !DIExpression()), !dbg !6910
  %4 = icmp eq i32 %2, 0, !dbg !6911
  br i1 %4, label %14, label %5, !dbg !6912

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) #26, !dbg !6910
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6912

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6909, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i32 %10, metadata !6908, metadata !DIExpression()), !dbg !6910
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i32 0, i32 0), i32 noundef %7) #27, !dbg !6913
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #26, !dbg !6915
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6916
  call void @llvm.dbg.value(metadata i32 %11, metadata !6908, metadata !DIExpression()), !dbg !6910
  call void @llvm.dbg.value(metadata i8* %12, metadata !6909, metadata !DIExpression()), !dbg !6910
  br i1 %13, label %14, label %8, !dbg !6916, !llvm.loop !6917

14:                                               ; preds = %8, %3
  ret void, !dbg !6919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.62(i32 noundef %0) unnamed_addr #3 !dbg !6920 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6922, metadata !DIExpression()), !dbg !6923
  %2 = add i32 %0, -1, !dbg !6924
  %3 = icmp ult i32 %2, 4, !dbg !6924
  %4 = shl i32 %2, 3, !dbg !6924
  %5 = lshr i32 1145657157, %4, !dbg !6924
  %6 = trunc i32 %5 to i8, !dbg !6924
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6924
  ret i8 %7, !dbg !6925
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6926 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6930, metadata !DIExpression()), !dbg !6941
  call void @llvm.dbg.value(metadata i32 %1, metadata !6931, metadata !DIExpression()), !dbg !6941
  call void @llvm.dbg.value(metadata i32 0, metadata !6932, metadata !DIExpression()), !dbg !6942
  br label %4, !dbg !6943

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.64, i32 0, i32 0)) #27, !dbg !6944
  call void @llvm.dbg.value(metadata i32 0, metadata !6934, metadata !DIExpression()), !dbg !6945
  br label %16, !dbg !6946

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6932, metadata !DIExpression()), !dbg !6942
  %6 = icmp ult i32 %5, %1, !dbg !6947
  br i1 %6, label %7, label %11, !dbg !6951

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6952
  %9 = load i8, i8* %8, align 1, !dbg !6952
  %10 = zext i8 %9 to i32, !dbg !6954
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.65, i32 0, i32 0), i32 noundef %10) #27, !dbg !6955
  br label %12, !dbg !6956

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.66, i32 0, i32 0)) #27, !dbg !6957
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6959
  call void @llvm.dbg.value(metadata i32 %13, metadata !6932, metadata !DIExpression()), !dbg !6942
  %14 = icmp eq i32 %13, 8, !dbg !6960
  br i1 %14, label %3, label %4, !dbg !6943, !llvm.loop !6961

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.67, i32 0, i32 0)) #27, !dbg !6963
  ret void, !dbg !6964

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6934, metadata !DIExpression()), !dbg !6945
  %18 = icmp ult i32 %17, %1, !dbg !6965
  br i1 %18, label %19, label %26, !dbg !6966

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6967
  %21 = load i8, i8* %20, align 1, !dbg !6967
  call void @llvm.dbg.value(metadata i8 %21, metadata !6936, metadata !DIExpression()), !dbg !6968
  %22 = zext i8 %21 to i32, !dbg !6969
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #26, !dbg !6970
  %24 = icmp eq i32 %23, 0, !dbg !6971
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6970
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.68, i32 0, i32 0), i32 noundef %25) #27, !dbg !6972
  br label %27, !dbg !6973

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.69, i32 0, i32 0)) #27, !dbg !6974
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6976
  call void @llvm.dbg.value(metadata i32 %28, metadata !6934, metadata !DIExpression()), !dbg !6945
  %29 = icmp eq i32 %28, 8, !dbg !6977
  br i1 %29, label %15, label %16, !dbg !6946, !llvm.loop !6978
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6982, metadata !DIExpression()), !dbg !6983
  %2 = add i32 %0, -32, !dbg !6984
  %3 = icmp ult i32 %2, 95, !dbg !6984
  %4 = zext i1 %3 to i32, !dbg !6984
  ret i32 %4, !dbg !6985
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_copy(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !6986 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6991, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata i32 %1, metadata !6992, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata i8* %2, metadata !6993, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.value(metadata i32 %3, metadata !6994, metadata !DIExpression()), !dbg !6995
  %5 = icmp ugt i32 %3, %1, !dbg !6996
  br i1 %5, label %8, label %6, !dbg !6998

6:                                                ; preds = %4
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %3) #27, !dbg !6999
  br label %8, !dbg !7001

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %3, %6 ], [ 0, %4 ], !dbg !7002
  ret i32 %9, !dbg !7003
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_set(i8* noundef %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !7004 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7008, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.value(metadata i8 %1, metadata !7009, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.value(metadata i32 %2, metadata !7010, metadata !DIExpression()), !dbg !7011
  %4 = zext i8 %1 to i32, !dbg !7012
  %5 = tail call i8* @memset(i8* noundef %0, i32 noundef %4, i32 noundef %2) #27, !dbg !7013
  ret void, !dbg !7014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @_double_byte(i8 noundef zeroext %0) local_unnamed_addr #3 !dbg !7015 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7019, metadata !DIExpression()), !dbg !7020
  %2 = shl i8 %0, 1, !dbg !7021
  %3 = icmp slt i8 %0, 0, !dbg !7022
  %4 = select i1 %3, i8 27, i8 0, !dbg !7022
  %5 = xor i8 %4, %2, !dbg !7023
  ret i8 %5, !dbg !7024
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @_compare(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !7025 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7029, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.value(metadata i8* %1, metadata !7030, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.value(metadata i32 %2, metadata !7031, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.value(metadata i8* %0, metadata !7032, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.value(metadata i8* %1, metadata !7033, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.value(metadata i8 0, metadata !7034, metadata !DIExpression()), !dbg !7037
  call void @llvm.dbg.value(metadata i32 0, metadata !7035, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.value(metadata i8 undef, metadata !7034, metadata !DIExpression()), !dbg !7037
  %4 = icmp eq i32 %2, 0, !dbg !7039
  br i1 %4, label %5, label %7, !dbg !7041

5:                                                ; preds = %7, %3
  %6 = phi i32 [ 0, %3 ], [ %16, %7 ]
  ret i32 %6, !dbg !7042

7:                                                ; preds = %3, %7
  %8 = phi i32 [ %17, %7 ], [ 0, %3 ]
  %9 = phi i32 [ %16, %7 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7035, metadata !DIExpression()), !dbg !7038
  %10 = getelementptr inbounds i8, i8* %0, i32 %8, !dbg !7043
  %11 = load i8, i8* %10, align 1, !dbg !7043
  %12 = getelementptr inbounds i8, i8* %1, i32 %8, !dbg !7045
  %13 = load i8, i8* %12, align 1, !dbg !7045
  %14 = xor i8 %13, %11, !dbg !7046
  %15 = zext i8 %14 to i32, !dbg !7046
  %16 = or i32 %9, %15, !dbg !7047
  call void @llvm.dbg.value(metadata i32 %16, metadata !7034, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7037
  %17 = add nuw i32 %8, 1, !dbg !7048
  call void @llvm.dbg.value(metadata i32 %17, metadata !7035, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.value(metadata i8 undef, metadata !7034, metadata !DIExpression()), !dbg !7037
  %18 = icmp eq i32 %17, %2, !dbg !7039
  br i1 %18, label %5, label %7, !dbg !7041, !llvm.loop !7049
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes128_set_decrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !7051 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7055, metadata !DIExpression()), !dbg !7057
  call void @llvm.dbg.value(metadata i8* %1, metadata !7056, metadata !DIExpression()), !dbg !7057
  %3 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef %1) #27, !dbg !7058
  ret i32 %3, !dbg !7059
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_decrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7060 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7065, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata i8* %1, metadata !7066, metadata !DIExpression()), !dbg !7070
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7067, metadata !DIExpression()), !dbg !7070
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7071
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7071
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7068, metadata !DIExpression()), !dbg !7072
  %6 = icmp eq i8* %0, null, !dbg !7073
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7075
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7075
  br i1 %10, label %23, label %11, !dbg !7075

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7076
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7077
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7078
  call void @llvm.dbg.value(metadata i32 9, metadata !7069, metadata !DIExpression()), !dbg !7070
  br label %14, !dbg !7079

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 9, %11 ], [ %18, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7069, metadata !DIExpression()), !dbg !7070
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7081
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7084
  %16 = shl i32 %15, 2, !dbg !7085
  %17 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %16, !dbg !7086
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %17) #26, !dbg !7087
  call fastcc void @inv_mix_columns(i8* noundef nonnull %5) #26, !dbg !7088
  %18 = add nsw i32 %15, -1, !dbg !7089
  call void @llvm.dbg.value(metadata i32 %18, metadata !7069, metadata !DIExpression()), !dbg !7070
  %19 = icmp eq i32 %18, 0, !dbg !7090
  br i1 %19, label %20, label %14, !dbg !7079, !llvm.loop !7091

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7093
  call fastcc void @inv_shift_rows(i8* noundef nonnull %5) #26, !dbg !7094
  call fastcc void @inv_sub_bytes(i8* noundef nonnull %5) #26, !dbg !7095
  call fastcc void @add_round_key(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7096
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7097
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7098
  br label %23, !dbg !7099

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7070
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7100
  ret i32 %24, !dbg !7100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7106, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i32* %1, metadata !7107, metadata !DIExpression()), !dbg !7108
  %3 = load i32, i32* %1, align 4, !dbg !7109
  %4 = lshr i32 %3, 24, !dbg !7110
  %5 = load i8, i8* %0, align 1, !dbg !7111
  %6 = trunc i32 %4 to i8, !dbg !7111
  %7 = xor i8 %5, %6, !dbg !7111
  store i8 %7, i8* %0, align 1, !dbg !7111
  %8 = load i32, i32* %1, align 4, !dbg !7112
  %9 = lshr i32 %8, 16, !dbg !7113
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7114
  %11 = load i8, i8* %10, align 1, !dbg !7115
  %12 = trunc i32 %9 to i8, !dbg !7115
  %13 = xor i8 %11, %12, !dbg !7115
  store i8 %13, i8* %10, align 1, !dbg !7115
  %14 = load i32, i32* %1, align 4, !dbg !7116
  %15 = lshr i32 %14, 8, !dbg !7117
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7118
  %17 = load i8, i8* %16, align 1, !dbg !7119
  %18 = trunc i32 %15 to i8, !dbg !7119
  %19 = xor i8 %17, %18, !dbg !7119
  store i8 %19, i8* %16, align 1, !dbg !7119
  %20 = load i32, i32* %1, align 4, !dbg !7120
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7121
  %22 = load i8, i8* %21, align 1, !dbg !7122
  %23 = trunc i32 %20 to i8, !dbg !7122
  %24 = xor i8 %22, %23, !dbg !7122
  store i8 %24, i8* %21, align 1, !dbg !7122
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7123
  %26 = load i32, i32* %25, align 4, !dbg !7123
  %27 = lshr i32 %26, 24, !dbg !7124
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7125
  %29 = load i8, i8* %28, align 1, !dbg !7126
  %30 = trunc i32 %27 to i8, !dbg !7126
  %31 = xor i8 %29, %30, !dbg !7126
  store i8 %31, i8* %28, align 1, !dbg !7126
  %32 = load i32, i32* %25, align 4, !dbg !7127
  %33 = lshr i32 %32, 16, !dbg !7128
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7129
  %35 = load i8, i8* %34, align 1, !dbg !7130
  %36 = trunc i32 %33 to i8, !dbg !7130
  %37 = xor i8 %35, %36, !dbg !7130
  store i8 %37, i8* %34, align 1, !dbg !7130
  %38 = load i32, i32* %25, align 4, !dbg !7131
  %39 = lshr i32 %38, 8, !dbg !7132
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7133
  %41 = load i8, i8* %40, align 1, !dbg !7134
  %42 = trunc i32 %39 to i8, !dbg !7134
  %43 = xor i8 %41, %42, !dbg !7134
  store i8 %43, i8* %40, align 1, !dbg !7134
  %44 = load i32, i32* %25, align 4, !dbg !7135
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7136
  %46 = load i8, i8* %45, align 1, !dbg !7137
  %47 = trunc i32 %44 to i8, !dbg !7137
  %48 = xor i8 %46, %47, !dbg !7137
  store i8 %48, i8* %45, align 1, !dbg !7137
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7138
  %50 = load i32, i32* %49, align 4, !dbg !7138
  %51 = lshr i32 %50, 24, !dbg !7139
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7140
  %53 = load i8, i8* %52, align 1, !dbg !7141
  %54 = trunc i32 %51 to i8, !dbg !7141
  %55 = xor i8 %53, %54, !dbg !7141
  store i8 %55, i8* %52, align 1, !dbg !7141
  %56 = load i32, i32* %49, align 4, !dbg !7142
  %57 = lshr i32 %56, 16, !dbg !7143
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7144
  %59 = load i8, i8* %58, align 1, !dbg !7145
  %60 = trunc i32 %57 to i8, !dbg !7145
  %61 = xor i8 %59, %60, !dbg !7145
  store i8 %61, i8* %58, align 1, !dbg !7145
  %62 = load i32, i32* %49, align 4, !dbg !7146
  %63 = lshr i32 %62, 8, !dbg !7147
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7148
  %65 = load i8, i8* %64, align 1, !dbg !7149
  %66 = trunc i32 %63 to i8, !dbg !7149
  %67 = xor i8 %65, %66, !dbg !7149
  store i8 %67, i8* %64, align 1, !dbg !7149
  %68 = load i32, i32* %49, align 4, !dbg !7150
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7151
  %70 = load i8, i8* %69, align 1, !dbg !7152
  %71 = trunc i32 %68 to i8, !dbg !7152
  %72 = xor i8 %70, %71, !dbg !7152
  store i8 %72, i8* %69, align 1, !dbg !7152
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7153
  %74 = load i32, i32* %73, align 4, !dbg !7153
  %75 = lshr i32 %74, 24, !dbg !7154
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7155
  %77 = load i8, i8* %76, align 1, !dbg !7156
  %78 = trunc i32 %75 to i8, !dbg !7156
  %79 = xor i8 %77, %78, !dbg !7156
  store i8 %79, i8* %76, align 1, !dbg !7156
  %80 = load i32, i32* %73, align 4, !dbg !7157
  %81 = lshr i32 %80, 16, !dbg !7158
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7159
  %83 = load i8, i8* %82, align 1, !dbg !7160
  %84 = trunc i32 %81 to i8, !dbg !7160
  %85 = xor i8 %83, %84, !dbg !7160
  store i8 %85, i8* %82, align 1, !dbg !7160
  %86 = load i32, i32* %73, align 4, !dbg !7161
  %87 = lshr i32 %86, 8, !dbg !7162
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7163
  %89 = load i8, i8* %88, align 1, !dbg !7164
  %90 = trunc i32 %87 to i8, !dbg !7164
  %91 = xor i8 %89, %90, !dbg !7164
  store i8 %91, i8* %88, align 1, !dbg !7164
  %92 = load i32, i32* %73, align 4, !dbg !7165
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7166
  %94 = load i8, i8* %93, align 1, !dbg !7167
  %95 = trunc i32 %92 to i8, !dbg !7167
  %96 = xor i8 %94, %95, !dbg !7167
  store i8 %96, i8* %93, align 1, !dbg !7167
  ret void, !dbg !7168
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7169 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7173, metadata !DIExpression()), !dbg !7175
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7176
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7176
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7174, metadata !DIExpression()), !dbg !7177
  %4 = load i8, i8* %0, align 1, !dbg !7178
  store i8 %4, i8* %3, align 1, !dbg !7179
  %5 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7180
  %6 = load i8, i8* %5, align 1, !dbg !7180
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7181
  store i8 %6, i8* %7, align 1, !dbg !7182
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7183
  %9 = load i8, i8* %8, align 1, !dbg !7183
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7184
  store i8 %9, i8* %10, align 1, !dbg !7185
  %11 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7186
  %12 = load i8, i8* %11, align 1, !dbg !7186
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7187
  store i8 %12, i8* %13, align 1, !dbg !7188
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7189
  %15 = load i8, i8* %14, align 1, !dbg !7189
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7190
  store i8 %15, i8* %16, align 1, !dbg !7191
  %17 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7192
  %18 = load i8, i8* %17, align 1, !dbg !7192
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7193
  store i8 %18, i8* %19, align 1, !dbg !7194
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7195
  %21 = load i8, i8* %20, align 1, !dbg !7195
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7196
  store i8 %21, i8* %22, align 1, !dbg !7197
  %23 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7198
  %24 = load i8, i8* %23, align 1, !dbg !7198
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7199
  store i8 %24, i8* %25, align 1, !dbg !7200
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7201
  %27 = load i8, i8* %26, align 1, !dbg !7201
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7202
  store i8 %27, i8* %28, align 1, !dbg !7203
  %29 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7204
  %30 = load i8, i8* %29, align 1, !dbg !7204
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7205
  store i8 %30, i8* %31, align 1, !dbg !7206
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7207
  %33 = load i8, i8* %32, align 1, !dbg !7207
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7208
  store i8 %33, i8* %34, align 1, !dbg !7209
  %35 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7210
  %36 = load i8, i8* %35, align 1, !dbg !7210
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7211
  store i8 %36, i8* %37, align 1, !dbg !7212
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7213
  %39 = load i8, i8* %38, align 1, !dbg !7213
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7214
  store i8 %39, i8* %40, align 1, !dbg !7215
  %41 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7216
  %42 = load i8, i8* %41, align 1, !dbg !7216
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7217
  store i8 %42, i8* %43, align 1, !dbg !7218
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7219
  %45 = load i8, i8* %44, align 1, !dbg !7219
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7220
  store i8 %45, i8* %46, align 1, !dbg !7221
  %47 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7222
  %48 = load i8, i8* %47, align 1, !dbg !7222
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7223
  store i8 %48, i8* %49, align 1, !dbg !7224
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7225
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7226
  ret void, !dbg !7226
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @inv_sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7227 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7229, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.value(metadata i32 0, metadata !7230, metadata !DIExpression()), !dbg !7231
  br label %2, !dbg !7232

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7230, metadata !DIExpression()), !dbg !7231
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7234
  %5 = load i8, i8* %4, align 1, !dbg !7234
  %6 = zext i8 %5 to i32, !dbg !7237
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @inv_sbox, i32 0, i32 %6, !dbg !7237
  %8 = load i8, i8* %7, align 1, !dbg !7237
  store i8 %8, i8* %4, align 1, !dbg !7238
  %9 = add nuw nsw i32 %3, 1, !dbg !7239
  call void @llvm.dbg.value(metadata i32 %9, metadata !7230, metadata !DIExpression()), !dbg !7231
  %10 = icmp eq i32 %9, 16, !dbg !7240
  br i1 %10, label %11, label %2, !dbg !7232, !llvm.loop !7241

11:                                               ; preds = %2
  ret void, !dbg !7243
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @inv_mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7244 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7246, metadata !DIExpression()), !dbg !7248
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7249
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7249
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7247, metadata !DIExpression()), !dbg !7250
  call fastcc void @mult_row_column(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7251
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7252
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7253
  call fastcc void @mult_row_column(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7254
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7255
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7256
  call fastcc void @mult_row_column(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7257
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7258
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7259
  call fastcc void @mult_row_column(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7260
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7261
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7262
  ret void, !dbg !7262
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7263 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7267, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8* %1, metadata !7268, metadata !DIExpression()), !dbg !7269
  %3 = load i8, i8* %1, align 1, !dbg !7270
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7270
  %5 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %4) #27, !dbg !7270
  %6 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %5) #27, !dbg !7270
  %7 = load i8, i8* %1, align 1, !dbg !7270
  %8 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %7) #27, !dbg !7270
  %9 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %8) #27, !dbg !7270
  %10 = load i8, i8* %1, align 1, !dbg !7270
  %11 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %10) #27, !dbg !7270
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7271
  %13 = load i8, i8* %12, align 1, !dbg !7271
  %14 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %13) #27, !dbg !7271
  %15 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %14) #27, !dbg !7271
  %16 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %15) #27, !dbg !7271
  %17 = load i8, i8* %12, align 1, !dbg !7271
  %18 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %17) #27, !dbg !7271
  %19 = load i8, i8* %12, align 1, !dbg !7271
  %20 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7272
  %21 = load i8, i8* %20, align 1, !dbg !7272
  %22 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %21) #27, !dbg !7272
  %23 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %22) #27, !dbg !7272
  %24 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %23) #27, !dbg !7272
  %25 = load i8, i8* %20, align 1, !dbg !7272
  %26 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %25) #27, !dbg !7272
  %27 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %26) #27, !dbg !7272
  %28 = load i8, i8* %20, align 1, !dbg !7272
  %29 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7273
  %30 = load i8, i8* %29, align 1, !dbg !7273
  %31 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %30) #27, !dbg !7273
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7273
  %33 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %32) #27, !dbg !7273
  %34 = load i8, i8* %29, align 1, !dbg !7273
  %35 = xor i8 %9, %6, !dbg !7273
  %36 = xor i8 %35, %11, !dbg !7272
  %37 = xor i8 %36, %16, !dbg !7272
  %38 = xor i8 %37, %18, !dbg !7271
  %39 = xor i8 %38, %19, !dbg !7271
  %40 = xor i8 %39, %24, !dbg !7270
  %41 = xor i8 %40, %27, !dbg !7270
  %42 = xor i8 %41, %28, !dbg !7274
  %43 = xor i8 %42, %33, !dbg !7275
  %44 = xor i8 %43, %34, !dbg !7276
  store i8 %44, i8* %0, align 1, !dbg !7277
  %45 = load i8, i8* %1, align 1, !dbg !7278
  %46 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %45) #27, !dbg !7278
  %47 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %46) #27, !dbg !7278
  %48 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %47) #27, !dbg !7278
  %49 = load i8, i8* %1, align 1, !dbg !7278
  %50 = load i8, i8* %12, align 1, !dbg !7279
  %51 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %50) #27, !dbg !7279
  %52 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %51) #27, !dbg !7279
  %53 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %52) #27, !dbg !7279
  %54 = load i8, i8* %12, align 1, !dbg !7279
  %55 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %54) #27, !dbg !7279
  %56 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %55) #27, !dbg !7279
  %57 = load i8, i8* %12, align 1, !dbg !7279
  %58 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %57) #27, !dbg !7279
  %59 = load i8, i8* %20, align 1, !dbg !7280
  %60 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %59) #27, !dbg !7280
  %61 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %60) #27, !dbg !7280
  %62 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %61) #27, !dbg !7280
  %63 = load i8, i8* %20, align 1, !dbg !7280
  %64 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %63) #27, !dbg !7280
  %65 = load i8, i8* %20, align 1, !dbg !7280
  %66 = load i8, i8* %29, align 1, !dbg !7281
  %67 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %66) #27, !dbg !7281
  %68 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %67) #27, !dbg !7281
  %69 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %68) #27, !dbg !7281
  %70 = load i8, i8* %29, align 1, !dbg !7281
  %71 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %70) #27, !dbg !7281
  %72 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %71) #27, !dbg !7281
  %73 = load i8, i8* %29, align 1, !dbg !7281
  %74 = xor i8 %49, %48, !dbg !7281
  %75 = xor i8 %74, %53, !dbg !7281
  %76 = xor i8 %75, %56, !dbg !7280
  %77 = xor i8 %76, %58, !dbg !7280
  %78 = xor i8 %77, %62, !dbg !7279
  %79 = xor i8 %78, %64, !dbg !7279
  %80 = xor i8 %79, %65, !dbg !7278
  %81 = xor i8 %80, %69, !dbg !7282
  %82 = xor i8 %81, %72, !dbg !7283
  %83 = xor i8 %82, %73, !dbg !7284
  %84 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7285
  store i8 %83, i8* %84, align 1, !dbg !7286
  %85 = load i8, i8* %1, align 1, !dbg !7287
  %86 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %85) #27, !dbg !7287
  %87 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %86) #27, !dbg !7287
  %88 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %87) #27, !dbg !7287
  %89 = load i8, i8* %1, align 1, !dbg !7287
  %90 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %89) #27, !dbg !7287
  %91 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %90) #27, !dbg !7287
  %92 = load i8, i8* %1, align 1, !dbg !7287
  %93 = load i8, i8* %12, align 1, !dbg !7288
  %94 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %93) #27, !dbg !7288
  %95 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %94) #27, !dbg !7288
  %96 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %95) #27, !dbg !7288
  %97 = load i8, i8* %12, align 1, !dbg !7288
  %98 = load i8, i8* %20, align 1, !dbg !7289
  %99 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %98) #27, !dbg !7289
  %100 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %99) #27, !dbg !7289
  %101 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %100) #27, !dbg !7289
  %102 = load i8, i8* %20, align 1, !dbg !7289
  %103 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %102) #27, !dbg !7289
  %104 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %103) #27, !dbg !7289
  %105 = load i8, i8* %20, align 1, !dbg !7289
  %106 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %105) #27, !dbg !7289
  %107 = load i8, i8* %29, align 1, !dbg !7290
  %108 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %107) #27, !dbg !7290
  %109 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %108) #27, !dbg !7290
  %110 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %109) #27, !dbg !7290
  %111 = load i8, i8* %29, align 1, !dbg !7290
  %112 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %111) #27, !dbg !7290
  %113 = load i8, i8* %29, align 1, !dbg !7290
  %114 = xor i8 %91, %88, !dbg !7290
  %115 = xor i8 %114, %92, !dbg !7290
  %116 = xor i8 %115, %96, !dbg !7289
  %117 = xor i8 %116, %97, !dbg !7289
  %118 = xor i8 %117, %101, !dbg !7288
  %119 = xor i8 %118, %104, !dbg !7287
  %120 = xor i8 %119, %106, !dbg !7287
  %121 = xor i8 %120, %110, !dbg !7291
  %122 = xor i8 %121, %112, !dbg !7292
  %123 = xor i8 %122, %113, !dbg !7293
  %124 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7294
  store i8 %123, i8* %124, align 1, !dbg !7295
  %125 = load i8, i8* %1, align 1, !dbg !7296
  %126 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %125) #27, !dbg !7296
  %127 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %126) #27, !dbg !7296
  %128 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %127) #27, !dbg !7296
  %129 = load i8, i8* %1, align 1, !dbg !7296
  %130 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %129) #27, !dbg !7296
  %131 = load i8, i8* %1, align 1, !dbg !7296
  %132 = load i8, i8* %12, align 1, !dbg !7297
  %133 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %132) #27, !dbg !7297
  %134 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %133) #27, !dbg !7297
  %135 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %134) #27, !dbg !7297
  %136 = load i8, i8* %12, align 1, !dbg !7297
  %137 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %136) #27, !dbg !7297
  %138 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %137) #27, !dbg !7297
  %139 = load i8, i8* %12, align 1, !dbg !7297
  %140 = load i8, i8* %20, align 1, !dbg !7298
  %141 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %140) #27, !dbg !7298
  %142 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %141) #27, !dbg !7298
  %143 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %142) #27, !dbg !7298
  %144 = load i8, i8* %20, align 1, !dbg !7298
  %145 = load i8, i8* %29, align 1, !dbg !7299
  %146 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %145) #27, !dbg !7299
  %147 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %146) #27, !dbg !7299
  %148 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %147) #27, !dbg !7299
  %149 = load i8, i8* %29, align 1, !dbg !7299
  %150 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %149) #27, !dbg !7299
  %151 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %150) #27, !dbg !7299
  %152 = load i8, i8* %29, align 1, !dbg !7299
  %153 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %152) #27, !dbg !7299
  %154 = xor i8 %130, %128, !dbg !7299
  %155 = xor i8 %154, %131, !dbg !7299
  %156 = xor i8 %155, %135, !dbg !7298
  %157 = xor i8 %156, %138, !dbg !7297
  %158 = xor i8 %157, %139, !dbg !7297
  %159 = xor i8 %158, %143, !dbg !7296
  %160 = xor i8 %159, %144, !dbg !7296
  %161 = xor i8 %160, %148, !dbg !7300
  %162 = xor i8 %161, %151, !dbg !7301
  %163 = xor i8 %162, %153, !dbg !7302
  %164 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7303
  store i8 %163, i8* %164, align 1, !dbg !7304
  ret void, !dbg !7305
}

; Function Attrs: nofree noinline nosync nounwind optsize
define dso_local i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef %0, i8* noundef readonly %1) local_unnamed_addr #16 !dbg !7306 {
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %0, metadata !7310, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.value(metadata i8* %1, metadata !7311, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.declare(metadata [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, metadata !7312, metadata !DIExpression()), !dbg !7317
  %3 = icmp eq %struct.tc_aes_key_sched_struct* %0, null, !dbg !7318
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4, !dbg !7320
  br i1 %5, label %80, label %9, !dbg !7320

6:                                                ; preds = %9
  call void @llvm.dbg.value(metadata i32 4, metadata !7314, metadata !DIExpression()), !dbg !7316
  %7 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4, !dbg !7321
  br label %36, !dbg !7325

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %34, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !7314, metadata !DIExpression()), !dbg !7316
  %11 = shl nuw nsw i32 %10, 2, !dbg !7326
  %12 = getelementptr inbounds i8, i8* %1, i32 %11, !dbg !7330
  %13 = load i8, i8* %12, align 1, !dbg !7330
  %14 = zext i8 %13 to i32, !dbg !7330
  %15 = shl nuw i32 %14, 24, !dbg !7331
  %16 = or i32 %11, 1, !dbg !7332
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7333
  %18 = load i8, i8* %17, align 1, !dbg !7333
  %19 = zext i8 %18 to i32, !dbg !7333
  %20 = shl nuw nsw i32 %19, 16, !dbg !7334
  %21 = or i32 %20, %15, !dbg !7335
  %22 = or i32 %11, 2, !dbg !7336
  %23 = getelementptr inbounds i8, i8* %1, i32 %22, !dbg !7337
  %24 = load i8, i8* %23, align 1, !dbg !7337
  %25 = zext i8 %24 to i32, !dbg !7337
  %26 = shl nuw nsw i32 %25, 8, !dbg !7338
  %27 = or i32 %21, %26, !dbg !7339
  %28 = or i32 %11, 3, !dbg !7340
  %29 = getelementptr inbounds i8, i8* %1, i32 %28, !dbg !7341
  %30 = load i8, i8* %29, align 1, !dbg !7341
  %31 = zext i8 %30 to i32, !dbg !7342
  %32 = or i32 %27, %31, !dbg !7343
  %33 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %10, !dbg !7344
  store i32 %32, i32* %33, align 4, !dbg !7345
  %34 = add nuw nsw i32 %10, 1, !dbg !7346
  call void @llvm.dbg.value(metadata i32 %34, metadata !7314, metadata !DIExpression()), !dbg !7316
  %35 = icmp eq i32 %34, 4, !dbg !7347
  br i1 %35, label %6, label %9, !dbg !7348, !llvm.loop !7349

36:                                               ; preds = %6, %71
  %37 = phi i32 [ %76, %71 ], [ %8, %6 ], !dbg !7321
  %38 = phi i32 [ %78, %71 ], [ 4, %6 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7314, metadata !DIExpression()), !dbg !7316
  call void @llvm.dbg.value(metadata i32 %37, metadata !7315, metadata !DIExpression()), !dbg !7316
  %39 = and i32 %38, 3, !dbg !7351
  %40 = icmp eq i32 %39, 0, !dbg !7353
  br i1 %40, label %41, label %71, !dbg !7354

41:                                               ; preds = %36
  %42 = tail call fastcc i32 @rotword(i32 noundef %37) #26, !dbg !7355
  %43 = lshr i32 %42, 24, !dbg !7355
  %44 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %43, !dbg !7355
  %45 = load i8, i8* %44, align 1, !dbg !7355
  %46 = zext i8 %45 to i32, !dbg !7355
  %47 = shl nuw i32 %46, 24, !dbg !7355
  %48 = lshr i32 %42, 16, !dbg !7355
  %49 = and i32 %48, 255, !dbg !7355
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %49, !dbg !7355
  %51 = load i8, i8* %50, align 1, !dbg !7355
  %52 = zext i8 %51 to i32, !dbg !7355
  %53 = shl nuw nsw i32 %52, 16, !dbg !7355
  %54 = or i32 %53, %47, !dbg !7355
  %55 = lshr i32 %42, 8, !dbg !7355
  %56 = and i32 %55, 255, !dbg !7355
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %56, !dbg !7355
  %58 = load i8, i8* %57, align 1, !dbg !7355
  %59 = zext i8 %58 to i32, !dbg !7355
  %60 = shl nuw nsw i32 %59, 8, !dbg !7355
  %61 = or i32 %54, %60, !dbg !7355
  %62 = and i32 %42, 255, !dbg !7355
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %62, !dbg !7355
  %64 = load i8, i8* %63, align 1, !dbg !7355
  %65 = zext i8 %64 to i32, !dbg !7355
  %66 = or i32 %61, %65, !dbg !7355
  %67 = lshr i32 %38, 2, !dbg !7357
  %68 = getelementptr inbounds [11 x i32], [11 x i32]* @__const.tc_aes128_set_encrypt_key.rconst, i32 0, i32 %67, !dbg !7358
  %69 = load i32, i32* %68, align 4, !dbg !7358
  %70 = xor i32 %66, %69, !dbg !7359
  call void @llvm.dbg.value(metadata i32 %70, metadata !7315, metadata !DIExpression()), !dbg !7316
  br label %71, !dbg !7360

71:                                               ; preds = %41, %36
  %72 = phi i32 [ %70, %41 ], [ %37, %36 ], !dbg !7361
  call void @llvm.dbg.value(metadata i32 %72, metadata !7315, metadata !DIExpression()), !dbg !7316
  %73 = add nsw i32 %38, -4, !dbg !7362
  %74 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %73, !dbg !7363
  %75 = load i32, i32* %74, align 4, !dbg !7363
  %76 = xor i32 %75, %72, !dbg !7364
  %77 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %0, i32 0, i32 0, i32 %38, !dbg !7365
  store i32 %76, i32* %77, align 4, !dbg !7366
  %78 = add nuw nsw i32 %38, 1, !dbg !7367
  call void @llvm.dbg.value(metadata i32 %78, metadata !7314, metadata !DIExpression()), !dbg !7316
  %79 = icmp eq i32 %78, 44, !dbg !7368
  br i1 %79, label %80, label %36, !dbg !7325, !llvm.loop !7369

80:                                               ; preds = %71, %2
  %81 = phi i32 [ 0, %2 ], [ 1, %71 ], !dbg !7316
  ret i32 %81, !dbg !7371
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @rotword(i32 noundef %0) unnamed_addr #13 !dbg !7372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7376, metadata !DIExpression()), !dbg !7377
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 8), !dbg !7378
  ret i32 %2, !dbg !7379
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_aes_encrypt(i8* noundef %0, i8* noundef %1, %struct.tc_aes_key_sched_struct* noundef readonly %2) local_unnamed_addr #1 !dbg !7380 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7385, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata i8* %1, metadata !7386, metadata !DIExpression()), !dbg !7390
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %2, metadata !7387, metadata !DIExpression()), !dbg !7390
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !7391
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7391
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !7388, metadata !DIExpression()), !dbg !7392
  %6 = icmp eq i8* %0, null, !dbg !7393
  %7 = icmp eq i8* %1, null
  %8 = or i1 %6, %7, !dbg !7395
  %9 = icmp eq %struct.tc_aes_key_sched_struct* %2, null
  %10 = or i1 %8, %9, !dbg !7395
  br i1 %10, label %23, label %11, !dbg !7395

11:                                               ; preds = %3
  %12 = call i32 @_copy(i8* noundef nonnull %5, i32 noundef 16, i8* noundef nonnull %1, i32 noundef 16) #27, !dbg !7396
  %13 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 0, !dbg !7397
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %13) #26, !dbg !7398
  call void @llvm.dbg.value(metadata i32 0, metadata !7389, metadata !DIExpression()), !dbg !7390
  br label %14, !dbg !7399

14:                                               ; preds = %11, %14
  %15 = phi i32 [ 0, %11 ], [ %16, %14 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7389, metadata !DIExpression()), !dbg !7390
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7401
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7404
  call fastcc void @mix_columns(i8* noundef nonnull %5) #26, !dbg !7405
  %16 = add nuw nsw i32 %15, 1, !dbg !7406
  %17 = shl nuw nsw i32 %16, 2, !dbg !7407
  %18 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 %17, !dbg !7408
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %18) #26, !dbg !7409
  call void @llvm.dbg.value(metadata i32 %16, metadata !7389, metadata !DIExpression()), !dbg !7390
  %19 = icmp eq i32 %16, 9, !dbg !7410
  br i1 %19, label %20, label %14, !dbg !7399, !llvm.loop !7411

20:                                               ; preds = %14
  call fastcc void @sub_bytes(i8* noundef nonnull %5) #26, !dbg !7413
  call fastcc void @shift_rows(i8* noundef nonnull %5) #26, !dbg !7414
  %21 = getelementptr inbounds %struct.tc_aes_key_sched_struct, %struct.tc_aes_key_sched_struct* %2, i32 0, i32 0, i32 40, !dbg !7415
  call fastcc void @add_round_key.72(i8* noundef nonnull %5, i32* noundef nonnull %21) #26, !dbg !7416
  %22 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %5, i32 noundef 16) #27, !dbg !7417
  call void @_set(i8* noundef nonnull %5, i8 noundef zeroext 0, i32 noundef 16) #27, !dbg !7418
  br label %23, !dbg !7419

23:                                               ; preds = %3, %20
  %24 = phi i32 [ 1, %20 ], [ 0, %3 ], !dbg !7390
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #25, !dbg !7420
  ret i32 %24, !dbg !7420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @add_round_key.72(i8* nocapture noundef %0, i32* nocapture noundef readonly %1) unnamed_addr #11 !dbg !7421 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32* %1, metadata !7424, metadata !DIExpression()), !dbg !7425
  %3 = load i32, i32* %1, align 4, !dbg !7426
  %4 = lshr i32 %3, 24, !dbg !7427
  %5 = load i8, i8* %0, align 1, !dbg !7428
  %6 = trunc i32 %4 to i8, !dbg !7428
  %7 = xor i8 %5, %6, !dbg !7428
  store i8 %7, i8* %0, align 1, !dbg !7428
  %8 = load i32, i32* %1, align 4, !dbg !7429
  %9 = lshr i32 %8, 16, !dbg !7430
  %10 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7431
  %11 = load i8, i8* %10, align 1, !dbg !7432
  %12 = trunc i32 %9 to i8, !dbg !7432
  %13 = xor i8 %11, %12, !dbg !7432
  store i8 %13, i8* %10, align 1, !dbg !7432
  %14 = load i32, i32* %1, align 4, !dbg !7433
  %15 = lshr i32 %14, 8, !dbg !7434
  %16 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7435
  %17 = load i8, i8* %16, align 1, !dbg !7436
  %18 = trunc i32 %15 to i8, !dbg !7436
  %19 = xor i8 %17, %18, !dbg !7436
  store i8 %19, i8* %16, align 1, !dbg !7436
  %20 = load i32, i32* %1, align 4, !dbg !7437
  %21 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7438
  %22 = load i8, i8* %21, align 1, !dbg !7439
  %23 = trunc i32 %20 to i8, !dbg !7439
  %24 = xor i8 %22, %23, !dbg !7439
  store i8 %24, i8* %21, align 1, !dbg !7439
  %25 = getelementptr inbounds i32, i32* %1, i32 1, !dbg !7440
  %26 = load i32, i32* %25, align 4, !dbg !7440
  %27 = lshr i32 %26, 24, !dbg !7441
  %28 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7442
  %29 = load i8, i8* %28, align 1, !dbg !7443
  %30 = trunc i32 %27 to i8, !dbg !7443
  %31 = xor i8 %29, %30, !dbg !7443
  store i8 %31, i8* %28, align 1, !dbg !7443
  %32 = load i32, i32* %25, align 4, !dbg !7444
  %33 = lshr i32 %32, 16, !dbg !7445
  %34 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7446
  %35 = load i8, i8* %34, align 1, !dbg !7447
  %36 = trunc i32 %33 to i8, !dbg !7447
  %37 = xor i8 %35, %36, !dbg !7447
  store i8 %37, i8* %34, align 1, !dbg !7447
  %38 = load i32, i32* %25, align 4, !dbg !7448
  %39 = lshr i32 %38, 8, !dbg !7449
  %40 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7450
  %41 = load i8, i8* %40, align 1, !dbg !7451
  %42 = trunc i32 %39 to i8, !dbg !7451
  %43 = xor i8 %41, %42, !dbg !7451
  store i8 %43, i8* %40, align 1, !dbg !7451
  %44 = load i32, i32* %25, align 4, !dbg !7452
  %45 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7453
  %46 = load i8, i8* %45, align 1, !dbg !7454
  %47 = trunc i32 %44 to i8, !dbg !7454
  %48 = xor i8 %46, %47, !dbg !7454
  store i8 %48, i8* %45, align 1, !dbg !7454
  %49 = getelementptr inbounds i32, i32* %1, i32 2, !dbg !7455
  %50 = load i32, i32* %49, align 4, !dbg !7455
  %51 = lshr i32 %50, 24, !dbg !7456
  %52 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7457
  %53 = load i8, i8* %52, align 1, !dbg !7458
  %54 = trunc i32 %51 to i8, !dbg !7458
  %55 = xor i8 %53, %54, !dbg !7458
  store i8 %55, i8* %52, align 1, !dbg !7458
  %56 = load i32, i32* %49, align 4, !dbg !7459
  %57 = lshr i32 %56, 16, !dbg !7460
  %58 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7461
  %59 = load i8, i8* %58, align 1, !dbg !7462
  %60 = trunc i32 %57 to i8, !dbg !7462
  %61 = xor i8 %59, %60, !dbg !7462
  store i8 %61, i8* %58, align 1, !dbg !7462
  %62 = load i32, i32* %49, align 4, !dbg !7463
  %63 = lshr i32 %62, 8, !dbg !7464
  %64 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7465
  %65 = load i8, i8* %64, align 1, !dbg !7466
  %66 = trunc i32 %63 to i8, !dbg !7466
  %67 = xor i8 %65, %66, !dbg !7466
  store i8 %67, i8* %64, align 1, !dbg !7466
  %68 = load i32, i32* %49, align 4, !dbg !7467
  %69 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7468
  %70 = load i8, i8* %69, align 1, !dbg !7469
  %71 = trunc i32 %68 to i8, !dbg !7469
  %72 = xor i8 %70, %71, !dbg !7469
  store i8 %72, i8* %69, align 1, !dbg !7469
  %73 = getelementptr inbounds i32, i32* %1, i32 3, !dbg !7470
  %74 = load i32, i32* %73, align 4, !dbg !7470
  %75 = lshr i32 %74, 24, !dbg !7471
  %76 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7472
  %77 = load i8, i8* %76, align 1, !dbg !7473
  %78 = trunc i32 %75 to i8, !dbg !7473
  %79 = xor i8 %77, %78, !dbg !7473
  store i8 %79, i8* %76, align 1, !dbg !7473
  %80 = load i32, i32* %73, align 4, !dbg !7474
  %81 = lshr i32 %80, 16, !dbg !7475
  %82 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7476
  %83 = load i8, i8* %82, align 1, !dbg !7477
  %84 = trunc i32 %81 to i8, !dbg !7477
  %85 = xor i8 %83, %84, !dbg !7477
  store i8 %85, i8* %82, align 1, !dbg !7477
  %86 = load i32, i32* %73, align 4, !dbg !7478
  %87 = lshr i32 %86, 8, !dbg !7479
  %88 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7480
  %89 = load i8, i8* %88, align 1, !dbg !7481
  %90 = trunc i32 %87 to i8, !dbg !7481
  %91 = xor i8 %89, %90, !dbg !7481
  store i8 %91, i8* %88, align 1, !dbg !7481
  %92 = load i32, i32* %73, align 4, !dbg !7482
  %93 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7483
  %94 = load i8, i8* %93, align 1, !dbg !7484
  %95 = trunc i32 %92 to i8, !dbg !7484
  %96 = xor i8 %94, %95, !dbg !7484
  store i8 %96, i8* %93, align 1, !dbg !7484
  ret void, !dbg !7485
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @sub_bytes(i8* nocapture noundef %0) unnamed_addr #14 !dbg !7486 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7488, metadata !DIExpression()), !dbg !7490
  call void @llvm.dbg.value(metadata i32 0, metadata !7489, metadata !DIExpression()), !dbg !7490
  br label %2, !dbg !7491

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %9, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7489, metadata !DIExpression()), !dbg !7490
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7493
  %5 = load i8, i8* %4, align 1, !dbg !7493
  %6 = zext i8 %5 to i32, !dbg !7496
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* @sbox, i32 0, i32 %6, !dbg !7496
  %8 = load i8, i8* %7, align 1, !dbg !7496
  store i8 %8, i8* %4, align 1, !dbg !7497
  %9 = add nuw nsw i32 %3, 1, !dbg !7498
  call void @llvm.dbg.value(metadata i32 %9, metadata !7489, metadata !DIExpression()), !dbg !7490
  %10 = icmp eq i32 %9, 16, !dbg !7499
  br i1 %10, label %11, label %2, !dbg !7491, !llvm.loop !7500

11:                                               ; preds = %2
  ret void, !dbg !7502
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @shift_rows(i8* noundef %0) unnamed_addr #1 !dbg !7503 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7505, metadata !DIExpression()), !dbg !7507
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7508
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7508
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7506, metadata !DIExpression()), !dbg !7509
  %4 = load i8, i8* %0, align 1, !dbg !7510
  store i8 %4, i8* %3, align 1, !dbg !7511
  %5 = getelementptr inbounds i8, i8* %0, i32 5, !dbg !7512
  %6 = load i8, i8* %5, align 1, !dbg !7512
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 1, !dbg !7513
  store i8 %6, i8* %7, align 1, !dbg !7514
  %8 = getelementptr inbounds i8, i8* %0, i32 10, !dbg !7515
  %9 = load i8, i8* %8, align 1, !dbg !7515
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 2, !dbg !7516
  store i8 %9, i8* %10, align 1, !dbg !7517
  %11 = getelementptr inbounds i8, i8* %0, i32 15, !dbg !7518
  %12 = load i8, i8* %11, align 1, !dbg !7518
  %13 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 3, !dbg !7519
  store i8 %12, i8* %13, align 1, !dbg !7520
  %14 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7521
  %15 = load i8, i8* %14, align 1, !dbg !7521
  %16 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7522
  store i8 %15, i8* %16, align 1, !dbg !7523
  %17 = getelementptr inbounds i8, i8* %0, i32 9, !dbg !7524
  %18 = load i8, i8* %17, align 1, !dbg !7524
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 5, !dbg !7525
  store i8 %18, i8* %19, align 1, !dbg !7526
  %20 = getelementptr inbounds i8, i8* %0, i32 14, !dbg !7527
  %21 = load i8, i8* %20, align 1, !dbg !7527
  %22 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 6, !dbg !7528
  store i8 %21, i8* %22, align 1, !dbg !7529
  %23 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7530
  %24 = load i8, i8* %23, align 1, !dbg !7530
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 7, !dbg !7531
  store i8 %24, i8* %25, align 1, !dbg !7532
  %26 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7533
  %27 = load i8, i8* %26, align 1, !dbg !7533
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7534
  store i8 %27, i8* %28, align 1, !dbg !7535
  %29 = getelementptr inbounds i8, i8* %0, i32 13, !dbg !7536
  %30 = load i8, i8* %29, align 1, !dbg !7536
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 9, !dbg !7537
  store i8 %30, i8* %31, align 1, !dbg !7538
  %32 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7539
  %33 = load i8, i8* %32, align 1, !dbg !7539
  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 10, !dbg !7540
  store i8 %33, i8* %34, align 1, !dbg !7541
  %35 = getelementptr inbounds i8, i8* %0, i32 7, !dbg !7542
  %36 = load i8, i8* %35, align 1, !dbg !7542
  %37 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 11, !dbg !7543
  store i8 %36, i8* %37, align 1, !dbg !7544
  %38 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7545
  %39 = load i8, i8* %38, align 1, !dbg !7545
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7546
  store i8 %39, i8* %40, align 1, !dbg !7547
  %41 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7548
  %42 = load i8, i8* %41, align 1, !dbg !7548
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 13, !dbg !7549
  store i8 %42, i8* %43, align 1, !dbg !7550
  %44 = getelementptr inbounds i8, i8* %0, i32 6, !dbg !7551
  %45 = load i8, i8* %44, align 1, !dbg !7551
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 14, !dbg !7552
  store i8 %45, i8* %46, align 1, !dbg !7553
  %47 = getelementptr inbounds i8, i8* %0, i32 11, !dbg !7554
  %48 = load i8, i8* %47, align 1, !dbg !7554
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 15, !dbg !7555
  store i8 %48, i8* %49, align 1, !dbg !7556
  %50 = call i32 @_copy(i8* noundef nonnull %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7557
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7558
  ret void, !dbg !7558
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mix_columns(i8* noundef %0) unnamed_addr #1 !dbg !7559 {
  %2 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7561, metadata !DIExpression()), !dbg !7563
  %3 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !7564
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7564
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !7562, metadata !DIExpression()), !dbg !7565
  call fastcc void @mult_row_column.73(i8* noundef nonnull %3, i8* noundef %0) #26, !dbg !7566
  %4 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 4, !dbg !7567
  %5 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !7568
  call fastcc void @mult_row_column.73(i8* noundef nonnull %4, i8* noundef nonnull %5) #26, !dbg !7569
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 8, !dbg !7570
  %7 = getelementptr inbounds i8, i8* %0, i32 8, !dbg !7571
  call fastcc void @mult_row_column.73(i8* noundef nonnull %6, i8* noundef nonnull %7) #26, !dbg !7572
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 12, !dbg !7573
  %9 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !7574
  call fastcc void @mult_row_column.73(i8* noundef nonnull %8, i8* noundef nonnull %9) #26, !dbg !7575
  %10 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef nonnull %3, i32 noundef 16) #27, !dbg !7576
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #25, !dbg !7577
  ret void, !dbg !7577
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mult_row_column.73(i8* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7578 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7580, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.value(metadata i8* %1, metadata !7581, metadata !DIExpression()), !dbg !7582
  %3 = load i8, i8* %1, align 1, !dbg !7583
  %4 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %3) #27, !dbg !7584
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !7585
  %6 = load i8, i8* %5, align 1, !dbg !7585
  %7 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %6) #27, !dbg !7585
  %8 = load i8, i8* %5, align 1, !dbg !7585
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !7586
  %10 = load i8, i8* %9, align 1, !dbg !7586
  %11 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !7587
  %12 = load i8, i8* %11, align 1, !dbg !7587
  %13 = xor i8 %7, %4, !dbg !7585
  %14 = xor i8 %13, %8, !dbg !7588
  %15 = xor i8 %14, %10, !dbg !7589
  %16 = xor i8 %15, %12, !dbg !7590
  store i8 %16, i8* %0, align 1, !dbg !7591
  %17 = load i8, i8* %1, align 1, !dbg !7592
  %18 = load i8, i8* %5, align 1, !dbg !7593
  %19 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %18) #27, !dbg !7594
  %20 = load i8, i8* %9, align 1, !dbg !7595
  %21 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %20) #27, !dbg !7595
  %22 = load i8, i8* %9, align 1, !dbg !7595
  %23 = load i8, i8* %11, align 1, !dbg !7596
  %24 = xor i8 %19, %17, !dbg !7595
  %25 = xor i8 %24, %21, !dbg !7597
  %26 = xor i8 %25, %22, !dbg !7598
  %27 = xor i8 %26, %23, !dbg !7599
  %28 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7600
  store i8 %27, i8* %28, align 1, !dbg !7601
  %29 = load i8, i8* %1, align 1, !dbg !7602
  %30 = load i8, i8* %5, align 1, !dbg !7603
  %31 = load i8, i8* %9, align 1, !dbg !7604
  %32 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %31) #27, !dbg !7605
  %33 = load i8, i8* %11, align 1, !dbg !7606
  %34 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %33) #27, !dbg !7606
  %35 = load i8, i8* %11, align 1, !dbg !7606
  %36 = xor i8 %30, %29, !dbg !7606
  %37 = xor i8 %36, %32, !dbg !7607
  %38 = xor i8 %37, %34, !dbg !7608
  %39 = xor i8 %38, %35, !dbg !7609
  %40 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !7610
  store i8 %39, i8* %40, align 1, !dbg !7611
  %41 = load i8, i8* %1, align 1, !dbg !7612
  %42 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %41) #27, !dbg !7612
  %43 = load i8, i8* %1, align 1, !dbg !7612
  %44 = xor i8 %43, %42, !dbg !7612
  %45 = load i8, i8* %5, align 1, !dbg !7613
  %46 = xor i8 %44, %45, !dbg !7614
  %47 = load i8, i8* %9, align 1, !dbg !7615
  %48 = xor i8 %46, %47, !dbg !7616
  %49 = load i8, i8* %11, align 1, !dbg !7617
  %50 = tail call zeroext i8 @_double_byte(i8 noundef zeroext %49) #27, !dbg !7618
  %51 = xor i8 %48, %50, !dbg !7619
  %52 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !7620
  store i8 %51, i8* %52, align 1, !dbg !7621
  ret void, !dbg !7622
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_encrypt(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7623 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7629, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %1, metadata !7630, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %2, metadata !7631, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %3, metadata !7632, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %4, metadata !7633, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7634, metadata !DIExpression()), !dbg !7638
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7639
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7639
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7635, metadata !DIExpression()), !dbg !7640
  %9 = icmp eq i8* %0, null, !dbg !7641
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7643
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7643
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7643
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7643
  %18 = xor i1 %17, true, !dbg !7643
  %19 = or i32 %3, %1, !dbg !7643
  %20 = and i32 %19, 15, !dbg !7643
  %21 = icmp eq i32 %20, 0, !dbg !7643
  %22 = and i1 %21, %18, !dbg !7643
  %23 = add i32 %3, 16
  %24 = icmp eq i32 %23, %1
  %25 = and i1 %24, %22, !dbg !7643
  br i1 %25, label %26, label %52, !dbg !7643

26:                                               ; preds = %6
  %27 = call i32 @_copy(i8* noundef nonnull %8, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7644
  %28 = call i32 @_copy(i8* noundef %0, i32 noundef 16, i8* noundef %4, i32 noundef 16) #27, !dbg !7645
  call void @llvm.dbg.value(metadata i8* %0, metadata !7629, metadata !DIExpression(DW_OP_plus_uconst, 16, DW_OP_stack_value)), !dbg !7638
  call void @llvm.dbg.value(metadata i32 0, metadata !7637, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 0, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %2, metadata !7631, metadata !DIExpression()), !dbg !7638
  br i1 %14, label %52, label %29, !dbg !7646

29:                                               ; preds = %26
  %30 = getelementptr inbounds i8, i8* %0, i32 16, !dbg !7648
  call void @llvm.dbg.value(metadata i8* %30, metadata !7629, metadata !DIExpression()), !dbg !7638
  br label %31, !dbg !7646

31:                                               ; preds = %29, %47
  %32 = phi i32 [ %49, %47 ], [ 0, %29 ]
  %33 = phi i32 [ %50, %47 ], [ 0, %29 ]
  %34 = phi i8* [ %48, %47 ], [ %30, %29 ]
  %35 = phi i8* [ %36, %47 ], [ %2, %29 ]
  call void @llvm.dbg.value(metadata i32 %32, metadata !7637, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 %33, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %34, metadata !7629, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %35, metadata !7631, metadata !DIExpression()), !dbg !7638
  %36 = getelementptr inbounds i8, i8* %35, i32 1, !dbg !7649
  call void @llvm.dbg.value(metadata i8* %36, metadata !7631, metadata !DIExpression()), !dbg !7638
  %37 = load i8, i8* %35, align 1, !dbg !7652
  %38 = add i32 %32, 1, !dbg !7653
  call void @llvm.dbg.value(metadata i32 %38, metadata !7637, metadata !DIExpression()), !dbg !7638
  %39 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %32, !dbg !7654
  %40 = load i8, i8* %39, align 1, !dbg !7655
  %41 = xor i8 %40, %37, !dbg !7655
  store i8 %41, i8* %39, align 1, !dbg !7655
  %42 = icmp eq i32 %38, 16, !dbg !7656
  br i1 %42, label %43, label %47, !dbg !7658

43:                                               ; preds = %31
  %44 = call i32 @tc_aes_encrypt(i8* noundef nonnull %8, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7659
  %45 = call i32 @_copy(i8* noundef %34, i32 noundef 16, i8* noundef nonnull %8, i32 noundef 16) #27, !dbg !7661
  %46 = getelementptr inbounds i8, i8* %34, i32 16, !dbg !7662
  call void @llvm.dbg.value(metadata i8* %46, metadata !7629, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i32 0, metadata !7637, metadata !DIExpression()), !dbg !7638
  br label %47, !dbg !7663

47:                                               ; preds = %31, %43
  %48 = phi i8* [ %46, %43 ], [ %34, %31 ], !dbg !7638
  %49 = phi i32 [ 0, %43 ], [ %38, %31 ], !dbg !7664
  call void @llvm.dbg.value(metadata i32 %49, metadata !7637, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %48, metadata !7629, metadata !DIExpression()), !dbg !7638
  %50 = add nuw i32 %33, 1, !dbg !7665
  call void @llvm.dbg.value(metadata i32 %50, metadata !7636, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %36, metadata !7631, metadata !DIExpression()), !dbg !7638
  %51 = icmp eq i32 %50, %3, !dbg !7666
  br i1 %51, label %52, label %31, !dbg !7646, !llvm.loop !7667

52:                                               ; preds = %47, %26, %6
  %53 = phi i32 [ 0, %6 ], [ 1, %26 ], [ 1, %47 ], !dbg !7638
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7669
  ret i32 %53, !dbg !7669
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_cbc_mode_decrypt(i8* noundef writeonly %0, i32 noundef %1, i8* noundef %2, i32 noundef %3, i8* nocapture noundef readonly %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7670 {
  %7 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7672, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i32 %1, metadata !7673, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i8* %2, metadata !7674, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i32 %3, metadata !7675, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i8* %4, metadata !7676, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7677, metadata !DIExpression()), !dbg !7682
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7683
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7683
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7678, metadata !DIExpression()), !dbg !7684
  %9 = icmp eq i8* %0, null, !dbg !7685
  %10 = icmp eq i8* %2, null
  %11 = or i1 %9, %10, !dbg !7687
  %12 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %13 = or i1 %11, %12, !dbg !7687
  %14 = icmp eq i32 %3, 0
  %15 = or i1 %14, %13, !dbg !7687
  %16 = icmp eq i32 %1, 0
  %17 = or i1 %16, %15, !dbg !7687
  %18 = xor i1 %17, true, !dbg !7687
  %19 = or i32 %3, %1, !dbg !7687
  %20 = and i32 %19, 15, !dbg !7687
  %21 = icmp eq i32 %20, 0, !dbg !7687
  %22 = and i1 %21, %18, !dbg !7687
  %23 = icmp eq i32 %1, %3
  %24 = and i1 %23, %22, !dbg !7687
  %25 = xor i1 %24, true, !dbg !7687
  %26 = or i1 %14, %25, !dbg !7687
  %27 = zext i1 %24 to i32, !dbg !7687
  br i1 %26, label %51, label %28, !dbg !7687

28:                                               ; preds = %6, %39
  %29 = phi i32 [ %42, %39 ], [ 0, %6 ]
  %30 = phi i32 [ %49, %39 ], [ 0, %6 ]
  %31 = phi i8* [ %45, %39 ], [ %4, %6 ]
  %32 = phi i8* [ %48, %39 ], [ %0, %6 ]
  %33 = phi i8* [ %40, %39 ], [ %2, %6 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !7681, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i32 %30, metadata !7680, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i8* %31, metadata !7679, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i8* %32, metadata !7672, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i8* %33, metadata !7674, metadata !DIExpression()), !dbg !7682
  %34 = and i32 %30, 15, !dbg !7688
  %35 = icmp eq i32 %34, 0, !dbg !7693
  br i1 %35, label %36, label %39, !dbg !7694

36:                                               ; preds = %28
  %37 = call i32 @tc_aes_decrypt(i8* noundef nonnull %8, i8* noundef %33, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7695
  %38 = getelementptr inbounds i8, i8* %33, i32 16, !dbg !7697
  call void @llvm.dbg.value(metadata i8* %38, metadata !7674, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i32 0, metadata !7681, metadata !DIExpression()), !dbg !7682
  br label %39, !dbg !7698

39:                                               ; preds = %36, %28
  %40 = phi i8* [ %38, %36 ], [ %33, %28 ]
  %41 = phi i32 [ 0, %36 ], [ %29, %28 ], !dbg !7699
  call void @llvm.dbg.value(metadata i32 %41, metadata !7681, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.value(metadata i8* %40, metadata !7674, metadata !DIExpression()), !dbg !7682
  %42 = add i32 %41, 1, !dbg !7700
  call void @llvm.dbg.value(metadata i32 %42, metadata !7681, metadata !DIExpression()), !dbg !7682
  %43 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %41, !dbg !7701
  %44 = load i8, i8* %43, align 1, !dbg !7701
  %45 = getelementptr inbounds i8, i8* %31, i32 1, !dbg !7702
  call void @llvm.dbg.value(metadata i8* %45, metadata !7679, metadata !DIExpression()), !dbg !7682
  %46 = load i8, i8* %31, align 1, !dbg !7703
  %47 = xor i8 %46, %44, !dbg !7704
  %48 = getelementptr inbounds i8, i8* %32, i32 1, !dbg !7705
  call void @llvm.dbg.value(metadata i8* %48, metadata !7672, metadata !DIExpression()), !dbg !7682
  store i8 %47, i8* %32, align 1, !dbg !7706
  %49 = add nuw i32 %30, 1, !dbg !7707
  call void @llvm.dbg.value(metadata i32 %49, metadata !7680, metadata !DIExpression()), !dbg !7682
  %50 = icmp eq i32 %49, %3, !dbg !7708
  br i1 %50, label %51, label %28, !dbg !7709, !llvm.loop !7710

51:                                               ; preds = %39, %6
  %52 = phi i32 [ %27, %6 ], [ 1, %39 ], !dbg !7682
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !7712
  ret i32 %52, !dbg !7712
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) local_unnamed_addr #1 !dbg !7713 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7719, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 %1, metadata !7720, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %2, metadata !7721, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 %3, metadata !7722, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %4, metadata !7723, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7724, metadata !DIExpression()), !dbg !7729
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7730
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7730
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7725, metadata !DIExpression()), !dbg !7731
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7732
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7732
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7726, metadata !DIExpression()), !dbg !7733
  %11 = icmp eq i8* %0, null, !dbg !7734
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7736
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7736
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7736
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7736
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7736
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7736
  br i1 %23, label %86, label %24, !dbg !7736

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7737
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 12, !dbg !7738
  %27 = load i8, i8* %26, align 1, !dbg !7738
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 13, !dbg !7739
  %29 = load i8, i8* %28, align 1, !dbg !7739
  %30 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7740
  %31 = load i8, i8* %30, align 1, !dbg !7740
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7741
  %33 = load i8, i8* %32, align 1, !dbg !7741
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i8 %27), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  call void @llvm.dbg.value(metadata i32 0, metadata !7728, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %0, metadata !7719, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %2, metadata !7721, metadata !DIExpression()), !dbg !7729
  %34 = zext i8 %29 to i32, !dbg !7739
  call void @llvm.dbg.value(metadata !DIArgList(i32 %34, i8 %33, i8 %31, i8 %27), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %35 = shl nuw nsw i32 %34, 16, !dbg !7742
  call void @llvm.dbg.value(metadata !DIArgList(i32 %35, i8 %33, i8 %31, i8 %27), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %36 = zext i8 %27 to i32, !dbg !7738
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %36), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %37 = shl nuw i32 %36, 24, !dbg !7743
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i8 %31, i32 %37), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %38 = or i32 %35, %37, !dbg !7744
  call void @llvm.dbg.value(metadata !DIArgList(i32 %38, i8 %33, i8 %31), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %39 = zext i8 %31 to i32, !dbg !7740
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %39, i8 %27), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %40 = shl nuw nsw i32 %39, 8, !dbg !7745
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i8 %33, i32 %40, i8 %27), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %41 = or i32 %38, %40, !dbg !7746
  call void @llvm.dbg.value(metadata !DIArgList(i32 %41, i8 %33), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %42 = zext i8 %33 to i32, !dbg !7747
  call void @llvm.dbg.value(metadata !DIArgList(i8 %29, i32 %42, i8 %31, i8 %27), metadata !7727, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 16, DW_OP_shl, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 24, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7729
  %43 = or i32 %41, %42, !dbg !7748
  call void @llvm.dbg.value(metadata i32 %43, metadata !7727, metadata !DIExpression()), !dbg !7729
  br label %44, !dbg !7749

44:                                               ; preds = %24, %67
  %45 = phi i8 [ %68, %67 ], [ %33, %24 ]
  %46 = phi i8 [ %69, %67 ], [ %31, %24 ]
  %47 = phi i8 [ %70, %67 ], [ %29, %24 ]
  %48 = phi i8 [ %71, %67 ], [ %27, %24 ]
  %49 = phi i32 [ %79, %67 ], [ 0, %24 ]
  %50 = phi i32 [ %72, %67 ], [ %43, %24 ]
  %51 = phi i8* [ %78, %67 ], [ %0, %24 ]
  %52 = phi i8* [ %75, %67 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7728, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i32 %50, metadata !7727, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %51, metadata !7719, metadata !DIExpression()), !dbg !7729
  call void @llvm.dbg.value(metadata i8* %52, metadata !7721, metadata !DIExpression()), !dbg !7729
  %53 = and i32 %49, 15, !dbg !7751
  %54 = icmp eq i32 %53, 0, !dbg !7755
  br i1 %54, label %55, label %67, !dbg !7756

55:                                               ; preds = %44
  %56 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7757
  %57 = icmp eq i32 %56, 0, !dbg !7757
  br i1 %57, label %86, label %58, !dbg !7760

58:                                               ; preds = %55
  %59 = add i32 %50, 1, !dbg !7761
  call void @llvm.dbg.value(metadata i32 %59, metadata !7727, metadata !DIExpression()), !dbg !7729
  %60 = lshr i32 %59, 24, !dbg !7763
  %61 = trunc i32 %60 to i8, !dbg !7764
  store i8 %61, i8* %26, align 1, !dbg !7765
  %62 = lshr i32 %59, 16, !dbg !7766
  %63 = trunc i32 %62 to i8, !dbg !7767
  store i8 %63, i8* %28, align 1, !dbg !7768
  %64 = lshr i32 %59, 8, !dbg !7769
  %65 = trunc i32 %64 to i8, !dbg !7770
  store i8 %65, i8* %30, align 1, !dbg !7771
  %66 = trunc i32 %59 to i8, !dbg !7772
  store i8 %66, i8* %32, align 1, !dbg !7773
  br label %67, !dbg !7774

67:                                               ; preds = %58, %44
  %68 = phi i8 [ %66, %58 ], [ %45, %44 ]
  %69 = phi i8 [ %65, %58 ], [ %46, %44 ]
  %70 = phi i8 [ %63, %58 ], [ %47, %44 ]
  %71 = phi i8 [ %61, %58 ], [ %48, %44 ]
  %72 = phi i32 [ %59, %58 ], [ %50, %44 ], !dbg !7729
  call void @llvm.dbg.value(metadata i32 %72, metadata !7727, metadata !DIExpression()), !dbg !7729
  %73 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %53, !dbg !7775
  %74 = load i8, i8* %73, align 1, !dbg !7775
  %75 = getelementptr inbounds i8, i8* %52, i32 1, !dbg !7776
  call void @llvm.dbg.value(metadata i8* %75, metadata !7721, metadata !DIExpression()), !dbg !7729
  %76 = load i8, i8* %52, align 1, !dbg !7777
  %77 = xor i8 %76, %74, !dbg !7778
  %78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !7779
  call void @llvm.dbg.value(metadata i8* %78, metadata !7719, metadata !DIExpression()), !dbg !7729
  store i8 %77, i8* %51, align 1, !dbg !7780
  %79 = add nuw i32 %49, 1, !dbg !7781
  call void @llvm.dbg.value(metadata i32 %79, metadata !7728, metadata !DIExpression()), !dbg !7729
  %80 = icmp eq i32 %79, %3, !dbg !7782
  br i1 %80, label %81, label %44, !dbg !7749, !llvm.loop !7783

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %4, i32 12, !dbg !7785
  store i8 %71, i8* %82, align 1, !dbg !7786
  %83 = getelementptr inbounds i8, i8* %4, i32 13, !dbg !7787
  store i8 %70, i8* %83, align 1, !dbg !7788
  %84 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !7789
  store i8 %69, i8* %84, align 1, !dbg !7790
  %85 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !7791
  store i8 %68, i8* %85, align 1, !dbg !7792
  br label %86, !dbg !7793

86:                                               ; preds = %55, %6, %81
  %87 = phi i32 [ 1, %81 ], [ 0, %6 ], [ 0, %55 ], !dbg !7729
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7794
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7794
  ret i32 %87, !dbg !7794
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef writeonly %0, %struct.tc_aes_key_sched_struct* noundef %1, i8* noundef %2, i32 noundef %3, i32 noundef %4) local_unnamed_addr #9 !dbg !7795 {
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %0, metadata !7800, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %1, metadata !7801, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i8* %2, metadata !7802, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 %3, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.value(metadata i32 %4, metadata !7804, metadata !DIExpression()), !dbg !7805
  %6 = icmp eq %struct.tc_ccm_mode_struct* %0, null, !dbg !7806
  %7 = icmp eq %struct.tc_aes_key_sched_struct* %1, null
  %8 = or i1 %6, %7, !dbg !7808
  %9 = icmp eq i8* %2, null
  %10 = or i1 %8, %9, !dbg !7808
  %11 = icmp ne i32 %3, 13
  %12 = or i1 %10, %11, !dbg !7808
  br i1 %12, label %23, label %13, !dbg !7808

13:                                               ; preds = %5
  %14 = add i32 %4, -4, !dbg !7809
  %15 = icmp ult i32 %14, 13, !dbg !7809
  %16 = and i32 %4, 1
  %17 = icmp eq i32 %16, 0
  %18 = and i1 %15, %17, !dbg !7809
  br i1 %18, label %19, label %23, !dbg !7809

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 2, !dbg !7812
  store i32 %4, i32* %20, align 4, !dbg !7813
  %21 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 0, !dbg !7814
  store %struct.tc_aes_key_sched_struct* %1, %struct.tc_aes_key_sched_struct** %21, align 4, !dbg !7815
  %22 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %0, i32 0, i32 1, !dbg !7816
  store i8* %2, i8** %22, align 4, !dbg !7817
  br label %23, !dbg !7818

23:                                               ; preds = %13, %5, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %5 ], [ 0, %13 ], !dbg !7805
  ret i32 %24, !dbg !7819
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_generation_encryption(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !7820 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7824, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 %1, metadata !7825, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i8* %2, metadata !7826, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 %3, metadata !7827, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i8* %4, metadata !7828, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i32 %5, metadata !7829, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !7830, metadata !DIExpression()), !dbg !7834
  %10 = icmp eq i8* %0, null, !dbg !7835
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !7837
  br i1 %12, label %85, label %13, !dbg !7837

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !7838
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !7839
  br i1 %16, label %85, label %17, !dbg !7839

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !7840
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !7841
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !7841
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !7841
  br i1 %24, label %85, label %25, !dbg !7841

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !7842
  %27 = load i32, i32* %26, align 4, !dbg !7842
  %28 = add i32 %27, %5, !dbg !7843
  %29 = icmp ugt i32 %28, %1, !dbg !7844
  br i1 %29, label %85, label %30, !dbg !7845

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7846
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7846
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7831, metadata !DIExpression()), !dbg !7847
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !7848
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7848
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !7832, metadata !DIExpression()), !dbg !7849
  %33 = select i1 %18, i32 64, i32 0, !dbg !7850
  %34 = shl i32 %27, 2, !dbg !7851
  %35 = add i32 %34, 248, !dbg !7851
  %36 = and i32 %35, 248, !dbg !7851
  %37 = or i32 %36, %33, !dbg !7852
  %38 = trunc i32 %37 to i8, !dbg !7853
  %39 = or i8 %38, 1, !dbg !7853
  store i8 %39, i8* %31, align 1, !dbg !7854
  call void @llvm.dbg.value(metadata i32 1, metadata !7833, metadata !DIExpression()), !dbg !7834
  %40 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %41 = load i8*, i8** %40, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !7833, metadata !DIExpression()), !dbg !7834
  br label %42, !dbg !7855

42:                                               ; preds = %30, %42
  %43 = phi i32 [ 1, %30 ], [ %48, %42 ]
  call void @llvm.dbg.value(metadata i32 %43, metadata !7833, metadata !DIExpression()), !dbg !7834
  %44 = add nsw i32 %43, -1, !dbg !7857
  %45 = getelementptr inbounds i8, i8* %41, i32 %44, !dbg !7860
  %46 = load i8, i8* %45, align 1, !dbg !7860
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %43, !dbg !7861
  store i8 %46, i8* %47, align 1, !dbg !7862
  %48 = add nuw nsw i32 %43, 1, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %48, metadata !7833, metadata !DIExpression()), !dbg !7834
  %49 = icmp eq i32 %48, 14, !dbg !7864
  br i1 %49, label %50, label %42, !dbg !7855, !llvm.loop !7865

50:                                               ; preds = %42
  %51 = lshr i32 %5, 8, !dbg !7867
  %52 = trunc i32 %51 to i8, !dbg !7868
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7869
  store i8 %52, i8* %53, align 1, !dbg !7870
  %54 = trunc i32 %5 to i8, !dbg !7871
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7872
  store i8 %54, i8* %55, align 1, !dbg !7873
  %56 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !7874
  %57 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7874
  %58 = call i32 @tc_aes_encrypt(i8* noundef nonnull %32, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %57) #27, !dbg !7875
  br i1 %18, label %59, label %61, !dbg !7876

59:                                               ; preds = %50
  %60 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7877
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %60) #26, !dbg !7880
  br label %61, !dbg !7881

61:                                               ; preds = %59, %50
  br i1 %14, label %62, label %64, !dbg !7882

62:                                               ; preds = %61
  %63 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7883
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %32, i8* noundef %4, i32 noundef %5, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %63) #26, !dbg !7886
  br label %64, !dbg !7887

64:                                               ; preds = %62, %61
  store i8 1, i8* %31, align 1, !dbg !7888
  store i8 0, i8* %55, align 1, !dbg !7889
  store i8 0, i8* %53, align 1, !dbg !7890
  %65 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7891
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %5, i8* noundef %4, i32 noundef %5, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %65) #26, !dbg !7892
  store i8 0, i8* %55, align 1, !dbg !7893
  store i8 0, i8* %53, align 1, !dbg !7894
  %66 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %56, align 4, !dbg !7895
  %67 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %66) #27, !dbg !7896
  call void @llvm.dbg.value(metadata !DIArgList(i8* %0, i32 %5), metadata !7824, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7834
  call void @llvm.dbg.value(metadata i32 0, metadata !7833, metadata !DIExpression()), !dbg !7834
  %68 = load i32, i32* %26, align 4, !dbg !7897
  %69 = icmp eq i32 %68, 0, !dbg !7900
  br i1 %69, label %84, label %70, !dbg !7901

70:                                               ; preds = %64
  %71 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !7902
  call void @llvm.dbg.value(metadata i8* %71, metadata !7824, metadata !DIExpression()), !dbg !7834
  br label %72, !dbg !7901

72:                                               ; preds = %70, %72
  %73 = phi i32 [ %81, %72 ], [ 0, %70 ]
  %74 = phi i8* [ %80, %72 ], [ %71, %70 ]
  call void @llvm.dbg.value(metadata i32 %73, metadata !7833, metadata !DIExpression()), !dbg !7834
  call void @llvm.dbg.value(metadata i8* %74, metadata !7824, metadata !DIExpression()), !dbg !7834
  %75 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %73, !dbg !7903
  %76 = load i8, i8* %75, align 1, !dbg !7903
  %77 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %73, !dbg !7905
  %78 = load i8, i8* %77, align 1, !dbg !7905
  %79 = xor i8 %78, %76, !dbg !7906
  %80 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !7907
  call void @llvm.dbg.value(metadata i8* %80, metadata !7824, metadata !DIExpression()), !dbg !7834
  store i8 %79, i8* %74, align 1, !dbg !7908
  %81 = add nuw i32 %73, 1, !dbg !7909
  call void @llvm.dbg.value(metadata i32 %81, metadata !7833, metadata !DIExpression()), !dbg !7834
  %82 = load i32, i32* %26, align 4, !dbg !7897
  %83 = icmp ult i32 %81, %82, !dbg !7900
  br i1 %83, label %72, label %84, !dbg !7901, !llvm.loop !7910

84:                                               ; preds = %72, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !7912
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !7912
  br label %85

85:                                               ; preds = %7, %25, %13, %17, %84
  %86 = phi i32 [ 1, %84 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !7834
  ret i32 %86, !dbg !7912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_cbc_mac(i8* noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, i32 noundef %3, %struct.tc_aes_key_sched_struct* noundef %4) unnamed_addr #1 !dbg !7913 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7917, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %1, metadata !7918, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 %2, metadata !7919, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 %3, metadata !7920, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %4, metadata !7921, metadata !DIExpression()), !dbg !7923
  %6 = icmp eq i32 %3, 0, !dbg !7924
  br i1 %6, label %17, label %7, !dbg !7926

7:                                                ; preds = %5
  %8 = lshr i32 %2, 8, !dbg !7927
  %9 = load i8, i8* %0, align 1, !dbg !7929
  %10 = trunc i32 %8 to i8, !dbg !7929
  %11 = xor i8 %9, %10, !dbg !7929
  store i8 %11, i8* %0, align 1, !dbg !7929
  %12 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !7930
  %13 = load i8, i8* %12, align 1, !dbg !7931
  %14 = trunc i32 %2 to i8, !dbg !7931
  %15 = xor i8 %13, %14, !dbg !7931
  store i8 %15, i8* %12, align 1, !dbg !7931
  %16 = add i32 %2, 2, !dbg !7932
  call void @llvm.dbg.value(metadata i32 %16, metadata !7919, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 2, metadata !7922, metadata !DIExpression()), !dbg !7923
  br label %17, !dbg !7933

17:                                               ; preds = %5, %7
  %18 = phi i32 [ %16, %7 ], [ %2, %5 ]
  %19 = phi i32 [ 2, %7 ], [ 0, %5 ], !dbg !7934
  call void @llvm.dbg.value(metadata i32 %19, metadata !7922, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 %18, metadata !7919, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %1, metadata !7918, metadata !DIExpression()), !dbg !7923
  %20 = icmp ult i32 %19, %18, !dbg !7935
  br i1 %20, label %21, label %39, !dbg !7936

21:                                               ; preds = %17, %37
  %22 = phi i32 [ %26, %37 ], [ %19, %17 ]
  %23 = phi i8* [ %24, %37 ], [ %1, %17 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7922, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %23, metadata !7918, metadata !DIExpression()), !dbg !7923
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !7937
  call void @llvm.dbg.value(metadata i8* %24, metadata !7918, metadata !DIExpression()), !dbg !7923
  %25 = load i8, i8* %23, align 1, !dbg !7939
  %26 = add i32 %22, 1, !dbg !7940
  call void @llvm.dbg.value(metadata i32 %26, metadata !7922, metadata !DIExpression()), !dbg !7923
  %27 = and i32 %22, 15, !dbg !7941
  %28 = getelementptr inbounds i8, i8* %0, i32 %27, !dbg !7942
  %29 = load i8, i8* %28, align 1, !dbg !7943
  %30 = xor i8 %29, %25, !dbg !7943
  store i8 %30, i8* %28, align 1, !dbg !7943
  %31 = and i32 %26, 15, !dbg !7944
  %32 = icmp eq i32 %31, 0, !dbg !7946
  %33 = icmp eq i32 %18, %26
  %34 = or i1 %33, %32, !dbg !7947
  br i1 %34, label %35, label %37, !dbg !7947

35:                                               ; preds = %21
  %36 = tail call i32 @tc_aes_encrypt(i8* noundef nonnull %0, i8* noundef nonnull %0, %struct.tc_aes_key_sched_struct* noundef %4) #27, !dbg !7948
  br label %37, !dbg !7950

37:                                               ; preds = %21, %35
  call void @llvm.dbg.value(metadata i32 %26, metadata !7922, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %24, metadata !7918, metadata !DIExpression()), !dbg !7923
  %38 = icmp eq i32 %26, %18, !dbg !7935
  br i1 %38, label %39, label %21, !dbg !7936, !llvm.loop !7951

39:                                               ; preds = %37, %17
  ret void, !dbg !7953
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ccm_ctr_mode(i8* noundef writeonly %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, %struct.tc_aes_key_sched_struct* noundef %5) unnamed_addr #1 !dbg !7954 {
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7959, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %1, metadata !7960, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %2, metadata !7961, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i32 %3, metadata !7962, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %4, metadata !7963, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata %struct.tc_aes_key_sched_struct* %5, metadata !7964, metadata !DIExpression()), !dbg !7969
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !7970
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #25, !dbg !7970
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !7965, metadata !DIExpression()), !dbg !7971
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !7972
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #25, !dbg !7972
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !7966, metadata !DIExpression()), !dbg !7973
  %11 = icmp eq i8* %0, null, !dbg !7974
  %12 = icmp eq i8* %2, null
  %13 = or i1 %11, %12, !dbg !7976
  %14 = icmp eq i8* %4, null
  %15 = or i1 %13, %14, !dbg !7976
  %16 = icmp eq %struct.tc_aes_key_sched_struct* %5, null
  %17 = or i1 %15, %16, !dbg !7976
  %18 = icmp eq i32 %3, 0
  %19 = or i1 %18, %17, !dbg !7976
  %20 = icmp eq i32 %1, 0
  %21 = or i1 %20, %19, !dbg !7976
  %22 = icmp ne i32 %1, %3
  %23 = or i1 %22, %21, !dbg !7976
  br i1 %23, label %63, label %24, !dbg !7976

24:                                               ; preds = %6
  %25 = call i32 @_copy(i8* noundef nonnull %10, i32 noundef 16, i8* noundef nonnull %4, i32 noundef 16) #27, !dbg !7977
  %26 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !7978
  %27 = load i8, i8* %26, align 1, !dbg !7978
  %28 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !7979
  %29 = load i8, i8* %28, align 1, !dbg !7979
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i8 %29), metadata !7967, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7969
  call void @llvm.dbg.value(metadata i32 0, metadata !7968, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %0, metadata !7959, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %2, metadata !7961, metadata !DIExpression()), !dbg !7969
  %30 = zext i8 %27 to i16, !dbg !7978
  call void @llvm.dbg.value(metadata !DIArgList(i16 %30, i8 %29), metadata !7967, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7969
  %31 = shl nuw i16 %30, 8, !dbg !7980
  call void @llvm.dbg.value(metadata !DIArgList(i16 %31, i8 %29), metadata !7967, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !7969
  %32 = zext i8 %29 to i16, !dbg !7981
  call void @llvm.dbg.value(metadata !DIArgList(i8 %27, i16 %32), metadata !7967, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7969
  %33 = or i16 %31, %32, !dbg !7982
  call void @llvm.dbg.value(metadata i16 %33, metadata !7967, metadata !DIExpression()), !dbg !7969
  br label %34, !dbg !7983

34:                                               ; preds = %24, %48
  %35 = phi i32 [ %56, %48 ], [ 0, %24 ]
  %36 = phi i16 [ %49, %48 ], [ %33, %24 ]
  %37 = phi i8* [ %55, %48 ], [ %0, %24 ]
  %38 = phi i8* [ %52, %48 ], [ %2, %24 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !7968, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i16 %36, metadata !7967, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %37, metadata !7959, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.value(metadata i8* %38, metadata !7961, metadata !DIExpression()), !dbg !7969
  %39 = and i32 %35, 15, !dbg !7985
  %40 = icmp eq i32 %39, 0, !dbg !7989
  br i1 %40, label %41, label %48, !dbg !7990

41:                                               ; preds = %34
  %42 = add i16 %36, 1, !dbg !7991
  call void @llvm.dbg.value(metadata i16 %42, metadata !7967, metadata !DIExpression()), !dbg !7969
  %43 = lshr i16 %42, 8, !dbg !7993
  %44 = trunc i16 %43 to i8, !dbg !7994
  store i8 %44, i8* %26, align 1, !dbg !7995
  %45 = trunc i16 %42 to i8, !dbg !7996
  store i8 %45, i8* %28, align 1, !dbg !7997
  %46 = call i32 @tc_aes_encrypt(i8* noundef nonnull %9, i8* noundef nonnull %10, %struct.tc_aes_key_sched_struct* noundef %5) #27, !dbg !7998
  %47 = icmp eq i32 %46, 0, !dbg !7998
  br i1 %47, label %63, label %48, !dbg !8000

48:                                               ; preds = %41, %34
  %49 = phi i16 [ %42, %41 ], [ %36, %34 ], !dbg !7969
  call void @llvm.dbg.value(metadata i16 %49, metadata !7967, metadata !DIExpression()), !dbg !7969
  %50 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %39, !dbg !8001
  %51 = load i8, i8* %50, align 1, !dbg !8001
  %52 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !8002
  call void @llvm.dbg.value(metadata i8* %52, metadata !7961, metadata !DIExpression()), !dbg !7969
  %53 = load i8, i8* %38, align 1, !dbg !8003
  %54 = xor i8 %53, %51, !dbg !8004
  %55 = getelementptr inbounds i8, i8* %37, i32 1, !dbg !8005
  call void @llvm.dbg.value(metadata i8* %55, metadata !7959, metadata !DIExpression()), !dbg !7969
  store i8 %54, i8* %37, align 1, !dbg !8006
  %56 = add nuw i32 %35, 1, !dbg !8007
  call void @llvm.dbg.value(metadata i32 %56, metadata !7968, metadata !DIExpression()), !dbg !7969
  %57 = icmp eq i32 %56, %3, !dbg !8008
  br i1 %57, label %58, label %34, !dbg !7983, !llvm.loop !8009

58:                                               ; preds = %48
  %59 = load i8, i8* %26, align 1, !dbg !8011
  %60 = load i8, i8* %28, align 1, !dbg !8012
  %61 = getelementptr inbounds i8, i8* %4, i32 14, !dbg !8013
  store i8 %59, i8* %61, align 1, !dbg !8014
  %62 = getelementptr inbounds i8, i8* %4, i32 15, !dbg !8015
  store i8 %60, i8* %62, align 1, !dbg !8016
  br label %63, !dbg !8017

63:                                               ; preds = %41, %6, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #25, !dbg !8018
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #25, !dbg !8018
  ret void, !dbg !8018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @tc_ccm_decryption_verification(i8* noundef %0, i32 noundef %1, i8* noundef readonly %2, i32 noundef %3, i8* noundef %4, i32 noundef %5, %struct.tc_ccm_mode_struct* noundef readonly %6) local_unnamed_addr #1 !dbg !8019 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8021, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %1, metadata !8022, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %2, metadata !8023, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %3, metadata !8024, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %4, metadata !8025, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %5, metadata !8026, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata %struct.tc_ccm_mode_struct* %6, metadata !8027, metadata !DIExpression()), !dbg !8031
  %10 = icmp eq i8* %0, null, !dbg !8032
  %11 = icmp eq %struct.tc_ccm_mode_struct* %6, null
  %12 = or i1 %10, %11, !dbg !8034
  br i1 %12, label %106, label %13, !dbg !8034

13:                                               ; preds = %7
  %14 = icmp ne i32 %5, 0, !dbg !8035
  %15 = icmp eq i8* %4, null
  %16 = and i1 %15, %14, !dbg !8036
  br i1 %16, label %106, label %17, !dbg !8036

17:                                               ; preds = %13
  %18 = icmp ne i32 %3, 0, !dbg !8037
  %19 = icmp eq i8* %2, null
  %20 = and i1 %19, %18, !dbg !8038
  %21 = icmp ugt i32 %3, 65279
  %22 = or i1 %21, %20, !dbg !8038
  %23 = icmp ugt i32 %5, 65535
  %24 = or i1 %22, %23, !dbg !8038
  br i1 %24, label %106, label %25, !dbg !8038

25:                                               ; preds = %17
  %26 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 2, !dbg !8039
  %27 = load i32, i32* %26, align 4, !dbg !8039
  %28 = sub i32 %5, %27, !dbg !8040
  %29 = icmp ugt i32 %28, %1, !dbg !8041
  br i1 %29, label %106, label %30, !dbg !8042

30:                                               ; preds = %25
  %31 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !8043
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8043
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !8028, metadata !DIExpression()), !dbg !8044
  %32 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !8045
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8045
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !8029, metadata !DIExpression()), !dbg !8046
  store i8 1, i8* %31, align 1, !dbg !8047
  call void @llvm.dbg.value(metadata i32 1, metadata !8030, metadata !DIExpression()), !dbg !8031
  %33 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 1
  %34 = load i8*, i8** %33, align 4
  call void @llvm.dbg.value(metadata i32 1, metadata !8030, metadata !DIExpression()), !dbg !8031
  br label %35, !dbg !8048

35:                                               ; preds = %30, %35
  %36 = phi i32 [ 1, %30 ], [ %41, %35 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !8030, metadata !DIExpression()), !dbg !8031
  %37 = add nsw i32 %36, -1, !dbg !8050
  %38 = getelementptr inbounds i8, i8* %34, i32 %37, !dbg !8053
  %39 = load i8, i8* %38, align 1, !dbg !8053
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %36, !dbg !8054
  store i8 %39, i8* %40, align 1, !dbg !8055
  %41 = add nuw nsw i32 %36, 1, !dbg !8056
  call void @llvm.dbg.value(metadata i32 %41, metadata !8030, metadata !DIExpression()), !dbg !8031
  %42 = icmp eq i32 %41, 14, !dbg !8057
  br i1 %42, label %43, label %35, !dbg !8048, !llvm.loop !8058

43:                                               ; preds = %35
  %44 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 15, !dbg !8060
  store i8 0, i8* %44, align 1, !dbg !8061
  %45 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 14, !dbg !8062
  store i8 0, i8* %45, align 1, !dbg !8063
  %46 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %6, i32 0, i32 0, !dbg !8064
  %47 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8064
  call fastcc void @ccm_ctr_mode(i8* noundef %0, i32 noundef %28, i8* noundef %4, i32 noundef %28, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %47) #26, !dbg !8065
  store i8 0, i8* %44, align 1, !dbg !8066
  store i8 0, i8* %45, align 1, !dbg !8067
  %48 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8068
  %49 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %48) #27, !dbg !8069
  call void @llvm.dbg.value(metadata i32 0, metadata !8030, metadata !DIExpression()), !dbg !8031
  %50 = load i32, i32* %26, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !8030, metadata !DIExpression()), !dbg !8031
  %51 = icmp eq i32 %50, 0, !dbg !8070
  br i1 %51, label %66, label %52, !dbg !8073

52:                                               ; preds = %43
  %53 = getelementptr inbounds i8, i8* %4, i32 %5
  %54 = sub i32 0, %50
  %55 = getelementptr inbounds i8, i8* %53, i32 %54
  br label %56, !dbg !8073

56:                                               ; preds = %52, %56
  %57 = phi i32 [ 0, %52 ], [ %64, %56 ]
  call void @llvm.dbg.value(metadata i32 %57, metadata !8030, metadata !DIExpression()), !dbg !8031
  %58 = getelementptr inbounds i8, i8* %55, i32 %57, !dbg !8074
  %59 = load i8, i8* %58, align 1, !dbg !8076
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %57, !dbg !8077
  %61 = load i8, i8* %60, align 1, !dbg !8077
  %62 = xor i8 %61, %59, !dbg !8078
  %63 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %57, !dbg !8079
  store i8 %62, i8* %63, align 1, !dbg !8080
  %64 = add nuw i32 %57, 1, !dbg !8081
  call void @llvm.dbg.value(metadata i32 %64, metadata !8030, metadata !DIExpression()), !dbg !8031
  %65 = icmp eq i32 %64, %50, !dbg !8070
  br i1 %65, label %66, label %56, !dbg !8073, !llvm.loop !8082

66:                                               ; preds = %56, %43
  %67 = select i1 %18, i32 64, i32 0, !dbg !8084
  %68 = shl i32 %50, 2, !dbg !8085
  %69 = add i32 %68, 248, !dbg !8085
  %70 = and i32 %69, 248, !dbg !8085
  %71 = or i32 %70, %67, !dbg !8086
  %72 = trunc i32 %71 to i8, !dbg !8087
  %73 = or i8 %72, 1, !dbg !8087
  store i8 %73, i8* %31, align 1, !dbg !8088
  call void @llvm.dbg.value(metadata i32 1, metadata !8030, metadata !DIExpression()), !dbg !8031
  %74 = load i8*, i8** %33, align 4
  br label %75, !dbg !8089

75:                                               ; preds = %66, %75
  %76 = phi i32 [ 1, %66 ], [ %81, %75 ]
  call void @llvm.dbg.value(metadata i32 %76, metadata !8030, metadata !DIExpression()), !dbg !8031
  %77 = add nsw i32 %76, -1, !dbg !8091
  %78 = getelementptr inbounds i8, i8* %74, i32 %77, !dbg !8094
  %79 = load i8, i8* %78, align 1, !dbg !8094
  %80 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %76, !dbg !8095
  store i8 %79, i8* %80, align 1, !dbg !8096
  %81 = add nuw nsw i32 %76, 1, !dbg !8097
  call void @llvm.dbg.value(metadata i32 %81, metadata !8030, metadata !DIExpression()), !dbg !8031
  %82 = icmp eq i32 %81, 14, !dbg !8098
  br i1 %82, label %83, label %75, !dbg !8089, !llvm.loop !8099

83:                                               ; preds = %75
  %84 = sub i32 %5, %50, !dbg !8101
  %85 = lshr i32 %84, 8, !dbg !8102
  %86 = trunc i32 %85 to i8, !dbg !8103
  store i8 %86, i8* %45, align 1, !dbg !8104
  %87 = trunc i32 %84 to i8, !dbg !8105
  store i8 %87, i8* %44, align 1, !dbg !8106
  %88 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8107
  %89 = call i32 @tc_aes_encrypt(i8* noundef nonnull %31, i8* noundef nonnull %31, %struct.tc_aes_key_sched_struct* noundef %88) #27, !dbg !8108
  br i1 %18, label %90, label %92, !dbg !8109

90:                                               ; preds = %83
  %91 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8110
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %2, i32 noundef %3, i32 noundef 1, %struct.tc_aes_key_sched_struct* noundef %91) #26, !dbg !8113
  br label %92, !dbg !8114

92:                                               ; preds = %90, %83
  br i1 %14, label %93, label %97, !dbg !8115

93:                                               ; preds = %92
  %94 = load i32, i32* %26, align 4, !dbg !8116
  %95 = sub i32 %5, %94, !dbg !8119
  %96 = load %struct.tc_aes_key_sched_struct*, %struct.tc_aes_key_sched_struct** %46, align 4, !dbg !8120
  call fastcc void @ccm_cbc_mac(i8* noundef nonnull %31, i8* noundef %0, i32 noundef %95, i32 noundef 0, %struct.tc_aes_key_sched_struct* noundef %96) #26, !dbg !8121
  br label %97, !dbg !8122

97:                                               ; preds = %93, %92
  %98 = load i32, i32* %26, align 4, !dbg !8123
  %99 = call i32 @_compare(i8* noundef nonnull %31, i8* noundef nonnull %32, i32 noundef %98) #27, !dbg !8125
  %100 = icmp eq i32 %99, 0, !dbg !8126
  br i1 %100, label %104, label %101, !dbg !8127

101:                                              ; preds = %97
  %102 = load i32, i32* %26, align 4, !dbg !8128
  %103 = sub i32 %5, %102, !dbg !8130
  call void @_set(i8* noundef %0, i8 noundef zeroext 0, i32 noundef %103) #27, !dbg !8131
  br label %104, !dbg !8132

104:                                              ; preds = %97, %101
  %105 = phi i32 [ 0, %101 ], [ 1, %97 ], !dbg !8133
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #25, !dbg !8134
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #25, !dbg !8134
  br label %106

106:                                              ; preds = %7, %25, %13, %17, %104
  %107 = phi i32 [ %105, %104 ], [ 0, %17 ], [ 0, %13 ], [ 0, %25 ], [ 0, %7 ], !dbg !8031
  ret i32 %107, !dbg !8134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !8135 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8184, metadata !DIExpression()), !dbg !8186
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !8185, metadata !DIExpression()), !dbg !8186
  %3 = icmp eq %struct.__esf* %1, null, !dbg !8187
  br i1 %3, label %5, label %4, !dbg !8189

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #26, !dbg !8190
  br label %5, !dbg !8192

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #27, !dbg !8193
  ret void, !dbg !8194
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !8195 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8199, metadata !DIExpression()), !dbg !8200
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8201
  %3 = load i32, i32* %2, align 4, !dbg !8201
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !8201
  %5 = load i32, i32* %4, align 4, !dbg !8201
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !8201
  %7 = load i32, i32* %6, align 4, !dbg !8201
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.74, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #27, !dbg !8201
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !8206
  %9 = load i32, i32* %8, align 4, !dbg !8206
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !8206
  %11 = load i32, i32* %10, align 4, !dbg !8206
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !8206
  %13 = load i32, i32* %12, align 4, !dbg !8206
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.75, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #27, !dbg !8206
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !8211
  %15 = load i32, i32* %14, align 4, !dbg !8211
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.76, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #27, !dbg !8211
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !8216
  %17 = load i32, i32* %16, align 4, !dbg !8216
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.77, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !8216
  ret void, !dbg !8221
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !8222 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8239, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !8240, metadata !DIExpression()), !dbg !8242
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8243
  %4 = load i32, i32* %3, align 4, !dbg !8243
  call void @llvm.dbg.value(metadata i32 %4, metadata !8241, metadata !DIExpression()), !dbg !8242
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #26, !dbg !8244
  ret void, !dbg !8245
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !8246 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8250, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i8* %0, metadata !8251, metadata !DIExpression()), !dbg !8253
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !8254
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #25, !dbg !8254
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !8252, metadata !DIExpression()), !dbg !8255
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !8255
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !8256
  %5 = bitcast i8* %4 to i32*, !dbg !8256
  %6 = load i32, i32* %5, align 4, !dbg !8256
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !8257
  store i32 %6, i32* %7, align 4, !dbg !8258
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #26, !dbg !8259
  unreachable, !dbg !8260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8264, metadata !DIExpression()), !dbg !8265
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #26, !dbg !8266
  ret void, !dbg !8267
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8268 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8272, metadata !DIExpression()), !dbg !8273
  %2 = icmp sgt i32 %0, -1, !dbg !8274
  br i1 %2, label %3, label %8, !dbg !8276

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8277, !srcloc !8279
  %4 = and i32 %0, 31, !dbg !8280
  %5 = shl nuw i32 1, %4, !dbg !8281
  %6 = lshr i32 %0, 5, !dbg !8282
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !8283
  store volatile i32 %5, i32* %7, align 4, !dbg !8284
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !8285, !srcloc !8286
  br label %8, !dbg !8287

8:                                                ; preds = %3, %1
  ret void, !dbg !8288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !8289 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8291, metadata !DIExpression()), !dbg !8292
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #26, !dbg !8293
  ret void, !dbg !8294
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !8295 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8297, metadata !DIExpression()), !dbg !8298
  %2 = icmp sgt i32 %0, -1, !dbg !8299
  br i1 %2, label %3, label %8, !dbg !8301

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !8302
  %5 = shl nuw i32 1, %4, !dbg !8304
  %6 = lshr i32 %0, 5, !dbg !8305
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !8306
  store volatile i32 %5, i32* %7, align 4, !dbg !8307
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8308, !srcloc !8312
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8313, !srcloc !8316
  br label %8, !dbg !8317

8:                                                ; preds = %3, %1
  ret void, !dbg !8318
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #17 !dbg !8319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8323, metadata !DIExpression()), !dbg !8324
  %2 = lshr i32 %0, 5, !dbg !8325
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !8326
  %4 = load volatile i32, i32* %3, align 4, !dbg !8326
  %5 = and i32 %0, 31, !dbg !8327
  %6 = shl nuw i32 1, %5, !dbg !8327
  %7 = and i32 %4, %6, !dbg !8328
  ret i32 %7, !dbg !8329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #15 !dbg !8330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8334, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i32 %1, metadata !8335, metadata !DIExpression()), !dbg !8337
  call void @llvm.dbg.value(metadata i32 %2, metadata !8336, metadata !DIExpression()), !dbg !8337
  %4 = add i32 %1, 1, !dbg !8338
  call void @llvm.dbg.value(metadata i32 %4, metadata !8335, metadata !DIExpression()), !dbg !8337
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #26, !dbg !8341
  ret void, !dbg !8342
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !8343 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8347, metadata !DIExpression()), !dbg !8349
  call void @llvm.dbg.value(metadata i32 %1, metadata !8348, metadata !DIExpression()), !dbg !8349
  %3 = trunc i32 %1 to i8, !dbg !8350
  %4 = shl i8 %3, 4, !dbg !8350
  %5 = and i32 %0, 15, !dbg !8352
  %6 = add nsw i32 %5, -4, !dbg !8352
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !8352
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !8352
  %9 = icmp slt i32 %0, 0, !dbg !8352
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !8352
  store volatile i8 %4, i8* %10, align 1, !dbg !8350
  ret void, !dbg !8353
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !8354 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8356, metadata !DIExpression()), !dbg !8357
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #27, !dbg !8358
  ret void, !dbg !8359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !8360 {
  tail call void @z_SysNmiOnReset() #27, !dbg !8362
  tail call void @z_arm_int_exit() #27, !dbg !8363
  ret void, !dbg !8364
}

; Function Attrs: optsize
declare !dbg !8365 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !8366 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #12 !dbg !8368 {
  tail call fastcc void @relocate_vector_table() #26, !dbg !8370
  tail call fastcc void @z_arm_floating_point_init() #26, !dbg !8371
  tail call void @z_bss_zero() #27, !dbg !8372
  tail call void @z_data_copy() #27, !dbg !8373
  tail call void @z_arm_interrupt_init() #27, !dbg !8374
  tail call void @z_cstart() #29, !dbg !8375
  unreachable, !dbg !8375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !8376 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !8377
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !8378, !srcloc !8381
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8382, !srcloc !8385
  ret void, !dbg !8386
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !8387 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8388
  %2 = and i32 %1, -15728641, !dbg !8388
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !8388
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #25, !dbg !8389, !srcloc !8396
  call void @llvm.dbg.value(metadata i32 %3, metadata !8394, metadata !DIExpression()) #25, !dbg !8397
  %4 = and i32 %3, -5, !dbg !8398
  call void @llvm.dbg.value(metadata i32 %4, metadata !8399, metadata !DIExpression()) #25, !dbg !8404
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #25, !dbg !8406, !srcloc !8407
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !8408, !srcloc !8385
  ret void, !dbg !8410
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !8411 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8414, metadata !DIExpression()), !dbg !8415
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8416
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 0, !dbg !8417
  store i32 %0, i32* %3, align 4, !dbg !8418
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !8419
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 7, i32 1, !dbg !8420
  store i32 %4, i32* %5, align 4, !dbg !8421
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8422
  %7 = or i32 %6, 268435456, !dbg !8422
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8422
  call void @llvm.dbg.value(metadata i32 0, metadata !8423, metadata !DIExpression()) #25, !dbg !8426
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8428, !srcloc !8429
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8430
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 7, i32 1, !dbg !8431
  %10 = load i32, i32* %9, align 4, !dbg !8431
  ret i32 %10, !dbg !8432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #9 !dbg !8433 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8543, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !8544, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %2, metadata !8545, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !8546, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %4, metadata !8547, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %5, metadata !8548, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i8* %6, metadata !8549, metadata !DIExpression()), !dbg !8551
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !8552
  call void @llvm.dbg.value(metadata i8* %8, metadata !8550, metadata !DIExpression()), !dbg !8551
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !8553
  %10 = bitcast i8* %9 to i32*, !dbg !8553
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !8554
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !8555
  %12 = bitcast i8* %8 to i32*, !dbg !8556
  store i32 %11, i32* %12, align 4, !dbg !8557
  %13 = ptrtoint i8* %4 to i32, !dbg !8558
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !8559
  %15 = bitcast i8* %14 to i32*, !dbg !8559
  store i32 %13, i32* %15, align 4, !dbg !8560
  %16 = ptrtoint i8* %5 to i32, !dbg !8561
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !8562
  %18 = bitcast i8* %17 to i32*, !dbg !8562
  store i32 %16, i32* %18, align 4, !dbg !8563
  %19 = ptrtoint i8* %6 to i32, !dbg !8564
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !8565
  %21 = bitcast i8* %20 to i32*, !dbg !8565
  store i32 %19, i32* %21, align 4, !dbg !8566
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !8567
  %23 = bitcast i8* %22 to i32*, !dbg !8567
  store i32 16777216, i32* %23, align 4, !dbg !8568
  %24 = ptrtoint i8* %8 to i32, !dbg !8569
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !8570
  store i32 %24, i32* %25, align 8, !dbg !8571
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, i32 0, !dbg !8572
  store i32 0, i32* %26, align 4, !dbg !8573
  ret void, !dbg !8574
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !8575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8580, metadata !DIExpression()), !dbg !8586
  call void @llvm.dbg.value(metadata i32 %1, metadata !8581, metadata !DIExpression()), !dbg !8586
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8587
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !8582, metadata !DIExpression()), !dbg !8586
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !8588
  br i1 %4, label %19, label %5, !dbg !8590

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !8585, metadata !DIExpression()), !dbg !8586
  %6 = icmp eq i32 %0, -22, !dbg !8591
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 5, i32 0, !dbg !8591
  %8 = load i32, i32* %7, align 4, !dbg !8591
  br i1 %6, label %16, label %9, !dbg !8593

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !8591
  %11 = icmp ule i32 %10, %0, !dbg !8591
  %12 = icmp ugt i32 %8, %0, !dbg !8591
  %13 = and i1 %12, %11, !dbg !8591
  %14 = icmp ugt i32 %8, %1, !dbg !8591
  %15 = and i1 %14, %13, !dbg !8591
  br i1 %15, label %18, label %19, !dbg !8591

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !8591
  br i1 %17, label %18, label %19, !dbg !8593

18:                                               ; preds = %9, %16
  br label %19, !dbg !8594

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !8586
  ret i32 %20, !dbg !8596
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #12 !dbg !8597 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !8601, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.value(metadata i8* %1, metadata !8602, metadata !DIExpression()), !dbg !8604
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !8603, metadata !DIExpression()), !dbg !8604
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !8605
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #27, !dbg !8606
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #25, !dbg !8607, !srcloc !8608
  unreachable, !dbg !8609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !8610 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8628, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i32 %1, metadata !8629, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i32 %2, metadata !8630, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !8631, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i32 0, metadata !8632, metadata !DIExpression()), !dbg !8638
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8639
  %9 = and i32 %8, 511, !dbg !8640
  call void @llvm.dbg.value(metadata i32 %9, metadata !8633, metadata !DIExpression()), !dbg !8638
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8641
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8641
  %10 = bitcast %struct.__esf* %7 to i8*, !dbg !8642
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8642
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !8637, metadata !DIExpression()), !dbg !8643
  call void @llvm.dbg.value(metadata i32 0, metadata !8644, metadata !DIExpression()) #25, !dbg !8647
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #25, !dbg !8649, !srcloc !8650
  call void @llvm.dbg.value(metadata i8* %6, metadata !8635, metadata !DIExpression(DW_OP_deref)), !dbg !8638
  %11 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #26, !dbg !8651
  call void @llvm.dbg.value(metadata %struct.__esf* %11, metadata !8636, metadata !DIExpression()), !dbg !8638
  call void @llvm.dbg.value(metadata i8* %5, metadata !8634, metadata !DIExpression(DW_OP_deref)), !dbg !8638
  %12 = call fastcc i32 @fault_handle(%struct.__esf* noundef %11, i32 noundef %9, i8* noundef nonnull %5) #26, !dbg !8652
  call void @llvm.dbg.value(metadata i32 %12, metadata !8632, metadata !DIExpression()), !dbg !8638
  %13 = load i8, i8* %5, align 1, !dbg !8653, !range !8655
  call void @llvm.dbg.value(metadata i8 %13, metadata !8634, metadata !DIExpression()), !dbg !8638
  %14 = icmp eq i8 %13, 0, !dbg !8653
  br i1 %14, label %15, label %32, !dbg !8656

15:                                               ; preds = %4
  %16 = bitcast %struct.__esf* %11 to i8*, !dbg !8657
  %17 = call i8* @memcpy(i8* noundef nonnull %10, i8* noundef %16, i32 noundef 32) #27, !dbg !8658
  %18 = load i8, i8* %6, align 1, !dbg !8659, !range !8655
  call void @llvm.dbg.value(metadata i8 %18, metadata !8635, metadata !DIExpression()), !dbg !8638
  %19 = icmp eq i8 %18, 0, !dbg !8659
  %20 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !8661
  %21 = load i32, i32* %20, align 4, !dbg !8661
  br i1 %19, label %27, label %22, !dbg !8662

22:                                               ; preds = %15
  %23 = and i32 %21, 511, !dbg !8663
  %24 = icmp eq i32 %23, 0, !dbg !8666
  br i1 %24, label %25, label %31, !dbg !8667

25:                                               ; preds = %22
  %26 = or i32 %21, 511, !dbg !8668
  br label %29, !dbg !8670

27:                                               ; preds = %15
  %28 = and i32 %21, -512, !dbg !8671
  br label %29

29:                                               ; preds = %27, %25
  %30 = phi i32 [ %26, %25 ], [ %28, %27 ]
  store i32 %30, i32* %20, align 4, !dbg !8661
  br label %31, !dbg !8673

31:                                               ; preds = %29, %22
  call void @z_arm_fatal_error(i32 noundef %12, %struct.__esf* noundef nonnull %7) #27, !dbg !8673
  br label %32, !dbg !8674

32:                                               ; preds = %4, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #25, !dbg !8674
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #25, !dbg !8674
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #25, !dbg !8674
  ret void, !dbg !8674
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !8675 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8680, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i32 %1, metadata !8681, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i32 %2, metadata !8682, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8* %3, metadata !8683, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata i8 0, metadata !8684, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !8685, metadata !DIExpression()), !dbg !8686
  store i8 0, i8* %3, align 1, !dbg !8687
  %5 = icmp ugt i32 %2, -16777217, !dbg !8688
  br i1 %5, label %6, label %17, !dbg !8690

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !8691
  %8 = icmp eq i32 %7, 8, !dbg !8691
  br i1 %8, label %9, label %10, !dbg !8691

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.109, i32 0, i32 0), i32 noundef 69) #27, !dbg !8693
  br label %17, !dbg !8699

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !8700
  %12 = icmp eq i32 %11, 0, !dbg !8700
  br i1 %12, label %13, label %14, !dbg !8701

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !8685, metadata !DIExpression()), !dbg !8686
  store i8 1, i8* %3, align 1, !dbg !8704
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !8686
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !8685, metadata !DIExpression()), !dbg !8686
  br label %17, !dbg !8707

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !8686
  ret %struct.__esf* %18, !dbg !8708
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !8709 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8713, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i32 %1, metadata !8714, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i8* %2, metadata !8715, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.value(metadata i32 0, metadata !8716, metadata !DIExpression()), !dbg !8717
  store i8 0, i8* %2, align 1, !dbg !8718
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !8719

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #26, !dbg !8720
  call void @llvm.dbg.value(metadata i32 %5, metadata !8716, metadata !DIExpression()), !dbg !8717
  br label %12, !dbg !8722

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8723
  call void @llvm.dbg.value(metadata i32 %7, metadata !8716, metadata !DIExpression()), !dbg !8717
  br label %12, !dbg !8724

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #26, !dbg !8725
  call void @llvm.dbg.value(metadata i32 0, metadata !8716, metadata !DIExpression()), !dbg !8717
  br label %12, !dbg !8726

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #26, !dbg !8727
  call void @llvm.dbg.value(metadata i32 0, metadata !8716, metadata !DIExpression()), !dbg !8717
  br label %12, !dbg !8728

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #26, !dbg !8729
  br label %12, !dbg !8730

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #26, !dbg !8731
  br label %12, !dbg !8732

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !8717
  call void @llvm.dbg.value(metadata i32 %13, metadata !8716, metadata !DIExpression()), !dbg !8717
  ret i32 %13, !dbg !8733
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8734 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8738, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i8* %1, metadata !8739, metadata !DIExpression()), !dbg !8741
  call void @llvm.dbg.value(metadata i32 0, metadata !8740, metadata !DIExpression()), !dbg !8741
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1.104, i32 0, i32 0), i32 noundef 69) #27, !dbg !8742
  store i8 0, i8* %1, align 1, !dbg !8747
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8748
  %4 = and i32 %3, 2, !dbg !8750
  %5 = icmp eq i32 %4, 0, !dbg !8751
  br i1 %5, label %7, label %6, !dbg !8752

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.105, i32 0, i32 0), i32 noundef 69) #27, !dbg !8753
  br label %36, !dbg !8759

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8760
  %9 = icmp sgt i32 %8, -1, !dbg !8762
  br i1 %9, label %11, label %10, !dbg !8763

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3.106, i32 0, i32 0), i32 noundef 69) #27, !dbg !8764
  br label %36, !dbg !8770

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !8771
  %13 = and i32 %12, 1073741824, !dbg !8773
  %14 = icmp eq i32 %13, 0, !dbg !8774
  br i1 %14, label %36, label %15, !dbg !8775

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.107, i32 0, i32 0), i32 noundef 69) #27, !dbg !8776
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #26, !dbg !8782
  br i1 %16, label %17, label %21, !dbg !8784

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !8785
  %19 = load i32, i32* %18, align 4, !dbg !8785
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5.108, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #27, !dbg !8785
  %20 = load i32, i32* %18, align 4, !dbg !8791
  call void @llvm.dbg.value(metadata i32 %20, metadata !8740, metadata !DIExpression()), !dbg !8741
  br label %36, !dbg !8792

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8793
  %23 = and i32 %22, 255, !dbg !8795
  %24 = icmp eq i32 %23, 0, !dbg !8796
  br i1 %24, label %27, label %25, !dbg !8797

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8798
  call void @llvm.dbg.value(metadata i32 %26, metadata !8740, metadata !DIExpression()), !dbg !8741
  br label %36, !dbg !8800

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8801
  %29 = and i32 %28, 65280, !dbg !8803
  %30 = icmp eq i32 %29, 0, !dbg !8804
  br i1 %30, label %32, label %31, !dbg !8805

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #26, !dbg !8806
  call void @llvm.dbg.value(metadata i32 0, metadata !8740, metadata !DIExpression()), !dbg !8741
  br label %36, !dbg !8808

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8809
  %34 = icmp ult i32 %33, 65536, !dbg !8811
  br i1 %34, label %36, label %35, !dbg !8812

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #26, !dbg !8813
  call void @llvm.dbg.value(metadata i32 0, metadata !8740, metadata !DIExpression()), !dbg !8741
  br label %36, !dbg !8815

36:                                               ; preds = %10, %11, %17, %31, %32, %35, %25, %6
  %37 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], [ 0, %32 ], [ 0, %11 ], !dbg !8741
  call void @llvm.dbg.value(metadata i32 %37, metadata !8740, metadata !DIExpression()), !dbg !8741
  ret i32 %37, !dbg !8816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !8817 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !8819, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata i32 %1, metadata !8820, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata i8* %2, metadata !8821, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata i32 0, metadata !8822, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.value(metadata i32 -22, metadata !8823, metadata !DIExpression()), !dbg !8832
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.99, i32 0, i32 0), i32 noundef 69) #27, !dbg !8833
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8838
  %5 = and i32 %4, 16, !dbg !8840
  %6 = icmp eq i32 %5, 0, !dbg !8841
  br i1 %6, label %8, label %7, !dbg !8842

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.7.100, i32 0, i32 0), i32 noundef 69) #27, !dbg !8843
  br label %8, !dbg !8849

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8850
  %10 = and i32 %9, 8, !dbg !8852
  %11 = icmp eq i32 %10, 0, !dbg !8853
  br i1 %11, label %13, label %12, !dbg !8854

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8855
  br label %13, !dbg !8861

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8862
  %15 = and i32 %14, 2, !dbg !8863
  %16 = icmp eq i32 %15, 0, !dbg !8864
  br i1 %16, label %27, label %17, !dbg !8865

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.101, i32 0, i32 0), i32 noundef 69) #27, !dbg !8866
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !8871
  call void @llvm.dbg.value(metadata i32 %18, metadata !8824, metadata !DIExpression()), !dbg !8872
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8873
  %20 = and i32 %19, 128, !dbg !8875
  %21 = icmp eq i32 %20, 0, !dbg !8876
  br i1 %21, label %27, label %22, !dbg !8877

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !8823, metadata !DIExpression()), !dbg !8832
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.10.102, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #27, !dbg !8878
  %23 = icmp eq i32 %1, 0, !dbg !8884
  br i1 %23, label %27, label %24, !dbg !8886

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8887
  %26 = and i32 %25, -129, !dbg !8887
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8887
  br label %27, !dbg !8889

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !8832
  call void @llvm.dbg.value(metadata i32 %28, metadata !8823, metadata !DIExpression()), !dbg !8832
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8890
  %30 = and i32 %29, 1, !dbg !8892
  %31 = icmp eq i32 %30, 0, !dbg !8893
  br i1 %31, label %33, label %32, !dbg !8894

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.103, i32 0, i32 0), i32 noundef 69) #27, !dbg !8895
  br label %33, !dbg !8901

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8902
  %35 = and i32 %34, 32, !dbg !8904
  %36 = icmp eq i32 %35, 0, !dbg !8905
  br i1 %36, label %38, label %37, !dbg !8906

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), i32 noundef 69) #27, !dbg !8907
  br label %38, !dbg !8913

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8914
  %40 = and i32 %39, 16, !dbg !8915
  %41 = icmp eq i32 %40, 0, !dbg !8915
  br i1 %41, label %42, label %46, !dbg !8916

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8917
  %44 = and i32 %43, 2, !dbg !8918
  %45 = icmp eq i32 %44, 0, !dbg !8918
  br i1 %45, label %55, label %46, !dbg !8919

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !8920
  %48 = and i32 %47, 2048, !dbg !8921
  %49 = icmp eq i32 %48, 0, !dbg !8921
  br i1 %49, label %55, label %50, !dbg !8922

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !8923
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #27, !dbg !8924
  call void @llvm.dbg.value(metadata i32 %52, metadata !8827, metadata !DIExpression()), !dbg !8925
  %53 = icmp eq i32 %52, 0, !dbg !8926
  br i1 %53, label %55, label %54, !dbg !8928

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !8929, metadata !DIExpression()) #25, !dbg !8932
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #25, !dbg !8935, !srcloc !8936
  call void @llvm.dbg.value(metadata i32 2, metadata !8822, metadata !DIExpression()), !dbg !8832
  br label %55, !dbg !8937

55:                                               ; preds = %54, %50, %46, %42
  %56 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %50 ], !dbg !8832
  call void @llvm.dbg.value(metadata i32 %56, metadata !8822, metadata !DIExpression()), !dbg !8832
  %57 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8938
  %58 = and i32 %57, 32, !dbg !8940
  %59 = icmp eq i32 %58, 0, !dbg !8941
  br i1 %59, label %63, label %60, !dbg !8942

60:                                               ; preds = %55
  %61 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8943
  %62 = and i32 %61, -8193, !dbg !8943
  store volatile i32 %62, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !8943
  br label %63, !dbg !8945

63:                                               ; preds = %60, %55
  %64 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8946
  %65 = or i32 %64, 255, !dbg !8946
  store volatile i32 %65, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8946
  store i8 0, i8* %2, align 1, !dbg !8947
  ret i32 %56, !dbg !8948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !8949 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !8953, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata i32 %0, metadata !8954, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata i8* %1, metadata !8955, metadata !DIExpression()), !dbg !8960
  call void @llvm.dbg.value(metadata i32 0, metadata !8956, metadata !DIExpression()), !dbg !8960
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13.91, i32 0, i32 0), i32 noundef 69) #27, !dbg !8961
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8966
  %4 = and i32 %3, 4096, !dbg !8968
  %5 = icmp eq i32 %4, 0, !dbg !8968
  br i1 %5, label %7, label %6, !dbg !8969

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.92, i32 0, i32 0), i32 noundef 69) #27, !dbg !8970
  br label %7, !dbg !8976

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8977
  %9 = and i32 %8, 2048, !dbg !8979
  %10 = icmp eq i32 %9, 0, !dbg !8979
  br i1 %10, label %12, label %11, !dbg !8980

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8.93, i32 0, i32 0), i32 noundef 69) #27, !dbg !8981
  br label %12, !dbg !8987

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8988
  %14 = and i32 %13, 512, !dbg !8989
  %15 = icmp eq i32 %14, 0, !dbg !8989
  br i1 %15, label %26, label %16, !dbg !8990

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.94, i32 0, i32 0), i32 noundef 69) #27, !dbg !8991
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !8996
  call void @llvm.dbg.value(metadata i32 %17, metadata !8957, metadata !DIExpression()), !dbg !8997
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !8998
  %19 = and i32 %18, 32768, !dbg !9000
  %20 = icmp eq i32 %19, 0, !dbg !9001
  br i1 %20, label %26, label %21, !dbg !9002

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16.95, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #27, !dbg !9003
  %22 = icmp eq i32 %0, 0, !dbg !9009
  br i1 %22, label %26, label %23, !dbg !9011

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9012
  %25 = and i32 %24, -32769, !dbg !9012
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9012
  br label %26, !dbg !9014

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9015
  %28 = and i32 %27, 1024, !dbg !9017
  %29 = icmp eq i32 %28, 0, !dbg !9017
  br i1 %29, label %31, label %30, !dbg !9018

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17.96, i32 0, i32 0), i32 noundef 69) #27, !dbg !9019
  br label %31, !dbg !9025

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9026
  %33 = and i32 %32, 256, !dbg !9028
  %34 = icmp eq i32 %33, 0, !dbg !9029
  br i1 %34, label %35, label %39, !dbg !9030

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9031
  %37 = and i32 %36, 8192, !dbg !9033
  %38 = icmp eq i32 %37, 0, !dbg !9033
  br i1 %38, label %41, label %39, !dbg !9034

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18.97, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.98, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #27, !dbg !9035
  br label %41, !dbg !9036

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9036
  %43 = or i32 %42, 65280, !dbg !9036
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9036
  store i8 0, i8* %1, align 1, !dbg !9037
  ret void, !dbg !9038
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !9039 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9045, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32 0, metadata !9046, metadata !DIExpression()), !dbg !9047
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.19.84, i32 0, i32 0), i32 noundef 69) #27, !dbg !9048
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9053
  %2 = and i32 %1, 33554432, !dbg !9055
  %3 = icmp eq i32 %2, 0, !dbg !9056
  br i1 %3, label %5, label %4, !dbg !9057

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.85, i32 0, i32 0), i32 noundef 69) #27, !dbg !9058
  br label %5, !dbg !9064

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9065
  %7 = and i32 %6, 16777216, !dbg !9067
  %8 = icmp eq i32 %7, 0, !dbg !9068
  br i1 %8, label %10, label %9, !dbg !9069

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21.86, i32 0, i32 0), i32 noundef 69) #27, !dbg !9070
  br label %10, !dbg !9076

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9077
  %12 = and i32 %11, 524288, !dbg !9079
  %13 = icmp eq i32 %12, 0, !dbg !9080
  br i1 %13, label %15, label %14, !dbg !9081

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22.87, i32 0, i32 0), i32 noundef 69) #27, !dbg !9082
  br label %15, !dbg !9088

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9089
  %17 = and i32 %16, 262144, !dbg !9091
  %18 = icmp eq i32 %17, 0, !dbg !9092
  br i1 %18, label %20, label %19, !dbg !9093

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.88, i32 0, i32 0), i32 noundef 69) #27, !dbg !9094
  br label %20, !dbg !9100

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9101
  %22 = and i32 %21, 131072, !dbg !9103
  %23 = icmp eq i32 %22, 0, !dbg !9104
  br i1 %23, label %25, label %24, !dbg !9105

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.24.89, i32 0, i32 0), i32 noundef 69) #27, !dbg !9106
  br label %25, !dbg !9112

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9113
  %27 = and i32 %26, 65536, !dbg !9115
  %28 = icmp eq i32 %27, 0, !dbg !9116
  br i1 %28, label %30, label %29, !dbg !9117

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25.90, i32 0, i32 0), i32 noundef 69) #27, !dbg !9118
  br label %30, !dbg !9124

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9125
  %32 = or i32 %31, -65536, !dbg !9125
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !9125
  ret void, !dbg !9126
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !9127 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9131, metadata !DIExpression()), !dbg !9133
  call void @llvm.dbg.value(metadata i8* %0, metadata !9132, metadata !DIExpression()), !dbg !9133
  store i8 0, i8* %0, align 1, !dbg !9134
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.26.83, i32 0, i32 0), i32 noundef 69) #27, !dbg !9135
  ret void, !dbg !9140
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !9141 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !9145, metadata !DIExpression()), !dbg !9147
  call void @llvm.dbg.value(metadata i32 %0, metadata !9146, metadata !DIExpression()), !dbg !9147
  %2 = icmp slt i32 %0, 16, !dbg !9148
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28.80, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29.81, i32 0, i32 0), !dbg !9148
  %4 = add nsw i32 %0, -16, !dbg !9148
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27.82, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #27, !dbg !9148
  ret void, !dbg !9153
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !9154 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !9158, metadata !DIExpression()), !dbg !9161
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !9162
  %3 = load i32, i32* %2, align 4, !dbg !9162
  %4 = inttoptr i32 %3 to i16*, !dbg !9163
  call void @llvm.dbg.value(metadata i16* %4, metadata !9159, metadata !DIExpression()), !dbg !9161
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9164
  %6 = or i32 %5, 256, !dbg !9164
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9164
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9165, !srcloc !9168
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9169, !srcloc !9172
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !9173
  %8 = load i16, i16* %7, align 2, !dbg !9174
  call void @llvm.dbg.value(metadata i16 %8, metadata !9160, metadata !DIExpression()), !dbg !9161
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9175
  %10 = and i32 %9, -257, !dbg !9175
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9175
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9176, !srcloc !9168
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9178, !srcloc !9172
  %11 = icmp eq i16 %8, -8446, !dbg !9180
  ret i1 %11, !dbg !9182
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #15 !dbg !9183 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9184
  %2 = or i32 %1, 16, !dbg !9184
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !9184
  ret void, !dbg !9185
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #15 !dbg !9186 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9189, metadata !DIExpression()), !dbg !9190
  br label %1, !dbg !9191

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !9189, metadata !DIExpression()), !dbg !9190
  tail call fastcc void @__NVIC_SetPriority.112(i32 noundef %2) #26, !dbg !9193
  %3 = add nuw nsw i32 %2, 1, !dbg !9196
  call void @llvm.dbg.value(metadata i32 %3, metadata !9189, metadata !DIExpression()), !dbg !9190
  %4 = icmp eq i32 %3, 97, !dbg !9197
  br i1 %4, label %5, label %1, !dbg !9191, !llvm.loop !9198

5:                                                ; preds = %1
  ret void, !dbg !9200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.112(i32 noundef %0) unnamed_addr #15 !dbg !9201 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9203, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 1, metadata !9204, metadata !DIExpression()), !dbg !9205
  %2 = and i32 %0, 15, !dbg !9206
  %3 = add nsw i32 %2, -4, !dbg !9206
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !9206
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !9206
  %6 = icmp slt i32 %0, 0, !dbg !9206
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !9206
  store volatile i8 16, i8* %7, align 1, !dbg !9207
  ret void, !dbg !9209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !9210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !9316, metadata !DIExpression()), !dbg !9317
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !9318
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !9320
  br i1 %3, label %4, label %12, !dbg !9321

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !9322, !srcloc !9334
  call void @llvm.dbg.value(metadata i32 %5, metadata !9325, metadata !DIExpression()) #25, !dbg !9335
  %6 = icmp eq i32 %5, 0, !dbg !9336
  br i1 %6, label %12, label %7, !dbg !9337

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9338
  %9 = or i32 %8, 268435456, !dbg !9338
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !9338
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9340
  %11 = and i32 %10, -32769, !dbg !9340
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !9340
  br label %12, !dbg !9341

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !9342
  ret void, !dbg !9343
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !9344 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #27, !dbg !9345
  ret void, !dbg !9346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !525 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !646, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i8 0, metadata !647, metadata !DIExpression()), !dbg !9347
  call void @llvm.dbg.value(metadata i32 64, metadata !649, metadata !DIExpression()), !dbg !9347
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !9348
  %3 = load i32, i32* %2, align 4, !dbg !9348
  %4 = add i32 %3, -64, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %4, metadata !648, metadata !DIExpression()), !dbg !9347
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !9351
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !9352
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !9353
  call void @llvm.dbg.value(metadata i8 1, metadata !647, metadata !DIExpression()), !dbg !9347
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #27, !dbg !9354
  ret void, !dbg !9355
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !9356 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9357
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #25, !dbg !9358, !srcloc !9361
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #25, !dbg !9362, !srcloc !9365
  ret void, !dbg !9366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !9367 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #25, !dbg !9368, !srcloc !9371
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !9372
  ret void, !dbg !9373
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9374 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9389, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i8 %1, metadata !9390, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %2, metadata !9391, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %3, metadata !9392, metadata !DIExpression()), !dbg !9393
  tail call fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9394
  ret void, !dbg !9396
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9397 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9402, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata i8 %1, metadata !9403, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata i32 undef, metadata !9404, metadata !DIExpression()), !dbg !9407
  call void @llvm.dbg.value(metadata i32 undef, metadata !9405, metadata !DIExpression()), !dbg !9407
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9408
  call void @llvm.dbg.value(metadata i8 %3, metadata !9406, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9407
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #26, !dbg !9409
  call void @llvm.dbg.value(metadata i32 %4, metadata !9406, metadata !DIExpression()), !dbg !9407
  %5 = trunc i32 %4 to i8, !dbg !9410
  store i8 %5, i8* @static_regions_num, align 1, !dbg !9411
  ret void, !dbg !9412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !9413 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9417, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata i8 %1, metadata !9418, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata i8 %2, metadata !9419, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata i1 %3, metadata !9420, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9423
  %5 = zext i8 %2 to i32, !dbg !9424
  call void @llvm.dbg.value(metadata i32 %5, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata i32 0, metadata !9421, metadata !DIExpression()), !dbg !9423
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata i32 0, metadata !9421, metadata !DIExpression()), !dbg !9423
  %7 = icmp eq i8 %1, 0, !dbg !9425
  br i1 %7, label %30, label %8, !dbg !9428

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.value(metadata i32 %10, metadata !9421, metadata !DIExpression()), !dbg !9423
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !9429
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !9432
  %13 = load i32, i32* %12, align 4, !dbg !9432
  %14 = icmp eq i32 %13, 0, !dbg !9433
  br i1 %14, label %26, label %15, !dbg !9434

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !9435

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9437
  %18 = icmp eq i32 %17, 0, !dbg !9437
  br i1 %18, label %19, label %20, !dbg !9438

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.121, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #27, !dbg !9439
  br label %30, !dbg !9445

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !9446
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #26, !dbg !9447
  call void @llvm.dbg.value(metadata i32 %22, metadata !9422, metadata !DIExpression()), !dbg !9423
  %23 = icmp eq i32 %22, -22, !dbg !9448
  br i1 %23, label %30, label %24, !dbg !9450

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !9451
  call void @llvm.dbg.value(metadata i32 %25, metadata !9422, metadata !DIExpression()), !dbg !9423
  br label %26, !dbg !9452

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !9423
  call void @llvm.dbg.value(metadata i32 %27, metadata !9422, metadata !DIExpression()), !dbg !9423
  %28 = add nuw nsw i32 %10, 1, !dbg !9453
  call void @llvm.dbg.value(metadata i32 %28, metadata !9421, metadata !DIExpression()), !dbg !9423
  %29 = icmp eq i32 %28, %6, !dbg !9425
  br i1 %29, label %30, label %8, !dbg !9428, !llvm.loop !9454

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !9423
  ret i32 %31, !dbg !9456
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #18 !dbg !9457 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9461, metadata !DIExpression()), !dbg !9463
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !9464
  %3 = load i32, i32* %2, align 4, !dbg !9464
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !9465, !range !9466
  %5 = icmp ult i32 %4, 2, !dbg !9465
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !9467
  br i1 %7, label %8, label %15, !dbg !9467

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !9468
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !9469
  %11 = load i32, i32* %10, align 4, !dbg !9469
  %12 = and i32 %11, %9, !dbg !9470
  %13 = icmp eq i32 %12, 0, !dbg !9471
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !9462, metadata !DIExpression()), !dbg !9463
  ret i32 %16, !dbg !9472
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9473 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !9477, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !9478, metadata !DIExpression()), !dbg !9480
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !9481
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9481
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !9479, metadata !DIExpression()), !dbg !9482
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !9483
  %6 = load i32, i32* %5, align 4, !dbg !9483
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !9484
  store i32 %6, i32* %7, align 4, !dbg !9485
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !9486
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !9487
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !9488
  %11 = load i32, i32* %10, align 4, !dbg !9488
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* noundef nonnull %8, %struct.ctr_params* noundef nonnull %9, i32 noundef %11) #26, !dbg !9489
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #26, !dbg !9490
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #25, !dbg !9491
  ret i32 %12, !dbg !9492
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.ctr_params* nocapture noundef writeonly %0, %struct.ctr_params* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #19 !dbg !9493 {
  call void @llvm.dbg.value(metadata %struct.ctr_params* %0, metadata !9500, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata %struct.ctr_params* %1, metadata !9501, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i32 undef, metadata !9502, metadata !DIExpression()), !dbg !9504
  call void @llvm.dbg.value(metadata i32 %2, metadata !9503, metadata !DIExpression()), !dbg !9504
  %4 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %1, i32 0, i32 0, !dbg !9505
  %5 = load i32, i32* %4, align 4, !dbg !9505
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #26, !dbg !9506
  %7 = or i32 %6, %5, !dbg !9507
  %8 = getelementptr inbounds %struct.ctr_params, %struct.ctr_params* %0, i32 0, i32 0, !dbg !9508
  store i32 %7, i32* %8, align 4, !dbg !9509
  ret void, !dbg !9510
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !9511 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9515, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9516, metadata !DIExpression()), !dbg !9517
  %3 = zext i8 %0 to i32, !dbg !9518
  %4 = icmp ugt i8 %0, 7, !dbg !9520
  br i1 %4, label %5, label %6, !dbg !9521

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.122, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #27, !dbg !9522
  br label %7, !dbg !9528

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #26, !dbg !9529
  br label %7, !dbg !9530

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !9517
  ret i32 %8, !dbg !9531
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #15 !dbg !9532 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9536, metadata !DIExpression()), !dbg !9538
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !9537, metadata !DIExpression()), !dbg !9538
  tail call fastcc void @set_region_number(i32 noundef %0) #26, !dbg !9539
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !9540
  %4 = load i32, i32* %3, align 4, !dbg !9540
  %5 = and i32 %4, -32, !dbg !9541
  %6 = or i32 %5, %0, !dbg !9542
  %7 = or i32 %6, 16, !dbg !9542
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !9543
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !9544
  %9 = load i32, i32* %8, align 4, !dbg !9544
  %10 = or i32 %9, 1, !dbg !9545
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9546
  ret void, !dbg !9547
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #15 !dbg !9548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9551, metadata !DIExpression()), !dbg !9552
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9553
  ret void, !dbg !9554
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #13 !dbg !9555 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9559, metadata !DIExpression()), !dbg !9560
  %2 = icmp ult i32 %0, 33, !dbg !9561
  br i1 %2, label %11, label %3, !dbg !9563

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !9564
  br i1 %4, label %11, label %5, !dbg !9566

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !9567
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !9568, !range !9466
  %8 = mul nsw i32 %7, -2, !dbg !9569
  %9 = add nsw i32 %8, 62, !dbg !9569
  %10 = and i32 %9, 62, !dbg !9570
  br label %11, !dbg !9571

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !9560
  ret i32 %12, !dbg !9572
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !9573 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9577, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.value(metadata i8 %1, metadata !9578, metadata !DIExpression()), !dbg !9579
  tail call fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #26, !dbg !9580
  ret void, !dbg !9582
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !9583 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !9587, metadata !DIExpression()), !dbg !9594
  call void @llvm.dbg.value(metadata i8 %1, metadata !9588, metadata !DIExpression()), !dbg !9594
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !9595
  call void @llvm.dbg.value(metadata i8 %3, metadata !9589, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9594
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #26, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %4, metadata !9589, metadata !DIExpression()), !dbg !9594
  %5 = icmp ne i32 %4, -22, !dbg !9597
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !9598
  call void @llvm.dbg.value(metadata i32 %4, metadata !9590, metadata !DIExpression()), !dbg !9599
  br i1 %7, label %8, label %12, !dbg !9598

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9590, metadata !DIExpression()), !dbg !9599
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #26, !dbg !9600
  %10 = add i32 %9, 1, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %10, metadata !9590, metadata !DIExpression()), !dbg !9599
  %11 = icmp eq i32 %10, 8, !dbg !9604
  br i1 %11, label %12, label %8, !dbg !9605, !llvm.loop !9606

12:                                               ; preds = %8, %2
  ret void, !dbg !9608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #15 !dbg !9609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9612, metadata !DIExpression()), !dbg !9613
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !9614
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !9615
  ret void, !dbg !9616
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !9617 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !9622
  %2 = icmp ugt i32 %1, 8, !dbg !9624
  br i1 %2, label %14, label %3, !dbg !9625

3:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #26, !dbg !9626
  call void @llvm.dbg.value(metadata i32 0, metadata !9621, metadata !DIExpression()), !dbg !9627
  %4 = icmp eq i32 %1, 0, !dbg !9628
  br i1 %4, label %12, label %5, !dbg !9631

5:                                                ; preds = %3
  %6 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %7, !dbg !9631

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9621, metadata !DIExpression()), !dbg !9627
  %9 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %6, i32 %8, !dbg !9632
  tail call fastcc void @region_init(i32 noundef %8, %struct.arm_mpu_region* noundef %9) #26, !dbg !9634
  %10 = add nuw i32 %8, 1, !dbg !9635
  call void @llvm.dbg.value(metadata i32 %10, metadata !9621, metadata !DIExpression()), !dbg !9627
  %11 = icmp eq i32 %10, %1, !dbg !9628
  br i1 %11, label %12, label %7, !dbg !9631, !llvm.loop !9636

12:                                               ; preds = %7, %3
  %13 = trunc i32 %1 to i8, !dbg !9638
  store i8 %13, i8* @static_regions_num, align 1, !dbg !9639
  tail call void @arm_core_mpu_enable() #26, !dbg !9640
  br label %14, !dbg !9641

14:                                               ; preds = %0, %12
  %15 = phi i32 [ 0, %12 ], [ -1, %0 ], !dbg !9627
  ret i32 %15, !dbg !9642
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9643 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9650, metadata !DIExpression()), !dbg !9653
  call void @llvm.dbg.value(metadata i8* %1, metadata !9651, metadata !DIExpression()), !dbg !9653
  call void @llvm.dbg.value(metadata i8* %0, metadata !9652, metadata !DIExpression()), !dbg !9653
  %3 = load i8, i8* %1, align 1, !dbg !9654
  %4 = icmp eq i8 %3, 0, !dbg !9655
  br i1 %4, label %13, label %5, !dbg !9656

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !9650, metadata !DIExpression()), !dbg !9653
  call void @llvm.dbg.value(metadata i8* %8, metadata !9651, metadata !DIExpression()), !dbg !9653
  store i8 %6, i8* %7, align 1, !dbg !9657
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9659
  call void @llvm.dbg.value(metadata i8* %9, metadata !9650, metadata !DIExpression()), !dbg !9653
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9660
  call void @llvm.dbg.value(metadata i8* %10, metadata !9651, metadata !DIExpression()), !dbg !9653
  %11 = load i8, i8* %10, align 1, !dbg !9654
  %12 = icmp eq i8 %11, 0, !dbg !9655
  br i1 %12, label %13, label %5, !dbg !9656, !llvm.loop !9661

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !9663
  ret i8* %0, !dbg !9664
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9665 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9669, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i8* %1, metadata !9670, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i32 %2, metadata !9671, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i8* %0, metadata !9672, metadata !DIExpression()), !dbg !9673
  %4 = icmp eq i32 %2, 0, !dbg !9674
  br i1 %4, label %22, label %5, !dbg !9675

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9669, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i32 %7, metadata !9671, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i8* %8, metadata !9670, metadata !DIExpression()), !dbg !9673
  %9 = load i8, i8* %8, align 1, !dbg !9676
  %10 = icmp eq i8 %9, 0, !dbg !9677
  br i1 %10, label %16, label %11, !dbg !9678

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !9679
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9681
  call void @llvm.dbg.value(metadata i8* %12, metadata !9670, metadata !DIExpression()), !dbg !9673
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9682
  call void @llvm.dbg.value(metadata i8* %13, metadata !9669, metadata !DIExpression()), !dbg !9673
  %14 = add i32 %7, -1, !dbg !9683
  call void @llvm.dbg.value(metadata i32 %14, metadata !9671, metadata !DIExpression()), !dbg !9673
  %15 = icmp eq i32 %14, 0, !dbg !9674
  br i1 %15, label %22, label %5, !dbg !9675, !llvm.loop !9684

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !9669, metadata !DIExpression()), !dbg !9673
  call void @llvm.dbg.value(metadata i32 %18, metadata !9671, metadata !DIExpression()), !dbg !9673
  store i8 0, i8* %17, align 1, !dbg !9686
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !9688
  call void @llvm.dbg.value(metadata i8* %19, metadata !9669, metadata !DIExpression()), !dbg !9673
  %20 = add i32 %18, -1, !dbg !9689
  call void @llvm.dbg.value(metadata i32 %20, metadata !9671, metadata !DIExpression()), !dbg !9673
  %21 = icmp eq i32 %20, 0, !dbg !9690
  br i1 %21, label %22, label %16, !dbg !9691, !llvm.loop !9692

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !9694
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9695 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9699, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %1, metadata !9700, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata i32 %1, metadata !9701, metadata !DIExpression()), !dbg !9702
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9703

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !9699, metadata !DIExpression()), !dbg !9702
  %6 = load i8, i8* %5, align 1, !dbg !9704
  %7 = icmp eq i8 %6, %3, !dbg !9705
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !9706
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9707
  call void @llvm.dbg.value(metadata i8* %10, metadata !9699, metadata !DIExpression()), !dbg !9702
  br i1 %9, label %11, label %4, !dbg !9706, !llvm.loop !9709

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !9711
  ret i8* %12, !dbg !9712
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9713 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9715, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i32 %1, metadata !9716, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i8* null, metadata !9717, metadata !DIExpression()), !dbg !9718
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !9719

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !9718
  call void @llvm.dbg.value(metadata i8* %6, metadata !9717, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.value(metadata i8* %5, metadata !9715, metadata !DIExpression()), !dbg !9718
  %7 = load i8, i8* %5, align 1, !dbg !9720
  %8 = icmp eq i8 %7, %3, !dbg !9723
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !9724
  call void @llvm.dbg.value(metadata i8* %9, metadata !9717, metadata !DIExpression()), !dbg !9718
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !9725
  call void @llvm.dbg.value(metadata i8* %10, metadata !9715, metadata !DIExpression()), !dbg !9718
  %11 = icmp eq i8 %7, 0, !dbg !9726
  br i1 %11, label %12, label %4, !dbg !9726, !llvm.loop !9727

12:                                               ; preds = %4
  ret i8* %9, !dbg !9729
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !9730 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9734, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata i32 0, metadata !9735, metadata !DIExpression()), !dbg !9736
  %2 = load i8, i8* %0, align 1, !dbg !9737
  %3 = icmp eq i8 %2, 0, !dbg !9738
  br i1 %3, label %11, label %4, !dbg !9739

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !9735, metadata !DIExpression()), !dbg !9736
  call void @llvm.dbg.value(metadata i8* %6, metadata !9734, metadata !DIExpression()), !dbg !9736
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9740
  call void @llvm.dbg.value(metadata i8* %7, metadata !9734, metadata !DIExpression()), !dbg !9736
  %8 = add i32 %5, 1, !dbg !9742
  call void @llvm.dbg.value(metadata i32 %8, metadata !9735, metadata !DIExpression()), !dbg !9736
  %9 = load i8, i8* %7, align 1, !dbg !9737
  %10 = icmp eq i8 %9, 0, !dbg !9738
  br i1 %10, label %11, label %4, !dbg !9739, !llvm.loop !9743

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !9736
  ret i32 %12, !dbg !9745
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #8 !dbg !9746 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9750, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 %1, metadata !9751, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i32 0, metadata !9752, metadata !DIExpression()), !dbg !9753
  %3 = load i8, i8* %0, align 1, !dbg !9754
  %4 = icmp ne i8 %3, 0, !dbg !9755
  %5 = icmp ne i32 %1, 0, !dbg !9756
  %6 = and i1 %4, %5, !dbg !9756
  br i1 %6, label %7, label %16, !dbg !9757

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9752, metadata !DIExpression()), !dbg !9753
  call void @llvm.dbg.value(metadata i8* %9, metadata !9750, metadata !DIExpression()), !dbg !9753
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9758
  call void @llvm.dbg.value(metadata i8* %10, metadata !9750, metadata !DIExpression()), !dbg !9753
  %11 = add nuw i32 %8, 1, !dbg !9760
  call void @llvm.dbg.value(metadata i32 %11, metadata !9752, metadata !DIExpression()), !dbg !9753
  %12 = load i8, i8* %10, align 1, !dbg !9754
  %13 = icmp ne i8 %12, 0, !dbg !9755
  %14 = icmp ult i32 %11, %1, !dbg !9756
  %15 = select i1 %13, i1 %14, i1 false, !dbg !9756
  br i1 %15, label %7, label %16, !dbg !9757, !llvm.loop !9761

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !9753
  ret i32 %17, !dbg !9763
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !9764 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9768, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.value(metadata i8* %1, metadata !9769, metadata !DIExpression()), !dbg !9770
  %3 = load i8, i8* %0, align 1, !dbg !9771
  %4 = load i8, i8* %1, align 1, !dbg !9772
  %5 = icmp ne i8 %3, %4, !dbg !9773
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !9774
  br i1 %7, label %18, label %8, !dbg !9774

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !9769, metadata !DIExpression()), !dbg !9770
  call void @llvm.dbg.value(metadata i8* %10, metadata !9768, metadata !DIExpression()), !dbg !9770
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9775
  call void @llvm.dbg.value(metadata i8* %11, metadata !9768, metadata !DIExpression()), !dbg !9770
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9777
  call void @llvm.dbg.value(metadata i8* %12, metadata !9769, metadata !DIExpression()), !dbg !9770
  %13 = load i8, i8* %11, align 1, !dbg !9771
  %14 = load i8, i8* %12, align 1, !dbg !9772
  %15 = icmp ne i8 %13, %14, !dbg !9773
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !9774
  br i1 %17, label %18, label %8, !dbg !9774, !llvm.loop !9778

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !9771
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !9772
  %21 = zext i8 %19 to i32, !dbg !9781
  %22 = zext i8 %20 to i32, !dbg !9782
  %23 = sub nsw i32 %21, %22, !dbg !9783
  ret i32 %23, !dbg !9784
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9785 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9789, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i8* %1, metadata !9790, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i32 %2, metadata !9791, metadata !DIExpression()), !dbg !9792
  %4 = icmp eq i32 %2, 0, !dbg !9793
  br i1 %4, label %23, label %5, !dbg !9793

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i8* %7, metadata !9790, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.value(metadata i8* %8, metadata !9789, metadata !DIExpression()), !dbg !9792
  %9 = load i8, i8* %8, align 1, !dbg !9794
  %10 = load i8, i8* %7, align 1, !dbg !9795
  %11 = icmp ne i8 %9, %10, !dbg !9796
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !9797
  br i1 %13, label %19, label %14, !dbg !9797

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9798
  call void @llvm.dbg.value(metadata i8* %15, metadata !9789, metadata !DIExpression()), !dbg !9792
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9800
  call void @llvm.dbg.value(metadata i8* %16, metadata !9790, metadata !DIExpression()), !dbg !9792
  %17 = add i32 %6, -1, !dbg !9801
  call void @llvm.dbg.value(metadata i32 %17, metadata !9791, metadata !DIExpression()), !dbg !9792
  %18 = icmp eq i32 %17, 0, !dbg !9793
  br i1 %18, label %23, label %5, !dbg !9793, !llvm.loop !9802

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !9805
  %21 = zext i8 %10 to i32, !dbg !9806
  %22 = sub nsw i32 %20, %21, !dbg !9807
  br label %23, !dbg !9808

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !9808
  ret i32 %24, !dbg !9809
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #14 !dbg !9810 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9814, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.value(metadata i8* %1, metadata !9815, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.value(metadata i8** %2, metadata !9816, metadata !DIExpression()), !dbg !9819
  %4 = icmp eq i8* %0, null, !dbg !9820
  br i1 %4, label %5, label %7, !dbg !9820

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !9821
  br label %7, !dbg !9820

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !9820
  call void @llvm.dbg.value(metadata i8* %8, metadata !9817, metadata !DIExpression()), !dbg !9819
  %9 = load i8, i8* %8, align 1, !dbg !9822
  %10 = icmp eq i8 %9, 0, !dbg !9822
  br i1 %10, label %33, label %11, !dbg !9823

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9817, metadata !DIExpression()), !dbg !9819
  %14 = zext i8 %12 to i32, !dbg !9822
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #26, !dbg !9824
  %16 = icmp eq i8* %15, null, !dbg !9823
  br i1 %16, label %21, label %17, !dbg !9825

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9826
  call void @llvm.dbg.value(metadata i8* %18, metadata !9817, metadata !DIExpression()), !dbg !9819
  %19 = load i8, i8* %18, align 1, !dbg !9822
  %20 = icmp eq i8 %19, 0, !dbg !9822
  br i1 %20, label %33, label %11, !dbg !9823, !llvm.loop !9828

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !9818, metadata !DIExpression()), !dbg !9819
  %24 = zext i8 %22 to i32, !dbg !9830
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #26, !dbg !9831
  %26 = icmp eq i8* %25, null, !dbg !9832
  br i1 %26, label %27, label %31, !dbg !9833

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9834
  call void @llvm.dbg.value(metadata i8* %28, metadata !9818, metadata !DIExpression()), !dbg !9819
  %29 = load i8, i8* %28, align 1, !dbg !9830
  %30 = icmp eq i8 %29, 0, !dbg !9830
  br i1 %30, label %33, label %21, !dbg !9836, !llvm.loop !9837

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !9839
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !9842
  br label %33, !dbg !9843

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !9819
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !9819
  store i8* %34, i8** %2, align 4, !dbg !9819
  ret i8* %35, !dbg !9844
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !9845 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9847, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.value(metadata i8* %1, metadata !9848, metadata !DIExpression()), !dbg !9849
  %3 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9850
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !9851
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #26, !dbg !9852
  ret i8* %0, !dbg !9853
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9854 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9856, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i8* %1, metadata !9857, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i32 %2, metadata !9858, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i8* %0, metadata !9859, metadata !DIExpression()), !dbg !9861
  %4 = tail call i32 @strlen(i8* noundef %0) #26, !dbg !9862
  call void @llvm.dbg.value(metadata i32 %4, metadata !9860, metadata !DIExpression()), !dbg !9861
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !9863
  call void @llvm.dbg.value(metadata i8* %5, metadata !9856, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i8* %1, metadata !9857, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i32 %2, metadata !9858, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i32 %2, metadata !9858, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9861
  %6 = icmp eq i32 %2, 0, !dbg !9864
  br i1 %6, label %18, label %7, !dbg !9865

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !9866
  call void @llvm.dbg.value(metadata i8* %9, metadata !9856, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i8* %10, metadata !9857, metadata !DIExpression()), !dbg !9861
  %12 = load i8, i8* %10, align 1, !dbg !9867
  %13 = icmp eq i8 %12, 0, !dbg !9868
  br i1 %13, label %18, label %14, !dbg !9869

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !9870
  call void @llvm.dbg.value(metadata i8* %15, metadata !9857, metadata !DIExpression()), !dbg !9861
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !9872
  call void @llvm.dbg.value(metadata i8* %16, metadata !9856, metadata !DIExpression()), !dbg !9861
  store i8 %12, i8* %9, align 1, !dbg !9873
  call void @llvm.dbg.value(metadata i32 %11, metadata !9858, metadata !DIExpression()), !dbg !9861
  call void @llvm.dbg.value(metadata i32 %11, metadata !9858, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !9861
  %17 = icmp eq i32 %11, 0, !dbg !9864
  br i1 %17, label %18, label %7, !dbg !9865, !llvm.loop !9874

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !9861
  store i8 0, i8* %19, align 1, !dbg !9876
  ret i8* %0, !dbg !9877
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9878 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9882, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i8* %1, metadata !9883, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %2, metadata !9884, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i8* %0, metadata !9885, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i8* %1, metadata !9886, metadata !DIExpression()), !dbg !9887
  %4 = icmp eq i32 %2, 0, !dbg !9888
  br i1 %4, label %31, label %5, !dbg !9890

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9886, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i8* %0, metadata !9885, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %2, metadata !9884, metadata !DIExpression()), !dbg !9887
  %6 = add i32 %2, -1, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %6, metadata !9884, metadata !DIExpression()), !dbg !9887
  %7 = icmp eq i32 %6, 0, !dbg !9892
  br i1 %7, label %23, label %8, !dbg !9893

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !9894
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !9894
  br label %11, !dbg !9894

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !9886, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i8* %14, metadata !9885, metadata !DIExpression()), !dbg !9887
  %15 = load i8, i8* %14, align 1, !dbg !9895
  %16 = load i8, i8* %13, align 1, !dbg !9896
  %17 = icmp eq i8 %15, %16, !dbg !9897
  br i1 %17, label %18, label %23, !dbg !9894

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !9898
  call void @llvm.dbg.value(metadata i8* %19, metadata !9885, metadata !DIExpression()), !dbg !9887
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !9900
  call void @llvm.dbg.value(metadata i8* %20, metadata !9886, metadata !DIExpression()), !dbg !9887
  call void @llvm.dbg.value(metadata i32 %12, metadata !9884, metadata !DIExpression()), !dbg !9887
  %21 = add i32 %12, -1, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %21, metadata !9884, metadata !DIExpression()), !dbg !9887
  %22 = icmp eq i32 %21, 0, !dbg !9892
  br i1 %22, label %23, label %11, !dbg !9893, !llvm.loop !9901

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !9887
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !9887
  %26 = load i8, i8* %24, align 1, !dbg !9903
  %27 = zext i8 %26 to i32, !dbg !9903
  %28 = load i8, i8* %25, align 1, !dbg !9904
  %29 = zext i8 %28 to i32, !dbg !9904
  %30 = sub nsw i32 %27, %29, !dbg !9905
  br label %31, !dbg !9906

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !9887
  ret i32 %32, !dbg !9907
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9908 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9912, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8* %1, metadata !9913, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32 %2, metadata !9914, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8* %0, metadata !9915, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8* %1, metadata !9916, metadata !DIExpression()), !dbg !9917
  %4 = ptrtoint i8* %0 to i32, !dbg !9918
  %5 = ptrtoint i8* %1 to i32, !dbg !9918
  %6 = sub i32 %4, %5, !dbg !9918
  %7 = icmp ult i32 %6, %2, !dbg !9920
  br i1 %7, label %10, label %8, !dbg !9921

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !9916, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8* %0, metadata !9915, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32 %2, metadata !9914, metadata !DIExpression()), !dbg !9917
  %9 = icmp eq i32 %2, 0, !dbg !9922
  br i1 %9, label %26, label %17, !dbg !9924

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9914, metadata !DIExpression()), !dbg !9917
  %12 = add i32 %11, -1, !dbg !9925
  call void @llvm.dbg.value(metadata i32 %12, metadata !9914, metadata !DIExpression()), !dbg !9917
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !9928
  %14 = load i8, i8* %13, align 1, !dbg !9928
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !9929
  store i8 %14, i8* %15, align 1, !dbg !9930
  %16 = icmp eq i32 %12, 0, !dbg !9931
  br i1 %16, label %26, label %10, !dbg !9932, !llvm.loop !9933

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !9916, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i8* %19, metadata !9915, metadata !DIExpression()), !dbg !9917
  call void @llvm.dbg.value(metadata i32 %20, metadata !9914, metadata !DIExpression()), !dbg !9917
  %21 = load i8, i8* %18, align 1, !dbg !9935
  store i8 %21, i8* %19, align 1, !dbg !9937
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !9938
  call void @llvm.dbg.value(metadata i8* %22, metadata !9915, metadata !DIExpression()), !dbg !9917
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !9939
  call void @llvm.dbg.value(metadata i8* %23, metadata !9916, metadata !DIExpression()), !dbg !9917
  %24 = add i32 %20, -1, !dbg !9940
  call void @llvm.dbg.value(metadata i32 %24, metadata !9914, metadata !DIExpression()), !dbg !9917
  %25 = icmp eq i32 %24, 0, !dbg !9922
  br i1 %25, label %26, label %17, !dbg !9924, !llvm.loop !9941

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !9943
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #14 !dbg !9944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9950, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8* %1, metadata !9951, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 %2, metadata !9952, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8* %0, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8* %1, metadata !9954, metadata !DIExpression()), !dbg !9955
  %4 = icmp eq i32 %2, 0, !dbg !9956
  br i1 %4, label %14, label %5, !dbg !9957

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !9954, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i8* %7, metadata !9953, metadata !DIExpression()), !dbg !9955
  call void @llvm.dbg.value(metadata i32 %8, metadata !9952, metadata !DIExpression()), !dbg !9955
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !9958
  call void @llvm.dbg.value(metadata i8* %9, metadata !9954, metadata !DIExpression()), !dbg !9955
  %10 = load i8, i8* %6, align 1, !dbg !9960
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !9961
  call void @llvm.dbg.value(metadata i8* %11, metadata !9953, metadata !DIExpression()), !dbg !9955
  store i8 %10, i8* %7, align 1, !dbg !9962
  %12 = add i32 %8, -1, !dbg !9963
  call void @llvm.dbg.value(metadata i32 %12, metadata !9952, metadata !DIExpression()), !dbg !9955
  %13 = icmp eq i32 %12, 0, !dbg !9956
  br i1 %13, label %14, label %5, !dbg !9957, !llvm.loop !9964

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !9966
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #20 !dbg !9967 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9971, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %1, metadata !9972, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %2, metadata !9973, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i8* %0, metadata !9974, metadata !DIExpression()), !dbg !9976
  %4 = trunc i32 %1 to i8, !dbg !9977
  call void @llvm.dbg.value(metadata i8 %4, metadata !9975, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %2, metadata !9973, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i8* %0, metadata !9974, metadata !DIExpression()), !dbg !9976
  %5 = icmp eq i32 %2, 0, !dbg !9978
  br i1 %5, label %12, label %6, !dbg !9979

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9973, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i8* %8, metadata !9974, metadata !DIExpression()), !dbg !9976
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !9980
  call void @llvm.dbg.value(metadata i8* %9, metadata !9974, metadata !DIExpression()), !dbg !9976
  store i8 %4, i8* %8, align 1, !dbg !9982
  %10 = add i32 %7, -1, !dbg !9983
  call void @llvm.dbg.value(metadata i32 %10, metadata !9973, metadata !DIExpression()), !dbg !9976
  %11 = icmp eq i32 %10, 0, !dbg !9978
  br i1 %11, label %12, label %6, !dbg !9979, !llvm.loop !9984

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !9986
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !9987 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9991, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 %1, metadata !9992, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i32 %2, metadata !9993, metadata !DIExpression()), !dbg !9997
  %4 = icmp eq i32 %2, 0, !dbg !9998
  br i1 %4, label %17, label %5, !dbg !9999

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !10000

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !10001
  call void @llvm.dbg.value(metadata i8* %9, metadata !9994, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata i32 %8, metadata !9993, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.value(metadata i8* %9, metadata !9994, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10001
  %10 = load i8, i8* %9, align 1, !dbg !10002
  %11 = icmp eq i8 %10, %6, !dbg !10005
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !10006
  call void @llvm.dbg.value(metadata i8* %12, metadata !9994, metadata !DIExpression()), !dbg !10001
  call void @llvm.dbg.value(metadata i32 %13, metadata !9993, metadata !DIExpression()), !dbg !9997
  br i1 %15, label %16, label %7, !dbg !10006, !llvm.loop !10007

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !10009

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !9997
  ret i8* %19, !dbg !10010
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #9 !dbg !10011 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !10013, metadata !DIExpression()), !dbg !10014
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !10015
  ret void, !dbg !10016
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !10017 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10019, metadata !DIExpression()), !dbg !10020
  ret i32 -1, !dbg !10021
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10022 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10026, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.value(metadata i32* %1, metadata !10027, metadata !DIExpression()), !dbg !10028
  %3 = ptrtoint i32* %1 to i32, !dbg !10029
  %4 = and i32 %3, -2, !dbg !10029
  %5 = icmp eq i32 %4, 2, !dbg !10029
  br i1 %5, label %6, label %9, !dbg !10029

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10030
  %8 = tail call i32 %7(i32 noundef %0) #27, !dbg !10030
  br label %9, !dbg !10031

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !10031
  ret i32 %10, !dbg !10032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !10033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10035, metadata !DIExpression()), !dbg !10037
  call void @llvm.dbg.value(metadata i32* %1, metadata !10036, metadata !DIExpression()), !dbg !10037
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10038
  ret i32 %3, !dbg !10039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !10040 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10043, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata i32* %1, metadata !10044, metadata !DIExpression()), !dbg !10045
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10046, !srcloc !10048
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #26, !dbg !10049
  ret i32 %3, !dbg !10050
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !10051 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10056, metadata !DIExpression()), !dbg !10060
  call void @llvm.dbg.value(metadata i32* %1, metadata !10057, metadata !DIExpression()), !dbg !10060
  %3 = tail call i32 @strlen(i8* noundef %0) #27, !dbg !10061
  call void @llvm.dbg.value(metadata i32 %3, metadata !10058, metadata !DIExpression()), !dbg !10060
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #26, !dbg !10062
  call void @llvm.dbg.value(metadata i32 %4, metadata !10059, metadata !DIExpression()), !dbg !10060
  %5 = icmp ne i32 %3, %4, !dbg !10063
  %6 = sext i1 %5 to i32, !dbg !10064
  ret i32 %6, !dbg !10065
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !10066 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10070, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.value(metadata i32 %1, metadata !10071, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.value(metadata i32 %2, metadata !10072, metadata !DIExpression()), !dbg !10074
  call void @llvm.dbg.value(metadata i32* %3, metadata !10073, metadata !DIExpression()), !dbg !10074
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10075
  ret i32 %5, !dbg !10076
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !10077 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10079, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i32 %1, metadata !10080, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i32 %2, metadata !10081, metadata !DIExpression()), !dbg !10083
  call void @llvm.dbg.value(metadata i32* %3, metadata !10082, metadata !DIExpression()), !dbg !10083
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10084, !srcloc !10086
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #26, !dbg !10087
  ret i32 %5, !dbg !10088
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !10089 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10091, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32 %1, metadata !10092, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32 %2, metadata !10093, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32* %3, metadata !10094, metadata !DIExpression()), !dbg !10099
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !10100
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !10102
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !10102
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !10102
  br i1 %11, label %33, label %12, !dbg !10102

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !10099
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !10099
  call void @llvm.dbg.value(metadata i8* %14, metadata !10097, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32 %13, metadata !10095, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32 %1, metadata !10096, metadata !DIExpression()), !dbg !10099
  br label %15, !dbg !10103

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !10105
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !10099
  call void @llvm.dbg.value(metadata i8* %17, metadata !10097, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.value(metadata i32 %16, metadata !10096, metadata !DIExpression()), !dbg !10099
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !10106
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !10109
  call void @llvm.dbg.value(metadata i8* %19, metadata !10097, metadata !DIExpression()), !dbg !10099
  %20 = load i8, i8* %17, align 1, !dbg !10110
  %21 = zext i8 %20 to i32, !dbg !10111
  %22 = tail call i32 %18(i32 noundef %21) #27, !dbg !10106
  %23 = icmp eq i32 %22, -1, !dbg !10112
  br i1 %23, label %30, label %24, !dbg !10113

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %25, metadata !10096, metadata !DIExpression()), !dbg !10099
  %26 = icmp eq i32 %25, 0, !dbg !10115
  br i1 %26, label %27, label %15, !dbg !10116, !llvm.loop !10117

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !10119
  call void @llvm.dbg.value(metadata i32 %28, metadata !10095, metadata !DIExpression()), !dbg !10099
  %29 = icmp eq i32 %28, 0, !dbg !10120
  br i1 %29, label %30, label %12, !dbg !10121, !llvm.loop !10122

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !10099
  call void @llvm.dbg.value(metadata i32 %31, metadata !10095, metadata !DIExpression()), !dbg !10099
  call void @llvm.dbg.label(metadata !10098), !dbg !10125
  %32 = sub i32 %2, %31, !dbg !10126
  br label %33, !dbg !10127

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !10099
  ret i32 %34, !dbg !10128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !10129 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10133, metadata !DIExpression()), !dbg !10134
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10135
  %3 = icmp eq i32 %2, -1, !dbg !10137
  br i1 %3, label %8, label %4, !dbg !10138

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #26, !dbg !10139
  %6 = icmp eq i32 %5, -1, !dbg !10140
  %7 = sext i1 %6 to i32, !dbg !10139
  br label %8, !dbg !10141

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !10134
  ret i32 %9, !dbg !10142
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10145, metadata !DIExpression()), !dbg !10146
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #26, !dbg !10147
  ret void, !dbg !10148
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !10149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10153, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata i32 %1, metadata !10154, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !10155, metadata !DIExpression()), !dbg !10159
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !10160
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !10160
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !10160
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !10156, metadata !DIExpression()), !dbg !10159
  call void @llvm.dbg.value(metadata i32 %0, metadata !10158, metadata !DIExpression()), !dbg !10159
  %7 = icmp slt i32 %0, %1, !dbg !10161
  br i1 %7, label %8, label %22, !dbg !10164

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10158, metadata !DIExpression()), !dbg !10159
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #26, !dbg !10165
  %11 = icmp eq i32 %10, 0, !dbg !10165
  br i1 %11, label %19, label %12, !dbg !10168

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #26, !dbg !10169
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !10171
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !10171
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !10173
  br i1 %15, label %19, label %16, !dbg !10174

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !10175
  %18 = load i8*, i8** %17, align 4, !dbg !10175
  tail call void %14(i32 noundef %9, i8* noundef %18) #27, !dbg !10176
  br label %19, !dbg !10177

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !10178
  call void @llvm.dbg.value(metadata i32 %20, metadata !10158, metadata !DIExpression()), !dbg !10159
  %21 = icmp eq i32 %20, %1, !dbg !10161
  br i1 %21, label %22, label %8, !dbg !10164, !llvm.loop !10179

22:                                               ; preds = %19, %3
  ret void, !dbg !10181
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #17 !dbg !10182 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10184, metadata !DIExpression()), !dbg !10185
  %2 = shl nuw i32 1, %0, !dbg !10186
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #26, !dbg !10189
  ret i32 %3, !dbg !10190
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #15 !dbg !10191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10195, metadata !DIExpression()), !dbg !10196
  %2 = shl nuw i32 1, %0, !dbg !10197
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #26, !dbg !10200
  ret void, !dbg !10201
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10202 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10205, metadata !DIExpression()), !dbg !10206
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10207
  ret void, !dbg !10208
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #17 !dbg !10209 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10211, metadata !DIExpression()), !dbg !10212
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !10213
  %3 = and i32 %2, %0, !dbg !10213
  %4 = icmp eq i32 %3, %0, !dbg !10214
  %5 = zext i1 %4 to i32, !dbg !10214
  ret i32 %5, !dbg !10215
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !10216 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10218, metadata !DIExpression()), !dbg !10219
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #26, !dbg !10220
  ret void, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !10222 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10224, metadata !DIExpression()), !dbg !10225
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #26, !dbg !10226
  ret void, !dbg !10227
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !10228 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10230, metadata !DIExpression()), !dbg !10231
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #26, !dbg !10232
  ret void, !dbg !10233
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !10234 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10236, metadata !DIExpression()), !dbg !10237
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #26, !dbg !10238
  ret void, !dbg !10239
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !10240 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10242, metadata !DIExpression()), !dbg !10243
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #26, !dbg !10244
  ret void, !dbg !10245
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !10246 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10248, metadata !DIExpression()), !dbg !10249
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #26, !dbg !10250
  ret void, !dbg !10251
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !10252 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10254, metadata !DIExpression()), !dbg !10255
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #26, !dbg !10256
  ret void, !dbg !10257
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !10258 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10260, metadata !DIExpression()), !dbg !10261
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #26, !dbg !10262
  ret void, !dbg !10263
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !10264 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10266, metadata !DIExpression()), !dbg !10267
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #26, !dbg !10268
  ret void, !dbg !10269
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !10270 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10272, metadata !DIExpression()), !dbg !10273
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #26, !dbg !10274
  ret void, !dbg !10275
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10276 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10278, metadata !DIExpression()), !dbg !10279
  tail call fastcc void @__stm32_exti_connect_irqs() #26, !dbg !10280
  ret i32 0, !dbg !10281
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !900 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !904, metadata !DIExpression()), !dbg !10282
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #27, !dbg !10283
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #27, !dbg !10285
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #27, !dbg !10287
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #27, !dbg !10289
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #27, !dbg !10291
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #27, !dbg !10293
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #27, !dbg !10295
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #27, !dbg !10297
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #27, !dbg !10299
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #27, !dbg !10301
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #27, !dbg !10303
  ret void, !dbg !10305
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !10306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10308, metadata !DIExpression()), !dbg !10310
  call void @llvm.dbg.value(metadata i32 0, metadata !10309, metadata !DIExpression()), !dbg !10310
  %2 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !10311
  %3 = load i32, i32* %2, align 4, !dbg !10311
  call void @llvm.dbg.value(metadata i32 %3, metadata !10309, metadata !DIExpression()), !dbg !10310
  %4 = shl nuw i32 1, %0, !dbg !10312
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %4) #26, !dbg !10313
  tail call void @arch_irq_enable(i32 noundef %3) #27, !dbg !10314
  ret void, !dbg !10315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10318, metadata !DIExpression()), !dbg !10319
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10320
  %3 = or i32 %2, %0, !dbg !10320
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10320
  ret void, !dbg !10321
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #15 !dbg !10322 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10324, metadata !DIExpression()), !dbg !10325
  %2 = icmp slt i32 %0, 32, !dbg !10326
  br i1 %2, label %3, label %5, !dbg !10328

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !10329
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #26, !dbg !10331
  br label %5, !dbg !10332

5:                                                ; preds = %1, %3
  ret void, !dbg !10333
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10336, metadata !DIExpression()), !dbg !10337
  %2 = xor i32 %0, -1, !dbg !10338
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10338
  %4 = and i32 %3, %2, !dbg !10338
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !10338
  ret void, !dbg !10339
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #15 !dbg !10340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10344, metadata !DIExpression()), !dbg !10346
  call void @llvm.dbg.value(metadata i32 %1, metadata !10345, metadata !DIExpression()), !dbg !10346
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !10347

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !10348
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #26, !dbg !10350
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #26, !dbg !10351
  br label %11, !dbg !10352

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !10353
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #26, !dbg !10354
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #26, !dbg !10355
  br label %11, !dbg !10356

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !10357
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #26, !dbg !10358
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #26, !dbg !10359
  br label %11, !dbg !10360

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !10361
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #26, !dbg !10362
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #26, !dbg !10363
  br label %11, !dbg !10364

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !10365
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10366 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10368, metadata !DIExpression()), !dbg !10369
  %2 = xor i32 %0, -1, !dbg !10370
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10370
  %4 = and i32 %3, %2, !dbg !10370
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10370
  ret void, !dbg !10371
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10374, metadata !DIExpression()), !dbg !10375
  %2 = xor i32 %0, -1, !dbg !10376
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10376
  %4 = and i32 %3, %2, !dbg !10376
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10376
  ret void, !dbg !10377
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10380, metadata !DIExpression()), !dbg !10381
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10382
  %3 = or i32 %2, %0, !dbg !10382
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !10382
  ret void, !dbg !10383
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #15 !dbg !10384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10386, metadata !DIExpression()), !dbg !10387
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10388
  %3 = or i32 %2, %0, !dbg !10388
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !10388
  ret void, !dbg !10389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #11 !dbg !10390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10394, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !10395, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata i8* %2, metadata !10396, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !10397, metadata !DIExpression()), !dbg !10400
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10399, metadata !DIExpression()), !dbg !10400
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10401
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !10401
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !10403
  br i1 %6, label %7, label %9, !dbg !10404

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !10405
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10406
  store i8* %2, i8** %8, align 4, !dbg !10407
  br label %9, !dbg !10408

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !10400
  ret i32 %10, !dbg !10409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #9 !dbg !10410 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10412, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !10413, metadata !DIExpression()), !dbg !10415
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !10414, metadata !DIExpression()), !dbg !10415
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !10416
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !10417
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !10418
  store i8* null, i8** %3, align 4, !dbg !10419
  ret void, !dbg !10420
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10421 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10423, metadata !DIExpression()), !dbg !10428
  call void @llvm.dbg.value(metadata i8* %1, metadata !10424, metadata !DIExpression()), !dbg !10428
  call void @llvm.dbg.value(metadata i8* %1, metadata !10425, metadata !DIExpression()), !dbg !10428
  %3 = bitcast i8* %1 to i32*, !dbg !10429
  %4 = load i32, i32* %3, align 4, !dbg !10429
  %5 = add i32 %4, -169, !dbg !10429
  %6 = icmp ult i32 %5, -121, !dbg !10429
  br i1 %6, label %15, label %7, !dbg !10431

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10432
  %9 = inttoptr i32 %8 to i32*, !dbg !10433
  call void @llvm.dbg.value(metadata i32* %9, metadata !10426, metadata !DIExpression()), !dbg !10428
  %10 = load volatile i32, i32* %9, align 4, !dbg !10434
  call void @llvm.dbg.value(metadata i32 %10, metadata !10427, metadata !DIExpression()), !dbg !10428
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10435
  %12 = bitcast i8* %11 to i32*, !dbg !10435
  %13 = load i32, i32* %12, align 4, !dbg !10435
  %14 = or i32 %13, %10, !dbg !10436
  call void @llvm.dbg.value(metadata i32 %14, metadata !10427, metadata !DIExpression()), !dbg !10428
  store volatile i32 %14, i32* %9, align 4, !dbg !10437
  br label %15, !dbg !10438

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10428
  ret i32 %16, !dbg !10439
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #15 !dbg !10440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10442, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.value(metadata i8* %1, metadata !10443, metadata !DIExpression()), !dbg !10447
  call void @llvm.dbg.value(metadata i8* %1, metadata !10444, metadata !DIExpression()), !dbg !10447
  %3 = bitcast i8* %1 to i32*, !dbg !10448
  %4 = load i32, i32* %3, align 4, !dbg !10448
  %5 = add i32 %4, -169, !dbg !10448
  %6 = icmp ult i32 %5, -121, !dbg !10448
  br i1 %6, label %16, label %7, !dbg !10450

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !10451
  %9 = inttoptr i32 %8 to i32*, !dbg !10452
  call void @llvm.dbg.value(metadata i32* %9, metadata !10445, metadata !DIExpression()), !dbg !10447
  %10 = load volatile i32, i32* %9, align 4, !dbg !10453
  call void @llvm.dbg.value(metadata i32 %10, metadata !10446, metadata !DIExpression()), !dbg !10447
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10454
  %12 = bitcast i8* %11 to i32*, !dbg !10454
  %13 = load i32, i32* %12, align 4, !dbg !10454
  %14 = xor i32 %13, -1, !dbg !10455
  %15 = and i32 %10, %14, !dbg !10456
  call void @llvm.dbg.value(metadata i32 %15, metadata !10446, metadata !DIExpression()), !dbg !10447
  store volatile i32 %15, i32* %9, align 4, !dbg !10457
  br label %16, !dbg !10458

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !10447
  ret i32 %17, !dbg !10459
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !10460 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10462, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8* %1, metadata !10463, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32* %2, metadata !10464, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i8* %1, metadata !10465, metadata !DIExpression()), !dbg !10470
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %4, metadata !10466, metadata !DIExpression()), !dbg !10470
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #26, !dbg !10472
  call void @llvm.dbg.value(metadata i32 %5, metadata !10467, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %5, metadata !10468, metadata !DIExpression()), !dbg !10470
  call void @llvm.dbg.value(metadata i32 %4, metadata !10469, metadata !DIExpression()), !dbg !10470
  %6 = bitcast i8* %1 to i32*, !dbg !10473
  %7 = load i32, i32* %6, align 4, !dbg !10473
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !10474

8:                                                ; preds = %3
  br label %18, !dbg !10475

9:                                                ; preds = %3
  br label %18, !dbg !10477

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10478
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #26, !dbg !10479
  br label %18, !dbg !10480

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #27, !dbg !10481
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #26, !dbg !10482
  br label %18, !dbg !10483

16:                                               ; preds = %3
  br label %18, !dbg !10484

17:                                               ; preds = %3
  br label %18, !dbg !10485

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !10486
  br label %20, !dbg !10487

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !10470
  ret i32 %21, !dbg !10487
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #15 !dbg !10488 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10490, metadata !DIExpression()), !dbg !10498
  call void @llvm.dbg.value(metadata i8* %1, metadata !10491, metadata !DIExpression()), !dbg !10498
  call void @llvm.dbg.value(metadata i8* %2, metadata !10492, metadata !DIExpression()), !dbg !10498
  call void @llvm.dbg.value(metadata i8* %1, metadata !10493, metadata !DIExpression()), !dbg !10498
  %4 = bitcast i8* %1 to i32*, !dbg !10499
  %5 = load i32, i32* %4, align 4, !dbg !10499
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #26, !dbg !10500
  call void @llvm.dbg.value(metadata i32 %6, metadata !10497, metadata !DIExpression()), !dbg !10498
  %7 = icmp slt i32 %6, 0, !dbg !10501
  br i1 %7, label %22, label %8, !dbg !10503

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !10493, metadata !DIExpression()), !dbg !10498
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !10504
  %10 = bitcast i8* %9 to i32*, !dbg !10504
  %11 = load i32, i32* %10, align 4, !dbg !10504
  %12 = lshr i32 %11, 16, !dbg !10504
  %13 = and i32 %12, 7, !dbg !10504
  %14 = lshr i32 %11, 8, !dbg !10505
  %15 = and i32 %14, 31, !dbg !10505
  %16 = shl i32 %13, %15, !dbg !10506
  call void @llvm.dbg.value(metadata i32 %16, metadata !10496, metadata !DIExpression()), !dbg !10498
  %17 = and i32 %11, 255, !dbg !10507
  %18 = or i32 %17, 1073887232, !dbg !10508
  %19 = inttoptr i32 %18 to i32*, !dbg !10509
  call void @llvm.dbg.value(metadata i32* %19, metadata !10494, metadata !DIExpression()), !dbg !10498
  %20 = load volatile i32, i32* %19, align 4, !dbg !10510
  call void @llvm.dbg.value(metadata i32 %20, metadata !10495, metadata !DIExpression()), !dbg !10498
  %21 = or i32 %16, %20, !dbg !10511
  call void @llvm.dbg.value(metadata i32 %21, metadata !10495, metadata !DIExpression()), !dbg !10498
  store volatile i32 %21, i32* %19, align 4, !dbg !10512
  br label %22, !dbg !10513

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !10498
  ret i32 %23, !dbg !10514
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !10515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10519, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.value(metadata i32 0, metadata !10520, metadata !DIExpression()), !dbg !10521
  %2 = add i32 %0, -1, !dbg !10522
  %3 = icmp ult i32 %2, 6, !dbg !10522
  br i1 %3, label %4, label %7, !dbg !10522

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !10522
  %6 = load i32, i32* %5, align 4, !dbg !10522
  call void @llvm.dbg.value(metadata i32 %6, metadata !10520, metadata !DIExpression()), !dbg !10521
  br label %7, !dbg !10523

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !10521
  ret i32 %8, !dbg !10524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #3 !dbg !10525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10529, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i32 2, metadata !10530, metadata !DIExpression()), !dbg !10531
  %2 = lshr i32 %0, 1, !dbg !10532
  ret i32 %2, !dbg !10533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10538, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 8, metadata !10539, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 84, metadata !10540, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %1, metadata !10541, metadata !DIExpression()), !dbg !10542
  %3 = mul i32 %0, 84, !dbg !10543
  %4 = shl nsw i32 %1, 3, !dbg !10544
  %5 = udiv i32 %3, %4, !dbg !10545
  ret i32 %5, !dbg !10546
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !10547 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !10549, metadata !DIExpression()), !dbg !10552
  tail call void @config_enable_default_clocks() #27, !dbg !10553
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #27, !dbg !10554
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #26, !dbg !10554
  %4 = lshr i32 %3, 4, !dbg !10554
  %5 = and i32 %4, 15, !dbg !10554
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !10554
  %7 = load i8, i8* %6, align 1, !dbg !10554
  %8 = zext i8 %7 to i32, !dbg !10554
  %9 = lshr i32 %2, %8, !dbg !10554
  call void @llvm.dbg.value(metadata i32 %9, metadata !10550, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !10551, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !10552
  %10 = icmp ult i32 %9, 84000000, !dbg !10555
  br i1 %10, label %11, label %13, !dbg !10557

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10558
  br label %13, !dbg !10560

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #26, !dbg !10561
  tail call fastcc void @set_up_plls() #26, !dbg !10562
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10563
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #26, !dbg !10566
  br label %14, !dbg !10567

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10568
  %16 = icmp eq i32 %15, 8, !dbg !10569
  br i1 %16, label %17, label %14, !dbg !10567, !llvm.loop !10570

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !10572
  br i1 %18, label %19, label %21, !dbg !10574

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #27, !dbg !10575
  br label %21, !dbg !10577

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !10578
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #26, !dbg !10579
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #26, !dbg !10580
  ret i32 0, !dbg !10581
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #17 !dbg !10582 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10584
  %2 = and i32 %1, 240, !dbg !10584
  ret i32 %2, !dbg !10585
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #15 !dbg !10586 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #26, !dbg !10587
  tail call fastcc void @LL_RCC_HSE_Enable() #26, !dbg !10592
  br label %1, !dbg !10593

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #26, !dbg !10594
  %3 = icmp eq i32 %2, 1, !dbg !10595
  br i1 %3, label %4, label %1, !dbg !10593, !llvm.loop !10596

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #26, !dbg !10598
  br label %5, !dbg !10601

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #26, !dbg !10602
  %7 = icmp eq i32 %6, 1, !dbg !10603
  br i1 %7, label %8, label %5, !dbg !10601, !llvm.loop !10604

8:                                                ; preds = %5
  ret void, !dbg !10606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !10607 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10608
  %2 = icmp eq i32 %1, 8, !dbg !10610
  br i1 %2, label %3, label %4, !dbg !10611

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #26, !dbg !10612
  tail call fastcc void @stm32_clock_switch_to_hsi() #26, !dbg !10614
  br label %4, !dbg !10615

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #26, !dbg !10616
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10617
  %6 = and i32 %5, -196609, !dbg !10617
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10617
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10618
  %8 = and i32 %7, -251658241, !dbg !10618
  %9 = or i32 %8, 134217728, !dbg !10618
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10618
  tail call void @config_pll_sysclock() #27, !dbg !10619
  tail call fastcc void @LL_RCC_PLL_Enable() #26, !dbg !10620
  br label %10, !dbg !10621

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #26, !dbg !10622
  %12 = icmp eq i32 %11, 1, !dbg !10623
  br i1 %12, label %13, label %10, !dbg !10621, !llvm.loop !10624

13:                                               ; preds = %10
  ret void, !dbg !10626
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #15 !dbg !10627 {
  call void @llvm.dbg.value(metadata i32 0, metadata !10629, metadata !DIExpression()), !dbg !10630
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10631
  %2 = and i32 %1, -241, !dbg !10631
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10631
  ret void, !dbg !10632
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #15 !dbg !10633 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10635, metadata !DIExpression()), !dbg !10636
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10637
  %3 = and i32 %2, -4, !dbg !10637
  %4 = or i32 %3, %0, !dbg !10637
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10637
  ret void, !dbg !10638
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #17 !dbg !10639 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10640
  %2 = and i32 %1, 12, !dbg !10640
  ret i32 %2, !dbg !10641
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #15 !dbg !10642 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !10644, metadata !DIExpression()), !dbg !10645
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10646
  %2 = and i32 %1, -7169, !dbg !10646
  %3 = or i32 %2, 4096, !dbg !10646
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10646
  ret void, !dbg !10647
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #15 !dbg !10648 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !10650, metadata !DIExpression()), !dbg !10651
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10652
  %2 = and i32 %1, -57345, !dbg !10652
  %3 = or i32 %2, 32768, !dbg !10652
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !10652
  ret void, !dbg !10653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #15 !dbg !10654 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10655
  %2 = icmp eq i32 %1, 1, !dbg !10657
  br i1 %2, label %7, label %3, !dbg !10658

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #26, !dbg !10659
  br label %4, !dbg !10661

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #26, !dbg !10662
  %6 = icmp eq i32 %5, 1, !dbg !10663
  br i1 %6, label %7, label %4, !dbg !10661, !llvm.loop !10664

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #26, !dbg !10666
  br label %8, !dbg !10667

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #26, !dbg !10668
  %10 = icmp eq i32 %9, 0, !dbg !10669
  br i1 %10, label %11, label %8, !dbg !10667, !llvm.loop !10670

11:                                               ; preds = %8
  ret void, !dbg !10672
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #15 !dbg !10673 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10674
  %2 = and i32 %1, -16777217, !dbg !10674
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10674
  ret void, !dbg !10675
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #15 !dbg !10676 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10677
  %2 = or i32 %1, 16777216, !dbg !10677
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10677
  ret void, !dbg !10678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #17 !dbg !10679 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10680
  %2 = lshr i32 %1, 25, !dbg !10681
  %3 = and i32 %2, 1, !dbg !10681
  ret i32 %3, !dbg !10682
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #17 !dbg !10683 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10684
  %2 = lshr i32 %1, 1, !dbg !10685
  %3 = and i32 %2, 1, !dbg !10685
  ret i32 %3, !dbg !10686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #15 !dbg !10687 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10688
  %2 = or i32 %1, 1, !dbg !10688
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10688
  ret void, !dbg !10689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #15 !dbg !10690 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10691
  %2 = and i32 %1, -262145, !dbg !10691
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10691
  ret void, !dbg !10692
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #15 !dbg !10693 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10694
  %2 = or i32 %1, 65536, !dbg !10694
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10694
  ret void, !dbg !10695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #17 !dbg !10696 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !10697
  %2 = lshr i32 %1, 17, !dbg !10698
  %3 = and i32 %2, 1, !dbg !10698
  ret i32 %3, !dbg !10699
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #15 !dbg !10700 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10701
  %2 = or i32 %1, 1, !dbg !10701
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10701
  ret void, !dbg !10702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #17 !dbg !10703 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !10704
  %2 = lshr i32 %1, 1, !dbg !10705
  %3 = and i32 %2, 1, !dbg !10705
  ret i32 %3, !dbg !10706
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !10707 {
  ret i32 16000000, !dbg !10709
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #15 !dbg !10713 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #26, !dbg !10714
  ret void, !dbg !10715
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #15 !dbg !10716 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !10720, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 8, metadata !10721, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 84, metadata !10722, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata i32 0, metadata !10723, metadata !DIExpression()), !dbg !10724
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10725
  %2 = and i32 %1, -4227072, !dbg !10725
  %3 = or i32 %2, 4199688, !dbg !10725
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10725
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10726
  %5 = and i32 %4, -196609, !dbg !10726
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !10726
  ret void, !dbg !10727
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #21 !dbg !10728 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #26, !dbg !10729
  ret void, !dbg !10730
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #21 !dbg !10731 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !10734, metadata !DIExpression()), !dbg !10736
  %2 = bitcast i32* %1 to i8*, !dbg !10737
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !10737
  call void @llvm.dbg.declare(metadata i32* %1, metadata !10735, metadata !DIExpression()), !dbg !10738
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10739
  %4 = or i32 %3, 268435456, !dbg !10739
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10739
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !10740
  %6 = and i32 %5, 268435456, !dbg !10740
  store volatile i32 %6, i32* %1, align 4, !dbg !10741
  %7 = load volatile i32, i32* %1, align 4, !dbg !10742
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !10743
  ret void, !dbg !10743
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !10744 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10746, metadata !DIExpression()), !dbg !10747
  %2 = tail call fastcc zeroext i1 @device_is_ready() #26, !dbg !10748
  br i1 %2, label %3, label %4, !dbg !10750

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #26, !dbg !10751
  br label %4, !dbg !10752

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !10747
  ret i32 %5, !dbg !10753
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !10754 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10758, metadata !DIExpression()), !dbg !10759
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10760, !srcloc !10762
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #26, !dbg !10763
  ret i1 %1, !dbg !10764
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !10765 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10766
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #27, !dbg !10767
  ret void, !dbg !10768
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !10769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10771, metadata !DIExpression()), !dbg !10772
  %2 = icmp eq i32 %0, 10, !dbg !10773
  br i1 %2, label %3, label %4, !dbg !10775

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #26, !dbg !10776
  br label %4, !dbg !10778

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !10779
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #26, !dbg !10780
  ret i32 %0, !dbg !10781
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10782 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10785, metadata !DIExpression()), !dbg !10787
  call void @llvm.dbg.value(metadata i8 %0, metadata !10786, metadata !DIExpression()), !dbg !10787
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !10788, !srcloc !10790
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #26, !dbg !10791
  ret void, !dbg !10792
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !10793 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10795, metadata !DIExpression()), !dbg !10798
  call void @llvm.dbg.value(metadata i8 %0, metadata !10796, metadata !DIExpression()), !dbg !10798
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !10799
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !10797, metadata !DIExpression()), !dbg !10798
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !10800
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !10800
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #27, !dbg !10801
  ret void, !dbg !10802
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !10803 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !10805, metadata !DIExpression()), !dbg !10806
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #27, !dbg !10807
  ret i1 %1, !dbg !10808
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !10809 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !10856, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !10857, metadata !DIExpression()), !dbg !10859
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !10858, metadata !DIExpression()), !dbg !10859
  ret void, !dbg !10860
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define internal i32 @tc_shim_init(%struct.device* nocapture noundef readnone %0) #20 !dbg !10861 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10863, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i32 0, metadata !10864, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i32 0, metadata !10864, metadata !DIExpression()), !dbg !10865
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 0, i32 0), align 4, !dbg !10866
  call void @llvm.dbg.value(metadata i32 1, metadata !10864, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i32 1, metadata !10864, metadata !DIExpression()), !dbg !10865
  store i32 0, i32* getelementptr inbounds ([2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 1, i32 0), align 4, !dbg !10866
  call void @llvm.dbg.value(metadata i32 2, metadata !10864, metadata !DIExpression()), !dbg !10865
  ret i32 0, !dbg !10870
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @tc_query_caps(%struct.device* nocapture noundef readnone %0) #3 !dbg !10871 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10873, metadata !DIExpression()), !dbg !10874
  ret i32 50, !dbg !10875
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_setup(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) #1 !dbg !10876 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10878, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !10879, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.value(metadata i32 %2, metadata !10880, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.value(metadata i32 %3, metadata !10881, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.value(metadata i32 %4, metadata !10882, metadata !DIExpression()), !dbg !10886
  %6 = icmp eq i32 %2, 1, !dbg !10887
  br i1 %6, label %8, label %7, !dbg !10889

7:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.153, i32 0, i32 0), i32 noundef 69) #27, !dbg !10890
  br label %70, !dbg !10896

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 7, !dbg !10897
  %10 = load i16, i16* %9, align 2, !dbg !10897
  %11 = and i16 %10, 32, !dbg !10899
  %12 = icmp eq i16 %11, 0, !dbg !10899
  br i1 %12, label %13, label %14, !dbg !10900

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.154, i32 0, i32 0), i32 noundef 69) #27, !dbg !10901
  br label %70, !dbg !10907

14:                                               ; preds = %8
  %15 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 6, !dbg !10908
  %16 = load i16, i16* %15, align 4, !dbg !10908
  %17 = icmp eq i16 %16, 16, !dbg !10910
  br i1 %17, label %19, label %18, !dbg !10911

18:                                               ; preds = %14
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.155, i32 0, i32 0), i32 noundef 69) #27, !dbg !10912
  br label %70, !dbg !10918

19:                                               ; preds = %14
  %20 = icmp eq i32 %4, 1, !dbg !10919
  br i1 %20, label %21, label %37, !dbg !10921

21:                                               ; preds = %19
  switch i32 %3, label %36 [
    i32 2, label %22
    i32 3, label %25
    i32 4, label %33
  ], !dbg !10922

22:                                               ; preds = %21
  %23 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10924
  %24 = bitcast %union.anon.3* %23 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10924
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_encrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %24, align 4, !dbg !10926
  br label %53, !dbg !10927

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10928
  %27 = load i32, i32* %26, align 4, !dbg !10928
  %28 = icmp eq i32 %27, 32, !dbg !10930
  br i1 %28, label %30, label %29, !dbg !10931

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10932
  br label %70, !dbg !10938

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10939
  %32 = bitcast %union.anon.3* %31 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10939
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %32, align 4, !dbg !10940
  br label %53, !dbg !10941

33:                                               ; preds = %21
  %34 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10942
  %35 = bitcast %union.anon.3* %34 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10942
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_encrypt_mac, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %35, align 4, !dbg !10943
  br label %53, !dbg !10944

36:                                               ; preds = %21
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10945
  br label %70, !dbg !10950

37:                                               ; preds = %19
  switch i32 %3, label %52 [
    i32 2, label %38
    i32 3, label %41
    i32 4, label %49
  ], !dbg !10951

38:                                               ; preds = %37
  %39 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10953
  %40 = bitcast %union.anon.3* %39 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10953
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_cbc_decrypt, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %40, align 4, !dbg !10955
  br label %53, !dbg !10956

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 5, i32 0, i32 0, !dbg !10957
  %43 = load i32, i32* %42, align 4, !dbg !10957
  %44 = icmp eq i32 %43, 32, !dbg !10959
  br i1 %44, label %46, label %45, !dbg !10960

45:                                               ; preds = %41
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5.156, i32 0, i32 0), i32 noundef 69) #27, !dbg !10961
  br label %70, !dbg !10967

46:                                               ; preds = %41
  %47 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10968
  %48 = bitcast %union.anon.3* %47 to i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)**, !dbg !10968
  store i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)* @do_ctr_op, i32 (%struct.cipher_ctx*, %struct.cipher_pkt*, i8*)** %48, align 4, !dbg !10969
  br label %53, !dbg !10970

49:                                               ; preds = %37
  %50 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 1, !dbg !10971
  %51 = bitcast %union.anon.3* %50 to i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)**, !dbg !10971
  store i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)* @do_ccm_decrypt_auth, i32 (%struct.cipher_ctx*, %struct.cipher_aead_pkt*, i8*)** %51, align 4, !dbg !10972
  br label %53, !dbg !10973

52:                                               ; preds = %37
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6.157, i32 0, i32 0), i32 noundef 69) #27, !dbg !10974
  br label %70, !dbg !10979

53:                                               ; preds = %38, %46, %49, %22, %30, %33
  %54 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 0, i32 0, !dbg !10980
  store i32 %3, i32* %54, align 4, !dbg !10981
  %55 = tail call fastcc i32 @get_unused_session() #26, !dbg !10982
  call void @llvm.dbg.value(metadata i32 %55, metadata !10885, metadata !DIExpression()), !dbg !10886
  %56 = icmp eq i32 %55, 2, !dbg !10983
  br i1 %56, label %57, label %58, !dbg !10985

57:                                               ; preds = %53
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7.158, i32 0, i32 0), i32 noundef 69) #27, !dbg !10986
  br label %70, !dbg !10992

58:                                               ; preds = %53
  %59 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, !dbg !10993
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %59, metadata !10883, metadata !DIExpression()), !dbg !10886
  %60 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %55, i32 1, !dbg !10994
  %61 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 1, i32 0, !dbg !10996
  %62 = load i8*, i8** %61, align 4, !dbg !10996
  %63 = tail call i32 @tc_aes128_set_encrypt_key(%struct.tc_aes_key_sched_struct* noundef nonnull %60, i8* noundef %62) #27, !dbg !10997
  %64 = icmp eq i32 %63, 0, !dbg !10998
  br i1 %64, label %65, label %67, !dbg !10999

65:                                               ; preds = %58
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.159, i32 0, i32 0), i32 noundef 69) #27, !dbg !11000
  %66 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %59, i32 0, i32 0, !dbg !11006
  store i32 0, i32* %66, align 4, !dbg !11007
  br label %70, !dbg !11008

67:                                               ; preds = %58
  %68 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11009
  %69 = bitcast i8** %68 to %struct.tc_shim_drv_state**, !dbg !11010
  store %struct.tc_shim_drv_state* %59, %struct.tc_shim_drv_state** %69, align 4, !dbg !11010
  br label %70, !dbg !11011

70:                                               ; preds = %67, %65, %57, %52, %45, %36, %29, %18, %13, %7
  %71 = phi i32 [ -22, %7 ], [ -22, %18 ], [ -22, %36 ], [ -28, %57 ], [ -5, %65 ], [ 0, %67 ], [ -22, %29 ], [ -22, %52 ], [ -22, %45 ], [ -22, %13 ], !dbg !10886
  ret i32 %71, !dbg !11012
}

; Function Attrs: noinline nounwind optsize
define internal i32 @tc_session_free(%struct.device* nocapture noundef readnone %0, %struct.cipher_ctx* nocapture noundef readonly %1) #1 !dbg !11013 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11015, metadata !DIExpression()), !dbg !11018
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %1, metadata !11016, metadata !DIExpression()), !dbg !11018
  %3 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %1, i32 0, i32 3, !dbg !11019
  %4 = load i8*, i8** %3, align 4, !dbg !11019
  call void @llvm.dbg.value(metadata i8* %4, metadata !11017, metadata !DIExpression()), !dbg !11018
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 180) #27, !dbg !11020
  %6 = bitcast i8* %4 to i32*, !dbg !11021
  store i32 0, i32* %6, align 4, !dbg !11022
  ret i32 0, !dbg !11023
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_encrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11024 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11026, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11027, metadata !DIExpression()), !dbg !11030
  call void @llvm.dbg.value(metadata i8* %2, metadata !11028, metadata !DIExpression()), !dbg !11030
  %4 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11031
  %5 = bitcast i8** %4 to %struct.tc_shim_drv_state**, !dbg !11031
  %6 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %5, align 4, !dbg !11031
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %6, metadata !11029, metadata !DIExpression()), !dbg !11030
  %7 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11032
  %8 = load i8*, i8** %7, align 4, !dbg !11032
  %9 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11034
  %10 = load i32, i32* %9, align 4, !dbg !11034
  %11 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11035
  %12 = load i8*, i8** %11, align 4, !dbg !11035
  %13 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11036
  %14 = load i32, i32* %13, align 4, !dbg !11036
  %15 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %6, i32 0, i32 1, !dbg !11037
  %16 = tail call i32 @tc_cbc_mode_encrypt(i8* noundef %8, i32 noundef %10, i8* noundef %12, i32 noundef %14, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %15) #27, !dbg !11038
  %17 = icmp eq i32 %16, 0, !dbg !11039
  br i1 %17, label %18, label %19, !dbg !11040

18:                                               ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.168, i32 0, i32 0), i32 noundef 69) #27, !dbg !11041
  br label %22, !dbg !11047

19:                                               ; preds = %3
  %20 = load i32, i32* %13, align 4, !dbg !11048
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11049
  store i32 %20, i32* %21, align 4, !dbg !11050
  br label %22, !dbg !11051

22:                                               ; preds = %19, %18
  %23 = phi i32 [ -5, %18 ], [ 0, %19 ], !dbg !11030
  ret i32 %23, !dbg !11052
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ctr_op(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef %2) #1 !dbg !11053 {
  %4 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11055, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11056, metadata !DIExpression()), !dbg !11061
  call void @llvm.dbg.value(metadata i8* %2, metadata !11057, metadata !DIExpression()), !dbg !11061
  %5 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11062
  %6 = bitcast i8** %5 to %struct.tc_shim_drv_state**, !dbg !11062
  %7 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %6, align 4, !dbg !11062
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %7, metadata !11058, metadata !DIExpression()), !dbg !11061
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %4, i32 0, i32 0, !dbg !11063
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11063
  call void @llvm.dbg.declare(metadata [16 x i8]* %4, metadata !11059, metadata !DIExpression()), !dbg !11064
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %8, i8 0, i32 16, i1 false), !dbg !11064
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 6, !dbg !11065
  %10 = load i16, i16* %9, align 4, !dbg !11065
  %11 = zext i16 %10 to i32, !dbg !11066
  %12 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, i32 0, i32 0, !dbg !11067
  %13 = load i32, i32* %12, align 4, !dbg !11067
  %14 = lshr i32 %13, 3, !dbg !11068
  %15 = sub nsw i32 %11, %14, !dbg !11069
  call void @llvm.dbg.value(metadata i32 %15, metadata !11060, metadata !DIExpression()), !dbg !11061
  %16 = call i8* @memcpy(i8* noundef nonnull %8, i8* noundef %2, i32 noundef %15) #27, !dbg !11070
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11071
  %18 = load i8*, i8** %17, align 4, !dbg !11071
  %19 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11073
  %20 = load i32, i32* %19, align 4, !dbg !11073
  %21 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11074
  %22 = load i8*, i8** %21, align 4, !dbg !11074
  %23 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11075
  %24 = load i32, i32* %23, align 4, !dbg !11075
  %25 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %7, i32 0, i32 1, !dbg !11076
  %26 = call i32 @tc_ctr_mode(i8* noundef %18, i32 noundef %20, i8* noundef %22, i32 noundef %24, i8* noundef nonnull %8, %struct.tc_aes_key_sched_struct* noundef nonnull %25) #27, !dbg !11077
  %27 = icmp eq i32 %26, 0, !dbg !11078
  br i1 %27, label %28, label %29, !dbg !11079

28:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10.167, i32 0, i32 0), i32 noundef 69) #27, !dbg !11080
  br label %32, !dbg !11086

29:                                               ; preds = %3
  %30 = load i32, i32* %23, align 4, !dbg !11087
  %31 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11088
  store i32 %30, i32* %31, align 4, !dbg !11089
  br label %32, !dbg !11090

32:                                               ; preds = %29, %28
  %33 = phi i32 [ -5, %28 ], [ 0, %29 ], !dbg !11061
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #25, !dbg !11091
  ret i32 %33, !dbg !11091
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_encrypt_mac(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11092 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11094, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11095, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.value(metadata i8* %2, metadata !11096, metadata !DIExpression()), !dbg !11109
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11110
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11110
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11097, metadata !DIExpression()), !dbg !11111
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11112
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11112
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11112
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11105, metadata !DIExpression()), !dbg !11109
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11113
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11114
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11106, metadata !DIExpression()), !dbg !11109
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11115
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11115
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11108, metadata !DIExpression()), !dbg !11109
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11116
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11118
  %15 = load i16, i16* %14, align 2, !dbg !11118
  %16 = zext i16 %15 to i32, !dbg !11119
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11120
  %18 = load i16, i16* %17, align 2, !dbg !11120
  %19 = zext i16 %18 to i32, !dbg !11121
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11122
  %21 = icmp eq i32 %20, 0, !dbg !11123
  br i1 %21, label %22, label %23, !dbg !11124

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.11.165, i32 0, i32 0), i32 noundef 69) #27, !dbg !11125
  br label %56, !dbg !11131

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11132
  %25 = load i8*, i8** %24, align 4, !dbg !11132
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11134
  %27 = load i32, i32* %26, align 4, !dbg !11134
  %28 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11135
  %29 = load i8*, i8** %28, align 4, !dbg !11135
  %30 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11136
  %31 = load i32, i32* %30, align 4, !dbg !11136
  %32 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11137
  %33 = load i8*, i8** %32, align 4, !dbg !11137
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11138
  %35 = load i32, i32* %34, align 4, !dbg !11138
  %36 = call i32 @tc_ccm_generation_encryption(i8* noundef %25, i32 noundef %27, i8* noundef %29, i32 noundef %31, i8* noundef %33, i32 noundef %35, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11139
  %37 = icmp eq i32 %36, 0, !dbg !11140
  br i1 %37, label %38, label %39, !dbg !11141

38:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.166, i32 0, i32 0), i32 noundef 69) #27, !dbg !11142
  br label %56, !dbg !11148

39:                                               ; preds = %23
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11149
  %41 = load i8*, i8** %40, align 4, !dbg !11149
  %42 = icmp eq i8* %41, null, !dbg !11151
  br i1 %42, label %50, label %43, !dbg !11152

43:                                               ; preds = %39
  %44 = load i8*, i8** %24, align 4, !dbg !11153
  %45 = load i32, i32* %34, align 4, !dbg !11155
  %46 = getelementptr inbounds i8, i8* %44, i32 %45, !dbg !11156
  %47 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11157
  %48 = load i32, i32* %47, align 4, !dbg !11157
  %49 = call i8* @memcpy(i8* noundef nonnull %41, i8* noundef %46, i32 noundef %48) #27, !dbg !11158
  br label %50, !dbg !11159

50:                                               ; preds = %43, %39
  %51 = load i32, i32* %34, align 4, !dbg !11160
  %52 = getelementptr inbounds %struct.tc_ccm_mode_struct, %struct.tc_ccm_mode_struct* %4, i32 0, i32 2, !dbg !11161
  %53 = load i32, i32* %52, align 4, !dbg !11161
  %54 = add i32 %53, %51, !dbg !11162
  %55 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11163
  store i32 %54, i32* %55, align 4, !dbg !11164
  br label %56, !dbg !11165

56:                                               ; preds = %50, %38, %22
  %57 = phi i32 [ -5, %22 ], [ -5, %38 ], [ 0, %50 ], !dbg !11109
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11166
  ret i32 %57, !dbg !11166
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_cbc_decrypt(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_pkt* nocapture noundef %1, i8* noundef readnone %2) #1 !dbg !11167 {
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11169, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %1, metadata !11170, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata i8* %2, metadata !11171, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* undef, metadata !11172, metadata !DIExpression()), !dbg !11173
  %4 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 0, !dbg !11174
  %5 = load i8*, i8** %4, align 4, !dbg !11174
  %6 = icmp eq i8* %5, %2, !dbg !11176
  br i1 %6, label %8, label %7, !dbg !11177

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13.163, i32 0, i32 0), i32 noundef 69) #27, !dbg !11178
  br label %27, !dbg !11184

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11185
  %10 = bitcast i8** %9 to %struct.tc_shim_drv_state**, !dbg !11185
  %11 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %10, align 4, !dbg !11185
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %11, metadata !11172, metadata !DIExpression()), !dbg !11173
  %12 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 2, !dbg !11186
  %13 = load i8*, i8** %12, align 4, !dbg !11186
  %14 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 3, !dbg !11188
  %15 = load i32, i32* %14, align 4, !dbg !11188
  %16 = getelementptr inbounds i8, i8* %2, i32 16, !dbg !11189
  %17 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 1, !dbg !11190
  %18 = load i32, i32* %17, align 4, !dbg !11190
  %19 = add nsw i32 %18, -16, !dbg !11191
  %20 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %11, i32 0, i32 1, !dbg !11192
  %21 = tail call i32 @tc_cbc_mode_decrypt(i8* noundef %13, i32 noundef %15, i8* noundef nonnull %16, i32 noundef %19, i8* noundef %2, %struct.tc_aes_key_sched_struct* noundef nonnull %20) #27, !dbg !11193
  %22 = icmp eq i32 %21, 0, !dbg !11194
  br i1 %22, label %23, label %24, !dbg !11195

23:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.164, i32 0, i32 0), i32 noundef 69) #27, !dbg !11196
  br label %27, !dbg !11202

24:                                               ; preds = %8
  %25 = load i32, i32* %17, align 4, !dbg !11203
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %1, i32 0, i32 4, !dbg !11204
  store i32 %25, i32* %26, align 4, !dbg !11205
  br label %27, !dbg !11206

27:                                               ; preds = %24, %23, %7
  %28 = phi i32 [ -5, %7 ], [ -5, %23 ], [ 0, %24 ], !dbg !11173
  ret i32 %28, !dbg !11207
}

; Function Attrs: noinline nounwind optsize
define internal i32 @do_ccm_decrypt_auth(%struct.cipher_ctx* nocapture noundef readonly %0, %struct.cipher_aead_pkt* nocapture noundef readonly %1, i8* noundef %2) #1 !dbg !11208 {
  %4 = alloca %struct.tc_ccm_mode_struct, align 4
  call void @llvm.dbg.value(metadata %struct.cipher_ctx* %0, metadata !11210, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata %struct.cipher_aead_pkt* %1, metadata !11211, metadata !DIExpression()), !dbg !11217
  call void @llvm.dbg.value(metadata i8* %2, metadata !11212, metadata !DIExpression()), !dbg !11217
  %5 = bitcast %struct.tc_ccm_mode_struct* %4 to i8*, !dbg !11218
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11218
  call void @llvm.dbg.declare(metadata %struct.tc_ccm_mode_struct* %4, metadata !11213, metadata !DIExpression()), !dbg !11219
  %6 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 3, !dbg !11220
  %7 = bitcast i8** %6 to %struct.tc_shim_drv_state**, !dbg !11220
  %8 = load %struct.tc_shim_drv_state*, %struct.tc_shim_drv_state** %7, align 4, !dbg !11220
  call void @llvm.dbg.value(metadata %struct.tc_shim_drv_state* %8, metadata !11214, metadata !DIExpression()), !dbg !11217
  %9 = getelementptr inbounds %struct.cipher_ctx, %struct.cipher_ctx* %0, i32 0, i32 5, !dbg !11221
  %10 = bitcast %union.anon.5* %9 to %struct.ccm_params*, !dbg !11222
  call void @llvm.dbg.value(metadata %struct.ccm_params* %10, metadata !11215, metadata !DIExpression()), !dbg !11217
  %11 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 0, !dbg !11223
  %12 = load %struct.cipher_pkt*, %struct.cipher_pkt** %11, align 4, !dbg !11223
  call void @llvm.dbg.value(metadata %struct.cipher_pkt* %12, metadata !11216, metadata !DIExpression()), !dbg !11217
  %13 = getelementptr inbounds %struct.tc_shim_drv_state, %struct.tc_shim_drv_state* %8, i32 0, i32 1, !dbg !11224
  %14 = getelementptr inbounds %struct.ccm_params, %struct.ccm_params* %10, i32 0, i32 1, !dbg !11226
  %15 = load i16, i16* %14, align 2, !dbg !11226
  %16 = zext i16 %15 to i32, !dbg !11227
  %17 = bitcast %union.anon.5* %9 to i16*, !dbg !11228
  %18 = load i16, i16* %17, align 2, !dbg !11228
  %19 = zext i16 %18 to i32, !dbg !11229
  %20 = call i32 @tc_ccm_config(%struct.tc_ccm_mode_struct* noundef nonnull %4, %struct.tc_aes_key_sched_struct* noundef nonnull %13, i8* noundef %2, i32 noundef %16, i32 noundef %19) #27, !dbg !11230
  %21 = icmp eq i32 %20, 0, !dbg !11231
  br i1 %21, label %22, label %23, !dbg !11232

22:                                               ; preds = %3
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.15.160, i32 0, i32 0), i32 noundef 69) #27, !dbg !11233
  br label %54, !dbg !11239

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 3, !dbg !11240
  %25 = load i8*, i8** %24, align 4, !dbg !11240
  %26 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 0, !dbg !11242
  %27 = load i8*, i8** %26, align 4, !dbg !11242
  %28 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 1, !dbg !11243
  %29 = load i32, i32* %28, align 4, !dbg !11243
  %30 = getelementptr inbounds i8, i8* %27, i32 %29, !dbg !11244
  %31 = icmp eq i8* %25, %30, !dbg !11245
  br i1 %31, label %33, label %32, !dbg !11246

32:                                               ; preds = %23
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16.161, i32 0, i32 0), i32 noundef 69) #27, !dbg !11247
  br label %54, !dbg !11253

33:                                               ; preds = %23
  %34 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 2, !dbg !11254
  %35 = load i8*, i8** %34, align 4, !dbg !11254
  %36 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 3, !dbg !11256
  %37 = load i32, i32* %36, align 4, !dbg !11256
  %38 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 1, !dbg !11257
  %39 = load i8*, i8** %38, align 4, !dbg !11257
  %40 = getelementptr inbounds %struct.cipher_aead_pkt, %struct.cipher_aead_pkt* %1, i32 0, i32 2, !dbg !11258
  %41 = load i32, i32* %40, align 4, !dbg !11258
  %42 = load i16, i16* %17, align 2, !dbg !11259
  %43 = zext i16 %42 to i32, !dbg !11260
  %44 = add nsw i32 %29, %43, !dbg !11261
  %45 = call i32 @tc_ccm_decryption_verification(i8* noundef %35, i32 noundef %37, i8* noundef %39, i32 noundef %41, i8* noundef %27, i32 noundef %44, %struct.tc_ccm_mode_struct* noundef nonnull %4) #27, !dbg !11262
  %46 = icmp eq i32 %45, 0, !dbg !11263
  br i1 %46, label %47, label %48, !dbg !11264

47:                                               ; preds = %33
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17.162, i32 0, i32 0), i32 noundef 69) #27, !dbg !11265
  br label %54, !dbg !11271

48:                                               ; preds = %33
  %49 = load i32, i32* %28, align 4, !dbg !11272
  %50 = load i16, i16* %17, align 2, !dbg !11273
  %51 = zext i16 %50 to i32, !dbg !11274
  %52 = add nsw i32 %49, %51, !dbg !11275
  %53 = getelementptr inbounds %struct.cipher_pkt, %struct.cipher_pkt* %12, i32 0, i32 4, !dbg !11276
  store i32 %52, i32* %53, align 4, !dbg !11277
  br label %54, !dbg !11278

54:                                               ; preds = %48, %47, %32, %22
  %55 = phi i32 [ -5, %22 ], [ -5, %32 ], [ -5, %47 ], [ 0, %48 ], !dbg !11217
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %5) #25, !dbg !11279
  ret i32 %55, !dbg !11279
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @get_unused_session() unnamed_addr #14 !dbg !11280 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11282, metadata !DIExpression()), !dbg !11283
  br label %1, !dbg !11284

1:                                                ; preds = %0, %8
  %2 = phi i1 [ true, %0 ], [ false, %8 ]
  %3 = phi i32 [ 0, %0 ], [ 1, %8 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11282, metadata !DIExpression()), !dbg !11283
  %4 = getelementptr inbounds [2 x %struct.tc_shim_drv_state], [2 x %struct.tc_shim_drv_state]* @tc_driver_state, i32 0, i32 %3, i32 0, !dbg !11286
  %5 = load i32, i32* %4, align 4, !dbg !11286
  %6 = icmp eq i32 %5, 0, !dbg !11290
  br i1 %6, label %7, label %8, !dbg !11291

7:                                                ; preds = %1
  store i32 1, i32* %4, align 4, !dbg !11292
  br label %9, !dbg !11294

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !11282, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11283
  br i1 %2, label %1, label %9, !dbg !11284, !llvm.loop !11295

9:                                                ; preds = %8, %7
  %10 = phi i32 [ %3, %7 ], [ 2, %8 ]
  ret i32 %10, !dbg !11297
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !11298 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11300, metadata !DIExpression()), !dbg !11305
  call void @llvm.dbg.value(metadata i8 %1, metadata !11301, metadata !DIExpression()), !dbg !11305
  call void @llvm.dbg.value(metadata i32 %2, metadata !11302, metadata !DIExpression()), !dbg !11305
  %5 = bitcast i32* %4 to i8*, !dbg !11306
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11306
  call void @llvm.dbg.value(metadata i32* %4, metadata !11304, metadata !DIExpression(DW_OP_deref)), !dbg !11305
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #26, !dbg !11307
  call void @llvm.dbg.value(metadata i32 %6, metadata !11303, metadata !DIExpression()), !dbg !11305
  %7 = icmp eq i32 %6, 0, !dbg !11308
  br i1 %7, label %8, label %31, !dbg !11310

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !11303, metadata !DIExpression()), !dbg !11305
  %9 = and i32 %2, 131072, !dbg !11311
  %10 = icmp eq i32 %9, 0, !dbg !11313
  br i1 %10, label %28, label %11, !dbg !11314

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !11315
  %13 = icmp eq i32 %12, 0, !dbg !11318
  br i1 %13, label %18, label %14, !dbg !11319

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !11320
  %16 = shl nuw i32 1, %15, !dbg !11320
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #26, !dbg !11322
  br label %25, !dbg !11323

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !11324
  %20 = icmp eq i32 %19, 0, !dbg !11326
  %21 = zext i8 %1 to i32, !dbg !11305
  br i1 %20, label %25, label %22, !dbg !11327

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !11328
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #26, !dbg !11330
  br label %25, !dbg !11331

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !11332
  %27 = load i32, i32* %4, align 4, !dbg !11333
  call void @llvm.dbg.value(metadata i32 %30, metadata !11304, metadata !DIExpression()), !dbg !11305
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #26, !dbg !11334
  br label %31, !dbg !11335

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !11332
  %30 = load i32, i32* %4, align 4, !dbg !11333
  call void @llvm.dbg.value(metadata i32 %30, metadata !11304, metadata !DIExpression()), !dbg !11305
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #26, !dbg !11334
  call void @llvm.dbg.value(metadata i32 0, metadata !11303, metadata !DIExpression()), !dbg !11305
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !11336
  ret i32 %6, !dbg !11336
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #17 !dbg !11337 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11341, metadata !DIExpression()), !dbg !11346
  call void @llvm.dbg.value(metadata i32* %1, metadata !11342, metadata !DIExpression()), !dbg !11346
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11347
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11347
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11347
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11343, metadata !DIExpression()), !dbg !11346
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11348
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11348
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11348
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11345, metadata !DIExpression()), !dbg !11346
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #26, !dbg !11349
  store i32 %9, i32* %1, align 4, !dbg !11350
  ret i32 0, !dbg !11351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #15 !dbg !11352 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11354, metadata !DIExpression()), !dbg !11360
  call void @llvm.dbg.value(metadata i32 %1, metadata !11355, metadata !DIExpression()), !dbg !11360
  call void @llvm.dbg.value(metadata i32 %2, metadata !11356, metadata !DIExpression()), !dbg !11360
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11361
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !11361
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !11361
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !11357, metadata !DIExpression()), !dbg !11360
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !11362
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !11362
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !11362
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !11358, metadata !DIExpression()), !dbg !11360
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #26, !dbg !11363
  call void @llvm.dbg.value(metadata i32 %10, metadata !11359, metadata !DIExpression()), !dbg !11360
  %11 = xor i32 %1, -1, !dbg !11364
  %12 = and i32 %10, %11, !dbg !11365
  %13 = and i32 %2, %1, !dbg !11366
  %14 = or i32 %12, %13, !dbg !11367
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #26, !dbg !11368
  ret i32 0, !dbg !11369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11370 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11372, metadata !DIExpression()), !dbg !11376
  call void @llvm.dbg.value(metadata i32 %1, metadata !11373, metadata !DIExpression()), !dbg !11376
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11377
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11377
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11377
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11374, metadata !DIExpression()), !dbg !11376
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11378
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11378
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11378
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11375, metadata !DIExpression()), !dbg !11376
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !11379
  store volatile i32 %1, i32* %9, align 4, !dbg !11379
  ret i32 0, !dbg !11380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11381 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11383, metadata !DIExpression()), !dbg !11387
  call void @llvm.dbg.value(metadata i32 %1, metadata !11384, metadata !DIExpression()), !dbg !11387
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11388
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11388
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11388
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11385, metadata !DIExpression()), !dbg !11387
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11389
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11389
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11389
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11386, metadata !DIExpression()), !dbg !11387
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #26, !dbg !11390
  ret i32 0, !dbg !11391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #15 !dbg !11392 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11394, metadata !DIExpression()), !dbg !11398
  call void @llvm.dbg.value(metadata i32 %1, metadata !11395, metadata !DIExpression()), !dbg !11398
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11399
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !11399
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !11399
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !11396, metadata !DIExpression()), !dbg !11398
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !11400
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !11400
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !11400
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !11397, metadata !DIExpression()), !dbg !11398
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !11401
  %10 = load volatile i32, i32* %9, align 4, !dbg !11401
  %11 = xor i32 %10, %1, !dbg !11401
  store volatile i32 %11, i32* %9, align 4, !dbg !11401
  ret i32 0, !dbg !11402
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !11403 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11405, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i8 %1, metadata !11406, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i32 %2, metadata !11407, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i32 %3, metadata !11408, metadata !DIExpression()), !dbg !11415
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11416
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11416
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11416
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11409, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i8* undef, metadata !11410, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i32 0, metadata !11412, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.value(metadata i32 0, metadata !11413, metadata !DIExpression()), !dbg !11415
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !11417

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !11418
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #26, !dbg !11422
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11423
  %12 = load i32, i32* %11, align 4, !dbg !11423
  %13 = icmp eq i32 %10, %12, !dbg !11424
  br i1 %13, label %14, label %29, !dbg !11425

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #27, !dbg !11426
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #27, !dbg !11428
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #27, !dbg !11429
  br label %29, !dbg !11430

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11431
  %17 = load i8*, i8** %16, align 4, !dbg !11431
  call void @llvm.dbg.value(metadata i8* %17, metadata !11410, metadata !DIExpression()), !dbg !11415
  %18 = zext i8 %1 to i32, !dbg !11432
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #27, !dbg !11434
  %20 = icmp eq i32 %19, 0, !dbg !11435
  br i1 %20, label %21, label %29, !dbg !11436

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !11437
  %23 = load i32, i32* %22, align 4, !dbg !11437
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #26, !dbg !11438
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !11439

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !11412, metadata !DIExpression()), !dbg !11415
  br label %27, !dbg !11440

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !11412, metadata !DIExpression()), !dbg !11415
  br label %27, !dbg !11442

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !11412, metadata !DIExpression()), !dbg !11415
  br label %27, !dbg !11443

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !11415
  call void @llvm.dbg.value(metadata i32 %28, metadata !11412, metadata !DIExpression()), !dbg !11415
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #27, !dbg !11444
  tail call void @stm32_exti_enable(i32 noundef %18) #27, !dbg !11445
  br label %29, !dbg !11445

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !11415
  call void @llvm.dbg.value(metadata i32 %30, metadata !11413, metadata !DIExpression()), !dbg !11415
  call void @llvm.dbg.label(metadata !11414), !dbg !11446
  ret i32 %30, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #14 !dbg !11448 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11450, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11451, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.value(metadata i1 %2, metadata !11452, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11454
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11455
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !11455
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !11455
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !11453, metadata !DIExpression()), !dbg !11454
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !11456
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #26, !dbg !11457
  ret i32 %8, !dbg !11458
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #14 !dbg !11459 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11465, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !11466, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata i1 %2, metadata !11467, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11468
  %4 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #26, !dbg !11469
  br i1 %4, label %10, label %5, !dbg !11471

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11472
  %7 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef %6) #26, !dbg !11475
  %8 = or i1 %7, %2, !dbg !11476
  %9 = select i1 %8, i32 0, i32 -22, !dbg !11476
  br i1 %2, label %11, label %13, !dbg !11476

10:                                               ; preds = %3
  br i1 %2, label %11, label %13, !dbg !11477

11:                                               ; preds = %10, %5
  %12 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !11478
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef %12) #26, !dbg !11481
  br label %13, !dbg !11482

13:                                               ; preds = %5, %11, %10
  %14 = phi i32 [ %9, %5 ], [ -22, %10 ], [ 0, %11 ], !dbg !11468
  ret i32 %14, !dbg !11483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11484 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11488, metadata !DIExpression()), !dbg !11489
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11490
  %3 = icmp eq %struct._snode* %2, null, !dbg !11490
  ret i1 %3, !dbg !11490
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #14 !dbg !11491 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11495, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11496, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11497, metadata !DIExpression()), !dbg !11499
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11500
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11498, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11497, metadata !DIExpression()), !dbg !11499
  %4 = icmp eq %struct._snode* %3, null, !dbg !11502
  br i1 %4, label %15, label %5, !dbg !11500

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !11498, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !11497, metadata !DIExpression()), !dbg !11499
  %6 = icmp eq %struct._snode* %3, %1, !dbg !11504
  br i1 %6, label %9, label %11, !dbg !11507

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11498, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11497, metadata !DIExpression()), !dbg !11499
  %8 = icmp eq %struct._snode* %13, %1, !dbg !11504
  br i1 %8, label %9, label %11, !dbg !11507, !llvm.loop !11508

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #26, !dbg !11509
  br label %15, !dbg !11509

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11498, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !11497, metadata !DIExpression()), !dbg !11499
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #26, !dbg !11502
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !11498, metadata !DIExpression()), !dbg !11499
  %14 = icmp eq %struct._snode* %13, null, !dbg !11502
  br i1 %14, label %15, label %7, !dbg !11500, !llvm.loop !11508

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !11511
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #11 !dbg !11512 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11516, metadata !DIExpression()), !dbg !11518
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11517, metadata !DIExpression()), !dbg !11518
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11519
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #26, !dbg !11519
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #26, !dbg !11519
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11520
  %5 = icmp eq %struct._snode* %4, null, !dbg !11520
  br i1 %5, label %6, label %8, !dbg !11519

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11522
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #26, !dbg !11522
  br label %8, !dbg !11522

8:                                                ; preds = %6, %2
  ret void, !dbg !11519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11524 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11528, metadata !DIExpression()), !dbg !11529
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11530
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11530
  ret %struct._snode* %3, !dbg !11531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11532 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11536, metadata !DIExpression()), !dbg !11538
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11537, metadata !DIExpression()), !dbg !11538
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11539
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11540
  ret void, !dbg !11541
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11542 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11544, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11545, metadata !DIExpression()), !dbg !11546
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !11547
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11548
  ret void, !dbg !11549
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11550 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11552, metadata !DIExpression()), !dbg !11553
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11554
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11554
  ret %struct._snode* %3, !dbg !11555
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !11556 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11558, metadata !DIExpression()), !dbg !11560
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11559, metadata !DIExpression()), !dbg !11560
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !11561
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !11562
  ret void, !dbg !11563
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #11 !dbg !11564 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11568, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !11569, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !11570, metadata !DIExpression()), !dbg !11571
  %4 = icmp eq %struct._snode* %1, null, !dbg !11572
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #26, !dbg !11574
  br i1 %4, label %6, label %11, !dbg !11575

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #26, !dbg !11576
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11578
  %8 = icmp eq %struct._snode* %7, %2, !dbg !11578
  br i1 %8, label %9, label %15, !dbg !11576

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11580
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #26, !dbg !11580
  br label %15, !dbg !11580

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #26, !dbg !11582
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #26, !dbg !11584
  %13 = icmp eq %struct._snode* %12, %2, !dbg !11584
  br i1 %13, label %14, label %15, !dbg !11582

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #26, !dbg !11586
  br label %15, !dbg !11586

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #26, !dbg !11575
  ret void, !dbg !11575
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #10 !dbg !11588 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11592, metadata !DIExpression()), !dbg !11593
  %2 = icmp eq %struct._snode* %0, null, !dbg !11594
  br i1 %2, label %5, label %3, !dbg !11594

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #26, !dbg !11594
  br label %5, !dbg !11594

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !11594
  ret %struct._snode* %6, !dbg !11594
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11595 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11597, metadata !DIExpression()), !dbg !11598
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #26, !dbg !11599
  ret %struct._snode* %2, !dbg !11599
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !11600 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !11602, metadata !DIExpression()), !dbg !11603
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !11604
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !11604
  ret %struct._snode* %3, !dbg !11605
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !11606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11608, metadata !DIExpression()), !dbg !11611
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #26, !dbg !11612, !range !11613
  call void @llvm.dbg.value(metadata i32 %2, metadata !11609, metadata !DIExpression()), !dbg !11611
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #26, !dbg !11614
  call void @llvm.dbg.value(metadata i32 %3, metadata !11610, metadata !DIExpression()), !dbg !11611
  ret i32 %3, !dbg !11615
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !11616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11618, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i8* %1, metadata !11619, metadata !DIExpression()), !dbg !11621
  call void @llvm.dbg.value(metadata i8* %1, metadata !11620, metadata !DIExpression()), !dbg !11621
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11622
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !11622
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11623
  %6 = bitcast i8* %5 to %struct.device**, !dbg !11623
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !11623
  %8 = shl nuw i32 1, %0, !dbg !11624
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #26, !dbg !11625
  ret void, !dbg !11626
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11627 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !11631, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata i32 %1, metadata !11632, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11633, metadata !DIExpression()), !dbg !11637
  %4 = bitcast i64* %3 to i8*, !dbg !11638
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11638
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !11635, metadata !DIExpression()), !dbg !11637
  store i64 70368744177732, i64* %3, align 8, !dbg !11639
  call void @llvm.dbg.value(metadata i64* %3, metadata !11635, metadata !DIExpression(DW_OP_deref)), !dbg !11637
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #26, !dbg !11640
  call void @llvm.dbg.value(metadata i32 %5, metadata !11636, metadata !DIExpression()), !dbg !11637
  %6 = icmp eq i32 %5, 0, !dbg !11641
  br i1 %6, label %7, label %8, !dbg !11643

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #26, !dbg !11644
  br label %8, !dbg !11645

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #25, !dbg !11646
  ret void, !dbg !11646
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !11647 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11649, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i8* %0, metadata !11650, metadata !DIExpression()), !dbg !11652
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !11653
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !11651, metadata !DIExpression()), !dbg !11652
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !11654
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !11654
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #27, !dbg !11655
  ret i32 %5, !dbg !11656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11657 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11659, metadata !DIExpression()), !dbg !11662
  call void @llvm.dbg.value(metadata i32 %1, metadata !11660, metadata !DIExpression()), !dbg !11662
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #26, !dbg !11663
  call void @llvm.dbg.value(metadata i32 %3, metadata !11661, metadata !DIExpression()), !dbg !11662
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #26, !dbg !11664
  ret void, !dbg !11665
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !11666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11670, metadata !DIExpression()), !dbg !11671
  %2 = sdiv i32 %0, 4, !dbg !11672
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !11673
  %6 = add nsw i32 %5, 16, !dbg !11674
  %7 = shl i32 15, %6, !dbg !11675
  %8 = or i32 %7, %2, !dbg !11676
  ret i32 %8, !dbg !11677
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !11678 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11682, metadata !DIExpression()), !dbg !11684
  call void @llvm.dbg.value(metadata i32 %1, metadata !11683, metadata !DIExpression()), !dbg !11684
  %3 = and i32 %1, 255, !dbg !11685
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !11685
  %5 = load volatile i32, i32* %4, align 4, !dbg !11685
  %6 = lshr i32 %1, 16, !dbg !11685
  %7 = xor i32 %6, -1, !dbg !11685
  %8 = and i32 %5, %7, !dbg !11685
  call void @llvm.dbg.value(metadata i32 %6, metadata !11686, metadata !DIExpression()) #25, !dbg !11690
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11692, !srcloc !11693
  call void @llvm.dbg.value(metadata i32 %9, metadata !11689, metadata !DIExpression()) #25, !dbg !11690
  call void @llvm.dbg.value(metadata i32 %9, metadata !11694, metadata !DIExpression()) #25, !dbg !11699
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #25, !dbg !11701, !range !9466
  %11 = shl i32 %0, %10, !dbg !11685
  %12 = or i32 %11, %8, !dbg !11685
  store volatile i32 %12, i32* %4, align 4, !dbg !11685
  ret void, !dbg !11702
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11703 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !11707, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !11708, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata i32 %2, metadata !11709, metadata !DIExpression()), !dbg !11712
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #26, !dbg !11713
  %5 = icmp eq %struct._snode* %4, null, !dbg !11713
  br i1 %5, label %21, label %6, !dbg !11713

6:                                                ; preds = %3, %19
  %7 = phi %struct._snode* [ %8, %19 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #26, !dbg !11715
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11711, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.value(metadata %struct._snode* %7, metadata !11710, metadata !DIExpression()), !dbg !11712
  %9 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !11716
  %10 = bitcast %struct._snode* %9 to i32*, !dbg !11716
  %11 = load i32, i32* %10, align 4, !dbg !11716
  %12 = and i32 %11, %2, !dbg !11720
  %13 = icmp eq i32 %12, 0, !dbg !11720
  br i1 %13, label %19, label %14, !dbg !11721

14:                                               ; preds = %6
  %15 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %15, metadata !11710, metadata !DIExpression()), !dbg !11712
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !11722
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !11722
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !11722
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %15, i32 noundef %12) #27, !dbg !11724
  br label %19, !dbg !11725

19:                                               ; preds = %6, %14
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !11710, metadata !DIExpression()), !dbg !11712
  %20 = icmp eq %struct._snode* %8, null, !dbg !11726
  br i1 %20, label %21, label %6, !dbg !11726

21:                                               ; preds = %19, %3
  ret void, !dbg !11727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !11728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11730, metadata !DIExpression()), !dbg !11731
  %2 = and i32 %0, 255, !dbg !11732
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !11732
  %4 = load volatile i32, i32* %3, align 4, !dbg !11732
  %5 = lshr i32 %0, 16, !dbg !11732
  %6 = and i32 %4, %5, !dbg !11732
  call void @llvm.dbg.value(metadata i32 %5, metadata !11686, metadata !DIExpression()) #25, !dbg !11733
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #30, !dbg !11735, !srcloc !11693
  call void @llvm.dbg.value(metadata i32 %7, metadata !11689, metadata !DIExpression()) #25, !dbg !11733
  call void @llvm.dbg.value(metadata i32 %7, metadata !11694, metadata !DIExpression()) #25, !dbg !11736
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11738, !range !9466
  %9 = lshr i32 %6, %8, !dbg !11739
  ret i32 %9, !dbg !11740
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11741 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11746, metadata !DIExpression()), !dbg !11748
  call void @llvm.dbg.value(metadata i32 %1, metadata !11747, metadata !DIExpression()), !dbg !11748
  %3 = shl i32 %1, 16, !dbg !11749
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !11749
  store volatile i32 %3, i32* %4, align 4, !dbg !11749
  ret void, !dbg !11750
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11751 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11755, metadata !DIExpression()), !dbg !11756
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11757
  %3 = load volatile i32, i32* %2, align 4, !dbg !11757
  ret i32 %3, !dbg !11758
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !11759 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11761, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.value(metadata i32 %1, metadata !11762, metadata !DIExpression()), !dbg !11763
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !11764
  store volatile i32 %1, i32* %3, align 4, !dbg !11764
  ret void, !dbg !11765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #17 !dbg !11766 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11768, metadata !DIExpression()), !dbg !11769
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !11770
  %3 = load volatile i32, i32* %2, align 4, !dbg !11770
  ret i32 %3, !dbg !11771
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #11 !dbg !11772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11776, metadata !DIExpression()), !dbg !11778
  call void @llvm.dbg.value(metadata i32* %1, metadata !11777, metadata !DIExpression()), !dbg !11778
  %3 = and i32 %0, 131072, !dbg !11779
  %4 = icmp eq i32 %3, 0, !dbg !11781
  br i1 %4, label %22, label %5, !dbg !11782

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !11783
  %6 = and i32 %0, 2, !dbg !11785
  %7 = icmp eq i32 %6, 0, !dbg !11787
  br i1 %7, label %11, label %8, !dbg !11788

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !11789
  %10 = icmp eq i32 %9, 0, !dbg !11789
  br i1 %10, label %33, label %11, !dbg !11792

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !11793
  store i32 %12, i32* %1, align 4, !dbg !11793
  %13 = and i32 %0, 16, !dbg !11794
  %14 = icmp eq i32 %13, 0, !dbg !11796
  br i1 %14, label %17, label %15, !dbg !11797

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !11798
  br label %31, !dbg !11800

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !11801
  %19 = icmp eq i32 %18, 0, !dbg !11803
  br i1 %19, label %33, label %20, !dbg !11804

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !11805
  br label %31, !dbg !11807

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !11808
  %24 = icmp eq i32 %23, 0, !dbg !11810
  br i1 %24, label %31, label %25, !dbg !11811

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !11812
  %27 = icmp eq i32 %26, 0, !dbg !11815
  br i1 %27, label %28, label %31, !dbg !11816

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !11817
  br label %33, !dbg !11818

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !11778
  ret i32 %34, !dbg !11818
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !11819 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11823, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %1, metadata !11824, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %2, metadata !11825, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %3, metadata !11826, metadata !DIExpression()), !dbg !11834
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !11835
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !11835
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !11835
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !11827, metadata !DIExpression()), !dbg !11834
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !11836
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !11836
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !11836
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !11828, metadata !DIExpression()), !dbg !11834
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #26, !dbg !11837
  call void @llvm.dbg.value(metadata i32 %11, metadata !11829, metadata !DIExpression()), !dbg !11834
  %12 = and i32 %2, 48, !dbg !11838
  call void @llvm.dbg.value(metadata i32 %12, metadata !11830, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %2, metadata !11831, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %2, metadata !11832, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %2, metadata !11833, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !11834
  %13 = lshr i32 %2, 6, !dbg !11839
  %14 = and i32 %13, 1, !dbg !11839
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #26, !dbg !11840
  %15 = lshr i32 %2, 7, !dbg !11841
  %16 = and i32 %15, 3, !dbg !11841
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #26, !dbg !11842
  %17 = lshr i32 %2, 9, !dbg !11843
  %18 = and i32 %17, 3, !dbg !11843
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #26, !dbg !11844
  %19 = icmp eq i32 %12, 32, !dbg !11845
  br i1 %19, label %20, label %24, !dbg !11847

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !11848
  br i1 %21, label %22, label %23, !dbg !11851

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11852
  br label %24, !dbg !11854

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #26, !dbg !11855
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !11857
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #26, !dbg !11858
  ret void, !dbg !11859
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !11860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11862, metadata !DIExpression()), !dbg !11864
  %2 = shl nuw i32 1, %0, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %2, metadata !11863, metadata !DIExpression()), !dbg !11864
  ret i32 %2, !dbg !11866
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !11867 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11871, metadata !DIExpression()), !dbg !11874
  call void @llvm.dbg.value(metadata i32 %1, metadata !11872, metadata !DIExpression()), !dbg !11874
  call void @llvm.dbg.value(metadata i32 %2, metadata !11873, metadata !DIExpression()), !dbg !11874
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !11875
  %5 = load volatile i32, i32* %4, align 4, !dbg !11875
  %6 = xor i32 %1, -1, !dbg !11875
  %7 = and i32 %5, %6, !dbg !11875
  %8 = mul i32 %2, %1, !dbg !11875
  %9 = or i32 %7, %8, !dbg !11875
  store volatile i32 %9, i32* %4, align 4, !dbg !11875
  ret void, !dbg !11876
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11877 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11879, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 %1, metadata !11880, metadata !DIExpression()), !dbg !11882
  call void @llvm.dbg.value(metadata i32 %2, metadata !11881, metadata !DIExpression()), !dbg !11882
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !11883
  %5 = load volatile i32, i32* %4, align 4, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()) #25, !dbg !11884
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11886, !srcloc !11693
  call void @llvm.dbg.value(metadata i32 %6, metadata !11689, metadata !DIExpression()) #25, !dbg !11884
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()) #25, !dbg !11887
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11889, !range !9466
  %8 = shl nuw nsw i32 %7, 1, !dbg !11883
  %9 = shl i32 3, %8, !dbg !11883
  %10 = xor i32 %9, -1, !dbg !11883
  %11 = and i32 %5, %10, !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()) #25, !dbg !11890
  call void @llvm.dbg.value(metadata i32 %6, metadata !11689, metadata !DIExpression()) #25, !dbg !11890
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()) #25, !dbg !11892
  %12 = shl i32 %2, %8, !dbg !11883
  %13 = or i32 %11, %12, !dbg !11883
  store volatile i32 %13, i32* %4, align 4, !dbg !11883
  ret void, !dbg !11894
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11895 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11897, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata i32 %1, metadata !11898, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.value(metadata i32 %2, metadata !11899, metadata !DIExpression()), !dbg !11900
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !11901
  %5 = load volatile i32, i32* %4, align 4, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()) #25, !dbg !11902
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11904, !srcloc !11693
  call void @llvm.dbg.value(metadata i32 %6, metadata !11689, metadata !DIExpression()) #25, !dbg !11902
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()) #25, !dbg !11905
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11907, !range !9466
  %8 = shl nuw nsw i32 %7, 1, !dbg !11901
  %9 = shl i32 3, %8, !dbg !11901
  %10 = xor i32 %9, -1, !dbg !11901
  %11 = and i32 %5, %10, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()) #25, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %6, metadata !11689, metadata !DIExpression()) #25, !dbg !11908
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()) #25, !dbg !11910
  %12 = shl i32 %2, %8, !dbg !11901
  %13 = or i32 %11, %12, !dbg !11901
  store volatile i32 %13, i32* %4, align 4, !dbg !11901
  ret void, !dbg !11912
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11913 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11915, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.value(metadata i32 %1, metadata !11916, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.value(metadata i32 %2, metadata !11917, metadata !DIExpression()), !dbg !11918
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !11919
  %5 = load volatile i32, i32* %4, align 4, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()) #25, !dbg !11920
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11922, !srcloc !11693
  call void @llvm.dbg.value(metadata i32 %6, metadata !11689, metadata !DIExpression()) #25, !dbg !11920
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()) #25, !dbg !11923
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11925, !range !9466
  %8 = shl nuw nsw i32 %7, 2, !dbg !11919
  %9 = shl i32 15, %8, !dbg !11919
  %10 = xor i32 %9, -1, !dbg !11919
  %11 = and i32 %5, %10, !dbg !11919
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()) #25, !dbg !11926
  call void @llvm.dbg.value(metadata i32 %6, metadata !11689, metadata !DIExpression()) #25, !dbg !11926
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()) #25, !dbg !11928
  %12 = shl i32 %2, %8, !dbg !11919
  %13 = or i32 %11, %12, !dbg !11919
  store volatile i32 %13, i32* %4, align 4, !dbg !11919
  ret void, !dbg !11930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11931 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11933, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata i32 %1, metadata !11934, metadata !DIExpression()), !dbg !11936
  call void @llvm.dbg.value(metadata i32 %2, metadata !11935, metadata !DIExpression()), !dbg !11936
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !11937
  %5 = load volatile i32, i32* %4, align 4, !dbg !11937
  %6 = lshr i32 %1, 8, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %6, metadata !11686, metadata !DIExpression()) #25, !dbg !11938
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #30, !dbg !11940, !srcloc !11693
  call void @llvm.dbg.value(metadata i32 %7, metadata !11689, metadata !DIExpression()) #25, !dbg !11938
  call void @llvm.dbg.value(metadata i32 %7, metadata !11694, metadata !DIExpression()) #25, !dbg !11941
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #25, !dbg !11943, !range !9466
  %9 = shl nuw nsw i32 %8, 2, !dbg !11937
  %10 = shl i32 15, %9, !dbg !11937
  %11 = xor i32 %10, -1, !dbg !11937
  %12 = and i32 %5, %11, !dbg !11937
  call void @llvm.dbg.value(metadata i32 %6, metadata !11686, metadata !DIExpression()) #25, !dbg !11944
  call void @llvm.dbg.value(metadata i32 %7, metadata !11689, metadata !DIExpression()) #25, !dbg !11944
  call void @llvm.dbg.value(metadata i32 %7, metadata !11694, metadata !DIExpression()) #25, !dbg !11946
  %13 = shl i32 %2, %9, !dbg !11937
  %14 = or i32 %12, %13, !dbg !11937
  store volatile i32 %14, i32* %4, align 4, !dbg !11937
  ret void, !dbg !11948
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11949 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !11951, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i32 %1, metadata !11952, metadata !DIExpression()), !dbg !11954
  call void @llvm.dbg.value(metadata i32 %2, metadata !11953, metadata !DIExpression()), !dbg !11954
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !11955
  %5 = load volatile i32, i32* %4, align 4, !dbg !11955
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()) #25, !dbg !11956
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #30, !dbg !11958, !srcloc !11693
  call void @llvm.dbg.value(metadata i32 %6, metadata !11689, metadata !DIExpression()) #25, !dbg !11956
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()) #25, !dbg !11959
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #25, !dbg !11961, !range !9466
  %8 = shl nuw nsw i32 %7, 1, !dbg !11955
  %9 = shl i32 3, %8, !dbg !11955
  %10 = xor i32 %9, -1, !dbg !11955
  %11 = and i32 %5, %10, !dbg !11955
  call void @llvm.dbg.value(metadata i32 %1, metadata !11686, metadata !DIExpression()) #25, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %6, metadata !11689, metadata !DIExpression()) #25, !dbg !11962
  call void @llvm.dbg.value(metadata i32 %6, metadata !11694, metadata !DIExpression()) #25, !dbg !11964
  %12 = shl i32 %2, %8, !dbg !11955
  %13 = or i32 %11, %12, !dbg !11955
  store volatile i32 %13, i32* %4, align 4, !dbg !11955
  ret void, !dbg !11966
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !11967 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11969, metadata !DIExpression()), !dbg !11972
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !11973
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !11973
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !11973
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !11970, metadata !DIExpression()), !dbg !11972
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !11974
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !11975
  %6 = tail call fastcc zeroext i1 @device_is_ready.178() #26, !dbg !11976
  br i1 %6, label %7, label %11, !dbg !11978

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #26, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %8, metadata !11971, metadata !DIExpression()), !dbg !11972
  %9 = icmp slt i32 %8, 0, !dbg !11980
  %10 = select i1 %9, i32 %8, i32 0, !dbg !11982
  br label %11, !dbg !11982

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !11972
  ret i32 %12, !dbg !11983
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.178() unnamed_addr #1 !dbg !11984 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !11988, metadata !DIExpression()), !dbg !11989
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !11990, !srcloc !11992
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.179() #26, !dbg !11993
  ret i1 %1, !dbg !11994
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* nocapture noundef readonly %0) unnamed_addr #1 !dbg !11995 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11999, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i8 1, metadata !12000, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* undef, metadata !12001, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 0, metadata !12002, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12003, metadata !DIExpression()), !dbg !12004
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12005
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !12005
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !12005
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !12001, metadata !DIExpression()), !dbg !12004
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !12006
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !12009
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #26, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %7, metadata !12002, metadata !DIExpression()), !dbg !12004
  call void @llvm.dbg.value(metadata i32 %7, metadata !12002, metadata !DIExpression()), !dbg !12004
  ret i32 %7, !dbg !12011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.179() unnamed_addr #1 !dbg !12012 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12014, metadata !DIExpression()), !dbg !12015
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #27, !dbg !12016
  ret i1 %1, !dbg !12017
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !12018 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12022, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.value(metadata i32 %1, metadata !12023, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.value(metadata i32 %2, metadata !12024, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.value(metadata i32 %3, metadata !12025, metadata !DIExpression()), !dbg !12030
  call void @llvm.dbg.value(metadata i32 0, metadata !12026, metadata !DIExpression()), !dbg !12030
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #26, !dbg !12031
  %5 = icmp eq i32 %3, 17, !dbg !12032
  br i1 %5, label %6, label %14, !dbg !12033

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !12034
  call void @llvm.dbg.value(metadata i32 %7, metadata !12027, metadata !DIExpression()), !dbg !12035
  %8 = icmp eq i32 %7, 0, !dbg !12036
  %9 = shl nuw i32 1, %1, !dbg !12038
  br i1 %8, label %12, label %10, !dbg !12039

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12040
  br label %14, !dbg !12042

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #26, !dbg !12043
  br label %14, !dbg !12046

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !12047
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #21 !dbg !12048 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12050, metadata !DIExpression()), !dbg !12054
  call void @llvm.dbg.value(metadata i8* %1, metadata !12051, metadata !DIExpression()), !dbg !12054
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12055
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12055
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12055
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12052, metadata !DIExpression()), !dbg !12054
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12056
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12056
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #26, !dbg !12058
  %9 = icmp eq i32 %8, 0, !dbg !12058
  br i1 %9, label %12, label %10, !dbg !12059

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12060
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #26, !dbg !12062
  br label %12, !dbg !12063

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12064
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12066
  %15 = icmp eq i32 %14, 0, !dbg !12066
  br i1 %15, label %19, label %16, !dbg !12067

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12068
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #26, !dbg !12069
  store i8 %18, i8* %1, align 1, !dbg !12070
  br label %19, !dbg !12071

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !12054
  ret i32 %20, !dbg !12072
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !12073 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12075, metadata !DIExpression()), !dbg !12079
  call void @llvm.dbg.value(metadata i8 %1, metadata !12076, metadata !DIExpression()), !dbg !12079
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12080
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12080
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12080
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12077, metadata !DIExpression()), !dbg !12079
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !12081

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12082
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #26, !dbg !12085
  %10 = icmp eq i32 %9, 0, !dbg !12085
  br i1 %10, label %18, label %11, !dbg !12086

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !12087, !srcloc !12094
  call void @llvm.dbg.value(metadata i32 undef, metadata !12090, metadata !DIExpression()) #25, !dbg !12095
  call void @llvm.dbg.value(metadata i32 undef, metadata !12091, metadata !DIExpression()) #25, !dbg !12095
  call void @llvm.dbg.value(metadata i32 undef, metadata !12078, metadata !DIExpression()), !dbg !12079
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12096
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #26, !dbg !12098
  %15 = icmp eq i32 %14, 0, !dbg !12098
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !12087
  br i1 %15, label %17, label %19, !dbg !12099

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !12090, metadata !DIExpression()) #25, !dbg !12095
  call void @llvm.dbg.value(metadata i32 %16, metadata !12078, metadata !DIExpression()), !dbg !12079
  call void @llvm.dbg.value(metadata i32 undef, metadata !12100, metadata !DIExpression()) #25, !dbg !12103
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #25, !dbg !12105, !srcloc !12106
  br label %18, !dbg !12107

18:                                               ; preds = %17, %7
  br label %7, !dbg !12082, !llvm.loop !12108

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !12087
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12110
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #26, !dbg !12111
  call void @llvm.dbg.value(metadata i32 %20, metadata !12100, metadata !DIExpression()) #25, !dbg !12112
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #25, !dbg !12114, !srcloc !12106
  ret void, !dbg !12115
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #21 !dbg !12116 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12118, metadata !DIExpression()), !dbg !12121
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12122
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12122
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12122
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12119, metadata !DIExpression()), !dbg !12121
  call void @llvm.dbg.value(metadata i32 0, metadata !12120, metadata !DIExpression()), !dbg !12121
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12123
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12123
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #26, !dbg !12125
  %8 = icmp ne i32 %7, 0, !dbg !12125
  %9 = zext i1 %8 to i32, !dbg !12126
  call void @llvm.dbg.value(metadata i32 %9, metadata !12120, metadata !DIExpression()), !dbg !12121
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12127
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #26, !dbg !12129
  %12 = icmp eq i32 %11, 0, !dbg !12129
  %13 = or i32 %9, 2, !dbg !12130
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !12130
  call void @llvm.dbg.value(metadata i32 %14, metadata !12120, metadata !DIExpression()), !dbg !12121
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12131
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #26, !dbg !12133
  %17 = icmp eq i32 %16, 0, !dbg !12133
  %18 = or i32 %14, 4, !dbg !12134
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %19, metadata !12120, metadata !DIExpression()), !dbg !12121
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12135
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #26, !dbg !12137
  %22 = icmp eq i32 %21, 0, !dbg !12137
  %23 = or i32 %19, 8, !dbg !12138
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %24, metadata !12120, metadata !DIExpression()), !dbg !12121
  %25 = and i32 %24, 8, !dbg !12139
  %26 = icmp eq i32 %25, 0, !dbg !12139
  br i1 %26, label %29, label %27, !dbg !12141

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12142
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #26, !dbg !12144
  br label %29, !dbg !12145

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !12146
  %31 = icmp eq i32 %30, 0, !dbg !12146
  br i1 %31, label %34, label %32, !dbg !12148

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12149
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #26, !dbg !12151
  br label %34, !dbg !12152

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !12153
  %36 = icmp eq i32 %35, 0, !dbg !12153
  br i1 %36, label %39, label %37, !dbg !12155

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12156
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #26, !dbg !12158
  br label %39, !dbg !12159

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !12160
  %41 = icmp eq i32 %40, 0, !dbg !12160
  br i1 %41, label %44, label %42, !dbg !12162

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12163
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #26, !dbg !12165
  br label %44, !dbg !12166

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12167
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #26, !dbg !12168
  ret i32 %24, !dbg !12169
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !12170 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12172, metadata !DIExpression()), !dbg !12181
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12173, metadata !DIExpression()), !dbg !12181
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12182
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12182
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12182
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12174, metadata !DIExpression()), !dbg !12181
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12183
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !12183
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !12183
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !12175, metadata !DIExpression()), !dbg !12181
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12184
  %10 = load i8, i8* %9, align 4, !dbg !12184
  %11 = zext i8 %10 to i32, !dbg !12185
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #26, !dbg !12186
  call void @llvm.dbg.value(metadata i32 %12, metadata !12177, metadata !DIExpression()), !dbg !12181
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12187
  %14 = load i8, i8* %13, align 1, !dbg !12187
  %15 = zext i8 %14 to i32, !dbg !12188
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #26, !dbg !12189
  call void @llvm.dbg.value(metadata i32 %16, metadata !12178, metadata !DIExpression()), !dbg !12181
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12190
  %18 = load i8, i8* %17, align 2, !dbg !12190
  %19 = zext i8 %18 to i32, !dbg !12191
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #26, !dbg !12192
  call void @llvm.dbg.value(metadata i32 %20, metadata !12179, metadata !DIExpression()), !dbg !12181
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12193
  %22 = load i8, i8* %21, align 1, !dbg !12193
  %23 = zext i8 %22 to i32, !dbg !12194
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #26, !dbg !12195
  call void @llvm.dbg.value(metadata i32 %24, metadata !12180, metadata !DIExpression()), !dbg !12181
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !12196

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !12198
  br i1 %26, label %69, label %27, !dbg !12200

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !12201

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !12202
  br i1 %29, label %65, label %30, !dbg !12202

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !12204
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !12181
  br i1 %31, label %38, label %34, !dbg !12206

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !12207
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !12207

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !12210
  br i1 %37, label %38, label %69, !dbg !12211

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12212
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #26, !dbg !12213
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #26, !dbg !12214
  %41 = icmp eq i32 %12, %40, !dbg !12216
  br i1 %41, label %43, label %42, !dbg !12217

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #26, !dbg !12218
  br label %43, !dbg !12220

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #26, !dbg !12221
  %45 = icmp eq i32 %16, %44, !dbg !12223
  br i1 %45, label %47, label %46, !dbg !12224

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #26, !dbg !12225
  br label %47, !dbg !12227

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #26, !dbg !12228
  %49 = icmp eq i32 %20, %48, !dbg !12230
  br i1 %49, label %51, label %50, !dbg !12231

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #26, !dbg !12232
  br label %51, !dbg !12234

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #26, !dbg !12235
  %53 = icmp eq i32 %24, %52, !dbg !12237
  br i1 %53, label %55, label %54, !dbg !12238

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #26, !dbg !12239
  br label %55, !dbg !12241

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12242
  %57 = load i32, i32* %56, align 4, !dbg !12242
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !12244
  %59 = load i32, i32* %58, align 4, !dbg !12244
  %60 = icmp eq i32 %57, %59, !dbg !12245
  br i1 %60, label %63, label %61, !dbg !12246

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #26, !dbg !12247
  %62 = load i32, i32* %56, align 4, !dbg !12249
  store i32 %62, i32* %58, align 4, !dbg !12250
  br label %63, !dbg !12251

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !12252
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #26, !dbg !12253
  br label %69, !dbg !12254

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !12202
  %67 = and i8 %66, 1, !dbg !12202
  %68 = icmp eq i8 %67, 0, !dbg !12202
  br i1 %68, label %30, label %69, !dbg !12202

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !12181
  ret i32 %70, !dbg !12255
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #22 !dbg !12256 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12258, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !12259, metadata !DIExpression()), !dbg !12261
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12262
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !12262
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !12262
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !12260, metadata !DIExpression()), !dbg !12261
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !12263
  %7 = load i32, i32* %6, align 4, !dbg !12263
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !12264
  store i32 %7, i32* %8, align 4, !dbg !12265
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12266, !range !12267
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #26, !dbg !12268
  %11 = trunc i32 %10 to i8, !dbg !12268
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !12269
  store i8 %11, i8* %12, align 4, !dbg !12270
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #26, !dbg !12271, !range !12272
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #26, !dbg !12273
  %15 = trunc i32 %14 to i8, !dbg !12273
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !12274
  store i8 %15, i8* %16, align 1, !dbg !12275
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #26, !dbg !12276
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #26, !dbg !12277, !range !12267
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #26, !dbg !12278
  %20 = trunc i32 %19 to i8, !dbg !12278
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !12279
  store i8 %20, i8* %21, align 2, !dbg !12280
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #26, !dbg !12281, !range !12282
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #26, !dbg !12283
  %24 = trunc i32 %23 to i8, !dbg !12283
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !12284
  store i8 %24, i8* %25, align 1, !dbg !12285
  ret i32 0, !dbg !12286
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12287 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12291, metadata !DIExpression()), !dbg !12293
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12294
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12294
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12294
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12292, metadata !DIExpression()), !dbg !12293
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12295
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12295
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #26, !dbg !12296
  ret i32 %7, !dbg !12297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !12298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12302, metadata !DIExpression()), !dbg !12303
  %2 = icmp eq i32 %0, 1024, !dbg !12304
  %3 = select i1 %2, i32 2, i32 0, !dbg !12304
  %4 = icmp eq i32 %0, 1536, !dbg !12304
  %5 = select i1 %4, i32 1, i32 %3, !dbg !12304
  ret i32 %5, !dbg !12305
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12306 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12308, metadata !DIExpression()), !dbg !12310
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12311
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12311
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12311
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12309, metadata !DIExpression()), !dbg !12310
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12312
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12312
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #26, !dbg !12313
  ret i32 %7, !dbg !12314
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #13 !dbg !12315 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12319, metadata !DIExpression()), !dbg !12320
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !12321
  %3 = icmp ult i32 %2, 4, !dbg !12321
  br i1 %3, label %4, label %7, !dbg !12321

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !12321
  %6 = load i32, i32* %5, align 4, !dbg !12321
  br label %7, !dbg !12321

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !12322
  ret i32 %8, !dbg !12324
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12325 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12327, metadata !DIExpression()), !dbg !12329
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12330
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12330
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12330
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12328, metadata !DIExpression()), !dbg !12329
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12331
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12331
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #26, !dbg !12332
  ret i32 %7, !dbg !12333
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12338, metadata !DIExpression()), !dbg !12340
  call void @llvm.dbg.value(metadata i32 %1, metadata !12339, metadata !DIExpression()), !dbg !12340
  %3 = icmp eq i32 %0, 4096, !dbg !12341
  %4 = icmp eq i32 %1, 0, !dbg !12341
  %5 = select i1 %4, i32 4, i32 3, !dbg !12341
  %6 = select i1 %4, i32 3, i32 2, !dbg !12341
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !12341
  ret i32 %7, !dbg !12342
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #17 !dbg !12343 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12345, metadata !DIExpression()), !dbg !12347
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12348
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12348
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12348
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12346, metadata !DIExpression()), !dbg !12347
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12349
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !12349
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #26, !dbg !12350
  ret i32 %7, !dbg !12351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12356, metadata !DIExpression()), !dbg !12357
  %2 = icmp eq i32 %0, 768, !dbg !12358
  %3 = zext i1 %2 to i32, !dbg !12357
  ret i32 %3, !dbg !12360
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12361 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12366, metadata !DIExpression()), !dbg !12367
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12368
  %3 = load volatile i32, i32* %2, align 4, !dbg !12368
  %4 = and i32 %3, 768, !dbg !12368
  ret i32 %4, !dbg !12369
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12370 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12372, metadata !DIExpression()), !dbg !12373
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12374
  %3 = load volatile i32, i32* %2, align 4, !dbg !12374
  %4 = and i32 %3, 4096, !dbg !12374
  ret i32 %4, !dbg !12375
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12376 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12378, metadata !DIExpression()), !dbg !12379
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12380
  %3 = load volatile i32, i32* %2, align 4, !dbg !12380
  %4 = and i32 %3, 12288, !dbg !12380
  ret i32 %4, !dbg !12381
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12382 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12384, metadata !DIExpression()), !dbg !12385
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12386
  %3 = load volatile i32, i32* %2, align 4, !dbg !12386
  %4 = and i32 %3, 1536, !dbg !12386
  ret i32 %4, !dbg !12387
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !12388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12392, metadata !DIExpression()), !dbg !12393
  %2 = icmp eq i32 %0, 2, !dbg !12394
  %3 = select i1 %2, i32 1024, i32 0, !dbg !12394
  %4 = icmp eq i32 %0, 1, !dbg !12394
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !12394
  ret i32 %5, !dbg !12395
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !12396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12400, metadata !DIExpression()), !dbg !12401
  %2 = icmp ult i32 %0, 3, !dbg !12402
  br i1 %2, label %3, label %6, !dbg !12402

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !12402
  %5 = load i32, i32* %4, align 4, !dbg !12402
  br label %6, !dbg !12402

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !12403
  ret i32 %7, !dbg !12405
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !12406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12410, metadata !DIExpression()), !dbg !12412
  call void @llvm.dbg.value(metadata i32 %1, metadata !12411, metadata !DIExpression()), !dbg !12412
  %3 = icmp eq i32 %0, 4, !dbg !12413
  %4 = icmp eq i32 %1, 0, !dbg !12413
  %5 = select i1 %4, i32 0, i32 4096, !dbg !12413
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !12413
  ret i32 %6, !dbg !12414
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !12415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12419, metadata !DIExpression()), !dbg !12420
  %2 = icmp eq i32 %0, 1, !dbg !12421
  %3 = select i1 %2, i32 768, i32 0, !dbg !12420
  ret i32 %3, !dbg !12423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12424 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12428, metadata !DIExpression()), !dbg !12429
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12430
  %3 = load volatile i32, i32* %2, align 4, !dbg !12430
  %4 = and i32 %3, -8193, !dbg !12430
  store volatile i32 %4, i32* %2, align 4, !dbg !12430
  ret void, !dbg !12431
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12432 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12436, metadata !DIExpression()), !dbg !12439
  call void @llvm.dbg.value(metadata i32 %1, metadata !12437, metadata !DIExpression()), !dbg !12439
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12440
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12440
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12440
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12438, metadata !DIExpression()), !dbg !12439
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12441
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12441
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12442
  ret void, !dbg !12443
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12444 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12446, metadata !DIExpression()), !dbg !12449
  call void @llvm.dbg.value(metadata i32 %1, metadata !12447, metadata !DIExpression()), !dbg !12449
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12450
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12450
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12450
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12448, metadata !DIExpression()), !dbg !12449
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12451
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12451
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12452
  ret void, !dbg !12453
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12454 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12456, metadata !DIExpression()), !dbg !12459
  call void @llvm.dbg.value(metadata i32 %1, metadata !12457, metadata !DIExpression()), !dbg !12459
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12460
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12460
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12460
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12458, metadata !DIExpression()), !dbg !12459
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12461
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12461
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12462
  ret void, !dbg !12463
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #15 !dbg !12464 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12466, metadata !DIExpression()), !dbg !12469
  call void @llvm.dbg.value(metadata i32 %1, metadata !12467, metadata !DIExpression()), !dbg !12469
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12470
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !12470
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !12470
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !12468, metadata !DIExpression()), !dbg !12469
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !12471
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !12471
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #26, !dbg !12472
  ret void, !dbg !12473
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !12474 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12476, metadata !DIExpression()), !dbg !12481
  call void @llvm.dbg.value(metadata i32 %1, metadata !12477, metadata !DIExpression()), !dbg !12481
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12482
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !12482
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !12482
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !12478, metadata !DIExpression()), !dbg !12481
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12483
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !12483
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !12483
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !12479, metadata !DIExpression()), !dbg !12481
  %10 = bitcast i32* %3 to i8*, !dbg !12484
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12484
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !12485
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !12485
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !12489
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !12489
  %15 = load i8*, i8** %14, align 4, !dbg !12489
  call void @llvm.dbg.value(metadata i32* %3, metadata !12480, metadata !DIExpression(DW_OP_deref)), !dbg !12481
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #26, !dbg !12490
  %17 = icmp slt i32 %16, 0, !dbg !12491
  br i1 %17, label %18, label %21, !dbg !12492

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12493
  %20 = zext i8 %19 to i32, !dbg !12493
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef %20) #27, !dbg !12493
  br label %26, !dbg !12499

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !12500
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12500
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #26, !dbg !12501
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !12502
  %25 = load i32, i32* %3, align 4, !dbg !12503
  call void @llvm.dbg.value(metadata i32 %25, metadata !12480, metadata !DIExpression()), !dbg !12481
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #26, !dbg !12504
  br label %26, !dbg !12505

26:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #25, !dbg !12505
  ret void, !dbg !12505
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12506 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12508, metadata !DIExpression()), !dbg !12509
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12510
  %3 = load volatile i32, i32* %2, align 4, !dbg !12510
  %4 = or i32 %3, 8192, !dbg !12510
  store volatile i32 %4, i32* %2, align 4, !dbg !12510
  ret void, !dbg !12511
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !12512 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12514, metadata !DIExpression()), !dbg !12518
  call void @llvm.dbg.value(metadata i8* %1, metadata !12515, metadata !DIExpression()), !dbg !12518
  call void @llvm.dbg.value(metadata i32* %2, metadata !12516, metadata !DIExpression()), !dbg !12518
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12519
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !12519
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !12519
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !12517, metadata !DIExpression()), !dbg !12518
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !12520
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !12520
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !12522
  br i1 %9, label %12, label %10, !dbg !12523

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #27, !dbg !12524
  br label %12, !dbg !12525

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !12518
  ret i32 %13, !dbg !12526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef %0) unnamed_addr #3 !dbg !12527 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12529, metadata !DIExpression()), !dbg !12530
  %2 = icmp eq i32 %0, 2, !dbg !12531
  %3 = select i1 %2, i8 87, i8 63, !dbg !12531
  %4 = icmp eq i32 %0, 1, !dbg !12531
  %5 = select i1 %4, i8 69, i8 %3, !dbg !12531
  ret i8 %5, !dbg !12532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12533 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12537, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.value(metadata i32 0, metadata !12538, metadata !DIExpression()), !dbg !12539
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12540
  %3 = load volatile i32, i32* %2, align 4, !dbg !12540
  %4 = and i32 %3, -32769, !dbg !12540
  store volatile i32 %4, i32* %2, align 4, !dbg !12540
  ret void, !dbg !12541
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12542 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12546, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.value(metadata i32 %1, metadata !12547, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.value(metadata i32 0, metadata !12548, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.value(metadata i32 %2, metadata !12549, metadata !DIExpression()), !dbg !12550
  %4 = zext i32 %1 to i64, !dbg !12551
  %5 = mul nuw nsw i64 %4, 25, !dbg !12551
  %6 = zext i32 %2 to i64, !dbg !12551
  %7 = shl nuw nsw i64 %6, 2, !dbg !12551
  %8 = udiv i64 %5, %7, !dbg !12551
  %9 = trunc i64 %8 to i32, !dbg !12551
  %10 = udiv i32 %9, 100, !dbg !12551
  %11 = shl nuw nsw i32 %10, 4, !dbg !12551
  %12 = mul i32 %10, -100, !dbg !12551
  %13 = add i32 %12, %9, !dbg !12551
  %14 = shl i32 %13, 4, !dbg !12551
  %15 = add i32 %14, 50, !dbg !12551
  %16 = udiv i32 %15, 100, !dbg !12551
  %17 = and i32 %16, 240, !dbg !12551
  %18 = add nuw nsw i32 %17, %11, !dbg !12551
  %19 = and i32 %16, 15, !dbg !12551
  %20 = and i32 %18, 65520, !dbg !12554
  %21 = or i32 %20, %19, !dbg !12554
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !12555
  store volatile i32 %21, i32* %22, align 4, !dbg !12556
  ret void, !dbg !12557
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12558 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12560, metadata !DIExpression()), !dbg !12562
  call void @llvm.dbg.value(metadata i32 %1, metadata !12561, metadata !DIExpression()), !dbg !12562
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12563
  %4 = load volatile i32, i32* %3, align 4, !dbg !12563
  %5 = and i32 %4, -769, !dbg !12563
  %6 = or i32 %5, %1, !dbg !12563
  store volatile i32 %6, i32* %3, align 4, !dbg !12563
  ret void, !dbg !12564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12565 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12567, metadata !DIExpression()), !dbg !12569
  call void @llvm.dbg.value(metadata i32 %1, metadata !12568, metadata !DIExpression()), !dbg !12569
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12570
  %4 = load volatile i32, i32* %3, align 4, !dbg !12570
  %5 = and i32 %4, -4097, !dbg !12570
  %6 = or i32 %5, %1, !dbg !12570
  store volatile i32 %6, i32* %3, align 4, !dbg !12570
  ret void, !dbg !12571
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12572 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12574, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.value(metadata i32 %1, metadata !12575, metadata !DIExpression()), !dbg !12576
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12577
  %4 = load volatile i32, i32* %3, align 4, !dbg !12577
  %5 = and i32 %4, -12289, !dbg !12577
  %6 = or i32 %5, %1, !dbg !12577
  store volatile i32 %6, i32* %3, align 4, !dbg !12577
  ret void, !dbg !12578
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !12579 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12581, metadata !DIExpression()), !dbg !12583
  call void @llvm.dbg.value(metadata i32 %1, metadata !12582, metadata !DIExpression()), !dbg !12583
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12584
  %4 = load volatile i32, i32* %3, align 4, !dbg !12584
  %5 = and i32 %4, -1537, !dbg !12584
  %6 = or i32 %5, %1, !dbg !12584
  store volatile i32 %6, i32* %3, align 4, !dbg !12584
  ret void, !dbg !12585
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12586 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12588, metadata !DIExpression()), !dbg !12589
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12590
  %3 = load volatile i32, i32* %2, align 4, !dbg !12590
  %4 = lshr i32 %3, 3, !dbg !12591
  %5 = and i32 %4, 1, !dbg !12591
  ret i32 %5, !dbg !12592
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12593 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12595, metadata !DIExpression()), !dbg !12596
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12597
  %3 = load volatile i32, i32* %2, align 4, !dbg !12597
  %4 = and i32 %3, 1, !dbg !12597
  ret i32 %4, !dbg !12598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12599 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12601, metadata !DIExpression()), !dbg !12602
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12603
  %3 = load volatile i32, i32* %2, align 4, !dbg !12603
  %4 = lshr i32 %3, 1, !dbg !12604
  %5 = and i32 %4, 1, !dbg !12604
  ret i32 %5, !dbg !12605
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12606 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12608, metadata !DIExpression()), !dbg !12609
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12610
  %3 = load volatile i32, i32* %2, align 4, !dbg !12610
  %4 = lshr i32 %3, 8, !dbg !12611
  %5 = and i32 %4, 1, !dbg !12611
  ret i32 %5, !dbg !12612
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12613 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12615, metadata !DIExpression()), !dbg !12616
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12617
  store volatile i32 -257, i32* %2, align 4, !dbg !12617
  ret void, !dbg !12618
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12619 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12621, metadata !DIExpression()), !dbg !12623
  %3 = bitcast i32* %2 to i8*, !dbg !12624
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12624
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12622, metadata !DIExpression()), !dbg !12625
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12626
  %5 = load volatile i32, i32* %4, align 4, !dbg !12626
  store volatile i32 %5, i32* %2, align 4, !dbg !12627
  %6 = load volatile i32, i32* %2, align 4, !dbg !12628
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12629
  %8 = load volatile i32, i32* %7, align 4, !dbg !12629
  store volatile i32 %8, i32* %2, align 4, !dbg !12630
  %9 = load volatile i32, i32* %2, align 4, !dbg !12631
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12632
  ret void, !dbg !12632
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12633 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12635, metadata !DIExpression()), !dbg !12637
  %3 = bitcast i32* %2 to i8*, !dbg !12638
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12638
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12636, metadata !DIExpression()), !dbg !12639
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12640
  %5 = load volatile i32, i32* %4, align 4, !dbg !12640
  store volatile i32 %5, i32* %2, align 4, !dbg !12641
  %6 = load volatile i32, i32* %2, align 4, !dbg !12642
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12643
  %8 = load volatile i32, i32* %7, align 4, !dbg !12643
  store volatile i32 %8, i32* %2, align 4, !dbg !12644
  %9 = load volatile i32, i32* %2, align 4, !dbg !12645
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12646
  ret void, !dbg !12646
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12647 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12649, metadata !DIExpression()), !dbg !12651
  %3 = bitcast i32* %2 to i8*, !dbg !12652
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12652
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12650, metadata !DIExpression()), !dbg !12653
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12654
  %5 = load volatile i32, i32* %4, align 4, !dbg !12654
  store volatile i32 %5, i32* %2, align 4, !dbg !12655
  %6 = load volatile i32, i32* %2, align 4, !dbg !12656
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12657
  %8 = load volatile i32, i32* %7, align 4, !dbg !12657
  store volatile i32 %8, i32* %2, align 4, !dbg !12658
  %9 = load volatile i32, i32* %2, align 4, !dbg !12659
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12660
  ret void, !dbg !12660
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #21 !dbg !12661 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12663, metadata !DIExpression()), !dbg !12665
  %3 = bitcast i32* %2 to i8*, !dbg !12666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12666
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12664, metadata !DIExpression()), !dbg !12667
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12668
  %5 = load volatile i32, i32* %4, align 4, !dbg !12668
  store volatile i32 %5, i32* %2, align 4, !dbg !12669
  %6 = load volatile i32, i32* %2, align 4, !dbg !12670
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12671
  %8 = load volatile i32, i32* %7, align 4, !dbg !12671
  store volatile i32 %8, i32* %2, align 4, !dbg !12672
  %9 = load volatile i32, i32* %2, align 4, !dbg !12673
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12674
  ret void, !dbg !12674
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12675 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12677, metadata !DIExpression()), !dbg !12678
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12679
  %3 = load volatile i32, i32* %2, align 4, !dbg !12679
  %4 = lshr i32 %3, 7, !dbg !12680
  %5 = and i32 %4, 1, !dbg !12680
  ret i32 %5, !dbg !12681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #15 !dbg !12682 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12686, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.value(metadata i8 %1, metadata !12687, metadata !DIExpression()), !dbg !12688
  %3 = zext i8 %1 to i32, !dbg !12689
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12690
  store volatile i32 %3, i32* %4, align 4, !dbg !12691
  ret void, !dbg !12692
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12693 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12695, metadata !DIExpression()), !dbg !12696
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !12697
  %3 = load volatile i32, i32* %2, align 4, !dbg !12697
  %4 = lshr i32 %3, 5, !dbg !12698
  %5 = and i32 %4, 1, !dbg !12698
  ret i32 %5, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #17 !dbg !12700 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12704, metadata !DIExpression()), !dbg !12705
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !12706
  %3 = load volatile i32, i32* %2, align 4, !dbg !12706
  %4 = trunc i32 %3 to i8, !dbg !12707
  ret i8 %4, !dbg !12708
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !12709 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12711, metadata !DIExpression()), !dbg !12717
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !12718
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !12718
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !12718
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !12712, metadata !DIExpression()), !dbg !12717
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12719
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !12719
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !12719
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !12713, metadata !DIExpression()), !dbg !12717
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #26, !dbg !12720
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !12721
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !12721
  %10 = tail call fastcc zeroext i1 @device_is_ready.187(%struct.device* noundef %9) #26, !dbg !12723
  br i1 %10, label %14, label %11, !dbg !12724

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12725
  %13 = zext i8 %12 to i32, !dbg !12725
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3.188, i32 0, i32 0), i32 noundef %13) #27, !dbg !12725
  br label %62, !dbg !12731

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !12732
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !12733
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !12733
  %18 = load i8*, i8** %17, align 4, !dbg !12733
  %19 = tail call fastcc i32 @clock_control_on.189(%struct.device* noundef %15, i8* noundef %18) #26, !dbg !12734
  call void @llvm.dbg.value(metadata i32 %19, metadata !12716, metadata !DIExpression()), !dbg !12717
  %20 = icmp eq i32 %19, 0, !dbg !12735
  br i1 %20, label %24, label %21, !dbg !12737

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 1) #26, !dbg !12738
  %23 = zext i8 %22 to i32, !dbg !12738
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.190, i32 0, i32 0), i32 noundef %23) #27, !dbg !12738
  br label %62, !dbg !12744

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !12745
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !12745
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #26, !dbg !12746
  call void @llvm.dbg.value(metadata i32 %27, metadata !12716, metadata !DIExpression()), !dbg !12717
  %28 = icmp slt i32 %27, 0, !dbg !12747
  br i1 %28, label %62, label %29, !dbg !12749

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !12750
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12750
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #26, !dbg !12751
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12752
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #26, !dbg !12753
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !12754
  %34 = load i32, i32* %33, align 4, !dbg !12754
  %35 = icmp ult i32 %34, 3, !dbg !12756
  br i1 %35, label %39, label %36, !dbg !12756

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.184(i32 noundef 2) #26, !dbg !12757
  %38 = zext i8 %37 to i32, !dbg !12757
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5.191, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #27, !dbg !12757
  call void @llvm.dbg.value(metadata i32 0, metadata !12714, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.value(metadata i32 0, metadata !12715, metadata !DIExpression()), !dbg !12717
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !12756
  %41 = load i32, i32* %40, align 4, !dbg !12756
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.6, i32 0, i32 %34, !dbg !12756
  %43 = load i32, i32* %42, align 4, !dbg !12756
  br label %44, !dbg !12756

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !12766
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !12766
  call void @llvm.dbg.value(metadata i32 %46, metadata !12715, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.value(metadata i32 %45, metadata !12714, metadata !DIExpression()), !dbg !12717
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12767
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #26, !dbg !12768
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !12769
  %49 = load i8, i8* %48, align 4, !dbg !12769, !range !8655
  %50 = icmp eq i8 %49, 0, !dbg !12769
  br i1 %50, label %52, label %51, !dbg !12771

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #26, !dbg !12772
  br label %52, !dbg !12774

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !12775
  %54 = load i32, i32* %53, align 4, !dbg !12775
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #26, !dbg !12776
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !12777
  %56 = load i8, i8* %55, align 4, !dbg !12777, !range !8655
  %57 = icmp eq i8 %56, 0, !dbg !12777
  br i1 %57, label %60, label %58, !dbg !12779

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12780
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #26, !dbg !12782
  br label %60, !dbg !12783

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !12784
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #26, !dbg !12785
  br label %62, !dbg !12786

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !12717
  ret i32 %63, !dbg !12787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #11 !dbg !12788 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12792, metadata !DIExpression()), !dbg !12796
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !12797
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !12797
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !12797
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !12793, metadata !DIExpression()), !dbg !12796
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !12794, metadata !DIExpression()), !dbg !12796
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !12798
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !12799
  ret void, !dbg !12800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.187(%struct.device* noundef %0) unnamed_addr #1 !dbg !12801 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12805, metadata !DIExpression()), !dbg !12806
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !12807, !srcloc !12809
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.192(%struct.device* noundef %0) #26, !dbg !12810
  ret i1 %2, !dbg !12811
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.189(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !12812 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12814, metadata !DIExpression()), !dbg !12817
  call void @llvm.dbg.value(metadata i8* %1, metadata !12815, metadata !DIExpression()), !dbg !12817
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !12818
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !12818
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !12818
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !12816, metadata !DIExpression()), !dbg !12817
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !12819
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !12819
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #27, !dbg !12820
  ret i32 %8, !dbg !12821
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !12822 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !12826, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.value(metadata i8 0, metadata !12827, metadata !DIExpression()), !dbg !12830
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !12831
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12831
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !12829, metadata !DIExpression(DW_OP_deref)), !dbg !12830
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #27, !dbg !12832
  call void @llvm.dbg.value(metadata i32 %4, metadata !12828, metadata !DIExpression()), !dbg !12830
  %5 = icmp slt i32 %4, 0, !dbg !12833
  br i1 %5, label %9, label %6, !dbg !12835

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !12836
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !12829, metadata !DIExpression()), !dbg !12830
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #26, !dbg !12837
  br label %9, !dbg !12838

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !12830
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #25, !dbg !12839
  ret i32 %10, !dbg !12839
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !12840 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12842, metadata !DIExpression()), !dbg !12846
  call void @llvm.dbg.value(metadata i32 12, metadata !12843, metadata !DIExpression()), !dbg !12846
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !12847

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !12848, metadata !DIExpression()) #25, !dbg !12854
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #25, !dbg !12857, !srcloc !12858
  call void @llvm.dbg.value(metadata i32 %4, metadata !12853, metadata !DIExpression()) #25, !dbg !12854
  %5 = or i32 %4, 12, !dbg !12859
  call void @llvm.dbg.value(metadata i32 %5, metadata !12844, metadata !DIExpression()), !dbg !12860
  call void @llvm.dbg.value(metadata i32 %5, metadata !12861, metadata !DIExpression()) #25, !dbg !12868
  call void @llvm.dbg.value(metadata i32* %2, metadata !12866, metadata !DIExpression()) #25, !dbg !12868
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #25, !dbg !12870, !srcloc !12871
  call void @llvm.dbg.value(metadata i32 %6, metadata !12867, metadata !DIExpression()) #25, !dbg !12868
  %7 = icmp eq i32 %6, 0, !dbg !12847
  br i1 %7, label %8, label %3, !dbg !12859, !llvm.loop !12872

8:                                                ; preds = %3
  ret void, !dbg !12873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #15 !dbg !12874 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12876, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.value(metadata i32 %1, metadata !12877, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.value(metadata i32 %2, metadata !12878, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.value(metadata i32 0, metadata !12879, metadata !DIExpression()), !dbg !12880
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !12881
  %5 = load volatile i32, i32* %4, align 4, !dbg !12881
  %6 = and i32 %5, -5633, !dbg !12881
  %7 = or i32 %2, %1, !dbg !12881
  %8 = or i32 %7, %6, !dbg !12881
  store volatile i32 %8, i32* %4, align 4, !dbg !12881
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !12882
  %10 = load volatile i32, i32* %9, align 4, !dbg !12882
  %11 = and i32 %10, -12289, !dbg !12882
  store volatile i32 %11, i32* %9, align 4, !dbg !12882
  ret void, !dbg !12883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !12884 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !12886, metadata !DIExpression()), !dbg !12887
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !12888
  %3 = load volatile i32, i32* %2, align 4, !dbg !12888
  %4 = or i32 %3, 8, !dbg !12888
  store volatile i32 %4, i32* %2, align 4, !dbg !12888
  ret void, !dbg !12889
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !12890 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !12894, metadata !DIExpression()), !dbg !12897
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !12895, metadata !DIExpression()), !dbg !12897
  call void @llvm.dbg.value(metadata i32 0, metadata !12896, metadata !DIExpression()), !dbg !12897
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !12898
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !12898
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !12899
  %5 = load i8, i8* %4, align 4, !dbg !12899
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #27, !dbg !12900
  ret i32 %6, !dbg !12901
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.192(%struct.device* noundef %0) unnamed_addr #1 !dbg !12902 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12904, metadata !DIExpression()), !dbg !12905
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !12906
  ret i1 %2, !dbg !12907
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #15 !dbg !12908 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12910, metadata !DIExpression()), !dbg !12911
  tail call fastcc void @__NVIC_SetPriority.194() #26, !dbg !12912
  store i32 8399, i32* @last_load, align 4, !dbg !12913
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12914
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12915
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12916
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12917
  %3 = or i32 %2, 7, !dbg !12917
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12917
  ret i32 0, !dbg !12918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.194() unnamed_addr #15 !dbg !12919 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !12921, metadata !DIExpression()), !dbg !12923
  call void @llvm.dbg.value(metadata i32 1, metadata !12922, metadata !DIExpression()), !dbg !12923
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !12924
  ret void, !dbg !12927
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !12928 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12930, metadata !DIExpression()), !dbg !12932
  %2 = tail call fastcc i32 @elapsed() #26, !dbg !12933
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12934
  %4 = load i32, i32* @cycle_count, align 4, !dbg !12935
  %5 = add i32 %4, %3, !dbg !12935
  store i32 %5, i32* @cycle_count, align 4, !dbg !12935
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !12936
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !12937
  %7 = sub i32 %5, %6, !dbg !12940
  %8 = udiv i32 %7, 8400, !dbg !12941
  call void @llvm.dbg.value(metadata i32 %8, metadata !12931, metadata !DIExpression()), !dbg !12932
  %9 = mul nuw i32 %8, 8400, !dbg !12942
  %10 = add i32 %9, %6, !dbg !12943
  store i32 %10, i32* @announced_cycles, align 4, !dbg !12943
  tail call void @sys_clock_announce(i32 noundef %8) #27, !dbg !12944
  tail call void @z_arm_int_exit() #27, !dbg !12945
  ret void, !dbg !12946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #15 !dbg !12947 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12952
  call void @llvm.dbg.value(metadata i32 %1, metadata !12949, metadata !DIExpression()), !dbg !12953
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12954
  call void @llvm.dbg.value(metadata i32 %2, metadata !12950, metadata !DIExpression()), !dbg !12953
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12955
  call void @llvm.dbg.value(metadata i32 %3, metadata !12951, metadata !DIExpression()), !dbg !12953
  %4 = and i32 %2, 65536, !dbg !12956
  %5 = icmp ne i32 %4, 0, !dbg !12956
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !12958
  %8 = load i32, i32* @last_load, align 4, !dbg !12953
  br i1 %7, label %9, label %13, !dbg !12958

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12959
  %11 = add i32 %10, %8, !dbg !12959
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !12959
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12961
  br label %13, !dbg !12962

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !12963
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !12964
  %16 = add i32 %14, %15, !dbg !12965
  ret i32 %16, !dbg !12966
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !12967 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12971, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i1 %1, metadata !12972, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !12984
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !12985
  br i1 %4, label %5, label %8, !dbg !12985

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12987
  %7 = and i32 %6, -2, !dbg !12987
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12987
  store i32 -16777216, i32* @last_load, align 4, !dbg !12989
  br label %54, !dbg !12990

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !12991
  call void @llvm.dbg.value(metadata i32 %9, metadata !12976, metadata !DIExpression()), !dbg !12984
  br i1 %3, label %18, label %10, !dbg !12992

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !12992
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()), !dbg !12984
  %12 = icmp slt i32 %11, 1, !dbg !12993
  br i1 %12, label %18, label %13, !dbg !12993

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !12993
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !12993
  %16 = mul nuw nsw i32 %15, 8400, !dbg !12993
  %17 = add nuw nsw i32 %16, 8399, !dbg !12993
  br label %18, !dbg !12993

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !12971, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12994, metadata !DIExpression()) #25, !dbg !13001
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13003, !srcloc !13009
  %21 = extractvalue { i32, i32 } %20, 0, !dbg !13003
  call void @llvm.dbg.value(metadata i32 %21, metadata !13006, metadata !DIExpression()) #25, !dbg !13010
  call void @llvm.dbg.value(metadata i32 undef, metadata !13007, metadata !DIExpression()) #25, !dbg !13010
  call void @llvm.dbg.value(metadata i32 %21, metadata !13000, metadata !DIExpression()) #25, !dbg !13001
  call void @llvm.dbg.value(metadata i32 %21, metadata !12977, metadata !DIExpression()), !dbg !12984
  %22 = tail call fastcc i32 @elapsed() #26, !dbg !13011
  call void @llvm.dbg.value(metadata i32 %22, metadata !12982, metadata !DIExpression()), !dbg !12984
  %23 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13012
  call void @llvm.dbg.value(metadata i32 %23, metadata !12974, metadata !DIExpression()), !dbg !12984
  %24 = load i32, i32* @cycle_count, align 4, !dbg !13013
  %25 = add i32 %24, %22, !dbg !13013
  store i32 %25, i32* @cycle_count, align 4, !dbg !13013
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !13014
  %26 = load i32, i32* @announced_cycles, align 4, !dbg !13015
  %27 = sub i32 %25, %26, !dbg !13016
  call void @llvm.dbg.value(metadata i32 %27, metadata !12983, metadata !DIExpression()), !dbg !12984
  %28 = icmp slt i32 %27, 0, !dbg !13017
  br i1 %28, label %38, label %29, !dbg !13019

29:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 undef, metadata !12973, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i32 undef, metadata !12973, metadata !DIExpression()), !dbg !12984
  %30 = add nuw i32 %19, %27, !dbg !13020
  %31 = urem i32 %30, 8400, !dbg !13022
  call void @llvm.dbg.value(metadata !DIArgList(i32 %30, i32 %31), metadata !12973, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12984
  %32 = sub nuw nsw i32 %19, %31, !dbg !13023
  call void @llvm.dbg.value(metadata i32 %32, metadata !12973, metadata !DIExpression()), !dbg !12984
  %33 = icmp ugt i32 %32, 1024, !dbg !13024
  br i1 %33, label %34, label %36, !dbg !13024

34:                                               ; preds = %29
  call void @llvm.dbg.value(metadata i32 %32, metadata !12973, metadata !DIExpression()), !dbg !12984
  %35 = icmp ugt i32 %32, 16766400, !dbg !13025
  br i1 %35, label %38, label %36, !dbg !13027

36:                                               ; preds = %29, %34
  %37 = phi i32 [ %32, %34 ], [ 1024, %29 ]
  br label %38

38:                                               ; preds = %34, %18, %36
  %39 = phi i32 [ %37, %36 ], [ 1024, %18 ], [ 16766400, %34 ]
  store i32 %39, i32* @last_load, align 4, !dbg !13028
  %40 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13029
  call void @llvm.dbg.value(metadata i32 %40, metadata !12975, metadata !DIExpression()), !dbg !12984
  %41 = add nsw i32 %39, -1, !dbg !13030
  store volatile i32 %41, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !13031
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !13032
  %42 = icmp ult i32 %23, %40, !dbg !13033
  br i1 %42, label %43, label %48, !dbg !13035

43:                                               ; preds = %38
  %44 = load i32, i32* @cycle_count, align 4, !dbg !13036
  %45 = add i32 %23, %9, !dbg !13038
  %46 = sub i32 %45, %40, !dbg !13039
  %47 = add i32 %46, %44, !dbg !13036
  br label %52, !dbg !13040

48:                                               ; preds = %38
  %49 = sub i32 %23, %40, !dbg !13041
  %50 = load i32, i32* @cycle_count, align 4, !dbg !13043
  %51 = add i32 %49, %50, !dbg !13043
  br label %52

52:                                               ; preds = %48, %43
  %53 = phi i32 [ %51, %48 ], [ %47, %43 ], !dbg !13044
  store i32 %53, i32* @cycle_count, align 4, !dbg !13044
  call void @llvm.dbg.value(metadata i32 %21, metadata !13045, metadata !DIExpression()) #25, !dbg !13051
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13050, metadata !DIExpression()) #25, !dbg !13051
  call void @llvm.dbg.value(metadata i32 %21, metadata !13053, metadata !DIExpression()) #25, !dbg !13056
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %21) #25, !dbg !13058, !srcloc !13059
  br label %54

54:                                               ; preds = %52, %5
  ret void, !dbg !13060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !13061 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12994, metadata !DIExpression()) #25, !dbg !13065
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13067, !srcloc !13009
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13067
  call void @llvm.dbg.value(metadata i32 %2, metadata !13006, metadata !DIExpression()) #25, !dbg !13069
  call void @llvm.dbg.value(metadata i32 undef, metadata !13007, metadata !DIExpression()) #25, !dbg !13069
  call void @llvm.dbg.value(metadata i32 %2, metadata !13000, metadata !DIExpression()) #25, !dbg !13065
  call void @llvm.dbg.value(metadata i32 %2, metadata !13063, metadata !DIExpression()), !dbg !13070
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13071
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13072
  %5 = add i32 %4, %3, !dbg !13073
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !13074
  %7 = sub i32 %5, %6, !dbg !13075
  call void @llvm.dbg.value(metadata i32 %7, metadata !13064, metadata !DIExpression()), !dbg !13070
  call void @llvm.dbg.value(metadata i32 %2, metadata !13045, metadata !DIExpression()) #25, !dbg !13076
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13050, metadata !DIExpression()) #25, !dbg !13076
  call void @llvm.dbg.value(metadata i32 %2, metadata !13053, metadata !DIExpression()) #25, !dbg !13078
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13080, !srcloc !13059
  %8 = udiv i32 %7, 8400, !dbg !13081
  ret i32 %8, !dbg !13082
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !13083 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !12994, metadata !DIExpression()) #25, !dbg !13087
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !13089, !srcloc !13009
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !13089
  call void @llvm.dbg.value(metadata i32 %2, metadata !13006, metadata !DIExpression()) #25, !dbg !13091
  call void @llvm.dbg.value(metadata i32 undef, metadata !13007, metadata !DIExpression()) #25, !dbg !13091
  call void @llvm.dbg.value(metadata i32 %2, metadata !13000, metadata !DIExpression()) #25, !dbg !13087
  call void @llvm.dbg.value(metadata i32 %2, metadata !13085, metadata !DIExpression()), !dbg !13092
  %3 = tail call fastcc i32 @elapsed() #26, !dbg !13093
  %4 = load i32, i32* @cycle_count, align 4, !dbg !13094
  %5 = add i32 %4, %3, !dbg !13095
  call void @llvm.dbg.value(metadata i32 %5, metadata !13086, metadata !DIExpression()), !dbg !13092
  call void @llvm.dbg.value(metadata i32 %2, metadata !13045, metadata !DIExpression()) #25, !dbg !13096
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !13050, metadata !DIExpression()) #25, !dbg !13096
  call void @llvm.dbg.value(metadata i32 %2, metadata !13053, metadata !DIExpression()) #25, !dbg !13098
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !13100, !srcloc !13059
  ret i32 %5, !dbg !13101
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #15 !dbg !13102 {
  %1 = load i32, i32* @last_load, align 4, !dbg !13103
  %2 = icmp eq i32 %1, -16777216, !dbg !13105
  br i1 %2, label %3, label %6, !dbg !13106

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13107
  %5 = or i32 %4, 1, !dbg !13107
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13107
  br label %6, !dbg !13109

6:                                                ; preds = %3, %0
  ret void, !dbg !13110
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #15 !dbg !13111 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13112
  %2 = and i32 %1, -2, !dbg !13112
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !13112
  ret void, !dbg !13113
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #14 !dbg !13114 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !13140, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata i8 %1, metadata !13141, metadata !DIExpression()), !dbg !13143
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !13142, metadata !DIExpression()), !dbg !13143
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !13144
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13144
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !13143
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13145
  %8 = load i8, i8* %6, align 4, !dbg !13146
  %9 = zext i8 %8 to i32, !dbg !13147
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !13147
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !13148
  br i1 %11, label %18, label %24, !dbg !13149

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !13143
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !13145
  %14 = load i8, i8* %6, align 4, !dbg !13146
  %15 = zext i8 %14 to i32, !dbg !13147
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !13147
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !13148
  br i1 %17, label %18, label %24, !dbg !13149, !llvm.loop !13150

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !13152
  %21 = load i8, i8* %20, align 1, !dbg !13152
  %22 = icmp eq i8 %21, %1, !dbg !13155
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !13156
  br i1 %22, label %24, label %12, !dbg !13157

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !13143
  ret i32 %25, !dbg !13158
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13159 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !13170, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8 %1, metadata !13171, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 %2, metadata !13172, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 0, metadata !13175, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i32 0, metadata !13176, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.value(metadata i8 0, metadata !13177, metadata !DIExpression()), !dbg !13187
  %4 = icmp eq i8 %1, 0, !dbg !13188
  br i1 %4, label %35, label %5, !dbg !13189

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !13188
  br label %9, !dbg !13189

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !13177, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.value(metadata i32 %29, metadata !13175, metadata !DIExpression()), !dbg !13186
  %8 = icmp eq i32 %34, %6, !dbg !13188
  br i1 %8, label %35, label %9, !dbg !13189, !llvm.loop !13190

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !13177, metadata !DIExpression()), !dbg !13187
  call void @llvm.dbg.value(metadata i32 %11, metadata !13175, metadata !DIExpression()), !dbg !13186
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !13192
  %13 = load i32, i32* %12, align 4, !dbg !13192
  call void @llvm.dbg.value(metadata i32 %13, metadata !13174, metadata !DIExpression()), !dbg !13186
  %14 = and i32 %13, 31, !dbg !13193
  %15 = icmp ult i32 %14, 16, !dbg !13194
  br i1 %15, label %16, label %20, !dbg !13195

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13196
  %18 = load i32, i32* %17, align 4, !dbg !13196
  %19 = or i32 %18, 32, !dbg !13198
  call void @llvm.dbg.value(metadata i32 %19, metadata !13175, metadata !DIExpression()), !dbg !13186
  br label %28, !dbg !13199

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !13200

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !13201
  %23 = load i32, i32* %22, align 4, !dbg !13201
  call void @llvm.dbg.value(metadata i32 %23, metadata !13179, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !13202
  %24 = lshr i32 %23, 7, !dbg !13203
  %25 = and i32 %24, 16, !dbg !13203
  %26 = or i32 %25, %23, !dbg !13203
  call void @llvm.dbg.value(metadata i32 %26, metadata !13175, metadata !DIExpression()), !dbg !13186
  br label %28, !dbg !13204

27:                                               ; preds = %20
  br label %28, !dbg !13205

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ 48, %20 ], [ %11, %27 ], !dbg !13186
  call void @llvm.dbg.value(metadata i32 %29, metadata !13175, metadata !DIExpression()), !dbg !13186
  %30 = lshr i32 %13, 5, !dbg !13205
  %31 = and i32 %30, 255, !dbg !13205
  call void @llvm.dbg.value(metadata i32 %31, metadata !13173, metadata !DIExpression()), !dbg !13186
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #26, !dbg !13206
  call void @llvm.dbg.value(metadata i32 %32, metadata !13176, metadata !DIExpression()), !dbg !13186
  %33 = icmp slt i32 %32, 0, !dbg !13207
  %34 = add nuw nsw i32 %10, 1, !dbg !13209
  call void @llvm.dbg.value(metadata i32 %34, metadata !13177, metadata !DIExpression()), !dbg !13187
  br i1 %33, label %35, label %7, !dbg !13210

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !13211
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !13212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13216, metadata !DIExpression()), !dbg !13220
  call void @llvm.dbg.value(metadata i32 %1, metadata !13217, metadata !DIExpression()), !dbg !13220
  call void @llvm.dbg.value(metadata i32 %2, metadata !13218, metadata !DIExpression()), !dbg !13220
  %4 = icmp ugt i32 %0, 175, !dbg !13221
  br i1 %4, label %16, label %5, !dbg !13223

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !13224
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !13225
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !13225
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !13219, metadata !DIExpression()), !dbg !13220
  %9 = add nsw i32 %6, -8, !dbg !13226
  %10 = icmp ult i32 %9, 3, !dbg !13226
  br i1 %10, label %16, label %11, !dbg !13228

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.199(%struct.device* noundef %8) #26, !dbg !13229
  br i1 %12, label %13, label %16, !dbg !13230

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !13231
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #27, !dbg !13232
  br label %16, !dbg !13233

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !13220
  ret i32 %17, !dbg !13234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.199(%struct.device* noundef %0) unnamed_addr #1 !dbg !13235 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13239, metadata !DIExpression()), !dbg !13240
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !13241, !srcloc !13243
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.200(%struct.device* noundef %0) #26, !dbg !13244
  ret i1 %2, !dbg !13245
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.200(%struct.device* noundef %0) unnamed_addr #1 !dbg !13246 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !13248, metadata !DIExpression()), !dbg !13249
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #27, !dbg !13250
  ret i1 %2, !dbg !13251
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !13252 {
  ret void, !dbg !13253
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #17 !dbg !13254 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13256, metadata !DIExpression()), !dbg !13261
  call void @llvm.dbg.value(metadata i32 0, metadata !13257, metadata !DIExpression()), !dbg !13261
  call void @llvm.dbg.value(metadata i32 2, metadata !13258, metadata !DIExpression()), !dbg !13261
  call void @llvm.dbg.value(metadata i32 0, metadata !13259, metadata !DIExpression()), !dbg !13261
  call void @llvm.dbg.value(metadata i32 2, metadata !13260, metadata !DIExpression()), !dbg !13261
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13262
  %2 = and i32 %1, 12, !dbg !13263
  call void @llvm.dbg.value(metadata i32 %2, metadata !13256, metadata !DIExpression()), !dbg !13261
  %3 = icmp eq i32 %2, 8, !dbg !13264
  br i1 %3, label %4, label %18, !dbg !13264

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13265
  call void @llvm.dbg.value(metadata i32 %5, metadata !13259, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !13261
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13267
  %7 = and i32 %6, 63, !dbg !13268
  call void @llvm.dbg.value(metadata i32 %7, metadata !13260, metadata !DIExpression()), !dbg !13261
  %8 = udiv i32 16000000, %7, !dbg !13269
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13269
  %10 = lshr i32 %9, 6, !dbg !13269
  %11 = and i32 %10, 511, !dbg !13269
  %12 = mul i32 %11, %8, !dbg !13269
  call void @llvm.dbg.value(metadata i32 %12, metadata !13257, metadata !DIExpression()), !dbg !13261
  call void @llvm.dbg.value(metadata i32 %12, metadata !13257, metadata !DIExpression()), !dbg !13261
  call void @llvm.dbg.value(metadata i32 %12, metadata !13257, metadata !DIExpression()), !dbg !13261
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13271
  %14 = lshr i32 %13, 15, !dbg !13272
  %15 = and i32 %14, 6, !dbg !13272
  %16 = add nuw nsw i32 %15, 2, !dbg !13272
  call void @llvm.dbg.value(metadata i32 %16, metadata !13258, metadata !DIExpression()), !dbg !13261
  %17 = udiv i32 %12, %16, !dbg !13273
  br label %18, !dbg !13274

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !13275
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13276
  %21 = lshr i32 %20, 4, !dbg !13277
  %22 = and i32 %21, 15, !dbg !13277
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !13278
  %24 = load i8, i8* %23, align 1, !dbg !13278
  %25 = zext i8 %24 to i32, !dbg !13278
  call void @llvm.dbg.value(metadata i32 %25, metadata !13256, metadata !DIExpression()), !dbg !13261
  %26 = lshr i32 %19, %25, !dbg !13279
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !13279
  ret void, !dbg !13280
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !13281 {
  ret i32 0, !dbg !13286
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13287 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13314, metadata !DIExpression()), !dbg !13325
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !13326
  br i1 %3, label %317, label %4, !dbg !13328

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13329
  %6 = load i32, i32* %5, align 4, !dbg !13329
  %7 = and i32 %6, 1, !dbg !13331
  %8 = icmp eq i32 %7, 0, !dbg !13332
  br i1 %8, label %66, label %9, !dbg !13333

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13334
  %11 = and i32 %10, 12, !dbg !13334
  %12 = icmp eq i32 %11, 4, !dbg !13337
  br i1 %12, label %21, label %13, !dbg !13338

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13339
  %15 = and i32 %14, 12, !dbg !13339
  %16 = icmp eq i32 %15, 8, !dbg !13340
  br i1 %16, label %17, label %29, !dbg !13341

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13342
  %19 = and i32 %18, 4194304, !dbg !13343
  %20 = icmp eq i32 %19, 0, !dbg !13344
  br i1 %20, label %29, label %21, !dbg !13345

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13346
  %23 = and i32 %22, 131072, !dbg !13346
  %24 = icmp eq i32 %23, 0, !dbg !13346
  br i1 %24, label %66, label %25, !dbg !13349

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13350
  %27 = load i32, i32* %26, align 4, !dbg !13350
  %28 = icmp eq i32 %27, 0, !dbg !13351
  br i1 %28, label %317, label %66, !dbg !13352

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13353
  %31 = load i32, i32* %30, align 4, !dbg !13353
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !13357

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13358
  %34 = or i32 %33, 65536, !dbg !13358
  br label %45, !dbg !13358

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13360
  %37 = or i32 %36, 262144, !dbg !13360
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13360
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13360
  %39 = or i32 %38, 65536, !dbg !13360
  br label %45, !dbg !13360

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13363
  %42 = and i32 %41, -65537, !dbg !13363
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13363
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13363
  %44 = and i32 %43, -262145, !dbg !13363
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13365
  %47 = load i32, i32* %30, align 4, !dbg !13366
  %48 = icmp eq i32 %47, 0, !dbg !13368
  %49 = tail call i32 @HAL_GetTick() #27, !dbg !13369
  call void @llvm.dbg.value(metadata i32 %49, metadata !13315, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 %49, metadata !13315, metadata !DIExpression()), !dbg !13325
  br i1 %48, label %58, label %50, !dbg !13370

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13371
  %52 = and i32 %51, 131072, !dbg !13373
  %53 = icmp eq i32 %52, 0, !dbg !13373
  br i1 %53, label %54, label %66, !dbg !13374

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #27, !dbg !13375
  %56 = sub i32 %55, %49, !dbg !13378
  %57 = icmp ugt i32 %56, 100, !dbg !13379
  br i1 %57, label %317, label %50, !dbg !13380, !llvm.loop !13381

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13383
  %60 = and i32 %59, 131072, !dbg !13383
  %61 = icmp eq i32 %60, 0, !dbg !13383
  br i1 %61, label %66, label %62, !dbg !13385

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #27, !dbg !13386
  %64 = sub i32 %63, %49, !dbg !13389
  %65 = icmp ugt i32 %64, 100, !dbg !13390
  br i1 %65, label %317, label %58, !dbg !13391, !llvm.loop !13392

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !13394
  %68 = and i32 %67, 2, !dbg !13396
  %69 = icmp eq i32 %68, 0, !dbg !13397
  br i1 %69, label %121, label %70, !dbg !13398

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13399
  %72 = and i32 %71, 12, !dbg !13399
  %73 = icmp eq i32 %72, 0, !dbg !13402
  br i1 %73, label %82, label %74, !dbg !13403

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13404
  %76 = and i32 %75, 12, !dbg !13404
  %77 = icmp eq i32 %76, 8, !dbg !13405
  br i1 %77, label %78, label %90, !dbg !13406

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13407
  %80 = and i32 %79, 4194304, !dbg !13408
  %81 = icmp eq i32 %80, 0, !dbg !13409
  br i1 %81, label %82, label %90, !dbg !13410

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13411
  %84 = and i32 %83, 2, !dbg !13411
  %85 = icmp eq i32 %84, 0, !dbg !13411
  br i1 %85, label %114, label %86, !dbg !13414

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13415
  %88 = load i32, i32* %87, align 4, !dbg !13415
  %89 = icmp eq i32 %88, 1, !dbg !13416
  br i1 %89, label %114, label %317, !dbg !13417

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13418
  %92 = load i32, i32* %91, align 4, !dbg !13418
  %93 = icmp eq i32 %92, 0, !dbg !13421
  br i1 %93, label %104, label %94, !dbg !13422

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13423
  %95 = tail call i32 @HAL_GetTick() #27, !dbg !13425
  call void @llvm.dbg.value(metadata i32 %95, metadata !13315, metadata !DIExpression()), !dbg !13325
  br label %96, !dbg !13426

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13427
  %98 = and i32 %97, 2, !dbg !13428
  %99 = icmp eq i32 %98, 0, !dbg !13428
  br i1 %99, label %100, label %114, !dbg !13426

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #27, !dbg !13429
  %102 = sub i32 %101, %95, !dbg !13432
  %103 = icmp ugt i32 %102, 2, !dbg !13433
  br i1 %103, label %317, label %96, !dbg !13434, !llvm.loop !13435

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !13437
  %105 = tail call i32 @HAL_GetTick() #27, !dbg !13439
  call void @llvm.dbg.value(metadata i32 %105, metadata !13315, metadata !DIExpression()), !dbg !13325
  br label %106, !dbg !13440

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13441
  %108 = and i32 %107, 2, !dbg !13441
  %109 = icmp eq i32 %108, 0, !dbg !13441
  br i1 %109, label %121, label %110, !dbg !13440

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #27, !dbg !13442
  %112 = sub i32 %111, %105, !dbg !13445
  %113 = icmp ugt i32 %112, 2, !dbg !13446
  br i1 %113, label %317, label %106, !dbg !13447, !llvm.loop !13448

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13450
  %116 = and i32 %115, -249, !dbg !13450
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13450
  %118 = load i32, i32* %117, align 4, !dbg !13450
  %119 = shl i32 %118, 3, !dbg !13450
  %120 = or i32 %119, %116, !dbg !13450
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13450
  br label %121, !dbg !13451

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !13451
  %123 = and i32 %122, 8, !dbg !13453
  %124 = icmp eq i32 %123, 0, !dbg !13454
  br i1 %124, label %149, label %125, !dbg !13455

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13456
  %127 = load i32, i32* %126, align 4, !dbg !13456
  %128 = icmp eq i32 %127, 0, !dbg !13459
  br i1 %128, label %139, label %129, !dbg !13460

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13461
  %130 = tail call i32 @HAL_GetTick() #27, !dbg !13463
  call void @llvm.dbg.value(metadata i32 %130, metadata !13315, metadata !DIExpression()), !dbg !13325
  br label %131, !dbg !13464

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13465
  %133 = and i32 %132, 2, !dbg !13466
  %134 = icmp eq i32 %133, 0, !dbg !13466
  br i1 %134, label %135, label %149, !dbg !13464

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #27, !dbg !13467
  %137 = sub i32 %136, %130, !dbg !13470
  %138 = icmp ugt i32 %137, 2, !dbg !13471
  br i1 %138, label %317, label %131, !dbg !13472, !llvm.loop !13473

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !13475
  %140 = tail call i32 @HAL_GetTick() #27, !dbg !13477
  call void @llvm.dbg.value(metadata i32 %140, metadata !13315, metadata !DIExpression()), !dbg !13325
  br label %141, !dbg !13478

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13479
  %143 = and i32 %142, 2, !dbg !13479
  %144 = icmp eq i32 %143, 0, !dbg !13479
  br i1 %144, label %149, label %145, !dbg !13478

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #27, !dbg !13480
  %147 = sub i32 %146, %140, !dbg !13483
  %148 = icmp ugt i32 %147, 2, !dbg !13484
  br i1 %148, label %317, label %141, !dbg !13485, !llvm.loop !13486

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !13488
  %151 = and i32 %150, 4, !dbg !13489
  %152 = icmp eq i32 %151, 0, !dbg !13490
  br i1 %152, label %221, label %153, !dbg !13491

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !13317, metadata !DIExpression()), !dbg !13492
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13493
  %155 = and i32 %154, 268435456, !dbg !13493
  %156 = icmp eq i32 %155, 0, !dbg !13493
  br i1 %156, label %157, label %164, !dbg !13494

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !13495
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !13495
  call void @llvm.dbg.declare(metadata i32* %2, metadata !13321, metadata !DIExpression()), !dbg !13495
  store volatile i32 0, i32* %2, align 4, !dbg !13495
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13495
  %160 = or i32 %159, 268435456, !dbg !13495
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13495
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13495
  %162 = and i32 %161, 268435456, !dbg !13495
  store volatile i32 %162, i32* %2, align 4, !dbg !13495
  %163 = load volatile i32, i32* %2, align 4, !dbg !13495
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !13496
  call void @llvm.dbg.value(metadata i32 1, metadata !13317, metadata !DIExpression()), !dbg !13492
  br label %164, !dbg !13497

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !13317, metadata !DIExpression()), !dbg !13492
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13498
  %166 = and i32 %165, 256, !dbg !13498
  %167 = icmp eq i32 %166, 0, !dbg !13498
  br i1 %167, label %168, label %180, !dbg !13500

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13501
  %170 = or i32 %169, 256, !dbg !13501
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13501
  %171 = tail call i32 @HAL_GetTick() #27, !dbg !13503
  call void @llvm.dbg.value(metadata i32 %171, metadata !13315, metadata !DIExpression()), !dbg !13325
  br label %172, !dbg !13504

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !13505
  %174 = and i32 %173, 256, !dbg !13505
  %175 = icmp eq i32 %174, 0, !dbg !13505
  br i1 %175, label %176, label %180, !dbg !13504

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #27, !dbg !13506
  %178 = sub i32 %177, %171, !dbg !13509
  %179 = icmp ugt i32 %178, 2, !dbg !13510
  br i1 %179, label %317, label %172, !dbg !13511, !llvm.loop !13512

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13514
  %182 = load i32, i32* %181, align 4, !dbg !13514
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !13517

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13518
  %185 = or i32 %184, 1, !dbg !13518
  br label %196, !dbg !13518

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13520
  %188 = or i32 %187, 4, !dbg !13520
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13520
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13520
  %190 = or i32 %189, 1, !dbg !13520
  br label %196, !dbg !13520

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13523
  %193 = and i32 %192, -2, !dbg !13523
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13523
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13523
  %195 = and i32 %194, -5, !dbg !13523
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13525
  %198 = load i32, i32* %181, align 4, !dbg !13526
  %199 = icmp eq i32 %198, 0, !dbg !13528
  %200 = tail call i32 @HAL_GetTick() #27, !dbg !13529
  call void @llvm.dbg.value(metadata i32 %200, metadata !13315, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 %200, metadata !13315, metadata !DIExpression()), !dbg !13325
  br i1 %199, label %209, label %201, !dbg !13530

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13531
  %203 = and i32 %202, 2, !dbg !13533
  %204 = icmp eq i32 %203, 0, !dbg !13533
  br i1 %204, label %205, label %217, !dbg !13534

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #27, !dbg !13535
  %207 = sub i32 %206, %200, !dbg !13538
  %208 = icmp ugt i32 %207, 5000, !dbg !13539
  br i1 %208, label %317, label %201, !dbg !13540, !llvm.loop !13541

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13543
  %211 = and i32 %210, 2, !dbg !13543
  %212 = icmp eq i32 %211, 0, !dbg !13543
  br i1 %212, label %217, label %213, !dbg !13545

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #27, !dbg !13546
  %215 = sub i32 %214, %200, !dbg !13549
  %216 = icmp ugt i32 %215, 5000, !dbg !13550
  br i1 %216, label %317, label %209, !dbg !13551, !llvm.loop !13552

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !13554

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13555
  %220 = and i32 %219, -268435457, !dbg !13555
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !13555
  br label %221, !dbg !13558

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13559
  %223 = load i32, i32* %222, align 4, !dbg !13559
  %224 = icmp eq i32 %223, 0, !dbg !13561
  br i1 %224, label %316, label %225, !dbg !13562

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13563
  %227 = and i32 %226, 12, !dbg !13563
  %228 = icmp eq i32 %227, 8, !dbg !13566
  br i1 %228, label %277, label %229, !dbg !13567

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !13568
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13571
  %231 = tail call i32 @HAL_GetTick() #27, !dbg !13571
  call void @llvm.dbg.value(metadata i32 %231, metadata !13315, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.value(metadata i32 %231, metadata !13315, metadata !DIExpression()), !dbg !13325
  br i1 %230, label %232, label %269, !dbg !13572

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13573
  %234 = and i32 %233, 33554432, !dbg !13573
  %235 = icmp eq i32 %234, 0, !dbg !13573
  br i1 %235, label %240, label %236, !dbg !13575

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #27, !dbg !13576
  %238 = sub i32 %237, %231, !dbg !13579
  %239 = icmp ugt i32 %238, 2, !dbg !13580
  br i1 %239, label %317, label %232, !dbg !13581, !llvm.loop !13582

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13584
  %242 = load i32, i32* %241, align 4, !dbg !13584
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13584
  %244 = load i32, i32* %243, align 4, !dbg !13584
  %245 = or i32 %244, %242, !dbg !13584
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13584
  %247 = load i32, i32* %246, align 4, !dbg !13584
  %248 = shl i32 %247, 6, !dbg !13584
  %249 = or i32 %245, %248, !dbg !13584
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13584
  %251 = load i32, i32* %250, align 4, !dbg !13584
  %252 = shl i32 %251, 15, !dbg !13584
  %253 = add i32 %252, -65536, !dbg !13584
  %254 = and i32 %253, -65536, !dbg !13584
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13584
  %256 = load i32, i32* %255, align 4, !dbg !13584
  %257 = shl i32 %256, 24, !dbg !13584
  %258 = or i32 %249, %257, !dbg !13584
  %259 = or i32 %258, %254, !dbg !13584
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13584
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !13585
  %260 = tail call i32 @HAL_GetTick() #27, !dbg !13586
  call void @llvm.dbg.value(metadata i32 %260, metadata !13315, metadata !DIExpression()), !dbg !13325
  br label %261, !dbg !13587

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13588
  %263 = and i32 %262, 33554432, !dbg !13589
  %264 = icmp eq i32 %263, 0, !dbg !13589
  br i1 %264, label %265, label %316, !dbg !13587

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #27, !dbg !13590
  %267 = sub i32 %266, %260, !dbg !13593
  %268 = icmp ugt i32 %267, 2, !dbg !13594
  br i1 %268, label %317, label %261, !dbg !13595, !llvm.loop !13596

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13598
  %271 = and i32 %270, 33554432, !dbg !13598
  %272 = icmp eq i32 %271, 0, !dbg !13598
  br i1 %272, label %316, label %273, !dbg !13600

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #27, !dbg !13601
  %275 = sub i32 %274, %231, !dbg !13604
  %276 = icmp ugt i32 %275, 2, !dbg !13605
  br i1 %276, label %317, label %269, !dbg !13606, !llvm.loop !13607

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !13609
  br i1 %278, label %317, label %279, !dbg !13612

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13613
  call void @llvm.dbg.value(metadata i32 %280, metadata !13316, metadata !DIExpression()), !dbg !13325
  %281 = and i32 %280, 4194304, !dbg !13615
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13617
  %283 = load i32, i32* %282, align 4, !dbg !13617
  %284 = icmp eq i32 %281, %283, !dbg !13618
  br i1 %284, label %285, label %317, !dbg !13619

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !13620
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13621
  %288 = load i32, i32* %287, align 4, !dbg !13621
  %289 = icmp eq i32 %286, %288, !dbg !13622
  br i1 %289, label %290, label %317, !dbg !13623

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !13624
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13625
  %293 = load i32, i32* %292, align 4, !dbg !13625
  %294 = shl i32 %293, 6, !dbg !13626
  %295 = icmp eq i32 %291, %294, !dbg !13627
  br i1 %295, label %296, label %317, !dbg !13628

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !13629
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13630
  %299 = load i32, i32* %298, align 4, !dbg !13630
  %300 = shl i32 %299, 15, !dbg !13631
  %301 = add i32 %300, -65536, !dbg !13631
  %302 = and i32 %301, -65536, !dbg !13631
  %303 = icmp eq i32 %297, %302, !dbg !13632
  br i1 %303, label %304, label %317, !dbg !13633

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !13634
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13635
  %307 = load i32, i32* %306, align 4, !dbg !13635
  %308 = shl i32 %307, 24, !dbg !13636
  %309 = icmp eq i32 %305, %308, !dbg !13637
  br i1 %309, label %310, label %317, !dbg !13638

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !13639
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !13640
  %313 = load i32, i32* %312, align 4, !dbg !13640
  %314 = shl i32 %313, 28, !dbg !13641
  %315 = icmp eq i32 %311, %314, !dbg !13642
  br i1 %315, label %316, label %317, !dbg !13643

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !13644

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !13325
  ret i32 %318, !dbg !13645
}

; Function Attrs: optsize
declare !dbg !13646 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !13648 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13661, metadata !DIExpression()), !dbg !13664
  call void @llvm.dbg.value(metadata i32 %1, metadata !13662, metadata !DIExpression()), !dbg !13664
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !13665
  br i1 %3, label %115, label %4, !dbg !13667

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13668
  %6 = and i32 %5, 7, !dbg !13668
  %7 = icmp ult i32 %6, %1, !dbg !13670
  br i1 %7, label %8, label %13, !dbg !13671

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !13672
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13672
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13674
  %11 = and i32 %10, 7, !dbg !13674
  %12 = icmp eq i32 %11, %1, !dbg !13676
  br i1 %12, label %13, label %115, !dbg !13677

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13678
  %15 = load i32, i32* %14, align 4, !dbg !13678
  %16 = and i32 %15, 2, !dbg !13680
  %17 = icmp eq i32 %16, 0, !dbg !13681
  br i1 %17, label %39, label %18, !dbg !13682

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !13683
  %20 = icmp eq i32 %19, 0, !dbg !13686
  br i1 %20, label %25, label %21, !dbg !13687

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13688
  %23 = or i32 %22, 7168, !dbg !13688
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13688
  %24 = load i32, i32* %14, align 4, !dbg !13690
  br label %25, !dbg !13692

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !13690
  %27 = and i32 %26, 8, !dbg !13693
  %28 = icmp eq i32 %27, 0, !dbg !13694
  br i1 %28, label %32, label %29, !dbg !13695

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13696
  %31 = or i32 %30, 57344, !dbg !13696
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13696
  br label %32, !dbg !13698

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13699
  %34 = and i32 %33, -241, !dbg !13699
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13699
  %36 = load i32, i32* %35, align 4, !dbg !13699
  %37 = or i32 %34, %36, !dbg !13699
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13699
  %38 = load i32, i32* %14, align 4, !dbg !13700
  br label %39, !dbg !13702

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !13700
  %41 = and i32 %40, 1, !dbg !13703
  %42 = icmp eq i32 %41, 0, !dbg !13704
  br i1 %42, label %73, label %43, !dbg !13705

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13706
  %45 = load i32, i32* %44, align 4, !dbg !13706
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !13709

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13710
  %48 = and i32 %47, 131072, !dbg !13713
  %49 = icmp eq i32 %48, 0, !dbg !13713
  br i1 %49, label %115, label %58, !dbg !13714

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13715
  %52 = and i32 %51, 33554432, !dbg !13719
  %53 = icmp eq i32 %52, 0, !dbg !13719
  br i1 %53, label %115, label %58, !dbg !13720

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13721
  %56 = and i32 %55, 2, !dbg !13724
  %57 = icmp eq i32 %56, 0, !dbg !13724
  br i1 %57, label %115, label %58, !dbg !13725

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13726
  %60 = and i32 %59, -4, !dbg !13726
  %61 = or i32 %60, %45, !dbg !13726
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13726
  %62 = tail call i32 @HAL_GetTick() #27, !dbg !13727
  call void @llvm.dbg.value(metadata i32 %62, metadata !13663, metadata !DIExpression()), !dbg !13664
  br label %63, !dbg !13728

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13729
  %65 = and i32 %64, 12, !dbg !13729
  %66 = load i32, i32* %44, align 4, !dbg !13730
  %67 = shl i32 %66, 2, !dbg !13731
  %68 = icmp eq i32 %65, %67, !dbg !13732
  br i1 %68, label %73, label %69, !dbg !13728

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #27, !dbg !13733
  %71 = sub i32 %70, %62, !dbg !13736
  %72 = icmp ugt i32 %71, 5000, !dbg !13737
  br i1 %72, label %115, label %63, !dbg !13738, !llvm.loop !13739

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13741
  %75 = and i32 %74, 7, !dbg !13741
  %76 = icmp ugt i32 %75, %1, !dbg !13743
  br i1 %76, label %77, label %82, !dbg !13744

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !13745
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !13745
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13747
  %80 = and i32 %79, 7, !dbg !13747
  %81 = icmp eq i32 %80, %1, !dbg !13749
  br i1 %81, label %82, label %115, !dbg !13750

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !13751
  %84 = and i32 %83, 4, !dbg !13753
  %85 = icmp eq i32 %84, 0, !dbg !13754
  br i1 %85, label %93, label %86, !dbg !13755

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13756
  %88 = and i32 %87, -7169, !dbg !13756
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13756
  %90 = load i32, i32* %89, align 4, !dbg !13756
  %91 = or i32 %88, %90, !dbg !13756
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13756
  %92 = load i32, i32* %14, align 4, !dbg !13758
  br label %93, !dbg !13760

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !13758
  %95 = and i32 %94, 8, !dbg !13761
  %96 = icmp eq i32 %95, 0, !dbg !13762
  br i1 %96, label %104, label %97, !dbg !13763

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13764
  %99 = and i32 %98, -57345, !dbg !13764
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13764
  %101 = load i32, i32* %100, align 4, !dbg !13764
  %102 = shl i32 %101, 3, !dbg !13764
  %103 = or i32 %102, %99, !dbg !13764
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13764
  br label %104, !dbg !13766

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #26, !dbg !13767
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13768
  %107 = lshr i32 %106, 4, !dbg !13769
  %108 = and i32 %107, 15, !dbg !13769
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !13770
  %110 = load i8, i8* %109, align 1, !dbg !13770
  %111 = zext i8 %110 to i32, !dbg !13770
  %112 = lshr i32 %105, %111, !dbg !13771
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !13772
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !13773
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #27, !dbg !13774
  br label %115, !dbg !13775

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !13664
  ret i32 %116, !dbg !13776
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !13777 {
  call void @llvm.dbg.value(metadata i32 0, metadata !13779, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata i32 0, metadata !13780, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata i32 0, metadata !13781, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata i32 0, metadata !13782, metadata !DIExpression()), !dbg !13783
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13784
  %2 = and i32 %1, 12, !dbg !13785
  %3 = icmp eq i32 %2, 8, !dbg !13786
  br i1 %3, label %4, label %21, !dbg !13786

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13787
  %6 = and i32 %5, 63, !dbg !13790
  call void @llvm.dbg.value(metadata i32 %6, metadata !13779, metadata !DIExpression()), !dbg !13783
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13791
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13793
  %9 = lshr i32 %8, 6, !dbg !13793
  %10 = and i32 %9, 511, !dbg !13793
  %11 = zext i32 %10 to i64, !dbg !13793
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !13793
  %13 = zext i32 %6 to i64, !dbg !13793
  %14 = udiv i64 %12, %13, !dbg !13793
  %15 = trunc i64 %14 to i32, !dbg !13793
  call void @llvm.dbg.value(metadata i32 %15, metadata !13780, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata i32 %15, metadata !13780, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.value(metadata i32 %15, metadata !13780, metadata !DIExpression()), !dbg !13783
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13794
  %17 = lshr i32 %16, 15, !dbg !13795
  %18 = and i32 %17, 6, !dbg !13795
  %19 = add nuw nsw i32 %18, 2, !dbg !13795
  call void @llvm.dbg.value(metadata i32 %19, metadata !13781, metadata !DIExpression()), !dbg !13783
  %20 = udiv i32 %15, %19, !dbg !13796
  call void @llvm.dbg.value(metadata i32 %20, metadata !13782, metadata !DIExpression()), !dbg !13783
  br label %21, !dbg !13797

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !13798
  call void @llvm.dbg.value(metadata i32 %22, metadata !13782, metadata !DIExpression()), !dbg !13783
  ret i32 %22, !dbg !13799
}

; Function Attrs: optsize
declare !dbg !13800 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13803 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !13807, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.value(metadata i32 %1, metadata !13808, metadata !DIExpression()), !dbg !13824
  call void @llvm.dbg.value(metadata i32 %2, metadata !13809, metadata !DIExpression()), !dbg !13824
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !13825
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #25, !dbg !13825
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !13810, metadata !DIExpression()), !dbg !13826
  %7 = icmp eq i32 %0, 0, !dbg !13827
  br i1 %7, label %8, label %24, !dbg !13828

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !13829
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !13829
  call void @llvm.dbg.declare(metadata i32* %5, metadata !13820, metadata !DIExpression()), !dbg !13829
  store volatile i32 0, i32* %5, align 4, !dbg !13829
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13829
  %11 = or i32 %10, 1, !dbg !13829
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13829
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !13829
  %13 = and i32 %12, 1, !dbg !13829
  store volatile i32 %13, i32* %5, align 4, !dbg !13829
  %14 = load volatile i32, i32* %5, align 4, !dbg !13829
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !13830
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !13831
  store i32 256, i32* %15, align 4, !dbg !13832
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !13833
  store i32 2, i32* %16, align 4, !dbg !13834
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !13835
  store i32 3, i32* %17, align 4, !dbg !13836
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !13837
  store i32 0, i32* %18, align 4, !dbg !13838
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !13839
  store i32 0, i32* %19, align 4, !dbg !13840
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #27, !dbg !13841
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13842
  %21 = and i32 %20, -123731969, !dbg !13842
  %22 = or i32 %2, %1, !dbg !13842
  %23 = or i32 %22, %21, !dbg !13842
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13842
  br label %24, !dbg !13843

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #25, !dbg !13844
  ret void, !dbg !13844
}

; Function Attrs: optsize
declare !dbg !13845 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #15 !dbg !13849 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13850
  ret void, !dbg !13851
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #15 !dbg !13852 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !13853
  ret void, !dbg !13854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #10 !dbg !13855 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !13856
  ret i32 %1, !dbg !13857
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #17 !dbg !13858 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13859
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13860
  %3 = lshr i32 %2, 10, !dbg !13861
  %4 = and i32 %3, 7, !dbg !13861
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13862
  %6 = load i8, i8* %5, align 1, !dbg !13862
  %7 = zext i8 %6 to i32, !dbg !13862
  %8 = lshr i32 %1, %7, !dbg !13863
  ret i32 %8, !dbg !13864
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #17 !dbg !13865 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #26, !dbg !13866
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13867
  %3 = lshr i32 %2, 13, !dbg !13868
  %4 = and i32 %3, 7, !dbg !13868
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !13869
  %6 = load i8, i8* %5, align 1, !dbg !13869
  %7 = zext i8 %6 to i32, !dbg !13869
  %8 = lshr i32 %1, %7, !dbg !13870
  ret i32 %8, !dbg !13871
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !13872 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !13876, metadata !DIExpression()), !dbg !13877
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !13878
  store i32 15, i32* %2, align 4, !dbg !13879
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13880
  %4 = and i32 %3, 262144, !dbg !13882
  %5 = icmp eq i32 %4, 0, !dbg !13883
  br i1 %5, label %8, label %6, !dbg !13884

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13885
  store i32 327680, i32* %7, align 4, !dbg !13887
  br label %15, !dbg !13888

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13889
  %10 = and i32 %9, 65536, !dbg !13891
  %11 = icmp eq i32 %10, 0, !dbg !13892
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !13893
  br i1 %11, label %14, label %13, !dbg !13894

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !13895
  br label %15, !dbg !13897

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !13898
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13900
  %17 = and i32 %16, 1, !dbg !13902
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !13903
  store i32 %17, i32* %18, align 4, !dbg !13905
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13906
  %20 = lshr i32 %19, 3, !dbg !13907
  %21 = and i32 %20, 31, !dbg !13907
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !13908
  store i32 %21, i32* %22, align 4, !dbg !13909
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13910
  %24 = and i32 %23, 4, !dbg !13912
  %25 = icmp eq i32 %24, 0, !dbg !13913
  br i1 %25, label %28, label %26, !dbg !13914

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13915
  store i32 5, i32* %27, align 4, !dbg !13917
  br label %35, !dbg !13918

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !13919
  %30 = and i32 %29, 1, !dbg !13921
  %31 = icmp eq i32 %30, 0, !dbg !13922
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !13923
  br i1 %31, label %34, label %33, !dbg !13924

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !13925
  br label %35, !dbg !13927

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !13928
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !13930
  %37 = and i32 %36, 1, !dbg !13932
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !13933
  store i32 %37, i32* %38, align 4, !dbg !13935
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !13936
  %40 = and i32 %39, 16777216, !dbg !13938
  %41 = icmp eq i32 %40, 0, !dbg !13939
  %42 = select i1 %41, i32 1, i32 2, !dbg !13940
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !13941
  store i32 %42, i32* %43, align 4, !dbg !13943
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13944
  %45 = and i32 %44, 4194304, !dbg !13945
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !13946
  store i32 %45, i32* %46, align 4, !dbg !13947
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13948
  %48 = and i32 %47, 63, !dbg !13949
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !13950
  store i32 %48, i32* %49, align 4, !dbg !13951
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13952
  %51 = lshr i32 %50, 6, !dbg !13953
  %52 = and i32 %51, 511, !dbg !13953
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !13954
  store i32 %52, i32* %53, align 4, !dbg !13955
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13956
  %55 = shl i32 %54, 1, !dbg !13957
  %56 = and i32 %55, 393216, !dbg !13957
  %57 = add nuw nsw i32 %56, 131072, !dbg !13957
  %58 = lshr exact i32 %57, 16, !dbg !13958
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !13959
  store i32 %58, i32* %59, align 4, !dbg !13960
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !13961
  %61 = lshr i32 %60, 24, !dbg !13962
  %62 = and i32 %61, 15, !dbg !13962
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !13963
  store i32 %62, i32* %63, align 4, !dbg !13964
  ret void, !dbg !13965
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #17 !dbg !13966 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !13970, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.value(metadata i32* %1, metadata !13971, metadata !DIExpression()), !dbg !13972
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !13973
  store i32 15, i32* %3, align 4, !dbg !13974
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13975
  %5 = and i32 %4, 3, !dbg !13976
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !13977
  store i32 %5, i32* %6, align 4, !dbg !13978
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13979
  %8 = and i32 %7, 240, !dbg !13980
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !13981
  store i32 %8, i32* %9, align 4, !dbg !13982
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13983
  %11 = and i32 %10, 7168, !dbg !13984
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !13985
  store i32 %11, i32* %12, align 4, !dbg !13986
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !13987
  %14 = lshr i32 %13, 3, !dbg !13988
  %15 = and i32 %14, 7168, !dbg !13988
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !13989
  store i32 %15, i32* %16, align 4, !dbg !13990
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !13991
  %18 = and i32 %17, 7, !dbg !13992
  store i32 %18, i32* %1, align 4, !dbg !13993
  ret void, !dbg !13994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !13995 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !13996
  %2 = and i32 %1, 128, !dbg !13996
  %3 = icmp eq i32 %2, 0, !dbg !13996
  br i1 %3, label %5, label %4, !dbg !13998

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #26, !dbg !13999
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !14001
  br label %5, !dbg !14002

5:                                                ; preds = %4, %0
  ret void, !dbg !14003
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !14004 {
  ret void, !dbg !14005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #15 !dbg !14006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14009, metadata !DIExpression()), !dbg !14010
  tail call fastcc void @LL_InitTick(i32 noundef %0) #26, !dbg !14011
  ret void, !dbg !14012
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #15 !dbg !14013 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14016, metadata !DIExpression()), !dbg !14018
  call void @llvm.dbg.value(metadata i32 1000, metadata !14017, metadata !DIExpression()), !dbg !14018
  %2 = udiv i32 %0, 1000, !dbg !14019
  %3 = add nsw i32 %2, -1, !dbg !14020
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !14021
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !14022
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14023
  ret void, !dbg !14024
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #21 !dbg !14025 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !14027, metadata !DIExpression()), !dbg !14029
  %3 = bitcast i32* %2 to i8*, !dbg !14030
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !14030
  call void @llvm.dbg.declare(metadata i32* %2, metadata !14028, metadata !DIExpression()), !dbg !14031
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14032
  store volatile i32 %4, i32* %2, align 4, !dbg !14031
  %5 = load volatile i32, i32* %2, align 4, !dbg !14033
  %6 = icmp eq i32 %0, -1, !dbg !14034
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()), !dbg !14029
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !14029
  call void @llvm.dbg.value(metadata i32 %8, metadata !14027, metadata !DIExpression()), !dbg !14029
  br label %9, !dbg !14036

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !14027, metadata !DIExpression()), !dbg !14029
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !14037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14027, metadata !DIExpression()), !dbg !14029
  %12 = shl i32 %11, 15, !dbg !14029
  %13 = ashr i32 %12, 31, !dbg !14029
  %14 = add i32 %13, %10, !dbg !14029
  call void @llvm.dbg.value(metadata i32 %14, metadata !14027, metadata !DIExpression()), !dbg !14029
  %15 = icmp eq i32 %14, 0, !dbg !14036
  br i1 %15, label %16, label %9, !dbg !14036

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !14040
  ret void, !dbg !14040
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #9 !dbg !14041 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14043, metadata !DIExpression()), !dbg !14044
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !14045
  ret void, !dbg !14046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #15 !dbg !14047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14052, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 0, metadata !14055, metadata !DIExpression()), !dbg !14057
  call void @llvm.dbg.value(metadata i32 0, metadata !14056, metadata !DIExpression()), !dbg !14057
  %2 = icmp eq i32 %0, 0, !dbg !14058
  br i1 %2, label %50, label %3, !dbg !14060

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14061
  %5 = icmp eq i32 %4, 49152, !dbg !14064
  br i1 %5, label %6, label %15, !dbg !14065

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14055, metadata !DIExpression()), !dbg !14057
  %7 = add i32 %0, -64000001, !dbg !14066
  %8 = icmp ult i32 %7, 26000000, !dbg !14066
  br i1 %8, label %15, label %9, !dbg !14066

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !14069
  %11 = select i1 %10, i32 0, i32 3, !dbg !14071
  call void @llvm.dbg.value(metadata i32 %11, metadata !14055, metadata !DIExpression()), !dbg !14057
  %12 = add i32 %0, -30000001, !dbg !14072
  %13 = icmp ult i32 %12, 60000000, !dbg !14072
  %14 = select i1 %13, i32 1, i32 %11, !dbg !14072
  call void @llvm.dbg.value(metadata i32 %14, metadata !14055, metadata !DIExpression()), !dbg !14057
  br label %15, !dbg !14072

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !14057
  call void @llvm.dbg.value(metadata i32 %16, metadata !14055, metadata !DIExpression()), !dbg !14057
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14075
  %18 = icmp eq i32 %17, 32768, !dbg !14077
  br i1 %18, label %19, label %27, !dbg !14078

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !14079
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !14082
  br i1 %22, label %27, label %23, !dbg !14082

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !14083
  %25 = and i1 %24, %21, !dbg !14086
  %26 = select i1 %25, i32 1, i32 %16, !dbg !14086
  call void @llvm.dbg.value(metadata i32 %26, metadata !14055, metadata !DIExpression()), !dbg !14057
  br label %27, !dbg !14086

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !14087
  call void @llvm.dbg.value(metadata i32 %28, metadata !14055, metadata !DIExpression()), !dbg !14057
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #26, !dbg !14088
  %30 = icmp eq i32 %29, 16384, !dbg !14090
  br i1 %30, label %31, label %39, !dbg !14091

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !14092
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !14095
  br i1 %34, label %39, label %35, !dbg !14095

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !14096
  %37 = select i1 %36, i1 %33, i1 false, !dbg !14099
  %38 = select i1 %37, i32 1, i32 %28, !dbg !14099
  call void @llvm.dbg.value(metadata i32 %38, metadata !14055, metadata !DIExpression()), !dbg !14057
  br label %39, !dbg !14099

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !14087
  call void @llvm.dbg.value(metadata i32 %40, metadata !14055, metadata !DIExpression()), !dbg !14057
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #26, !dbg !14100
  call void @llvm.dbg.value(metadata i32 2, metadata !14053, metadata !DIExpression()), !dbg !14057
  br label %41, !dbg !14101

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !14087
  call void @llvm.dbg.value(metadata i32 %42, metadata !14053, metadata !DIExpression()), !dbg !14057
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #26, !dbg !14102
  call void @llvm.dbg.value(metadata i32 %43, metadata !14054, metadata !DIExpression()), !dbg !14057
  %44 = add nsw i32 %42, -1, !dbg !14104
  call void @llvm.dbg.value(metadata i32 %44, metadata !14053, metadata !DIExpression()), !dbg !14057
  %45 = icmp ne i32 %43, %40, !dbg !14105
  %46 = icmp ne i32 %44, 0, !dbg !14106
  %47 = select i1 %45, i1 %46, i1 false, !dbg !14106
  br i1 %47, label %41, label %48, !dbg !14107, !llvm.loop !14108

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !14110
  call void @llvm.dbg.value(metadata i32 %51, metadata !14056, metadata !DIExpression()), !dbg !14057
  ret i32 %51, !dbg !14111
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #17 !dbg !14112 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !14114
  %2 = and i32 %1, 49152, !dbg !14114
  ret i32 %2, !dbg !14115
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #15 !dbg !14116 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14118, metadata !DIExpression()), !dbg !14119
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14120
  %3 = and i32 %2, -8, !dbg !14120
  %4 = or i32 %3, %0, !dbg !14120
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14120
  ret void, !dbg !14121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #17 !dbg !14122 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !14123
  %2 = and i32 %1, 7, !dbg !14123
  ret i32 %2, !dbg !14124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #15 !dbg !14125 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !14143, metadata !DIExpression()), !dbg !14147
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14144, metadata !DIExpression()), !dbg !14147
  call void @llvm.dbg.value(metadata i32 0, metadata !14145, metadata !DIExpression()), !dbg !14147
  call void @llvm.dbg.value(metadata i32 0, metadata !14146, metadata !DIExpression()), !dbg !14147
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14148
  %4 = icmp eq i32 %3, 0, !dbg !14150
  br i1 %4, label %5, label %21, !dbg !14151

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #26, !dbg !14152
  call void @llvm.dbg.value(metadata i32 %6, metadata !14146, metadata !DIExpression()), !dbg !14147
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.209() #26, !dbg !14154
  %8 = icmp eq i32 %7, 1, !dbg !14156
  br i1 %8, label %13, label %9, !dbg !14157

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.210() #26, !dbg !14158
  br label %10, !dbg !14160

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.209() #26, !dbg !14161
  %12 = icmp eq i32 %11, 1, !dbg !14162
  br i1 %12, label %13, label %10, !dbg !14160, !llvm.loop !14163

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !14165
  %15 = load i32, i32* %14, align 4, !dbg !14165
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !14166
  %17 = load i32, i32* %16, align 4, !dbg !14166
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !14167
  %19 = load i32, i32* %18, align 4, !dbg !14167
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #26, !dbg !14168
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #26, !dbg !14169
  call void @llvm.dbg.value(metadata i32 %20, metadata !14145, metadata !DIExpression()), !dbg !14147
  br label %21, !dbg !14170

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !14171
  call void @llvm.dbg.value(metadata i32 %22, metadata !14145, metadata !DIExpression()), !dbg !14147
  ret i32 %22, !dbg !14172
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #17 !dbg !14173 {
  call void @llvm.dbg.value(metadata i32 0, metadata !14177, metadata !DIExpression()), !dbg !14178
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.213() #26, !dbg !14179
  %2 = icmp ne i32 %1, 0, !dbg !14181
  call void @llvm.dbg.value(metadata i1 %2, metadata !14177, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14178
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #26, !dbg !14182
  %4 = icmp ne i32 %3, 0, !dbg !14184
  %5 = select i1 %4, i1 true, i1 %2, !dbg !14185
  %6 = zext i1 %5 to i32, !dbg !14185
  call void @llvm.dbg.value(metadata i32 %6, metadata !14177, metadata !DIExpression()), !dbg !14178
  ret i32 %6, !dbg !14186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #10 !dbg !14187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14191, metadata !DIExpression()), !dbg !14194
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14192, metadata !DIExpression()), !dbg !14194
  call void @llvm.dbg.value(metadata i32 0, metadata !14193, metadata !DIExpression()), !dbg !14194
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14195
  %4 = load i32, i32* %3, align 4, !dbg !14195
  %5 = and i32 %4, 63, !dbg !14196
  %6 = udiv i32 %0, %5, !dbg !14197
  call void @llvm.dbg.value(metadata i32 %6, metadata !14193, metadata !DIExpression()), !dbg !14194
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14198
  %8 = load i32, i32* %7, align 4, !dbg !14198
  %9 = and i32 %8, 511, !dbg !14199
  %10 = mul i32 %9, %6, !dbg !14200
  call void @llvm.dbg.value(metadata i32 %10, metadata !14193, metadata !DIExpression()), !dbg !14194
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14201
  %12 = load i32, i32* %11, align 4, !dbg !14201
  %13 = lshr i32 %12, 15, !dbg !14202
  %14 = and i32 %13, 131070, !dbg !14202
  %15 = add nuw nsw i32 %14, 2, !dbg !14202
  %16 = udiv i32 %10, %15, !dbg !14203
  call void @llvm.dbg.value(metadata i32 %16, metadata !14193, metadata !DIExpression()), !dbg !14194
  ret i32 %16, !dbg !14204
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.209() unnamed_addr #17 !dbg !14205 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14206
  %2 = lshr i32 %1, 1, !dbg !14207
  %3 = and i32 %2, 1, !dbg !14207
  ret i32 %3, !dbg !14208
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.210() unnamed_addr #15 !dbg !14209 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14210
  %2 = or i32 %1, 1, !dbg !14210
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14210
  ret void, !dbg !14211
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #15 !dbg !14212 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14214, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata i32 %1, metadata !14215, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata i32 %2, metadata !14216, metadata !DIExpression()), !dbg !14218
  call void @llvm.dbg.value(metadata i32 %3, metadata !14217, metadata !DIExpression()), !dbg !14218
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14219
  %6 = and i32 %5, -4227072, !dbg !14219
  %7 = or i32 %1, %0, !dbg !14219
  %8 = shl i32 %2, 6, !dbg !14219
  %9 = or i32 %7, %8, !dbg !14219
  %10 = or i32 %9, %6, !dbg !14219
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14219
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14220
  %12 = and i32 %11, -196609, !dbg !14220
  %13 = or i32 %12, %3, !dbg !14220
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !14220
  ret void, !dbg !14221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #15 !dbg !14222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14226, metadata !DIExpression()), !dbg !14230
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !14227, metadata !DIExpression()), !dbg !14230
  call void @llvm.dbg.value(metadata i32 0, metadata !14228, metadata !DIExpression()), !dbg !14230
  call void @llvm.dbg.value(metadata i32 0, metadata !14229, metadata !DIExpression()), !dbg !14230
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !14231
  %4 = load i32, i32* %3, align 4, !dbg !14231
  %5 = lshr i32 %4, 4, !dbg !14231
  %6 = and i32 %5, 15, !dbg !14231
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !14231
  %8 = load i8, i8* %7, align 1, !dbg !14231
  %9 = zext i8 %8 to i32, !dbg !14231
  %10 = lshr i32 %0, %9, !dbg !14231
  call void @llvm.dbg.value(metadata i32 %10, metadata !14229, metadata !DIExpression()), !dbg !14230
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !14232
  %12 = icmp ult i32 %11, %10, !dbg !14234
  br i1 %12, label %13, label %16, !dbg !14235

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14236
  call void @llvm.dbg.value(metadata i32 %14, metadata !14228, metadata !DIExpression()), !dbg !14230
  %15 = icmp eq i32 %14, 0, !dbg !14238
  br i1 %15, label %16, label %30, !dbg !14240

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.212() #26, !dbg !14241
  br label %17, !dbg !14243

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.213() #26, !dbg !14244
  %19 = icmp eq i32 %18, 1, !dbg !14245
  br i1 %19, label %20, label %17, !dbg !14243, !llvm.loop !14246

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !14248
  tail call fastcc void @LL_RCC_SetAHBPrescaler.214(i32 noundef %21) #26, !dbg !14249
  tail call fastcc void @LL_RCC_SetSysClkSource.215() #26, !dbg !14250
  br label %22, !dbg !14251

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.216() #26, !dbg !14252
  %24 = icmp eq i32 %23, 8, !dbg !14253
  br i1 %24, label %25, label %22, !dbg !14251, !llvm.loop !14254

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !14256
  %27 = load i32, i32* %26, align 4, !dbg !14256
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.217(i32 noundef %27) #26, !dbg !14257
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !14258
  %29 = load i32, i32* %28, align 4, !dbg !14258
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.218(i32 noundef %29) #26, !dbg !14259
  br label %30, !dbg !14260

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !14261
  %33 = icmp ugt i32 %32, %10, !dbg !14263
  br i1 %33, label %34, label %36, !dbg !14264

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #26, !dbg !14265
  call void @llvm.dbg.value(metadata i32 %35, metadata !14228, metadata !DIExpression()), !dbg !14230
  br label %36, !dbg !14267

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !14230
  call void @llvm.dbg.value(metadata i32 %37, metadata !14228, metadata !DIExpression()), !dbg !14230
  %38 = icmp eq i32 %37, 0, !dbg !14268
  br i1 %38, label %39, label %40, !dbg !14270

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #26, !dbg !14271
  br label %40, !dbg !14273

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !14274
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.212() unnamed_addr #15 !dbg !14275 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14276
  %2 = or i32 %1, 16777216, !dbg !14276
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14276
  ret void, !dbg !14277
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.213() unnamed_addr #17 !dbg !14278 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14279
  %2 = lshr i32 %1, 25, !dbg !14280
  %3 = and i32 %2, 1, !dbg !14280
  ret i32 %3, !dbg !14281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.214(i32 noundef %0) unnamed_addr #15 !dbg !14282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14284, metadata !DIExpression()), !dbg !14285
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14286
  %3 = and i32 %2, -241, !dbg !14286
  %4 = or i32 %3, %0, !dbg !14286
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14286
  ret void, !dbg !14287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.215() unnamed_addr #15 !dbg !14288 {
  call void @llvm.dbg.value(metadata i32 2, metadata !14290, metadata !DIExpression()), !dbg !14291
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14292
  %2 = and i32 %1, -4, !dbg !14292
  %3 = or i32 %2, 2, !dbg !14292
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14292
  ret void, !dbg !14293
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.216() unnamed_addr #17 !dbg !14294 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14295
  %2 = and i32 %1, 12, !dbg !14295
  ret i32 %2, !dbg !14296
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.217(i32 noundef %0) unnamed_addr #15 !dbg !14297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14299, metadata !DIExpression()), !dbg !14300
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14301
  %3 = and i32 %2, -7169, !dbg !14301
  %4 = or i32 %3, %0, !dbg !14301
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14301
  ret void, !dbg !14302
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.218(i32 noundef %0) unnamed_addr #15 !dbg !14303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14305, metadata !DIExpression()), !dbg !14306
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14307
  %3 = and i32 %2, -57345, !dbg !14307
  %4 = or i32 %3, %0, !dbg !14307
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !14307
  ret void, !dbg !14308
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #17 !dbg !14309 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14310
  %2 = lshr i32 %1, 27, !dbg !14311
  %3 = and i32 %2, 1, !dbg !14311
  ret i32 %3, !dbg !14312
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #15 !dbg !14313 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14317, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i32 %1, metadata !14318, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !14319, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !14320, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i32 0, metadata !14321, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata i32 0, metadata !14322, metadata !DIExpression()), !dbg !14323
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #26, !dbg !14324
  %6 = icmp eq i32 %5, 0, !dbg !14326
  br i1 %6, label %7, label %27, !dbg !14327

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #26, !dbg !14328
  call void @llvm.dbg.value(metadata i32 %8, metadata !14322, metadata !DIExpression()), !dbg !14323
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.219() #26, !dbg !14330
  %10 = icmp eq i32 %9, 1, !dbg !14332
  br i1 %10, label %19, label %11, !dbg !14333

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !14334
  br i1 %12, label %13, label %14, !dbg !14337

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #26, !dbg !14338
  br label %15, !dbg !14340

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.220() #26, !dbg !14341
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.221() #26, !dbg !14343
  br label %16, !dbg !14344

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.219() #26, !dbg !14345
  %18 = icmp eq i32 %17, 1, !dbg !14346
  br i1 %18, label %19, label %16, !dbg !14344, !llvm.loop !14347

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !14349
  %21 = load i32, i32* %20, align 4, !dbg !14349
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !14350
  %23 = load i32, i32* %22, align 4, !dbg !14350
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !14351
  %25 = load i32, i32* %24, align 4, !dbg !14351
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.211(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #26, !dbg !14352
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #26, !dbg !14353
  call void @llvm.dbg.value(metadata i32 %26, metadata !14321, metadata !DIExpression()), !dbg !14323
  br label %27, !dbg !14354

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !14355
  call void @llvm.dbg.value(metadata i32 %28, metadata !14321, metadata !DIExpression()), !dbg !14323
  ret i32 %28, !dbg !14356
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.219() unnamed_addr #17 !dbg !14357 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14358
  %2 = lshr i32 %1, 17, !dbg !14359
  %3 = and i32 %2, 1, !dbg !14359
  ret i32 %3, !dbg !14360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #15 !dbg !14361 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14362
  %2 = or i32 %1, 262144, !dbg !14362
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14362
  ret void, !dbg !14363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.220() unnamed_addr #15 !dbg !14364 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14365
  %2 = and i32 %1, -262145, !dbg !14365
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14365
  ret void, !dbg !14366
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.221() unnamed_addr #15 !dbg !14367 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14368
  %2 = or i32 %1, 65536, !dbg !14368
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !14368
  ret void, !dbg !14369
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #23 !dbg !14370 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14373, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression()), !dbg !14389
  call void @llvm.dbg.value(metadata i32 undef, metadata !14373, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !14389
  ret void, !dbg !14390
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !14391 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14395, metadata !DIExpression()), !dbg !14397
  %2 = icmp eq i8* %0, null, !dbg !14398
  br i1 %2, label %29, label %3, !dbg !14400

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !14401
  %5 = icmp eq i8 %4, 0, !dbg !14402
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !14403
  br i1 %6, label %29, label %8, !dbg !14403

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !14396, metadata !DIExpression()), !dbg !14397
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !14404

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !14396, metadata !DIExpression()), !dbg !14397
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #26, !dbg !14406
  br i1 %10, label %11, label %15, !dbg !14411

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !14412
  %13 = load i8*, i8** %12, align 4, !dbg !14412
  %14 = icmp eq i8* %13, %0, !dbg !14413
  br i1 %14, label %29, label %15, !dbg !14414

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !14415
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !14396, metadata !DIExpression()), !dbg !14397
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14416
  br i1 %17, label %7, label %8, !dbg !14417, !llvm.loop !14418

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !14396, metadata !DIExpression()), !dbg !14397
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #26, !dbg !14420
  br i1 %20, label %21, label %26, !dbg !14424

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !14425
  %23 = load i8*, i8** %22, align 4, !dbg !14425
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #27, !dbg !14426
  %25 = icmp eq i32 %24, 0, !dbg !14427
  br i1 %25, label %29, label %26, !dbg !14428

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !14429
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !14396, metadata !DIExpression()), !dbg !14397
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !14430
  br i1 %28, label %29, label %18, !dbg !14404, !llvm.loop !14431

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !14397
  ret %struct.device* %30, !dbg !14433
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #10 !dbg !14434 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14438, metadata !DIExpression()), !dbg !14439
  %2 = icmp eq %struct.device* %0, null, !dbg !14440
  br i1 %2, label %14, label %3, !dbg !14442

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !14443
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !14443
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !14444
  %7 = load i8, i8* %6, align 1, !dbg !14444
  %8 = and i8 %7, 1, !dbg !14444
  %9 = icmp eq i8 %8, 0, !dbg !14444
  br i1 %9, label %14, label %10, !dbg !14445

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !14446
  %12 = load i8, i8* %11, align 1, !dbg !14446
  %13 = icmp eq i8 %12, 0, !dbg !14447
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !14439
  ret i1 %15, !dbg !14448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !14449 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !14454, metadata !DIExpression()), !dbg !14455
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !14456
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !14457
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14458 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14466, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14467, metadata !DIExpression()), !dbg !14471
  call void @llvm.dbg.value(metadata i8* %2, metadata !14468, metadata !DIExpression()), !dbg !14471
  %5 = bitcast i32* %4 to i8*, !dbg !14472
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14472
  call void @llvm.dbg.value(metadata i32 0, metadata !14469, metadata !DIExpression()), !dbg !14471
  store i32 0, i32* %4, align 4, !dbg !14473
  call void @llvm.dbg.value(metadata i32* %4, metadata !14469, metadata !DIExpression(DW_OP_deref)), !dbg !14471
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14474
  call void @llvm.dbg.value(metadata i16* %6, metadata !14470, metadata !DIExpression()), !dbg !14471
  %7 = load i32, i32* %4, align 4, !dbg !14475
  call void @llvm.dbg.value(metadata i32 %7, metadata !14469, metadata !DIExpression()), !dbg !14471
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14476
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14477
  ret i32 %8, !dbg !14478
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14479 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14483, metadata !DIExpression()), !dbg !14489
  call void @llvm.dbg.value(metadata i32* %1, metadata !14484, metadata !DIExpression()), !dbg !14489
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14490
  %4 = load i16*, i16** %3, align 4, !dbg !14490
  call void @llvm.dbg.value(metadata i16* %4, metadata !14485, metadata !DIExpression()), !dbg !14489
  %5 = icmp eq i16* %4, null, !dbg !14491
  br i1 %5, label %14, label %6, !dbg !14492

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !14493
  call void @llvm.dbg.value(metadata i32 %7, metadata !14486, metadata !DIExpression()), !dbg !14493
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !14494
  %9 = load i16, i16* %8, align 2, !dbg !14494
  %10 = add i16 %9, -32767, !dbg !14495
  %11 = icmp ult i16 %10, 2, !dbg !14495
  %12 = add i32 %7, 1, !dbg !14496
  call void @llvm.dbg.value(metadata i32 %12, metadata !14486, metadata !DIExpression()), !dbg !14493
  br i1 %11, label %13, label %6, !dbg !14495, !llvm.loop !14498

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !14501
  br label %14, !dbg !14502

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !14503
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !14504 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !14508, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 %1, metadata !14509, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !14510, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i8* %3, metadata !14511, metadata !DIExpression()), !dbg !14519
  call void @llvm.dbg.value(metadata i32 0, metadata !14512, metadata !DIExpression()), !dbg !14520
  %5 = icmp eq i32 %1, 0, !dbg !14521
  br i1 %5, label %16, label %8, !dbg !14522

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !14512, metadata !DIExpression()), !dbg !14520
  %7 = icmp eq i32 %15, %1, !dbg !14521
  br i1 %7, label %16, label %8, !dbg !14522, !llvm.loop !14523

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !14512, metadata !DIExpression()), !dbg !14520
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !14525
  %11 = load i16, i16* %10, align 2, !dbg !14525
  call void @llvm.dbg.value(metadata i16 %11, metadata !14514, metadata !DIExpression()), !dbg !14526
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #26, !dbg !14527
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !14517, metadata !DIExpression()), !dbg !14526
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #27, !dbg !14528
  call void @llvm.dbg.value(metadata i32 %13, metadata !14518, metadata !DIExpression()), !dbg !14526
  %14 = icmp slt i32 %13, 0, !dbg !14529
  %15 = add nuw i32 %9, 1, !dbg !14531
  call void @llvm.dbg.value(metadata i32 %15, metadata !14512, metadata !DIExpression()), !dbg !14520
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !14532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !14533 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !14537, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !14538, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !14539, metadata !DIExpression()), !dbg !14540
  %2 = sext i16 %0 to i32, !dbg !14541
  %3 = icmp slt i16 %0, 1, !dbg !14543
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !14544
  %6 = add nsw i32 %2, -1, !dbg !14544
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !14544
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !14544
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !14538, metadata !DIExpression()), !dbg !14540
  ret %struct.device* %8, !dbg !14545
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !14546 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14548, metadata !DIExpression()), !dbg !14553
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !14549, metadata !DIExpression()), !dbg !14553
  call void @llvm.dbg.value(metadata i8* %2, metadata !14550, metadata !DIExpression()), !dbg !14553
  %5 = bitcast i32* %4 to i8*, !dbg !14554
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14554
  call void @llvm.dbg.value(metadata i32 0, metadata !14551, metadata !DIExpression()), !dbg !14553
  store i32 0, i32* %4, align 4, !dbg !14555
  call void @llvm.dbg.value(metadata i32* %4, metadata !14551, metadata !DIExpression(DW_OP_deref)), !dbg !14553
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #26, !dbg !14556
  call void @llvm.dbg.value(metadata i16* %6, metadata !14552, metadata !DIExpression()), !dbg !14553
  %7 = load i32, i32* %4, align 4, !dbg !14557
  call void @llvm.dbg.value(metadata i32 %7, metadata !14551, metadata !DIExpression()), !dbg !14553
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #26, !dbg !14558
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #25, !dbg !14559
  ret i32 %8, !dbg !14560
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #14 !dbg !14561 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !14563, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata i32* %1, metadata !14564, metadata !DIExpression()), !dbg !14568
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !14569
  %4 = load i16*, i16** %3, align 4, !dbg !14569
  call void @llvm.dbg.value(metadata i16* %4, metadata !14565, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata i32 0, metadata !14566, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata i32 0, metadata !14567, metadata !DIExpression()), !dbg !14568
  %5 = icmp eq i16* %4, null, !dbg !14570
  br i1 %5, label %22, label %6, !dbg !14572

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !14566, metadata !DIExpression()), !dbg !14568
  call void @llvm.dbg.value(metadata i16* %8, metadata !14565, metadata !DIExpression()), !dbg !14568
  %9 = load i16, i16* %8, align 2, !dbg !14573
  %10 = icmp eq i16 %9, -32768, !dbg !14577
  call void @llvm.dbg.value(metadata i32 undef, metadata !14566, metadata !DIExpression()), !dbg !14568
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !14578
  call void @llvm.dbg.value(metadata i16* %11, metadata !14565, metadata !DIExpression()), !dbg !14568
  %12 = zext i1 %10 to i32, !dbg !14579
  %13 = add i32 %7, %12, !dbg !14579
  call void @llvm.dbg.value(metadata i32 %13, metadata !14566, metadata !DIExpression()), !dbg !14568
  %14 = icmp eq i32 %13, 2, !dbg !14580
  br i1 %14, label %15, label %6, !dbg !14581

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !14568
  call void @llvm.dbg.value(metadata i32 %16, metadata !14567, metadata !DIExpression()), !dbg !14568
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !14582
  %18 = load i16, i16* %17, align 2, !dbg !14582
  %19 = icmp eq i16 %18, 32767, !dbg !14583
  %20 = add i32 %16, 1, !dbg !14584
  call void @llvm.dbg.value(metadata i32 %20, metadata !14567, metadata !DIExpression()), !dbg !14568
  br i1 %19, label %21, label %15, !dbg !14586, !llvm.loop !14587

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !14589
  br label %22, !dbg !14590

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !14591
  call void @llvm.dbg.value(metadata i16* %23, metadata !14565, metadata !DIExpression()), !dbg !14568
  ret i16* %23, !dbg !14592
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #10 !dbg !14593 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14596
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 4, !dbg !14597
  ret i32* %2, !dbg !14598
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !14599 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14747, metadata !DIExpression()), !dbg !14750
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !14748, metadata !DIExpression()), !dbg !14750
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !14749, metadata !DIExpression()), !dbg !14750
  ret void, !dbg !14751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14756, metadata !DIExpression()), !dbg !14758
  call void @llvm.dbg.value(metadata i32 %1, metadata !14757, metadata !DIExpression()), !dbg !14758
  ret void, !dbg !14759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !14760 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14764, metadata !DIExpression()), !dbg !14766
  call void @llvm.dbg.value(metadata i32 %1, metadata !14765, metadata !DIExpression()), !dbg !14766
  ret void, !dbg !14767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14772, metadata !DIExpression()), !dbg !14774
  call void @llvm.dbg.value(metadata i8* %1, metadata !14773, metadata !DIExpression()), !dbg !14774
  ret i32 -134, !dbg !14775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !14776 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14780, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.value(metadata i8* %1, metadata !14781, metadata !DIExpression()), !dbg !14782
  ret i32 -134, !dbg !14783
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14787, metadata !DIExpression()), !dbg !14788
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14789, !srcloc !14795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #25, !dbg !14796
  call void @llvm.dbg.value(metadata i32 undef, metadata !14793, metadata !DIExpression()) #25, !dbg !14796
  br label %3, !dbg !14797

3:                                                ; preds = %3, %1
  br label %3, !dbg !14798, !llvm.loop !14801
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14808, metadata !DIExpression()), !dbg !14810
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14809, metadata !DIExpression()), !dbg !14810
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.228, i32 0, i32 0), i32 noundef 69) #27, !dbg !14811
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14816
  unreachable, !dbg !14816
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #12 !dbg !14817 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14819, metadata !DIExpression()), !dbg !14820
  tail call void @arch_system_halt(i32 noundef %0) #31, !dbg !14821
  unreachable, !dbg !14821
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !14822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14824, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14825, metadata !DIExpression()), !dbg !14828
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !14829, !srcloc !14795
  call void @llvm.dbg.value(metadata i32 undef, metadata !14792, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14793, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata i32 undef, metadata !14826, metadata !DIExpression()), !dbg !14828
  %4 = tail call fastcc %struct.k_thread* @k_current_get.231() #28, !dbg !14832
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !14827, metadata !DIExpression()), !dbg !14828
  %5 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #26, !dbg !14833
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.232, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %5, i32 noundef 0) #27, !dbg !14833
  %6 = icmp eq %struct.__esf* %1, null, !dbg !14838
  br i1 %6, label %15, label %7, !dbg !14840

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14841, metadata !DIExpression()), !dbg !14846
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !14848
  %9 = load i32, i32* %8, align 4, !dbg !14848
  %10 = and i32 %9, 511, !dbg !14849
  %11 = icmp eq i32 %10, 0, !dbg !14850
  br i1 %11, label %13, label %12, !dbg !14851

12:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.233, i32 0, i32 0), i32 noundef 69) #27, !dbg !14852
  br label %13, !dbg !14858

13:                                               ; preds = %7, %12
  %14 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14859
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.234, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %14) #27, !dbg !14859
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #26, !dbg !14864
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !14841, metadata !DIExpression()), !dbg !14865
  br label %17, !dbg !14870

15:                                               ; preds = %2
  %16 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %4) #26, !dbg !14859
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.234, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %4, i8* noundef %16) #27, !dbg !14859
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #26, !dbg !14864
  br label %17, !dbg !14871

17:                                               ; preds = %15, %13
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !14829
  call void @llvm.dbg.value(metadata i32 %18, metadata !14792, metadata !DIExpression()) #25, !dbg !14831
  call void @llvm.dbg.value(metadata i32 %18, metadata !14826, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.value(metadata i32 undef, metadata !14872, metadata !DIExpression()) #25, !dbg !14875
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !14877, !srcloc !14878
  tail call fastcc void @k_thread_abort.235(%struct.k_thread* noundef %4) #26, !dbg !14879
  ret void, !dbg !14882
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.231() unnamed_addr #13 !dbg !14883 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.243() #28, !dbg !14887
  ret %struct.k_thread* %1, !dbg !14888
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !14889 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14893, metadata !DIExpression()), !dbg !14894
  %2 = icmp ult i32 %0, 5, !dbg !14895
  br i1 %2, label %3, label %6, !dbg !14895

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !14895
  %5 = load i8*, i8** %4, align 4, !dbg !14895
  br label %6, !dbg !14895

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.237, i32 0, i32 0), %1 ], !dbg !14896
  ret i8* %7, !dbg !14898
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14899 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14903, metadata !DIExpression()), !dbg !14905
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !14906
  br i1 %2, label %9, label %3, !dbg !14907

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #27, !dbg !14908
  call void @llvm.dbg.value(metadata i8* %4, metadata !14904, metadata !DIExpression()), !dbg !14905
  %5 = icmp eq i8* %4, null, !dbg !14909
  br i1 %5, label %9, label %6, !dbg !14911

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !14912
  %8 = icmp eq i8 %7, 0, !dbg !14913
  br i1 %8, label %9, label %10, !dbg !14914

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.236, i32 0, i32 0), metadata !14904, metadata !DIExpression()), !dbg !14905
  br label %10, !dbg !14915

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.236, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !14905
  call void @llvm.dbg.value(metadata i8* %11, metadata !14904, metadata !DIExpression()), !dbg !14905
  ret i8* %11, !dbg !14917
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.235(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14918 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14922, metadata !DIExpression()), !dbg !14923
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14924, !srcloc !14926
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #27, !dbg !14927
  ret void, !dbg !14928
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.243() unnamed_addr #13 !dbg !14929 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !14930, !srcloc !14932
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #27, !dbg !14933
  ret %struct.k_thread* %1, !dbg !14934
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14935 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14939, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 %1, metadata !14940, metadata !DIExpression()), !dbg !14942
  call void @llvm.dbg.value(metadata i32 %2, metadata !14941, metadata !DIExpression()), !dbg !14942
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #27, !dbg !14943
  ret void, !dbg !14944
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !14945 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !14949, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i8* %1, metadata !14950, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.value(metadata i32 %2, metadata !14951, metadata !DIExpression()), !dbg !14952
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #27, !dbg !14953
  ret void, !dbg !14954
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !14955 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #26, !dbg !14956
  ret void, !dbg !14957
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !14958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14960, metadata !DIExpression()), !dbg !14961
  tail call fastcc void @init_idle_thread(i32 noundef %0) #26, !dbg !14962
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14963
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !14964
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !14965
  %4 = trunc i32 %0 to i8, !dbg !14966
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !14967
  store i8 %4, i8* %5, align 4, !dbg !14968
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !14969
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #26, !dbg !14970
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !14971
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !14972
  store i8* %8, i8** %9, align 4, !dbg !14973
  ret void, !dbg !14974
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !14975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14977, metadata !DIExpression()), !dbg !14983
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !14984
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14978, metadata !DIExpression()), !dbg !14983
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !14985
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !14979, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.value(metadata i8* null, metadata !14982, metadata !DIExpression()), !dbg !14983
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !14986
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !14987
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef null) #27, !dbg !14988
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #26, !dbg !14989
  ret void, !dbg !14990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !14991 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !14995, metadata !DIExpression()), !dbg !14996
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !14997
  ret i8* %2, !dbg !14998
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !14999 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15004, metadata !DIExpression()), !dbg !15005
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15006
  %3 = load i8, i8* %2, align 1, !dbg !15007
  %4 = and i8 %3, -5, !dbg !15007
  store i8 %4, i8* %2, align 1, !dbg !15007
  ret void, !dbg !15008
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #12 !dbg !15009 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #26, !dbg !15012
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #27, !dbg !15013
  %3 = ptrtoint i8* %2 to i32, !dbg !15022
  %4 = add i32 %3, 2048, !dbg !15023
  call void @llvm.dbg.value(metadata i32 %4, metadata !15017, metadata !DIExpression()) #25, !dbg !15024
  call void @llvm.dbg.value(metadata i32 %4, metadata !15025, metadata !DIExpression()) #25, !dbg !15028
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #25, !dbg !15030, !srcloc !15031
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15032
  %6 = or i32 %5, 512, !dbg !15032
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !15032
  tail call fastcc void @__NVIC_SetPriority.252(i32 noundef -2, i32 noundef 255) #27, !dbg !15033
  tail call fastcc void @__NVIC_SetPriority.252(i32 noundef -5, i32 noundef 0) #27, !dbg !15036
  tail call fastcc void @__NVIC_SetPriority.252(i32 noundef -12, i32 noundef 0) #27, !dbg !15037
  tail call fastcc void @__NVIC_SetPriority.252(i32 noundef -11, i32 noundef 0) #27, !dbg !15038
  tail call fastcc void @__NVIC_SetPriority.252(i32 noundef -10, i32 noundef 0) #27, !dbg !15039
  tail call fastcc void @__NVIC_SetPriority.252(i32 noundef -4, i32 noundef 0) #27, !dbg !15040
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15041
  %8 = or i32 %7, 458752, !dbg !15041
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !15041
  tail call void @z_arm_fault_init() #27, !dbg !15042
  tail call void @z_arm_cpu_idle_init() #27, !dbg !15043
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !15044
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !15047
  %9 = tail call i32 @z_arm_mpu_init() #27, !dbg !15048
  tail call void @z_arm_configure_static_mpu_regions() #27, !dbg !15049
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !15050
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #25, !dbg !15050
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !15011, metadata !DIExpression()), !dbg !15051
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #26, !dbg !15052
  call void @z_device_state_init() #27, !dbg !15053
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #26, !dbg !15054
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #26, !dbg !15055
  %11 = call fastcc i8* @prepare_multithreading() #26, !dbg !15056
  call fastcc void @switch_to_main_thread(i8* noundef %11) #31, !dbg !15057
  unreachable, !dbg !15057
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2378 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2382, metadata !DIExpression()), !dbg !15058
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !15059
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !15059
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2383, metadata !DIExpression()), !dbg !15058
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2383, metadata !DIExpression()), !dbg !15058
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !15060
  br i1 %7, label %8, label %35, !dbg !15061

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2383, metadata !DIExpression()), !dbg !15058
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !15062
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !15062
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2393, metadata !DIExpression()), !dbg !15063
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !15064
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !15064
  %14 = tail call i32 %13(%struct.device* noundef %11) #27, !dbg !15065
  call void @llvm.dbg.value(metadata i32 %14, metadata !2397, metadata !DIExpression()), !dbg !15063
  %15 = icmp eq %struct.device* %11, null, !dbg !15066
  br i1 %15, label %32, label %16, !dbg !15068

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !15069
  br i1 %17, label %26, label %18, !dbg !15072

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !15073
  call void @llvm.dbg.value(metadata i32 %19, metadata !2397, metadata !DIExpression()), !dbg !15063
  %20 = icmp ult i32 %19, 255, !dbg !15075
  %21 = select i1 %20, i32 %19, i32 255, !dbg !15075
  call void @llvm.dbg.value(metadata i32 %21, metadata !2397, metadata !DIExpression()), !dbg !15063
  %22 = trunc i32 %21 to i8, !dbg !15076
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15077
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !15077
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !15078
  store i8 %22, i8* %25, align 1, !dbg !15079
  br label %26, !dbg !15080

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !15081
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !15081
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !15082
  %30 = load i8, i8* %29, align 1, !dbg !15083
  %31 = or i8 %30, 1, !dbg !15083
  store i8 %31, i8* %29, align 1, !dbg !15083
  br label %32, !dbg !15084

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !15085
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2383, metadata !DIExpression()), !dbg !15058
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !15060
  br i1 %34, label %8, label %35, !dbg !15061, !llvm.loop !15086

35:                                               ; preds = %32, %1
  ret void, !dbg !15088
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.252(i32 noundef %0, i32 noundef %1) unnamed_addr #15 !dbg !15089 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15091, metadata !DIExpression()), !dbg !15093
  call void @llvm.dbg.value(metadata i32 %1, metadata !15092, metadata !DIExpression()), !dbg !15093
  %3 = trunc i32 %1 to i8, !dbg !15094
  %4 = shl i8 %3, 4, !dbg !15094
  %5 = and i32 %0, 15, !dbg !15097
  %6 = add nsw i32 %5, -4, !dbg !15098
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !15099
  store volatile i8 %4, i8* %7, align 1, !dbg !15100
  ret void, !dbg !15101
}

; Function Attrs: optsize
declare !dbg !15102 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #9 !dbg !15103 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15106, metadata !DIExpression()), !dbg !15107
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15108
  store i8 1, i8* %2, align 1, !dbg !15109
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !15110
  store i8 1, i8* %3, align 4, !dbg !15111
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15112
  store i32 0, i32* %4, align 4, !dbg !15113
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15114
  store i32 0, i32* %5, align 4, !dbg !15115
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15116
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !15117
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15118
  ret void, !dbg !15119
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !15120 {
  tail call void @z_sched_init() #27, !dbg !15125
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15126
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.253, i32 0, i32 0)) #27, !dbg !15127
  call void @llvm.dbg.value(metadata i8* %1, metadata !15124, metadata !DIExpression()), !dbg !15128
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #26, !dbg !15129
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #27, !dbg !15130
  tail call void @z_init_cpu(i32 noundef 0) #26, !dbg !15131
  ret i8* %1, !dbg !15132
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #12 !dbg !15133 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15137, metadata !DIExpression()), !dbg !15138
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #27, !dbg !15139
  unreachable, !dbg !15140
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !15141 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15143, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i8* %1, metadata !15144, metadata !DIExpression()), !dbg !15146
  call void @llvm.dbg.value(metadata i8* %2, metadata !15145, metadata !DIExpression()), !dbg !15146
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !15147
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #26, !dbg !15148
  tail call void @boot_banner() #27, !dbg !15149
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #26, !dbg !15150
  tail call void @z_init_static_threads() #27, !dbg !15151
  tail call void @main() #27, !dbg !15152
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15153
  %5 = and i8 %4, -2, !dbg !15153
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !15153
  ret void, !dbg !15154
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15155 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15165, metadata !DIExpression()), !dbg !15167
  call void @llvm.dbg.value(metadata i8* %1, metadata !15166, metadata !DIExpression()), !dbg !15167
  ret void, !dbg !15168
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !15169 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !15171, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.value(metadata i8* %1, metadata !15172, metadata !DIExpression()), !dbg !15173
  ret void, !dbg !15174
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !15175 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !15176, !srcloc !15183
  call void @llvm.dbg.value(metadata i32 %1, metadata !15179, metadata !DIExpression()) #25, !dbg !15184
  %2 = icmp ne i32 %1, 0, !dbg !15185
  ret i1 %2, !dbg !15186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #11 !dbg !15187 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15188
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15189
  %3 = load i8, i8* %2, align 4, !dbg !15190
  %4 = or i8 %3, 1, !dbg !15190
  store i8 %4, i8* %2, align 4, !dbg !15190
  ret void, !dbg !15191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #11 !dbg !15192 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15193
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15194
  %3 = load i8, i8* %2, align 4, !dbg !15195
  %4 = and i8 %3, -2, !dbg !15195
  store i8 %4, i8* %2, align 4, !dbg !15195
  ret void, !dbg !15196
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #10 !dbg !15197 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15198
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !15199
  %3 = load i8, i8* %2, align 4, !dbg !15199
  %4 = and i8 %3, 1, !dbg !15200
  %5 = icmp ne i8 %4, 0, !dbg !15201
  ret i1 %5, !dbg !15202
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !15203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15207, metadata !DIExpression()), !dbg !15209
  call void @llvm.dbg.value(metadata i8* %1, metadata !15208, metadata !DIExpression()), !dbg !15209
  ret i32 -88, !dbg !15210
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local noalias i8* @k_thread_name_get(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15211 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15215, metadata !DIExpression()), !dbg !15216
  ret i8* null, !dbg !15217
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #3 !dbg !15218 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15222, metadata !DIExpression()), !dbg !15225
  call void @llvm.dbg.value(metadata i8* %1, metadata !15223, metadata !DIExpression()), !dbg !15225
  call void @llvm.dbg.value(metadata i32 %2, metadata !15224, metadata !DIExpression()), !dbg !15225
  ret i32 -88, !dbg !15226
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2406 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2520, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i8* %1, metadata !2521, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 %2, metadata !2522, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 0, metadata !2523, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i8 undef, metadata !2525, metadata !DIExpression()), !dbg !15227
  %4 = icmp eq i8* %1, null, !dbg !15228
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !15230
  br i1 %6, label %46, label %7, !dbg !15230

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15231
  %9 = load i8, i8* %8, align 1, !dbg !15231
  call void @llvm.dbg.value(metadata i8 %9, metadata !2525, metadata !DIExpression()), !dbg !15227
  %10 = add i32 %2, -1, !dbg !15232
  call void @llvm.dbg.value(metadata i32 %10, metadata !2522, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i8 0, metadata !2526, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i8 %9, metadata !2525, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 0, metadata !2523, metadata !DIExpression()), !dbg !15227
  %11 = icmp eq i8 %9, 0, !dbg !15234
  br i1 %11, label %12, label %15, !dbg !15236

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !15237
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !15238
  store i8 0, i8* %14, align 1, !dbg !15239
  br label %46, !dbg !15240

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2526, metadata !DIExpression()), !dbg !15233
  call void @llvm.dbg.value(metadata i8 %17, metadata !2525, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 %18, metadata !2523, metadata !DIExpression()), !dbg !15227
  %19 = zext i8 %17 to i32, !dbg !15241
  %20 = zext i8 %16 to i32, !dbg !15242
  %21 = shl nuw i32 1, %20, !dbg !15242
  call void @llvm.dbg.value(metadata i32 %21, metadata !2524, metadata !DIExpression()), !dbg !15227
  %22 = and i32 %21, %19, !dbg !15244
  %23 = icmp eq i32 %22, 0, !dbg !15246
  br i1 %23, label %42, label %24, !dbg !15247

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !15248
  %26 = sub i32 %10, %18, !dbg !15249
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !15250
  %28 = load i8*, i8** %27, align 4, !dbg !15250
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !15251
  %30 = load i32, i32* %29, align 4, !dbg !15251
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #26, !dbg !15252
  %32 = add i32 %31, %18, !dbg !15253
  call void @llvm.dbg.value(metadata i32 %32, metadata !2523, metadata !DIExpression()), !dbg !15227
  %33 = trunc i32 %21 to i8, !dbg !15254
  %34 = xor i8 %33, -1, !dbg !15254
  %35 = and i8 %17, %34, !dbg !15254
  call void @llvm.dbg.value(metadata i8 %35, metadata !2525, metadata !DIExpression()), !dbg !15227
  %36 = icmp eq i8 %35, 0, !dbg !15255
  br i1 %36, label %12, label %37, !dbg !15257

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !15258
  %39 = sub i32 %10, %32, !dbg !15260
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.256, i32 0, i32 0), i32 noundef 1) #26, !dbg !15261
  %41 = add i32 %40, %32, !dbg !15262
  call void @llvm.dbg.value(metadata i32 %41, metadata !2523, metadata !DIExpression()), !dbg !15227
  br label %42, !dbg !15263

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !15227
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !15227
  call void @llvm.dbg.value(metadata i8 %44, metadata !2525, metadata !DIExpression()), !dbg !15227
  call void @llvm.dbg.value(metadata i32 %43, metadata !2523, metadata !DIExpression()), !dbg !15227
  %45 = add i8 %16, 1, !dbg !15264
  call void @llvm.dbg.value(metadata i8 %45, metadata !2526, metadata !DIExpression()), !dbg !15233
  br label %15, !dbg !15236

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.257, i32 0, i32 0), %3 ], !dbg !15227
  ret i8* %47, !dbg !15265
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !15266 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15270, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata i32 %1, metadata !15271, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata i8* %2, metadata !15272, metadata !DIExpression()), !dbg !15275
  call void @llvm.dbg.value(metadata i32 %3, metadata !15273, metadata !DIExpression()), !dbg !15275
  %5 = icmp ult i32 %1, %3, !dbg !15276
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !15276
  call void @llvm.dbg.value(metadata i32 %6, metadata !15274, metadata !DIExpression()), !dbg !15275
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #27, !dbg !15277
  ret i32 %6, !dbg !15278
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15279 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15283, metadata !DIExpression()), !dbg !15284
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #27, !dbg !15285
  ret void, !dbg !15286
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* nocapture readnone %9) local_unnamed_addr #1 !dbg !15287 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15296, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15297, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 %2, metadata !15298, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15299, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i8* %4, metadata !15300, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i8* %5, metadata !15301, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i8* %6, metadata !15302, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 %7, metadata !15303, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i32 %8, metadata !15304, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.value(metadata i8* undef, metadata !15305, metadata !DIExpression()), !dbg !15307
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !15308
  tail call fastcc void @z_waitq_init(%union.anon* noundef nonnull %11) #26, !dbg !15309
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !15310
  tail call void @z_init_thread_base(%struct._thread_base* noundef %12, i32 noundef %7, i32 noundef 4, i32 noundef %8) #26, !dbg !15311
  %13 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #26, !dbg !15312
  call void @llvm.dbg.value(metadata i8* %13, metadata !15306, metadata !DIExpression()), !dbg !15307
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %13, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #27, !dbg !15313
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !15314
  store i8* null, i8** %14, align 4, !dbg !15315
  %15 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15316
  %16 = icmp eq %struct.k_thread* %15, null, !dbg !15316
  br i1 %16, label %20, label %17, !dbg !15318

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %15, i32 0, i32 6, !dbg !15319
  %19 = load %struct.k_heap*, %struct.k_heap** %18, align 8, !dbg !15319
  br label %20, !dbg !15320

20:                                               ; preds = %10, %17
  %21 = phi %struct.k_heap* [ %19, %17 ], [ null, %10 ], !dbg !15307
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, !dbg !15321
  store %struct.k_heap* %21, %struct.k_heap** %22, align 8, !dbg !15323
  ret i8* %13, !dbg !15324
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%union.anon* noundef %0) unnamed_addr #9 !dbg !15325 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !15330, metadata !DIExpression()), !dbg !15331
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !15332
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #26, !dbg !15333
  ret void, !dbg !15334
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 !dbg !15335 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15340, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i32 %1, metadata !15341, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i32 %2, metadata !15342, metadata !DIExpression()), !dbg !15344
  call void @llvm.dbg.value(metadata i32 %3, metadata !15343, metadata !DIExpression()), !dbg !15344
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !15345
  store %union.anon* null, %union.anon** %5, align 8, !dbg !15346
  %6 = trunc i32 %3 to i8, !dbg !15347
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !15348
  store i8 %6, i8* %7, align 4, !dbg !15349
  %8 = trunc i32 %2 to i8, !dbg !15350
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !15351
  store i8 %8, i8* %9, align 1, !dbg !15352
  %10 = trunc i32 %1 to i8, !dbg !15353
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !15354
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !15354
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !15354
  store i8 %10, i8* %13, align 2, !dbg !15355
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !15356
  store i8 0, i8* %14, align 1, !dbg !15357
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #26, !dbg !15358
  ret void, !dbg !15359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #9 !dbg !15360 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15364, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15365, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 %2, metadata !15366, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 0, metadata !15371, metadata !DIExpression()), !dbg !15372
  %4 = add i32 %2, 7, !dbg !15373
  %5 = and i32 %4, -8, !dbg !15373
  %6 = add i32 %5, 64, !dbg !15373
  call void @llvm.dbg.value(metadata i32 %6, metadata !15367, metadata !DIExpression()), !dbg !15372
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.267(%struct.z_thread_stack_element* noundef %1) #26, !dbg !15375
  call void @llvm.dbg.value(metadata i8* %7, metadata !15370, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 %5, metadata !15368, metadata !DIExpression()), !dbg !15372
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !15376
  call void @llvm.dbg.value(metadata i8* %8, metadata !15369, metadata !DIExpression()), !dbg !15372
  call void @llvm.dbg.value(metadata i32 0, metadata !15371, metadata !DIExpression()), !dbg !15372
  %9 = ptrtoint i8* %7 to i32, !dbg !15377
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 0, !dbg !15378
  store i32 %9, i32* %10, align 4, !dbg !15379
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 1, !dbg !15380
  store i32 %5, i32* %11, align 4, !dbg !15381
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 5, i32 2, !dbg !15382
  store i32 0, i32* %12, align 4, !dbg !15383
  call void @llvm.dbg.value(metadata i8* %8, metadata !15369, metadata !DIExpression()), !dbg !15372
  ret i8* %8, !dbg !15384
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.267(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !15385 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !15389, metadata !DIExpression()), !dbg !15390
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !15391
  ret i8* %2, !dbg !15392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15393 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !15398, metadata !DIExpression()), !dbg !15399
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !15400
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !15401
  ret void, !dbg !15402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15403 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15405, metadata !DIExpression()), !dbg !15406
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !15407
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #26, !dbg !15408
  ret void, !dbg !15409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !15410 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15414, metadata !DIExpression()), !dbg !15415
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15416
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !15417
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15418
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !15419
  ret void, !dbg !15420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !15421 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15426, metadata !DIExpression()), !dbg !15427
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15428
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15429
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15430
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15431
  ret void, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !15433 {
  %11 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %11, metadata !15450, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15441, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !15442, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i32 %2, metadata !15443, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !15444, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i8* %4, metadata !15445, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i8* %5, metadata !15446, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i8* %6, metadata !15447, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i32 %7, metadata !15448, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.value(metadata i32 %8, metadata !15449, metadata !DIExpression()), !dbg !15451
  %12 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* undef) #26, !dbg !15452
  %13 = icmp eq i64 %11, -1, !dbg !15453
  br i1 %13, label %15, label %14, !dbg !15455

14:                                               ; preds = %10
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #26, !dbg !15456
  br label %15, !dbg !15458

15:                                               ; preds = %14, %10
  ret %struct.k_thread* %0, !dbg !15459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15460 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15465, metadata !DIExpression()), !dbg !15466
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15464, metadata !DIExpression()), !dbg !15466
  %4 = icmp eq i64 %3, 0, !dbg !15467
  br i1 %4, label %5, label %6, !dbg !15469

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15470
  br label %7, !dbg !15472

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !15473
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !15475
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15476 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15480, metadata !DIExpression()), !dbg !15481
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !15482, !srcloc !15484
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #26, !dbg !15485
  ret void, !dbg !15486
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15487 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15490, metadata !DIExpression()), !dbg !15491
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15489, metadata !DIExpression()), !dbg !15491
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15492
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !15493
  ret void, !dbg !15494
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !15495 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15497, metadata !DIExpression()), !dbg !15517
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %2, label %28, !dbg !15518

1:                                                ; preds = %2
  tail call void @k_sched_lock() #27, !dbg !15519
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15515, metadata !DIExpression()), !dbg !15520
  br i1 icmp ult (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %30, label %29, !dbg !15521

2:                                                ; preds = %0, %2
  %3 = phi %struct._static_thread_data* [ %26, %2 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !15497, metadata !DIExpression()), !dbg !15517
  %4 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !15522
  %5 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15522
  %6 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !15525
  %7 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %6, align 4, !dbg !15525
  %8 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !15526
  %9 = load i32, i32* %8, align 4, !dbg !15526
  %10 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !15527
  %11 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %10, align 4, !dbg !15527
  %12 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !15528
  %13 = load i8*, i8** %12, align 4, !dbg !15528
  %14 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !15529
  %15 = load i8*, i8** %14, align 4, !dbg !15529
  %16 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !15530
  %17 = load i8*, i8** %16, align 4, !dbg !15530
  %18 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !15531
  %19 = load i32, i32* %18, align 4, !dbg !15531
  %20 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !15532
  %21 = load i32, i32* %20, align 4, !dbg !15532
  %22 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %5, %struct.z_thread_stack_element* noundef %7, i32 noundef %9, void (i8*, i8*, i8*)* noundef %11, i8* noundef %13, i8* noundef %15, i8* noundef %17, i32 noundef %19, i32 noundef %21, i8* undef) #26, !dbg !15533
  %23 = load %struct.k_thread*, %struct.k_thread** %4, align 4, !dbg !15534
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %23, i32 0, i32 2, !dbg !15535
  %25 = bitcast i8** %24 to %struct._static_thread_data**, !dbg !15536
  store %struct._static_thread_data* %3, %struct._static_thread_data** %25, align 4, !dbg !15536
  %26 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !15537
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %26, metadata !15497, metadata !DIExpression()), !dbg !15517
  %27 = icmp ult %struct._static_thread_data* %26, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15538
  br i1 %27, label %2, label %1, !dbg !15518, !llvm.loop !15540

28:                                               ; preds = %0
  tail call void @k_sched_lock() #27, !dbg !15519
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !15515, metadata !DIExpression()), !dbg !15520
  br label %29, !dbg !15521

29:                                               ; preds = %43, %28, %1
  tail call void @k_sched_unlock() #27, !dbg !15542
  ret void, !dbg !15543

30:                                               ; preds = %1, %43
  %31 = phi %struct._static_thread_data* [ %44, %43 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %1 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !15515, metadata !DIExpression()), !dbg !15520
  %32 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 9, !dbg !15544
  %33 = load i32, i32* %32, align 4, !dbg !15544
  %34 = icmp eq i32 %33, -1, !dbg !15548
  br i1 %34, label %43, label %35, !dbg !15549

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 0, i32 0, !dbg !15550
  %37 = load %struct.k_thread*, %struct.k_thread** %36, align 4, !dbg !15550
  %38 = icmp sgt i32 %33, 0, !dbg !15552
  %39 = select i1 %38, i32 %33, i32 0, !dbg !15552
  %40 = zext i32 %39 to i64, !dbg !15552
  %41 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %40) #26, !dbg !15552
  %42 = insertvalue [1 x i64] poison, i64 %41, 0, !dbg !15553
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %37, [1 x i64] %42) #26, !dbg !15553
  br label %43, !dbg !15554

43:                                               ; preds = %30, %35
  %44 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %31, i32 1, !dbg !15555
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %44, metadata !15515, metadata !DIExpression()), !dbg !15520
  %45 = icmp ult %struct._static_thread_data* %44, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !15556
  br i1 %45, label %30, label %29, !dbg !15521, !llvm.loop !15558
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !15560 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15565, metadata !DIExpression()), !dbg !15566
  call void @llvm.dbg.value(metadata i64 %0, metadata !15567, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i32 1000, metadata !15572, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i32 10000, metadata !15573, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i8 1, metadata !15574, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i8 0, metadata !15575, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i8 1, metadata !15576, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i8 0, metadata !15577, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i8 1, metadata !15578, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i8 0, metadata !15579, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i64 0, metadata !15580, metadata !DIExpression()), !dbg !15584
  call void @llvm.dbg.value(metadata i64 0, metadata !15580, metadata !DIExpression()), !dbg !15584
  %2 = mul i64 %0, 10, !dbg !15586
  ret i64 %2, !dbg !15592
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #12 !dbg !15593 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !15595, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i8* %1, metadata !15596, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i8* %2, metadata !15597, metadata !DIExpression()), !dbg !15599
  call void @llvm.dbg.value(metadata i8* %3, metadata !15598, metadata !DIExpression()), !dbg !15599
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15600
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !15601
  %7 = load i8, i8* %6, align 4, !dbg !15602
  %8 = or i8 %7, 4, !dbg !15602
  store i8 %8, i8* %6, align 4, !dbg !15602
  tail call void @z_thread_essential_clear() #26, !dbg !15603
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #29, !dbg !15604
  unreachable, !dbg !15604
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !15605 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15609, metadata !DIExpression()), !dbg !15610
  ret i32 -134, !dbg !15611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !15612 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15616, metadata !DIExpression()), !dbg !15618
  call void @llvm.dbg.value(metadata i32 %1, metadata !15617, metadata !DIExpression()), !dbg !15618
  ret i32 -134, !dbg !15619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct.k_spinlock* noundef readnone %1) local_unnamed_addr #3 !dbg !15620 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15627, metadata !DIExpression()), !dbg !15629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !15628, metadata !DIExpression()), !dbg !15629
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !15630
  %4 = icmp eq %struct.k_spinlock* %1, null
  %5 = or i1 %3, %4, !dbg !15632
  %6 = select i1 %5, i32 -22, i32 0, !dbg !15629
  ret i32 %6, !dbg !15633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct.k_spinlock* noundef readnone %0) local_unnamed_addr #3 !dbg !15634 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15638, metadata !DIExpression()), !dbg !15639
  %2 = icmp eq %struct.k_spinlock* %0, null, !dbg !15640
  %3 = select i1 %2, i32 -22, i32 0, !dbg !15639
  ret i32 %3, !dbg !15642
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !15643 {
  tail call void @sys_clock_idle_exit() #27, !dbg !15645
  ret void, !dbg !15646
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #12 !dbg !15647 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !15649, metadata !DIExpression()), !dbg !15652
  call void @llvm.dbg.value(metadata i8* %1, metadata !15650, metadata !DIExpression()), !dbg !15652
  call void @llvm.dbg.value(metadata i8* %2, metadata !15651, metadata !DIExpression()), !dbg !15652
  br label %4, !dbg !15653

4:                                                ; preds = %3, %4
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15654, !srcloc !15661
  call void @llvm.dbg.value(metadata i32 undef, metadata !15657, metadata !DIExpression()) #25, !dbg !15662
  call void @llvm.dbg.value(metadata i32 undef, metadata !15658, metadata !DIExpression()) #25, !dbg !15662
  tail call fastcc void @k_cpu_idle() #26, !dbg !15663
  br label %4, !dbg !15653, !llvm.loop !15664
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !15666 {
  tail call void @arch_cpu_idle() #27, !dbg !15667
  ret void, !dbg !15668
}

; Function Attrs: optsize
declare !dbg !15669 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !15670 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15674, metadata !DIExpression()), !dbg !15678
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15675, metadata !DIExpression()), !dbg !15678
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15679
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !15679
  %5 = load i8, i8* %4, align 2, !dbg !15679
  call void @llvm.dbg.value(metadata i8 %5, metadata !15676, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15678
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !15680
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !15680
  %8 = load i8, i8* %7, align 2, !dbg !15680
  call void @llvm.dbg.value(metadata i8 %8, metadata !15677, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !15678
  %9 = icmp eq i8 %8, %5, !dbg !15681
  %10 = sext i8 %5 to i32, !dbg !15683
  %11 = sext i8 %8 to i32, !dbg !15683
  %12 = sub nsw i32 %11, %10, !dbg !15683
  %13 = select i1 %9, i32 0, i32 %12, !dbg !15683
  ret i32 %13, !dbg !15684
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !15685 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15689, metadata !DIExpression()), !dbg !15690
  %2 = tail call fastcc i32 @slice_time() #26, !dbg !15691
  %3 = icmp eq i32 %2, 0, !dbg !15693
  br i1 %3, label %8, label %4, !dbg !15694

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #27, !dbg !15695
  %6 = add i32 %5, %2, !dbg !15697
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15698
  %7 = tail call fastcc i32 @slice_time() #26, !dbg !15699
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #27, !dbg !15700
  br label %8, !dbg !15701

8:                                                ; preds = %4, %1
  ret void, !dbg !15702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #10 !dbg !15703 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !15707, metadata !DIExpression()), !dbg !15709
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !15710
  call void @llvm.dbg.value(metadata i32 %1, metadata !15708, metadata !DIExpression()), !dbg !15709
  ret i32 %1, !dbg !15711
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15716, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 %1, metadata !15717, metadata !DIExpression()), !dbg !15725
  call void @llvm.dbg.value(metadata i32 0, metadata !15718, metadata !DIExpression()), !dbg !15726
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !15734
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15736, !srcloc !15742
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !15736
  call void @llvm.dbg.value(metadata i32 %4, metadata !15739, metadata !DIExpression()) #25, !dbg !15743
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !15743
  call void @llvm.dbg.value(metadata i32 %4, metadata !15733, metadata !DIExpression()) #25, !dbg !15734
  call void @llvm.dbg.value(metadata i32 %4, metadata !15724, metadata !DIExpression()), !dbg !15726
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()), !dbg !15726
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15744
  %5 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #26, !dbg !15747
  %6 = icmp sgt i32 %0, 0, !dbg !15748
  %7 = icmp sgt i32 %5, 2, !dbg !15750
  %8 = select i1 %7, i32 %5, i32 2, !dbg !15750
  %9 = select i1 %6, i32 %8, i32 %5, !dbg !15750
  store i32 %9, i32* @slice_ticks, align 4, !dbg !15751
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !15752
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15753
  call void @llvm.dbg.value(metadata i32 %4, metadata !15754, metadata !DIExpression()) #25, !dbg !15760
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !15760
  call void @llvm.dbg.value(metadata i32 %4, metadata !15762, metadata !DIExpression()) #25, !dbg !15765
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !15767, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !15718, metadata !DIExpression()), !dbg !15726
  call void @llvm.dbg.value(metadata i32 undef, metadata !15718, metadata !DIExpression()), !dbg !15726
  ret void, !dbg !15769
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !15770 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15772, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.value(metadata i32 %0, metadata !15774, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15789
  call void @llvm.dbg.value(metadata i32 1000, metadata !15777, metadata !DIExpression()), !dbg !15789
  call void @llvm.dbg.value(metadata i32 10000, metadata !15778, metadata !DIExpression()), !dbg !15789
  call void @llvm.dbg.value(metadata i8 1, metadata !15779, metadata !DIExpression()), !dbg !15789
  call void @llvm.dbg.value(metadata i1 true, metadata !15780, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15789
  call void @llvm.dbg.value(metadata i1 true, metadata !15781, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15789
  call void @llvm.dbg.value(metadata i8 0, metadata !15782, metadata !DIExpression()), !dbg !15789
  call void @llvm.dbg.value(metadata i1 true, metadata !15783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15789
  call void @llvm.dbg.value(metadata i1 false, metadata !15784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15789
  call void @llvm.dbg.value(metadata i64 0, metadata !15785, metadata !DIExpression()), !dbg !15789
  call void @llvm.dbg.value(metadata i64 0, metadata !15785, metadata !DIExpression()), !dbg !15789
  %2 = mul i32 %0, 10, !dbg !15791
  ret i32 %2, !dbg !15797
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !15798 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15800, metadata !DIExpression()), !dbg !15802
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !15803
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !15805, !srcloc !15742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !15805
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()) #25, !dbg !15807
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !15807
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #25, !dbg !15803
  call void @llvm.dbg.value(metadata i32 %3, metadata !15801, metadata !DIExpression()), !dbg !15802
  %4 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15808
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15810
  %6 = icmp eq %struct.k_thread* %4, %5, !dbg !15811
  br i1 %6, label %7, label %8, !dbg !15812

7:                                                ; preds = %1
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15813
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !15815
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !15815
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !15817
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !15819, !srcloc !15768
  br label %24, !dbg !15820

8:                                                ; preds = %1
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15821
  %9 = tail call fastcc i32 @slice_time() #26, !dbg !15822
  %10 = icmp eq i32 %9, 0, !dbg !15822
  br i1 %10, label %21, label %11, !dbg !15824

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %5) #26, !dbg !15825
  br i1 %12, label %13, label %21, !dbg !15826

13:                                               ; preds = %11
  %14 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15827
  %15 = icmp sgt i32 %14, %0, !dbg !15830
  br i1 %15, label %19, label %16, !dbg !15831

16:                                               ; preds = %13
  %17 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !15832
  %18 = tail call fastcc i32 @slice_expired_locked([1 x i32] %17) #26, !dbg !15832
  call void @llvm.dbg.value(metadata i32 %18, metadata !15801, metadata !DIExpression()), !dbg !15802
  br label %22, !dbg !15834

19:                                               ; preds = %13
  %20 = sub nsw i32 %14, %0, !dbg !15835
  store i32 %20, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15835
  br label %22

21:                                               ; preds = %11, %8
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !15837
  br label %22

22:                                               ; preds = %16, %19, %21
  %23 = phi i32 [ %18, %16 ], [ %3, %19 ], [ %3, %21 ], !dbg !15802
  call void @llvm.dbg.value(metadata i32 %23, metadata !15801, metadata !DIExpression()), !dbg !15802
  call void @llvm.dbg.value(metadata i32 %23, metadata !15754, metadata !DIExpression()) #25, !dbg !15839
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !15839
  call void @llvm.dbg.value(metadata i32 %23, metadata !15762, metadata !DIExpression()) #25, !dbg !15841
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #25, !dbg !15843, !srcloc !15768
  br label %24, !dbg !15844

24:                                               ; preds = %22, %7
  ret void, !dbg !15844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #10 !dbg !15845 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15849, metadata !DIExpression()), !dbg !15851
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #26, !dbg !15852
  %3 = icmp eq i32 %2, 0, !dbg !15852
  br i1 %3, label %16, label %4, !dbg !15853

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !15854
  br i1 %5, label %16, label %6, !dbg !15855

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15856
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !15856
  %9 = load i8, i8* %8, align 2, !dbg !15856
  %10 = sext i8 %9 to i32, !dbg !15857
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !15858
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %10, i32 noundef %11) #26, !dbg !15859
  br i1 %12, label %16, label %13, !dbg !15860

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #26, !dbg !15861
  %15 = xor i1 %14, true, !dbg !15862
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !15851
  call void @llvm.dbg.value(metadata i1 %17, metadata !15850, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15851
  ret i1 %17, !dbg !15863
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !15864 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15868, metadata !DIExpression()), !dbg !15870
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15871
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15869, metadata !DIExpression()), !dbg !15870
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #26, !dbg !15872
  br i1 %3, label %5, label %4, !dbg !15874

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #26, !dbg !15875
  br label %5, !dbg !15877

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !15868, metadata !DIExpression()), !dbg !15870
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !15878
  ret i32 %6, !dbg !15879
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15880 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15882, metadata !DIExpression()), !dbg !15884
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15885
  %3 = load i8, i8* %2, align 1, !dbg !15885
  call void @llvm.dbg.value(metadata i8 %3, metadata !15883, metadata !DIExpression()), !dbg !15884
  %4 = and i8 %3, 31, !dbg !15886
  %5 = icmp ne i8 %4, 0, !dbg !15887
  ret i1 %5, !dbg !15888
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15889 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15891, metadata !DIExpression()), !dbg !15892
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !15893
  br i1 %2, label %3, label %7, !dbg !15895

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()) #25, !dbg !15899
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15902
  %5 = load i8, i8* %4, align 1, !dbg !15903
  %6 = and i8 %5, 127, !dbg !15903
  store i8 %6, i8* %4, align 1, !dbg !15903
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15904, metadata !DIExpression()) #25, !dbg !15907
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !15911
  br label %7, !dbg !15912

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15913, metadata !DIExpression()) #25, !dbg !15916
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15918
  %9 = load i8, i8* %8, align 1, !dbg !15919
  %10 = or i8 %9, -128, !dbg !15919
  store i8 %10, i8* %8, align 1, !dbg !15919
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15920, metadata !DIExpression()) #25, !dbg !15923
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15927, metadata !DIExpression()) #25, !dbg !15935
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15933, metadata !DIExpression()) #25, !dbg !15935
  %11 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !15937
  call void @llvm.dbg.value(metadata %struct._dnode* %11, metadata !15934, metadata !DIExpression()) #25, !dbg !15935
  %12 = icmp eq %struct._dnode* %11, null, !dbg !15939
  br i1 %12, label %23, label %13, !dbg !15937

13:                                               ; preds = %7, %20
  %14 = phi %struct._dnode* [ %21, %20 ], [ %11, %7 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !15934, metadata !DIExpression()) #25, !dbg !15935
  %15 = bitcast %struct._dnode* %14 to %struct.k_thread*, !dbg !15941
  call void @llvm.dbg.value(metadata %struct.k_thread* %15, metadata !15934, metadata !DIExpression()) #25, !dbg !15935
  %16 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %15) #27, !dbg !15942
  %17 = icmp sgt i32 %16, 0, !dbg !15945
  br i1 %17, label %18, label %20, !dbg !15946

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15947
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %14, %struct._dnode* noundef %19) #27, !dbg !15949
  br label %25, !dbg !15950

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %14) #27, !dbg !15939
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !15934, metadata !DIExpression()) #25, !dbg !15935
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15939
  br i1 %22, label %23, label %13, !dbg !15937, !llvm.loop !15951

23:                                               ; preds = %20, %7
  %24 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !15953
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %24) #27, !dbg !15954
  br label %25, !dbg !15955

25:                                               ; preds = %18, %23
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15956
  %27 = icmp eq %struct.k_thread* %26, %0, !dbg !15957
  %28 = zext i1 %27 to i32, !dbg !15957
  tail call fastcc void @update_cache(i32 noundef %28) #26, !dbg !15958
  ret void, !dbg !15959
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !15960 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15962, metadata !DIExpression()), !dbg !15963
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0) #26, !dbg !15964
  ret i1 %2, !dbg !15965
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* nocapture noundef %1) local_unnamed_addr #11 !dbg !15966 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !15968, metadata !DIExpression()), !dbg !15970
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15969, metadata !DIExpression()), !dbg !15970
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !15971
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %3) #26, !dbg !15972
  ret void, !dbg !15973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #10 !dbg !15974 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15978, metadata !DIExpression()), !dbg !15979
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #26, !dbg !15980
  br i1 %2, label %6, label %3, !dbg !15980

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15981
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !15981
  br label %6, !dbg !15980

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !15980
  ret %struct._dnode* %7, !dbg !15982
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !15983 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15987, metadata !DIExpression()), !dbg !15991
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !15988, metadata !DIExpression()), !dbg !15991
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15992
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !15992
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !15989, metadata !DIExpression()), !dbg !15991
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !15993
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !15994
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !15995
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !15996
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !15997
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !15998
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !15999
  ret void, !dbg !16000
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16001 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16005, metadata !DIExpression()), !dbg !16007
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16006, metadata !DIExpression()), !dbg !16007
  %3 = icmp eq %struct._dnode* %1, null, !dbg !16008
  br i1 %3, label %6, label %4, !dbg !16009

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #26, !dbg !16010
  br label %6, !dbg !16009

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !16009
  ret %struct._dnode* %7, !dbg !16011
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !16012 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16016, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16017, metadata !DIExpression()), !dbg !16019
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16020
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16020
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16018, metadata !DIExpression()), !dbg !16019
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16021
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16022
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16023
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !16024
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16025
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16026
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16027
  ret void, !dbg !16028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !16029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16031, metadata !DIExpression()), !dbg !16033
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16034
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16041, metadata !DIExpression()) #25, !dbg !16043
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16044
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !16045
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !16045
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16032, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16046, metadata !DIExpression()) #25, !dbg !16052
  call void @llvm.dbg.value(metadata i32 %0, metadata !16051, metadata !DIExpression()) #25, !dbg !16052
  %6 = icmp eq i32 %0, 0, !dbg !16055
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16057
  br i1 %6, label %8, label %15, !dbg !16058

8:                                                ; preds = %1
  %9 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %7) #27, !dbg !16059
  br i1 %9, label %15, label %10, !dbg !16061

10:                                               ; preds = %8
  %11 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #27, !dbg !16062
  br i1 %11, label %15, label %12, !dbg !16064

12:                                               ; preds = %10
  %13 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %7) #27, !dbg !16065
  %14 = icmp eq i32 %13, 0, !dbg !16065
  br i1 %14, label %18, label %15, !dbg !16067

15:                                               ; preds = %1, %10, %8, %12
  %16 = icmp eq %struct.k_thread* %5, %7, !dbg !16068
  br i1 %16, label %18, label %17, !dbg !16071

17:                                               ; preds = %15
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #26, !dbg !16072
  br label %18, !dbg !16074

18:                                               ; preds = %12, %15, %17
  %19 = phi %struct.k_thread* [ %5, %17 ], [ %5, %15 ], [ %7, %12 ], !dbg !16057
  store %struct.k_thread* %19, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16057
  ret void, !dbg !16075
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #10 !dbg !16076 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16080, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16081, metadata !DIExpression()), !dbg !16083
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) #26, !dbg !16084
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16082, metadata !DIExpression()), !dbg !16083
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16081, metadata !DIExpression()), !dbg !16083
  ret %struct.k_thread* %3, !dbg !16085
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16086 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16088, metadata !DIExpression()), !dbg !16089
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16090
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #26, !dbg !16091
  %4 = xor i1 %3, true, !dbg !16092
  ret i1 %4, !dbg !16093
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16094 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16096, metadata !DIExpression()), !dbg !16097
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !16098
  %3 = load i16, i16* %2, align 2, !dbg !16098
  %4 = icmp ult i16 %3, 128, !dbg !16099
  %5 = zext i1 %4 to i32, !dbg !16099
  ret i32 %5, !dbg !16100
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16101 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16107, metadata !DIExpression()), !dbg !16108
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16109
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #26, !dbg !16110
  %4 = xor i1 %3, true, !dbg !16111
  ret i1 %4, !dbg !16112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16113 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16119, metadata !DIExpression()), !dbg !16120
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16121
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16121
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16122
  ret i1 %4, !dbg !16123
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #10 !dbg !16124 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16126, metadata !DIExpression()), !dbg !16128
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16127, metadata !DIExpression()), !dbg !16128
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16129
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16129
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !16130
  br i1 %5, label %9, label %6, !dbg !16131

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16132
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !16132
  br label %9, !dbg !16131

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !16131
  ret %struct._dnode* %10, !dbg !16133
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !16134 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16138, metadata !DIExpression()), !dbg !16139
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16140
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16140
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !16141
  ret i1 %4, !dbg !16142
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !16143 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16147, metadata !DIExpression()), !dbg !16150
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16151
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16151
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16148, metadata !DIExpression()), !dbg !16150
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16152
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16152
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16149, metadata !DIExpression()), !dbg !16150
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16153
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16154
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16155
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16156
  tail call fastcc void @sys_dnode_init.272(%struct._dnode* noundef %0) #26, !dbg !16157
  ret void, !dbg !16158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.272(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !16159 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16161, metadata !DIExpression()), !dbg !16162
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16163
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !16164
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16165
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !16166
  ret void, !dbg !16167
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16168 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16172, metadata !DIExpression()), !dbg !16174
  call void @llvm.dbg.value(metadata i32 128, metadata !16173, metadata !DIExpression()), !dbg !16174
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16175
  %3 = load i8, i8* %2, align 1, !dbg !16175
  %4 = icmp slt i8 %3, 0, !dbg !16176
  ret i1 %4, !dbg !16177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16182, metadata !DIExpression()), !dbg !16184
  call void @llvm.dbg.value(metadata i32 %1, metadata !16183, metadata !DIExpression()), !dbg !16184
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #26, !dbg !16185
  ret i1 %3, !dbg !16186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !16187 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16189, metadata !DIExpression()), !dbg !16190
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !16191
  ret i1 %2, !dbg !16192
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !16193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16195, metadata !DIExpression()), !dbg !16197
  call void @llvm.dbg.value(metadata i32 %1, metadata !16196, metadata !DIExpression()), !dbg !16197
  %3 = icmp slt i32 %0, %1, !dbg !16198
  ret i1 %3, !dbg !16199
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16202, metadata !DIExpression()), !dbg !16206
  call void @llvm.dbg.value(metadata i32 0, metadata !16203, metadata !DIExpression()), !dbg !16207
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16208
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16210, !srcloc !15742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16210
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()) #25, !dbg !16212
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16212
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #25, !dbg !16208
  call void @llvm.dbg.value(metadata i32 %3, metadata !16205, metadata !DIExpression()), !dbg !16207
  call void @llvm.dbg.value(metadata i32 undef, metadata !16203, metadata !DIExpression()), !dbg !16207
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16213
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16218
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !16220
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16222, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16203, metadata !DIExpression()), !dbg !16207
  call void @llvm.dbg.value(metadata i32 undef, metadata !16203, metadata !DIExpression()), !dbg !16207
  ret void, !dbg !16223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16224 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16226, metadata !DIExpression()), !dbg !16227
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16228
  br i1 %2, label %24, label %3, !dbg !16230

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16231
  br i1 %4, label %5, label %24, !dbg !16232

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15913, metadata !DIExpression()) #25, !dbg !16233
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16236
  %7 = load i8, i8* %6, align 1, !dbg !16237
  %8 = or i8 %7, -128, !dbg !16237
  store i8 %8, i8* %6, align 1, !dbg !16237
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15920, metadata !DIExpression()) #25, !dbg !16238
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15927, metadata !DIExpression()) #25, !dbg !16240
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15933, metadata !DIExpression()) #25, !dbg !16240
  %9 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16242
  call void @llvm.dbg.value(metadata %struct._dnode* %9, metadata !15934, metadata !DIExpression()) #25, !dbg !16240
  %10 = icmp eq %struct._dnode* %9, null, !dbg !16243
  br i1 %10, label %21, label %11, !dbg !16242

11:                                               ; preds = %5, %18
  %12 = phi %struct._dnode* [ %19, %18 ], [ %9, %5 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !15934, metadata !DIExpression()) #25, !dbg !16240
  %13 = bitcast %struct._dnode* %12 to %struct.k_thread*, !dbg !16244
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !15934, metadata !DIExpression()) #25, !dbg !16240
  %14 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %13) #27, !dbg !16245
  %15 = icmp sgt i32 %14, 0, !dbg !16246
  br i1 %15, label %16, label %18, !dbg !16247

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16248
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %12, %struct._dnode* noundef %17) #27, !dbg !16249
  br label %23, !dbg !16250

18:                                               ; preds = %11
  %19 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %12) #27, !dbg !16243
  call void @llvm.dbg.value(metadata %struct._dnode* %19, metadata !15934, metadata !DIExpression()) #25, !dbg !16240
  %20 = icmp eq %struct._dnode* %19, null, !dbg !16243
  br i1 %20, label %21, label %11, !dbg !16242, !llvm.loop !16251

21:                                               ; preds = %18, %5
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16253
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %22) #27, !dbg !16254
  br label %23, !dbg !16255

23:                                               ; preds = %16, %21
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16256
  br label %24, !dbg !16257

24:                                               ; preds = %23, %3, %1
  ret void, !dbg !16258
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16259 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16261, metadata !DIExpression()), !dbg !16262
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #26, !dbg !16263
  br i1 %2, label %6, label %3, !dbg !16264

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #26, !dbg !16265
  %5 = xor i1 %4, true, !dbg !16264
  br label %6, !dbg !16264

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !16266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16267 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16269, metadata !DIExpression()), !dbg !16273
  call void @llvm.dbg.value(metadata i32 0, metadata !16270, metadata !DIExpression()), !dbg !16274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16275
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16277, !srcloc !15742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16277
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()) #25, !dbg !16279
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16279
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #25, !dbg !16275
  call void @llvm.dbg.value(metadata i32 %3, metadata !16272, metadata !DIExpression()), !dbg !16274
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()), !dbg !16274
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #26, !dbg !16280
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16283
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16283
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !16285
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16287, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16270, metadata !DIExpression()), !dbg !16274
  call void @llvm.dbg.value(metadata i32 undef, metadata !16270, metadata !DIExpression()), !dbg !16274
  ret void, !dbg !16288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16289 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16291, metadata !DIExpression()), !dbg !16293
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16294
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16296, !srcloc !15742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16296
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()) #25, !dbg !16298
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16298
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #25, !dbg !16294
  call void @llvm.dbg.value(metadata i32 %3, metadata !16292, metadata !DIExpression()), !dbg !16293
  %4 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #26, !dbg !16299
  br i1 %4, label %5, label %6, !dbg !16301

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16302
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16302
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !16305
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16307, !srcloc !15768
  br label %8, !dbg !16308

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_started.277(%struct.k_thread* noundef %0) #26, !dbg !16309
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16310
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16311
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16311
  br label %8, !dbg !16312

8:                                                ; preds = %6, %5
  ret void, !dbg !16312
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16313 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16315, metadata !DIExpression()), !dbg !16316
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16317
  %3 = load i8, i8* %2, align 1, !dbg !16317
  %4 = and i8 %3, 4, !dbg !16318
  %5 = icmp eq i8 %4, 0, !dbg !16319
  ret i1 %5, !dbg !16320
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.277(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16321 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16323, metadata !DIExpression()), !dbg !16324
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16325
  %3 = load i8, i8* %2, align 1, !dbg !16326
  %4 = and i8 %3, -5, !dbg !16326
  store i8 %4, i8* %2, align 1, !dbg !16326
  ret void, !dbg !16327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !16328 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !16331, metadata !DIExpression()), !dbg !16332
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16330, metadata !DIExpression()), !dbg !16332
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #26, !dbg !16333
  br i1 %4, label %5, label %9, !dbg !16335

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #26, !dbg !16336
  br i1 %6, label %7, label %9, !dbg !16337

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 %3, metadata !16338, metadata !DIExpression()) #25, !dbg !16344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16343, metadata !DIExpression()) #25, !dbg !16344
  %8 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !16347
  br label %10, !dbg !16348

9:                                                ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16349
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16349
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !16352
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16354, !srcloc !15768
  br label %10

10:                                               ; preds = %9, %7
  ret void, !dbg !16355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !16356 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16360, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata i32 %0, metadata !16362, metadata !DIExpression()), !dbg !16367
  %2 = icmp eq i32 %0, 0, !dbg !16369
  br i1 %2, label %3, label %6, !dbg !16370

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !16371, !srcloc !16378
  call void @llvm.dbg.value(metadata i32 %4, metadata !16374, metadata !DIExpression()) #25, !dbg !16379
  %5 = icmp eq i32 %4, 0, !dbg !16380
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !16361
  ret i1 %7, !dbg !16381
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #10 !dbg !16382 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16385
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16384, metadata !DIExpression()), !dbg !16386
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16387
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !16388
  ret i1 %3, !dbg !16389
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !16390 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16392, metadata !DIExpression()), !dbg !16394
  %2 = tail call i32 @arch_swap(i32 noundef %0) #27, !dbg !16395
  call void @llvm.dbg.value(metadata i32 %2, metadata !16393, metadata !DIExpression()), !dbg !16394
  ret i32 %2, !dbg !16396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16397 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16399, metadata !DIExpression()), !dbg !16403
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16404
  call void @llvm.dbg.value(metadata i32 0, metadata !16400, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16406
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16408, !srcloc !15742
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !16408
  call void @llvm.dbg.value(metadata i32 %4, metadata !15739, metadata !DIExpression()) #25, !dbg !16410
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16410
  call void @llvm.dbg.value(metadata i32 %4, metadata !15733, metadata !DIExpression()) #25, !dbg !16406
  call void @llvm.dbg.value(metadata i32 %4, metadata !16402, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !16400, metadata !DIExpression()), !dbg !16405
  %5 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16411
  br i1 %5, label %6, label %10, !dbg !16415

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()) #25, !dbg !16416
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16419
  %8 = load i8, i8* %7, align 1, !dbg !16420
  %9 = and i8 %8, 127, !dbg !16420
  store i8 %9, i8* %7, align 1, !dbg !16420
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15904, metadata !DIExpression()) #25, !dbg !16421
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16423
  br label %10, !dbg !16424

10:                                               ; preds = %6, %1
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #26, !dbg !16425
  %11 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16426
  %12 = icmp eq %struct.k_thread* %11, %0, !dbg !16427
  %13 = zext i1 %12 to i32, !dbg !16427
  tail call fastcc void @update_cache(i32 noundef %13) #26, !dbg !16428
  call void @llvm.dbg.value(metadata i32 %4, metadata !15754, metadata !DIExpression()) #25, !dbg !16429
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16429
  call void @llvm.dbg.value(metadata i32 %4, metadata !15762, metadata !DIExpression()) #25, !dbg !16431
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !16433, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16400, metadata !DIExpression()), !dbg !16405
  call void @llvm.dbg.value(metadata i32 undef, metadata !16400, metadata !DIExpression()), !dbg !16405
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16434
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !16436
  br i1 %15, label %16, label %17, !dbg !16437

16:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16438
  br label %17, !dbg !16440

17:                                               ; preds = %16, %10
  ret void, !dbg !16441
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16442 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16444, metadata !DIExpression()), !dbg !16445
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16446
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #27, !dbg !16447
  ret i32 %3, !dbg !16448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16449 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16451, metadata !DIExpression()), !dbg !16452
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16453
  %3 = load i8, i8* %2, align 1, !dbg !16454
  %4 = or i8 %3, 16, !dbg !16454
  store i8 %4, i8* %2, align 1, !dbg !16454
  ret void, !dbg !16455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !16456 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16457, !srcloc !15742
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16457
  call void @llvm.dbg.value(metadata i32 %2, metadata !15739, metadata !DIExpression()) #25, !dbg !16459
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16459
  tail call void @z_reschedule_irqlock(i32 noundef %2) #26, !dbg !16460
  ret void, !dbg !16461
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !16462 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !16464, metadata !DIExpression()), !dbg !16465
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #26, !dbg !16466
  br i1 %2, label %3, label %5, !dbg !16468

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16469
  br label %6, !dbg !16471

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !15762, metadata !DIExpression()) #25, !dbg !16472
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #25, !dbg !16475, !srcloc !15768
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !16476
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16477 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16479, metadata !DIExpression()), !dbg !16481
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16482
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16484, !srcloc !15742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16484
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()) #25, !dbg !16486
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16486
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #25, !dbg !16482
  call void @llvm.dbg.value(metadata i32 %3, metadata !16480, metadata !DIExpression()), !dbg !16481
  %4 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #26, !dbg !16487
  br i1 %4, label %6, label %5, !dbg !16489

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16490
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16490
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !16493
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16495, !srcloc !15768
  br label %8, !dbg !16496

6:                                                ; preds = %1
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !16497
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #26, !dbg !16498
  %7 = insertvalue [1 x i32] poison, i32 %3, 0, !dbg !16499
  tail call void @z_reschedule(%struct.k_spinlock* undef, [1 x i32] %7) #26, !dbg !16499
  br label %8, !dbg !16500

8:                                                ; preds = %6, %5
  ret void, !dbg !16500
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !16501 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16503, metadata !DIExpression()), !dbg !16504
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16505
  %3 = load i8, i8* %2, align 1, !dbg !16505
  %4 = and i8 %3, 16, !dbg !16506
  %5 = icmp ne i8 %4, 0, !dbg !16507
  ret i1 %5, !dbg !16508
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16509 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16511, metadata !DIExpression()), !dbg !16512
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16513
  %3 = load i8, i8* %2, align 1, !dbg !16514
  %4 = and i8 %3, -17, !dbg !16514
  store i8 %4, i8* %2, align 1, !dbg !16514
  ret void, !dbg !16515
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16516 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16526, metadata !DIExpression()), !dbg !16530
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16524, metadata !DIExpression()), !dbg !16530
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16525, metadata !DIExpression()), !dbg !16530
  call void @llvm.dbg.value(metadata i32 0, metadata !16527, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16532
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16534, !srcloc !15742
  %5 = extractvalue { i32, i32 } %4, 0, !dbg !16534
  call void @llvm.dbg.value(metadata i32 %5, metadata !15739, metadata !DIExpression()) #25, !dbg !16536
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16536
  call void @llvm.dbg.value(metadata i32 %5, metadata !15733, metadata !DIExpression()) #25, !dbg !16532
  call void @llvm.dbg.value(metadata i32 %5, metadata !16529, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16527, metadata !DIExpression()), !dbg !16531
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16537
  call void @llvm.dbg.value(metadata i32 %5, metadata !15754, metadata !DIExpression()) #25, !dbg !16540
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16540
  call void @llvm.dbg.value(metadata i32 %5, metadata !15762, metadata !DIExpression()) #25, !dbg !16542
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %5) #25, !dbg !16544, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16527, metadata !DIExpression()), !dbg !16531
  call void @llvm.dbg.value(metadata i32 undef, metadata !16527, metadata !DIExpression()), !dbg !16531
  ret void, !dbg !16545
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !16546 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16550, metadata !DIExpression()), !dbg !16551
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16548, metadata !DIExpression()), !dbg !16551
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16549, metadata !DIExpression()), !dbg !16551
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) #26, !dbg !16552
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #26, !dbg !16553
  ret void, !dbg !16554
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %union.anon* noundef %1) unnamed_addr #1 !dbg !16555 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16559, metadata !DIExpression()), !dbg !16561
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16560, metadata !DIExpression()), !dbg !16561
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #26, !dbg !16562
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #26, !dbg !16563
  %3 = icmp eq %union.anon* %1, null, !dbg !16564
  br i1 %3, label %21, label %4, !dbg !16566

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16567
  store %union.anon* %1, %union.anon** %5, align 8, !dbg !16569
  %6 = getelementptr inbounds %union.anon, %union.anon* %1, i32 0, i32 0, !dbg !16570
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !15927, metadata !DIExpression()) #25, !dbg !16571
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15933, metadata !DIExpression()) #25, !dbg !16571
  %7 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef nonnull %6) #27, !dbg !16573
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15934, metadata !DIExpression()) #25, !dbg !16571
  %8 = icmp eq %struct._dnode* %7, null, !dbg !16574
  br i1 %8, label %19, label %9, !dbg !16573

9:                                                ; preds = %4, %16
  %10 = phi %struct._dnode* [ %17, %16 ], [ %7, %4 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15934, metadata !DIExpression()) #25, !dbg !16571
  %11 = bitcast %struct._dnode* %10 to %struct.k_thread*, !dbg !16575
  call void @llvm.dbg.value(metadata %struct.k_thread* %11, metadata !15934, metadata !DIExpression()) #25, !dbg !16571
  %12 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %11) #27, !dbg !16576
  %13 = icmp sgt i32 %12, 0, !dbg !16577
  br i1 %13, label %14, label %16, !dbg !16578

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16579
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %10, %struct._dnode* noundef %15) #27, !dbg !16580
  br label %21, !dbg !16581

16:                                               ; preds = %9
  %17 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %10) #27, !dbg !16574
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !15934, metadata !DIExpression()) #25, !dbg !16571
  %18 = icmp eq %struct._dnode* %17, null, !dbg !16574
  br i1 %18, label %19, label %9, !dbg !16573, !llvm.loop !16582

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !16584
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %20) #27, !dbg !16585
  br label %21, !dbg !16586

21:                                               ; preds = %19, %14, %2
  ret void, !dbg !16587
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16588 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !16593, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16592, metadata !DIExpression()), !dbg !16594
  %4 = icmp eq i64 %3, -1, !dbg !16595
  br i1 %4, label %6, label %5, !dbg !16597

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.278(%struct.k_thread* noundef %0, [1 x i64] %1) #26, !dbg !16598
  br label %6, !dbg !16600

6:                                                ; preds = %5, %2
  ret void, !dbg !16601
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.278(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !16602 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16605, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16604, metadata !DIExpression()), !dbg !16606
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !16607
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #27, !dbg !16608
  ret void, !dbg !16609
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !16610 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16612, metadata !DIExpression()), !dbg !16620
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !16621
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !16621
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16613, metadata !DIExpression()), !dbg !16620
  call void @llvm.dbg.value(metadata i32 0, metadata !16614, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16623
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16625, !srcloc !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()) #25, !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16627
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #25, !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !16616, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata i32 undef, metadata !16614, metadata !DIExpression()), !dbg !16622
  %5 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !16628
  %6 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %5, i32 0, i32 3, !dbg !16629
  %7 = load i8, i8* %6, align 1, !dbg !16629
  %8 = and i8 %7, 40, !dbg !16630
  %9 = icmp eq i8 %8, 0, !dbg !16630
  call void @llvm.dbg.value(metadata i1 %9, metadata !16617, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16631
  br i1 %9, label %10, label %17, !dbg !16632

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !16633
  %12 = bitcast void (%struct._timeout*)** %11 to %union.anon**, !dbg !16633
  %13 = load %union.anon*, %union.anon** %12, align 8, !dbg !16633
  %14 = icmp eq %union.anon* %13, null, !dbg !16637
  br i1 %14, label %16, label %15, !dbg !16638

15:                                               ; preds = %10
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #26, !dbg !16639
  br label %16, !dbg !16641

16:                                               ; preds = %15, %10
  tail call fastcc void @z_mark_thread_as_started.277(%struct.k_thread* noundef nonnull %3) #26, !dbg !16642
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #26, !dbg !16643
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #26, !dbg !16644
  br label %17, !dbg !16645

17:                                               ; preds = %16, %1
  %18 = extractvalue { i32, i32 } %4, 0, !dbg !16625
  call void @llvm.dbg.value(metadata i32 %18, metadata !15739, metadata !DIExpression()) #25, !dbg !16627
  call void @llvm.dbg.value(metadata i32 %18, metadata !15733, metadata !DIExpression()) #25, !dbg !16623
  call void @llvm.dbg.value(metadata i32 %18, metadata !16616, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16646
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16646
  call void @llvm.dbg.value(metadata i32 undef, metadata !15762, metadata !DIExpression()) #25, !dbg !16648
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #25, !dbg !16650, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16614, metadata !DIExpression()), !dbg !16622
  call void @llvm.dbg.value(metadata i32 undef, metadata !16614, metadata !DIExpression()), !dbg !16622
  ret void, !dbg !16651
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16652 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16654, metadata !DIExpression()), !dbg !16655
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #26, !dbg !16656
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #26, !dbg !16657
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16658
  store %union.anon* null, %union.anon** %2, align 8, !dbg !16659
  ret void, !dbg !16660
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16661 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16663, metadata !DIExpression()), !dbg !16664
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16665
  %3 = load i8, i8* %2, align 1, !dbg !16666
  %4 = and i8 %3, -3, !dbg !16666
  store i8 %4, i8* %2, align 1, !dbg !16666
  ret void, !dbg !16667
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16668 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16670, metadata !DIExpression()), !dbg !16671
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #26, !dbg !16672
  br i1 %2, label %3, label %7, !dbg !16674

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()) #25, !dbg !16675
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16678
  %5 = load i8, i8* %4, align 1, !dbg !16679
  %6 = and i8 %5, 127, !dbg !16679
  store i8 %6, i8* %4, align 1, !dbg !16679
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15904, metadata !DIExpression()) #25, !dbg !16680
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16682
  br label %7, !dbg !16683

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16684
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !16685
  %10 = zext i1 %9 to i32, !dbg !16685
  tail call fastcc void @update_cache(i32 noundef %10) #26, !dbg !16686
  ret void, !dbg !16687
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #11 !dbg !16688 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16690, metadata !DIExpression()), !dbg !16691
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16692
  %3 = load i8, i8* %2, align 1, !dbg !16693
  %4 = or i8 %3, 2, !dbg !16693
  store i8 %4, i8* %2, align 1, !dbg !16693
  ret void, !dbg !16694
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* nocapture noundef %0) local_unnamed_addr #24 !dbg !16695 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16697, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.value(metadata i32 0, metadata !16698, metadata !DIExpression()), !dbg !16702
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16703
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16705, !srcloc !15742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16705
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()) #25, !dbg !16707
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16707
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #25, !dbg !16703
  call void @llvm.dbg.value(metadata i32 %3, metadata !16700, metadata !DIExpression()), !dbg !16702
  call void @llvm.dbg.value(metadata i32 undef, metadata !16698, metadata !DIExpression()), !dbg !16702
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #26, !dbg !16708
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16711
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16711
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !16713
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16715, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16698, metadata !DIExpression()), !dbg !16702
  call void @llvm.dbg.value(metadata i32 undef, metadata !16698, metadata !DIExpression()), !dbg !16702
  ret void, !dbg !16716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %union.anon* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16717 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16723, metadata !DIExpression()), !dbg !16728
  call void @llvm.dbg.value(metadata i32 %0, metadata !16721, metadata !DIExpression()), !dbg !16728
  call void @llvm.dbg.value(metadata %union.anon* %1, metadata !16722, metadata !DIExpression()), !dbg !16728
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16729
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %union.anon* noundef %1, [1 x i64] %2) #26, !dbg !16730
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16731
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16732
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #26, !dbg !16733
  call void @llvm.dbg.value(metadata i32 %6, metadata !16724, metadata !DIExpression()), !dbg !16728
  call void @llvm.dbg.value(metadata i32 0, metadata !16725, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16735
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16737, !srcloc !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()) #25, !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16739
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #25, !dbg !16735
  call void @llvm.dbg.value(metadata i32 undef, metadata !16727, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !16725, metadata !DIExpression()), !dbg !16734
  %8 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !16740
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16744
  %10 = icmp eq %struct.k_thread* %8, %9, !dbg !16745
  br i1 %10, label %11, label %12, !dbg !16746

11:                                               ; preds = %3
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !16747
  br label %12, !dbg !16749

12:                                               ; preds = %3, %11
  %13 = extractvalue { i32, i32 } %7, 0, !dbg !16737
  call void @llvm.dbg.value(metadata i32 %13, metadata !15739, metadata !DIExpression()) #25, !dbg !16739
  call void @llvm.dbg.value(metadata i32 %13, metadata !15733, metadata !DIExpression()) #25, !dbg !16735
  call void @llvm.dbg.value(metadata i32 %13, metadata !16727, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16750
  call void @llvm.dbg.value(metadata i32 undef, metadata !15762, metadata !DIExpression()) #25, !dbg !16752
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #25, !dbg !16754, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16725, metadata !DIExpression()), !dbg !16734
  call void @llvm.dbg.value(metadata i32 undef, metadata !16725, metadata !DIExpression()), !dbg !16734
  ret i32 %6, !dbg !16755
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* nocapture readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !16756 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16761, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata i64 undef, metadata !16763, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16760, metadata !DIExpression()), !dbg !16764
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !16762, metadata !DIExpression()), !dbg !16764
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16765
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !16766
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16767
  %6 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16769, !srcloc !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()) #25, !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16771
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #25, !dbg !16767
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16772
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %7, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !16773
  %8 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %8, metadata !16338, metadata !DIExpression()) #25, !dbg !16774
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16343, metadata !DIExpression()) #25, !dbg !16774
  %9 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %8) #27, !dbg !16776
  ret i32 %9, !dbg !16777
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16778 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16782, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16783, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.value(metadata i32 0, metadata !16784, metadata !DIExpression()), !dbg !16788
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16789
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16791, !srcloc !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()) #25, !dbg !16793
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16793
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 undef, metadata !16786, metadata !DIExpression()), !dbg !16788
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16783, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.value(metadata i32 undef, metadata !16784, metadata !DIExpression()), !dbg !16788
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16794
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16783, metadata !DIExpression()), !dbg !16787
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16797
  br i1 %5, label %7, label %6, !dbg !16799

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16800
  br label %7, !dbg !16802

7:                                                ; preds = %1, %6
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !16791
  call void @llvm.dbg.value(metadata i32 %8, metadata !15739, metadata !DIExpression()) #25, !dbg !16793
  call void @llvm.dbg.value(metadata i32 %8, metadata !15733, metadata !DIExpression()) #25, !dbg !16789
  call void @llvm.dbg.value(metadata i32 %8, metadata !16786, metadata !DIExpression()), !dbg !16788
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16803
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16803
  call void @llvm.dbg.value(metadata i32 undef, metadata !15762, metadata !DIExpression()) #25, !dbg !16805
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !16807, !srcloc !15768
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16783, metadata !DIExpression()), !dbg !16787
  call void @llvm.dbg.value(metadata i32 undef, metadata !16784, metadata !DIExpression()), !dbg !16788
  ret %struct.k_thread* %4, !dbg !16808
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !16809 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !16811, metadata !DIExpression()), !dbg !16816
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16812, metadata !DIExpression()), !dbg !16816
  call void @llvm.dbg.value(metadata i32 0, metadata !16813, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16818
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16820, !srcloc !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()) #25, !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16822
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #25, !dbg !16818
  call void @llvm.dbg.value(metadata i32 undef, metadata !16815, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !16812, metadata !DIExpression()), !dbg !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16813, metadata !DIExpression()), !dbg !16817
  %3 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %4 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %3) #26, !dbg !16823
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16812, metadata !DIExpression()), !dbg !16816
  %5 = icmp eq %struct.k_thread* %4, null, !dbg !16826
  br i1 %5, label %8, label %6, !dbg !16828

6:                                                ; preds = %1
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16829
  %7 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %4) #26, !dbg !16831
  br label %8, !dbg !16832

8:                                                ; preds = %1, %6
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !16820
  call void @llvm.dbg.value(metadata i32 %9, metadata !15739, metadata !DIExpression()) #25, !dbg !16822
  call void @llvm.dbg.value(metadata i32 %9, metadata !15733, metadata !DIExpression()) #25, !dbg !16818
  call void @llvm.dbg.value(metadata i32 %9, metadata !16815, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16833
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16833
  call void @llvm.dbg.value(metadata i32 undef, metadata !15762, metadata !DIExpression()) #25, !dbg !16835
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !16837, !srcloc !15768
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16812, metadata !DIExpression()), !dbg !16816
  call void @llvm.dbg.value(metadata i32 undef, metadata !16813, metadata !DIExpression()), !dbg !16817
  ret %struct.k_thread* %4, !dbg !16838
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16839 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16841, metadata !DIExpression()), !dbg !16842
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16697, metadata !DIExpression()) #25, !dbg !16843
  call void @llvm.dbg.value(metadata i32 0, metadata !16698, metadata !DIExpression()) #25, !dbg !16845
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16846
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16848, !srcloc !15742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !16848
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()) #25, !dbg !16850
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16850
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #25, !dbg !16846
  call void @llvm.dbg.value(metadata i32 %3, metadata !16700, metadata !DIExpression()) #25, !dbg !16845
  call void @llvm.dbg.value(metadata i32 undef, metadata !16698, metadata !DIExpression()) #25, !dbg !16845
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #27, !dbg !16851
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !16852
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16852
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !16854
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !16856, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16698, metadata !DIExpression()) #25, !dbg !16845
  call void @llvm.dbg.value(metadata i32 undef, metadata !16698, metadata !DIExpression()) #25, !dbg !16845
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !16857
  ret void, !dbg !16858
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16859 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16861, metadata !DIExpression()), !dbg !16867
  call void @llvm.dbg.value(metadata i32 %1, metadata !16862, metadata !DIExpression()), !dbg !16867
  call void @llvm.dbg.value(metadata i8 0, metadata !16863, metadata !DIExpression()), !dbg !16867
  call void @llvm.dbg.value(metadata i32 0, metadata !16864, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16869
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16871, !srcloc !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()) #25, !dbg !16873
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16873
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #25, !dbg !16869
  call void @llvm.dbg.value(metadata i32 undef, metadata !16866, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata i8 poison, metadata !16863, metadata !DIExpression()), !dbg !16867
  call void @llvm.dbg.value(metadata i32 undef, metadata !16864, metadata !DIExpression()), !dbg !16868
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %6 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #26, !dbg !16874
  call void @llvm.dbg.value(metadata i1 %6, metadata !16863, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16867
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %8 = bitcast %union.anon.2* %7 to i8*
  %9 = trunc i32 %1 to i8
  br i1 %6, label %10, label %28, !dbg !16877

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()) #25, !dbg !16878
  %11 = load i8, i8* %4, align 1, !dbg !16884
  %12 = and i8 %11, 127, !dbg !16884
  store i8 %12, i8* %4, align 1, !dbg !16884
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15904, metadata !DIExpression()) #25, !dbg !16885
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #27, !dbg !16887
  store i8 %9, i8* %8, align 2, !dbg !16888
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15913, metadata !DIExpression()) #25, !dbg !16889
  %13 = load i8, i8* %4, align 1, !dbg !16891
  %14 = or i8 %13, -128, !dbg !16891
  store i8 %14, i8* %4, align 1, !dbg !16891
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15920, metadata !DIExpression()) #25, !dbg !16892
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15927, metadata !DIExpression()) #25, !dbg !16894
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15933, metadata !DIExpression()) #25, !dbg !16894
  %15 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !16896
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !15934, metadata !DIExpression()) #25, !dbg !16894
  %16 = icmp eq %struct._dnode* %15, null, !dbg !16897
  br i1 %16, label %26, label %17, !dbg !16896

17:                                               ; preds = %10, %23
  %18 = phi %struct._dnode* [ %24, %23 ], [ %15, %10 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %18, metadata !15934, metadata !DIExpression()) #25, !dbg !16894
  %19 = bitcast %struct._dnode* %18 to %struct.k_thread*, !dbg !16898
  call void @llvm.dbg.value(metadata %struct.k_thread* %19, metadata !15934, metadata !DIExpression()) #25, !dbg !16894
  %20 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %19) #27, !dbg !16899
  %21 = icmp sgt i32 %20, 0, !dbg !16900
  br i1 %21, label %22, label %23, !dbg !16901

22:                                               ; preds = %17
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %18, %struct._dnode* noundef %5) #27, !dbg !16902
  br label %27, !dbg !16903

23:                                               ; preds = %17
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %18) #27, !dbg !16897
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !15934, metadata !DIExpression()) #25, !dbg !16894
  %25 = icmp eq %struct._dnode* %24, null, !dbg !16897
  br i1 %25, label %26, label %17, !dbg !16896, !llvm.loop !16904

26:                                               ; preds = %23, %10
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %5) #27, !dbg !16906
  br label %27, !dbg !16907

27:                                               ; preds = %22, %26
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !16908
  br label %29, !dbg !16909

28:                                               ; preds = %2
  store i8 %9, i8* %8, align 2, !dbg !16910
  br label %29

29:                                               ; preds = %27, %28
  %30 = extractvalue { i32, i32 } %3, 0, !dbg !16871
  call void @llvm.dbg.value(metadata i32 %30, metadata !15739, metadata !DIExpression()) #25, !dbg !16873
  call void @llvm.dbg.value(metadata i32 %30, metadata !15733, metadata !DIExpression()) #25, !dbg !16869
  call void @llvm.dbg.value(metadata i32 %30, metadata !16866, metadata !DIExpression()), !dbg !16868
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !16912
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16912
  call void @llvm.dbg.value(metadata i32 undef, metadata !15762, metadata !DIExpression()) #25, !dbg !16914
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %30) #25, !dbg !16916, !srcloc !15768
  call void @llvm.dbg.value(metadata i8 poison, metadata !16863, metadata !DIExpression()), !dbg !16867
  call void @llvm.dbg.value(metadata i32 undef, metadata !16864, metadata !DIExpression()), !dbg !16868
  ret i1 %6, !dbg !16917
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !16918 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16922, metadata !DIExpression()), !dbg !16925
  call void @llvm.dbg.value(metadata i32 %1, metadata !16923, metadata !DIExpression()), !dbg !16925
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !16926
  call void @llvm.dbg.value(metadata i1 %3, metadata !16924, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16925
  br i1 %3, label %4, label %12, !dbg !16927

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16929
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !16930
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !16930
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !16930
  %9 = load i8, i8* %8, align 1, !dbg !16930
  %10 = icmp eq i8 %9, 0, !dbg !16931
  br i1 %10, label %11, label %12, !dbg !16932

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16933
  br label %12, !dbg !16935

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !16936
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !16937 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16939, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16943
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16945, !srcloc !15742
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16945
  call void @llvm.dbg.value(metadata i32 %2, metadata !15739, metadata !DIExpression()) #25, !dbg !16947
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16947
  call void @llvm.dbg.value(metadata i32 %2, metadata !15733, metadata !DIExpression()) #25, !dbg !16943
  call void @llvm.dbg.value(metadata i32 %2, metadata !16941, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16939, metadata !DIExpression()), !dbg !16942
  tail call fastcc void @z_sched_lock() #26, !dbg !16948
  call void @llvm.dbg.value(metadata i32 %2, metadata !15754, metadata !DIExpression()) #25, !dbg !16951
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16951
  call void @llvm.dbg.value(metadata i32 %2, metadata !15762, metadata !DIExpression()) #25, !dbg !16953
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16955, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16939, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16939, metadata !DIExpression()), !dbg !16942
  ret void, !dbg !16956
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !16957 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16958
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !16959
  %3 = bitcast %union.anon.2* %2 to %struct.device_state*, !dbg !16959
  %4 = getelementptr inbounds %struct.device_state, %struct.device_state* %3, i32 0, i32 1, !dbg !16959
  %5 = load i8, i8* %4, align 1, !dbg !16960
  %6 = add i8 %5, -1, !dbg !16960
  store i8 %6, i8* %4, align 1, !dbg !16960
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !16961, !srcloc !16963
  ret void, !dbg !16964
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !16965 {
  call void @llvm.dbg.value(metadata i32 0, metadata !16967, metadata !DIExpression()), !dbg !16970
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !16971
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !16973, !srcloc !15742
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !16973
  call void @llvm.dbg.value(metadata i32 %2, metadata !15739, metadata !DIExpression()) #25, !dbg !16975
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !16975
  call void @llvm.dbg.value(metadata i32 %2, metadata !15733, metadata !DIExpression()) #25, !dbg !16971
  call void @llvm.dbg.value(metadata i32 %2, metadata !16969, metadata !DIExpression()), !dbg !16970
  call void @llvm.dbg.value(metadata i32 undef, metadata !16967, metadata !DIExpression()), !dbg !16970
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16976
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 0, i32 4, !dbg !16979
  %5 = bitcast %union.anon.2* %4 to %struct.device_state*, !dbg !16979
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !16979
  %7 = load i8, i8* %6, align 1, !dbg !16980
  %8 = add i8 %7, 1, !dbg !16980
  store i8 %8, i8* %6, align 1, !dbg !16980
  tail call fastcc void @update_cache(i32 noundef 0) #26, !dbg !16981
  call void @llvm.dbg.value(metadata i32 %2, metadata !15754, metadata !DIExpression()) #25, !dbg !16982
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !16982
  call void @llvm.dbg.value(metadata i32 %2, metadata !15762, metadata !DIExpression()) #25, !dbg !16984
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !16986, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 1, metadata !16967, metadata !DIExpression()), !dbg !16970
  call void @llvm.dbg.value(metadata i32 undef, metadata !16967, metadata !DIExpression()), !dbg !16970
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !16987
  ret void, !dbg !16988
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #10 !dbg !16989 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !16990
  ret %struct.k_thread* %1, !dbg !16991
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #10 !dbg !16992 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !16996, metadata !DIExpression()), !dbg !17001
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !16997, metadata !DIExpression()), !dbg !17001
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !17002
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !16998, metadata !DIExpression()), !dbg !17001
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !17003
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !16999, metadata !DIExpression()), !dbg !17001
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #26, !dbg !17004
  call void @llvm.dbg.value(metadata i32 %5, metadata !17000, metadata !DIExpression()), !dbg !17001
  %6 = icmp sgt i32 %5, 0, !dbg !17005
  br i1 %6, label %17, label %7, !dbg !17007

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !17008
  br i1 %8, label %17, label %9, !dbg !17010

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !17011
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !17011
  %12 = load i32, i32* %11, align 8, !dbg !17011
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !17013
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !17013
  %15 = load i32, i32* %14, align 8, !dbg !17013
  %16 = icmp ult i32 %12, %15, !dbg !17014
  br label %17, !dbg !17015

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !17016
  ret i1 %18, !dbg !17017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17018 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17035, metadata !DIExpression()), !dbg !17050
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17036, metadata !DIExpression()), !dbg !17050
  %4 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17051
  %5 = load i32, i32* %4, align 4, !dbg !17052
  %6 = add nsw i32 %5, 1, !dbg !17052
  store i32 %6, i32* %4, align 4, !dbg !17052
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !17053
  store i32 %5, i32* %7, align 8, !dbg !17054
  %8 = load i32, i32* %4, align 4, !dbg !17055
  %9 = icmp eq i32 %8, 0, !dbg !17056
  br i1 %9, label %10, label %32, !dbg !17057

10:                                               ; preds = %2
  %11 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !17058
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17058
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !17038, metadata !DIExpression()), !dbg !17058
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17058
  %13 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !17058
  %14 = load i32, i32* %13, align 4, !dbg !17058
  %15 = shl i32 %14, 2, !dbg !17058
  %16 = alloca i8, i32 %15, align 8, !dbg !17058
  %17 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !17058
  store i8* %16, i8** %17, align 4, !dbg !17058
  %18 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !17058
  %19 = alloca i8, i32 %14, align 8, !dbg !17058
  store i8* %19, i8** %18, align 4, !dbg !17058
  %20 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !17058
  store i32 -1, i32* %20, align 4, !dbg !17058
  %21 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17059
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17047, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata %struct.rbnode* %21, metadata !17037, metadata !DIExpression()), !dbg !17050
  %22 = icmp eq %struct.rbnode* %21, null, !dbg !17061
  br i1 %22, label %23, label %24, !dbg !17058

23:                                               ; preds = %24, %10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %11) #25, !dbg !17061
  br label %32, !dbg !17062

24:                                               ; preds = %10, %24
  %25 = phi %struct.rbnode* [ %30, %24 ], [ %21, %10 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %25, metadata !17037, metadata !DIExpression()), !dbg !17050
  %26 = load i32, i32* %4, align 4, !dbg !17063
  %27 = add nsw i32 %26, 1, !dbg !17063
  store i32 %27, i32* %4, align 4, !dbg !17063
  %28 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %25, i32 2, !dbg !17065
  %29 = bitcast %struct.rbnode* %28 to i32*, !dbg !17065
  store i32 %26, i32* %29, align 8, !dbg !17066
  %30 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %12, %struct._rb_foreach* noundef nonnull %3) #27, !dbg !17059
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17047, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.value(metadata %struct.rbnode* %30, metadata !17037, metadata !DIExpression()), !dbg !17050
  %31 = icmp eq %struct.rbnode* %30, null, !dbg !17061
  br i1 %31, label %23, label %24, !dbg !17058, !llvm.loop !17067

32:                                               ; preds = %23, %2
  %33 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17069
  %34 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17070
  call void @rb_insert(%struct.rbtree* noundef %33, %struct.rbnode* noundef %34) #27, !dbg !17071
  ret void, !dbg !17072
}

; Function Attrs: optsize
declare !dbg !17073 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !17078 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !17081 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17083, metadata !DIExpression()), !dbg !17085
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17084, metadata !DIExpression()), !dbg !17085
  %3 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17086
  %4 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !17087
  tail call void @rb_remove(%struct.rbtree* noundef %3, %struct.rbnode* noundef %4) #27, !dbg !17088
  %5 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !17089
  %6 = load %struct.rbnode*, %struct.rbnode** %5, align 4, !dbg !17089
  %7 = icmp eq %struct.rbnode* %6, null, !dbg !17091
  br i1 %7, label %8, label %10, !dbg !17092

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !17093
  store i32 0, i32* %9, align 4, !dbg !17095
  br label %10, !dbg !17096

10:                                               ; preds = %8, %2
  ret void, !dbg !17097
}

; Function Attrs: optsize
declare !dbg !17098 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !17099 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !17103, metadata !DIExpression()), !dbg !17106
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17104, metadata !DIExpression()), !dbg !17106
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !17107
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #26, !dbg !17108
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !17105, metadata !DIExpression()), !dbg !17106
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !17104, metadata !DIExpression()), !dbg !17106
  ret %struct.k_thread* %4, !dbg !17109
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !17110 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !17114, metadata !DIExpression()), !dbg !17115
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #27, !dbg !17116
  ret %struct.rbnode* %2, !dbg !17117
}

; Function Attrs: optsize
declare !dbg !17118 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #18 !dbg !17121 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !17133, metadata !DIExpression()), !dbg !17137
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !17138
  %3 = load i32, i32* %2, align 4, !dbg !17138
  %4 = icmp eq i32 %3, 0, !dbg !17140
  br i1 %4, label %10, label %5, !dbg !17141

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !17134, metadata !DIExpression()), !dbg !17137
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !17142, !range !9466
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !17143
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !17135, metadata !DIExpression()), !dbg !17137
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %7) #26, !dbg !17144
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !17136, metadata !DIExpression()), !dbg !17137
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !17134, metadata !DIExpression()), !dbg !17137
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !17137
  ret %struct.k_thread* %11, !dbg !17145
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%union.anon* noundef %0) local_unnamed_addr #1 !dbg !17146 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17150, metadata !DIExpression()), !dbg !17153
  call void @llvm.dbg.value(metadata i32 0, metadata !17151, metadata !DIExpression()), !dbg !17153
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17152, metadata !DIExpression()), !dbg !17153
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17155
  br i1 %3, label %8, label %4, !dbg !17156

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17157
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17159
  call void @llvm.dbg.value(metadata i32 1, metadata !17151, metadata !DIExpression()), !dbg !17153
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17154
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17152, metadata !DIExpression()), !dbg !17153
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17155
  br i1 %7, label %8, label %4, !dbg !17156, !llvm.loop !17160

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !17153
  ret i32 %9, !dbg !17162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef readonly %0) unnamed_addr #10 !dbg !17163 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17165, metadata !DIExpression()), !dbg !17166
  %2 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0, !dbg !17167
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #26, !dbg !17168
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !17169
  ret %struct.k_thread* %4, !dbg !17170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #9 !dbg !17171 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !17180, metadata !DIExpression()), !dbg !17181
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !17182
  tail call fastcc void @sys_dlist_init.285(%struct._dnode* noundef nonnull %2) #26, !dbg !17183
  ret void, !dbg !17184
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.285(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !17185 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17189, metadata !DIExpression()), !dbg !17190
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17191
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !17192
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17193
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !17194
  ret void, !dbg !17195
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !17196 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #26, !dbg !17197
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #26, !dbg !17198
  ret void, !dbg !17199
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !17200 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17205, metadata !DIExpression()), !dbg !17206
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !17207
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !17207
  %4 = load i8, i8* %3, align 2, !dbg !17207
  %5 = sext i8 %4 to i32, !dbg !17208
  ret i32 %5, !dbg !17209
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !17210 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17214, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.value(metadata i32 %1, metadata !17215, metadata !DIExpression()), !dbg !17217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17216, metadata !DIExpression()), !dbg !17217
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #26, !dbg !17218
  ret void, !dbg !17219
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !17220 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #26, !dbg !17221
  br i1 %1, label %8, label %2, !dbg !17222

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #27, !dbg !17223
  br i1 %3, label %8, label %4, !dbg !17224

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17225
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #26, !dbg !17226
  %7 = xor i1 %6, true, !dbg !17224
  br label %8, !dbg !17224

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !17227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #10 !dbg !17228 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !17229, !range !8655
  %2 = icmp eq i8 %1, 0, !dbg !17229
  ret i1 %2, !dbg !17230
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !17231 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !17234
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17236, !srcloc !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()) #25, !dbg !17238
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !17238
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #25, !dbg !17234
  call void @llvm.dbg.value(metadata i32 undef, metadata !17233, metadata !DIExpression()), !dbg !17239
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17240
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15896, metadata !DIExpression()) #25, !dbg !17243
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 0, i32 3, !dbg !17245
  %4 = load i8, i8* %3, align 1, !dbg !17246
  %5 = and i8 %4, 127, !dbg !17246
  store i8 %5, i8* %3, align 1, !dbg !17246
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15904, metadata !DIExpression()) #25, !dbg !17247
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %2) #27, !dbg !17249
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17250
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15913, metadata !DIExpression()) #25, !dbg !17251
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 3, !dbg !17253
  %8 = load i8, i8* %7, align 1, !dbg !17254
  %9 = or i8 %8, -128, !dbg !17254
  store i8 %9, i8* %7, align 1, !dbg !17254
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15920, metadata !DIExpression()) #25, !dbg !17255
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !15927, metadata !DIExpression()) #25, !dbg !17257
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15933, metadata !DIExpression()) #25, !dbg !17257
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #27, !dbg !17259
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !15934, metadata !DIExpression()) #25, !dbg !17257
  %11 = icmp eq %struct._dnode* %10, null, !dbg !17260
  br i1 %11, label %22, label %12, !dbg !17259

12:                                               ; preds = %0, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %0 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !15934, metadata !DIExpression()) #25, !dbg !17257
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !17261
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !15934, metadata !DIExpression()) #25, !dbg !17257
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %6, %struct.k_thread* noundef nonnull %14) #27, !dbg !17262
  %16 = icmp sgt i32 %15, 0, !dbg !17263
  br i1 %16, label %17, label %19, !dbg !17264

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17265
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #27, !dbg !17266
  br label %24, !dbg !17267

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %13) #27, !dbg !17260
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !15934, metadata !DIExpression()) #25, !dbg !17257
  %21 = icmp eq %struct._dnode* %20, null, !dbg !17260
  br i1 %21, label %22, label %12, !dbg !17259, !llvm.loop !17268

22:                                               ; preds = %19, %0
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 0, i32 0, !dbg !17270
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %23) #27, !dbg !17271
  br label %24, !dbg !17272

24:                                               ; preds = %17, %22
  %25 = extractvalue { i32, i32 } %1, 0, !dbg !17236
  call void @llvm.dbg.value(metadata i32 %25, metadata !15739, metadata !DIExpression()) #25, !dbg !17238
  call void @llvm.dbg.value(metadata i32 %25, metadata !15733, metadata !DIExpression()) #25, !dbg !17234
  call void @llvm.dbg.value(metadata i32 %25, metadata !17233, metadata !DIExpression()), !dbg !17239
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17273
  call void @llvm.dbg.value(metadata i32 undef, metadata !16338, metadata !DIExpression()) #25, !dbg !17274
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16343, metadata !DIExpression()) #25, !dbg !17274
  %26 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %25) #27, !dbg !17276
  ret void, !dbg !17277
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !17278 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17282, metadata !DIExpression()), !dbg !17285
  %3 = icmp eq i64 %2, -1, !dbg !17286
  br i1 %3, label %4, label %6, !dbg !17288

4:                                                ; preds = %1
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17289
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %5) #26, !dbg !17291
  br label %11, !dbg !17292

6:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17283, metadata !DIExpression()), !dbg !17285
  %7 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #26, !dbg !17293
  %8 = sext i32 %7 to i64, !dbg !17293
  call void @llvm.dbg.value(metadata i64 %8, metadata !17283, metadata !DIExpression()), !dbg !17285
  %9 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %8) #26, !dbg !17294
  %10 = trunc i64 %9 to i32, !dbg !17294
  call void @llvm.dbg.value(metadata i32 %10, metadata !17284, metadata !DIExpression()), !dbg !17285
  br label %11

11:                                               ; preds = %6, %4
  %12 = phi i32 [ -1, %4 ], [ %10, %6 ], !dbg !17285
  ret i32 %12, !dbg !17295
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17296 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17300, metadata !DIExpression()), !dbg !17301
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17302, !srcloc !17304
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #26, !dbg !17305
  ret void, !dbg !17306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !17307 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17311, metadata !DIExpression()), !dbg !17315
  %2 = icmp eq i64 %0, 0, !dbg !17316
  br i1 %2, label %3, label %4, !dbg !17318

3:                                                ; preds = %1
  tail call fastcc void @k_yield() #26, !dbg !17319
  br label %29, !dbg !17321

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %0, metadata !17313, metadata !DIExpression()), !dbg !17315
  %5 = icmp sgt i64 %0, -3, !dbg !17322
  br i1 %5, label %6, label %10, !dbg !17324

6:                                                ; preds = %4
  %7 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17325
  %8 = trunc i64 %0 to i32, !dbg !17327
  %9 = add i32 %7, %8, !dbg !17327
  call void @llvm.dbg.value(metadata i32 %9, metadata !17312, metadata !DIExpression()), !dbg !17315
  br label %13, !dbg !17328

10:                                               ; preds = %4
  %11 = trunc i64 %0 to i32, !dbg !17329
  %12 = sub i32 -2, %11, !dbg !17329
  call void @llvm.dbg.value(metadata i32 %12, metadata !17312, metadata !DIExpression()), !dbg !17315
  br label %13

13:                                               ; preds = %10, %6
  %14 = phi i32 [ %9, %6 ], [ %12, %10 ], !dbg !17331
  call void @llvm.dbg.value(metadata i32 %14, metadata !17312, metadata !DIExpression()), !dbg !17315
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !17332
  %15 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17334, !srcloc !15742
  %16 = extractvalue { i32, i32 } %15, 0, !dbg !17334
  call void @llvm.dbg.value(metadata i32 %16, metadata !15739, metadata !DIExpression()) #25, !dbg !17336
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !17336
  call void @llvm.dbg.value(metadata i32 %16, metadata !15733, metadata !DIExpression()) #25, !dbg !17332
  call void @llvm.dbg.value(metadata i32 %16, metadata !17314, metadata !DIExpression()), !dbg !17315
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17337
  store %struct.k_thread* %17, %struct.k_thread** @pending_current, align 4, !dbg !17338
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %17) #26, !dbg !17339
  %18 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17340
  %19 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !17341
  tail call fastcc void @z_add_thread_timeout.278(%struct.k_thread* noundef %18, [1 x i64] %19) #26, !dbg !17341
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17342
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %20) #26, !dbg !17343
  call void @llvm.dbg.value(metadata i32 %16, metadata !16338, metadata !DIExpression()) #25, !dbg !17344
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16343, metadata !DIExpression()) #25, !dbg !17344
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %16) #27, !dbg !17346
  %22 = zext i32 %14 to i64, !dbg !17347
  %23 = tail call i32 @sys_clock_tick_get_32() #27, !dbg !17348
  %24 = zext i32 %23 to i64, !dbg !17348
  %25 = sub nsw i64 %22, %24, !dbg !17349
  call void @llvm.dbg.value(metadata i64 %25, metadata !17311, metadata !DIExpression()), !dbg !17315
  %26 = icmp sgt i64 %25, 0, !dbg !17350
  %27 = select i1 %26, i64 %25, i64 0, !dbg !17350
  %28 = trunc i64 %27 to i32, !dbg !17350
  br label %29

29:                                               ; preds = %13, %3
  %30 = phi i32 [ 0, %3 ], [ %28, %13 ], !dbg !17315
  ret i32 %30, !dbg !17351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17352 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17354, metadata !DIExpression()), !dbg !17355
  call void @llvm.dbg.value(metadata i64 %0, metadata !15774, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i32 10000, metadata !15777, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i32 1000, metadata !15778, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i8 1, metadata !15779, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i1 false, metadata !15780, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17356
  call void @llvm.dbg.value(metadata i1 false, metadata !15781, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17356
  call void @llvm.dbg.value(metadata i8 0, metadata !15782, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i1 false, metadata !15783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17356
  call void @llvm.dbg.value(metadata i1 true, metadata !15784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17356
  call void @llvm.dbg.value(metadata i64 0, metadata !15785, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i64 0, metadata !15785, metadata !DIExpression()), !dbg !17356
  call void @llvm.dbg.value(metadata i64 %0, metadata !15774, metadata !DIExpression()), !dbg !17356
  %2 = udiv i64 %0, 10, !dbg !17358
  ret i64 %2, !dbg !17362
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !17363 {
  tail call void asm sideeffect "", "~{memory}"() #25, !dbg !17364, !srcloc !17366
  tail call void @z_impl_k_yield() #26, !dbg !17367
  ret void, !dbg !17368
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !17369 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17373, metadata !DIExpression()), !dbg !17375
  %2 = sext i32 %0 to i64, !dbg !17376
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #26, !dbg !17377
  call void @llvm.dbg.value(metadata i64 %3, metadata !17374, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17375
  %4 = shl i64 %3, 32, !dbg !17378
  %5 = ashr exact i64 %4, 32, !dbg !17378
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #26, !dbg !17379
  call void @llvm.dbg.value(metadata i32 %6, metadata !17374, metadata !DIExpression()), !dbg !17375
  %7 = sext i32 %6 to i64, !dbg !17380
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #26, !dbg !17381
  %9 = trunc i64 %8 to i32, !dbg !17381
  ret i32 %9, !dbg !17382
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !17383 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17385, metadata !DIExpression()), !dbg !17386
  call void @llvm.dbg.value(metadata i64 %0, metadata !15774, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15777, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.value(metadata i32 10000, metadata !15778, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.value(metadata i8 1, metadata !15779, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.value(metadata i1 false, metadata !15780, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17387
  call void @llvm.dbg.value(metadata i1 true, metadata !15781, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17387
  call void @llvm.dbg.value(metadata i8 0, metadata !15782, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.value(metadata i1 false, metadata !15783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17387
  call void @llvm.dbg.value(metadata i1 true, metadata !15784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17387
  call void @llvm.dbg.value(metadata i64 0, metadata !15785, metadata !DIExpression()), !dbg !17387
  call void @llvm.dbg.value(metadata i64 0, metadata !15785, metadata !DIExpression()), !dbg !17387
  %2 = add i64 %0, 99, !dbg !17389
  call void @llvm.dbg.value(metadata i64 %2, metadata !15774, metadata !DIExpression()), !dbg !17387
  %3 = udiv i64 %2, 100, !dbg !17390
  ret i64 %3, !dbg !17391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !17392 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !17394, metadata !DIExpression()), !dbg !17395
  call void @llvm.dbg.value(metadata i64 %0, metadata !15774, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata i32 10000, metadata !15777, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata i32 1000000, metadata !15778, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata i8 1, metadata !15779, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata i1 false, metadata !15780, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17396
  call void @llvm.dbg.value(metadata i1 false, metadata !15781, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17396
  call void @llvm.dbg.value(metadata i8 0, metadata !15782, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata i1 true, metadata !15783, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17396
  call void @llvm.dbg.value(metadata i1 false, metadata !15784, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17396
  call void @llvm.dbg.value(metadata i64 0, metadata !15785, metadata !DIExpression()), !dbg !17396
  call void @llvm.dbg.value(metadata i64 0, metadata !15785, metadata !DIExpression()), !dbg !17396
  %2 = mul i64 %0, 100, !dbg !17398
  ret i64 %2, !dbg !17400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17401 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17403, metadata !DIExpression()), !dbg !17404
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #26, !dbg !17405
  br i1 %2, label %14, label %3, !dbg !17407

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #26, !dbg !17408
  %5 = icmp slt i32 %4, 0, !dbg !17410
  br i1 %5, label %6, label %10, !dbg !17411

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17412
  %8 = load i8, i8* %7, align 1, !dbg !17412
  %9 = icmp eq i8 %8, 16, !dbg !17415
  br i1 %9, label %10, label %14, !dbg !17416

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #26, !dbg !17417
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #26, !dbg !17418
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17419, !srcloc !16378
  call void @llvm.dbg.value(metadata i32 %11, metadata !16374, metadata !DIExpression()) #25, !dbg !17423
  %12 = icmp eq i32 %11, 0, !dbg !17424
  br i1 %12, label %13, label %14, !dbg !17425

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #26, !dbg !17426
  br label %14, !dbg !17428

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !17429
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17430 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17432, metadata !DIExpression()), !dbg !17433
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17434
  %3 = load i8, i8* %2, align 1, !dbg !17434
  %4 = and i8 %3, 2, !dbg !17435
  %5 = icmp ne i8 %4, 0, !dbg !17436
  ret i1 %5, !dbg !17437
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #10 !dbg !17438 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17443
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !17442, metadata !DIExpression()), !dbg !17444
  ret %struct.k_thread* %1, !dbg !17445
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !17446 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17447, !srcloc !16378
  call void @llvm.dbg.value(metadata i32 %1, metadata !16374, metadata !DIExpression()) #25, !dbg !17450
  %2 = icmp eq i32 %1, 0, !dbg !17451
  br i1 %2, label %3, label %8, !dbg !17452

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17453
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #26, !dbg !17454
  %6 = icmp ne i32 %5, 0, !dbg !17452
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !17455
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !17456 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17458, metadata !DIExpression()), !dbg !17460
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !17461
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17463, !srcloc !15742
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !17463
  call void @llvm.dbg.value(metadata i32 %3, metadata !15739, metadata !DIExpression()) #25, !dbg !17465
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !17465
  call void @llvm.dbg.value(metadata i32 %3, metadata !15733, metadata !DIExpression()) #25, !dbg !17461
  call void @llvm.dbg.value(metadata i32 %3, metadata !17459, metadata !DIExpression()), !dbg !17460
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !17466
  %5 = load i8, i8* %4, align 4, !dbg !17466
  %6 = and i8 %5, 1, !dbg !17468
  %7 = icmp eq i8 %6, 0, !dbg !17469
  br i1 %7, label %9, label %8, !dbg !17470

8:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !17471
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !17471
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !17474
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17476, !srcloc !15768
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #25, !dbg !17477, !srcloc !17479
  br label %24, !dbg !17480

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17481
  %11 = load i8, i8* %10, align 1, !dbg !17481
  %12 = and i8 %11, 8, !dbg !17483
  %13 = icmp eq i8 %12, 0, !dbg !17484
  br i1 %13, label %15, label %14, !dbg !17485

14:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !17486
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !17486
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !17489
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17491, !srcloc !15768
  br label %24, !dbg !17492

15:                                               ; preds = %9
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #26, !dbg !17493
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17494
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !17496
  br i1 %17, label %18, label %23, !dbg !17497

18:                                               ; preds = %15
  %19 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #25, !dbg !17498, !srcloc !16378
  call void @llvm.dbg.value(metadata i32 %19, metadata !16374, metadata !DIExpression()) #25, !dbg !17501
  %20 = icmp eq i32 %19, 0, !dbg !17502
  br i1 %20, label %21, label %23, !dbg !17503

21:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 %3, metadata !16338, metadata !DIExpression()) #25, !dbg !17504
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16343, metadata !DIExpression()) #25, !dbg !17504
  %22 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #27, !dbg !17507
  br label %23, !dbg !17508

23:                                               ; preds = %21, %18, %15
  call void @llvm.dbg.value(metadata i32 %3, metadata !15754, metadata !DIExpression()) #25, !dbg !17509
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !17509
  call void @llvm.dbg.value(metadata i32 %3, metadata !15762, metadata !DIExpression()) #25, !dbg !17511
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !17513, !srcloc !15768
  br label %24, !dbg !17514

24:                                               ; preds = %23, %14, %8
  ret void, !dbg !17514
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !17515 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17517, metadata !DIExpression()), !dbg !17518
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17519
  %3 = load i8, i8* %2, align 1, !dbg !17519
  %4 = and i8 %3, 8, !dbg !17521
  %5 = icmp eq i8 %4, 0, !dbg !17522
  br i1 %5, label %6, label %20, !dbg !17523

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !17524
  %8 = or i8 %7, 8, !dbg !17524
  store i8 %8, i8* %2, align 1, !dbg !17524
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #26, !dbg !17526
  br i1 %9, label %10, label %12, !dbg !17528

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15896, metadata !DIExpression()) #25, !dbg !17529
  %11 = and i8 %8, 95, !dbg !17532
  store i8 %11, i8* %2, align 1, !dbg !17532
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15904, metadata !DIExpression()) #25, !dbg !17533
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #27, !dbg !17535
  br label %12, !dbg !17536

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17537
  %14 = load %union.anon*, %union.anon** %13, align 8, !dbg !17537
  %15 = icmp eq %union.anon* %14, null, !dbg !17539
  br i1 %15, label %17, label %16, !dbg !17540

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17541
  br label %17, !dbg !17543

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #26, !dbg !17544
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17545
  tail call fastcc void @unpend_all(%union.anon* noundef nonnull %19) #26, !dbg !17546
  tail call fastcc void @update_cache(i32 noundef 1) #26, !dbg !17547
  br label %20, !dbg !17548

20:                                               ; preds = %17, %1
  ret void, !dbg !17549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%union.anon* noundef %0) unnamed_addr #1 !dbg !17550 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17554, metadata !DIExpression()), !dbg !17556
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17557
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !17555, metadata !DIExpression()), !dbg !17556
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !17558
  br i1 %3, label %10, label %4, !dbg !17559

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17560
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #26, !dbg !17562
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !17563, metadata !DIExpression()), !dbg !17569
  call void @llvm.dbg.value(metadata i32 0, metadata !17568, metadata !DIExpression()), !dbg !17569
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 7, i32 1, !dbg !17571
  store i32 0, i32* %7, align 4, !dbg !17572
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #26, !dbg !17573
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head(%union.anon* noundef %0) #26, !dbg !17557
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !17555, metadata !DIExpression()), !dbg !17556
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !17558
  br i1 %9, label %10, label %4, !dbg !17559, !llvm.loop !17574

10:                                               ; preds = %4, %1
  ret void, !dbg !17576
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !17577 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !17582, metadata !DIExpression()), !dbg !17585
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !17581, metadata !DIExpression()), !dbg !17585
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !17586
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17588, !srcloc !15742
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !17588
  call void @llvm.dbg.value(metadata i32 %4, metadata !15739, metadata !DIExpression()) #25, !dbg !17590
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !17590
  call void @llvm.dbg.value(metadata i32 %4, metadata !15733, metadata !DIExpression()) #25, !dbg !17586
  call void @llvm.dbg.value(metadata i32 %4, metadata !17583, metadata !DIExpression()), !dbg !17585
  call void @llvm.dbg.value(metadata i32 0, metadata !17584, metadata !DIExpression()), !dbg !17585
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !17591
  %6 = load i8, i8* %5, align 1, !dbg !17591
  %7 = and i8 %6, 8, !dbg !17593
  %8 = icmp eq i8 %7, 0, !dbg !17594
  br i1 %8, label %9, label %24, !dbg !17595

9:                                                ; preds = %2
  %10 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %10, metadata !17582, metadata !DIExpression()), !dbg !17585
  %11 = icmp eq i64 %10, 0, !dbg !17596
  br i1 %11, label %24, label %12, !dbg !17598

12:                                               ; preds = %9
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17599
  %14 = icmp eq %struct.k_thread* %13, %0, !dbg !17601
  br i1 %14, label %24, label %15, !dbg !17602

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !17603
  %17 = load %union.anon*, %union.anon** %16, align 8, !dbg !17603
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 3, !dbg !17604
  %19 = icmp eq %union.anon* %17, %18, !dbg !17605
  br i1 %19, label %24, label %20, !dbg !17606

20:                                               ; preds = %15
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !17607
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %13, %union.anon* noundef nonnull %21) #26, !dbg !17609
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17610
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %22, [1 x i64] %1) #26, !dbg !17611
  call void @llvm.dbg.value(metadata i32 %4, metadata !16338, metadata !DIExpression()) #25, !dbg !17612
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !16343, metadata !DIExpression()) #25, !dbg !17612
  %23 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %4) #27, !dbg !17614
  call void @llvm.dbg.value(metadata i32 %23, metadata !17584, metadata !DIExpression()), !dbg !17585
  br label %26, !dbg !17615

24:                                               ; preds = %12, %15, %9, %2
  %25 = phi i32 [ 0, %2 ], [ -16, %9 ], [ -45, %15 ], [ -45, %12 ], !dbg !17616
  call void @llvm.dbg.value(metadata i32 %25, metadata !17584, metadata !DIExpression()), !dbg !17585
  call void @llvm.dbg.value(metadata i32 %4, metadata !15754, metadata !DIExpression()) #25, !dbg !17617
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !17617
  call void @llvm.dbg.value(metadata i32 %4, metadata !15762, metadata !DIExpression()) #25, !dbg !17619
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #25, !dbg !17621, !srcloc !15768
  br label %26, !dbg !17622

26:                                               ; preds = %24, %20
  %27 = phi i32 [ %25, %24 ], [ %23, %20 ], !dbg !17585
  ret i32 %27, !dbg !17623
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%union.anon* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !17624 {
  call void @llvm.dbg.value(metadata %union.anon* %0, metadata !17628, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata i32 %1, metadata !17629, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata i8* %2, metadata !17630, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata i8 0, metadata !17632, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata i32 0, metadata !17633, metadata !DIExpression()), !dbg !17637
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15727, metadata !DIExpression()) #25, !dbg !17638
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17640, !srcloc !15742
  call void @llvm.dbg.value(metadata i32 undef, metadata !15739, metadata !DIExpression()) #25, !dbg !17642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15740, metadata !DIExpression()) #25, !dbg !17642
  call void @llvm.dbg.value(metadata i32 undef, metadata !15733, metadata !DIExpression()) #25, !dbg !17638
  call void @llvm.dbg.value(metadata i32 undef, metadata !17635, metadata !DIExpression()), !dbg !17637
  call void @llvm.dbg.value(metadata i8 poison, metadata !17632, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata i32 undef, metadata !17633, metadata !DIExpression()), !dbg !17637
  %5 = getelementptr inbounds %union.anon, %union.anon* %0, i32 0, i32 0
  %6 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %5) #26, !dbg !17643
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17631, metadata !DIExpression()), !dbg !17636
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !17646
  br i1 %7, label %12, label %8, !dbg !17648

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17649, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i32 %1, metadata !17655, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata i8* %2, metadata !17656, metadata !DIExpression()), !dbg !17657
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !17563, metadata !DIExpression()), !dbg !17660
  call void @llvm.dbg.value(metadata i32 %1, metadata !17568, metadata !DIExpression()), !dbg !17660
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 7, i32 1, !dbg !17662
  store i32 %1, i32* %9, align 4, !dbg !17663
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %6, i32 0, i32 0, i32 6, !dbg !17664
  store i8* %2, i8** %10, align 4, !dbg !17665
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17666
  %11 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %6) #26, !dbg !17667
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %6) #26, !dbg !17668
  call void @llvm.dbg.value(metadata i8 1, metadata !17632, metadata !DIExpression()), !dbg !17636
  br label %12, !dbg !17669

12:                                               ; preds = %3, %8
  %13 = xor i1 %7, true, !dbg !17640
  %14 = extractvalue { i32, i32 } %4, 0, !dbg !17640
  call void @llvm.dbg.value(metadata i32 %14, metadata !15739, metadata !DIExpression()) #25, !dbg !17642
  call void @llvm.dbg.value(metadata i32 %14, metadata !15733, metadata !DIExpression()) #25, !dbg !17638
  call void @llvm.dbg.value(metadata i32 %14, metadata !17635, metadata !DIExpression()), !dbg !17637
  call void @llvm.dbg.value(metadata i8 poison, metadata !17632, metadata !DIExpression()), !dbg !17636
  call void @llvm.dbg.value(metadata i32 undef, metadata !15754, metadata !DIExpression()) #25, !dbg !17670
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !15759, metadata !DIExpression()) #25, !dbg !17670
  call void @llvm.dbg.value(metadata i32 undef, metadata !15762, metadata !DIExpression()) #25, !dbg !17672
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !17674, !srcloc !15768
  call void @llvm.dbg.value(metadata i32 undef, metadata !17633, metadata !DIExpression()), !dbg !17637
  ret i1 %13, !dbg !17675
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* nocapture noundef readnone %0, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !17676 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !17682, metadata !DIExpression()), !dbg !17687
  call void @llvm.dbg.value(metadata i64 undef, metadata !17684, metadata !DIExpression()), !dbg !17687
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !17681, metadata !DIExpression()), !dbg !17687
  call void @llvm.dbg.value(metadata %union.anon* %2, metadata !17683, metadata !DIExpression()), !dbg !17687
  call void @llvm.dbg.value(metadata i8** %4, metadata !17685, metadata !DIExpression()), !dbg !17687
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* undef, [1 x i32] %1, %union.anon* noundef %2, [1 x i64] %3) #26, !dbg !17688
  call void @llvm.dbg.value(metadata i32 %6, metadata !17686, metadata !DIExpression()), !dbg !17687
  %7 = icmp eq i8** %4, null, !dbg !17689
  br i1 %7, label %12, label %8, !dbg !17691

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !17692
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !17694
  %11 = load i8*, i8** %10, align 4, !dbg !17694
  store i8* %11, i8** %4, align 4, !dbg !17695
  br label %12, !dbg !17696

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !17697
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !17698 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #27, !dbg !17700
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #27, !dbg !17701
  ret void, !dbg !17702
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !17703 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !17713, metadata !DIExpression()), !dbg !17730
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17711, metadata !DIExpression()), !dbg !17730
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !17712, metadata !DIExpression()), !dbg !17730
  %5 = icmp eq i64 %4, -1, !dbg !17731
  br i1 %5, label %55, label %6, !dbg !17733

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !17734
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %7, align 8, !dbg !17735
  call void @llvm.dbg.value(metadata i32 0, metadata !17714, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !17744
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17746, !srcloc !17752
  %9 = extractvalue { i32, i32 } %8, 0, !dbg !17746
  call void @llvm.dbg.value(metadata i32 %9, metadata !17749, metadata !DIExpression()) #25, !dbg !17753
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !17753
  call void @llvm.dbg.value(metadata i32 %9, metadata !17743, metadata !DIExpression()) #25, !dbg !17744
  call void @llvm.dbg.value(metadata i32 %9, metadata !17720, metadata !DIExpression()), !dbg !17736
  call void @llvm.dbg.value(metadata i32 undef, metadata !17714, metadata !DIExpression()), !dbg !17736
  %10 = icmp slt i64 %4, -1, !dbg !17754
  br i1 %10, label %11, label %17, !dbg !17755

11:                                               ; preds = %6
  %12 = load i64, i64* @curr_tick, align 8, !dbg !17756
  %13 = add i64 %4, %12, !dbg !17757
  %14 = sub i64 -2, %13, !dbg !17757
  call void @llvm.dbg.value(metadata i64 %14, metadata !17724, metadata !DIExpression()), !dbg !17758
  %15 = icmp sgt i64 %14, 1, !dbg !17759
  %16 = select i1 %15, i64 %14, i64 1, !dbg !17759
  br label %22, !dbg !17760

17:                                               ; preds = %6
  %18 = add nuw nsw i64 %4, 1, !dbg !17761
  %19 = tail call fastcc i32 @elapsed.296() #26, !dbg !17763
  %20 = sext i32 %19 to i64, !dbg !17763
  %21 = add nsw i64 %18, %20, !dbg !17764
  br label %22

22:                                               ; preds = %17, %11
  %23 = phi i64 [ %16, %11 ], [ %21, %17 ], !dbg !17765
  %24 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17766
  store i64 %23, i64* %24, align 8, !dbg !17767
  %25 = tail call fastcc %struct._timeout* @first() #26, !dbg !17768
  call void @llvm.dbg.value(metadata %struct._timeout* %25, metadata !17721, metadata !DIExpression()), !dbg !17770
  %26 = icmp eq %struct._timeout* %25, null, !dbg !17771
  br i1 %26, label %42, label %27, !dbg !17771

27:                                               ; preds = %22, %38
  %28 = phi i64 [ %39, %38 ], [ %23, %22 ], !dbg !17772
  %29 = phi %struct._timeout* [ %40, %38 ], [ %25, %22 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %29, metadata !17721, metadata !DIExpression()), !dbg !17770
  %30 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17776
  %31 = load i64, i64* %30, align 8, !dbg !17776
  %32 = icmp slt i64 %28, %31, !dbg !17777
  br i1 %32, label %33, label %38, !dbg !17778

33:                                               ; preds = %27
  %34 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 2, !dbg !17776
  %35 = sub nsw i64 %31, %28, !dbg !17779
  store i64 %35, i64* %34, align 8, !dbg !17779
  %36 = getelementptr inbounds %struct._timeout, %struct._timeout* %29, i32 0, i32 0, !dbg !17781
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17782
  tail call fastcc void @sys_dlist_insert.297(%struct._dnode* noundef nonnull %36, %struct._dnode* noundef %37) #26, !dbg !17783
  br label %44, !dbg !17784

38:                                               ; preds = %27
  %39 = sub nsw i64 %28, %31, !dbg !17785
  store i64 %39, i64* %24, align 8, !dbg !17785
  %40 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %29) #26, !dbg !17786
  call void @llvm.dbg.value(metadata %struct._timeout* %40, metadata !17721, metadata !DIExpression()), !dbg !17770
  %41 = icmp eq %struct._timeout* %40, null, !dbg !17771
  br i1 %41, label %42, label %27, !dbg !17771, !llvm.loop !17787

42:                                               ; preds = %38, %22
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17789
  tail call fastcc void @sys_dlist_append.298(%struct._dnode* noundef %43) #26, !dbg !17792
  br label %44, !dbg !17793

44:                                               ; preds = %33, %42
  %45 = tail call fastcc %struct._timeout* @first() #26, !dbg !17794
  %46 = icmp eq %struct._timeout* %45, %0, !dbg !17795
  br i1 %46, label %47, label %54, !dbg !17796

47:                                               ; preds = %44
  %48 = tail call fastcc i32 @next_timeout() #26, !dbg !17797
  call void @llvm.dbg.value(metadata i32 %48, metadata !17727, metadata !DIExpression()), !dbg !17798
  %49 = icmp ne i32 %48, 0, !dbg !17799
  %50 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %51 = icmp eq i32 %50, %48
  %52 = select i1 %49, i1 %51, i1 false, !dbg !17801
  br i1 %52, label %54, label %53, !dbg !17801

53:                                               ; preds = %47
  tail call void @sys_clock_set_timeout(i32 noundef %48, i1 noundef zeroext false) #27, !dbg !17802
  br label %54, !dbg !17804

54:                                               ; preds = %53, %47, %44
  call void @llvm.dbg.value(metadata i32 %9, metadata !17805, metadata !DIExpression()) #25, !dbg !17811
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !17811
  call void @llvm.dbg.value(metadata i32 %9, metadata !17813, metadata !DIExpression()) #25, !dbg !17816
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #25, !dbg !17818, !srcloc !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !17714, metadata !DIExpression()), !dbg !17736
  br label %55

55:                                               ; preds = %3, %54
  ret void, !dbg !17820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.296() unnamed_addr #1 !dbg !17821 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !17824
  %2 = icmp eq i32 %1, 0, !dbg !17825
  br i1 %2, label %3, label %5, !dbg !17824

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #27, !dbg !17826
  br label %5, !dbg !17824

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !17824
  ret i32 %6, !dbg !17827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #10 !dbg !17828 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.301() #26, !dbg !17834
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17832, metadata !DIExpression()), !dbg !17835
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !17836
  ret %struct._timeout* %2, !dbg !17837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.297(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #11 !dbg !17838 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17842, metadata !DIExpression()), !dbg !17846
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !17843, metadata !DIExpression()), !dbg !17846
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17847
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !17847
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !17844, metadata !DIExpression()), !dbg !17846
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !17848
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !17849
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !17850
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !17851
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !17852
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !17853
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !17854
  ret void, !dbg !17855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #10 !dbg !17856 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17860, metadata !DIExpression()), !dbg !17862
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17863
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.299(%struct._dnode* noundef %2) #26, !dbg !17864
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !17861, metadata !DIExpression()), !dbg !17862
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !17865
  ret %struct._timeout* %4, !dbg !17866
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.298(%struct._dnode* noundef %0) unnamed_addr #11 !dbg !17867 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17872, metadata !DIExpression()), !dbg !17875
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17873, metadata !DIExpression()), !dbg !17875
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17876
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !17874, metadata !DIExpression()), !dbg !17875
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17877
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !17878
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17879
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !17880
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !17881
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !17882
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17883
  ret void, !dbg !17884
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !17885 {
  %1 = tail call fastcc %struct._timeout* @first() #26, !dbg !17890
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !17887, metadata !DIExpression()), !dbg !17891
  %2 = tail call fastcc i32 @elapsed.296() #26, !dbg !17892
  call void @llvm.dbg.value(metadata i32 %2, metadata !17888, metadata !DIExpression()), !dbg !17891
  %3 = icmp eq %struct._timeout* %1, null, !dbg !17893
  br i1 %3, label %14, label %4, !dbg !17895

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !17896
  %6 = load i64, i64* %5, align 8, !dbg !17896
  %7 = sext i32 %2 to i64, !dbg !17897
  %8 = sub nsw i64 %6, %7, !dbg !17898
  %9 = icmp sgt i64 %8, 2147483647, !dbg !17899
  br i1 %9, label %14, label %10, !dbg !17900

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !17901
  %12 = select i1 %11, i64 %8, i64 0, !dbg !17901
  %13 = trunc i64 %12 to i32, !dbg !17901
  call void @llvm.dbg.value(metadata i32 %13, metadata !17889, metadata !DIExpression()), !dbg !17891
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !17903
  call void @llvm.dbg.value(metadata i32 %15, metadata !17889, metadata !DIExpression()), !dbg !17891
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !17904
  %17 = icmp ne i32 %16, 0, !dbg !17906
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !17907
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !17907
  call void @llvm.dbg.value(metadata i32 %20, metadata !17889, metadata !DIExpression()), !dbg !17891
  ret i32 %20, !dbg !17908
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.299(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17909 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17913, metadata !DIExpression()), !dbg !17915
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17914, metadata !DIExpression()), !dbg !17915
  %2 = icmp eq %struct._dnode* %0, null, !dbg !17916
  br i1 %2, label %5, label %3, !dbg !17917

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.300(%struct._dnode* noundef nonnull %0) #26, !dbg !17918
  br label %5, !dbg !17917

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !17917
  ret %struct._dnode* %6, !dbg !17919
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.300(%struct._dnode* noundef readonly %0) unnamed_addr #10 !dbg !17920 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17922, metadata !DIExpression()), !dbg !17924
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17923, metadata !DIExpression()), !dbg !17924
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !17925
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !17926
  br i1 %3, label %7, label %4, !dbg !17927

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17928
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !17928
  br label %7, !dbg !17927

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !17927
  ret %struct._dnode* %8, !dbg !17929
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.301() unnamed_addr #10 !dbg !17930 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17934, metadata !DIExpression()), !dbg !17935
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.302() #26, !dbg !17936
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !17936
  ret %struct._dnode* %3, !dbg !17937
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.302() unnamed_addr #10 !dbg !17938 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !17942, metadata !DIExpression()), !dbg !17943
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !17944
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !17945
  ret i1 %2, !dbg !17946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17947 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17951, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.value(metadata i32 -22, metadata !17952, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.value(metadata i32 0, metadata !17953, metadata !DIExpression()), !dbg !17957
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !17958
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !17960, !srcloc !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !17749, metadata !DIExpression()) #25, !dbg !17962
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !17962
  call void @llvm.dbg.value(metadata i32 undef, metadata !17743, metadata !DIExpression()) #25, !dbg !17958
  call void @llvm.dbg.value(metadata i32 undef, metadata !17955, metadata !DIExpression()), !dbg !17957
  call void @llvm.dbg.value(metadata i32 -22, metadata !17952, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.value(metadata i32 undef, metadata !17953, metadata !DIExpression()), !dbg !17957
  %3 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !17952, metadata !DIExpression()), !dbg !17956
  %4 = tail call fastcc zeroext i1 @sys_dnode_is_linked.305(%struct._dnode* noundef %3) #26, !dbg !17963
  br i1 %4, label %5, label %6, !dbg !17967

5:                                                ; preds = %1
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #26, !dbg !17968
  call void @llvm.dbg.value(metadata i32 0, metadata !17952, metadata !DIExpression()), !dbg !17956
  br label %6, !dbg !17970

6:                                                ; preds = %1, %5
  %7 = phi i32 [ 0, %5 ], [ -22, %1 ], !dbg !17956
  %8 = extractvalue { i32, i32 } %2, 0, !dbg !17960
  call void @llvm.dbg.value(metadata i32 %8, metadata !17749, metadata !DIExpression()) #25, !dbg !17962
  call void @llvm.dbg.value(metadata i32 %8, metadata !17743, metadata !DIExpression()) #25, !dbg !17958
  call void @llvm.dbg.value(metadata i32 %8, metadata !17955, metadata !DIExpression()), !dbg !17957
  call void @llvm.dbg.value(metadata i32 %7, metadata !17952, metadata !DIExpression()), !dbg !17956
  call void @llvm.dbg.value(metadata i32 undef, metadata !17805, metadata !DIExpression()) #25, !dbg !17971
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !17971
  call void @llvm.dbg.value(metadata i32 undef, metadata !17813, metadata !DIExpression()) #25, !dbg !17973
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #25, !dbg !17975, !srcloc !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !17953, metadata !DIExpression()), !dbg !17957
  ret i32 %7, !dbg !17976
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.305(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #10 !dbg !17977 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17983, metadata !DIExpression()), !dbg !17984
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17985
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !17985
  %4 = icmp ne %struct._dnode* %3, null, !dbg !17986
  ret i1 %4, !dbg !17987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #11 !dbg !17988 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17990, metadata !DIExpression()), !dbg !17991
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #26, !dbg !17992
  %3 = icmp eq %struct._timeout* %2, null, !dbg !17994
  br i1 %3, label %10, label %4, !dbg !17995

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !17996
  %6 = load i64, i64* %5, align 8, !dbg !17996
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !17998
  %8 = load i64, i64* %7, align 8, !dbg !17999
  %9 = add nsw i64 %8, %6, !dbg !17999
  store i64 %9, i64* %7, align 8, !dbg !17999
  br label %10, !dbg !18000

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18001
  tail call fastcc void @sys_dlist_remove.306(%struct._dnode* noundef %11) #26, !dbg !18002
  ret void, !dbg !18003
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.306(%struct._dnode* nocapture noundef %0) unnamed_addr #11 !dbg !18004 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18008, metadata !DIExpression()), !dbg !18011
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18012
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !18012
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !18009, metadata !DIExpression()), !dbg !18011
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18013
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !18013
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !18010, metadata !DIExpression()), !dbg !18011
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !18014
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !18015
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !18016
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !18017
  tail call fastcc void @sys_dnode_init.307(%struct._dnode* noundef %0) #26, !dbg !18018
  ret void, !dbg !18019
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.307(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #9 !dbg !18020 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !18022, metadata !DIExpression()), !dbg !18023
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !18024
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !18025
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !18026
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !18027
  ret void, !dbg !18028
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18029 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18035, metadata !DIExpression()), !dbg !18040
  call void @llvm.dbg.value(metadata i64 0, metadata !18036, metadata !DIExpression()), !dbg !18040
  call void @llvm.dbg.value(metadata i32 0, metadata !18037, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !18042
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18044, !srcloc !17752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18044
  call void @llvm.dbg.value(metadata i32 %3, metadata !17749, metadata !DIExpression()) #25, !dbg !18046
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !18046
  call void @llvm.dbg.value(metadata i32 %3, metadata !17743, metadata !DIExpression()) #25, !dbg !18042
  call void @llvm.dbg.value(metadata i32 %3, metadata !18039, metadata !DIExpression()), !dbg !18041
  call void @llvm.dbg.value(metadata i64 0, metadata !18036, metadata !DIExpression()), !dbg !18040
  call void @llvm.dbg.value(metadata i32 undef, metadata !18037, metadata !DIExpression()), !dbg !18041
  %4 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18047
  call void @llvm.dbg.value(metadata i64 %4, metadata !18036, metadata !DIExpression()), !dbg !18040
  call void @llvm.dbg.value(metadata i32 %3, metadata !17805, metadata !DIExpression()) #25, !dbg !18050
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !18050
  call void @llvm.dbg.value(metadata i32 %3, metadata !17813, metadata !DIExpression()) #25, !dbg !18052
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18054, !srcloc !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !18037, metadata !DIExpression()), !dbg !18041
  ret i64 %4, !dbg !18055
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !18056 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18058, metadata !DIExpression()), !dbg !18062
  call void @llvm.dbg.value(metadata i64 0, metadata !18059, metadata !DIExpression()), !dbg !18062
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.308(%struct._timeout* noundef %0) #26, !dbg !18063
  br i1 %2, label %21, label %3, !dbg !18065

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #26, !dbg !18066
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !18060, metadata !DIExpression()), !dbg !18067
  call void @llvm.dbg.value(metadata i64 0, metadata !18059, metadata !DIExpression()), !dbg !18062
  %5 = icmp eq %struct._timeout* %4, null, !dbg !18068
  br i1 %5, label %16, label %6, !dbg !18070

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !18060, metadata !DIExpression()), !dbg !18067
  call void @llvm.dbg.value(metadata i64 %8, metadata !18059, metadata !DIExpression()), !dbg !18062
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !18071
  %10 = load i64, i64* %9, align 8, !dbg !18071
  %11 = add nsw i64 %10, %8, !dbg !18073
  call void @llvm.dbg.value(metadata i64 %11, metadata !18059, metadata !DIExpression()), !dbg !18062
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !18074
  br i1 %12, label %16, label %13, !dbg !18076

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #26, !dbg !18077
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !18060, metadata !DIExpression()), !dbg !18067
  call void @llvm.dbg.value(metadata i64 %11, metadata !18059, metadata !DIExpression()), !dbg !18062
  %15 = icmp eq %struct._timeout* %14, null, !dbg !18068
  br i1 %15, label %16, label %6, !dbg !18070, !llvm.loop !18078

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !18062
  call void @llvm.dbg.value(metadata i64 %17, metadata !18059, metadata !DIExpression()), !dbg !18062
  %18 = tail call fastcc i32 @elapsed.296() #26, !dbg !18080
  %19 = sext i32 %18 to i64, !dbg !18080
  %20 = sub nsw i64 %17, %19, !dbg !18081
  br label %21, !dbg !18082

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !18062
  ret i64 %22, !dbg !18083
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.308(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #10 !dbg !18084 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18088, metadata !DIExpression()), !dbg !18089
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !18090
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.305(%struct._dnode* noundef %2) #26, !dbg !18091
  %4 = xor i1 %3, true, !dbg !18092
  ret i1 %4, !dbg !18093
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !18094 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !18096, metadata !DIExpression()), !dbg !18101
  call void @llvm.dbg.value(metadata i64 0, metadata !18097, metadata !DIExpression()), !dbg !18101
  call void @llvm.dbg.value(metadata i32 0, metadata !18098, metadata !DIExpression()), !dbg !18102
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !18103
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18105, !srcloc !17752
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !18105
  call void @llvm.dbg.value(metadata i32 %3, metadata !17749, metadata !DIExpression()) #25, !dbg !18107
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !18107
  call void @llvm.dbg.value(metadata i32 %3, metadata !17743, metadata !DIExpression()) #25, !dbg !18103
  call void @llvm.dbg.value(metadata i32 %3, metadata !18100, metadata !DIExpression()), !dbg !18102
  call void @llvm.dbg.value(metadata i64 0, metadata !18097, metadata !DIExpression()), !dbg !18101
  call void @llvm.dbg.value(metadata i32 undef, metadata !18098, metadata !DIExpression()), !dbg !18102
  %4 = load i64, i64* @curr_tick, align 8, !dbg !18108
  %5 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #26, !dbg !18111
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i64 %4), metadata !18097, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18101
  call void @llvm.dbg.value(metadata i32 %3, metadata !17805, metadata !DIExpression()) #25, !dbg !18112
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !18112
  call void @llvm.dbg.value(metadata i32 %3, metadata !17813, metadata !DIExpression()) #25, !dbg !18114
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #25, !dbg !18116, !srcloc !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !18098, metadata !DIExpression()), !dbg !18102
  %6 = add i64 %5, %4, !dbg !18117
  ret i64 %6, !dbg !18118
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !18119 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !18121, metadata !DIExpression()), !dbg !18125
  call void @llvm.dbg.value(metadata i32 0, metadata !18122, metadata !DIExpression()), !dbg !18126
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !18127
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18129, !srcloc !17752
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18129
  call void @llvm.dbg.value(metadata i32 %2, metadata !17749, metadata !DIExpression()) #25, !dbg !18131
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !18131
  call void @llvm.dbg.value(metadata i32 %2, metadata !17743, metadata !DIExpression()) #25, !dbg !18127
  call void @llvm.dbg.value(metadata i32 %2, metadata !18124, metadata !DIExpression()), !dbg !18126
  call void @llvm.dbg.value(metadata i32 -1, metadata !18121, metadata !DIExpression()), !dbg !18125
  call void @llvm.dbg.value(metadata i32 undef, metadata !18122, metadata !DIExpression()), !dbg !18126
  %3 = tail call fastcc i32 @next_timeout() #26, !dbg !18132
  call void @llvm.dbg.value(metadata i32 %3, metadata !18121, metadata !DIExpression()), !dbg !18125
  call void @llvm.dbg.value(metadata i32 %2, metadata !17805, metadata !DIExpression()) #25, !dbg !18135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !18135
  call void @llvm.dbg.value(metadata i32 %2, metadata !17813, metadata !DIExpression()) #25, !dbg !18137
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18139, !srcloc !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !18122, metadata !DIExpression()), !dbg !18126
  ret i32 %3, !dbg !18140
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !18141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18143, metadata !DIExpression()), !dbg !18153
  call void @llvm.dbg.value(metadata i1 %1, metadata !18144, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18153
  call void @llvm.dbg.value(metadata i32 0, metadata !18145, metadata !DIExpression()), !dbg !18154
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !18155
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18157, !srcloc !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !17749, metadata !DIExpression()) #25, !dbg !18159
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !18159
  call void @llvm.dbg.value(metadata i32 undef, metadata !17743, metadata !DIExpression()) #25, !dbg !18155
  call void @llvm.dbg.value(metadata i32 undef, metadata !18147, metadata !DIExpression()), !dbg !18154
  call void @llvm.dbg.value(metadata i32 undef, metadata !18145, metadata !DIExpression()), !dbg !18154
  %4 = tail call fastcc i32 @next_timeout() #26, !dbg !18160
  call void @llvm.dbg.value(metadata i32 %4, metadata !18148, metadata !DIExpression()), !dbg !18161
  call void @llvm.dbg.value(metadata i1 undef, metadata !18151, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18161
  %5 = icmp slt i32 %4, 2, !dbg !18162
  call void @llvm.dbg.value(metadata i1 %5, metadata !18152, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18161
  %6 = icmp slt i32 %4, %0
  %7 = or i1 %5, %6, !dbg !18163
  call void @llvm.dbg.value(metadata i1 %6, metadata !18151, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !18161
  br i1 %7, label %11, label %8, !dbg !18163

8:                                                ; preds = %2
  %9 = icmp sgt i32 %4, %0, !dbg !18165
  %10 = select i1 %9, i32 %0, i32 %4, !dbg !18165
  tail call void @sys_clock_set_timeout(i32 noundef %10, i1 noundef zeroext %1) #27, !dbg !18167
  br label %11, !dbg !18168

11:                                               ; preds = %8, %2
  %12 = extractvalue { i32, i32 } %3, 0, !dbg !18157
  call void @llvm.dbg.value(metadata i32 %12, metadata !17749, metadata !DIExpression()) #25, !dbg !18159
  call void @llvm.dbg.value(metadata i32 %12, metadata !17743, metadata !DIExpression()) #25, !dbg !18155
  call void @llvm.dbg.value(metadata i32 %12, metadata !18147, metadata !DIExpression()), !dbg !18154
  call void @llvm.dbg.value(metadata i32 undef, metadata !17805, metadata !DIExpression()) #25, !dbg !18169
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !18169
  call void @llvm.dbg.value(metadata i32 undef, metadata !17813, metadata !DIExpression()) #25, !dbg !18171
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #25, !dbg !18173, !srcloc !17819
  call void @llvm.dbg.value(metadata i32 1, metadata !18145, metadata !DIExpression()), !dbg !18154
  call void @llvm.dbg.value(metadata i32 undef, metadata !18145, metadata !DIExpression()), !dbg !18154
  ret void, !dbg !18174
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !18175 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18179, metadata !DIExpression()), !dbg !18184
  tail call void @z_time_slice(i32 noundef %0) #27, !dbg !18185
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !18186
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18188, !srcloc !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !17749, metadata !DIExpression()) #25, !dbg !18190
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !18190
  call void @llvm.dbg.value(metadata i32 undef, metadata !17743, metadata !DIExpression()) #25, !dbg !18186
  call void @llvm.dbg.value(metadata i32 undef, metadata !18180, metadata !DIExpression()), !dbg !18184
  store i32 %0, i32* @announce_remaining, align 4, !dbg !18184
  call void @llvm.dbg.value(metadata i32 undef, metadata !18180, metadata !DIExpression()), !dbg !18184
  %3 = tail call fastcc %struct._timeout* @first() #26, !dbg !18191
  %4 = icmp eq %struct._timeout* %3, null, !dbg !18192
  br i1 %4, label %28, label %5, !dbg !18193

5:                                                ; preds = %1, %13
  %6 = phi %struct._timeout* [ %24, %13 ], [ %3, %1 ]
  %7 = phi { i32, i32 } [ %21, %13 ], [ %2, %1 ]
  %8 = phi i32 [ %23, %13 ], [ %0, %1 ]
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 2, !dbg !18194
  %10 = load i64, i64* %9, align 8, !dbg !18194
  %11 = sext i32 %8 to i64, !dbg !18195
  %12 = icmp sgt i64 %10, %11, !dbg !18196
  br i1 %12, label %26, label %13, !dbg !18197

13:                                               ; preds = %5
  %14 = extractvalue { i32, i32 } %7, 0, !dbg !18184
  call void @llvm.dbg.value(metadata %struct._timeout* %6, metadata !18181, metadata !DIExpression()), !dbg !18198
  %15 = trunc i64 %10 to i32, !dbg !18199
  call void @llvm.dbg.value(metadata i32 %15, metadata !18183, metadata !DIExpression()), !dbg !18198
  %16 = sext i32 %15 to i64, !dbg !18200
  %17 = load i64, i64* @curr_tick, align 8, !dbg !18201
  %18 = add i64 %17, %16, !dbg !18201
  store i64 %18, i64* @curr_tick, align 8, !dbg !18201
  store i64 0, i64* %9, align 8, !dbg !18202
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %6) #26, !dbg !18203
  call void @llvm.dbg.value(metadata i32 %14, metadata !17805, metadata !DIExpression()) #25, !dbg !18204
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !18204
  call void @llvm.dbg.value(metadata i32 %14, metadata !17813, metadata !DIExpression()) #25, !dbg !18206
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #25, !dbg !18208, !srcloc !17819
  %19 = getelementptr inbounds %struct._timeout, %struct._timeout* %6, i32 0, i32 1, !dbg !18209
  %20 = load void (%struct._timeout*)*, void (%struct._timeout*)** %19, align 8, !dbg !18209
  tail call void %20(%struct._timeout* noundef nonnull %6) #27, !dbg !18210
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !18211
  %21 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18213, !srcloc !17752
  call void @llvm.dbg.value(metadata i32 undef, metadata !17749, metadata !DIExpression()) #25, !dbg !18215
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !18215
  call void @llvm.dbg.value(metadata i32 undef, metadata !17743, metadata !DIExpression()) #25, !dbg !18211
  call void @llvm.dbg.value(metadata i32 undef, metadata !18180, metadata !DIExpression()), !dbg !18184
  %22 = load i32, i32* @announce_remaining, align 4, !dbg !18216
  %23 = sub nsw i32 %22, %15, !dbg !18216
  store i32 %23, i32* @announce_remaining, align 4, !dbg !18184
  call void @llvm.dbg.value(metadata i32 undef, metadata !18180, metadata !DIExpression()), !dbg !18184
  %24 = tail call fastcc %struct._timeout* @first() #26, !dbg !18191
  %25 = icmp eq %struct._timeout* %24, null, !dbg !18192
  br i1 %25, label %28, label %5, !dbg !18193, !llvm.loop !18217

26:                                               ; preds = %5
  %27 = sub nsw i64 %10, %11, !dbg !18219
  store i64 %27, i64* %9, align 8, !dbg !18219
  br label %32, !dbg !18222

28:                                               ; preds = %13, %1
  %29 = phi { i32, i32 } [ %2, %1 ], [ %21, %13 ]
  %30 = phi i32 [ %0, %1 ], [ %23, %13 ], !dbg !18184
  %31 = sext i32 %30 to i64, !dbg !18223
  br label %32, !dbg !18223

32:                                               ; preds = %28, %26
  %33 = phi i64 [ %31, %28 ], [ %11, %26 ], !dbg !18223
  %34 = phi { i32, i32 } [ %29, %28 ], [ %7, %26 ]
  %35 = extractvalue { i32, i32 } %34, 0, !dbg !18184
  %36 = load i64, i64* @curr_tick, align 8, !dbg !18224
  %37 = add i64 %36, %33, !dbg !18224
  store i64 %37, i64* @curr_tick, align 8, !dbg !18224
  store i32 0, i32* @announce_remaining, align 4, !dbg !18225
  %38 = tail call fastcc i32 @next_timeout() #26, !dbg !18226
  tail call void @sys_clock_set_timeout(i32 noundef %38, i1 noundef zeroext false) #27, !dbg !18227
  call void @llvm.dbg.value(metadata i32 %35, metadata !17805, metadata !DIExpression()) #25, !dbg !18228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !18228
  call void @llvm.dbg.value(metadata i32 %35, metadata !17813, metadata !DIExpression()) #25, !dbg !18230
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %35) #25, !dbg !18232, !srcloc !17819
  ret void, !dbg !18233
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !18234 {
  call void @llvm.dbg.value(metadata i64 0, metadata !18238, metadata !DIExpression()), !dbg !18242
  call void @llvm.dbg.value(metadata i32 0, metadata !18239, metadata !DIExpression()), !dbg !18243
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17737, metadata !DIExpression()) #25, !dbg !18244
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #25, !dbg !18246, !srcloc !17752
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !18246
  call void @llvm.dbg.value(metadata i32 %2, metadata !17749, metadata !DIExpression()) #25, !dbg !18248
  call void @llvm.dbg.value(metadata i32 undef, metadata !17750, metadata !DIExpression()) #25, !dbg !18248
  call void @llvm.dbg.value(metadata i32 %2, metadata !17743, metadata !DIExpression()) #25, !dbg !18244
  call void @llvm.dbg.value(metadata i32 %2, metadata !18241, metadata !DIExpression()), !dbg !18243
  call void @llvm.dbg.value(metadata i64 0, metadata !18238, metadata !DIExpression()), !dbg !18242
  call void @llvm.dbg.value(metadata i32 undef, metadata !18239, metadata !DIExpression()), !dbg !18243
  %3 = load i64, i64* @curr_tick, align 8, !dbg !18249
  %4 = tail call fastcc i32 @elapsed.296() #26, !dbg !18252
  call void @llvm.dbg.value(metadata !DIArgList(i32 %4, i64 %3), metadata !18238, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !18242
  call void @llvm.dbg.value(metadata i32 %2, metadata !17805, metadata !DIExpression()) #25, !dbg !18253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* undef, metadata !17810, metadata !DIExpression()) #25, !dbg !18253
  call void @llvm.dbg.value(metadata i32 %2, metadata !17813, metadata !DIExpression()) #25, !dbg !18255
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %2) #25, !dbg !18257, !srcloc !17819
  call void @llvm.dbg.value(metadata i32 undef, metadata !18239, metadata !DIExpression()), !dbg !18243
  %5 = sext i32 %4 to i64, !dbg !18252
  %6 = add i64 %3, %5, !dbg !18258
  ret i64 %6, !dbg !18259
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !18260 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18261
  %2 = trunc i64 %1 to i32, !dbg !18262
  ret i32 %2, !dbg !18263
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !18264 {
  %1 = tail call i64 @sys_clock_tick_get() #26, !dbg !18265
  ret i64 %1, !dbg !18266
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !18267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !18269, metadata !DIExpression()), !dbg !18276
  %2 = icmp eq i32 %0, 0, !dbg !18277
  br i1 %2, label %10, label %3, !dbg !18279

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18280
  call void @llvm.dbg.value(metadata i32 %4, metadata !18270, metadata !DIExpression()), !dbg !18276
  %5 = mul i32 %0, 84, !dbg !18281
  call void @llvm.dbg.value(metadata i32 %5, metadata !18271, metadata !DIExpression()), !dbg !18276
  br label %6, !dbg !18282

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #26, !dbg !18283
  call void @llvm.dbg.value(metadata i32 %7, metadata !18272, metadata !DIExpression()), !dbg !18284
  %8 = sub i32 %7, %4, !dbg !18285
  %9 = icmp ult i32 %8, %5, !dbg !18287
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !18288
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !18289 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #26, !dbg !18290
  ret i32 %1, !dbg !18291
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !18292 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #27, !dbg !18294
  ret i32 %1, !dbg !18295
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !18296 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !18300, metadata !DIExpression()), !dbg !18302
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !18303

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #26, !dbg !18304
  br label %14, !dbg !18308

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !18301, metadata !DIExpression()), !dbg !18302
  %6 = icmp slt i64 %2, -1, !dbg !18309
  br i1 %6, label %7, label %9, !dbg !18312

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !18313
  br label %14, !dbg !18314

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #26, !dbg !18316
  %11 = icmp ugt i64 %2, 1, !dbg !18317
  %12 = select i1 %11, i64 %2, i64 1, !dbg !18317
  %13 = add nsw i64 %10, %12, !dbg !18318
  br label %14, !dbg !18319

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !18320
  ret i64 %15, !dbg !18321
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !18322 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.317, i32 0, i32 0)) #27, !dbg !18324
  ret void, !dbg !18325
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { argmemonly nofree nounwind willreturn }
attributes #6 = { argmemonly nofree nounwind willreturn writeonly }
attributes #7 = { nofree nosync nounwind willreturn }
attributes #8 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #24 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #25 = { nounwind }
attributes #26 = { nobuiltin optsize "no-builtins" }
attributes #27 = { nobuiltin nounwind optsize "no-builtins" }
attributes #28 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #29 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #30 = { nounwind readnone }
attributes #31 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!937, !2, !2683, !27, !379, !403, !2685, !2687, !2721, !414, !458, !2723, !2726, !487, !507, !2728, !2736, !2744, !2760, !2771, !2817, !2819, !2847, !2875, !2918, !2990, !3035, !519, !675, !3063, !711, !721, !746, !969, !3068, !1105, !1171, !1353, !1661, !1885, !3106, !1998, !2088, !3108, !3193, !3257, !2136, !3260, !2143, !2511, !3278, !2531, !3280, !2646, !3283}
!llvm.ident = !{!3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285, !3285}
!llvm.module.flags = !{!3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "log_const_main", scope: !27, file: !294, line: 18, type: !371, isLocal: false, isDefinition: true)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !123, globals: !290, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!29 = !{!30, !39, !42, !46, !116}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_mode", file: !31, line: 44, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/crypto/cipher.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38}
!34 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_ECB", value: 1)
!35 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CBC", value: 2)
!36 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CTR", value: 3)
!37 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_CCM", value: 4)
!38 = !DIEnumerator(name: "CRYPTO_CIPHER_MODE_GCM", value: 5)
!39 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_algo", file: !31, line: 29, baseType: !32, size: 32, elements: !40)
!40 = !{!41}
!41 = !DIEnumerator(name: "CRYPTO_CIPHER_ALGO_AES", value: 1)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cipher_op", file: !31, line: 34, baseType: !32, size: 32, elements: !43)
!43 = !{!44, !45}
!44 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_DECRYPT", value: 0)
!45 = !DIEnumerator(name: "CRYPTO_CIPHER_OP_ENCRYPT", value: 1)
!46 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !47, line: 27, baseType: !32, size: 32, elements: !48)
!47 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!48 = !{!49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115}
!49 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!50 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!51 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!52 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!53 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!54 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!55 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!56 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!57 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!58 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!59 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!60 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!61 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!62 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!63 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!64 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!65 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!100 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!101 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!102 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!103 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!104 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!105 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!106 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!107 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!108 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!109 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!110 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!111 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!112 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!113 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!114 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!115 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!116 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hash_algo", file: !117, line: 26, baseType: !32, size: 32, elements: !118)
!117 = !DIFile(filename: "zephyr/include/zephyr/crypto/hash.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!118 = !{!119, !120, !121, !122}
!119 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA224", value: 1)
!120 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA256", value: 2)
!121 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA384", value: 3)
!122 = !DIEnumerator(name: "CRYPTO_HASH_ALGO_SHA512", value: 4)
!123 = !{!124, !125, !126}
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!125 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !127, size: 32)
!127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !129)
!128 = !DIFile(filename: "zephyr/include/zephyr/crypto/crypto.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!129 = !{!130, !161, !241, !245, !253, !278, !282}
!130 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !127, file: !128, line: 66, baseType: !131, size: 32)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 32)
!132 = !DISubroutineType(types: !133)
!133 = !{!125, !134}
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !136)
!136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !138)
!137 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!138 = !{!139, !143, !144, !145, !154, !155}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !136, file: !137, line: 380, baseType: !140, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !136, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !136, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !136, file: !137, line: 386, baseType: !146, size: 32, offset: 96)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 32)
!147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !148)
!148 = !{!149, !152}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !147, file: !137, line: 359, baseType: !150, size: 8)
!150 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !151)
!151 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !147, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!153 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !136, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !136, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !157, size: 32)
!157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !158)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !137, line: 43, baseType: !159)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !160)
!160 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !127, file: !128, line: 69, baseType: !162, size: 32, offset: 32)
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !163, size: 32)
!163 = !DISubroutineType(types: !164)
!164 = !{!125, !134, !165, !39, !30, !42}
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !167)
!167 = !{!168, !212, !217, !218, !219, !220, !239, !240}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !166, file: !31, line: 116, baseType: !169, size: 64)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !170)
!170 = !{!171, !172}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !169, file: !31, line: 76, baseType: !30, size: 32)
!172 = !DIDerivedType(tag: DW_TAG_member, scope: !169, file: !31, line: 78, baseType: !173, size: 32, offset: 32)
!173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !169, file: !31, line: 78, size: 32, elements: !174)
!174 = !{!175, !190, !195, !197, !210}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !173, file: !31, line: 79, baseType: !176, size: 32)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!178 = !DISubroutineType(types: !179)
!179 = !{!125, !165, !180}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 32)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !182)
!182 = !{!183, !185, !186, !187, !188, !189}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !181, file: !31, line: 183, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !181, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !181, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !181, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !181, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !181, file: !31, line: 208, baseType: !165, size: 32, offset: 160)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !173, file: !31, line: 80, baseType: !191, size: 32)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !192)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 32)
!193 = !DISubroutineType(types: !194)
!194 = !{!125, !165, !180, !184}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !173, file: !31, line: 81, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !192)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !173, file: !31, line: 82, baseType: !198, size: 32)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !199)
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 32)
!200 = !DISubroutineType(types: !201)
!201 = !{!125, !165, !202, !184}
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !204)
!204 = !{!205, !206, !207, !209}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !203, file: !31, line: 219, baseType: !180, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !203, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !203, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!208 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !203, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !173, file: !31, line: 83, baseType: !211, size: 32)
!211 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !199)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !166, file: !31, line: 126, baseType: !213, size: 32, offset: 64)
!213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 119, size: 32, elements: !214)
!214 = !{!215, !216}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !213, file: !31, line: 121, baseType: !184, size: 32)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !213, file: !31, line: 125, baseType: !124, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !166, file: !31, line: 131, baseType: !134, size: 32, offset: 96)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !166, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !166, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !166, file: !31, line: 156, baseType: !221, size: 32, offset: 192)
!221 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !166, file: !31, line: 152, size: 32, elements: !222)
!222 = !{!223, !230, !234}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !221, file: !31, line: 153, baseType: !224, size: 32)
!224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !225)
!225 = !{!226, !229}
!226 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !224, file: !31, line: 88, baseType: !227, size: 16)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !228)
!228 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !224, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !221, file: !31, line: 154, baseType: !231, size: 32)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !232)
!232 = !{!233}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !231, file: !31, line: 96, baseType: !208, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !221, file: !31, line: 155, baseType: !235, size: 32)
!235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !236)
!236 = !{!237, !238}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !235, file: !31, line: 100, baseType: !227, size: 16)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !235, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !166, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !166, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !127, file: !128, line: 74, baseType: !242, size: 32, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 32)
!243 = !DISubroutineType(types: !244)
!244 = !{!125, !134, !165}
!245 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !127, file: !128, line: 77, baseType: !246, size: 32, offset: 96)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 32)
!247 = !DISubroutineType(types: !248)
!248 = !{!125, !134, !249}
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !250)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 32)
!251 = !DISubroutineType(types: !252)
!252 = !{null, !180, !125}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !127, file: !128, line: 81, baseType: !254, size: 32, offset: 128)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 32)
!255 = !DISubroutineType(types: !256)
!256 = !{!125, !134, !257, !116}
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !259)
!259 = !{!260, !261, !262, !276, !277}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !258, file: !117, line: 51, baseType: !134, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !258, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !258, file: !117, line: 65, baseType: !263, size: 32, offset: 64)
!263 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !264)
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DISubroutineType(types: !266)
!266 = !{!125, !257, !267, !153}
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !269)
!269 = !{!270, !271, !274, !275}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !268, file: !117, line: 91, baseType: !184, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !268, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !273, line: 214, baseType: !32)
!273 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!274 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !268, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !268, file: !117, line: 107, baseType: !257, size: 32, offset: 96)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !258, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !127, file: !128, line: 84, baseType: !279, size: 32, offset: 160)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DISubroutineType(types: !281)
!281 = !{!125, !134, !257}
!282 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !127, file: !128, line: 86, baseType: !283, size: 32, offset: 192)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 32)
!284 = !DISubroutineType(types: !285)
!285 = !{!125, !134, !286}
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !287)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 32)
!288 = !DISubroutineType(types: !289)
!289 = !{null, !267, !125}
!290 = !{!25, !291, !314, !316, !318, !320, !324, !327, !329, !334, !339, !344, !349, !351, !356, !361, !366}
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "iv", scope: !293, file: !294, line: 227, type: !311, isLocal: true, isDefinition: true)
!293 = distinct !DISubprogram(name: "cbc_mode", scope: !294, file: !294, line: 205, type: !295, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !297)
!294 = !DIFile(filename: "zephyr/samples/drivers/crypto/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!295 = !DISubroutineType(types: !296)
!296 = !{null, !134}
!297 = !{!298, !299, !303, !307, !308, !309, !310}
!298 = !DILocalVariable(name: "dev", arg: 1, scope: !293, file: !294, line: 205, type: !134)
!299 = !DILocalVariable(name: "encrypted", scope: !293, file: !294, line: 207, type: !300)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 640, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 80)
!303 = !DILocalVariable(name: "decrypted", scope: !293, file: !294, line: 208, type: !304)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 512, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 64)
!307 = !DILocalVariable(name: "ini", scope: !293, file: !294, line: 209, type: !166)
!308 = !DILocalVariable(name: "encrypt", scope: !293, file: !294, line: 214, type: !181)
!309 = !DILocalVariable(name: "decrypt", scope: !293, file: !294, line: 220, type: !181)
!310 = !DILabel(scope: !293, name: "out", file: !294, line: 279)
!311 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 128, elements: !312)
!312 = !{!313}
!313 = !DISubrange(count: 16)
!314 = !DIGlobalVariableExpression(var: !315, expr: !DIExpression())
!315 = distinct !DIGlobalVariable(name: "cap_flags", scope: !27, file: !294, line: 48, type: !208, isLocal: false, isDefinition: true)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "key", scope: !27, file: !294, line: 34, type: !311, isLocal: true, isDefinition: true)
!318 = !DIGlobalVariableExpression(var: !319, expr: !DIExpression())
!319 = distinct !DIGlobalVariable(name: "plaintext", scope: !27, file: !294, line: 39, type: !304, isLocal: true, isDefinition: true)
!320 = !DIGlobalVariableExpression(var: !321, expr: !DIExpression())
!321 = distinct !DIGlobalVariable(name: "cbc_ciphertext", scope: !27, file: !294, line: 195, type: !322, isLocal: true, isDefinition: true)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 640, elements: !301)
!323 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!324 = !DIGlobalVariableExpression(var: !325, expr: !DIExpression())
!325 = distinct !DIGlobalVariable(name: "ctr_ciphertext", scope: !27, file: !294, line: 283, type: !326, isLocal: true, isDefinition: true)
!326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 512, elements: !305)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "ccm_key", scope: !27, file: !294, line: 373, type: !311, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "ccm_data", scope: !27, file: !294, line: 384, type: !331, isLocal: true, isDefinition: true)
!331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 184, elements: !332)
!332 = !{!333}
!333 = !DISubrange(count: 23)
!334 = !DIGlobalVariableExpression(var: !335, expr: !DIExpression())
!335 = distinct !DIGlobalVariable(name: "ccm_hdr", scope: !27, file: !294, line: 381, type: !336, isLocal: true, isDefinition: true)
!336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 64, elements: !337)
!337 = !{!338}
!338 = !DISubrange(count: 8)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "ccm_nonce", scope: !27, file: !294, line: 377, type: !341, isLocal: true, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 104, elements: !342)
!342 = !{!343}
!343 = !DISubrange(count: 13)
!344 = !DIGlobalVariableExpression(var: !345, expr: !DIExpression())
!345 = distinct !DIGlobalVariable(name: "ccm_expected", scope: !27, file: !294, line: 388, type: !346, isLocal: true, isDefinition: true)
!346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 248, elements: !347)
!347 = !{!348}
!348 = !DISubrange(count: 31)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "gcm_key", scope: !27, file: !294, line: 485, type: !311, isLocal: true, isDefinition: true)
!351 = !DIGlobalVariableExpression(var: !352, expr: !DIExpression())
!352 = distinct !DIGlobalVariable(name: "gcm_data", scope: !27, file: !294, line: 496, type: !353, isLocal: true, isDefinition: true)
!353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 336, elements: !354)
!354 = !{!355}
!355 = !DISubrange(count: 42)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "gcm_hdr", scope: !27, file: !294, line: 492, type: !358, isLocal: true, isDefinition: true)
!358 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 160, elements: !359)
!359 = !{!360}
!360 = !DISubrange(count: 20)
!361 = !DIGlobalVariableExpression(var: !362, expr: !DIExpression())
!362 = distinct !DIGlobalVariable(name: "gcm_nonce", scope: !27, file: !294, line: 489, type: !363, isLocal: true, isDefinition: true)
!363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 96, elements: !364)
!364 = !{!365}
!365 = !DISubrange(count: 12)
!366 = !DIGlobalVariableExpression(var: !367, expr: !DIExpression())
!367 = distinct !DIGlobalVariable(name: "gcm_expected", scope: !27, file: !294, line: 502, type: !368, isLocal: true, isDefinition: true)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 464, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: 58)
!371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !374)
!373 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!374 = !{!375, !376}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !372, file: !373, line: 17, baseType: !140, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !372, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!377 = !DIGlobalVariableExpression(var: !378, expr: !DIExpression())
!378 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !379, file: !395, line: 18, type: !396, isLocal: false, isDefinition: true)
!379 = distinct !DICompileUnit(language: DW_LANG_C99, file: !380, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !381, globals: !394, splitDebugInlining: false, nameTableKind: None)
!380 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!381 = !{!22, !124, !24, !382, !384, !386, !272, !125, !387, !388, !390, !392, !393, !184, !227, !140}
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!383 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 32)
!385 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 32)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 32)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 32)
!389 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 32)
!391 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 32)
!394 = !{!377}
!395 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !398)
!398 = !{!399, !400}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !373, line: 17, baseType: !140, size: 32)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !397, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!401 = !DIGlobalVariableExpression(var: !402, expr: !DIExpression())
!402 = distinct !DIGlobalVariable(name: "_char_out", scope: !403, file: !408, line: 54, type: !409, isLocal: false, isDefinition: true)
!403 = distinct !DICompileUnit(language: DW_LANG_C99, file: !404, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !407, splitDebugInlining: false, nameTableKind: None)
!404 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!405 = !{!46}
!406 = !{!124, !125}
!407 = !{!401}
!408 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 32)
!410 = !DISubroutineType(types: !411)
!411 = !{!125, !125}
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !414, file: !431, line: 56, type: !432, isLocal: true, isDefinition: true, align: 32)
!414 = distinct !DICompileUnit(language: DW_LANG_C99, file: !415, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !416, globals: !430, splitDebugInlining: false, nameTableKind: None)
!415 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!416 = !{!417}
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 32)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 379, baseType: !420)
!419 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 224, elements: !421)
!421 = !{!422, !424, !425, !426, !427, !428, !429}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !420, file: !419, line: 372, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !208)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !420, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !420, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !420, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !420, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !420, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !420, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!430 = !{!412}
!431 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!432 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !435)
!434 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!435 = !{!436, !455}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !433, file: !434, line: 60, baseType: !437, size: 32)
!437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 32)
!438 = !DISubroutineType(types: !439)
!439 = !{!125, !440}
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 32)
!441 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !442)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !443)
!443 = !{!444, !445, !446, !447, !453, !454}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !442, file: !137, line: 380, baseType: !140, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !442, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !442, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !442, file: !137, line: 386, baseType: !448, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 32)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !450)
!450 = !{!451, !452}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !449, file: !137, line: 359, baseType: !150, size: 8)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !449, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !442, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !442, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !433, file: !434, line: 65, baseType: !440, size: 32, offset: 32)
!456 = !DIGlobalVariableExpression(var: !457, expr: !DIExpression())
!457 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !458, file: !461, line: 71, type: !462, isLocal: true, isDefinition: true, align: 32)
!458 = distinct !DICompileUnit(language: DW_LANG_C99, file: !459, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !460, splitDebugInlining: false, nameTableKind: None)
!459 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!460 = !{!456}
!461 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !464)
!464 = !{!465, !484}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !463, file: !434, line: 60, baseType: !466, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 32)
!467 = !DISubroutineType(types: !468)
!468 = !{!125, !469}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 32)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !472)
!472 = !{!473, !474, !475, !476, !482, !483}
!473 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !471, file: !137, line: 380, baseType: !140, size: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !471, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !471, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !471, file: !137, line: 386, baseType: !477, size: 32, offset: 96)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 32)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !479)
!479 = !{!480, !481}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !478, file: !137, line: 359, baseType: !150, size: 8)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !478, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !471, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !471, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !463, file: !434, line: 65, baseType: !469, size: 32, offset: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "inv_sbox", scope: !487, file: !501, line: 37, type: !502, isLocal: true, isDefinition: true)
!487 = distinct !DICompileUnit(language: DW_LANG_C99, file: !488, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !489, globals: !500, splitDebugInlining: false, nameTableKind: None)
!488 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!489 = !{!184, !490, !491, !150}
!490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !493)
!492 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/aes.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 32)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !495)
!495 = !{!496}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !494, file: !492, line: 65, baseType: !497, size: 1408)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !32, size: 1408, elements: !498)
!498 = !{!499}
!499 = !DISubrange(count: 44)
!500 = !{!485}
!501 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_decrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 2048, elements: !503)
!503 = !{!504}
!504 = !DISubrange(count: 256)
!505 = !DIGlobalVariableExpression(var: !506, expr: !DIExpression())
!506 = distinct !DIGlobalVariable(name: "sbox", scope: !507, file: !516, line: 37, type: !502, isLocal: true, isDefinition: true)
!507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !509, globals: !515, splitDebugInlining: false, nameTableKind: None)
!508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!509 = !{!510, !490, !184, !150}
!510 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !511)
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 32)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !512, file: !492, line: 65, baseType: !497, size: 1408)
!515 = !{!505}
!516 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/aes_encrypt.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !519, file: !526, line: 17, type: !668, isLocal: false, isDefinition: true)
!519 = distinct !DICompileUnit(language: DW_LANG_C99, file: !520, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !521, globals: !522, splitDebugInlining: false, nameTableKind: None)
!520 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!521 = !{!272, !125, !208, !124}
!522 = !{!517, !523, !664}
!523 = !DIGlobalVariableExpression(var: !524, expr: !DIExpression())
!524 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !525, file: !526, line: 198, type: !650, isLocal: true, isDefinition: true)
!525 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !526, file: !526, line: 175, type: !527, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !645)
!526 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!527 = !DISubroutineType(types: !528)
!528 = !{null, !529}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 32)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !532)
!531 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!532 = !{!533, !599, !612, !613, !614, !615, !621, !640}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !530, file: !531, line: 247, baseType: !534, size: 384)
!534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !535)
!535 = !{!536, !564, !572, !573, !574, !585, !586, !587}
!536 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 60, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 60, size: 64, elements: !538)
!538 = !{!539, !555}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !537, file: !531, line: 61, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !542)
!541 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !543)
!543 = !{!544, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 38, baseType: !545, size: 32)
!545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 38, size: 32, elements: !546)
!546 = !{!547, !549}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !545, file: !541, line: 39, baseType: !548, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !545, file: !541, line: 40, baseType: !548, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, scope: !542, file: !541, line: 42, baseType: !551, size: 32, offset: 32)
!551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !542, file: !541, line: 42, size: 32, elements: !552)
!552 = !{!553, !554}
!553 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !551, file: !541, line: 43, baseType: !548, size: 32)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !551, file: !541, line: 44, baseType: !548, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !537, file: !531, line: 62, baseType: !556, size: 64)
!556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !558)
!557 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!558 = !{!559}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !556, file: !557, line: 50, baseType: !560, size: 64)
!560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !561, size: 64, elements: !562)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 32)
!562 = !{!563}
!563 = !DISubrange(count: 2)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !534, file: !531, line: 68, baseType: !565, size: 32, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 32)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !568)
!567 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !569)
!569 = !{!570}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !568, file: !567, line: 232, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !542)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !534, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !534, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!574 = !DIDerivedType(tag: DW_TAG_member, scope: !534, file: !531, line: 90, baseType: !575, size: 16, offset: 112)
!575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !534, file: !531, line: 90, size: 16, elements: !576)
!576 = !{!577, !584}
!577 = !DIDerivedType(tag: DW_TAG_member, scope: !575, file: !531, line: 91, baseType: !578, size: 16)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !575, file: !531, line: 91, size: 16, elements: !579)
!579 = !{!580, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !578, file: !531, line: 96, baseType: !581, size: 8)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !582)
!582 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !578, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !575, file: !531, line: 100, baseType: !227, size: 16)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !534, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !534, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !534, file: !531, line: 131, baseType: !588, size: 192, offset: 192)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !589)
!589 = !{!590, !591, !597}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !588, file: !567, line: 245, baseType: !540, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !588, file: !567, line: 246, baseType: !592, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !593)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 32)
!594 = !DISubroutineType(types: !595)
!595 = !{null, !596}
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !588, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !391)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !530, file: !531, line: 250, baseType: !600, size: 288, offset: 384)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !602)
!601 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!602 = !{!603, !604, !605, !606, !607, !608, !609, !610, !611}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !600, file: !601, line: 26, baseType: !208, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !600, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !600, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !600, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !600, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !600, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !600, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !600, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !600, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !530, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !530, file: !531, line: 256, baseType: !566, size: 64, offset: 704)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !530, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !530, file: !531, line: 300, baseType: !616, size: 96, offset: 800)
!616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !617)
!617 = !{!618, !619, !620}
!618 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !616, file: !531, line: 153, baseType: !22, size: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !616, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !616, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !530, file: !531, line: 325, baseType: !622, size: 32, offset: 896)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 32)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !625)
!624 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!625 = !{!626, !635, !636}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !623, file: !624, line: 5074, baseType: !627, size: 96)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !629)
!628 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!629 = !{!630, !633, !634}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !627, file: !628, line: 57, baseType: !631, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 32)
!632 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !628, line: 57, flags: DIFlagFwdDecl)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !627, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !627, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !623, file: !624, line: 5075, baseType: !566, size: 64, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !623, file: !624, line: 5076, baseType: !637, offset: 160)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!638 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!639 = !{}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !530, file: !531, line: 343, baseType: !641, size: 64, offset: 928)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !642)
!642 = !{!643, !644}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !641, file: !601, line: 63, baseType: !208, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !641, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!645 = !{!646, !647, !648, !649}
!646 = !DILocalVariable(name: "thread", arg: 1, scope: !525, file: !526, line: 175, type: !529)
!647 = !DILocalVariable(name: "region_num", scope: !525, file: !526, line: 200, type: !150)
!648 = !DILocalVariable(name: "guard_start", scope: !525, file: !526, line: 265, type: !22)
!649 = !DILocalVariable(name: "guard_size", scope: !525, file: !526, line: 266, type: !272)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !651, size: 96, elements: !662)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !653)
!652 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!653 = !{!654, !655, !656}
!654 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !651, file: !652, line: 53, baseType: !22, size: 32)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !651, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !651, file: !652, line: 55, baseType: !657, size: 32, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !659)
!658 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !660)
!660 = !{!661}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !659, file: !658, line: 150, baseType: !208, size: 32)
!662 = !{!663}
!663 = !DISubrange(count: 1)
!664 = !DIGlobalVariableExpression(var: !665, expr: !DIExpression())
!665 = distinct !DIGlobalVariable(name: "static_regions", scope: !519, file: !526, line: 62, type: !666, isLocal: true, isDefinition: true)
!666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !667, size: 96, elements: !662)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !651)
!668 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !669)
!669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !670)
!670 = !{!671, !672}
!671 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !669, file: !373, line: 17, baseType: !140, size: 32)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !669, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !675, file: !708, line: 39, type: !150, isLocal: true, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !677, globals: !707, splitDebugInlining: false, nameTableKind: None)
!676 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!677 = !{!678, !124, !125, !695, !150}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 32)
!679 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !680, line: 1226, baseType: !681)
!680 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 1213, size: 352, elements: !682)
!682 = !{!683, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !681, file: !680, line: 1215, baseType: !684, size: 32)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !423)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !681, file: !680, line: 1216, baseType: !423, size: 32, offset: 32)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !681, file: !680, line: 1217, baseType: !423, size: 32, offset: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !681, file: !680, line: 1218, baseType: !423, size: 32, offset: 96)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !681, file: !680, line: 1219, baseType: !423, size: 32, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !681, file: !680, line: 1220, baseType: !423, size: 32, offset: 160)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !681, file: !680, line: 1221, baseType: !423, size: 32, offset: 192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !681, file: !680, line: 1222, baseType: !423, size: 32, offset: 224)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !681, file: !680, line: 1223, baseType: !423, size: 32, offset: 256)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !681, file: !680, line: 1224, baseType: !423, size: 32, offset: 288)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !681, file: !680, line: 1225, baseType: !423, size: 32, offset: 320)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 32)
!696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !699)
!698 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!699 = !{!700, !701, !702}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !697, file: !698, line: 29, baseType: !208, size: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !697, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !697, file: !698, line: 37, baseType: !703, size: 32, offset: 64)
!703 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !704)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !705)
!705 = !{!706}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !704, file: !658, line: 143, baseType: !208, size: 32)
!707 = !{!673}
!708 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !711, file: !718, line: 21, type: !409, isLocal: true, isDefinition: true)
!711 = distinct !DICompileUnit(language: DW_LANG_C99, file: !712, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !713, globals: !717, splitDebugInlining: false, nameTableKind: None)
!712 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!713 = !{!714, !125, !124}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !716, line: 22, baseType: !125)
!716 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!717 = !{!709}
!718 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !721, file: !726, line: 13, type: !743, isLocal: true, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !723, splitDebugInlining: false, nameTableKind: None)
!722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!723 = !{!724, !719}
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "mpu_config", scope: !721, file: !726, line: 37, type: !727, isLocal: false, isDefinition: true)
!726 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !698, line: 41, size: 64, elements: !729)
!729 = !{!730, !731}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !728, file: !698, line: 43, baseType: !208, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !728, file: !698, line: 45, baseType: !732, size: 32, offset: 32)
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !698, line: 27, size: 96, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !734, file: !698, line: 29, baseType: !208, size: 32)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !734, file: !698, line: 31, baseType: !140, size: 32, offset: 32)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !734, file: !698, line: 37, baseType: !739, size: 32, offset: 64)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !658, line: 146, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !658, line: 141, size: 32, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !740, file: !658, line: 143, baseType: !208, size: 32)
!743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !733, size: 192, elements: !562)
!744 = !DIGlobalVariableExpression(var: !745, expr: !DIExpression())
!745 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !746, file: !850, line: 72, type: !932, isLocal: true, isDefinition: true)
!746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !747, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !748, retainedTypes: !836, globals: !847, splitDebugInlining: false, nameTableKind: None)
!747 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!748 = !{!46, !749}
!749 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !419, line: 65, baseType: !125, size: 32, elements: !750)
!750 = !{!751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835}
!751 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!752 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!753 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!754 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!755 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!756 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!757 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!758 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!759 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!760 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!761 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!762 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!763 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!764 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!765 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!766 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!767 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!768 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!769 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!770 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!771 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!772 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!773 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!774 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!775 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!776 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!777 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!778 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!779 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!780 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!781 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!782 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!783 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!784 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!785 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!786 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!787 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!788 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!789 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!790 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!791 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!792 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!793 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!794 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!795 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!796 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!797 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!798 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!799 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!800 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!801 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!802 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!803 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!804 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!805 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!806 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!807 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!808 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!809 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!810 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!811 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!812 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!813 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!814 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!815 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!816 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!817 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!818 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!819 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!820 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!821 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!822 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!823 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!824 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!825 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!826 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!827 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!828 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!829 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!830 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!831 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!832 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!833 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!834 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!835 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!836 = !{!272, !125, !124, !837}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 32)
!838 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !419, line: 364, baseType: !839)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 356, size: 192, elements: !840)
!840 = !{!841, !842, !843, !844, !845, !846}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !839, file: !419, line: 358, baseType: !423, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !839, file: !419, line: 359, baseType: !423, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !839, file: !419, line: 360, baseType: !423, size: 32, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !839, file: !419, line: 361, baseType: !423, size: 32, offset: 96)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !839, file: !419, line: 362, baseType: !423, size: 32, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !839, file: !419, line: 363, baseType: !423, size: 32, offset: 160)
!847 = !{!848, !854, !870, !881, !896, !744, !898, !912, !914, !916, !918, !920, !922, !924, !926, !928, !930}
!848 = !DIGlobalVariableExpression(var: !849, expr: !DIExpression())
!849 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !746, file: !850, line: 424, type: !851, isLocal: false, isDefinition: true, align: 16)
!850 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!851 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 64, elements: !852)
!852 = !{!853}
!853 = !DISubrange(count: 4)
!854 = !DIGlobalVariableExpression(var: !855, expr: !DIExpression())
!855 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !746, file: !850, line: 424, type: !856, isLocal: false, isDefinition: true, align: 32)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !858)
!858 = !{!859, !860, !861, !862, !868, !869}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !857, file: !137, line: 380, baseType: !140, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !857, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !857, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !857, file: !137, line: 386, baseType: !863, size: 32, offset: 96)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 32)
!864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !865)
!865 = !{!866, !867}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !864, file: !137, line: 359, baseType: !150, size: 8)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !864, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !857, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !857, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!870 = !DIGlobalVariableExpression(var: !871, expr: !DIExpression())
!871 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !746, file: !850, line: 424, type: !872, isLocal: true, isDefinition: true, align: 32)
!872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !873)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !874)
!874 = !{!875, !880}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !873, file: !434, line: 60, baseType: !876, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 32)
!877 = !DISubroutineType(types: !878)
!878 = !{!125, !879}
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !873, file: !434, line: 65, baseType: !879, size: 32, offset: 32)
!881 = !DIGlobalVariableExpression(var: !882, expr: !DIExpression())
!882 = distinct !DIGlobalVariable(name: "exti_data", scope: !746, file: !850, line: 423, type: !883, isLocal: true, isDefinition: true)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !850, line: 107, size: 1472, elements: !884)
!884 = !{!885}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !883, file: !850, line: 109, baseType: !886, size: 1472)
!886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !887, size: 1472, elements: !332)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !850, line: 101, size: 64, elements: !888)
!888 = !{!889, !895}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !887, file: !850, line: 102, baseType: !890, size: 32)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !891, line: 63, baseType: !892)
!891 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 32)
!893 = !DISubroutineType(types: !894)
!894 = !{null, !125, !124}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !887, file: !850, line: 103, baseType: !124, size: 32, offset: 32)
!896 = !DIGlobalVariableExpression(var: !897, expr: !DIExpression())
!897 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !746, file: !850, line: 424, type: !864, isLocal: true, isDefinition: true, align: 8)
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !900, file: !850, line: 493, type: !905, isLocal: true, isDefinition: true, align: 32)
!900 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !850, file: !850, line: 460, type: !901, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !903)
!901 = !DISubroutineType(types: !902)
!902 = !{null, !879}
!903 = !{!904}
!904 = !DILocalVariable(name: "dev", arg: 1, scope: !900, file: !850, line: 460, type: !879)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !906)
!906 = !{!907, !909, !910, !911}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !905, file: !10, line: 55, baseType: !908, size: 32)
!908 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !125)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !905, file: !10, line: 57, baseType: !908, size: 32, offset: 32)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !905, file: !10, line: 59, baseType: !124, size: 32, offset: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !905, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !900, file: !850, line: 497, type: !905, isLocal: true, isDefinition: true, align: 32)
!914 = !DIGlobalVariableExpression(var: !915, expr: !DIExpression())
!915 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !900, file: !850, line: 507, type: !905, isLocal: true, isDefinition: true, align: 32)
!916 = !DIGlobalVariableExpression(var: !917, expr: !DIExpression())
!917 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !900, file: !850, line: 512, type: !905, isLocal: true, isDefinition: true, align: 32)
!918 = !DIGlobalVariableExpression(var: !919, expr: !DIExpression())
!919 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !900, file: !850, line: 516, type: !905, isLocal: true, isDefinition: true, align: 32)
!920 = !DIGlobalVariableExpression(var: !921, expr: !DIExpression())
!921 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !900, file: !850, line: 523, type: !905, isLocal: true, isDefinition: true, align: 32)
!922 = !DIGlobalVariableExpression(var: !923, expr: !DIExpression())
!923 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !900, file: !850, line: 527, type: !905, isLocal: true, isDefinition: true, align: 32)
!924 = !DIGlobalVariableExpression(var: !925, expr: !DIExpression())
!925 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !900, file: !850, line: 581, type: !905, isLocal: true, isDefinition: true, align: 32)
!926 = !DIGlobalVariableExpression(var: !927, expr: !DIExpression())
!927 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !900, file: !850, line: 586, type: !905, isLocal: true, isDefinition: true, align: 32)
!928 = !DIGlobalVariableExpression(var: !929, expr: !DIExpression())
!929 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !900, file: !850, line: 591, type: !905, isLocal: true, isDefinition: true, align: 32)
!930 = !DIGlobalVariableExpression(var: !931, expr: !DIExpression())
!931 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !900, file: !850, line: 595, type: !905, isLocal: true, isDefinition: true, align: 32)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !933, size: 736, elements: !332)
!933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !934)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !419, line: 154, baseType: !749)
!935 = !DIGlobalVariableExpression(var: !936, expr: !DIExpression())
!936 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !937, file: !942, line: 22, type: !964, isLocal: false, isDefinition: true, align: 16)
!937 = distinct !DICompileUnit(language: DW_LANG_C99, file: !938, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !939, splitDebugInlining: false, nameTableKind: None)
!938 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!939 = !{!940, !935, !944, !946, !948, !950, !952, !954, !956, !958, !960, !962}
!940 = !DIGlobalVariableExpression(var: !941, expr: !DIExpression())
!941 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !937, file: !942, line: 17, type: !943, isLocal: false, isDefinition: true, align: 16)
!942 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 192, elements: !364)
!944 = !DIGlobalVariableExpression(var: !945, expr: !DIExpression())
!945 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !937, file: !942, line: 29, type: !851, isLocal: false, isDefinition: true, align: 16)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !937, file: !942, line: 36, type: !851, isLocal: false, isDefinition: true, align: 16)
!948 = !DIGlobalVariableExpression(var: !949, expr: !DIExpression())
!949 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !937, file: !942, line: 43, type: !851, isLocal: false, isDefinition: true, align: 16)
!950 = !DIGlobalVariableExpression(var: !951, expr: !DIExpression())
!951 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !937, file: !942, line: 50, type: !851, isLocal: false, isDefinition: true, align: 16)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !937, file: !942, line: 57, type: !851, isLocal: false, isDefinition: true, align: 16)
!954 = !DIGlobalVariableExpression(var: !955, expr: !DIExpression())
!955 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !937, file: !942, line: 64, type: !851, isLocal: false, isDefinition: true, align: 16)
!956 = !DIGlobalVariableExpression(var: !957, expr: !DIExpression())
!957 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !937, file: !942, line: 71, type: !851, isLocal: false, isDefinition: true, align: 16)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!959 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !937, file: !942, line: 78, type: !851, isLocal: false, isDefinition: true, align: 16)
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !937, file: !942, line: 85, type: !851, isLocal: false, isDefinition: true, align: 16)
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !937, file: !942, line: 90, type: !964, isLocal: false, isDefinition: true, align: 16)
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 48, elements: !965)
!965 = !{!966}
!966 = !DISubrange(count: 3)
!967 = !DIGlobalVariableExpression(var: !968, expr: !DIExpression())
!968 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !969, file: !1031, line: 398, type: !1064, isLocal: true, isDefinition: true)
!969 = distinct !DICompileUnit(language: DW_LANG_C99, file: !970, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !971, retainedTypes: !984, globals: !1028, splitDebugInlining: false, nameTableKind: None)
!970 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!971 = !{!972, !46, !977}
!972 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !973, line: 197, baseType: !32, size: 32, elements: !974)
!973 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!974 = !{!975, !976}
!975 = !DIEnumerator(name: "SUCCESS", value: 0)
!976 = !DIEnumerator(name: "ERROR", value: 1)
!977 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !978, line: 44, baseType: !32, size: 32, elements: !979)
!978 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!979 = !{!980, !981, !982, !983}
!980 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!981 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!982 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!983 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!984 = !{!124, !125, !208, !985, !1021, !1027}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 32)
!986 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 510, baseType: !987)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 477, size: 1216, elements: !988)
!988 = !{!989, !990, !991, !992, !993, !994, !995, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !987, file: !419, line: 479, baseType: !423, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !987, file: !419, line: 480, baseType: !423, size: 32, offset: 32)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !987, file: !419, line: 481, baseType: !423, size: 32, offset: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !987, file: !419, line: 482, baseType: !423, size: 32, offset: 96)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !987, file: !419, line: 483, baseType: !423, size: 32, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !987, file: !419, line: 484, baseType: !423, size: 32, offset: 160)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !987, file: !419, line: 485, baseType: !996, size: 64, offset: 192)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 64, elements: !562)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !987, file: !419, line: 486, baseType: !423, size: 32, offset: 256)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !987, file: !419, line: 487, baseType: !423, size: 32, offset: 288)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !987, file: !419, line: 488, baseType: !996, size: 64, offset: 320)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !987, file: !419, line: 489, baseType: !423, size: 32, offset: 384)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !987, file: !419, line: 490, baseType: !423, size: 32, offset: 416)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !987, file: !419, line: 491, baseType: !996, size: 64, offset: 448)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !987, file: !419, line: 492, baseType: !423, size: 32, offset: 512)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !987, file: !419, line: 493, baseType: !423, size: 32, offset: 544)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !987, file: !419, line: 494, baseType: !996, size: 64, offset: 576)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !987, file: !419, line: 495, baseType: !423, size: 32, offset: 640)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !987, file: !419, line: 496, baseType: !423, size: 32, offset: 672)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !987, file: !419, line: 497, baseType: !996, size: 64, offset: 704)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !987, file: !419, line: 498, baseType: !423, size: 32, offset: 768)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !987, file: !419, line: 499, baseType: !423, size: 32, offset: 800)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !987, file: !419, line: 500, baseType: !996, size: 64, offset: 832)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !987, file: !419, line: 501, baseType: !423, size: 32, offset: 896)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !987, file: !419, line: 502, baseType: !423, size: 32, offset: 928)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !987, file: !419, line: 503, baseType: !996, size: 64, offset: 960)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !987, file: !419, line: 504, baseType: !423, size: 32, offset: 1024)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !987, file: !419, line: 505, baseType: !423, size: 32, offset: 1056)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !987, file: !419, line: 506, baseType: !208, size: 32, offset: 1088)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !987, file: !419, line: 507, baseType: !423, size: 32, offset: 1120)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !987, file: !419, line: 508, baseType: !423, size: 32, offset: 1152)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !987, file: !419, line: 509, baseType: !423, size: 32, offset: 1184)
!1021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 32)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1023, line: 343, size: 64, elements: !1024)
!1023 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1024 = !{!1025, !1026}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1022, file: !1023, line: 344, baseType: !208, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1022, file: !1023, line: 345, baseType: !208, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!1028 = !{!1029, !1035, !1051, !1062, !967}
!1029 = !DIGlobalVariableExpression(var: !1030, expr: !DIExpression())
!1030 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !969, file: !1031, line: 752, type: !1032, isLocal: false, isDefinition: true, align: 16)
!1031 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 848, elements: !1033)
!1033 = !{!1034}
!1034 = !DISubrange(count: 53)
!1035 = !DIGlobalVariableExpression(var: !1036, expr: !DIExpression())
!1036 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !969, file: !1031, line: 752, type: !1037, isLocal: false, isDefinition: true, align: 32)
!1037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1038)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1039)
!1039 = !{!1040, !1041, !1042, !1043, !1049, !1050}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1038, file: !137, line: 380, baseType: !140, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1038, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1038, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1038, file: !137, line: 386, baseType: !1044, size: 32, offset: 96)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 32)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1046)
!1046 = !{!1047, !1048}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1045, file: !137, line: 359, baseType: !150, size: 8)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1045, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1038, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1038, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !969, file: !1031, line: 752, type: !1053, isLocal: true, isDefinition: true, align: 32)
!1053 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1054)
!1054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1055)
!1055 = !{!1056, !1061}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1054, file: !434, line: 60, baseType: !1057, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DISubroutineType(types: !1059)
!1059 = !{!125, !1060}
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 32)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1054, file: !434, line: 65, baseType: !1060, size: 32, offset: 32)
!1062 = !DIGlobalVariableExpression(var: !1063, expr: !DIExpression())
!1063 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !969, file: !1031, line: 752, type: !1045, isLocal: true, isDefinition: true, align: 8)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !978, line: 100, size: 224, elements: !1065)
!1065 = !{!1066, !1072, !1073, !1082, !1087, !1092, !1098}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1064, file: !978, line: 101, baseType: !1067, size: 32)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !978, line: 76, baseType: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 32)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!125, !1060, !1071}
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !978, line: 56, baseType: !124)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1064, file: !978, line: 102, baseType: !1067, size: 32, offset: 32)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1064, file: !978, line: 103, baseType: !1074, size: 32, offset: 64)
!1074 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !978, line: 83, baseType: !1075)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!125, !1060, !1071, !1078, !124}
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !978, line: 72, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 32)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{null, !1060, !1071, !124}
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1064, file: !978, line: 104, baseType: !1083, size: 32, offset: 96)
!1083 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !978, line: 79, baseType: !1084)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 32)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!125, !1060, !1071, !1027}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1064, file: !978, line: 105, baseType: !1088, size: 32, offset: 128)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !978, line: 88, baseType: !1089)
!1089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1090, size: 32)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!977, !1060, !1071}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1064, file: !978, line: 106, baseType: !1093, size: 32, offset: 160)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !978, line: 92, baseType: !1094)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 32)
!1095 = !DISubroutineType(types: !1096)
!1096 = !{!125, !1060, !1071, !1097}
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !978, line: 64, baseType: !124)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1064, file: !978, line: 107, baseType: !1099, size: 32, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !978, line: 96, baseType: !1100)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 32)
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!125, !1060, !1071, !124}
!1103 = !DIGlobalVariableExpression(var: !1104, expr: !DIExpression())
!1104 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !1105, file: !1162, line: 603, type: !1164, isLocal: true, isDefinition: true, align: 32)
!1105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1106, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !1107, globals: !1159, splitDebugInlining: false, nameTableKind: None)
!1106 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!1107 = !{!124, !125, !1108}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1111, line: 336, size: 160, elements: !1112)
!1111 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1112 = !{!1113, !1133, !1137, !1141, !1154}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1110, file: !1111, line: 365, baseType: !1114, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 32)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!125, !1117, !1132}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1120)
!1120 = !{!1121, !1122, !1123, !1124, !1130, !1131}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1119, file: !137, line: 380, baseType: !140, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1119, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1119, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1119, file: !137, line: 386, baseType: !1125, size: 32, offset: 96)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1127)
!1127 = !{!1128, !1129}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1126, file: !137, line: 359, baseType: !150, size: 8)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1126, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1119, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1119, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 32)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1110, file: !1111, line: 366, baseType: !1134, size: 32, offset: 32)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 32)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{null, !1117, !151}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1110, file: !1111, line: 374, baseType: !1138, size: 32, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 32)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!125, !1117}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1110, file: !1111, line: 377, baseType: !1142, size: 32, offset: 96)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 32)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!125, !1117, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1147)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1111, line: 122, size: 64, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152, !1153}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1147, file: !1111, line: 123, baseType: !208, size: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1147, file: !1111, line: 124, baseType: !150, size: 8, offset: 32)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1147, file: !1111, line: 125, baseType: !150, size: 8, offset: 40)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1147, file: !1111, line: 126, baseType: !150, size: 8, offset: 48)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1147, file: !1111, line: 127, baseType: !150, size: 8, offset: 56)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1110, file: !1111, line: 379, baseType: !1155, size: 32, offset: 128)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 32)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!125, !1117, !1158}
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 32)
!1159 = !{!1103, !1160}
!1160 = !DIGlobalVariableExpression(var: !1161, expr: !DIExpression())
!1161 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !1105, file: !1162, line: 38, type: !1163, isLocal: true, isDefinition: true)
!1162 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1164 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1166)
!1166 = !{!1167, !1168}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1165, file: !434, line: 60, baseType: !1138, size: 32)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1165, file: !434, line: 65, baseType: !1117, size: 32, offset: 32)
!1169 = !DIGlobalVariableExpression(var: !1170, expr: !DIExpression())
!1170 = distinct !DIGlobalVariable(name: "log_const_tinycrypt", scope: !1171, file: !1177, line: 22, type: !1346, isLocal: false, isDefinition: true)
!1171 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1172, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1173, globals: !1174, splitDebugInlining: false, nameTableKind: None)
!1172 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!1173 = !{!30, !39, !42, !116}
!1174 = !{!1169, !1175, !1178, !1194, !1205, !1207, !1335}
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "__devicehdl_crypto_tinycrypt", scope: !1171, file: !1177, line: 324, type: !964, isLocal: false, isDefinition: true, align: 16)
!1177 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1178 = !DIGlobalVariableExpression(var: !1179, expr: !DIExpression())
!1179 = distinct !DIGlobalVariable(name: "__device_crypto_tinycrypt", scope: !1171, file: !1177, line: 324, type: !1180, isLocal: true, isDefinition: true, align: 32)
!1180 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1192, !1193}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1181, file: !137, line: 380, baseType: !140, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1181, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1181, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1181, file: !137, line: 386, baseType: !1187, size: 32, offset: 96)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 32)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1189)
!1189 = !{!1190, !1191}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1188, file: !137, line: 359, baseType: !150, size: 8)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1188, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1181, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1181, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1194 = !DIGlobalVariableExpression(var: !1195, expr: !DIExpression())
!1195 = distinct !DIGlobalVariable(name: "__init___device_crypto_tinycrypt", scope: !1171, file: !1177, line: 324, type: !1196, isLocal: true, isDefinition: true, align: 32)
!1196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1198)
!1198 = !{!1199, !1204}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1197, file: !434, line: 60, baseType: !1200, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = !DISubroutineType(types: !1202)
!1202 = !{!125, !1203}
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1197, file: !434, line: 65, baseType: !1203, size: 32, offset: 32)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "__devstate_crypto_tinycrypt", scope: !1171, file: !1177, line: 324, type: !1188, isLocal: true, isDefinition: true, align: 8)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "crypto_enc_funcs", scope: !1171, file: !1177, line: 317, type: !1209, isLocal: true, isDefinition: true)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "crypto_driver_api", file: !128, line: 65, size: 224, elements: !1210)
!1210 = !{!1211, !1212, !1288, !1292, !1300, !1323, !1327}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "query_hw_caps", scope: !1209, file: !128, line: 66, baseType: !1200, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_begin_session", scope: !1209, file: !128, line: 69, baseType: !1213, size: 32, offset: 32)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 32)
!1214 = !DISubroutineType(types: !1215)
!1215 = !{!125, !1203, !1216, !39, !30, !42}
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1217, size: 32)
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ctx", file: !31, line: 110, size: 256, elements: !1218)
!1218 = !{!1219, !1261, !1266, !1267, !1268, !1269, !1286, !1287}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1217, file: !31, line: 116, baseType: !1220, size: 64)
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_ops", file: !31, line: 74, size: 64, elements: !1221)
!1221 = !{!1222, !1223}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_mode", scope: !1220, file: !31, line: 76, baseType: !30, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, scope: !1220, file: !31, line: 78, baseType: !1224, size: 32, offset: 32)
!1224 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1220, file: !31, line: 78, size: 32, elements: !1225)
!1225 = !{!1226, !1240, !1245, !1247, !1259}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "block_crypt_hndlr", scope: !1224, file: !31, line: 79, baseType: !1227, size: 32)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "block_op_t", file: !31, line: 57, baseType: !1228)
!1228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1229, size: 32)
!1229 = !DISubroutineType(types: !1230)
!1230 = !{!125, !1216, !1231}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 32)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_pkt", file: !31, line: 180, size: 192, elements: !1233)
!1233 = !{!1234, !1235, !1236, !1237, !1238, !1239}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1232, file: !31, line: 183, baseType: !184, size: 32)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1232, file: !31, line: 186, baseType: !125, size: 32, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1232, file: !31, line: 192, baseType: !184, size: 32, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf_max", scope: !1232, file: !31, line: 197, baseType: !125, size: 32, offset: 96)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "out_len", scope: !1232, file: !31, line: 202, baseType: !125, size: 32, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1232, file: !31, line: 208, baseType: !1216, size: 32, offset: 160)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "cbc_crypt_hndlr", scope: !1224, file: !31, line: 80, baseType: !1241, size: 32)
!1241 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbc_op_t", file: !31, line: 62, baseType: !1242)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 32)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!125, !1216, !1231, !184}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_crypt_hndlr", scope: !1224, file: !31, line: 81, baseType: !1246, size: 32)
!1246 = !DIDerivedType(tag: DW_TAG_typedef, name: "ctr_op_t", file: !31, line: 65, baseType: !1242)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_crypt_hndlr", scope: !1224, file: !31, line: 82, baseType: !1248, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "ccm_op_t", file: !31, line: 68, baseType: !1249)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 32)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!125, !1216, !1252, !184}
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 32)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cipher_aead_pkt", file: !31, line: 217, size: 128, elements: !1254)
!1254 = !{!1255, !1256, !1257, !1258}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "pkt", scope: !1253, file: !31, line: 219, baseType: !1231, size: 32)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "ad", scope: !1253, file: !31, line: 224, baseType: !184, size: 32, offset: 32)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "ad_len", scope: !1253, file: !31, line: 227, baseType: !208, size: 32, offset: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !1253, file: !31, line: 233, baseType: !184, size: 32, offset: 96)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_crypt_hndlr", scope: !1224, file: !31, line: 83, baseType: !1260, size: 32)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcm_op_t", file: !31, line: 71, baseType: !1249)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1217, file: !31, line: 126, baseType: !1262, size: 32, offset: 64)
!1262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1217, file: !31, line: 119, size: 32, elements: !1263)
!1263 = !{!1264, !1265}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "bit_stream", scope: !1262, file: !31, line: 121, baseType: !184, size: 32)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !1262, file: !31, line: 125, baseType: !124, size: 32)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1217, file: !31, line: 131, baseType: !1203, size: 32, offset: 96)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1217, file: !31, line: 140, baseType: !124, size: 32, offset: 128)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "app_sessn_state", scope: !1217, file: !31, line: 146, baseType: !124, size: 32, offset: 160)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "mode_params", scope: !1217, file: !31, line: 156, baseType: !1270, size: 32, offset: 192)
!1270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1217, file: !31, line: 152, size: 32, elements: !1271)
!1271 = !{!1272, !1277, !1281}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "ccm_info", scope: !1270, file: !31, line: 153, baseType: !1273, size: 32)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ccm_params", file: !31, line: 87, size: 32, elements: !1274)
!1274 = !{!1275, !1276}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1273, file: !31, line: 88, baseType: !227, size: 16)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1273, file: !31, line: 89, baseType: !227, size: 16, offset: 16)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_info", scope: !1270, file: !31, line: 154, baseType: !1278, size: 32)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctr_params", file: !31, line: 92, size: 32, elements: !1279)
!1279 = !{!1280}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "ctr_len", scope: !1278, file: !31, line: 96, baseType: !208, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "gcm_info", scope: !1270, file: !31, line: 155, baseType: !1282, size: 32)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gcm_params", file: !31, line: 99, size: 32, elements: !1283)
!1283 = !{!1284, !1285}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "tag_len", scope: !1282, file: !31, line: 100, baseType: !227, size: 16)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "nonce_len", scope: !1282, file: !31, line: 101, baseType: !227, size: 16, offset: 16)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "keylen", scope: !1217, file: !31, line: 161, baseType: !227, size: 16, offset: 224)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1217, file: !31, line: 169, baseType: !227, size: 16, offset: 240)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_free_session", scope: !1209, file: !128, line: 74, baseType: !1289, size: 32, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 32)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!125, !1203, !1216}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "cipher_async_callback_set", scope: !1209, file: !128, line: 77, baseType: !1293, size: 32, offset: 96)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 32)
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!125, !1203, !1296}
!1296 = !DIDerivedType(tag: DW_TAG_typedef, name: "cipher_completion_cb", file: !31, line: 242, baseType: !1297)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 32)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{null, !1231, !125}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "hash_begin_session", scope: !1209, file: !128, line: 81, baseType: !1301, size: 32, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 32)
!1302 = !DISubroutineType(types: !1303)
!1303 = !{!125, !1203, !1304, !116}
!1304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 32)
!1305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_ctx", file: !117, line: 47, size: 128, elements: !1306)
!1306 = !{!1307, !1308, !1309, !1321, !1322}
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !1305, file: !117, line: 51, baseType: !1203, size: 32)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "drv_sessn_state", scope: !1305, file: !117, line: 60, baseType: !124, size: 32, offset: 32)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "hash_hndlr", scope: !1305, file: !117, line: 65, baseType: !1310, size: 32, offset: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_op_t", file: !117, line: 38, baseType: !1311)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 32)
!1312 = !DISubroutineType(types: !1313)
!1313 = !{!125, !1304, !1314, !153}
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1315, size: 32)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_pkt", file: !117, line: 88, size: 128, elements: !1316)
!1316 = !{!1317, !1318, !1319, !1320}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "in_buf", scope: !1315, file: !117, line: 91, baseType: !184, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "in_len", scope: !1315, file: !117, line: 94, baseType: !272, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "out_buf", scope: !1315, file: !117, line: 101, baseType: !184, size: 32, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !1315, file: !117, line: 107, baseType: !1304, size: 32, offset: 96)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "started", scope: !1305, file: !117, line: 70, baseType: !153, size: 8, offset: 96)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1305, file: !117, line: 78, baseType: !227, size: 16, offset: 112)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "hash_free_session", scope: !1209, file: !128, line: 84, baseType: !1324, size: 32, offset: 160)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 32)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!125, !1203, !1304}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "hash_async_callback_set", scope: !1209, file: !128, line: 86, baseType: !1328, size: 32, offset: 192)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 32)
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!125, !1203, !1331}
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "hash_completion_cb", file: !117, line: 114, baseType: !1332)
!1332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1333, size: 32)
!1333 = !DISubroutineType(types: !1334)
!1334 = !{null, !1314, !125}
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "tc_driver_state", scope: !1171, file: !1177, line: 26, type: !1337, isLocal: true, isDefinition: true)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1338, size: 2880, elements: !562)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_shim_drv_state", file: !1339, line: 22, size: 1440, elements: !1340)
!1339 = !DIFile(filename: "zephyr/drivers/crypto/crypto_tc_shim_priv.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1340 = !{!1341, !1342}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "in_use", scope: !1338, file: !1339, line: 23, baseType: !125, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "session_key", scope: !1338, file: !1339, line: 24, baseType: !1343, size: 1408, offset: 32)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !1344)
!1344 = !{!1345}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !1343, file: !492, line: 65, baseType: !497, size: 1408)
!1346 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1347)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1348)
!1348 = !{!1349, !1350}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1347, file: !373, line: 17, baseType: !140, size: 32)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1347, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1351 = !DIGlobalVariableExpression(var: !1352, expr: !DIExpression())
!1352 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1353, file: !1524, line: 762, type: !1636, isLocal: true, isDefinition: true)
!1353 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1354, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1355, retainedTypes: !1373, globals: !1521, splitDebugInlining: false, nameTableKind: None)
!1354 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!1355 = !{!46, !1356, !1362, !1367, !977}
!1356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1357, line: 506, baseType: !32, size: 32, elements: !1358)
!1357 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1358 = !{!1359, !1360, !1361}
!1359 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1360 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1361 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1362 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1357, line: 512, baseType: !32, size: 32, elements: !1363)
!1363 = !{!1364, !1365, !1366}
!1364 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1365 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1366 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !891, line: 43, baseType: !32, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372}
!1369 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1370 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1371 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1372 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1373 = !{!124, !125, !1374, !1444, !1449, !1409, !1362, !1356, !1454, !1455, !208, !1469, !1424, !393, !1481, !1482}
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1357, line: 523, size: 288, elements: !1377)
!1377 = !{!1378, !1399, !1405, !1410, !1414, !1415, !1416, !1420, !1440}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1376, file: !1357, line: 524, baseType: !1379, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1380, size: 32)
!1380 = !DISubroutineType(types: !1381)
!1381 = !{!125, !1382, !1397, !1398}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1389, !1395, !1396}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1384, file: !137, line: 380, baseType: !140, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1384, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1384, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1384, file: !137, line: 386, baseType: !1390, size: 32, offset: 96)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 32)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1391, file: !137, line: 359, baseType: !150, size: 8)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1391, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1384, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1384, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1357, line: 237, baseType: !150)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1357, line: 257, baseType: !208)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1376, file: !1357, line: 530, baseType: !1400, size: 32, offset: 32)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!125, !1382, !1403}
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1357, line: 229, baseType: !208)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1376, file: !1357, line: 532, baseType: !1406, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DISubroutineType(types: !1408)
!1408 = !{!125, !1382, !1409, !1404}
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1357, line: 216, baseType: !208)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1376, file: !1357, line: 535, baseType: !1411, size: 32, offset: 96)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 32)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!125, !1382, !1409}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1376, file: !1357, line: 537, baseType: !1411, size: 32, offset: 128)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1376, file: !1357, line: 539, baseType: !1411, size: 32, offset: 160)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1376, file: !1357, line: 541, baseType: !1417, size: 32, offset: 192)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!125, !1382, !1397, !1356, !1362}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1376, file: !1357, line: 544, baseType: !1421, size: 32, offset: 224)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!125, !1382, !1424, !153}
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 32)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1357, line: 478, size: 96, elements: !1426)
!1426 = !{!1427, !1434, !1439}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1425, file: !1357, line: 482, baseType: !1428, size: 32)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1429, line: 33, baseType: !1430)
!1429 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1429, line: 29, size: 32, elements: !1431)
!1431 = !{!1432}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1430, file: !1429, line: 30, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1425, file: !1357, line: 485, baseType: !1435, size: 32, offset: 32)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1357, line: 464, baseType: !1436)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DISubroutineType(types: !1438)
!1438 = !{null, !1382, !1424, !1409}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1425, file: !1357, line: 493, baseType: !1409, size: 32, offset: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1376, file: !1357, line: 547, baseType: !1441, size: 32, offset: 256)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 32)
!1442 = !DISubroutineType(types: !1443)
!1443 = !{!208, !1382}
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1357, line: 428, size: 32, elements: !1447)
!1447 = !{!1448}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1446, file: !1357, line: 434, baseType: !1409, size: 32)
!1449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1450, size: 32)
!1450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1357, line: 441, size: 32, elements: !1452)
!1452 = !{!1453}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1451, file: !1357, line: 447, baseType: !1409, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 32)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 396, baseType: !1457)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 385, size: 320, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1457, file: !419, line: 387, baseType: !423, size: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1457, file: !419, line: 388, baseType: !423, size: 32, offset: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1457, file: !419, line: 389, baseType: !423, size: 32, offset: 64)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1457, file: !419, line: 390, baseType: !423, size: 32, offset: 96)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1457, file: !419, line: 391, baseType: !423, size: 32, offset: 128)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1457, file: !419, line: 392, baseType: !423, size: 32, offset: 160)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1457, file: !419, line: 393, baseType: !423, size: 32, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1457, file: !419, line: 394, baseType: !423, size: 32, offset: 224)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1457, file: !419, line: 395, baseType: !1468, size: 64, offset: 256)
!1468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 64, elements: !562)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !419, line: 411, baseType: !1471)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 402, size: 320, elements: !1472)
!1472 = !{!1473, !1474, !1475, !1477, !1478, !1479, !1480}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1471, file: !419, line: 404, baseType: !423, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1471, file: !419, line: 405, baseType: !423, size: 32, offset: 32)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1471, file: !419, line: 406, baseType: !1476, size: 128, offset: 64)
!1476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 128, elements: !852)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1471, file: !419, line: 407, baseType: !208, size: 32, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1471, file: !419, line: 408, baseType: !423, size: 32, offset: 224)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1471, file: !419, line: 409, baseType: !423, size: 32, offset: 256)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1471, file: !419, line: 410, baseType: !423, size: 32, offset: 288)
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 32)
!1483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !978, line: 100, size: 224, elements: !1485)
!1485 = !{!1486, !1491, !1492, !1501, !1506, !1511, !1516}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1484, file: !978, line: 101, baseType: !1487, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !978, line: 76, baseType: !1488)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!125, !1382, !1071}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1484, file: !978, line: 102, baseType: !1487, size: 32, offset: 32)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1484, file: !978, line: 103, baseType: !1493, size: 32, offset: 64)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !978, line: 83, baseType: !1494)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 32)
!1495 = !DISubroutineType(types: !1496)
!1496 = !{!125, !1382, !1071, !1497, !124}
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !978, line: 72, baseType: !1498)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DISubroutineType(types: !1500)
!1500 = !{null, !1382, !1071, !124}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1484, file: !978, line: 104, baseType: !1502, size: 32, offset: 96)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !978, line: 79, baseType: !1503)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 32)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!125, !1382, !1071, !1027}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1484, file: !978, line: 105, baseType: !1507, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !978, line: 88, baseType: !1508)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 32)
!1509 = !DISubroutineType(types: !1510)
!1510 = !{!977, !1382, !1071}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1484, file: !978, line: 106, baseType: !1512, size: 32, offset: 160)
!1512 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !978, line: 92, baseType: !1513)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!125, !1382, !1071, !1097}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1484, file: !978, line: 107, baseType: !1517, size: 32, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !978, line: 96, baseType: !1518)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!125, !1382, !1071, !124}
!1521 = !{!1522, !1528, !1530, !1540, !1542, !1544, !1546, !1551, !1553, !1555, !1560, !1562, !1564, !1566, !1568, !1570, !1572, !1574, !1576, !1578, !1580, !1582, !1584, !1586, !1588, !1602, !1604, !1606, !1608, !1610, !1612, !1614, !1616, !1618, !1620, !1622, !1624, !1626, !1628, !1630, !1351, !1632, !1634, !1647, !1649, !1651, !1653, !1655, !1657}
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1353, file: !1524, line: 762, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1524 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 112, elements: !1526)
!1526 = !{!1527}
!1527 = !DISubrange(count: 7)
!1528 = !DIGlobalVariableExpression(var: !1529, expr: !DIExpression())
!1529 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1353, file: !1524, line: 762, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1353, file: !1524, line: 762, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1534)
!1534 = !{!1535, !1539}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1533, file: !434, line: 60, baseType: !1536, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 32)
!1537 = !DISubroutineType(types: !1538)
!1538 = !{!125, !1382}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1533, file: !434, line: 65, baseType: !1382, size: 32, offset: 32)
!1540 = !DIGlobalVariableExpression(var: !1541, expr: !DIExpression())
!1541 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1353, file: !1524, line: 766, type: !1525, isLocal: false, isDefinition: true, align: 16)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1353, file: !1524, line: 766, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1544 = !DIGlobalVariableExpression(var: !1545, expr: !DIExpression())
!1545 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1353, file: !1524, line: 766, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1546 = !DIGlobalVariableExpression(var: !1547, expr: !DIExpression())
!1547 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1353, file: !1524, line: 770, type: !1548, isLocal: false, isDefinition: true, align: 16)
!1548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 96, elements: !1549)
!1549 = !{!1550}
!1550 = !DISubrange(count: 6)
!1551 = !DIGlobalVariableExpression(var: !1552, expr: !DIExpression())
!1552 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1353, file: !1524, line: 770, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1353, file: !1524, line: 770, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1555 = !DIGlobalVariableExpression(var: !1556, expr: !DIExpression())
!1556 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1353, file: !1524, line: 774, type: !1557, isLocal: false, isDefinition: true, align: 16)
!1557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 80, elements: !1558)
!1558 = !{!1559}
!1559 = !DISubrange(count: 5)
!1560 = !DIGlobalVariableExpression(var: !1561, expr: !DIExpression())
!1561 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1353, file: !1524, line: 774, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1562 = !DIGlobalVariableExpression(var: !1563, expr: !DIExpression())
!1563 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1353, file: !1524, line: 774, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1353, file: !1524, line: 778, type: !1557, isLocal: false, isDefinition: true, align: 16)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1353, file: !1524, line: 778, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1568 = !DIGlobalVariableExpression(var: !1569, expr: !DIExpression())
!1569 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1353, file: !1524, line: 778, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1570 = !DIGlobalVariableExpression(var: !1571, expr: !DIExpression())
!1571 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1353, file: !1524, line: 782, type: !1557, isLocal: false, isDefinition: true, align: 16)
!1572 = !DIGlobalVariableExpression(var: !1573, expr: !DIExpression())
!1573 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1353, file: !1524, line: 782, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1574 = !DIGlobalVariableExpression(var: !1575, expr: !DIExpression())
!1575 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1353, file: !1524, line: 782, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1576 = !DIGlobalVariableExpression(var: !1577, expr: !DIExpression())
!1577 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1353, file: !1524, line: 786, type: !1557, isLocal: false, isDefinition: true, align: 16)
!1578 = !DIGlobalVariableExpression(var: !1579, expr: !DIExpression())
!1579 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1353, file: !1524, line: 786, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1580 = !DIGlobalVariableExpression(var: !1581, expr: !DIExpression())
!1581 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1353, file: !1524, line: 786, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1582 = !DIGlobalVariableExpression(var: !1583, expr: !DIExpression())
!1583 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1353, file: !1524, line: 790, type: !1557, isLocal: false, isDefinition: true, align: 16)
!1584 = !DIGlobalVariableExpression(var: !1585, expr: !DIExpression())
!1585 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1353, file: !1524, line: 790, type: !1383, isLocal: false, isDefinition: true, align: 32)
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1353, file: !1524, line: 790, type: !1532, isLocal: true, isDefinition: true, align: 32)
!1588 = !DIGlobalVariableExpression(var: !1589, expr: !DIExpression())
!1589 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1353, file: !1524, line: 762, type: !1590, isLocal: true, isDefinition: true)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1591, line: 237, size: 128, elements: !1592)
!1591 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1592 = !{!1593, !1594, !1595}
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1590, file: !1591, line: 239, baseType: !1451, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1590, file: !1591, line: 241, baseType: !1382, size: 32, offset: 32)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1590, file: !1591, line: 243, baseType: !1596, size: 64, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1429, line: 40, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1429, line: 35, size: 64, elements: !1598)
!1598 = !{!1599, !1601}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1597, file: !1429, line: 36, baseType: !1600, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1597, file: !1429, line: 37, baseType: !1600, size: 32, offset: 32)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1353, file: !1524, line: 762, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1604 = !DIGlobalVariableExpression(var: !1605, expr: !DIExpression())
!1605 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1353, file: !1524, line: 766, type: !1590, isLocal: true, isDefinition: true)
!1606 = !DIGlobalVariableExpression(var: !1607, expr: !DIExpression())
!1607 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1353, file: !1524, line: 766, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1353, file: !1524, line: 770, type: !1590, isLocal: true, isDefinition: true)
!1610 = !DIGlobalVariableExpression(var: !1611, expr: !DIExpression())
!1611 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1353, file: !1524, line: 770, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1353, file: !1524, line: 774, type: !1590, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1615, expr: !DIExpression())
!1615 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1353, file: !1524, line: 774, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1616 = !DIGlobalVariableExpression(var: !1617, expr: !DIExpression())
!1617 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1353, file: !1524, line: 778, type: !1590, isLocal: true, isDefinition: true)
!1618 = !DIGlobalVariableExpression(var: !1619, expr: !DIExpression())
!1619 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1353, file: !1524, line: 778, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1353, file: !1524, line: 782, type: !1590, isLocal: true, isDefinition: true)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1353, file: !1524, line: 782, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1353, file: !1524, line: 786, type: !1590, isLocal: true, isDefinition: true)
!1626 = !DIGlobalVariableExpression(var: !1627, expr: !DIExpression())
!1627 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1353, file: !1524, line: 786, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1628 = !DIGlobalVariableExpression(var: !1629, expr: !DIExpression())
!1629 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1353, file: !1524, line: 790, type: !1590, isLocal: true, isDefinition: true)
!1630 = !DIGlobalVariableExpression(var: !1631, expr: !DIExpression())
!1631 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1353, file: !1524, line: 790, type: !1391, isLocal: true, isDefinition: true, align: 8)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1353, file: !1524, line: 656, type: !1375, isLocal: true, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1353, file: !1524, line: 766, type: !1636, isLocal: true, isDefinition: true)
!1636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1591, line: 224, size: 160, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1637, file: !1591, line: 226, baseType: !1446, size: 32)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1637, file: !1591, line: 228, baseType: !1027, size: 32, offset: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1637, file: !1591, line: 230, baseType: !125, size: 32, offset: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1637, file: !1591, line: 231, baseType: !1643, size: 64, offset: 96)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1023, line: 343, size: 64, elements: !1644)
!1644 = !{!1645, !1646}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1643, file: !1023, line: 344, baseType: !208, size: 32)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1643, file: !1023, line: 345, baseType: !208, size: 32, offset: 32)
!1647 = !DIGlobalVariableExpression(var: !1648, expr: !DIExpression())
!1648 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1353, file: !1524, line: 770, type: !1636, isLocal: true, isDefinition: true)
!1649 = !DIGlobalVariableExpression(var: !1650, expr: !DIExpression())
!1650 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1353, file: !1524, line: 774, type: !1636, isLocal: true, isDefinition: true)
!1651 = !DIGlobalVariableExpression(var: !1652, expr: !DIExpression())
!1652 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1353, file: !1524, line: 778, type: !1636, isLocal: true, isDefinition: true)
!1653 = !DIGlobalVariableExpression(var: !1654, expr: !DIExpression())
!1654 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1353, file: !1524, line: 782, type: !1636, isLocal: true, isDefinition: true)
!1655 = !DIGlobalVariableExpression(var: !1656, expr: !DIExpression())
!1656 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1353, file: !1524, line: 786, type: !1636, isLocal: true, isDefinition: true)
!1657 = !DIGlobalVariableExpression(var: !1658, expr: !DIExpression())
!1658 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1353, file: !1524, line: 790, type: !1636, isLocal: true, isDefinition: true)
!1659 = !DIGlobalVariableExpression(var: !1660, expr: !DIExpression())
!1660 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1661, file: !1802, line: 44, type: !1878, isLocal: false, isDefinition: true)
!1661 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1662, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1663, retainedTypes: !1696, globals: !1799, splitDebugInlining: false, nameTableKind: None)
!1662 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!1663 = !{!46, !1664, !1671, !1678, !1685, !1691, !977}
!1664 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !1111, line: 47, baseType: !32, size: 32, elements: !1665)
!1665 = !{!1666, !1667, !1668, !1669, !1670}
!1666 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1667 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1668 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1669 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1670 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1671 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !1111, line: 75, baseType: !32, size: 32, elements: !1672)
!1672 = !{!1673, !1674, !1675, !1676, !1677}
!1673 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1674 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1675 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1676 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1677 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1678 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !1111, line: 92, baseType: !32, size: 32, elements: !1679)
!1679 = !{!1680, !1681, !1682, !1683, !1684}
!1680 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1681 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1682 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1683 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1684 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1685 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !1111, line: 84, baseType: !32, size: 32, elements: !1686)
!1686 = !{!1687, !1688, !1689, !1690}
!1687 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1688 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1689 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1690 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1691 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !1111, line: 107, baseType: !32, size: 32, elements: !1692)
!1692 = !{!1693, !1694, !1695}
!1693 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1694 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1695 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1696 = !{!124, !125, !1697, !151, !150, !1746, !208, !1071, !1757, !227, !1796, !1798}
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 32)
!1698 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1699)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !1111, line: 336, size: 160, elements: !1700)
!1700 = !{!1701, !1720, !1724, !1728, !1741}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1699, file: !1111, line: 365, baseType: !1702, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DISubroutineType(types: !1704)
!1704 = !{!125, !1705, !1132}
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1707)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1708)
!1708 = !{!1709, !1710, !1711, !1712, !1718, !1719}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1707, file: !137, line: 380, baseType: !140, size: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1707, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1707, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1707, file: !137, line: 386, baseType: !1713, size: 32, offset: 96)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1714, size: 32)
!1714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1715)
!1715 = !{!1716, !1717}
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1714, file: !137, line: 359, baseType: !150, size: 8)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1714, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1707, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1707, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1699, file: !1111, line: 366, baseType: !1721, size: 32, offset: 32)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{null, !1705, !151}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1699, file: !1111, line: 374, baseType: !1725, size: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!125, !1705}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1699, file: !1111, line: 377, baseType: !1729, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DISubroutineType(types: !1731)
!1731 = !{!125, !1705, !1732}
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1734)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !1111, line: 122, size: 64, elements: !1735)
!1735 = !{!1736, !1737, !1738, !1739, !1740}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1734, file: !1111, line: 123, baseType: !208, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1734, file: !1111, line: 124, baseType: !150, size: 8, offset: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1734, file: !1111, line: 125, baseType: !150, size: 8, offset: 40)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1734, file: !1111, line: 126, baseType: !150, size: 8, offset: 48)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1734, file: !1111, line: 127, baseType: !150, size: 8, offset: 56)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1699, file: !1111, line: 379, baseType: !1742, size: 32, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!125, !1705, !1745}
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !419, line: 648, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 639, size: 224, elements: !1749)
!1749 = !{!1750, !1751, !1752, !1753, !1754, !1755, !1756}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1748, file: !419, line: 641, baseType: !423, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1748, file: !419, line: 642, baseType: !423, size: 32, offset: 32)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1748, file: !419, line: 643, baseType: !423, size: 32, offset: 64)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1748, file: !419, line: 644, baseType: !423, size: 32, offset: 96)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1748, file: !419, line: 645, baseType: !423, size: 32, offset: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1748, file: !419, line: 646, baseType: !423, size: 32, offset: 160)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1748, file: !419, line: 647, baseType: !423, size: 32, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !978, line: 100, size: 224, elements: !1760)
!1760 = !{!1761, !1766, !1767, !1776, !1781, !1786, !1791}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1759, file: !978, line: 101, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !978, line: 76, baseType: !1763)
!1763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1764, size: 32)
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!125, !1705, !1071}
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1759, file: !978, line: 102, baseType: !1762, size: 32, offset: 32)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1759, file: !978, line: 103, baseType: !1768, size: 32, offset: 64)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !978, line: 83, baseType: !1769)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1770, size: 32)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!125, !1705, !1071, !1772, !124}
!1772 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !978, line: 72, baseType: !1773)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 32)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{null, !1705, !1071, !124}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1759, file: !978, line: 104, baseType: !1777, size: 32, offset: 96)
!1777 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !978, line: 79, baseType: !1778)
!1778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1779, size: 32)
!1779 = !DISubroutineType(types: !1780)
!1780 = !{!125, !1705, !1071, !1027}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1759, file: !978, line: 105, baseType: !1782, size: 32, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !978, line: 88, baseType: !1783)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 32)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!977, !1705, !1071}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1759, file: !978, line: 106, baseType: !1787, size: 32, offset: 160)
!1787 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !978, line: 92, baseType: !1788)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 32)
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!125, !1705, !1071, !1097}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1759, file: !978, line: 107, baseType: !1792, size: 32, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !978, line: 96, baseType: !1793)
!1793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 32)
!1794 = !DISubroutineType(types: !1795)
!1795 = !{!125, !1705, !1071, !124}
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !1797)
!1797 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 32)
!1799 = !{!1659, !1800, !1804, !1806, !1813, !1815, !1859, !1862, !1864, !1867, !1870, !1872}
!1800 = !DIGlobalVariableExpression(var: !1801, expr: !DIExpression())
!1801 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1661, file: !1802, line: 1914, type: !1803, isLocal: false, isDefinition: true, align: 16)
!1802 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !157, size: 128, elements: !337)
!1804 = !DIGlobalVariableExpression(var: !1805, expr: !DIExpression())
!1805 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1661, file: !1802, line: 1914, type: !1706, isLocal: false, isDefinition: true, align: 32)
!1806 = !DIGlobalVariableExpression(var: !1807, expr: !DIExpression())
!1807 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1661, file: !1802, line: 1914, type: !1808, isLocal: true, isDefinition: true, align: 32)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1809)
!1809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1810)
!1810 = !{!1811, !1812}
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1809, file: !434, line: 60, baseType: !1725, size: 32)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1809, file: !434, line: 65, baseType: !1705, size: 32, offset: 32)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1661, file: !1802, line: 1914, type: !1714, isLocal: true, isDefinition: true, align: 8)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1661, file: !1802, line: 1914, type: !1817, isLocal: true, isDefinition: true)
!1817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1818)
!1818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1819, line: 22, size: 224, elements: !1820)
!1819 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1820 = !{!1821, !1822, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1818, file: !1819, line: 24, baseType: !1746, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1818, file: !1819, line: 26, baseType: !1823, size: 32, offset: 32)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1825)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !1023, line: 343, size: 64, elements: !1826)
!1826 = !{!1827, !1828}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1825, file: !1023, line: 344, baseType: !208, size: 32)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1825, file: !1023, line: 345, baseType: !208, size: 32, offset: 32)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1818, file: !1819, line: 28, baseType: !272, size: 32, offset: 64)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1818, file: !1819, line: 30, baseType: !153, size: 8, offset: 96)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1818, file: !1819, line: 32, baseType: !125, size: 32, offset: 128)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1818, file: !1819, line: 34, baseType: !153, size: 8, offset: 160)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1818, file: !1819, line: 36, baseType: !153, size: 8, offset: 168)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1818, file: !1819, line: 38, baseType: !153, size: 8, offset: 176)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1818, file: !1819, line: 40, baseType: !153, size: 8, offset: 184)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1818, file: !1819, line: 41, baseType: !1837, size: 32, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 32)
!1838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1839)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1840, line: 60, size: 64, elements: !1841)
!1840 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1841 = !{!1842, !1858}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1839, file: !1840, line: 69, baseType: !1843, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1840, line: 50, size: 64, elements: !1846)
!1846 = !{!1847, !1856, !1857}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1845, file: !1840, line: 52, baseType: !1848, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1850)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1851, line: 37, baseType: !1852)
!1851 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1851, line: 32, size: 64, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1852, file: !1851, line: 34, baseType: !208, size: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1852, file: !1851, line: 36, baseType: !208, size: 32, offset: 32)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1845, file: !1840, line: 54, baseType: !150, size: 8, offset: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1845, file: !1840, line: 56, baseType: !150, size: 8, offset: 40)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1839, file: !1840, line: 71, baseType: !150, size: 8, offset: 32)
!1859 = !DIGlobalVariableExpression(var: !1860, expr: !DIExpression())
!1860 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1661, file: !1802, line: 1914, type: !1861, isLocal: true, isDefinition: true)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1824, size: 64, elements: !662)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1661, file: !1802, line: 1914, type: !1838, isLocal: true, isDefinition: true)
!1864 = !DIGlobalVariableExpression(var: !1865, expr: !DIExpression())
!1865 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1661, file: !1802, line: 1914, type: !1866, isLocal: true, isDefinition: true)
!1866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1844, size: 64, elements: !662)
!1867 = !DIGlobalVariableExpression(var: !1868, expr: !DIExpression())
!1868 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1661, file: !1802, line: 1914, type: !1869, isLocal: true, isDefinition: true)
!1869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1849, size: 128, elements: !562)
!1870 = !DIGlobalVariableExpression(var: !1871, expr: !DIExpression())
!1871 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1661, file: !1802, line: 1539, type: !1698, isLocal: true, isDefinition: true)
!1872 = !DIGlobalVariableExpression(var: !1873, expr: !DIExpression())
!1873 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1661, file: !1802, line: 1914, type: !1874, isLocal: true, isDefinition: true)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1819, line: 74, size: 64, elements: !1875)
!1875 = !{!1876, !1877}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1874, file: !1819, line: 76, baseType: !208, size: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1874, file: !1819, line: 78, baseType: !1705, size: 32, offset: 32)
!1878 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1879, file: !373, line: 17, baseType: !140, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1879, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!1883 = !DIGlobalVariableExpression(var: !1884, expr: !DIExpression())
!1884 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1885, file: !1963, line: 65, type: !423, isLocal: true, isDefinition: true)
!1885 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1886, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1887, retainedTypes: !1888, globals: !1960, splitDebugInlining: false, nameTableKind: None)
!1886 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!1887 = !{!749}
!1888 = !{!1889, !1891, !908, !150, !208, !1899, !1930}
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !1890, line: 46, baseType: !598)
!1890 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1898}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1893, file: !680, line: 766, baseType: !423, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1893, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1893, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1893, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !1902)
!1902 = !{!1903, !1905, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1920, !1925, !1929}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1901, file: !680, line: 413, baseType: !1904, size: 256)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 256, elements: !337)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1901, file: !680, line: 414, baseType: !1906, size: 768, offset: 256)
!1906 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 768, elements: !1907)
!1907 = !{!1908}
!1908 = !DISubrange(count: 24)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1901, file: !680, line: 415, baseType: !1904, size: 256, offset: 1024)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1901, file: !680, line: 416, baseType: !1906, size: 768, offset: 1280)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1901, file: !680, line: 417, baseType: !1904, size: 256, offset: 2048)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1901, file: !680, line: 418, baseType: !1906, size: 768, offset: 2304)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1901, file: !680, line: 419, baseType: !1904, size: 256, offset: 3072)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1901, file: !680, line: 420, baseType: !1906, size: 768, offset: 3328)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1901, file: !680, line: 421, baseType: !1904, size: 256, offset: 4096)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1901, file: !680, line: 422, baseType: !1917, size: 1792, offset: 4352)
!1917 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 1792, elements: !1918)
!1918 = !{!1919}
!1919 = !DISubrange(count: 56)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1901, file: !680, line: 423, baseType: !1921, size: 1920, offset: 6144)
!1921 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1922, size: 1920, elements: !1923)
!1922 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !150)
!1923 = !{!1924}
!1924 = !DISubrange(count: 240)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1901, file: !680, line: 424, baseType: !1926, size: 20608, offset: 8064)
!1926 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 20608, elements: !1927)
!1927 = !{!1928}
!1928 = !DISubrange(count: 644)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1901, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 32)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !1933)
!1933 = !{!1934, !1935, !1936, !1937, !1938, !1939, !1940, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1951, !1952, !1953, !1955, !1957, !1959}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1932, file: !680, line: 447, baseType: !684, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1932, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1932, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1932, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1932, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1932, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1932, file: !680, line: 453, baseType: !1941, size: 96, offset: 192)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1922, size: 96, elements: !364)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1932, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1932, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1932, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1932, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1932, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1932, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1932, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1932, file: !680, line: 461, baseType: !1950, size: 64, offset: 512)
!1950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 64, elements: !562)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1932, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1932, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1932, file: !680, line: 464, baseType: !1954, size: 128, offset: 640)
!1954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 128, elements: !852)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1932, file: !680, line: 465, baseType: !1956, size: 160, offset: 768)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !684, size: 160, elements: !1558)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1932, file: !680, line: 466, baseType: !1958, size: 160, offset: 928)
!1958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !208, size: 160, elements: !1558)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1932, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!1960 = !{!1961, !1987, !1990, !1992, !1994, !1883}
!1961 = !DIGlobalVariableExpression(var: !1962, expr: !DIExpression())
!1962 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1885, file: !1963, line: 285, type: !1964, isLocal: true, isDefinition: true, align: 32)
!1963 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1965)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !1966)
!1966 = !{!1967, !1986}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1965, file: !434, line: 60, baseType: !1968, size: 32)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 32)
!1969 = !DISubroutineType(types: !1970)
!1970 = !{!125, !1971}
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 32)
!1972 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !1974)
!1974 = !{!1975, !1976, !1977, !1978, !1984, !1985}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1973, file: !137, line: 380, baseType: !140, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1973, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1973, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1973, file: !137, line: 386, baseType: !1979, size: 32, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 32)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !1981)
!1981 = !{!1982, !1983}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1980, file: !137, line: 359, baseType: !150, size: 8)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1980, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1973, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1973, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1965, file: !434, line: 65, baseType: !1971, size: 32, offset: 32)
!1987 = !DIGlobalVariableExpression(var: !1988, expr: !DIExpression())
!1988 = distinct !DIGlobalVariable(name: "lock", scope: !1885, file: !1963, line: 34, type: !1989, isLocal: true, isDefinition: true)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!1990 = !DIGlobalVariableExpression(var: !1991, expr: !DIExpression())
!1991 = distinct !DIGlobalVariable(name: "last_load", scope: !1885, file: !1963, line: 36, type: !208, isLocal: true, isDefinition: true)
!1992 = !DIGlobalVariableExpression(var: !1993, expr: !DIExpression())
!1993 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1885, file: !1963, line: 48, type: !208, isLocal: true, isDefinition: true)
!1994 = !DIGlobalVariableExpression(var: !1995, expr: !DIExpression())
!1995 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1885, file: !1963, line: 54, type: !208, isLocal: true, isDefinition: true)
!1996 = !DIGlobalVariableExpression(var: !1997, expr: !DIExpression())
!1997 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1998, file: !2080, line: 22, type: !2082, isLocal: true, isDefinition: true)
!1998 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1999, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2000, retainedTypes: !2001, globals: !2077, splitDebugInlining: false, nameTableKind: None)
!1999 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2000 = !{!1356, !1362}
!2001 = !{!2002, !2066, !2071, !1409, !1362, !1356, !2076, !124}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1357, line: 523, size: 288, elements: !2005)
!2005 = !{!2006, !2025, !2029, !2033, !2037, !2038, !2039, !2043, !2062}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !2004, file: !1357, line: 524, baseType: !2007, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 32)
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!125, !2010, !1397, !1398}
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2012)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2013)
!2013 = !{!2014, !2015, !2016, !2017, !2023, !2024}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2012, file: !137, line: 380, baseType: !140, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2012, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2012, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2012, file: !137, line: 386, baseType: !2018, size: 32, offset: 96)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2020)
!2020 = !{!2021, !2022}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2019, file: !137, line: 359, baseType: !150, size: 8)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2019, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2012, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2012, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !2004, file: !1357, line: 530, baseType: !2026, size: 32, offset: 32)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = !DISubroutineType(types: !2028)
!2028 = !{!125, !2010, !1403}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !2004, file: !1357, line: 532, baseType: !2030, size: 32, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 32)
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!125, !2010, !1409, !1404}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !2004, file: !1357, line: 535, baseType: !2034, size: 32, offset: 96)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!125, !2010, !1409}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !2004, file: !1357, line: 537, baseType: !2034, size: 32, offset: 128)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !2004, file: !1357, line: 539, baseType: !2034, size: 32, offset: 160)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !2004, file: !1357, line: 541, baseType: !2040, size: 32, offset: 192)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 32)
!2041 = !DISubroutineType(types: !2042)
!2042 = !{!125, !2010, !1397, !1356, !1362}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !2004, file: !1357, line: 544, baseType: !2044, size: 32, offset: 224)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 32)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!125, !2010, !2047, !153}
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 32)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1357, line: 478, size: 96, elements: !2049)
!2049 = !{!2050, !2056, !2061}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2048, file: !1357, line: 482, baseType: !2051, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1429, line: 33, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1429, line: 29, size: 32, elements: !2053)
!2053 = !{!2054}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2052, file: !1429, line: 30, baseType: !2055, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2048, file: !1357, line: 485, baseType: !2057, size: 32, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1357, line: 464, baseType: !2058)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 32)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{null, !2010, !2047, !1409}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !2048, file: !1357, line: 493, baseType: !1409, size: 32, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !2004, file: !1357, line: 547, baseType: !2063, size: 32, offset: 256)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 32)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!208, !2010}
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2068)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1357, line: 428, size: 32, elements: !2069)
!2069 = !{!2070}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !2068, file: !1357, line: 434, baseType: !1409, size: 32)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 32)
!2072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2073)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1357, line: 441, size: 32, elements: !2074)
!2074 = !{!2075}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2073, file: !1357, line: 447, baseType: !1409, size: 32)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 32)
!2077 = !{!2078, !1996}
!2078 = !DIGlobalVariableExpression(var: !2079, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!2079 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1998, file: !2080, line: 37, type: !2081, isLocal: true, isDefinition: true)
!2080 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2083, size: 352, elements: !2084)
!2083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2010)
!2084 = !{!2085}
!2085 = !DISubrange(count: 11)
!2086 = !DIGlobalVariableExpression(var: !2087, expr: !DIExpression())
!2087 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !2088, file: !2129, line: 139, type: !2133, isLocal: false, isDefinition: true)
!2088 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2089, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2090, globals: !2126, splitDebugInlining: false, nameTableKind: None)
!2089 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2090 = !{!2091}
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 510, baseType: !2093)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 477, size: 1216, elements: !2094)
!2094 = !{!2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2093, file: !419, line: 479, baseType: !423, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2093, file: !419, line: 480, baseType: !423, size: 32, offset: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2093, file: !419, line: 481, baseType: !423, size: 32, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2093, file: !419, line: 482, baseType: !423, size: 32, offset: 96)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2093, file: !419, line: 483, baseType: !423, size: 32, offset: 128)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2093, file: !419, line: 484, baseType: !423, size: 32, offset: 160)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2093, file: !419, line: 485, baseType: !996, size: 64, offset: 192)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2093, file: !419, line: 486, baseType: !423, size: 32, offset: 256)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2093, file: !419, line: 487, baseType: !423, size: 32, offset: 288)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2093, file: !419, line: 488, baseType: !996, size: 64, offset: 320)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2093, file: !419, line: 489, baseType: !423, size: 32, offset: 384)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2093, file: !419, line: 490, baseType: !423, size: 32, offset: 416)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2093, file: !419, line: 491, baseType: !996, size: 64, offset: 448)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2093, file: !419, line: 492, baseType: !423, size: 32, offset: 512)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2093, file: !419, line: 493, baseType: !423, size: 32, offset: 544)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2093, file: !419, line: 494, baseType: !996, size: 64, offset: 576)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2093, file: !419, line: 495, baseType: !423, size: 32, offset: 640)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2093, file: !419, line: 496, baseType: !423, size: 32, offset: 672)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2093, file: !419, line: 497, baseType: !996, size: 64, offset: 704)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2093, file: !419, line: 498, baseType: !423, size: 32, offset: 768)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2093, file: !419, line: 499, baseType: !423, size: 32, offset: 800)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2093, file: !419, line: 500, baseType: !996, size: 64, offset: 832)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2093, file: !419, line: 501, baseType: !423, size: 32, offset: 896)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2093, file: !419, line: 502, baseType: !423, size: 32, offset: 928)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2093, file: !419, line: 503, baseType: !996, size: 64, offset: 960)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2093, file: !419, line: 504, baseType: !423, size: 32, offset: 1024)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2093, file: !419, line: 505, baseType: !423, size: 32, offset: 1056)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2093, file: !419, line: 506, baseType: !208, size: 32, offset: 1088)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2093, file: !419, line: 507, baseType: !423, size: 32, offset: 1120)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2093, file: !419, line: 508, baseType: !423, size: 32, offset: 1152)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2093, file: !419, line: 509, baseType: !423, size: 32, offset: 1184)
!2126 = !{!2127, !2130, !2086}
!2127 = !DIGlobalVariableExpression(var: !2128, expr: !DIExpression())
!2128 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2088, file: !2129, line: 137, type: !208, isLocal: false, isDefinition: true)
!2129 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !2088, file: !2129, line: 138, type: !2132, isLocal: false, isDefinition: true)
!2132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 128, elements: !312)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 64, elements: !337)
!2134 = !DIGlobalVariableExpression(var: !2135, expr: !DIExpression())
!2135 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !2136, file: !2139, line: 23, type: !2140, isLocal: false, isDefinition: true)
!2136 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2137, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, globals: !2138, splitDebugInlining: false, nameTableKind: None)
!2137 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2138 = !{!2134}
!2139 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !125)
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "log_const_os", scope: !2143, file: !2147, line: 37, type: !2399, isLocal: false, isDefinition: true)
!2143 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2144, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2145, retainedTypes: !2154, globals: !2227, splitDebugInlining: false, nameTableKind: None)
!2144 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2145 = !{!2146, !46, !749}
!2146 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !2147, line: 63, baseType: !32, size: 32, elements: !2148)
!2147 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2148 = !{!2149, !2150, !2151, !2152, !2153}
!2149 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!2150 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!2151 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!2152 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!2153 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!2154 = !{!272, !124, !125, !2155, !393, !208, !2185, !908, !150, !2210}
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2157)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !2158, line: 51, size: 64, elements: !2159)
!2158 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2159 = !{!2160, !2180}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !2157, file: !2158, line: 52, baseType: !2161, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !2158, line: 38, baseType: !2162)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 32)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{!125, !2165, !184, !227}
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 32)
!2166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2167)
!2167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !2168)
!2168 = !{!2169, !2170, !2171, !2172, !2178, !2179}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2167, file: !137, line: 380, baseType: !140, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !2167, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !2167, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2167, file: !137, line: 386, baseType: !2173, size: 32, offset: 96)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 32)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !2174, file: !137, line: 359, baseType: !150, size: 8)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2174, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2167, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !2167, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !2157, file: !2158, line: 53, baseType: !2181, size: 32, offset: 32)
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !2158, line: 47, baseType: !2182)
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 32)
!2183 = !DISubroutineType(types: !2184)
!2184 = !{!125, !2165, !184, !227, !208}
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!2186 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2187)
!2187 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2188)
!2188 = !{!2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209}
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2187, file: !680, line: 447, baseType: !684, size: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2187, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2187, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2187, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2187, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2187, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2187, file: !680, line: 453, baseType: !1941, size: 96, offset: 192)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2187, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2187, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2187, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2187, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2187, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2187, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2187, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2187, file: !680, line: 461, baseType: !1950, size: 64, offset: 512)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2187, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2187, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2187, file: !680, line: 464, baseType: !1954, size: 128, offset: 640)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2187, file: !680, line: 465, baseType: !1956, size: 160, offset: 768)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2187, file: !680, line: 466, baseType: !1958, size: 160, offset: 928)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2187, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 32)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2212)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2213)
!2213 = !{!2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2212, file: !680, line: 413, baseType: !1904, size: 256)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2212, file: !680, line: 414, baseType: !1906, size: 768, offset: 256)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2212, file: !680, line: 415, baseType: !1904, size: 256, offset: 1024)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2212, file: !680, line: 416, baseType: !1906, size: 768, offset: 1280)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2212, file: !680, line: 417, baseType: !1904, size: 256, offset: 2048)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2212, file: !680, line: 418, baseType: !1906, size: 768, offset: 2304)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2212, file: !680, line: 419, baseType: !1904, size: 256, offset: 3072)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2212, file: !680, line: 420, baseType: !1906, size: 768, offset: 3328)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2212, file: !680, line: 421, baseType: !1904, size: 256, offset: 4096)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2212, file: !680, line: 422, baseType: !1917, size: 1792, offset: 4352)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2212, file: !680, line: 423, baseType: !1921, size: 1920, offset: 6144)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2212, file: !680, line: 424, baseType: !1926, size: 20608, offset: 8064)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2212, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2227 = !{!2141, !2228, !2350, !2359, !2361, !2364, !2369, !2371, !2376}
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(name: "_kernel", scope: !2143, file: !2147, line: 40, type: !2230, isLocal: false, isDefinition: true)
!2230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !567, line: 158, size: 288, elements: !2231)
!2231 = !{!2232, !2345}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !2230, file: !567, line: 159, baseType: !2233, size: 192)
!2233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2234, size: 192, elements: !662)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !567, line: 100, size: 192, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2339, !2340, !2341, !2342}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2234, file: !567, line: 102, baseType: !208, size: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !2234, file: !567, line: 105, baseType: !393, size: 32, offset: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !2234, file: !567, line: 108, baseType: !2239, size: 32, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 32)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2241)
!2241 = !{!2242, !2300, !2312, !2313, !2314, !2315, !2321, !2334}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2240, file: !531, line: 247, baseType: !2243, size: 384)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2244)
!2244 = !{!2245, !2269, !2276, !2277, !2278, !2287, !2288, !2289}
!2245 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !531, line: 60, baseType: !2246, size: 64)
!2246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !531, line: 60, size: 64, elements: !2247)
!2247 = !{!2248, !2263}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2246, file: !531, line: 61, baseType: !2249, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2250)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2251)
!2251 = !{!2252, !2258}
!2252 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !541, line: 38, baseType: !2253, size: 32)
!2253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !541, line: 38, size: 32, elements: !2254)
!2254 = !{!2255, !2257}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2253, file: !541, line: 39, baseType: !2256, size: 32)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2253, file: !541, line: 40, baseType: !2256, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, scope: !2250, file: !541, line: 42, baseType: !2259, size: 32, offset: 32)
!2259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2250, file: !541, line: 42, size: 32, elements: !2260)
!2260 = !{!2261, !2262}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2259, file: !541, line: 43, baseType: !2256, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2259, file: !541, line: 44, baseType: !2256, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2246, file: !531, line: 62, baseType: !2264, size: 64)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2264, file: !557, line: 50, baseType: !2267, size: 64)
!2267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2268, size: 64, elements: !562)
!2268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 32)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2243, file: !531, line: 68, baseType: !2270, size: 32, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2272, file: !567, line: 232, baseType: !2275, size: 64)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2250)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2243, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2243, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2278 = !DIDerivedType(tag: DW_TAG_member, scope: !2243, file: !531, line: 90, baseType: !2279, size: 16, offset: 112)
!2279 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2243, file: !531, line: 90, size: 16, elements: !2280)
!2280 = !{!2281, !2286}
!2281 = !DIDerivedType(tag: DW_TAG_member, scope: !2279, file: !531, line: 91, baseType: !2282, size: 16)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2279, file: !531, line: 91, size: 16, elements: !2283)
!2283 = !{!2284, !2285}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2282, file: !531, line: 96, baseType: !581, size: 8)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2282, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2279, file: !531, line: 100, baseType: !227, size: 16)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2243, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2243, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2243, file: !531, line: 131, baseType: !2290, size: 192, offset: 192)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2291)
!2291 = !{!2292, !2293, !2299}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2290, file: !567, line: 245, baseType: !2249, size: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2290, file: !567, line: 246, baseType: !2294, size: 32, offset: 64)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 32)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{null, !2298}
!2298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2290, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2240, file: !531, line: 250, baseType: !2301, size: 288, offset: 384)
!2301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2302)
!2302 = !{!2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2301, file: !601, line: 26, baseType: !208, size: 32)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2301, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2301, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2301, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2301, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2301, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2301, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2301, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2301, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2240, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2240, file: !531, line: 256, baseType: !2271, size: 64, offset: 704)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2240, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2240, file: !531, line: 300, baseType: !2316, size: 96, offset: 800)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2317)
!2317 = !{!2318, !2319, !2320}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2316, file: !531, line: 153, baseType: !22, size: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2316, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2316, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2240, file: !531, line: 325, baseType: !2322, size: 32, offset: 896)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 32)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2324)
!2324 = !{!2325, !2331, !2332}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2323, file: !624, line: 5074, baseType: !2326, size: 96)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2327)
!2327 = !{!2328, !2329, !2330}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2326, file: !628, line: 57, baseType: !631, size: 32)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2326, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2326, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2323, file: !624, line: 5075, baseType: !2271, size: 64, offset: 96)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2323, file: !624, line: 5076, baseType: !2333, offset: 160)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2240, file: !531, line: 343, baseType: !2335, size: 64, offset: 928)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2335, file: !601, line: 63, baseType: !208, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2335, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !2234, file: !567, line: 111, baseType: !2239, size: 32, offset: 96)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !2234, file: !567, line: 124, baseType: !125, size: 32, offset: 128)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2234, file: !567, line: 127, baseType: !150, size: 8, offset: 160)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2234, file: !567, line: 153, baseType: !2343, offset: 168)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2344, line: 33, elements: !639)
!2344 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !2230, file: !567, line: 170, baseType: !2346, size: 96, offset: 192)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2346, file: !567, line: 86, baseType: !2239, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2346, file: !567, line: 90, baseType: !2275, size: 64, offset: 32)
!2350 = !DIGlobalVariableExpression(var: !2351, expr: !DIExpression())
!2351 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !2143, file: !2147, line: 43, type: !2352, isLocal: false, isDefinition: true, align: 512)
!2352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2353, size: 8704, elements: !2357)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2354, line: 47, size: 8, elements: !2355)
!2354 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2355 = !{!2356}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2353, file: !2354, line: 48, baseType: !142, size: 8)
!2357 = !{!2358}
!2358 = !DISubrange(count: 1088)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !2143, file: !2147, line: 44, type: !2240, isLocal: false, isDefinition: true)
!2361 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression())
!2362 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !2143, file: !2147, line: 48, type: !2363, isLocal: false, isDefinition: true)
!2363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2240, size: 1024, elements: !662)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !2143, file: !2147, line: 86, type: !2366, isLocal: false, isDefinition: true, align: 512)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2353, size: 16896, elements: !2367)
!2367 = !{!663, !2368}
!2368 = !DISubrange(count: 2112)
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !2143, file: !2147, line: 217, type: !153, isLocal: false, isDefinition: true)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !2143, file: !2147, line: 50, type: !2373, isLocal: true, isDefinition: true, align: 512)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2353, size: 3072, elements: !2374)
!2374 = !{!663, !2375}
!2375 = !DISubrange(count: 384)
!2376 = !DIGlobalVariableExpression(var: !2377, expr: !DIExpression())
!2377 = distinct !DIGlobalVariable(name: "levels", scope: !2378, file: !2147, line: 232, type: !2398, isLocal: true, isDefinition: true)
!2378 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !2147, file: !2147, line: 230, type: !2379, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !2381)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{null, !2146}
!2381 = !{!2382, !2383, !2393, !2397}
!2382 = !DILocalVariable(name: "level", arg: 1, scope: !2378, file: !2147, line: 230, type: !2146)
!2383 = !DILocalVariable(name: "entry", scope: !2378, file: !2147, line: 244, type: !2384)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2386)
!2386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !434, line: 51, size: 64, elements: !2387)
!2387 = !{!2388, !2392}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2386, file: !434, line: 60, baseType: !2389, size: 32)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2390 = !DISubroutineType(types: !2391)
!2391 = !{!125, !2165}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2386, file: !434, line: 65, baseType: !2165, size: 32, offset: 32)
!2393 = !DILocalVariable(name: "dev", scope: !2394, file: !2147, line: 247, type: !2165)
!2394 = distinct !DILexicalBlock(scope: !2395, file: !2147, line: 246, column: 64)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !2147, line: 246, column: 2)
!2396 = distinct !DILexicalBlock(scope: !2378, file: !2147, line: 246, column: 2)
!2397 = !DILocalVariable(name: "rc", scope: !2394, file: !2147, line: 248, type: !125)
!2398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2384, size: 192, elements: !1549)
!2399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2400)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !373, line: 16, size: 64, elements: !2401)
!2401 = !{!2402, !2403}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2400, file: !373, line: 17, baseType: !140, size: 32)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2400, file: !373, line: 18, baseType: !150, size: 8, offset: 32)
!2404 = !DIGlobalVariableExpression(var: !2405, expr: !DIExpression())
!2405 = distinct !DIGlobalVariable(name: "states_str", scope: !2406, file: !2407, line: 276, type: !2528, isLocal: true, isDefinition: true)
!2406 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2407, file: !2407, line: 271, type: !2408, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !2519)
!2407 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!140, !2410, !393, !272}
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2411)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 32)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2413)
!2413 = !{!2414, !2472, !2484, !2485, !2486, !2487, !2493, !2506}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2412, file: !531, line: 247, baseType: !2415, size: 384)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2416)
!2416 = !{!2417, !2441, !2448, !2449, !2450, !2459, !2460, !2461}
!2417 = !DIDerivedType(tag: DW_TAG_member, scope: !2415, file: !531, line: 60, baseType: !2418, size: 64)
!2418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2415, file: !531, line: 60, size: 64, elements: !2419)
!2419 = !{!2420, !2435}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2418, file: !531, line: 61, baseType: !2421, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2422)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2423)
!2423 = !{!2424, !2430}
!2424 = !DIDerivedType(tag: DW_TAG_member, scope: !2422, file: !541, line: 38, baseType: !2425, size: 32)
!2425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2422, file: !541, line: 38, size: 32, elements: !2426)
!2426 = !{!2427, !2429}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2425, file: !541, line: 39, baseType: !2428, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2425, file: !541, line: 40, baseType: !2428, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, scope: !2422, file: !541, line: 42, baseType: !2431, size: 32, offset: 32)
!2431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2422, file: !541, line: 42, size: 32, elements: !2432)
!2432 = !{!2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2431, file: !541, line: 43, baseType: !2428, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2431, file: !541, line: 44, baseType: !2428, size: 32)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2418, file: !531, line: 62, baseType: !2436, size: 64)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2437)
!2437 = !{!2438}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2436, file: !557, line: 50, baseType: !2439, size: 64)
!2439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2440, size: 64, elements: !562)
!2440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2415, file: !531, line: 68, baseType: !2442, size: 32, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2443, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2444)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2445)
!2445 = !{!2446}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2444, file: !567, line: 232, baseType: !2447, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2422)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2415, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2415, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2415, file: !531, line: 90, baseType: !2451, size: 16, offset: 112)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2415, file: !531, line: 90, size: 16, elements: !2452)
!2452 = !{!2453, !2458}
!2453 = !DIDerivedType(tag: DW_TAG_member, scope: !2451, file: !531, line: 91, baseType: !2454, size: 16)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2451, file: !531, line: 91, size: 16, elements: !2455)
!2455 = !{!2456, !2457}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2454, file: !531, line: 96, baseType: !581, size: 8)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2454, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2451, file: !531, line: 100, baseType: !227, size: 16)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2415, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2415, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2415, file: !531, line: 131, baseType: !2462, size: 192, offset: 192)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2463)
!2463 = !{!2464, !2465, !2471}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2462, file: !567, line: 245, baseType: !2421, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2462, file: !567, line: 246, baseType: !2466, size: 32, offset: 64)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2467)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{null, !2470}
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2462, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2412, file: !531, line: 250, baseType: !2473, size: 288, offset: 384)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2474)
!2474 = !{!2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2473, file: !601, line: 26, baseType: !208, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2473, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2473, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2473, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2473, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2473, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2473, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2473, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2473, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2412, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2412, file: !531, line: 256, baseType: !2443, size: 64, offset: 704)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2412, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2412, file: !531, line: 300, baseType: !2488, size: 96, offset: 800)
!2488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2489)
!2489 = !{!2490, !2491, !2492}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2488, file: !531, line: 153, baseType: !22, size: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2488, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2488, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2412, file: !531, line: 325, baseType: !2494, size: 32, offset: 896)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2496)
!2496 = !{!2497, !2503, !2504}
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2495, file: !624, line: 5074, baseType: !2498, size: 96)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2499)
!2499 = !{!2500, !2501, !2502}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2498, file: !628, line: 57, baseType: !631, size: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2498, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2498, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2495, file: !624, line: 5075, baseType: !2443, size: 64, offset: 96)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2495, file: !624, line: 5076, baseType: !2505, offset: 160)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2412, file: !531, line: 343, baseType: !2507, size: 64, offset: 928)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2508)
!2508 = !{!2509, !2510}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2507, file: !601, line: 63, baseType: !208, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2507, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2513, globals: !2515, splitDebugInlining: false, nameTableKind: None)
!2512 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2513 = !{!124, !140, !1889, !150, !125, !2514, !24, !272, !393, !22, !208, !1796}
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 32)
!2515 = !{!2404, !2516}
!2516 = !DIGlobalVariableExpression(var: !2517, expr: !DIExpression())
!2517 = distinct !DIGlobalVariable(name: "states_sz", scope: !2406, file: !2407, line: 279, type: !2518, isLocal: true, isDefinition: true)
!2518 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2081, size: 256, elements: !337)
!2519 = !{!2520, !2521, !2522, !2523, !2524, !2525, !2526}
!2520 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2406, file: !2407, line: 271, type: !2410)
!2521 = !DILocalVariable(name: "buf", arg: 2, scope: !2406, file: !2407, line: 271, type: !393)
!2522 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2406, file: !2407, line: 271, type: !272)
!2523 = !DILocalVariable(name: "off", scope: !2406, file: !2407, line: 273, type: !272)
!2524 = !DILocalVariable(name: "bit", scope: !2406, file: !2407, line: 274, type: !150)
!2525 = !DILocalVariable(name: "thread_state", scope: !2406, file: !2407, line: 275, type: !150)
!2526 = !DILocalVariable(name: "index", scope: !2527, file: !2407, line: 293, type: !150)
!2527 = distinct !DILexicalBlock(scope: !2406, file: !2407, line: 293, column: 2)
!2528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !337)
!2529 = !DIGlobalVariableExpression(var: !2530, expr: !DIExpression())
!2530 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2531, file: !2639, line: 56, type: !2628, isLocal: false, isDefinition: true)
!2531 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2532, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2533, globals: !2636, splitDebugInlining: false, nameTableKind: None)
!2532 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2533 = !{!2534, !393, !124, !2634, !184, !1889, !908, !125, !208, !1796, !2635}
!2534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!2535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !2536)
!2536 = !{!2537, !2595, !2607, !2608, !2609, !2610, !2616, !2629}
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2535, file: !531, line: 247, baseType: !2538, size: 384)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !2539)
!2539 = !{!2540, !2564, !2571, !2572, !2573, !2582, !2583, !2584}
!2540 = !DIDerivedType(tag: DW_TAG_member, scope: !2538, file: !531, line: 60, baseType: !2541, size: 64)
!2541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2538, file: !531, line: 60, size: 64, elements: !2542)
!2542 = !{!2543, !2558}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2541, file: !531, line: 61, baseType: !2544, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2545)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2546)
!2546 = !{!2547, !2553}
!2547 = !DIDerivedType(tag: DW_TAG_member, scope: !2545, file: !541, line: 38, baseType: !2548, size: 32)
!2548 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2545, file: !541, line: 38, size: 32, elements: !2549)
!2549 = !{!2550, !2552}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2548, file: !541, line: 39, baseType: !2551, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2548, file: !541, line: 40, baseType: !2551, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, scope: !2545, file: !541, line: 42, baseType: !2554, size: 32, offset: 32)
!2554 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2545, file: !541, line: 42, size: 32, elements: !2555)
!2555 = !{!2556, !2557}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2554, file: !541, line: 43, baseType: !2551, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2554, file: !541, line: 44, baseType: !2551, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2541, file: !531, line: 62, baseType: !2559, size: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !2560)
!2560 = !{!2561}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2559, file: !557, line: 50, baseType: !2562, size: 64)
!2562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2563, size: 64, elements: !562)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2538, file: !531, line: 68, baseType: !2565, size: 32, offset: 64)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 32)
!2566 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !2567)
!2567 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !2568)
!2568 = !{!2569}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2567, file: !567, line: 232, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2545)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2538, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2538, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!2573 = !DIDerivedType(tag: DW_TAG_member, scope: !2538, file: !531, line: 90, baseType: !2574, size: 16, offset: 112)
!2574 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2538, file: !531, line: 90, size: 16, elements: !2575)
!2575 = !{!2576, !2581}
!2576 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !531, line: 91, baseType: !2577, size: 16)
!2577 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2574, file: !531, line: 91, size: 16, elements: !2578)
!2578 = !{!2579, !2580}
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2577, file: !531, line: 96, baseType: !581, size: 8)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2577, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2574, file: !531, line: 100, baseType: !227, size: 16)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2538, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2538, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2538, file: !531, line: 131, baseType: !2585, size: 192, offset: 192)
!2585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2586)
!2586 = !{!2587, !2588, !2594}
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2585, file: !567, line: 245, baseType: !2544, size: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2585, file: !567, line: 246, baseType: !2589, size: 32, offset: 64)
!2589 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2590)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 32)
!2591 = !DISubroutineType(types: !2592)
!2592 = !{null, !2593}
!2593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2585, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2535, file: !531, line: 250, baseType: !2596, size: 288, offset: 384)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2596, file: !601, line: 26, baseType: !208, size: 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2596, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2596, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2596, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2596, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2596, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2596, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2596, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2596, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2535, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2535, file: !531, line: 256, baseType: !2566, size: 64, offset: 704)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2535, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2535, file: !531, line: 300, baseType: !2611, size: 96, offset: 800)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !2612)
!2612 = !{!2613, !2614, !2615}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2611, file: !531, line: 153, baseType: !22, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2611, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2611, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2535, file: !531, line: 325, baseType: !2617, size: 32, offset: 896)
!2617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 32)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !2619)
!2619 = !{!2620, !2626, !2627}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2618, file: !624, line: 5074, baseType: !2621, size: 96)
!2621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !2622)
!2622 = !{!2623, !2624, !2625}
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2621, file: !628, line: 57, baseType: !631, size: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2621, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2621, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2618, file: !624, line: 5075, baseType: !2566, size: 64, offset: 96)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2618, file: !624, line: 5076, baseType: !2628, offset: 160)
!2628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2535, file: !531, line: 343, baseType: !2630, size: 64, offset: 928)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !2631)
!2631 = !{!2632, !2633}
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2630, file: !601, line: 63, baseType: !208, size: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2630, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!2634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2563, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 32)
!2636 = !{!2529, !2637, !2640, !2642}
!2637 = !DIGlobalVariableExpression(var: !2638, expr: !DIExpression())
!2638 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2531, file: !2639, line: 404, type: !125, isLocal: true, isDefinition: true)
!2639 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2640 = !DIGlobalVariableExpression(var: !2641, expr: !DIExpression())
!2641 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2531, file: !2639, line: 405, type: !125, isLocal: true, isDefinition: true)
!2642 = !DIGlobalVariableExpression(var: !2643, expr: !DIExpression())
!2643 = distinct !DIGlobalVariable(name: "pending_current", scope: !2531, file: !2639, line: 425, type: !2534, isLocal: true, isDefinition: true)
!2644 = !DIGlobalVariableExpression(var: !2645, expr: !DIExpression())
!2645 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2646, file: !2676, line: 15, type: !1796, isLocal: true, isDefinition: true)
!2646 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2647, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2648, globals: !2673, splitDebugInlining: false, nameTableKind: None)
!2647 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2648 = !{!1889, !124, !908, !208, !1796, !125, !2649, !393, !598}
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 32)
!2650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !2651)
!2651 = !{!2652, !2667, !2672}
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2650, file: !567, line: 245, baseType: !2653, size: 64)
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !2654)
!2654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !2655)
!2655 = !{!2656, !2662}
!2656 = !DIDerivedType(tag: DW_TAG_member, scope: !2654, file: !541, line: 38, baseType: !2657, size: 32)
!2657 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2654, file: !541, line: 38, size: 32, elements: !2658)
!2658 = !{!2659, !2661}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2657, file: !541, line: 39, baseType: !2660, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2657, file: !541, line: 40, baseType: !2660, size: 32)
!2662 = !DIDerivedType(tag: DW_TAG_member, scope: !2654, file: !541, line: 42, baseType: !2663, size: 32, offset: 32)
!2663 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2654, file: !541, line: 42, size: 32, elements: !2664)
!2664 = !{!2665, !2666}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2663, file: !541, line: 43, baseType: !2660, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2663, file: !541, line: 44, baseType: !2660, size: 32)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2650, file: !567, line: 246, baseType: !2668, size: 32, offset: 64)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !2669)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 32)
!2670 = !DISubroutineType(types: !2671)
!2671 = !{null, !2649}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2650, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!2673 = !{!2644, !2674, !2678, !2680}
!2674 = !DIGlobalVariableExpression(var: !2675, expr: !DIExpression())
!2675 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2646, file: !2676, line: 19, type: !2677, isLocal: true, isDefinition: true)
!2676 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!2678 = !DIGlobalVariableExpression(var: !2679, expr: !DIExpression())
!2679 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2646, file: !2676, line: 25, type: !125, isLocal: true, isDefinition: true)
!2680 = !DIGlobalVariableExpression(var: !2681, expr: !DIExpression())
!2681 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2646, file: !2676, line: 17, type: !2682, isLocal: true, isDefinition: true)
!2682 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !2654)
!2683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2684 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2685 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2686, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2686 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2687 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2688, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2689, retainedTypes: !2709, splitDebugInlining: false, nameTableKind: None)
!2688 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2689 = !{!2690, !2698}
!2690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2691, line: 69, baseType: !32, size: 32, elements: !2692)
!2691 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2692 = !{!2693, !2694, !2695, !2696, !2697}
!2693 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2694 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2695 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2696 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2697 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2698 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2691, line: 56, baseType: !32, size: 32, elements: !2699)
!2699 = !{!2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708}
!2700 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2701 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2702 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2703 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2704 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2705 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2706 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2707 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2708 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2709 = !{!125, !2690, !2698, !2710, !582, !160, !2712, !2713, !151, !228, !140, !272, !124, !22, !32, !387, !2715, !2716, !389, !388, !391, !390, !2711, !2717, !2718, !2719, !2720}
!2710 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2691, line: 31, baseType: !2711)
!2711 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !391)
!2712 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !273, line: 329, baseType: !32)
!2713 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2691, line: 32, baseType: !2714)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !1797)
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !582, size: 32)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !160, size: 32)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 32)
!2719 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !273, line: 145, baseType: !125)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 32)
!2721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2722, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2722 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2723 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2724, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2725, splitDebugInlining: false, nameTableKind: None)
!2724 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2725 = !{!140, !151, !125, !32}
!2726 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2727, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2727 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2728 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2729, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2730, splitDebugInlining: false, nameTableKind: None)
!2729 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2730 = !{!184, !490, !2731}
!2731 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2732)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 32)
!2733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2734)
!2734 = !{!2735}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2733, file: !492, line: 65, baseType: !497, size: 1408)
!2736 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2737, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2738, splitDebugInlining: false, nameTableKind: None)
!2737 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2738 = !{!184, !2739, !150}
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2740)
!2740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2741, size: 32)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2742)
!2742 = !{!2743}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2741, file: !492, line: 65, baseType: !497, size: 1408)
!2744 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2745, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2746, splitDebugInlining: false, nameTableKind: None)
!2745 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2746 = !{!2747, !2753, !184, !150, !227}
!2747 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCCcmMode_t", file: !2748, line: 95, baseType: !2749)
!2748 = !DIFile(filename: "modules/crypto/tinycrypt/lib/include/tinycrypt/ccm_mode.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 32)
!2750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2748, line: 91, size: 96, elements: !2751)
!2751 = !{!2752, !2758, !2759}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !2750, file: !2748, line: 92, baseType: !2753, size: 32)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !2754)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 32)
!2755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_aes_key_sched_struct", file: !492, line: 64, size: 1408, elements: !2756)
!2756 = !{!2757}
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "words", scope: !2755, file: !492, line: 65, baseType: !497, size: 1408)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !2750, file: !2748, line: 93, baseType: !184, size: 32, offset: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !2750, file: !2748, line: 94, baseType: !32, size: 32, offset: 64)
!2760 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2761, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2762, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2761 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2762 = !{!2763, !46}
!2763 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2764, line: 27, baseType: !32, size: 32, elements: !2765)
!2764 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2765 = !{!2766, !2767, !2768, !2769, !2770}
!2766 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2767 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2768 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2769 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2770 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2771 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2772, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2773, retainedTypes: !2774, splitDebugInlining: false, nameTableKind: None)
!2772 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2773 = !{!749, !2763, !46}
!2774 = !{!934, !2775, !124, !125, !908, !208, !150, !2792}
!2775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2776, size: 32)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2777)
!2777 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2778)
!2778 = !{!2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791}
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2777, file: !680, line: 413, baseType: !1904, size: 256)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2777, file: !680, line: 414, baseType: !1906, size: 768, offset: 256)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2777, file: !680, line: 415, baseType: !1904, size: 256, offset: 1024)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2777, file: !680, line: 416, baseType: !1906, size: 768, offset: 1280)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2777, file: !680, line: 417, baseType: !1904, size: 256, offset: 2048)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2777, file: !680, line: 418, baseType: !1906, size: 768, offset: 2304)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2777, file: !680, line: 419, baseType: !1904, size: 256, offset: 3072)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2777, file: !680, line: 420, baseType: !1906, size: 768, offset: 3328)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2777, file: !680, line: 421, baseType: !1904, size: 256, offset: 4096)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2777, file: !680, line: 422, baseType: !1917, size: 1792, offset: 4352)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2777, file: !680, line: 423, baseType: !1921, size: 1920, offset: 6144)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2777, file: !680, line: 424, baseType: !1926, size: 20608, offset: 8064)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2777, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2794)
!2794 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2794, file: !680, line: 447, baseType: !684, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2794, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2794, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2794, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2794, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2794, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2794, file: !680, line: 453, baseType: !1941, size: 96, offset: 192)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2794, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2794, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2794, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2794, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2794, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2794, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2794, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2794, file: !680, line: 461, baseType: !1950, size: 64, offset: 512)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2794, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2794, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2794, file: !680, line: 464, baseType: !1954, size: 128, offset: 640)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2794, file: !680, line: 465, baseType: !1956, size: 160, offset: 768)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2794, file: !680, line: 466, baseType: !1958, size: 160, offset: 928)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2794, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2817 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2818, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!2818 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2820, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2821, splitDebugInlining: false, nameTableKind: None)
!2820 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2821 = !{!124, !125, !22, !2822}
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 32)
!2823 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2824)
!2824 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2825)
!2825 = !{!2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2824, file: !680, line: 447, baseType: !684, size: 32)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2824, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2824, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2824, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2824, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2824, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2824, file: !680, line: 453, baseType: !1941, size: 96, offset: 192)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2824, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2824, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2824, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2824, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2824, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2824, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2824, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2824, file: !680, line: 461, baseType: !1950, size: 64, offset: 512)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2824, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2824, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2824, file: !680, line: 464, baseType: !1954, size: 128, offset: 640)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2824, file: !680, line: 465, baseType: !1956, size: 160, offset: 768)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2824, file: !680, line: 466, baseType: !1958, size: 160, offset: 928)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2824, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2848, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2849, splitDebugInlining: false, nameTableKind: None)
!2848 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2849 = !{!2850, !124, !125}
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2852)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2853)
!2853 = !{!2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2852, file: !680, line: 447, baseType: !684, size: 32)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2852, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2852, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2852, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2852, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2852, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2852, file: !680, line: 453, baseType: !1941, size: 96, offset: 192)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2852, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2852, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2852, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2852, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2852, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2852, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2852, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2852, file: !680, line: 461, baseType: !1950, size: 64, offset: 512)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2852, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2852, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2852, file: !680, line: 464, baseType: !1954, size: 128, offset: 640)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2852, file: !680, line: 465, baseType: !1956, size: 160, offset: 768)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2852, file: !680, line: 466, baseType: !1958, size: 160, offset: 928)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2852, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2875 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2876, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !2877, splitDebugInlining: false, nameTableKind: None)
!2876 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2877 = !{!2878, !208, !124, !125}
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 32)
!2879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2880, line: 98, size: 256, elements: !2881)
!2880 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2881 = !{!2882, !2887, !2892, !2897, !2902, !2907, !2912, !2917}
!2882 = !DIDerivedType(tag: DW_TAG_member, scope: !2879, file: !2880, line: 99, baseType: !2883, size: 32)
!2883 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2879, file: !2880, line: 99, size: 32, elements: !2884)
!2884 = !{!2885, !2886}
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2883, file: !2880, line: 99, baseType: !208, size: 32)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2883, file: !2880, line: 99, baseType: !208, size: 32)
!2887 = !DIDerivedType(tag: DW_TAG_member, scope: !2879, file: !2880, line: 100, baseType: !2888, size: 32, offset: 32)
!2888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2879, file: !2880, line: 100, size: 32, elements: !2889)
!2889 = !{!2890, !2891}
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2888, file: !2880, line: 100, baseType: !208, size: 32)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2888, file: !2880, line: 100, baseType: !208, size: 32)
!2892 = !DIDerivedType(tag: DW_TAG_member, scope: !2879, file: !2880, line: 101, baseType: !2893, size: 32, offset: 64)
!2893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2879, file: !2880, line: 101, size: 32, elements: !2894)
!2894 = !{!2895, !2896}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2893, file: !2880, line: 101, baseType: !208, size: 32)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2893, file: !2880, line: 101, baseType: !208, size: 32)
!2897 = !DIDerivedType(tag: DW_TAG_member, scope: !2879, file: !2880, line: 102, baseType: !2898, size: 32, offset: 96)
!2898 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2879, file: !2880, line: 102, size: 32, elements: !2899)
!2899 = !{!2900, !2901}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2898, file: !2880, line: 102, baseType: !208, size: 32)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2898, file: !2880, line: 102, baseType: !208, size: 32)
!2902 = !DIDerivedType(tag: DW_TAG_member, scope: !2879, file: !2880, line: 103, baseType: !2903, size: 32, offset: 128)
!2903 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2879, file: !2880, line: 103, size: 32, elements: !2904)
!2904 = !{!2905, !2906}
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2903, file: !2880, line: 103, baseType: !208, size: 32)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2903, file: !2880, line: 103, baseType: !208, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, scope: !2879, file: !2880, line: 104, baseType: !2908, size: 32, offset: 160)
!2908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2879, file: !2880, line: 104, size: 32, elements: !2909)
!2909 = !{!2910, !2911}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2908, file: !2880, line: 104, baseType: !208, size: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2908, file: !2880, line: 104, baseType: !208, size: 32)
!2912 = !DIDerivedType(tag: DW_TAG_member, scope: !2879, file: !2880, line: 105, baseType: !2913, size: 32, offset: 192)
!2913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2879, file: !2880, line: 105, size: 32, elements: !2914)
!2914 = !{!2915, !2916}
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2913, file: !2880, line: 105, baseType: !208, size: 32)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2913, file: !2880, line: 105, baseType: !208, size: 32)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2879, file: !2880, line: 106, baseType: !208, size: 32, offset: 224)
!2918 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2919, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2762, retainedTypes: !2920, splitDebugInlining: false, nameTableKind: None)
!2919 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2920 = !{!2921, !124, !125, !2946, !2989, !208}
!2921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2922, size: 32)
!2922 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !2923)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2923, file: !680, line: 447, baseType: !684, size: 32)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2923, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2923, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2923, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2923, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2923, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2923, file: !680, line: 453, baseType: !1941, size: 96, offset: 192)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2923, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2923, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2923, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2923, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2923, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2923, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2923, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2923, file: !680, line: 461, baseType: !1950, size: 64, offset: 512)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2923, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2923, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2923, file: !680, line: 464, baseType: !1954, size: 128, offset: 640)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2923, file: !680, line: 465, baseType: !1956, size: 160, offset: 768)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2923, file: !680, line: 466, baseType: !1958, size: 160, offset: 928)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2923, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 32)
!2947 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2880, line: 141, baseType: !2948)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2880, line: 97, size: 256, elements: !2949)
!2949 = !{!2950}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2948, file: !2880, line: 107, baseType: !2951, size: 256)
!2951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2880, line: 98, size: 256, elements: !2952)
!2952 = !{!2953, !2958, !2963, !2968, !2973, !2978, !2983, !2988}
!2953 = !DIDerivedType(tag: DW_TAG_member, scope: !2951, file: !2880, line: 99, baseType: !2954, size: 32)
!2954 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2951, file: !2880, line: 99, size: 32, elements: !2955)
!2955 = !{!2956, !2957}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2954, file: !2880, line: 99, baseType: !208, size: 32)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2954, file: !2880, line: 99, baseType: !208, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, scope: !2951, file: !2880, line: 100, baseType: !2959, size: 32, offset: 32)
!2959 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2951, file: !2880, line: 100, size: 32, elements: !2960)
!2960 = !{!2961, !2962}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2959, file: !2880, line: 100, baseType: !208, size: 32)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2959, file: !2880, line: 100, baseType: !208, size: 32)
!2963 = !DIDerivedType(tag: DW_TAG_member, scope: !2951, file: !2880, line: 101, baseType: !2964, size: 32, offset: 64)
!2964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2951, file: !2880, line: 101, size: 32, elements: !2965)
!2965 = !{!2966, !2967}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2964, file: !2880, line: 101, baseType: !208, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2964, file: !2880, line: 101, baseType: !208, size: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, scope: !2951, file: !2880, line: 102, baseType: !2969, size: 32, offset: 96)
!2969 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2951, file: !2880, line: 102, size: 32, elements: !2970)
!2970 = !{!2971, !2972}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2969, file: !2880, line: 102, baseType: !208, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2969, file: !2880, line: 102, baseType: !208, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_member, scope: !2951, file: !2880, line: 103, baseType: !2974, size: 32, offset: 128)
!2974 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2951, file: !2880, line: 103, size: 32, elements: !2975)
!2975 = !{!2976, !2977}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2974, file: !2880, line: 103, baseType: !208, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2974, file: !2880, line: 103, baseType: !208, size: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, scope: !2951, file: !2880, line: 104, baseType: !2979, size: 32, offset: 160)
!2979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2951, file: !2880, line: 104, size: 32, elements: !2980)
!2980 = !{!2981, !2982}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2979, file: !2880, line: 104, baseType: !208, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2979, file: !2880, line: 104, baseType: !208, size: 32)
!2983 = !DIDerivedType(tag: DW_TAG_member, scope: !2951, file: !2880, line: 105, baseType: !2984, size: 32, offset: 192)
!2984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2951, file: !2880, line: 105, size: 32, elements: !2985)
!2985 = !{!2986, !2987}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2984, file: !2880, line: 105, baseType: !208, size: 32)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2984, file: !2880, line: 105, baseType: !208, size: 32)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2951, file: !2880, line: 106, baseType: !208, size: 32, offset: 224)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!2990 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2991, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1887, retainedTypes: !2992, splitDebugInlining: false, nameTableKind: None)
!2991 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!2992 = !{!934, !908, !150, !208, !2993, !3010}
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !680, line: 426, baseType: !2995)
!2995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 411, size: 28704, elements: !2996)
!2996 = !{!2997, !2998, !2999, !3000, !3001, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009}
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2995, file: !680, line: 413, baseType: !1904, size: 256)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2995, file: !680, line: 414, baseType: !1906, size: 768, offset: 256)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2995, file: !680, line: 415, baseType: !1904, size: 256, offset: 1024)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2995, file: !680, line: 416, baseType: !1906, size: 768, offset: 1280)
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2995, file: !680, line: 417, baseType: !1904, size: 256, offset: 2048)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2995, file: !680, line: 418, baseType: !1906, size: 768, offset: 2304)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2995, file: !680, line: 419, baseType: !1904, size: 256, offset: 3072)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2995, file: !680, line: 420, baseType: !1906, size: 768, offset: 3328)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2995, file: !680, line: 421, baseType: !1904, size: 256, offset: 4096)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2995, file: !680, line: 422, baseType: !1917, size: 1792, offset: 4352)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2995, file: !680, line: 423, baseType: !1921, size: 1920, offset: 6144)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2995, file: !680, line: 424, baseType: !1926, size: 20608, offset: 8064)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2995, file: !680, line: 425, baseType: !423, size: 32, offset: 28672)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 32)
!3011 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3012)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3013)
!3013 = !{!3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3012, file: !680, line: 447, baseType: !684, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3012, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3012, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3012, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3012, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3012, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3012, file: !680, line: 453, baseType: !1941, size: 96, offset: 192)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3012, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3012, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3012, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3012, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3012, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3012, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3012, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3012, file: !680, line: 461, baseType: !1950, size: 64, offset: 512)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3012, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3012, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3012, file: !680, line: 464, baseType: !1954, size: 128, offset: 640)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3012, file: !680, line: 465, baseType: !1956, size: 160, offset: 768)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3012, file: !680, line: 466, baseType: !1958, size: 160, offset: 928)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3012, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3035 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3036, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3037, splitDebugInlining: false, nameTableKind: None)
!3036 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3037 = !{!3038, !124, !125}
!3038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3039, size: 32)
!3039 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !680, line: 468, baseType: !3040)
!3040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 445, size: 1120, elements: !3041)
!3041 = !{!3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !3040, file: !680, line: 447, baseType: !684, size: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !3040, file: !680, line: 448, baseType: !423, size: 32, offset: 32)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !3040, file: !680, line: 449, baseType: !423, size: 32, offset: 64)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !3040, file: !680, line: 450, baseType: !423, size: 32, offset: 96)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !3040, file: !680, line: 451, baseType: !423, size: 32, offset: 128)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !3040, file: !680, line: 452, baseType: !423, size: 32, offset: 160)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !3040, file: !680, line: 453, baseType: !1941, size: 96, offset: 192)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !3040, file: !680, line: 454, baseType: !423, size: 32, offset: 288)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !3040, file: !680, line: 455, baseType: !423, size: 32, offset: 320)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !3040, file: !680, line: 456, baseType: !423, size: 32, offset: 352)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !3040, file: !680, line: 457, baseType: !423, size: 32, offset: 384)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !3040, file: !680, line: 458, baseType: !423, size: 32, offset: 416)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !3040, file: !680, line: 459, baseType: !423, size: 32, offset: 448)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !3040, file: !680, line: 460, baseType: !423, size: 32, offset: 480)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !3040, file: !680, line: 461, baseType: !1950, size: 64, offset: 512)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !3040, file: !680, line: 462, baseType: !684, size: 32, offset: 576)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !3040, file: !680, line: 463, baseType: !684, size: 32, offset: 608)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !3040, file: !680, line: 464, baseType: !1954, size: 128, offset: 640)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !3040, file: !680, line: 465, baseType: !1956, size: 160, offset: 768)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3040, file: !680, line: 466, baseType: !1958, size: 160, offset: 928)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !3040, file: !680, line: 467, baseType: !423, size: 32, offset: 1088)
!3063 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3064, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3065, splitDebugInlining: false, nameTableKind: None)
!3064 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3065 = !{!142, !393, !272, !1132, !3066, !151, !124}
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !151)
!3068 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3069, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !3070, splitDebugInlining: false, nameTableKind: None)
!3069 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3070 = !{!3071}
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 510, baseType: !3073)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 477, size: 1216, elements: !3074)
!3074 = !{!3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3073, file: !419, line: 479, baseType: !423, size: 32)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3073, file: !419, line: 480, baseType: !423, size: 32, offset: 32)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3073, file: !419, line: 481, baseType: !423, size: 32, offset: 64)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3073, file: !419, line: 482, baseType: !423, size: 32, offset: 96)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3073, file: !419, line: 483, baseType: !423, size: 32, offset: 128)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3073, file: !419, line: 484, baseType: !423, size: 32, offset: 160)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3073, file: !419, line: 485, baseType: !996, size: 64, offset: 192)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3073, file: !419, line: 486, baseType: !423, size: 32, offset: 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3073, file: !419, line: 487, baseType: !423, size: 32, offset: 288)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3073, file: !419, line: 488, baseType: !996, size: 64, offset: 320)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3073, file: !419, line: 489, baseType: !423, size: 32, offset: 384)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3073, file: !419, line: 490, baseType: !423, size: 32, offset: 416)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3073, file: !419, line: 491, baseType: !996, size: 64, offset: 448)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3073, file: !419, line: 492, baseType: !423, size: 32, offset: 512)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3073, file: !419, line: 493, baseType: !423, size: 32, offset: 544)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3073, file: !419, line: 494, baseType: !996, size: 64, offset: 576)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3073, file: !419, line: 495, baseType: !423, size: 32, offset: 640)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3073, file: !419, line: 496, baseType: !423, size: 32, offset: 672)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3073, file: !419, line: 497, baseType: !996, size: 64, offset: 704)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3073, file: !419, line: 498, baseType: !423, size: 32, offset: 768)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3073, file: !419, line: 499, baseType: !423, size: 32, offset: 800)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3073, file: !419, line: 500, baseType: !996, size: 64, offset: 832)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3073, file: !419, line: 501, baseType: !423, size: 32, offset: 896)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3073, file: !419, line: 502, baseType: !423, size: 32, offset: 928)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3073, file: !419, line: 503, baseType: !996, size: 64, offset: 960)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3073, file: !419, line: 504, baseType: !423, size: 32, offset: 1024)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3073, file: !419, line: 505, baseType: !423, size: 32, offset: 1056)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3073, file: !419, line: 506, baseType: !208, size: 32, offset: 1088)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3073, file: !419, line: 507, baseType: !423, size: 32, offset: 1120)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3073, file: !419, line: 508, baseType: !423, size: 32, offset: 1152)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3073, file: !419, line: 509, baseType: !423, size: 32, offset: 1184)
!3106 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3107, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!3107 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3108 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3109, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3110, retainedTypes: !3126, splitDebugInlining: false, nameTableKind: None)
!3109 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3110 = !{!3111, !3118, !3122}
!3111 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3112, line: 38, baseType: !32, size: 32, elements: !3113)
!3112 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3113 = !{!3114, !3115, !3116, !3117}
!3114 = !DIEnumerator(name: "HAL_OK", value: 0)
!3115 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!3116 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!3117 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!3118 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !973, line: 184, baseType: !32, size: 32, elements: !3119)
!3119 = !{!3120, !3121}
!3120 = !DIEnumerator(name: "RESET", value: 0)
!3121 = !DIEnumerator(name: "SET", value: 1)
!3122 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !973, line: 190, baseType: !32, size: 32, elements: !3123)
!3123 = !{!3124, !3125}
!3124 = !DIEnumerator(name: "DISABLE", value: 0)
!3125 = !DIEnumerator(name: "ENABLE", value: 1)
!3126 = !{!124, !3127, !150, !208, !1798, !3162, !3168, !3179, !227, !3180, !1796}
!3127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3128, size: 32)
!3128 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 510, baseType: !3129)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 477, size: 1216, elements: !3130)
!3130 = !{!3131, !3132, !3133, !3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156, !3157, !3158, !3159, !3160, !3161}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3129, file: !419, line: 479, baseType: !423, size: 32)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3129, file: !419, line: 480, baseType: !423, size: 32, offset: 32)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3129, file: !419, line: 481, baseType: !423, size: 32, offset: 64)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3129, file: !419, line: 482, baseType: !423, size: 32, offset: 96)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3129, file: !419, line: 483, baseType: !423, size: 32, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3129, file: !419, line: 484, baseType: !423, size: 32, offset: 160)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3129, file: !419, line: 485, baseType: !996, size: 64, offset: 192)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3129, file: !419, line: 486, baseType: !423, size: 32, offset: 256)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3129, file: !419, line: 487, baseType: !423, size: 32, offset: 288)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3129, file: !419, line: 488, baseType: !996, size: 64, offset: 320)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3129, file: !419, line: 489, baseType: !423, size: 32, offset: 384)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3129, file: !419, line: 490, baseType: !423, size: 32, offset: 416)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3129, file: !419, line: 491, baseType: !996, size: 64, offset: 448)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3129, file: !419, line: 492, baseType: !423, size: 32, offset: 512)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3129, file: !419, line: 493, baseType: !423, size: 32, offset: 544)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3129, file: !419, line: 494, baseType: !996, size: 64, offset: 576)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3129, file: !419, line: 495, baseType: !423, size: 32, offset: 640)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3129, file: !419, line: 496, baseType: !423, size: 32, offset: 672)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3129, file: !419, line: 497, baseType: !996, size: 64, offset: 704)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3129, file: !419, line: 498, baseType: !423, size: 32, offset: 768)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3129, file: !419, line: 499, baseType: !423, size: 32, offset: 800)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3129, file: !419, line: 500, baseType: !996, size: 64, offset: 832)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3129, file: !419, line: 501, baseType: !423, size: 32, offset: 896)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3129, file: !419, line: 502, baseType: !423, size: 32, offset: 928)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3129, file: !419, line: 503, baseType: !996, size: 64, offset: 960)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3129, file: !419, line: 504, baseType: !423, size: 32, offset: 1024)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3129, file: !419, line: 505, baseType: !423, size: 32, offset: 1056)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3129, file: !419, line: 506, baseType: !208, size: 32, offset: 1088)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3129, file: !419, line: 507, baseType: !423, size: 32, offset: 1120)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3129, file: !419, line: 508, baseType: !423, size: 32, offset: 1152)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3129, file: !419, line: 509, baseType: !423, size: 32, offset: 1184)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 32)
!3163 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 471, baseType: !3164)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 467, size: 64, elements: !3165)
!3165 = !{!3166, !3167}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3164, file: !419, line: 469, baseType: !423, size: 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3164, file: !419, line: 470, baseType: !423, size: 32, offset: 32)
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3169, size: 32)
!3169 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 379, baseType: !3170)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 224, elements: !3171)
!3171 = !{!3172, !3173, !3174, !3175, !3176, !3177, !3178}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3170, file: !419, line: 372, baseType: !423, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3170, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3170, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3170, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3170, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3170, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3170, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 32)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 32)
!3181 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !419, line: 396, baseType: !3182)
!3182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 385, size: 320, elements: !3183)
!3183 = !{!3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191, !3192}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !3182, file: !419, line: 387, baseType: !423, size: 32)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !3182, file: !419, line: 388, baseType: !423, size: 32, offset: 32)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !3182, file: !419, line: 389, baseType: !423, size: 32, offset: 64)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !3182, file: !419, line: 390, baseType: !423, size: 32, offset: 96)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !3182, file: !419, line: 391, baseType: !423, size: 32, offset: 128)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !3182, file: !419, line: 392, baseType: !423, size: 32, offset: 160)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !3182, file: !419, line: 393, baseType: !423, size: 32, offset: 192)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !3182, file: !419, line: 394, baseType: !423, size: 32, offset: 224)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !3182, file: !419, line: 395, baseType: !1468, size: 64, offset: 256)
!3193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3194, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3195, retainedTypes: !3196, splitDebugInlining: false, nameTableKind: None)
!3194 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3195 = !{!972}
!3196 = !{!3197, !208, !3205, !3211, !3222}
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 32)
!3198 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !680, line: 770, baseType: !3199)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !680, line: 764, size: 128, elements: !3200)
!3200 = !{!3201, !3202, !3203, !3204}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !3199, file: !680, line: 766, baseType: !423, size: 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !3199, file: !680, line: 767, baseType: !423, size: 32, offset: 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !3199, file: !680, line: 768, baseType: !423, size: 32, offset: 64)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !3199, file: !680, line: 769, baseType: !684, size: 32, offset: 96)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3206, size: 32)
!3206 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !419, line: 471, baseType: !3207)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 467, size: 64, elements: !3208)
!3208 = !{!3209, !3210}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3207, file: !419, line: 469, baseType: !423, size: 32)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3207, file: !419, line: 470, baseType: !423, size: 32, offset: 32)
!3211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3212, size: 32)
!3212 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !419, line: 379, baseType: !3213)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 370, size: 224, elements: !3214)
!3214 = !{!3215, !3216, !3217, !3218, !3219, !3220, !3221}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3213, file: !419, line: 372, baseType: !423, size: 32)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3213, file: !419, line: 373, baseType: !423, size: 32, offset: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3213, file: !419, line: 374, baseType: !423, size: 32, offset: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3213, file: !419, line: 375, baseType: !423, size: 32, offset: 96)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3213, file: !419, line: 376, baseType: !423, size: 32, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3213, file: !419, line: 377, baseType: !423, size: 32, offset: 160)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3213, file: !419, line: 378, baseType: !423, size: 32, offset: 192)
!3222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3223, size: 32)
!3223 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !419, line: 510, baseType: !3224)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !419, line: 477, size: 1216, elements: !3225)
!3225 = !{!3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3249, !3250, !3251, !3252, !3253, !3254, !3255, !3256}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3224, file: !419, line: 479, baseType: !423, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3224, file: !419, line: 480, baseType: !423, size: 32, offset: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3224, file: !419, line: 481, baseType: !423, size: 32, offset: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3224, file: !419, line: 482, baseType: !423, size: 32, offset: 96)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3224, file: !419, line: 483, baseType: !423, size: 32, offset: 128)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3224, file: !419, line: 484, baseType: !423, size: 32, offset: 160)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3224, file: !419, line: 485, baseType: !996, size: 64, offset: 192)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3224, file: !419, line: 486, baseType: !423, size: 32, offset: 256)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3224, file: !419, line: 487, baseType: !423, size: 32, offset: 288)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3224, file: !419, line: 488, baseType: !996, size: 64, offset: 320)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3224, file: !419, line: 489, baseType: !423, size: 32, offset: 384)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3224, file: !419, line: 490, baseType: !423, size: 32, offset: 416)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3224, file: !419, line: 491, baseType: !996, size: 64, offset: 448)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3224, file: !419, line: 492, baseType: !423, size: 32, offset: 512)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3224, file: !419, line: 493, baseType: !423, size: 32, offset: 544)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3224, file: !419, line: 494, baseType: !996, size: 64, offset: 576)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3224, file: !419, line: 495, baseType: !423, size: 32, offset: 640)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3224, file: !419, line: 496, baseType: !423, size: 32, offset: 672)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3224, file: !419, line: 497, baseType: !996, size: 64, offset: 704)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3224, file: !419, line: 498, baseType: !423, size: 32, offset: 768)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3224, file: !419, line: 499, baseType: !423, size: 32, offset: 800)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3224, file: !419, line: 500, baseType: !996, size: 64, offset: 832)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3224, file: !419, line: 501, baseType: !423, size: 32, offset: 896)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3224, file: !419, line: 502, baseType: !423, size: 32, offset: 928)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3224, file: !419, line: 503, baseType: !996, size: 64, offset: 960)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3224, file: !419, line: 504, baseType: !423, size: 32, offset: 1024)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3224, file: !419, line: 505, baseType: !423, size: 32, offset: 1056)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3224, file: !419, line: 506, baseType: !208, size: 32, offset: 1088)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3224, file: !419, line: 507, baseType: !423, size: 32, offset: 1120)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3224, file: !419, line: 508, baseType: !423, size: 32, offset: 1152)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3224, file: !419, line: 509, baseType: !423, size: 32, offset: 1184)
!3257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3258, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3259, splitDebugInlining: false, nameTableKind: None)
!3258 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3259 = !{!124, !272}
!3260 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3261, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3262, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3261 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3262 = !{!3263, !3270, !46}
!3263 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3264, line: 14, baseType: !32, size: 32, elements: !3265)
!3264 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3265 = !{!3266, !3267, !3268, !3269}
!3266 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3267 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3268 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3269 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3270 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3264, line: 42, baseType: !32, size: 32, elements: !3271)
!3271 = !{!3272, !3273, !3274, !3275, !3276, !3277}
!3272 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3273 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3274 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3275 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3276 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3277 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3278 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3279, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3279 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3281, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !3282, splitDebugInlining: false, nameTableKind: None)
!3281 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3282 = !{!22, !124, !125}
!3283 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3284, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !405, retainedTypes: !406, splitDebugInlining: false, nameTableKind: None)
!3284 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!3285 = !{!"Ubuntu clang version 14.0.6"}
!3286 = !{i32 7, !"Dwarf Version", i32 4}
!3287 = !{i32 2, !"Debug Info Version", i32 3}
!3288 = !{i32 1, !"wchar_size", i32 4}
!3289 = !{i32 1, !"min_enum_size", i32 4}
!3290 = !{i32 1, !"branch-target-enforcement", i32 0}
!3291 = !{i32 1, !"sign-return-address", i32 0}
!3292 = !{i32 1, !"sign-return-address-all", i32 0}
!3293 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3294 = !{i32 7, !"frame-pointer", i32 2}
!3295 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3296, file: !3296, line: 26, type: !3297, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2683, retainedNodes: !639)
!3296 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3297 = !DISubroutineType(types: !3298)
!3298 = !{null}
!3299 = !DILocation(line: 28, column: 1, scope: !3295)
!3300 = !{i64 2155027331, i64 2155027351, i64 2155027414}
!3301 = !DILocation(line: 29, column: 1, scope: !3295)
!3302 = !{i64 2155027746, i64 2155027766, i64 2155027829}
!3303 = !DILocation(line: 30, column: 1, scope: !3295)
!3304 = !{i64 2155028165, i64 2155028185, i64 2155028248}
!3305 = !DILocation(line: 31, column: 1, scope: !3295)
!3306 = !{i64 2155028584, i64 2155028604, i64 2155028667}
!3307 = !DILocation(line: 33, column: 1, scope: !3295)
!3308 = !{i64 2155028876, i64 2155028896, i64 2155028959}
!3309 = !DILocation(line: 35, column: 1, scope: !3295)
!3310 = !{i64 2155029201, i64 2155029221, i64 2155029284}
!3311 = !DILocation(line: 50, column: 1, scope: !3295)
!3312 = !{i64 2155029628, i64 2155029648, i64 2155029711}
!3313 = !DILocation(line: 54, column: 1, scope: !3295)
!3314 = !{i64 2155030067, i64 2155030087, i64 2155030150}
!3315 = !DILocation(line: 61, column: 1, scope: !3295)
!3316 = !{i64 2155030384, i64 2155030404, i64 2155030467}
!3317 = !DILocation(line: 63, column: 1, scope: !3295)
!3318 = !{i64 2155030764, i64 2155030784, i64 2155030847}
!3319 = !DILocation(line: 64, column: 1, scope: !3295)
!3320 = !{i64 2155031286, i64 2155031306, i64 2155031369}
!3321 = !DILocation(line: 65, column: 1, scope: !3295)
!3322 = !{i64 2155031784, i64 2155031804, i64 2155031867}
!3323 = !DILocation(line: 66, column: 1, scope: !3295)
!3324 = !{i64 2155032266, i64 2155032286, i64 2155032349}
!3325 = !DILocation(line: 67, column: 1, scope: !3295)
!3326 = !{i64 2155032773, i64 2155032793, i64 2155032856}
!3327 = !DILocation(line: 68, column: 1, scope: !3295)
!3328 = !{i64 2155033261, i64 2155033281, i64 2155033344}
!3329 = !DILocation(line: 70, column: 1, scope: !3295)
!3330 = !{i64 2155033729, i64 2155033749, i64 2155033812}
!3331 = !DILocation(line: 71, column: 1, scope: !3295)
!3332 = !{i64 2155038232, i64 2155038252, i64 2155038315}
!3333 = !DILocation(line: 72, column: 1, scope: !3295)
!3334 = !{i64 2155038690, i64 2155038710, i64 2155038773}
!3335 = !DILocation(line: 79, column: 1, scope: !3295)
!3336 = !{i64 2155039144, i64 2155039164, i64 2155039227}
!3337 = !DILocation(line: 80, column: 1, scope: !3295)
!3338 = !{i64 2155039655, i64 2155039675, i64 2155039738}
!3339 = !DILocation(line: 82, column: 1, scope: !3295)
!3340 = !{i64 2155040146, i64 2155040166, i64 2155040229}
!3341 = !DILocation(line: 97, column: 1, scope: !3295)
!3342 = !{i64 2155040483, i64 2155040503, i64 2155040566}
!3343 = !DILocation(line: 99, column: 1, scope: !3295)
!3344 = !{i64 2155040701, i64 2155040721, i64 2155040784}
!3345 = !DILocation(line: 102, column: 1, scope: !3295)
!3346 = !{i64 2155040958, i64 2155040978, i64 2155041041}
!3347 = !DILocation(line: 105, column: 1, scope: !3295)
!3348 = !{i64 2155041198, i64 2155041218, i64 2155041281}
!3349 = !DILocation(line: 115, column: 1, scope: !3295)
!3350 = !{i64 2155041537, i64 2155041557, i64 2155041620}
!3351 = !DILocation(line: 118, column: 1, scope: !3295)
!3352 = !{i64 2155041881, i64 2155041901, i64 2155041964}
!3353 = !DILocation(line: 32, column: 1, scope: !3354)
!3354 = !DILexicalBlockFile(scope: !3295, file: !3355, discriminator: 0)
!3355 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3356 = !{i64 2155042237, i64 2155042257, i64 2155042320}
!3357 = !DILocation(line: 33, column: 1, scope: !3354)
!3358 = !{i64 2155042749, i64 2155042769, i64 2155042832}
!3359 = !DILocation(line: 53, column: 1, scope: !3354)
!3360 = !{i64 2155043257, i64 2155043277, i64 2155043340}
!3361 = !DILocation(line: 54, column: 1, scope: !3354)
!3362 = !{i64 2155043675, i64 2155043695, i64 2155043758}
!3363 = !DILocation(line: 55, column: 1, scope: !3354)
!3364 = !{i64 2155044093, i64 2155044113, i64 2155044176}
!3365 = !DILocation(line: 56, column: 1, scope: !3354)
!3366 = !{i64 2155044511, i64 2155044531, i64 2155044594}
!3367 = !DILocation(line: 57, column: 1, scope: !3354)
!3368 = !{i64 2155044929, i64 2155044949, i64 2155045012}
!3369 = !DILocation(line: 58, column: 1, scope: !3354)
!3370 = !{i64 2155045347, i64 2155045367, i64 2155045430}
!3371 = !DILocation(line: 59, column: 1, scope: !3354)
!3372 = !{i64 2155045765, i64 2155045785, i64 2155045848}
!3373 = !DILocation(line: 60, column: 1, scope: !3354)
!3374 = !{i64 2155046189, i64 2155046209, i64 2155046272}
!3375 = !DILocation(line: 61, column: 1, scope: !3354)
!3376 = !{i64 2155046506, i64 2155046526, i64 2155046589}
!3377 = !DILocation(line: 70, column: 1, scope: !3354)
!3378 = !{i64 2155046735, i64 2155046755, i64 2155046818}
!3379 = !DILocation(line: 72, column: 1, scope: !3354)
!3380 = !{i64 2155047067, i64 2155047087, i64 2155047150}
!3381 = !DILocation(line: 73, column: 1, scope: !3354)
!3382 = !{i64 2155047517, i64 2155047537, i64 2155047600}
!3383 = !DILocation(line: 74, column: 1, scope: !3354)
!3384 = !{i64 2155052028, i64 2155052048, i64 2155052111}
!3385 = !DILocation(line: 75, column: 1, scope: !3354)
!3386 = !{i64 2155052478, i64 2155052498, i64 2155052561}
!3387 = !DILocation(line: 76, column: 1, scope: !3354)
!3388 = !{i64 2155052928, i64 2155052948, i64 2155053011}
!3389 = !DILocation(line: 77, column: 1, scope: !3354)
!3390 = !{i64 2155053378, i64 2155053398, i64 2155053461}
!3391 = !DILocation(line: 78, column: 1, scope: !3354)
!3392 = !{i64 2155053828, i64 2155053848, i64 2155053911}
!3393 = !DILocation(line: 79, column: 1, scope: !3354)
!3394 = !{i64 2155054278, i64 2155054298, i64 2155054361}
!3395 = !DILocation(line: 80, column: 1, scope: !3354)
!3396 = !{i64 2155054731, i64 2155054751, i64 2155054814}
!3397 = !DILocation(line: 84, column: 1, scope: !3354)
!3398 = !{i64 2155055063, i64 2155055083, i64 2155055146}
!3399 = !DILocation(line: 91, column: 1, scope: !3354)
!3400 = !{i64 2155055460, i64 2155055480, i64 2155055543}
!3401 = !DILocation(line: 93, column: 1, scope: !3354)
!3402 = !{i64 2155055827, i64 2155055847, i64 2155055910}
!3403 = !DILocation(line: 106, column: 1, scope: !3354)
!3404 = !{i64 2155056097, i64 2155056117, i64 2155056180}
!3405 = !DILocation(line: 11, column: 1, scope: !3406)
!3406 = !DILexicalBlockFile(scope: !3295, file: !3407, discriminator: 0)
!3407 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3408 = distinct !DISubprogram(name: "validate_hw_compatibility", scope: !294, file: !294, line: 80, type: !132, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3409)
!3409 = !{!3410, !3411}
!3410 = !DILocalVariable(name: "dev", arg: 1, scope: !3408, file: !294, line: 80, type: !134)
!3411 = !DILocalVariable(name: "flags", scope: !3408, file: !294, line: 82, type: !208)
!3412 = !DILocation(line: 0, scope: !3408)
!3413 = !DILocation(line: 84, column: 10, scope: !3408)
!3414 = !DILocation(line: 85, column: 13, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3408, file: !294, line: 85, column: 6)
!3416 = !DILocation(line: 85, column: 28, scope: !3415)
!3417 = !DILocation(line: 85, column: 6, scope: !3408)
!3418 = !DILocation(line: 86, column: 3, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3420, file: !294, line: 86, column: 3)
!3420 = distinct !DILexicalBlock(scope: !3421, file: !294, line: 86, column: 3)
!3421 = distinct !DILexicalBlock(scope: !3422, file: !294, line: 86, column: 3)
!3422 = distinct !DILexicalBlock(scope: !3423, file: !294, line: 86, column: 3)
!3423 = distinct !DILexicalBlock(scope: !3415, file: !294, line: 85, column: 35)
!3424 = !DILocation(line: 88, column: 3, scope: !3423)
!3425 = !DILocation(line: 91, column: 13, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3408, file: !294, line: 91, column: 6)
!3427 = !DILocation(line: 91, column: 29, scope: !3426)
!3428 = !DILocation(line: 91, column: 6, scope: !3408)
!3429 = !DILocation(line: 92, column: 3, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3431, file: !294, line: 92, column: 3)
!3431 = distinct !DILexicalBlock(scope: !3432, file: !294, line: 92, column: 3)
!3432 = distinct !DILexicalBlock(scope: !3433, file: !294, line: 92, column: 3)
!3433 = distinct !DILexicalBlock(scope: !3434, file: !294, line: 92, column: 3)
!3434 = distinct !DILexicalBlock(scope: !3426, file: !294, line: 91, column: 36)
!3435 = !DILocation(line: 94, column: 3, scope: !3434)
!3436 = !DILocation(line: 97, column: 13, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3408, file: !294, line: 97, column: 6)
!3438 = !DILocation(line: 97, column: 37, scope: !3437)
!3439 = !DILocation(line: 97, column: 6, scope: !3408)
!3440 = !DILocation(line: 98, column: 3, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3442, file: !294, line: 98, column: 3)
!3442 = distinct !DILexicalBlock(scope: !3443, file: !294, line: 98, column: 3)
!3443 = distinct !DILexicalBlock(scope: !3444, file: !294, line: 98, column: 3)
!3444 = distinct !DILexicalBlock(scope: !3445, file: !294, line: 98, column: 3)
!3445 = distinct !DILexicalBlock(scope: !3437, file: !294, line: 97, column: 44)
!3446 = !DILocation(line: 100, column: 3, scope: !3445)
!3447 = !DILocation(line: 103, column: 12, scope: !3408)
!3448 = !DILocation(line: 105, column: 2, scope: !3408)
!3449 = !DILocation(line: 107, column: 1, scope: !3408)
!3450 = distinct !DISubprogram(name: "crypto_query_hwcaps", scope: !128, file: !128, line: 108, type: !132, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3451)
!3451 = !{!3452, !3453, !3454}
!3452 = !DILocalVariable(name: "dev", arg: 1, scope: !3450, file: !128, line: 108, type: !134)
!3453 = !DILocalVariable(name: "api", scope: !3450, file: !128, line: 110, type: !126)
!3454 = !DILocalVariable(name: "tmp", scope: !3450, file: !128, line: 111, type: !125)
!3455 = !DILocation(line: 0, scope: !3450)
!3456 = !DILocation(line: 113, column: 42, scope: !3450)
!3457 = !DILocation(line: 115, column: 13, scope: !3450)
!3458 = !DILocation(line: 115, column: 8, scope: !3450)
!3459 = !DILocation(line: 125, column: 2, scope: !3450)
!3460 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3461, file: !3461, line: 175, type: !3462, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3464)
!3461 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!142, !125}
!3464 = !{!3465}
!3465 = !DILocalVariable(name: "level", arg: 1, scope: !3460, file: !3461, line: 175, type: !125)
!3466 = !DILocation(line: 0, scope: !3460)
!3467 = !DILocation(line: 177, column: 2, scope: !3460)
!3468 = !DILocation(line: 189, column: 1, scope: !3460)
!3469 = distinct !DISubprogram(name: "ecb_mode", scope: !294, file: !294, line: 109, type: !295, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3470)
!3470 = !{!3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3479, !3480}
!3471 = !DILocalVariable(name: "dev", arg: 1, scope: !3469, file: !294, line: 109, type: !134)
!3472 = !DILocalVariable(name: "ecb_key", scope: !3469, file: !294, line: 112, type: !311)
!3473 = !DILocalVariable(name: "ecb_plaintext", scope: !3469, file: !294, line: 116, type: !311)
!3474 = !DILocalVariable(name: "ecb_ciphertext", scope: !3469, file: !294, line: 120, type: !2132)
!3475 = !DILocalVariable(name: "encrypted", scope: !3469, file: !294, line: 125, type: !311)
!3476 = !DILocalVariable(name: "decrypted", scope: !3469, file: !294, line: 126, type: !311)
!3477 = !DILocalVariable(name: "ini", scope: !3469, file: !294, line: 127, type: !166)
!3478 = !DILocalVariable(name: "encrypt", scope: !3469, file: !294, line: 132, type: !181)
!3479 = !DILocalVariable(name: "decrypt", scope: !3469, file: !294, line: 138, type: !181)
!3480 = !DILabel(scope: !3469, name: "out", file: !294, line: 191)
!3481 = !DILocation(line: 0, scope: !3469)
!3482 = !DILocation(line: 112, column: 2, scope: !3469)
!3483 = !DILocation(line: 112, column: 10, scope: !3469)
!3484 = !DILocation(line: 116, column: 2, scope: !3469)
!3485 = !DILocation(line: 116, column: 10, scope: !3469)
!3486 = !DILocation(line: 120, column: 2, scope: !3469)
!3487 = !DILocation(line: 120, column: 16, scope: !3469)
!3488 = !DILocation(line: 125, column: 2, scope: !3469)
!3489 = !DILocation(line: 125, column: 10, scope: !3469)
!3490 = !DILocation(line: 126, column: 2, scope: !3469)
!3491 = !DILocation(line: 126, column: 10, scope: !3469)
!3492 = !DILocation(line: 127, column: 2, scope: !3469)
!3493 = !DILocation(line: 127, column: 20, scope: !3469)
!3494 = !DILocation(line: 129, column: 7, scope: !3469)
!3495 = !DILocation(line: 127, column: 26, scope: !3469)
!3496 = !DILocation(line: 130, column: 12, scope: !3469)
!3497 = !DILocation(line: 132, column: 2, scope: !3469)
!3498 = !DILocation(line: 132, column: 20, scope: !3469)
!3499 = !DILocation(line: 132, column: 30, scope: !3469)
!3500 = !DILocation(line: 138, column: 2, scope: !3469)
!3501 = !DILocation(line: 138, column: 20, scope: !3469)
!3502 = !DILocation(line: 138, column: 30, scope: !3469)
!3503 = !DILocation(line: 145, column: 6, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 145, column: 6)
!3505 = !DILocation(line: 145, column: 6, scope: !3469)
!3506 = !DILocation(line: 151, column: 6, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 151, column: 6)
!3508 = !DILocation(line: 151, column: 6, scope: !3469)
!3509 = !DILocation(line: 152, column: 3, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !294, line: 152, column: 3)
!3511 = distinct !DILexicalBlock(scope: !3512, file: !294, line: 152, column: 3)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !294, line: 152, column: 3)
!3513 = distinct !DILexicalBlock(scope: !3514, file: !294, line: 152, column: 3)
!3514 = distinct !DILexicalBlock(scope: !3507, file: !294, line: 151, column: 39)
!3515 = !DILocation(line: 153, column: 3, scope: !3514)
!3516 = !DILocation(line: 156, column: 2, scope: !3517)
!3517 = distinct !DILexicalBlock(scope: !3518, file: !294, line: 156, column: 2)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !294, line: 156, column: 2)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !294, line: 156, column: 2)
!3520 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 156, column: 2)
!3521 = !DILocation(line: 158, column: 21, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 158, column: 6)
!3523 = !DILocation(line: 158, column: 6, scope: !3522)
!3524 = !DILocation(line: 158, column: 6, scope: !3469)
!3525 = !DILocation(line: 159, column: 3, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3527, file: !294, line: 159, column: 3)
!3527 = distinct !DILexicalBlock(scope: !3528, file: !294, line: 159, column: 3)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !294, line: 159, column: 3)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !294, line: 159, column: 3)
!3530 = distinct !DILexicalBlock(scope: !3522, file: !294, line: 158, column: 71)
!3531 = !DILocation(line: 161, column: 51, scope: !3530)
!3532 = !DILocation(line: 161, column: 3, scope: !3530)
!3533 = !DILocation(line: 163, column: 3, scope: !3530)
!3534 = !DILocation(line: 166, column: 2, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3536, file: !294, line: 166, column: 2)
!3536 = distinct !DILexicalBlock(scope: !3537, file: !294, line: 166, column: 2)
!3537 = distinct !DILexicalBlock(scope: !3538, file: !294, line: 166, column: 2)
!3538 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 166, column: 2)
!3539 = !DILocation(line: 167, column: 2, scope: !3469)
!3540 = !DILocation(line: 169, column: 6, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 169, column: 6)
!3542 = !DILocation(line: 169, column: 6, scope: !3469)
!3543 = !DILocation(line: 175, column: 6, scope: !3544)
!3544 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 175, column: 6)
!3545 = !DILocation(line: 175, column: 6, scope: !3469)
!3546 = !DILocation(line: 176, column: 3, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !294, line: 176, column: 3)
!3548 = distinct !DILexicalBlock(scope: !3549, file: !294, line: 176, column: 3)
!3549 = distinct !DILexicalBlock(scope: !3550, file: !294, line: 176, column: 3)
!3550 = distinct !DILexicalBlock(scope: !3551, file: !294, line: 176, column: 3)
!3551 = distinct !DILexicalBlock(scope: !3544, file: !294, line: 175, column: 39)
!3552 = !DILocation(line: 177, column: 3, scope: !3551)
!3553 = !DILocation(line: 180, column: 2, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3555, file: !294, line: 180, column: 2)
!3555 = distinct !DILexicalBlock(scope: !3556, file: !294, line: 180, column: 2)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !294, line: 180, column: 2)
!3557 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 180, column: 2)
!3558 = !DILocation(line: 182, column: 21, scope: !3559)
!3559 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 182, column: 6)
!3560 = !DILocation(line: 182, column: 6, scope: !3559)
!3561 = !DILocation(line: 182, column: 6, scope: !3469)
!3562 = !DILocation(line: 183, column: 3, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3564, file: !294, line: 183, column: 3)
!3564 = distinct !DILexicalBlock(scope: !3565, file: !294, line: 183, column: 3)
!3565 = distinct !DILexicalBlock(scope: !3566, file: !294, line: 183, column: 3)
!3566 = distinct !DILexicalBlock(scope: !3567, file: !294, line: 183, column: 3)
!3567 = distinct !DILexicalBlock(scope: !3559, file: !294, line: 182, column: 69)
!3568 = !DILocation(line: 185, column: 50, scope: !3567)
!3569 = !DILocation(line: 185, column: 3, scope: !3567)
!3570 = !DILocation(line: 187, column: 3, scope: !3567)
!3571 = !DILocation(line: 190, column: 2, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !294, line: 190, column: 2)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !294, line: 190, column: 2)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !294, line: 190, column: 2)
!3575 = distinct !DILexicalBlock(scope: !3469, file: !294, line: 190, column: 2)
!3576 = !DILocation(line: 190, column: 2, scope: !3575)
!3577 = !DILocation(line: 191, column: 1, scope: !3469)
!3578 = !DILocation(line: 192, column: 2, scope: !3469)
!3579 = !DILocation(line: 193, column: 1, scope: !3469)
!3580 = distinct !DISubprogram(name: "cipher_begin_session", scope: !128, file: !128, line: 159, type: !163, scopeLine: 164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3581)
!3581 = !{!3582, !3583, !3584, !3585, !3586, !3587, !3588}
!3582 = !DILocalVariable(name: "dev", arg: 1, scope: !3580, file: !128, line: 159, type: !134)
!3583 = !DILocalVariable(name: "ctx", arg: 2, scope: !3580, file: !128, line: 160, type: !165)
!3584 = !DILocalVariable(name: "algo", arg: 3, scope: !3580, file: !128, line: 161, type: !39)
!3585 = !DILocalVariable(name: "mode", arg: 4, scope: !3580, file: !128, line: 162, type: !30)
!3586 = !DILocalVariable(name: "optype", arg: 5, scope: !3580, file: !128, line: 163, type: !42)
!3587 = !DILocalVariable(name: "api", scope: !3580, file: !128, line: 165, type: !126)
!3588 = !DILocalVariable(name: "flags", scope: !3580, file: !128, line: 166, type: !208)
!3589 = !DILocation(line: 0, scope: !3580)
!3590 = !DILocation(line: 168, column: 42, scope: !3580)
!3591 = !DILocation(line: 169, column: 7, scope: !3580)
!3592 = !DILocation(line: 169, column: 14, scope: !3580)
!3593 = !DILocation(line: 170, column: 11, scope: !3580)
!3594 = !DILocation(line: 170, column: 23, scope: !3580)
!3595 = !DILocation(line: 187, column: 14, scope: !3580)
!3596 = !DILocation(line: 187, column: 9, scope: !3580)
!3597 = !DILocation(line: 187, column: 2, scope: !3580)
!3598 = distinct !DISubprogram(name: "cipher_block_op", scope: !128, file: !128, line: 249, type: !178, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3599)
!3599 = !{!3600, !3601}
!3600 = !DILocalVariable(name: "ctx", arg: 1, scope: !3598, file: !128, line: 249, type: !165)
!3601 = !DILocalVariable(name: "pkt", arg: 2, scope: !3598, file: !128, line: 250, type: !180)
!3602 = !DILocation(line: 0, scope: !3598)
!3603 = !DILocation(line: 255, column: 7, scope: !3598)
!3604 = !DILocation(line: 255, column: 11, scope: !3598)
!3605 = !DILocation(line: 256, column: 18, scope: !3598)
!3606 = !DILocation(line: 256, column: 9, scope: !3598)
!3607 = !DILocation(line: 256, column: 2, scope: !3598)
!3608 = distinct !DISubprogram(name: "print_buffer_comparison", scope: !294, file: !294, line: 50, type: !3609, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3611)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{null, !490, !184, !272}
!3611 = !{!3612, !3613, !3614, !3615, !3616}
!3612 = !DILocalVariable(name: "wanted_result", arg: 1, scope: !3608, file: !294, line: 50, type: !490)
!3613 = !DILocalVariable(name: "result", arg: 2, scope: !3608, file: !294, line: 51, type: !184)
!3614 = !DILocalVariable(name: "length", arg: 3, scope: !3608, file: !294, line: 51, type: !272)
!3615 = !DILocalVariable(name: "i", scope: !3608, file: !294, line: 53, type: !125)
!3616 = !DILocalVariable(name: "j", scope: !3608, file: !294, line: 53, type: !125)
!3617 = !DILocation(line: 0, scope: !3608)
!3618 = !DILocation(line: 55, column: 2, scope: !3608)
!3619 = !DILocation(line: 57, column: 23, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3621, file: !294, line: 57, column: 2)
!3621 = distinct !DILexicalBlock(scope: !3608, file: !294, line: 57, column: 2)
!3622 = !DILocation(line: 57, column: 2, scope: !3621)
!3623 = !DILocation(line: 66, column: 2, scope: !3608)
!3624 = !DILocation(line: 68, column: 2, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3608, file: !294, line: 68, column: 2)
!3626 = !DILocation(line: 58, column: 21, scope: !3627)
!3627 = distinct !DILexicalBlock(scope: !3620, file: !294, line: 57, column: 43)
!3628 = !DILocation(line: 58, column: 3, scope: !3627)
!3629 = !DILocation(line: 60, column: 9, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3627, file: !294, line: 60, column: 7)
!3631 = !DILocation(line: 60, column: 7, scope: !3627)
!3632 = !DILocation(line: 61, column: 4, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3630, file: !294, line: 60, column: 16)
!3634 = !DILocation(line: 63, column: 3, scope: !3633)
!3635 = !DILocation(line: 0, scope: !3621)
!3636 = !DILocation(line: 57, column: 34, scope: !3620)
!3637 = !DILocation(line: 57, column: 39, scope: !3620)
!3638 = distinct !{!3638, !3622, !3639}
!3639 = !DILocation(line: 64, column: 2, scope: !3621)
!3640 = !DILocation(line: 69, column: 21, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !294, line: 68, column: 43)
!3642 = distinct !DILexicalBlock(scope: !3625, file: !294, line: 68, column: 2)
!3643 = !DILocation(line: 69, column: 3, scope: !3641)
!3644 = !DILocation(line: 71, column: 9, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3641, file: !294, line: 71, column: 7)
!3646 = !DILocation(line: 71, column: 7, scope: !3641)
!3647 = !DILocation(line: 72, column: 4, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3645, file: !294, line: 71, column: 16)
!3649 = !DILocation(line: 74, column: 3, scope: !3648)
!3650 = !DILocation(line: 0, scope: !3625)
!3651 = !DILocation(line: 68, column: 34, scope: !3642)
!3652 = !DILocation(line: 68, column: 39, scope: !3642)
!3653 = !DILocation(line: 68, column: 23, scope: !3642)
!3654 = distinct !{!3654, !3624, !3655}
!3655 = !DILocation(line: 75, column: 2, scope: !3625)
!3656 = !DILocation(line: 77, column: 2, scope: !3608)
!3657 = !DILocation(line: 78, column: 1, scope: !3608)
!3658 = distinct !DISubprogram(name: "cipher_free_session", scope: !128, file: !128, line: 201, type: !243, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3659)
!3659 = !{!3660, !3661, !3662}
!3660 = !DILocalVariable(name: "dev", arg: 1, scope: !3658, file: !128, line: 201, type: !134)
!3661 = !DILocalVariable(name: "ctx", arg: 2, scope: !3658, file: !128, line: 202, type: !165)
!3662 = !DILocalVariable(name: "api", scope: !3658, file: !128, line: 204, type: !126)
!3663 = !DILocation(line: 0, scope: !3658)
!3664 = !DILocation(line: 206, column: 42, scope: !3658)
!3665 = !DILocation(line: 208, column: 14, scope: !3658)
!3666 = !DILocation(line: 208, column: 9, scope: !3658)
!3667 = !DILocation(line: 208, column: 2, scope: !3658)
!3668 = !DILocation(line: 0, scope: !293)
!3669 = !DILocation(line: 207, column: 2, scope: !293)
!3670 = !DILocation(line: 207, column: 10, scope: !293)
!3671 = !DILocation(line: 208, column: 2, scope: !293)
!3672 = !DILocation(line: 208, column: 10, scope: !293)
!3673 = !DILocation(line: 209, column: 2, scope: !293)
!3674 = !DILocation(line: 209, column: 20, scope: !293)
!3675 = !DILocation(line: 211, column: 7, scope: !293)
!3676 = !DILocation(line: 209, column: 26, scope: !293)
!3677 = !DILocation(line: 212, column: 12, scope: !293)
!3678 = !DILocation(line: 214, column: 2, scope: !293)
!3679 = !DILocation(line: 214, column: 20, scope: !293)
!3680 = !DILocation(line: 214, column: 30, scope: !293)
!3681 = !DILocation(line: 220, column: 2, scope: !293)
!3682 = !DILocation(line: 220, column: 20, scope: !293)
!3683 = !DILocation(line: 220, column: 30, scope: !293)
!3684 = !DILocation(line: 232, column: 6, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !293, file: !294, line: 232, column: 6)
!3686 = !DILocation(line: 232, column: 6, scope: !293)
!3687 = !DILocation(line: 238, column: 6, scope: !3688)
!3688 = distinct !DILexicalBlock(scope: !293, file: !294, line: 238, column: 6)
!3689 = !DILocation(line: 238, column: 6, scope: !293)
!3690 = !DILocation(line: 239, column: 3, scope: !3691)
!3691 = distinct !DILexicalBlock(scope: !3692, file: !294, line: 239, column: 3)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !294, line: 239, column: 3)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !294, line: 239, column: 3)
!3694 = distinct !DILexicalBlock(scope: !3695, file: !294, line: 239, column: 3)
!3695 = distinct !DILexicalBlock(scope: !3688, file: !294, line: 238, column: 41)
!3696 = !DILocation(line: 240, column: 3, scope: !3695)
!3697 = !DILocation(line: 243, column: 2, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3699, file: !294, line: 243, column: 2)
!3699 = distinct !DILexicalBlock(scope: !3700, file: !294, line: 243, column: 2)
!3700 = distinct !DILexicalBlock(scope: !3701, file: !294, line: 243, column: 2)
!3701 = distinct !DILexicalBlock(scope: !293, file: !294, line: 243, column: 2)
!3702 = !DILocation(line: 245, column: 21, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !293, file: !294, line: 245, column: 6)
!3704 = !DILocation(line: 245, column: 6, scope: !3703)
!3705 = !DILocation(line: 245, column: 6, scope: !293)
!3706 = !DILocation(line: 246, column: 3, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3708, file: !294, line: 246, column: 3)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !294, line: 246, column: 3)
!3709 = distinct !DILexicalBlock(scope: !3710, file: !294, line: 246, column: 3)
!3710 = distinct !DILexicalBlock(scope: !3711, file: !294, line: 246, column: 3)
!3711 = distinct !DILexicalBlock(scope: !3703, file: !294, line: 245, column: 71)
!3712 = !DILocation(line: 248, column: 51, scope: !3711)
!3713 = !DILocation(line: 248, column: 3, scope: !3711)
!3714 = !DILocation(line: 250, column: 3, scope: !3711)
!3715 = !DILocation(line: 253, column: 2, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3717, file: !294, line: 253, column: 2)
!3717 = distinct !DILexicalBlock(scope: !3718, file: !294, line: 253, column: 2)
!3718 = distinct !DILexicalBlock(scope: !3719, file: !294, line: 253, column: 2)
!3719 = distinct !DILexicalBlock(scope: !293, file: !294, line: 253, column: 2)
!3720 = !DILocation(line: 254, column: 2, scope: !293)
!3721 = !DILocation(line: 256, column: 6, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !293, file: !294, line: 256, column: 6)
!3723 = !DILocation(line: 256, column: 6, scope: !293)
!3724 = !DILocation(line: 263, column: 6, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !293, file: !294, line: 263, column: 6)
!3726 = !DILocation(line: 263, column: 6, scope: !293)
!3727 = !DILocation(line: 264, column: 3, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !294, line: 264, column: 3)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !294, line: 264, column: 3)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !294, line: 264, column: 3)
!3731 = distinct !DILexicalBlock(scope: !3732, file: !294, line: 264, column: 3)
!3732 = distinct !DILexicalBlock(scope: !3725, file: !294, line: 263, column: 48)
!3733 = !DILocation(line: 265, column: 3, scope: !3732)
!3734 = !DILocation(line: 268, column: 2, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3736, file: !294, line: 268, column: 2)
!3736 = distinct !DILexicalBlock(scope: !3737, file: !294, line: 268, column: 2)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !294, line: 268, column: 2)
!3738 = distinct !DILexicalBlock(scope: !293, file: !294, line: 268, column: 2)
!3739 = !DILocation(line: 270, column: 21, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !293, file: !294, line: 270, column: 6)
!3741 = !DILocation(line: 270, column: 6, scope: !3740)
!3742 = !DILocation(line: 270, column: 6, scope: !293)
!3743 = !DILocation(line: 271, column: 3, scope: !3744)
!3744 = distinct !DILexicalBlock(scope: !3745, file: !294, line: 271, column: 3)
!3745 = distinct !DILexicalBlock(scope: !3746, file: !294, line: 271, column: 3)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !294, line: 271, column: 3)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !294, line: 271, column: 3)
!3748 = distinct !DILexicalBlock(scope: !3740, file: !294, line: 270, column: 61)
!3749 = !DILocation(line: 273, column: 46, scope: !3748)
!3750 = !DILocation(line: 273, column: 3, scope: !3748)
!3751 = !DILocation(line: 275, column: 3, scope: !3748)
!3752 = !DILocation(line: 278, column: 2, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !294, line: 278, column: 2)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !294, line: 278, column: 2)
!3755 = distinct !DILexicalBlock(scope: !3756, file: !294, line: 278, column: 2)
!3756 = distinct !DILexicalBlock(scope: !293, file: !294, line: 278, column: 2)
!3757 = !DILocation(line: 278, column: 2, scope: !3756)
!3758 = !DILocation(line: 279, column: 1, scope: !293)
!3759 = !DILocation(line: 280, column: 2, scope: !293)
!3760 = !DILocation(line: 281, column: 1, scope: !293)
!3761 = distinct !DISubprogram(name: "cipher_cbc_op", scope: !128, file: !128, line: 270, type: !193, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3762)
!3762 = !{!3763, !3764, !3765}
!3763 = !DILocalVariable(name: "ctx", arg: 1, scope: !3761, file: !128, line: 270, type: !165)
!3764 = !DILocalVariable(name: "pkt", arg: 2, scope: !3761, file: !128, line: 271, type: !180)
!3765 = !DILocalVariable(name: "iv", arg: 3, scope: !3761, file: !128, line: 271, type: !184)
!3766 = !DILocation(line: 0, scope: !3761)
!3767 = !DILocation(line: 276, column: 7, scope: !3761)
!3768 = !DILocation(line: 276, column: 11, scope: !3761)
!3769 = !DILocation(line: 277, column: 18, scope: !3761)
!3770 = !DILocation(line: 277, column: 9, scope: !3761)
!3771 = !DILocation(line: 277, column: 2, scope: !3761)
!3772 = distinct !DISubprogram(name: "ctr_mode", scope: !294, file: !294, line: 294, type: !295, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3773)
!3773 = !{!3774, !3775, !3776, !3777, !3778, !3779, !3780, !3781}
!3774 = !DILocalVariable(name: "dev", arg: 1, scope: !3772, file: !294, line: 294, type: !134)
!3775 = !DILocalVariable(name: "encrypted", scope: !3772, file: !294, line: 296, type: !304)
!3776 = !DILocalVariable(name: "decrypted", scope: !3772, file: !294, line: 297, type: !304)
!3777 = !DILocalVariable(name: "ini", scope: !3772, file: !294, line: 298, type: !166)
!3778 = !DILocalVariable(name: "encrypt", scope: !3772, file: !294, line: 305, type: !181)
!3779 = !DILocalVariable(name: "decrypt", scope: !3772, file: !294, line: 311, type: !181)
!3780 = !DILocalVariable(name: "iv", scope: !3772, file: !294, line: 317, type: !363)
!3781 = !DILabel(scope: !3772, name: "out", file: !294, line: 368)
!3782 = !DILocation(line: 0, scope: !3772)
!3783 = !DILocation(line: 296, column: 2, scope: !3772)
!3784 = !DILocation(line: 296, column: 10, scope: !3772)
!3785 = !DILocation(line: 297, column: 2, scope: !3772)
!3786 = !DILocation(line: 297, column: 10, scope: !3772)
!3787 = !DILocation(line: 298, column: 2, scope: !3772)
!3788 = !DILocation(line: 298, column: 20, scope: !3772)
!3789 = !DILocation(line: 298, column: 26, scope: !3772)
!3790 = !DILocation(line: 300, column: 7, scope: !3772)
!3791 = !DILocation(line: 303, column: 24, scope: !3772)
!3792 = !DILocation(line: 301, column: 12, scope: !3772)
!3793 = !DILocation(line: 305, column: 2, scope: !3772)
!3794 = !DILocation(line: 305, column: 20, scope: !3772)
!3795 = !DILocation(line: 305, column: 30, scope: !3772)
!3796 = !DILocation(line: 311, column: 2, scope: !3772)
!3797 = !DILocation(line: 311, column: 20, scope: !3772)
!3798 = !DILocation(line: 311, column: 30, scope: !3772)
!3799 = !DILocation(line: 317, column: 2, scope: !3772)
!3800 = !DILocation(line: 317, column: 10, scope: !3772)
!3801 = !DILocation(line: 322, column: 6, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 322, column: 6)
!3803 = !DILocation(line: 322, column: 6, scope: !3772)
!3804 = !DILocation(line: 328, column: 6, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 328, column: 6)
!3806 = !DILocation(line: 328, column: 6, scope: !3772)
!3807 = !DILocation(line: 329, column: 3, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3809, file: !294, line: 329, column: 3)
!3809 = distinct !DILexicalBlock(scope: !3810, file: !294, line: 329, column: 3)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !294, line: 329, column: 3)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !294, line: 329, column: 3)
!3812 = distinct !DILexicalBlock(scope: !3805, file: !294, line: 328, column: 41)
!3813 = !DILocation(line: 330, column: 3, scope: !3812)
!3814 = !DILocation(line: 333, column: 2, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !294, line: 333, column: 2)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !294, line: 333, column: 2)
!3817 = distinct !DILexicalBlock(scope: !3818, file: !294, line: 333, column: 2)
!3818 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 333, column: 2)
!3819 = !DILocation(line: 335, column: 21, scope: !3820)
!3820 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 335, column: 6)
!3821 = !DILocation(line: 335, column: 6, scope: !3820)
!3822 = !DILocation(line: 335, column: 6, scope: !3772)
!3823 = !DILocation(line: 336, column: 3, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3825, file: !294, line: 336, column: 3)
!3825 = distinct !DILexicalBlock(scope: !3826, file: !294, line: 336, column: 3)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !294, line: 336, column: 3)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !294, line: 336, column: 3)
!3828 = distinct !DILexicalBlock(scope: !3820, file: !294, line: 335, column: 71)
!3829 = !DILocation(line: 338, column: 51, scope: !3828)
!3830 = !DILocation(line: 338, column: 3, scope: !3828)
!3831 = !DILocation(line: 340, column: 3, scope: !3828)
!3832 = !DILocation(line: 343, column: 2, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !294, line: 343, column: 2)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !294, line: 343, column: 2)
!3835 = distinct !DILexicalBlock(scope: !3836, file: !294, line: 343, column: 2)
!3836 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 343, column: 2)
!3837 = !DILocation(line: 344, column: 2, scope: !3772)
!3838 = !DILocation(line: 346, column: 6, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 346, column: 6)
!3840 = !DILocation(line: 346, column: 6, scope: !3772)
!3841 = !DILocation(line: 352, column: 6, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 352, column: 6)
!3843 = !DILocation(line: 352, column: 6, scope: !3772)
!3844 = !DILocation(line: 353, column: 3, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !294, line: 353, column: 3)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !294, line: 353, column: 3)
!3847 = distinct !DILexicalBlock(scope: !3848, file: !294, line: 353, column: 3)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !294, line: 353, column: 3)
!3849 = distinct !DILexicalBlock(scope: !3842, file: !294, line: 352, column: 41)
!3850 = !DILocation(line: 354, column: 3, scope: !3849)
!3851 = !DILocation(line: 357, column: 2, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !294, line: 357, column: 2)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !294, line: 357, column: 2)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !294, line: 357, column: 2)
!3855 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 357, column: 2)
!3856 = !DILocation(line: 359, column: 21, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 359, column: 6)
!3858 = !DILocation(line: 359, column: 6, scope: !3857)
!3859 = !DILocation(line: 359, column: 6, scope: !3772)
!3860 = !DILocation(line: 360, column: 3, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !294, line: 360, column: 3)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !294, line: 360, column: 3)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !294, line: 360, column: 3)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !294, line: 360, column: 3)
!3865 = distinct !DILexicalBlock(scope: !3857, file: !294, line: 359, column: 61)
!3866 = !DILocation(line: 363, column: 14, scope: !3865)
!3867 = !DILocation(line: 362, column: 3, scope: !3865)
!3868 = !DILocation(line: 364, column: 3, scope: !3865)
!3869 = !DILocation(line: 367, column: 2, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !294, line: 367, column: 2)
!3871 = distinct !DILexicalBlock(scope: !3872, file: !294, line: 367, column: 2)
!3872 = distinct !DILexicalBlock(scope: !3873, file: !294, line: 367, column: 2)
!3873 = distinct !DILexicalBlock(scope: !3772, file: !294, line: 367, column: 2)
!3874 = !DILocation(line: 367, column: 2, scope: !3873)
!3875 = !DILocation(line: 368, column: 1, scope: !3772)
!3876 = !DILocation(line: 369, column: 2, scope: !3772)
!3877 = !DILocation(line: 370, column: 1, scope: !3772)
!3878 = distinct !DISubprogram(name: "cipher_ctr_op", scope: !128, file: !128, line: 297, type: !193, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3879)
!3879 = !{!3880, !3881, !3882}
!3880 = !DILocalVariable(name: "ctx", arg: 1, scope: !3878, file: !128, line: 297, type: !165)
!3881 = !DILocalVariable(name: "pkt", arg: 2, scope: !3878, file: !128, line: 298, type: !180)
!3882 = !DILocalVariable(name: "iv", arg: 3, scope: !3878, file: !128, line: 298, type: !184)
!3883 = !DILocation(line: 0, scope: !3878)
!3884 = !DILocation(line: 303, column: 7, scope: !3878)
!3885 = !DILocation(line: 303, column: 11, scope: !3878)
!3886 = !DILocation(line: 304, column: 18, scope: !3878)
!3887 = !DILocation(line: 304, column: 9, scope: !3878)
!3888 = !DILocation(line: 304, column: 2, scope: !3878)
!3889 = distinct !DISubprogram(name: "ccm_mode", scope: !294, file: !294, line: 394, type: !295, scopeLine: 395, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3890)
!3890 = !{!3891, !3892, !3896, !3900, !3901, !3902, !3903, !3904}
!3891 = !DILocalVariable(name: "dev", arg: 1, scope: !3889, file: !294, line: 394, type: !134)
!3892 = !DILocalVariable(name: "encrypted", scope: !3889, file: !294, line: 396, type: !3893)
!3893 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 400, elements: !3894)
!3894 = !{!3895}
!3895 = !DISubrange(count: 50)
!3896 = !DILocalVariable(name: "decrypted", scope: !3889, file: !294, line: 397, type: !3897)
!3897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 200, elements: !3898)
!3898 = !{!3899}
!3899 = !DISubrange(count: 25)
!3900 = !DILocalVariable(name: "ini", scope: !3889, file: !294, line: 398, type: !166)
!3901 = !DILocalVariable(name: "encrypt", scope: !3889, file: !294, line: 407, type: !181)
!3902 = !DILocalVariable(name: "ccm_op", scope: !3889, file: !294, line: 413, type: !203)
!3903 = !DILocalVariable(name: "decrypt", scope: !3889, file: !294, line: 425, type: !181)
!3904 = !DILabel(scope: !3889, name: "out", file: !294, line: 480)
!3905 = !DILocation(line: 0, scope: !3889)
!3906 = !DILocation(line: 396, column: 2, scope: !3889)
!3907 = !DILocation(line: 396, column: 10, scope: !3889)
!3908 = !DILocation(line: 397, column: 2, scope: !3889)
!3909 = !DILocation(line: 397, column: 10, scope: !3889)
!3910 = !DILocation(line: 398, column: 2, scope: !3889)
!3911 = !DILocation(line: 398, column: 20, scope: !3889)
!3912 = !DILocation(line: 398, column: 26, scope: !3889)
!3913 = !DILocation(line: 400, column: 7, scope: !3889)
!3914 = !DILocation(line: 401, column: 15, scope: !3889)
!3915 = !DILocation(line: 401, column: 27, scope: !3889)
!3916 = !DILocation(line: 405, column: 12, scope: !3889)
!3917 = !DILocation(line: 407, column: 2, scope: !3889)
!3918 = !DILocation(line: 407, column: 20, scope: !3889)
!3919 = !DILocation(line: 407, column: 30, scope: !3889)
!3920 = !DILocation(line: 413, column: 2, scope: !3889)
!3921 = !DILocation(line: 413, column: 25, scope: !3889)
!3922 = !DILocation(line: 413, column: 34, scope: !3889)
!3923 = !DILocation(line: 423, column: 20, scope: !3889)
!3924 = !DILocation(line: 425, column: 2, scope: !3889)
!3925 = !DILocation(line: 425, column: 20, scope: !3889)
!3926 = !DILocation(line: 425, column: 30, scope: !3889)
!3927 = !DILocation(line: 432, column: 6, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 432, column: 6)
!3929 = !DILocation(line: 432, column: 6, scope: !3889)
!3930 = !DILocation(line: 438, column: 13, scope: !3889)
!3931 = !DILocation(line: 439, column: 6, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 439, column: 6)
!3933 = !DILocation(line: 439, column: 6, scope: !3889)
!3934 = !DILocation(line: 440, column: 3, scope: !3935)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !294, line: 440, column: 3)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !294, line: 440, column: 3)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !294, line: 440, column: 3)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !294, line: 440, column: 3)
!3939 = distinct !DILexicalBlock(scope: !3932, file: !294, line: 439, column: 47)
!3940 = !DILocation(line: 441, column: 3, scope: !3939)
!3941 = !DILocation(line: 444, column: 2, scope: !3942)
!3942 = distinct !DILexicalBlock(scope: !3943, file: !294, line: 444, column: 2)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !294, line: 444, column: 2)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !294, line: 444, column: 2)
!3945 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 444, column: 2)
!3946 = !DILocation(line: 446, column: 21, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 446, column: 6)
!3948 = !DILocation(line: 446, column: 6, scope: !3947)
!3949 = !DILocation(line: 446, column: 6, scope: !3889)
!3950 = !DILocation(line: 447, column: 3, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !294, line: 447, column: 3)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !294, line: 447, column: 3)
!3953 = distinct !DILexicalBlock(scope: !3954, file: !294, line: 447, column: 3)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !294, line: 447, column: 3)
!3955 = distinct !DILexicalBlock(scope: !3947, file: !294, line: 446, column: 67)
!3956 = !DILocation(line: 450, column: 14, scope: !3955)
!3957 = !DILocation(line: 449, column: 3, scope: !3955)
!3958 = !DILocation(line: 451, column: 3, scope: !3955)
!3959 = !DILocation(line: 454, column: 2, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3961, file: !294, line: 454, column: 2)
!3961 = distinct !DILexicalBlock(scope: !3962, file: !294, line: 454, column: 2)
!3962 = distinct !DILexicalBlock(scope: !3963, file: !294, line: 454, column: 2)
!3963 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 454, column: 2)
!3964 = !DILocation(line: 455, column: 2, scope: !3889)
!3965 = !DILocation(line: 457, column: 6, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 457, column: 6)
!3967 = !DILocation(line: 457, column: 6, scope: !3889)
!3968 = !DILocation(line: 463, column: 13, scope: !3889)
!3969 = !DILocation(line: 464, column: 6, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 464, column: 6)
!3971 = !DILocation(line: 464, column: 6, scope: !3889)
!3972 = !DILocation(line: 465, column: 3, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !294, line: 465, column: 3)
!3974 = distinct !DILexicalBlock(scope: !3975, file: !294, line: 465, column: 3)
!3975 = distinct !DILexicalBlock(scope: !3976, file: !294, line: 465, column: 3)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !294, line: 465, column: 3)
!3977 = distinct !DILexicalBlock(scope: !3970, file: !294, line: 464, column: 47)
!3978 = !DILocation(line: 466, column: 3, scope: !3977)
!3979 = !DILocation(line: 469, column: 2, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3981, file: !294, line: 469, column: 2)
!3981 = distinct !DILexicalBlock(scope: !3982, file: !294, line: 469, column: 2)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !294, line: 469, column: 2)
!3983 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 469, column: 2)
!3984 = !DILocation(line: 471, column: 21, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 471, column: 6)
!3986 = !DILocation(line: 471, column: 6, scope: !3985)
!3987 = !DILocation(line: 471, column: 6, scope: !3889)
!3988 = !DILocation(line: 472, column: 3, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3990, file: !294, line: 472, column: 3)
!3990 = distinct !DILexicalBlock(scope: !3991, file: !294, line: 472, column: 3)
!3991 = distinct !DILexicalBlock(scope: !3992, file: !294, line: 472, column: 3)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !294, line: 472, column: 3)
!3993 = distinct !DILexicalBlock(scope: !3985, file: !294, line: 471, column: 59)
!3994 = !DILocation(line: 475, column: 14, scope: !3993)
!3995 = !DILocation(line: 474, column: 3, scope: !3993)
!3996 = !DILocation(line: 476, column: 3, scope: !3993)
!3997 = !DILocation(line: 479, column: 2, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3999, file: !294, line: 479, column: 2)
!3999 = distinct !DILexicalBlock(scope: !4000, file: !294, line: 479, column: 2)
!4000 = distinct !DILexicalBlock(scope: !4001, file: !294, line: 479, column: 2)
!4001 = distinct !DILexicalBlock(scope: !3889, file: !294, line: 479, column: 2)
!4002 = !DILocation(line: 479, column: 2, scope: !4001)
!4003 = !DILocation(line: 480, column: 1, scope: !3889)
!4004 = !DILocation(line: 481, column: 2, scope: !3889)
!4005 = !DILocation(line: 482, column: 1, scope: !3889)
!4006 = distinct !DISubprogram(name: "cipher_ccm_op", scope: !128, file: !128, line: 319, type: !200, scopeLine: 321, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4007)
!4007 = !{!4008, !4009, !4010}
!4008 = !DILocalVariable(name: "ctx", arg: 1, scope: !4006, file: !128, line: 319, type: !165)
!4009 = !DILocalVariable(name: "pkt", arg: 2, scope: !4006, file: !128, line: 320, type: !202)
!4010 = !DILocalVariable(name: "nonce", arg: 3, scope: !4006, file: !128, line: 320, type: !184)
!4011 = !DILocation(line: 0, scope: !4006)
!4012 = !DILocation(line: 325, column: 7, scope: !4006)
!4013 = !DILocation(line: 325, column: 12, scope: !4006)
!4014 = !DILocation(line: 325, column: 16, scope: !4006)
!4015 = !DILocation(line: 326, column: 18, scope: !4006)
!4016 = !DILocation(line: 326, column: 9, scope: !4006)
!4017 = !DILocation(line: 326, column: 2, scope: !4006)
!4018 = distinct !DISubprogram(name: "gcm_mode", scope: !294, file: !294, line: 511, type: !295, scopeLine: 512, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4019)
!4019 = !{!4020, !4021, !4025, !4027, !4028, !4029, !4030, !4031}
!4020 = !DILocalVariable(name: "dev", arg: 1, scope: !4018, file: !294, line: 511, type: !134)
!4021 = !DILocalVariable(name: "encrypted", scope: !4018, file: !294, line: 513, type: !4022)
!4022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 480, elements: !4023)
!4023 = !{!4024}
!4024 = !DISubrange(count: 60)
!4025 = !DILocalVariable(name: "decrypted", scope: !4018, file: !294, line: 514, type: !4026)
!4026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !150, size: 352, elements: !498)
!4027 = !DILocalVariable(name: "ini", scope: !4018, file: !294, line: 515, type: !166)
!4028 = !DILocalVariable(name: "encrypt", scope: !4018, file: !294, line: 524, type: !181)
!4029 = !DILocalVariable(name: "gcm_op", scope: !4018, file: !294, line: 530, type: !203)
!4030 = !DILocalVariable(name: "decrypt", scope: !4018, file: !294, line: 542, type: !181)
!4031 = !DILabel(scope: !4018, name: "out", file: !294, line: 597)
!4032 = !DILocation(line: 0, scope: !4018)
!4033 = !DILocation(line: 513, column: 2, scope: !4018)
!4034 = !DILocation(line: 513, column: 10, scope: !4018)
!4035 = !DILocation(line: 514, column: 2, scope: !4018)
!4036 = !DILocation(line: 514, column: 10, scope: !4018)
!4037 = !DILocation(line: 515, column: 2, scope: !4018)
!4038 = !DILocation(line: 515, column: 20, scope: !4018)
!4039 = !DILocation(line: 515, column: 26, scope: !4018)
!4040 = !DILocation(line: 517, column: 7, scope: !4018)
!4041 = !DILocation(line: 518, column: 15, scope: !4018)
!4042 = !DILocation(line: 518, column: 27, scope: !4018)
!4043 = !DILocation(line: 522, column: 12, scope: !4018)
!4044 = !DILocation(line: 524, column: 2, scope: !4018)
!4045 = !DILocation(line: 524, column: 20, scope: !4018)
!4046 = !DILocation(line: 524, column: 30, scope: !4018)
!4047 = !DILocation(line: 530, column: 2, scope: !4018)
!4048 = !DILocation(line: 530, column: 25, scope: !4018)
!4049 = !DILocation(line: 530, column: 34, scope: !4018)
!4050 = !DILocation(line: 540, column: 20, scope: !4018)
!4051 = !DILocation(line: 542, column: 2, scope: !4018)
!4052 = !DILocation(line: 542, column: 20, scope: !4018)
!4053 = !DILocation(line: 542, column: 30, scope: !4018)
!4054 = !DILocation(line: 549, column: 6, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 549, column: 6)
!4056 = !DILocation(line: 549, column: 6, scope: !4018)
!4057 = !DILocation(line: 555, column: 13, scope: !4018)
!4058 = !DILocation(line: 556, column: 6, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 556, column: 6)
!4060 = !DILocation(line: 556, column: 6, scope: !4018)
!4061 = !DILocation(line: 557, column: 3, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4063, file: !294, line: 557, column: 3)
!4063 = distinct !DILexicalBlock(scope: !4064, file: !294, line: 557, column: 3)
!4064 = distinct !DILexicalBlock(scope: !4065, file: !294, line: 557, column: 3)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !294, line: 557, column: 3)
!4066 = distinct !DILexicalBlock(scope: !4059, file: !294, line: 556, column: 47)
!4067 = !DILocation(line: 558, column: 3, scope: !4066)
!4068 = !DILocation(line: 561, column: 2, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !294, line: 561, column: 2)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !294, line: 561, column: 2)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !294, line: 561, column: 2)
!4072 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 561, column: 2)
!4073 = !DILocation(line: 563, column: 21, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 563, column: 6)
!4075 = !DILocation(line: 563, column: 6, scope: !4074)
!4076 = !DILocation(line: 563, column: 6, scope: !4018)
!4077 = !DILocation(line: 564, column: 3, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !294, line: 564, column: 3)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !294, line: 564, column: 3)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !294, line: 564, column: 3)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !294, line: 564, column: 3)
!4082 = distinct !DILexicalBlock(scope: !4074, file: !294, line: 563, column: 67)
!4083 = !DILocation(line: 567, column: 14, scope: !4082)
!4084 = !DILocation(line: 566, column: 3, scope: !4082)
!4085 = !DILocation(line: 568, column: 3, scope: !4082)
!4086 = !DILocation(line: 571, column: 2, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !294, line: 571, column: 2)
!4088 = distinct !DILexicalBlock(scope: !4089, file: !294, line: 571, column: 2)
!4089 = distinct !DILexicalBlock(scope: !4090, file: !294, line: 571, column: 2)
!4090 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 571, column: 2)
!4091 = !DILocation(line: 572, column: 2, scope: !4018)
!4092 = !DILocation(line: 574, column: 6, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 574, column: 6)
!4094 = !DILocation(line: 574, column: 6, scope: !4018)
!4095 = !DILocation(line: 580, column: 13, scope: !4018)
!4096 = !DILocation(line: 581, column: 6, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 581, column: 6)
!4098 = !DILocation(line: 581, column: 6, scope: !4018)
!4099 = !DILocation(line: 582, column: 3, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4101, file: !294, line: 582, column: 3)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !294, line: 582, column: 3)
!4102 = distinct !DILexicalBlock(scope: !4103, file: !294, line: 582, column: 3)
!4103 = distinct !DILexicalBlock(scope: !4104, file: !294, line: 582, column: 3)
!4104 = distinct !DILexicalBlock(scope: !4097, file: !294, line: 581, column: 47)
!4105 = !DILocation(line: 583, column: 3, scope: !4104)
!4106 = !DILocation(line: 586, column: 2, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !294, line: 586, column: 2)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !294, line: 586, column: 2)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !294, line: 586, column: 2)
!4110 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 586, column: 2)
!4111 = !DILocation(line: 588, column: 21, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 588, column: 6)
!4113 = !DILocation(line: 588, column: 6, scope: !4112)
!4114 = !DILocation(line: 588, column: 6, scope: !4018)
!4115 = !DILocation(line: 589, column: 3, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !294, line: 589, column: 3)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !294, line: 589, column: 3)
!4118 = distinct !DILexicalBlock(scope: !4119, file: !294, line: 589, column: 3)
!4119 = distinct !DILexicalBlock(scope: !4120, file: !294, line: 589, column: 3)
!4120 = distinct !DILexicalBlock(scope: !4112, file: !294, line: 588, column: 59)
!4121 = !DILocation(line: 592, column: 14, scope: !4120)
!4122 = !DILocation(line: 591, column: 3, scope: !4120)
!4123 = !DILocation(line: 593, column: 3, scope: !4120)
!4124 = !DILocation(line: 596, column: 2, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4126, file: !294, line: 596, column: 2)
!4126 = distinct !DILexicalBlock(scope: !4127, file: !294, line: 596, column: 2)
!4127 = distinct !DILexicalBlock(scope: !4128, file: !294, line: 596, column: 2)
!4128 = distinct !DILexicalBlock(scope: !4018, file: !294, line: 596, column: 2)
!4129 = !DILocation(line: 596, column: 2, scope: !4128)
!4130 = !DILocation(line: 597, column: 1, scope: !4018)
!4131 = !DILocation(line: 598, column: 2, scope: !4018)
!4132 = !DILocation(line: 599, column: 1, scope: !4018)
!4133 = distinct !DISubprogram(name: "cipher_gcm_op", scope: !128, file: !128, line: 341, type: !200, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4134)
!4134 = !{!4135, !4136, !4137}
!4135 = !DILocalVariable(name: "ctx", arg: 1, scope: !4133, file: !128, line: 341, type: !165)
!4136 = !DILocalVariable(name: "pkt", arg: 2, scope: !4133, file: !128, line: 342, type: !202)
!4137 = !DILocalVariable(name: "nonce", arg: 3, scope: !4133, file: !128, line: 342, type: !184)
!4138 = !DILocation(line: 0, scope: !4133)
!4139 = !DILocation(line: 347, column: 7, scope: !4133)
!4140 = !DILocation(line: 347, column: 12, scope: !4133)
!4141 = !DILocation(line: 347, column: 16, scope: !4133)
!4142 = !DILocation(line: 348, column: 18, scope: !4133)
!4143 = !DILocation(line: 348, column: 9, scope: !4133)
!4144 = !DILocation(line: 348, column: 2, scope: !4133)
!4145 = distinct !DISubprogram(name: "main", scope: !294, file: !294, line: 606, type: !3297, scopeLine: 607, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4146)
!4146 = !{!4147, !4148, !4156}
!4147 = !DILocalVariable(name: "dev", scope: !4145, file: !294, line: 609, type: !134)
!4148 = !DILocalVariable(name: "modes", scope: !4145, file: !294, line: 623, type: !4149)
!4149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4150, size: 384, elements: !1549)
!4150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4151)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_test", file: !294, line: 601, size: 64, elements: !4152)
!4152 = !{!4153, !4154}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4151, file: !294, line: 602, baseType: !140, size: 32)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "mode_func", scope: !4151, file: !294, line: 603, baseType: !4155, size: 32, offset: 32)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 32)
!4156 = !DILocalVariable(name: "i", scope: !4145, file: !294, line: 631, type: !125)
!4157 = !DILocation(line: 609, column: 29, scope: !4145)
!4158 = !DILocation(line: 0, scope: !4145)
!4159 = !DILocation(line: 611, column: 7, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4145, file: !294, line: 611, column: 6)
!4161 = !DILocation(line: 611, column: 6, scope: !4145)
!4162 = !DILocation(line: 612, column: 3, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !294, line: 612, column: 3)
!4164 = distinct !DILexicalBlock(scope: !4165, file: !294, line: 612, column: 3)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !294, line: 612, column: 3)
!4166 = distinct !DILexicalBlock(scope: !4167, file: !294, line: 612, column: 3)
!4167 = distinct !DILexicalBlock(scope: !4160, file: !294, line: 611, column: 12)
!4168 = !DILocation(line: 613, column: 3, scope: !4167)
!4169 = !DILocation(line: 623, column: 25, scope: !4145)
!4170 = !DILocation(line: 633, column: 6, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4145, file: !294, line: 633, column: 6)
!4172 = !DILocation(line: 633, column: 6, scope: !4145)
!4173 = !DILocation(line: 634, column: 3, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !294, line: 634, column: 3)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !294, line: 634, column: 3)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !294, line: 634, column: 3)
!4177 = distinct !DILexicalBlock(scope: !4178, file: !294, line: 634, column: 3)
!4178 = distinct !DILexicalBlock(scope: !4171, file: !294, line: 633, column: 38)
!4179 = !DILocation(line: 635, column: 3, scope: !4178)
!4180 = !DILocation(line: 638, column: 2, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4182, file: !294, line: 638, column: 2)
!4182 = distinct !DILexicalBlock(scope: !4183, file: !294, line: 638, column: 2)
!4183 = distinct !DILexicalBlock(scope: !4184, file: !294, line: 638, column: 2)
!4184 = distinct !DILexicalBlock(scope: !4145, file: !294, line: 638, column: 2)
!4185 = !DILocation(line: 640, column: 2, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4145, file: !294, line: 640, column: 2)
!4187 = !DILocation(line: 640, column: 23, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4186, file: !294, line: 640, column: 2)
!4189 = !DILocation(line: 641, column: 3, scope: !4190)
!4190 = distinct !DILexicalBlock(scope: !4191, file: !294, line: 641, column: 3)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !294, line: 641, column: 3)
!4192 = distinct !DILexicalBlock(scope: !4193, file: !294, line: 641, column: 3)
!4193 = distinct !DILexicalBlock(scope: !4194, file: !294, line: 641, column: 3)
!4194 = distinct !DILexicalBlock(scope: !4188, file: !294, line: 640, column: 34)
!4195 = !DILocation(line: 642, column: 12, scope: !4194)
!4196 = !DILocation(line: 642, column: 3, scope: !4194)
!4197 = !DILocation(line: 640, column: 30, scope: !4188)
!4198 = distinct !{!4198, !4185, !4199}
!4199 = !DILocation(line: 643, column: 2, scope: !4186)
!4200 = !DILocation(line: 644, column: 1, scope: !4145)
!4201 = distinct !DISubprogram(name: "device_get_binding", scope: !4202, file: !4202, line: 24, type: !4203, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !4205)
!4202 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!4203 = !DISubroutineType(types: !4204)
!4204 = !{!134, !140}
!4205 = !{!4206}
!4206 = !DILocalVariable(name: "name", arg: 1, scope: !4201, file: !4202, line: 24, type: !140)
!4207 = !DILocation(line: 0, scope: !4201)
!4208 = !DILocation(line: 32, column: 2, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4201, file: !4202, line: 32, column: 2)
!4210 = !{i64 2149425106}
!4211 = !DILocation(line: 33, column: 9, scope: !4201)
!4212 = !DILocation(line: 33, column: 2, scope: !4201)
!4213 = distinct !DISubprogram(name: "cbvprintf_package", scope: !395, file: !395, line: 233, type: !4214, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4223)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!125, !124, !272, !208, !140, !4216}
!4216 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4217, line: 99, baseType: !4218)
!4217 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4218 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4217, line: 40, baseType: !4219)
!4219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !395, baseType: !4220)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4221)
!4221 = !{!4222}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4220, file: !395, line: 18, baseType: !124, size: 32)
!4223 = !{!4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4258, !4267, !4270, !4271, !4274, !4277, !4280, !4283, !4289}
!4224 = !DILocalVariable(name: "packaged", arg: 1, scope: !4213, file: !395, line: 233, type: !124)
!4225 = !DILocalVariable(name: "len", arg: 2, scope: !4213, file: !395, line: 233, type: !272)
!4226 = !DILocalVariable(name: "flags", arg: 3, scope: !4213, file: !395, line: 233, type: !208)
!4227 = !DILocalVariable(name: "fmt", arg: 4, scope: !4213, file: !395, line: 234, type: !140)
!4228 = !DILocalVariable(name: "ap", arg: 5, scope: !4213, file: !395, line: 234, type: !4216)
!4229 = !DILocalVariable(name: "buf0", scope: !4213, file: !395, line: 247, type: !184)
!4230 = !DILocalVariable(name: "buf", scope: !4213, file: !395, line: 248, type: !184)
!4231 = !DILocalVariable(name: "size", scope: !4213, file: !395, line: 249, type: !32)
!4232 = !DILocalVariable(name: "align", scope: !4213, file: !395, line: 250, type: !32)
!4233 = !DILocalVariable(name: "str_ptr_pos", scope: !4213, file: !395, line: 251, type: !311)
!4234 = !DILocalVariable(name: "str_ptr_arg", scope: !4213, file: !395, line: 252, type: !311)
!4235 = !DILocalVariable(name: "s_idx", scope: !4213, file: !395, line: 253, type: !32)
!4236 = !DILocalVariable(name: "s_rw_cnt", scope: !4213, file: !395, line: 254, type: !32)
!4237 = !DILocalVariable(name: "s_ro_cnt", scope: !4213, file: !395, line: 255, type: !32)
!4238 = !DILocalVariable(name: "arg_idx", scope: !4213, file: !395, line: 256, type: !125)
!4239 = !DILocalVariable(name: "i", scope: !4213, file: !395, line: 257, type: !32)
!4240 = !DILocalVariable(name: "s", scope: !4213, file: !395, line: 258, type: !140)
!4241 = !DILocalVariable(name: "parsing", scope: !4213, file: !395, line: 259, type: !153)
!4242 = !DILocalVariable(name: "rws_pos_en", scope: !4213, file: !395, line: 263, type: !153)
!4243 = !DILocalVariable(name: "fros_cnt", scope: !4213, file: !395, line: 268, type: !125)
!4244 = !DILocalVariable(name: "is_str_arg", scope: !4213, file: !395, line: 269, type: !153)
!4245 = !DILocalVariable(name: "pkg_hdr", scope: !4213, file: !395, line: 270, type: !4246)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4247, size: 32)
!4247 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !4248, line: 78, size: 32, elements: !4249)
!4248 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4249 = !{!4250, !4257}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4247, file: !4248, line: 80, baseType: !4251, size: 32)
!4251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !4248, line: 45, size: 32, elements: !4252)
!4252 = !{!4253, !4254, !4255, !4256}
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4251, file: !4248, line: 47, baseType: !150, size: 8)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !4251, file: !4248, line: 50, baseType: !150, size: 8, offset: 8)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !4251, file: !4248, line: 53, baseType: !150, size: 8, offset: 16)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !4251, file: !4248, line: 56, baseType: !150, size: 8, offset: 24)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !4247, file: !4248, line: 82, baseType: !124, size: 32)
!4258 = !DILocalVariable(name: "v", scope: !4259, file: !395, line: 567, type: !4263)
!4259 = distinct !DILexicalBlock(scope: !4260, file: !395, line: 562, column: 14)
!4260 = distinct !DILexicalBlock(scope: !4261, file: !395, line: 481, column: 18)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !395, line: 466, column: 3)
!4262 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 343, column: 15)
!4263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4213, file: !395, line: 567, size: 64, elements: !4264)
!4264 = !{!4265, !4266}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4263, file: !395, line: 567, baseType: !385, size: 64)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !4263, file: !395, line: 567, baseType: !383, size: 64)
!4267 = !DILocalVariable(name: "is_ro", scope: !4268, file: !395, line: 620, type: !153)
!4268 = distinct !DILexicalBlock(scope: !4269, file: !395, line: 613, column: 19)
!4269 = distinct !DILexicalBlock(scope: !4262, file: !395, line: 613, column: 7)
!4270 = !DILocalVariable(name: "do_ro", scope: !4268, file: !395, line: 621, type: !153)
!4271 = !DILocalVariable(name: "s_ptr_idx", scope: !4272, file: !395, line: 626, type: !208)
!4272 = distinct !DILexicalBlock(scope: !4273, file: !395, line: 625, column: 11)
!4273 = distinct !DILexicalBlock(scope: !4268, file: !395, line: 623, column: 8)
!4274 = !DILocalVariable(name: "v", scope: !4275, file: !395, line: 684, type: !125)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !395, line: 683, column: 35)
!4276 = distinct !DILexicalBlock(scope: !4269, file: !395, line: 683, column: 14)
!4277 = !DILocalVariable(name: "v", scope: !4278, file: !395, line: 691, type: !389)
!4278 = distinct !DILexicalBlock(scope: !4279, file: !395, line: 690, column: 36)
!4279 = distinct !DILexicalBlock(scope: !4276, file: !395, line: 690, column: 14)
!4280 = !DILocalVariable(name: "v", scope: !4281, file: !395, line: 698, type: !391)
!4281 = distinct !DILexicalBlock(scope: !4282, file: !395, line: 697, column: 41)
!4282 = distinct !DILexicalBlock(scope: !4279, file: !395, line: 697, column: 14)
!4283 = !DILocalVariable(name: "pos", scope: !4284, file: !395, line: 762, type: !150)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !395, line: 757, column: 31)
!4285 = distinct !DILexicalBlock(scope: !4286, file: !395, line: 757, column: 3)
!4286 = distinct !DILexicalBlock(scope: !4287, file: !395, line: 757, column: 3)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !395, line: 756, column: 16)
!4288 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 756, column: 6)
!4289 = !DILabel(scope: !4268, name: "process_string", file: !395, line: 615)
!4290 = !DILocation(line: 0, scope: !4213)
!4291 = !DILocation(line: 251, column: 2, scope: !4213)
!4292 = !DILocation(line: 251, column: 10, scope: !4213)
!4293 = !DILocation(line: 252, column: 2, scope: !4213)
!4294 = !DILocation(line: 252, column: 10, scope: !4213)
!4295 = !DILocation(line: 263, column: 29, scope: !4213)
!4296 = !DILocation(line: 263, column: 21, scope: !4213)
!4297 = !DILocation(line: 268, column: 21, scope: !4213)
!4298 = !DILocation(line: 268, column: 19, scope: !4213)
!4299 = !DILocation(line: 273, column: 6, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 273, column: 6)
!4301 = !DILocation(line: 273, column: 26, scope: !4300)
!4302 = !DILocation(line: 273, column: 6, scope: !4213)
!4303 = !DILocation(line: 297, column: 6, scope: !4213)
!4304 = !DILocation(line: 305, column: 11, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 305, column: 6)
!4306 = !DILocation(line: 305, column: 6, scope: !4213)
!4307 = !DILocation(line: 327, column: 19, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 327, column: 6)
!4309 = !DILocation(line: 327, column: 22, scope: !4308)
!4310 = !DILocation(line: 327, column: 33, scope: !4308)
!4311 = !DILocation(line: 327, column: 50, scope: !4308)
!4312 = !DILocation(line: 327, column: 6, scope: !4213)
!4313 = !DILocation(line: 338, column: 9, scope: !4213)
!4314 = !DILocation(line: 341, column: 2, scope: !4213)
!4315 = !DILocation(line: 472, column: 8, scope: !4261)
!4316 = !DILocation(line: 473, column: 14, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !395, line: 473, column: 9)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !395, line: 472, column: 18)
!4319 = distinct !DILexicalBlock(scope: !4261, file: !395, line: 472, column: 8)
!4320 = !DILocation(line: 473, column: 9, scope: !4318)
!4321 = !DILocation(line: 479, column: 5, scope: !4318)
!4322 = !DILocation(line: 468, column: 9, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4261, file: !395, line: 468, column: 8)
!4324 = !DILocation(line: 468, column: 8, scope: !4323)
!4325 = !DILocation(line: 468, column: 15, scope: !4323)
!4326 = !DILocation(line: 468, column: 8, scope: !4261)
!4327 = distinct !{!4327, !4328, !4329}
!4328 = !DILocation(line: 343, column: 2, scope: !4213)
!4329 = !DILocation(line: 712, column: 2, scope: !4213)
!4330 = !DILocation(line: 481, column: 4, scope: !4261)
!4331 = !DILocation(line: 484, column: 12, scope: !4260)
!4332 = !DILocation(line: 485, column: 5, scope: !4260)
!4333 = !DILocation(line: 505, column: 5, scope: !4260)
!4334 = !DILocation(line: 518, column: 5, scope: !4260)
!4335 = !DILocation(line: 523, column: 5, scope: !4260)
!4336 = !DILocation(line: 532, column: 9, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4260, file: !395, line: 532, column: 9)
!4338 = !DILocation(line: 532, column: 17, scope: !4337)
!4339 = !DILocation(line: 532, column: 9, scope: !4260)
!4340 = !DILocation(line: 533, column: 10, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !395, line: 533, column: 10)
!4342 = distinct !DILexicalBlock(scope: !4337, file: !395, line: 532, column: 25)
!4343 = !DILocation(line: 533, column: 18, scope: !4341)
!4344 = !DILocation(line: 0, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4259, file: !395, line: 569, column: 9)
!4346 = !DILocation(line: 0, scope: !4259)
!4347 = !DILocation(line: 579, column: 20, scope: !4259)
!4348 = !DILocation(line: 579, column: 11, scope: !4259)
!4349 = !DILocation(line: 580, column: 9, scope: !4259)
!4350 = !DILocation(line: 582, column: 21, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4352, file: !395, line: 582, column: 10)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !395, line: 580, column: 23)
!4353 = distinct !DILexicalBlock(scope: !4259, file: !395, line: 580, column: 9)
!4354 = !DILocation(line: 582, column: 28, scope: !4351)
!4355 = !DILocation(line: 582, column: 10, scope: !4352)
!4356 = !DILocation(line: 0, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4358, file: !395, line: 587, column: 17)
!4358 = distinct !DILexicalBlock(scope: !4352, file: !395, line: 585, column: 10)
!4359 = !DILocation(line: 593, column: 9, scope: !4259)
!4360 = !DILocation(line: 600, column: 5, scope: !4260)
!4361 = !DILocation(line: 605, column: 18, scope: !4262)
!4362 = !DILocation(line: 605, column: 9, scope: !4262)
!4363 = !DILocation(line: 608, column: 20, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4262, file: !395, line: 608, column: 7)
!4365 = !DILocation(line: 608, column: 23, scope: !4364)
!4366 = !DILocation(line: 608, column: 34, scope: !4364)
!4367 = !DILocation(line: 608, column: 41, scope: !4364)
!4368 = !DILocation(line: 608, column: 7, scope: !4262)
!4369 = !DILocation(line: 613, column: 7, scope: !4262)
!4370 = !DILocation(line: 614, column: 8, scope: !4268)
!4371 = !DILocation(line: 614, column: 4, scope: !4268)
!4372 = !DILocation(line: 255, column: 15, scope: !4213)
!4373 = !DILocation(line: 256, column: 6, scope: !4213)
!4374 = !DILocation(line: 254, column: 15, scope: !4213)
!4375 = !DILocation(line: 253, column: 15, scope: !4213)
!4376 = !DILocation(line: 320, column: 7, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4305, file: !395, line: 305, column: 20)
!4378 = !DILocation(line: 615, column: 1, scope: !4268)
!4379 = !DILocation(line: 616, column: 8, scope: !4268)
!4380 = !DILocation(line: 617, column: 5, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4382, file: !395, line: 616, column: 22)
!4382 = distinct !DILexicalBlock(scope: !4268, file: !395, line: 616, column: 8)
!4383 = !DILocation(line: 617, column: 25, scope: !4381)
!4384 = !DILocation(line: 618, column: 4, scope: !4381)
!4385 = !DILocation(line: 620, column: 26, scope: !4268)
!4386 = !DILocation(line: 620, column: 29, scope: !4268)
!4387 = !DILocation(line: 620, column: 17, scope: !4268)
!4388 = !DILocation(line: 620, column: 43, scope: !4268)
!4389 = !DILocation(line: 0, scope: !4268)
!4390 = !DILocation(line: 623, column: 14, scope: !4273)
!4391 = !DILocation(line: 626, column: 26, scope: !4272)
!4392 = !DILocation(line: 626, column: 37, scope: !4272)
!4393 = !DILocation(line: 0, scope: !4272)
!4394 = !DILocation(line: 634, column: 15, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4272, file: !395, line: 634, column: 9)
!4396 = !DILocation(line: 644, column: 9, scope: !4272)
!4397 = !DILocation(line: 649, column: 27, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !395, line: 644, column: 23)
!4399 = distinct !DILexicalBlock(scope: !4272, file: !395, line: 644, column: 9)
!4400 = !DILocation(line: 649, column: 6, scope: !4398)
!4401 = !DILocation(line: 649, column: 25, scope: !4398)
!4402 = !DILocation(line: 650, column: 27, scope: !4398)
!4403 = !DILocation(line: 650, column: 6, scope: !4398)
!4404 = !DILocation(line: 650, column: 25, scope: !4398)
!4405 = !DILocation(line: 651, column: 10, scope: !4398)
!4406 = !DILocation(line: 653, column: 26, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4408, file: !395, line: 651, column: 17)
!4408 = distinct !DILexicalBlock(scope: !4398, file: !395, line: 651, column: 10)
!4409 = !DILocation(line: 654, column: 15, scope: !4407)
!4410 = !DILocation(line: 655, column: 6, scope: !4407)
!4411 = !DILocation(line: 656, column: 15, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4408, file: !395, line: 655, column: 13)
!4413 = !DILocation(line: 658, column: 16, scope: !4399)
!4414 = !DILocation(line: 663, column: 10, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4416, file: !395, line: 658, column: 23)
!4416 = distinct !DILexicalBlock(scope: !4399, file: !395, line: 658, column: 16)
!4417 = !DILocation(line: 664, column: 5, scope: !4415)
!4418 = !DILocation(line: 664, column: 16, scope: !4416)
!4419 = !DILocation(line: 669, column: 10, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4421, file: !395, line: 664, column: 28)
!4421 = distinct !DILexicalBlock(scope: !4416, file: !395, line: 664, column: 16)
!4422 = !DILocation(line: 670, column: 5, scope: !4420)
!4423 = !DILocation(line: 675, column: 13, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4421, file: !395, line: 670, column: 12)
!4425 = !DILocation(line: 675, column: 27, scope: !4424)
!4426 = !DILocation(line: 675, column: 10, scope: !4424)
!4427 = !DILocation(line: 678, column: 10, scope: !4272)
!4428 = !DILocation(line: 680, column: 8, scope: !4268)
!4429 = !DILocation(line: 683, column: 14, scope: !4269)
!4430 = !DILocation(line: 684, column: 12, scope: !4275)
!4431 = !DILocation(line: 0, scope: !4275)
!4432 = !DILocation(line: 686, column: 8, scope: !4275)
!4433 = !DILocation(line: 687, column: 5, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4435, file: !395, line: 686, column: 22)
!4435 = distinct !DILexicalBlock(scope: !4275, file: !395, line: 686, column: 8)
!4436 = !DILocation(line: 687, column: 17, scope: !4434)
!4437 = !DILocation(line: 688, column: 4, scope: !4434)
!4438 = !DILocation(line: 698, column: 18, scope: !4281)
!4439 = !DILocation(line: 0, scope: !4281)
!4440 = !DILocation(line: 700, column: 8, scope: !4281)
!4441 = !DILocation(line: 704, column: 6, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4443, file: !395, line: 703, column: 12)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !395, line: 701, column: 9)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !395, line: 700, column: 22)
!4445 = distinct !DILexicalBlock(scope: !4281, file: !395, line: 700, column: 8)
!4446 = !DILocation(line: 704, column: 24, scope: !4442)
!4447 = !DILocation(line: 706, column: 4, scope: !4444)
!4448 = !DILocation(line: 0, scope: !4276)
!4449 = !DILocation(line: 0, scope: !4262)
!4450 = !DILocation(line: 720, column: 6, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 720, column: 6)
!4452 = !DILocation(line: 720, column: 17, scope: !4451)
!4453 = !DILocation(line: 720, column: 31, scope: !4451)
!4454 = !DILocation(line: 720, column: 6, scope: !4213)
!4455 = !DILocation(line: 729, column: 6, scope: !4213)
!4456 = !DILocation(line: 730, column: 21, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4458, file: !395, line: 729, column: 20)
!4458 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 729, column: 6)
!4459 = !DILocation(line: 730, column: 27, scope: !4457)
!4460 = !DILocation(line: 730, column: 3, scope: !4457)
!4461 = !DILocation(line: 737, column: 22, scope: !4213)
!4462 = !DILocation(line: 737, column: 20, scope: !4213)
!4463 = !DILocation(line: 0, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 739, column: 6)
!4465 = !DILocation(line: 745, column: 17, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4464, file: !395, line: 743, column: 9)
!4467 = !DILocation(line: 745, column: 25, scope: !4466)
!4468 = !DILocation(line: 746, column: 17, scope: !4466)
!4469 = !DILocation(line: 746, column: 28, scope: !4466)
!4470 = !DILocation(line: 749, column: 29, scope: !4213)
!4471 = !DILocation(line: 749, column: 16, scope: !4213)
!4472 = !DILocation(line: 749, column: 27, scope: !4213)
!4473 = !DILocation(line: 756, column: 6, scope: !4288)
!4474 = !DILocation(line: 756, column: 6, scope: !4213)
!4475 = !DILocation(line: 757, column: 3, scope: !4286)
!4476 = !DILocation(line: 758, column: 10, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4284, file: !395, line: 758, column: 8)
!4478 = !DILocation(line: 758, column: 25, scope: !4477)
!4479 = !DILocation(line: 758, column: 8, scope: !4284)
!4480 = !DILocation(line: 0, scope: !4284)
!4481 = !DILocation(line: 765, column: 8, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4284, file: !395, line: 765, column: 8)
!4483 = !DILocation(line: 765, column: 19, scope: !4482)
!4484 = !DILocation(line: 765, column: 23, scope: !4482)
!4485 = !DILocation(line: 765, column: 8, scope: !4284)
!4486 = !DILocation(line: 762, column: 33, scope: !4284)
!4487 = !DILocation(line: 769, column: 8, scope: !4284)
!4488 = !DILocation(line: 769, column: 11, scope: !4284)
!4489 = !DILocation(line: 757, column: 27, scope: !4285)
!4490 = !DILocation(line: 757, column: 17, scope: !4285)
!4491 = distinct !{!4491, !4475, !4492}
!4492 = !DILocation(line: 770, column: 3, scope: !4286)
!4493 = !DILocation(line: 774, column: 16, scope: !4494)
!4494 = distinct !DILexicalBlock(scope: !4495, file: !395, line: 774, column: 2)
!4495 = distinct !DILexicalBlock(scope: !4213, file: !395, line: 774, column: 2)
!4496 = !DILocation(line: 774, column: 2, scope: !4495)
!4497 = !DILocation(line: 776, column: 16, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !395, line: 776, column: 7)
!4499 = distinct !DILexicalBlock(scope: !4494, file: !395, line: 774, column: 30)
!4500 = !DILocation(line: 776, column: 19, scope: !4498)
!4501 = !DILocation(line: 776, column: 34, scope: !4498)
!4502 = !DILocation(line: 776, column: 7, scope: !4499)
!4503 = !DILocation(line: 780, column: 7, scope: !4499)
!4504 = !DILocation(line: 782, column: 13, scope: !4505)
!4505 = distinct !DILexicalBlock(scope: !4506, file: !395, line: 780, column: 19)
!4506 = distinct !DILexicalBlock(scope: !4499, file: !395, line: 780, column: 7)
!4507 = !DILocation(line: 782, column: 8, scope: !4505)
!4508 = !DILocation(line: 782, column: 11, scope: !4505)
!4509 = !DILocation(line: 783, column: 3, scope: !4505)
!4510 = !DILocation(line: 785, column: 26, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4506, file: !395, line: 783, column: 10)
!4512 = !DILocation(line: 785, column: 41, scope: !4511)
!4513 = !DILocation(line: 785, column: 24, scope: !4511)
!4514 = !DILocation(line: 785, column: 8, scope: !4511)
!4515 = !DILocation(line: 787, column: 52, scope: !4511)
!4516 = !DILocation(line: 789, column: 11, scope: !4511)
!4517 = !DILocation(line: 789, column: 21, scope: !4511)
!4518 = !DILocation(line: 0, scope: !4506)
!4519 = !DILocation(line: 793, column: 7, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4499, file: !395, line: 793, column: 7)
!4521 = !DILocation(line: 793, column: 18, scope: !4520)
!4522 = !DILocation(line: 793, column: 22, scope: !4520)
!4523 = !DILocation(line: 793, column: 29, scope: !4520)
!4524 = !DILocation(line: 793, column: 7, scope: !4499)
!4525 = !DILocation(line: 797, column: 12, scope: !4499)
!4526 = !DILocation(line: 797, column: 7, scope: !4499)
!4527 = !DILocation(line: 797, column: 10, scope: !4499)
!4528 = !DILocation(line: 799, column: 3, scope: !4499)
!4529 = !DILocation(line: 800, column: 7, scope: !4499)
!4530 = !DILocation(line: 801, column: 2, scope: !4499)
!4531 = !DILocation(line: 338, column: 4, scope: !4213)
!4532 = !DILocation(line: 774, column: 26, scope: !4494)
!4533 = distinct !{!4533, !4496, !4534}
!4534 = !DILocation(line: 801, column: 2, scope: !4495)
!4535 = !DILocation(line: 808, column: 9, scope: !4213)
!4536 = !DILocation(line: 808, column: 2, scope: !4213)
!4537 = !DILocation(line: 813, column: 1, scope: !4213)
!4538 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !395, file: !395, line: 33, type: !4539, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4541)
!4539 = !DISubroutineType(types: !4540)
!4540 = !{!153, !140}
!4541 = !{!4542}
!4542 = !DILocalVariable(name: "addr", arg: 1, scope: !4538, file: !395, line: 33, type: !140)
!4543 = !DILocation(line: 0, scope: !4538)
!4544 = !DILocation(line: 41, column: 9, scope: !4538)
!4545 = !DILocation(line: 41, column: 2, scope: !4538)
!4546 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !4547, file: !4547, line: 24, type: !4548, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4550)
!4547 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4548 = !DISubroutineType(types: !4549)
!4549 = !{!153, !13}
!4550 = !{!4551}
!4551 = !DILocalVariable(name: "addr", arg: 1, scope: !4546, file: !4547, line: 24, type: !13)
!4552 = !DILocation(line: 0, scope: !4546)
!4553 = !DILocation(line: 49, column: 30, scope: !4546)
!4554 = !DILocation(line: 49, column: 57, scope: !4546)
!4555 = !DILocation(line: 49, column: 2, scope: !4546)
!4556 = distinct !DISubprogram(name: "cbprintf_package", scope: !395, file: !395, line: 815, type: !4557, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4559)
!4557 = !DISubroutineType(types: !4558)
!4558 = !{!125, !124, !272, !208, !140, null}
!4559 = !{!4560, !4561, !4562, !4563, !4564, !4565}
!4560 = !DILocalVariable(name: "packaged", arg: 1, scope: !4556, file: !395, line: 815, type: !124)
!4561 = !DILocalVariable(name: "len", arg: 2, scope: !4556, file: !395, line: 815, type: !272)
!4562 = !DILocalVariable(name: "flags", arg: 3, scope: !4556, file: !395, line: 815, type: !208)
!4563 = !DILocalVariable(name: "format", arg: 4, scope: !4556, file: !395, line: 816, type: !140)
!4564 = !DILocalVariable(name: "ap", scope: !4556, file: !395, line: 818, type: !4216)
!4565 = !DILocalVariable(name: "ret", scope: !4556, file: !395, line: 819, type: !125)
!4566 = !DILocation(line: 0, scope: !4556)
!4567 = !DILocation(line: 818, column: 2, scope: !4556)
!4568 = !DILocation(line: 818, column: 10, scope: !4556)
!4569 = !DILocation(line: 821, column: 2, scope: !4556)
!4570 = !DILocation(line: 822, column: 8, scope: !4556)
!4571 = !DILocation(line: 823, column: 2, scope: !4556)
!4572 = !DILocation(line: 825, column: 1, scope: !4556)
!4573 = !DILocation(line: 824, column: 2, scope: !4556)
!4574 = distinct !DISubprogram(name: "cbpprintf_external", scope: !395, file: !395, line: 827, type: !4575, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4585)
!4575 = !DISubroutineType(types: !4576)
!4576 = !{!125, !4577, !4581, !124, !124}
!4577 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !4248, line: 297, baseType: !4578)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 32)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!125, null}
!4581 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !4248, line: 328, baseType: !4582)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 32)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!125, !4577, !124, !140, !4216}
!4585 = !{!4586, !4587, !4588, !4589, !4590, !4591, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604}
!4586 = !DILocalVariable(name: "out", arg: 1, scope: !4574, file: !395, line: 827, type: !4577)
!4587 = !DILocalVariable(name: "formatter", arg: 2, scope: !4574, file: !395, line: 828, type: !4581)
!4588 = !DILocalVariable(name: "ctx", arg: 3, scope: !4574, file: !395, line: 829, type: !124)
!4589 = !DILocalVariable(name: "packaged", arg: 4, scope: !4574, file: !395, line: 829, type: !124)
!4590 = !DILocalVariable(name: "buf", scope: !4574, file: !395, line: 831, type: !184)
!4591 = !DILocalVariable(name: "hdr", scope: !4574, file: !395, line: 832, type: !4592)
!4592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 32)
!4593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !4248, line: 96, size: 64, elements: !4594)
!4594 = !{!4595, !4596}
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !4593, file: !4248, line: 98, baseType: !4247, size: 32)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !4593, file: !4248, line: 101, baseType: !393, size: 32, offset: 32)
!4597 = !DILocalVariable(name: "s", scope: !4574, file: !395, line: 833, type: !393)
!4598 = !DILocalVariable(name: "ps", scope: !4574, file: !395, line: 833, type: !392)
!4599 = !DILocalVariable(name: "i", scope: !4574, file: !395, line: 834, type: !32)
!4600 = !DILocalVariable(name: "args_size", scope: !4574, file: !395, line: 834, type: !32)
!4601 = !DILocalVariable(name: "s_nbr", scope: !4574, file: !395, line: 834, type: !32)
!4602 = !DILocalVariable(name: "ros_nbr", scope: !4574, file: !395, line: 834, type: !32)
!4603 = !DILocalVariable(name: "rws_nbr", scope: !4574, file: !395, line: 834, type: !32)
!4604 = !DILocalVariable(name: "s_idx", scope: !4574, file: !395, line: 834, type: !32)
!4605 = !DILocation(line: 0, scope: !4574)
!4606 = !DILocation(line: 836, column: 10, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4574, file: !395, line: 836, column: 6)
!4608 = !DILocation(line: 836, column: 6, scope: !4574)
!4609 = !DILocation(line: 842, column: 28, scope: !4574)
!4610 = !DILocation(line: 842, column: 14, scope: !4574)
!4611 = !DILocation(line: 852, column: 16, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4613, file: !395, line: 852, column: 2)
!4613 = distinct !DILexicalBlock(scope: !4574, file: !395, line: 852, column: 2)
!4614 = !DILocation(line: 852, column: 2, scope: !4613)
!4615 = !DILocation(line: 841, column: 28, scope: !4574)
!4616 = !DILocation(line: 841, column: 14, scope: !4574)
!4617 = !DILocation(line: 841, column: 32, scope: !4574)
!4618 = !DILocation(line: 847, column: 19, scope: !4574)
!4619 = !DILocation(line: 843, column: 28, scope: !4574)
!4620 = !DILocation(line: 843, column: 14, scope: !4574)
!4621 = !DILocation(line: 847, column: 31, scope: !4574)
!4622 = !DILocation(line: 844, column: 28, scope: !4574)
!4623 = !DILocation(line: 844, column: 14, scope: !4574)
!4624 = !DILocation(line: 847, column: 45, scope: !4574)
!4625 = !DILocation(line: 847, column: 41, scope: !4574)
!4626 = !DILocation(line: 854, column: 24, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4612, file: !395, line: 852, column: 30)
!4628 = !DILocation(line: 854, column: 11, scope: !4627)
!4629 = !DILocation(line: 855, column: 30, scope: !4627)
!4630 = !DILocation(line: 855, column: 22, scope: !4627)
!4631 = !DILocation(line: 855, column: 8, scope: !4627)
!4632 = !DILocation(line: 857, column: 7, scope: !4627)
!4633 = !DILocation(line: 859, column: 8, scope: !4627)
!4634 = !DILocation(line: 859, column: 18, scope: !4627)
!4635 = !DILocation(line: 859, column: 5, scope: !4627)
!4636 = !DILocation(line: 852, column: 26, scope: !4612)
!4637 = distinct !{!4637, !4614, !4638}
!4638 = !DILocation(line: 860, column: 2, scope: !4613)
!4639 = !DILocation(line: 863, column: 6, scope: !4574)
!4640 = !DILocation(line: 866, column: 56, scope: !4574)
!4641 = !DILocation(line: 866, column: 9, scope: !4574)
!4642 = !DILocation(line: 866, column: 2, scope: !4574)
!4643 = !DILocation(line: 867, column: 1, scope: !4574)
!4644 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !395, file: !395, line: 179, type: !4645, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4647)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!125, !4577, !4581, !124, !140, !124}
!4647 = !{!4648, !4649, !4650, !4651, !4652, !4653}
!4648 = !DILocalVariable(name: "out", arg: 1, scope: !4644, file: !395, line: 179, type: !4577)
!4649 = !DILocalVariable(name: "formatter", arg: 2, scope: !4644, file: !395, line: 180, type: !4581)
!4650 = !DILocalVariable(name: "ctx", arg: 3, scope: !4644, file: !395, line: 181, type: !124)
!4651 = !DILocalVariable(name: "fmt", arg: 4, scope: !4644, file: !395, line: 182, type: !140)
!4652 = !DILocalVariable(name: "buf", arg: 5, scope: !4644, file: !395, line: 182, type: !124)
!4653 = !DILocalVariable(name: "u", scope: !4644, file: !395, line: 187, type: !4654)
!4654 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4644, file: !395, line: 184, size: 32, elements: !4655)
!4655 = !{!4656, !4657}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !4654, file: !395, line: 185, baseType: !4216, size: 32)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4654, file: !395, line: 186, baseType: !124, size: 32)
!4658 = !DILocation(line: 0, scope: !4644)
!4659 = !DILocation(line: 191, column: 9, scope: !4644)
!4660 = !DILocation(line: 191, column: 2, scope: !4644)
!4661 = distinct !DISubprogram(name: "is_ptr", scope: !395, file: !395, line: 881, type: !4662, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4664)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{!153, !140, !125}
!4664 = !{!4665, !4666, !4667, !4668, !4669}
!4665 = !DILocalVariable(name: "fmt", arg: 1, scope: !4661, file: !395, line: 881, type: !140)
!4666 = !DILocalVariable(name: "n", arg: 2, scope: !4661, file: !395, line: 881, type: !125)
!4667 = !DILocalVariable(name: "c", scope: !4661, file: !395, line: 883, type: !142)
!4668 = !DILocalVariable(name: "mod", scope: !4661, file: !395, line: 884, type: !153)
!4669 = !DILocalVariable(name: "cnt", scope: !4661, file: !395, line: 885, type: !125)
!4670 = !DILocation(line: 0, scope: !4661)
!4671 = !DILocation(line: 887, column: 14, scope: !4661)
!4672 = !DILocation(line: 887, column: 22, scope: !4661)
!4673 = !DILocation(line: 887, column: 2, scope: !4661)
!4674 = !DILocation(line: 887, column: 18, scope: !4661)
!4675 = !DILocation(line: 888, column: 7, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4661, file: !395, line: 887, column: 31)
!4677 = !DILocation(line: 889, column: 12, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !395, line: 889, column: 8)
!4679 = distinct !DILexicalBlock(scope: !4680, file: !395, line: 888, column: 12)
!4680 = distinct !DILexicalBlock(scope: !4676, file: !395, line: 888, column: 7)
!4681 = !DILocation(line: 889, column: 8, scope: !4679)
!4682 = !DILocation(line: 890, column: 11, scope: !4683)
!4683 = distinct !DILexicalBlock(scope: !4684, file: !395, line: 890, column: 9)
!4684 = distinct !DILexicalBlock(scope: !4678, file: !395, line: 889, column: 18)
!4685 = !DILocation(line: 890, column: 9, scope: !4684)
!4686 = !DILocation(line: 892, column: 16, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4683, file: !395, line: 892, column: 16)
!4688 = !DILocation(line: 892, column: 16, scope: !4683)
!4689 = !DILocation(line: 895, column: 15, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4678, file: !395, line: 895, column: 15)
!4691 = !DILocation(line: 895, column: 15, scope: !4678)
!4692 = !DILocation(line: 900, column: 9, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4676, file: !395, line: 900, column: 7)
!4694 = !DILocation(line: 900, column: 7, scope: !4676)
!4695 = distinct !{!4695, !4673, !4696}
!4696 = !DILocation(line: 903, column: 2, scope: !4661)
!4697 = !DILocation(line: 906, column: 1, scope: !4661)
!4698 = distinct !DISubprogram(name: "is_fmt_spec", scope: !395, file: !395, line: 873, type: !4699, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4701)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{!153, !142}
!4701 = !{!4702}
!4702 = !DILocalVariable(name: "c", arg: 1, scope: !4698, file: !395, line: 873, type: !142)
!4703 = !DILocation(line: 0, scope: !4698)
!4704 = !DILocation(line: 875, column: 19, scope: !4698)
!4705 = !DILocation(line: 875, column: 2, scope: !4698)
!4706 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !395, file: !395, line: 908, type: !4707, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !4713)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!125, !124, !272, !4709, !124, !208, !2989, !272}
!4709 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !4248, line: 308, baseType: !4710)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4711, size: 32)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!125, !13, !272, !124}
!4713 = !{!4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4731, !4732, !4733, !4734, !4735, !4741, !4744, !4745, !4746, !4748, !4751, !4752, !4753, !4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4764, !4767, !4768, !4769, !4770, !4771, !4772, !4774, !4777, !4778, !4779}
!4714 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !4706, file: !395, line: 908, type: !124)
!4715 = !DILocalVariable(name: "in_len", arg: 2, scope: !4706, file: !395, line: 909, type: !272)
!4716 = !DILocalVariable(name: "cb", arg: 3, scope: !4706, file: !395, line: 910, type: !4709)
!4717 = !DILocalVariable(name: "ctx", arg: 4, scope: !4706, file: !395, line: 911, type: !124)
!4718 = !DILocalVariable(name: "flags", arg: 5, scope: !4706, file: !395, line: 912, type: !208)
!4719 = !DILocalVariable(name: "strl", arg: 6, scope: !4706, file: !395, line: 913, type: !2989)
!4720 = !DILocalVariable(name: "strl_len", arg: 7, scope: !4706, file: !395, line: 914, type: !272)
!4721 = !DILocalVariable(name: "buf", scope: !4706, file: !395, line: 918, type: !184)
!4722 = !DILocalVariable(name: "buf32", scope: !4706, file: !395, line: 919, type: !1027)
!4723 = !DILocalVariable(name: "args_size", scope: !4706, file: !395, line: 920, type: !32)
!4724 = !DILocalVariable(name: "ros_nbr", scope: !4706, file: !395, line: 920, type: !32)
!4725 = !DILocalVariable(name: "rws_nbr", scope: !4706, file: !395, line: 920, type: !32)
!4726 = !DILocalVariable(name: "fmt_present", scope: !4706, file: !395, line: 921, type: !153)
!4727 = !DILocalVariable(name: "rw_cpy", scope: !4706, file: !395, line: 922, type: !153)
!4728 = !DILocalVariable(name: "ro_cpy", scope: !4706, file: !395, line: 923, type: !153)
!4729 = !DILocalVariable(name: "in_desc", scope: !4706, file: !395, line: 924, type: !4730)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4251, size: 32)
!4731 = !DILocalVariable(name: "out_len", scope: !4706, file: !395, line: 960, type: !125)
!4732 = !DILocalVariable(name: "fmt", scope: !4706, file: !395, line: 965, type: !140)
!4733 = !DILocalVariable(name: "str_pos", scope: !4706, file: !395, line: 966, type: !184)
!4734 = !DILocalVariable(name: "strl_cnt", scope: !4706, file: !395, line: 967, type: !272)
!4735 = !DILocalVariable(name: "i", scope: !4736, file: !395, line: 973, type: !125)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !395, line: 973, column: 4)
!4737 = distinct !DILexicalBlock(scope: !4738, file: !395, line: 972, column: 15)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !395, line: 972, column: 7)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !395, line: 970, column: 18)
!4740 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 970, column: 6)
!4741 = !DILocalVariable(name: "str", scope: !4742, file: !395, line: 974, type: !140)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !395, line: 973, column: 38)
!4743 = distinct !DILexicalBlock(scope: !4736, file: !395, line: 973, column: 4)
!4744 = !DILocalVariable(name: "len", scope: !4742, file: !395, line: 975, type: !125)
!4745 = !DILocalVariable(name: "drop_ro_str_pos", scope: !4739, file: !395, line: 990, type: !153)
!4746 = !DILocalVariable(name: "i", scope: !4747, file: !395, line: 995, type: !125)
!4747 = distinct !DILexicalBlock(scope: !4739, file: !395, line: 995, column: 3)
!4748 = !DILocalVariable(name: "arg_idx", scope: !4749, file: !395, line: 996, type: !150)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !395, line: 995, column: 37)
!4750 = distinct !DILexicalBlock(scope: !4747, file: !395, line: 995, column: 3)
!4751 = !DILocalVariable(name: "arg_pos", scope: !4749, file: !395, line: 997, type: !150)
!4752 = !DILocalVariable(name: "str", scope: !4749, file: !395, line: 998, type: !140)
!4753 = !DILocalVariable(name: "is_ro", scope: !4749, file: !395, line: 999, type: !153)
!4754 = !DILocalVariable(name: "len", scope: !4749, file: !395, line: 1000, type: !125)
!4755 = !DILocalVariable(name: "out_desc", scope: !4706, file: !395, line: 1038, type: !4251)
!4756 = !DILocalVariable(name: "cpy_str_pos", scope: !4706, file: !395, line: 1040, type: !311)
!4757 = !DILocalVariable(name: "keep_str_pos", scope: !4706, file: !395, line: 1042, type: !311)
!4758 = !DILocalVariable(name: "scpy_cnt", scope: !4706, file: !395, line: 1043, type: !150)
!4759 = !DILocalVariable(name: "keep_cnt", scope: !4706, file: !395, line: 1044, type: !150)
!4760 = !DILocalVariable(name: "dst", scope: !4706, file: !395, line: 1045, type: !184)
!4761 = !DILocalVariable(name: "rv", scope: !4706, file: !395, line: 1046, type: !125)
!4762 = !DILocalVariable(name: "i", scope: !4763, file: !395, line: 1074, type: !125)
!4763 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 1074, column: 2)
!4764 = !DILocalVariable(name: "arg_idx", scope: !4765, file: !395, line: 1075, type: !150)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !395, line: 1074, column: 36)
!4766 = distinct !DILexicalBlock(scope: !4763, file: !395, line: 1074, column: 2)
!4767 = !DILocalVariable(name: "arg_pos", scope: !4765, file: !395, line: 1076, type: !150)
!4768 = !DILocalVariable(name: "str", scope: !4765, file: !395, line: 1077, type: !140)
!4769 = !DILocalVariable(name: "is_ro", scope: !4765, file: !395, line: 1078, type: !153)
!4770 = !DILocalVariable(name: "in_desc_backup", scope: !4706, file: !395, line: 1114, type: !4251)
!4771 = !DILocalVariable(name: "strs_len", scope: !4706, file: !395, line: 1134, type: !272)
!4772 = !DILocalVariable(name: "i", scope: !4773, file: !395, line: 1143, type: !125)
!4773 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 1143, column: 2)
!4774 = !DILocalVariable(name: "loc", scope: !4775, file: !395, line: 1144, type: !150)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !395, line: 1143, column: 37)
!4776 = distinct !DILexicalBlock(scope: !4773, file: !395, line: 1143, column: 2)
!4777 = !DILocalVariable(name: "str", scope: !4775, file: !395, line: 1145, type: !140)
!4778 = !DILocalVariable(name: "str_len", scope: !4775, file: !395, line: 1146, type: !227)
!4779 = !DILabel(scope: !4780, name: "calculate_string_length", file: !395, line: 1021)
!4780 = distinct !DILexicalBlock(scope: !4781, file: !395, line: 1020, column: 56)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !395, line: 1020, column: 15)
!4782 = distinct !DILexicalBlock(scope: !4749, file: !395, line: 1014, column: 8)
!4783 = !DILocation(line: 0, scope: !4706)
!4784 = !DILocation(line: 919, column: 20, scope: !4706)
!4785 = !DILocation(line: 921, column: 27, scope: !4706)
!4786 = !DILocation(line: 921, column: 21, scope: !4706)
!4787 = !DILocation(line: 926, column: 18, scope: !4706)
!4788 = !DILocation(line: 926, column: 11, scope: !4706)
!4789 = !DILocation(line: 926, column: 34, scope: !4706)
!4790 = !DILocation(line: 931, column: 21, scope: !4706)
!4791 = !DILocation(line: 931, column: 12, scope: !4706)
!4792 = !DILocation(line: 932, column: 11, scope: !4706)
!4793 = !DILocation(line: 932, column: 19, scope: !4706)
!4794 = !DILocation(line: 938, column: 21, scope: !4706)
!4795 = !DILocation(line: 938, column: 12, scope: !4706)
!4796 = !DILocation(line: 939, column: 19, scope: !4706)
!4797 = !DILocation(line: 939, column: 23, scope: !4706)
!4798 = !DILocation(line: 946, column: 14, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 946, column: 6)
!4800 = !DILocation(line: 947, column: 7, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4802, file: !395, line: 947, column: 7)
!4802 = distinct !DILexicalBlock(scope: !4799, file: !395, line: 946, column: 26)
!4803 = !DILocation(line: 947, column: 7, scope: !4802)
!4804 = !DILocation(line: 948, column: 4, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4801, file: !395, line: 947, column: 11)
!4806 = !DILocation(line: 949, column: 3, scope: !4805)
!4807 = !DILocation(line: 958, column: 23, scope: !4706)
!4808 = !DILocation(line: 958, column: 14, scope: !4706)
!4809 = !DILocation(line: 958, column: 27, scope: !4706)
!4810 = !DILocation(line: 965, column: 41, scope: !4706)
!4811 = !DILocation(line: 965, column: 20, scope: !4706)
!4812 = !DILocation(line: 966, column: 22, scope: !4706)
!4813 = !DILocation(line: 970, column: 9, scope: !4740)
!4814 = !DILocation(line: 970, column: 6, scope: !4706)
!4815 = !DILocation(line: 972, column: 7, scope: !4739)
!4816 = !DILocation(line: 0, scope: !4736)
!4817 = !DILocation(line: 973, column: 4, scope: !4736)
!4818 = !DILocation(line: 974, column: 46, scope: !4742)
!4819 = !DILocation(line: 974, column: 40, scope: !4742)
!4820 = !DILocation(line: 974, column: 23, scope: !4742)
!4821 = !DILocation(line: 0, scope: !4742)
!4822 = !DILocation(line: 975, column: 15, scope: !4742)
!4823 = !DILocation(line: 978, column: 14, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4742, file: !395, line: 978, column: 9)
!4825 = !DILocation(line: 979, column: 25, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4824, file: !395, line: 978, column: 38)
!4827 = !DILocation(line: 979, column: 19, scope: !4826)
!4828 = !DILocation(line: 979, column: 6, scope: !4826)
!4829 = !DILocation(line: 979, column: 23, scope: !4826)
!4830 = !DILocation(line: 980, column: 5, scope: !4826)
!4831 = !DILocation(line: 981, column: 13, scope: !4742)
!4832 = !DILocation(line: 982, column: 12, scope: !4742)
!4833 = !DILocation(line: 973, column: 34, scope: !4743)
!4834 = !DILocation(line: 973, column: 22, scope: !4743)
!4835 = distinct !{!4835, !4817, !4836}
!4836 = !DILocation(line: 983, column: 4, scope: !4736)
!4837 = !DILocation(line: 985, column: 16, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4839, file: !395, line: 985, column: 8)
!4839 = distinct !DILexicalBlock(scope: !4738, file: !395, line: 984, column: 10)
!4840 = !DILocation(line: 967, column: 9, scope: !4706)
!4841 = !DILocation(line: 971, column: 11, scope: !4739)
!4842 = !DILocation(line: 0, scope: !4739)
!4843 = !DILocation(line: 0, scope: !4747)
!4844 = !DILocation(line: 995, column: 21, scope: !4750)
!4845 = !DILocation(line: 995, column: 3, scope: !4747)
!4846 = !DILocation(line: 990, column: 34, scope: !4739)
!4847 = !DILocation(line: 990, column: 26, scope: !4739)
!4848 = !DILocation(line: 996, column: 30, scope: !4749)
!4849 = !DILocation(line: 0, scope: !4749)
!4850 = !DILocation(line: 997, column: 30, scope: !4749)
!4851 = !DILocation(line: 997, column: 22, scope: !4749)
!4852 = !DILocation(line: 998, column: 39, scope: !4749)
!4853 = !DILocation(line: 998, column: 22, scope: !4749)
!4854 = !DILocation(line: 999, column: 17, scope: !4749)
!4855 = !DILocation(line: 1002, column: 20, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4749, file: !395, line: 1002, column: 8)
!4857 = !DILocation(line: 996, column: 22, scope: !4749)
!4858 = !DILocation(line: 1002, column: 35, scope: !4856)
!4859 = !DILocation(line: 1002, column: 23, scope: !4856)
!4860 = !DILocation(line: 1002, column: 8, scope: !4749)
!4861 = !DILocation(line: 1003, column: 5, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4863, file: !395, line: 1003, column: 5)
!4863 = distinct !DILexicalBlock(scope: !4864, file: !395, line: 1003, column: 5)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !395, line: 1003, column: 5)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !395, line: 1003, column: 5)
!4866 = distinct !DILexicalBlock(scope: !4856, file: !395, line: 1002, column: 45)
!4867 = !DILocation(line: 1010, column: 13, scope: !4866)
!4868 = !DILocation(line: 1011, column: 5, scope: !4866)
!4869 = !DILocation(line: 1014, column: 8, scope: !4749)
!4870 = !DILocation(line: 1015, column: 9, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4782, file: !395, line: 1014, column: 15)
!4872 = !DILocation(line: 1018, column: 14, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4874, file: !395, line: 1017, column: 12)
!4874 = distinct !DILexicalBlock(scope: !4871, file: !395, line: 1015, column: 9)
!4875 = !DILocation(line: 1020, column: 4, scope: !4871)
!4876 = !DILocation(line: 1020, column: 15, scope: !4782)
!4877 = !DILocation(line: 1021, column: 1, scope: !4780)
!4878 = !DILocation(line: 1022, column: 11, scope: !4780)
!4879 = !DILocation(line: 1025, column: 14, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4780, file: !395, line: 1025, column: 9)
!4881 = !DILocation(line: 1026, column: 25, scope: !4882)
!4882 = distinct !DILexicalBlock(scope: !4880, file: !395, line: 1025, column: 38)
!4883 = !DILocation(line: 1026, column: 19, scope: !4882)
!4884 = !DILocation(line: 1026, column: 6, scope: !4882)
!4885 = !DILocation(line: 1026, column: 23, scope: !4882)
!4886 = !DILocation(line: 1027, column: 5, scope: !4882)
!4887 = !DILocation(line: 1031, column: 21, scope: !4780)
!4888 = !DILocation(line: 1031, column: 13, scope: !4780)
!4889 = !DILocation(line: 1032, column: 4, scope: !4780)
!4890 = !DILocation(line: 995, column: 33, scope: !4750)
!4891 = distinct !{!4891, !4845, !4892}
!4892 = !DILocation(line: 1033, column: 3, scope: !4747)
!4893 = !DILocation(line: 1040, column: 10, scope: !4706)
!4894 = !DILocation(line: 1042, column: 10, scope: !4706)
!4895 = !DILocation(line: 1052, column: 6, scope: !4706)
!4896 = !DILocation(line: 1055, column: 9, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4898, file: !395, line: 1052, column: 14)
!4898 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 1052, column: 6)
!4899 = !DILocation(line: 1056, column: 2, scope: !4897)
!4900 = !DILocation(line: 1056, column: 21, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4898, file: !395, line: 1056, column: 13)
!4902 = !DILocation(line: 1066, column: 3, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !395, line: 1065, column: 11)
!4904 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 1065, column: 6)
!4905 = !DILocation(line: 1067, column: 2, scope: !4903)
!4906 = !DILocation(line: 1068, column: 10, scope: !4706)
!4907 = !DILocation(line: 0, scope: !4763)
!4908 = !DILocation(line: 1074, column: 20, scope: !4766)
!4909 = !DILocation(line: 1074, column: 2, scope: !4763)
!4910 = !DILocation(line: 1110, column: 24, scope: !4706)
!4911 = !DILocation(line: 1053, column: 12, scope: !4897)
!4912 = !DILocation(line: 1054, column: 12, scope: !4897)
!4913 = !DILocation(line: 1108, column: 30, scope: !4706)
!4914 = !DILocation(line: 1108, column: 40, scope: !4706)
!4915 = !DILocation(line: 1108, column: 38, scope: !4706)
!4916 = !DILocation(line: 1109, column: 31, scope: !4706)
!4917 = !DILocation(line: 1109, column: 24, scope: !4706)
!4918 = !DILocation(line: 1110, column: 31, scope: !4706)
!4919 = !DILocation(line: 1114, column: 31, scope: !4706)
!4920 = !DILocation(line: 1114, column: 48, scope: !4706)
!4921 = !DILocation(line: 1115, column: 13, scope: !4706)
!4922 = !DILocation(line: 1118, column: 7, scope: !4706)
!4923 = !DILocation(line: 1119, column: 9, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 1119, column: 6)
!4925 = !DILocation(line: 1119, column: 6, scope: !4706)
!4926 = !DILocation(line: 1075, column: 29, scope: !4765)
!4927 = !DILocation(line: 1075, column: 21, scope: !4765)
!4928 = !DILocation(line: 0, scope: !4765)
!4929 = !DILocation(line: 1076, column: 29, scope: !4765)
!4930 = !DILocation(line: 1076, column: 21, scope: !4765)
!4931 = !DILocation(line: 1077, column: 38, scope: !4765)
!4932 = !DILocation(line: 1077, column: 21, scope: !4765)
!4933 = !DILocation(line: 1078, column: 16, scope: !4765)
!4934 = !DILocation(line: 1080, column: 19, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4765, file: !395, line: 1080, column: 7)
!4936 = !DILocation(line: 1080, column: 34, scope: !4935)
!4937 = !DILocation(line: 1080, column: 22, scope: !4935)
!4938 = !DILocation(line: 1080, column: 7, scope: !4765)
!4939 = !DILocation(line: 1084, column: 7, scope: !4765)
!4940 = !DILocation(line: 1085, column: 8, scope: !4941)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !395, line: 1084, column: 14)
!4942 = distinct !DILexicalBlock(scope: !4765, file: !395, line: 1084, column: 7)
!4943 = !DILocation(line: 1087, column: 25, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4945, file: !395, line: 1085, column: 49)
!4945 = distinct !DILexicalBlock(scope: !4941, file: !395, line: 1085, column: 8)
!4946 = !DILocation(line: 1088, column: 4, scope: !4944)
!4947 = !DILocation(line: 1088, column: 15, scope: !4945)
!4948 = !DILocation(line: 1090, column: 26, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !395, line: 1088, column: 61)
!4950 = distinct !DILexicalBlock(scope: !4945, file: !395, line: 1088, column: 15)
!4951 = !DILocation(line: 1091, column: 4, scope: !4949)
!4952 = !DILocation(line: 1095, column: 8, scope: !4953)
!4953 = distinct !DILexicalBlock(scope: !4942, file: !395, line: 1094, column: 10)
!4954 = !DILocation(line: 1097, column: 25, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4956, file: !395, line: 1095, column: 49)
!4956 = distinct !DILexicalBlock(scope: !4953, file: !395, line: 1095, column: 8)
!4957 = !DILocation(line: 1098, column: 4, scope: !4955)
!4958 = !DILocation(line: 1100, column: 26, scope: !4959)
!4959 = distinct !DILexicalBlock(scope: !4956, file: !395, line: 1098, column: 11)
!4960 = !DILocation(line: 1100, column: 5, scope: !4959)
!4961 = !DILocation(line: 1100, column: 30, scope: !4959)
!4962 = !DILocation(line: 1101, column: 26, scope: !4959)
!4963 = !DILocation(line: 0, scope: !4942)
!4964 = !DILocation(line: 1074, column: 32, scope: !4766)
!4965 = distinct !{!4965, !4909, !4966}
!4966 = !DILocation(line: 1104, column: 2, scope: !4763)
!4967 = !DILocation(line: 1124, column: 13, scope: !4706)
!4968 = !DILocation(line: 1127, column: 10, scope: !4706)
!4969 = !DILocation(line: 1127, column: 7, scope: !4706)
!4970 = !DILocation(line: 1128, column: 9, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 1128, column: 6)
!4972 = !DILocation(line: 1128, column: 6, scope: !4706)
!4973 = !DILocation(line: 1134, column: 27, scope: !4706)
!4974 = !DILocation(line: 1136, column: 7, scope: !4706)
!4975 = !DILocation(line: 1137, column: 9, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4706, file: !395, line: 1137, column: 6)
!4977 = !DILocation(line: 1137, column: 6, scope: !4706)
!4978 = !DILocation(line: 1131, column: 10, scope: !4706)
!4979 = !DILocation(line: 1140, column: 10, scope: !4706)
!4980 = !DILocation(line: 0, scope: !4773)
!4981 = !DILocation(line: 1143, column: 20, scope: !4776)
!4982 = !DILocation(line: 1143, column: 2, scope: !4773)
!4983 = !DILocation(line: 1144, column: 3, scope: !4775)
!4984 = !DILocation(line: 1144, column: 17, scope: !4775)
!4985 = !DILocation(line: 0, scope: !4775)
!4986 = !DILocation(line: 1144, column: 11, scope: !4775)
!4987 = !DILocation(line: 1145, column: 38, scope: !4775)
!4988 = !DILocation(line: 1145, column: 21, scope: !4775)
!4989 = !DILocation(line: 1146, column: 22, scope: !4775)
!4990 = !DILocation(line: 1146, column: 29, scope: !4775)
!4991 = !DILocation(line: 1148, column: 8, scope: !4775)
!4992 = !DILocation(line: 1149, column: 10, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4775, file: !395, line: 1149, column: 7)
!4994 = !DILocation(line: 1149, column: 7, scope: !4775)
!4995 = !DILocation(line: 1154, column: 8, scope: !4775)
!4996 = !DILocation(line: 1155, column: 10, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4775, file: !395, line: 1155, column: 7)
!4998 = !DILocation(line: 1155, column: 7, scope: !4775)
!4999 = !DILocation(line: 1159, column: 2, scope: !4776)
!5000 = !DILocation(line: 1152, column: 11, scope: !4775)
!5001 = !DILocation(line: 1158, column: 11, scope: !4775)
!5002 = !DILocation(line: 1143, column: 33, scope: !4776)
!5003 = distinct !{!5003, !4982, !5004}
!5004 = !DILocation(line: 1159, column: 2, scope: !4773)
!5005 = !DILocation(line: 1162, column: 8, scope: !4706)
!5006 = !DILocation(line: 1164, column: 2, scope: !4706)
!5007 = !DILocation(line: 1165, column: 1, scope: !4706)
!5008 = distinct !DISubprogram(name: "get_package_len", scope: !395, file: !395, line: 196, type: !5009, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5011)
!5009 = !DISubroutineType(types: !5010)
!5010 = !{!272, !124}
!5011 = !{!5012, !5013, !5014, !5015, !5016, !5017, !5018}
!5012 = !DILocalVariable(name: "packaged", arg: 1, scope: !5008, file: !395, line: 196, type: !124)
!5013 = !DILocalVariable(name: "buf", scope: !5008, file: !395, line: 200, type: !184)
!5014 = !DILocalVariable(name: "start", scope: !5008, file: !395, line: 201, type: !184)
!5015 = !DILocalVariable(name: "args_size", scope: !5008, file: !395, line: 202, type: !32)
!5016 = !DILocalVariable(name: "s_nbr", scope: !5008, file: !395, line: 202, type: !32)
!5017 = !DILocalVariable(name: "ros_nbr", scope: !5008, file: !395, line: 202, type: !32)
!5018 = !DILocalVariable(name: "i", scope: !5019, file: !395, line: 215, type: !125)
!5019 = distinct !DILexicalBlock(scope: !5008, file: !395, line: 215, column: 2)
!5020 = !DILocation(line: 0, scope: !5008)
!5021 = !DILocation(line: 204, column: 14, scope: !5008)
!5022 = !DILocation(line: 204, column: 21, scope: !5008)
!5023 = !DILocation(line: 205, column: 14, scope: !5008)
!5024 = !DILocation(line: 206, column: 14, scope: !5008)
!5025 = !DILocation(line: 209, column: 6, scope: !5008)
!5026 = !DILocation(line: 212, column: 6, scope: !5008)
!5027 = !DILocation(line: 0, scope: !5019)
!5028 = !DILocation(line: 215, column: 20, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5019, file: !395, line: 215, column: 2)
!5030 = !DILocation(line: 215, column: 2, scope: !5019)
!5031 = !DILocation(line: 220, column: 33, scope: !5008)
!5032 = !DILocation(line: 220, column: 2, scope: !5008)
!5033 = !DILocation(line: 216, column: 6, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5029, file: !395, line: 215, column: 34)
!5035 = !DILocation(line: 217, column: 10, scope: !5034)
!5036 = !DILocation(line: 217, column: 36, scope: !5034)
!5037 = !DILocation(line: 217, column: 7, scope: !5034)
!5038 = !DILocation(line: 215, column: 30, scope: !5029)
!5039 = distinct !{!5039, !5030, !5040}
!5040 = !DILocation(line: 218, column: 2, scope: !5019)
!5041 = distinct !DISubprogram(name: "append_string", scope: !395, file: !395, line: 223, type: !5042, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !379, retainedNodes: !5044)
!5042 = !DISubroutineType(types: !5043)
!5043 = !{!125, !4709, !124, !140, !227}
!5044 = !{!5045, !5046, !5047, !5048}
!5045 = !DILocalVariable(name: "cb", arg: 1, scope: !5041, file: !395, line: 223, type: !4709)
!5046 = !DILocalVariable(name: "ctx", arg: 2, scope: !5041, file: !395, line: 223, type: !124)
!5047 = !DILocalVariable(name: "str", arg: 3, scope: !5041, file: !395, line: 223, type: !140)
!5048 = !DILocalVariable(name: "strl", arg: 4, scope: !5041, file: !395, line: 223, type: !227)
!5049 = !DILocation(line: 0, scope: !5041)
!5050 = !DILocation(line: 225, column: 9, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5041, file: !395, line: 225, column: 6)
!5052 = !DILocation(line: 225, column: 6, scope: !5041)
!5053 = !DILocation(line: 226, column: 14, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5051, file: !395, line: 225, column: 18)
!5055 = !DILocation(line: 226, column: 12, scope: !5054)
!5056 = !DILocation(line: 226, column: 3, scope: !5054)
!5057 = !DILocation(line: 229, column: 14, scope: !5041)
!5058 = !DILocation(line: 229, column: 9, scope: !5041)
!5059 = !DILocation(line: 229, column: 27, scope: !5041)
!5060 = !DILocation(line: 229, column: 39, scope: !5041)
!5061 = !DILocation(line: 230, column: 17, scope: !5041)
!5062 = !DILocation(line: 230, column: 9, scope: !5041)
!5063 = !DILocation(line: 230, column: 2, scope: !5041)
!5064 = !DILocation(line: 231, column: 1, scope: !5041)
!5065 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !408, file: !408, line: 45, type: !410, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5066)
!5066 = !{!5067}
!5067 = !DILocalVariable(name: "c", arg: 1, scope: !5065, file: !408, line: 45, type: !125)
!5068 = !DILocation(line: 0, scope: !5065)
!5069 = !DILocation(line: 50, column: 2, scope: !5065)
!5070 = distinct !DISubprogram(name: "__printk_hook_install", scope: !408, file: !408, line: 63, type: !5071, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5073)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{null, !409}
!5073 = !{!5074}
!5074 = !DILocalVariable(name: "fn", arg: 1, scope: !5070, file: !408, line: 63, type: !409)
!5075 = !DILocation(line: 0, scope: !5070)
!5076 = !DILocation(line: 65, column: 12, scope: !5070)
!5077 = !DILocation(line: 66, column: 1, scope: !5070)
!5078 = distinct !DISubprogram(name: "__printk_get_hook", scope: !408, file: !408, line: 76, type: !5079, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !639)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!124}
!5081 = !DILocation(line: 78, column: 9, scope: !5078)
!5082 = !DILocation(line: 78, column: 2, scope: !5078)
!5083 = distinct !DISubprogram(name: "vprintk", scope: !408, file: !408, line: 113, type: !5084, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5092)
!5084 = !DISubroutineType(types: !5085)
!5085 = !{null, !140, !5086}
!5086 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4217, line: 99, baseType: !5087)
!5087 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4217, line: 40, baseType: !5088)
!5088 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !408, baseType: !5089)
!5089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5090)
!5090 = !{!5091}
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5089, file: !408, line: 79, baseType: !124, size: 32)
!5092 = !{!5093, !5094, !5095}
!5093 = !DILocalVariable(name: "fmt", arg: 1, scope: !5083, file: !408, line: 113, type: !140)
!5094 = !DILocalVariable(name: "ap", arg: 2, scope: !5083, file: !408, line: 113, type: !5086)
!5095 = !DILocalVariable(name: "ctx", scope: !5096, file: !408, line: 121, type: !5098)
!5096 = distinct !DILexicalBlock(scope: !5097, file: !408, line: 120, column: 27)
!5097 = distinct !DILexicalBlock(scope: !5083, file: !408, line: 120, column: 6)
!5098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !408, line: 81, size: 32, elements: !5099)
!5099 = !{!5100, !5101}
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !5098, file: !408, line: 85, baseType: !32, size: 32)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5098, file: !408, line: 86, baseType: !5102, offset: 32)
!5102 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, elements: !5103)
!5103 = !{!5104}
!5104 = !DISubrange(count: 0)
!5105 = !DILocation(line: 0, scope: !5083)
!5106 = !DILocation(line: 148, column: 3, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5097, file: !408, line: 138, column: 9)
!5108 = !DILocation(line: 155, column: 1, scope: !5083)
!5109 = distinct !DISubprogram(name: "char_out", scope: !408, file: !408, line: 107, type: !5110, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5112)
!5110 = !DISubroutineType(types: !5111)
!5111 = !{!125, !125, !124}
!5112 = !{!5113, !5114}
!5113 = !DILocalVariable(name: "c", arg: 1, scope: !5109, file: !408, line: 107, type: !125)
!5114 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !5109, file: !408, line: 107, type: !124)
!5115 = !DILocation(line: 0, scope: !5109)
!5116 = !DILocation(line: 110, column: 9, scope: !5109)
!5117 = !DILocation(line: 110, column: 2, scope: !5109)
!5118 = distinct !DISubprogram(name: "cbvprintf", scope: !4248, file: !4248, line: 739, type: !5119, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5121)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{!125, !4577, !124, !140, !5086}
!5121 = !{!5122, !5123, !5124, !5125}
!5122 = !DILocalVariable(name: "out", arg: 1, scope: !5118, file: !4248, line: 739, type: !4577)
!5123 = !DILocalVariable(name: "ctx", arg: 2, scope: !5118, file: !4248, line: 739, type: !124)
!5124 = !DILocalVariable(name: "format", arg: 3, scope: !5118, file: !4248, line: 739, type: !140)
!5125 = !DILocalVariable(name: "ap", arg: 4, scope: !5118, file: !4248, line: 739, type: !5086)
!5126 = !DILocation(line: 0, scope: !5118)
!5127 = !DILocation(line: 741, column: 9, scope: !5118)
!5128 = !DILocation(line: 741, column: 2, scope: !5118)
!5129 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !408, file: !408, line: 157, type: !5130, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5132)
!5130 = !DISubroutineType(types: !5131)
!5131 = !{null, !393, !272}
!5132 = !{!5133, !5134, !5135}
!5133 = !DILocalVariable(name: "c", arg: 1, scope: !5129, file: !408, line: 157, type: !393)
!5134 = !DILocalVariable(name: "n", arg: 2, scope: !5129, file: !408, line: 157, type: !272)
!5135 = !DILocalVariable(name: "i", scope: !5129, file: !408, line: 159, type: !272)
!5136 = !DILocation(line: 0, scope: !5129)
!5137 = !DILocation(line: 164, column: 16, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5139, file: !408, line: 164, column: 2)
!5139 = distinct !DILexicalBlock(scope: !5129, file: !408, line: 164, column: 2)
!5140 = !DILocation(line: 164, column: 2, scope: !5139)
!5141 = !DILocation(line: 165, column: 3, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5138, file: !408, line: 164, column: 26)
!5143 = !DILocation(line: 165, column: 13, scope: !5142)
!5144 = !DILocation(line: 164, column: 22, scope: !5138)
!5145 = distinct !{!5145, !5140, !5146}
!5146 = !DILocation(line: 166, column: 2, scope: !5139)
!5147 = !DILocation(line: 171, column: 1, scope: !5129)
!5148 = distinct !DISubprogram(name: "printk", scope: !408, file: !408, line: 203, type: !5149, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5151)
!5149 = !DISubroutineType(types: !5150)
!5150 = !{null, !140, null}
!5151 = !{!5152, !5153}
!5152 = !DILocalVariable(name: "fmt", arg: 1, scope: !5148, file: !408, line: 203, type: !140)
!5153 = !DILocalVariable(name: "ap", scope: !5148, file: !408, line: 205, type: !5086)
!5154 = !DILocation(line: 0, scope: !5148)
!5155 = !DILocation(line: 205, column: 2, scope: !5148)
!5156 = !DILocation(line: 205, column: 10, scope: !5148)
!5157 = !DILocation(line: 207, column: 2, scope: !5148)
!5158 = !DILocation(line: 209, column: 2, scope: !5148)
!5159 = !DILocation(line: 211, column: 2, scope: !5148)
!5160 = !DILocation(line: 212, column: 1, scope: !5148)
!5161 = distinct !DISubprogram(name: "snprintk", scope: !408, file: !408, line: 239, type: !5162, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5164)
!5162 = !DISubroutineType(types: !5163)
!5163 = !{!125, !393, !272, !140, null}
!5164 = !{!5165, !5166, !5167, !5168, !5169}
!5165 = !DILocalVariable(name: "str", arg: 1, scope: !5161, file: !408, line: 239, type: !393)
!5166 = !DILocalVariable(name: "size", arg: 2, scope: !5161, file: !408, line: 239, type: !272)
!5167 = !DILocalVariable(name: "fmt", arg: 3, scope: !5161, file: !408, line: 239, type: !140)
!5168 = !DILocalVariable(name: "ap", scope: !5161, file: !408, line: 241, type: !5086)
!5169 = !DILocalVariable(name: "ret", scope: !5161, file: !408, line: 242, type: !125)
!5170 = !DILocation(line: 0, scope: !5161)
!5171 = !DILocation(line: 241, column: 2, scope: !5161)
!5172 = !DILocation(line: 241, column: 10, scope: !5161)
!5173 = !DILocation(line: 244, column: 2, scope: !5161)
!5174 = !DILocation(line: 245, column: 8, scope: !5161)
!5175 = !DILocation(line: 246, column: 2, scope: !5161)
!5176 = !DILocation(line: 249, column: 1, scope: !5161)
!5177 = !DILocation(line: 248, column: 2, scope: !5161)
!5178 = distinct !DISubprogram(name: "vsnprintk", scope: !408, file: !408, line: 251, type: !5179, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5181)
!5179 = !DISubroutineType(types: !5180)
!5180 = !{!125, !393, !272, !140, !5086}
!5181 = !{!5182, !5183, !5184, !5185, !5186}
!5182 = !DILocalVariable(name: "str", arg: 1, scope: !5178, file: !408, line: 251, type: !393)
!5183 = !DILocalVariable(name: "size", arg: 2, scope: !5178, file: !408, line: 251, type: !272)
!5184 = !DILocalVariable(name: "fmt", arg: 3, scope: !5178, file: !408, line: 251, type: !140)
!5185 = !DILocalVariable(name: "ap", arg: 4, scope: !5178, file: !408, line: 251, type: !5086)
!5186 = !DILocalVariable(name: "ctx", scope: !5178, file: !408, line: 253, type: !5187)
!5187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !408, line: 217, size: 96, elements: !5188)
!5188 = !{!5189, !5190, !5191}
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5187, file: !408, line: 218, baseType: !393, size: 32)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5187, file: !408, line: 219, baseType: !125, size: 32, offset: 32)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5187, file: !408, line: 220, baseType: !125, size: 32, offset: 64)
!5192 = !DILocation(line: 0, scope: !5178)
!5193 = !DILocation(line: 253, column: 2, scope: !5178)
!5194 = !DILocation(line: 253, column: 21, scope: !5178)
!5195 = !DILocation(line: 253, column: 27, scope: !5178)
!5196 = !DILocation(line: 255, column: 2, scope: !5178)
!5197 = !DILocation(line: 257, column: 10, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5178, file: !408, line: 257, column: 6)
!5199 = !DILocation(line: 257, column: 22, scope: !5198)
!5200 = !DILocation(line: 257, column: 16, scope: !5198)
!5201 = !DILocation(line: 257, column: 6, scope: !5178)
!5202 = !DILocation(line: 258, column: 3, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5198, file: !408, line: 257, column: 27)
!5204 = !DILocation(line: 258, column: 18, scope: !5203)
!5205 = !DILocation(line: 259, column: 2, scope: !5203)
!5206 = !DILocation(line: 262, column: 1, scope: !5178)
!5207 = !DILocation(line: 261, column: 2, scope: !5178)
!5208 = distinct !DISubprogram(name: "str_out", scope: !408, file: !408, line: 223, type: !5209, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !403, retainedNodes: !5212)
!5209 = !DISubroutineType(types: !5210)
!5210 = !{!125, !125, !5211}
!5211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5187, size: 32)
!5212 = !{!5213, !5214}
!5213 = !DILocalVariable(name: "c", arg: 1, scope: !5208, file: !408, line: 223, type: !125)
!5214 = !DILocalVariable(name: "ctx", arg: 2, scope: !5208, file: !408, line: 223, type: !5211)
!5215 = !DILocation(line: 0, scope: !5208)
!5216 = !DILocation(line: 225, column: 11, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5208, file: !408, line: 225, column: 6)
!5218 = !DILocation(line: 225, column: 15, scope: !5217)
!5219 = !DILocation(line: 0, scope: !5217)
!5220 = !DILocation(line: 225, column: 23, scope: !5217)
!5221 = !DILocation(line: 225, column: 45, scope: !5217)
!5222 = !DILocation(line: 225, column: 37, scope: !5217)
!5223 = !DILocation(line: 225, column: 6, scope: !5208)
!5224 = !DILocation(line: 226, column: 8, scope: !5225)
!5225 = distinct !DILexicalBlock(scope: !5217, file: !408, line: 225, column: 50)
!5226 = !DILocation(line: 226, column: 13, scope: !5225)
!5227 = !DILocation(line: 227, column: 3, scope: !5225)
!5228 = !DILocation(line: 230, column: 29, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5208, file: !408, line: 230, column: 6)
!5230 = !DILocation(line: 230, column: 17, scope: !5229)
!5231 = !DILocation(line: 230, column: 6, scope: !5208)
!5232 = !DILocation(line: 231, column: 22, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5229, file: !408, line: 230, column: 34)
!5234 = !DILocation(line: 231, column: 3, scope: !5233)
!5235 = !DILocation(line: 231, column: 26, scope: !5233)
!5236 = !DILocation(line: 232, column: 2, scope: !5233)
!5237 = !DILocation(line: 233, column: 28, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5229, file: !408, line: 232, column: 9)
!5239 = !DILocation(line: 233, column: 22, scope: !5238)
!5240 = !DILocation(line: 233, column: 3, scope: !5238)
!5241 = !DILocation(line: 233, column: 26, scope: !5238)
!5242 = !DILocation(line: 237, column: 1, scope: !5208)
!5243 = distinct !DISubprogram(name: "z_thread_entry", scope: !5244, file: !5244, line: 30, type: !5245, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !5252)
!5244 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5245 = !DISubroutineType(types: !5246)
!5246 = !{null, !5247, !124, !124, !124}
!5247 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !5248, line: 46, baseType: !5249)
!5248 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5250, size: 32)
!5250 = !DISubroutineType(types: !5251)
!5251 = !{null, !124, !124, !124}
!5252 = !{!5253, !5254, !5255, !5256}
!5253 = !DILocalVariable(name: "entry", arg: 1, scope: !5243, file: !5244, line: 30, type: !5247)
!5254 = !DILocalVariable(name: "p1", arg: 2, scope: !5243, file: !5244, line: 31, type: !124)
!5255 = !DILocalVariable(name: "p2", arg: 3, scope: !5243, file: !5244, line: 31, type: !124)
!5256 = !DILocalVariable(name: "p3", arg: 4, scope: !5243, file: !5244, line: 31, type: !124)
!5257 = !DILocation(line: 0, scope: !5243)
!5258 = !DILocation(line: 36, column: 2, scope: !5243)
!5259 = !DILocation(line: 38, column: 17, scope: !5243)
!5260 = !DILocation(line: 38, column: 2, scope: !5243)
!5261 = !DILocation(line: 45, column: 2, scope: !5243)
!5262 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !5263, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !639)
!5263 = !DISubroutineType(types: !5264)
!5264 = !{!5265}
!5265 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !5266)
!5266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5267, size: 32)
!5267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !5268)
!5268 = !{!5269, !5327, !5339, !5340, !5341, !5342, !5348, !5361}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5267, file: !531, line: 247, baseType: !5270, size: 384)
!5270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !5271)
!5271 = !{!5272, !5296, !5303, !5304, !5305, !5314, !5315, !5316}
!5272 = !DIDerivedType(tag: DW_TAG_member, scope: !5270, file: !531, line: 60, baseType: !5273, size: 64)
!5273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5270, file: !531, line: 60, size: 64, elements: !5274)
!5274 = !{!5275, !5290}
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !5273, file: !531, line: 61, baseType: !5276, size: 64)
!5276 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !5277)
!5277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !5278)
!5278 = !{!5279, !5285}
!5279 = !DIDerivedType(tag: DW_TAG_member, scope: !5277, file: !541, line: 38, baseType: !5280, size: 32)
!5280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5277, file: !541, line: 38, size: 32, elements: !5281)
!5281 = !{!5282, !5284}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5280, file: !541, line: 39, baseType: !5283, size: 32)
!5283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5277, size: 32)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5280, file: !541, line: 40, baseType: !5283, size: 32)
!5285 = !DIDerivedType(tag: DW_TAG_member, scope: !5277, file: !541, line: 42, baseType: !5286, size: 32, offset: 32)
!5286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5277, file: !541, line: 42, size: 32, elements: !5287)
!5287 = !{!5288, !5289}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5286, file: !541, line: 43, baseType: !5283, size: 32)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5286, file: !541, line: 44, baseType: !5283, size: 32)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !5273, file: !531, line: 62, baseType: !5291, size: 64)
!5291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !5292)
!5292 = !{!5293}
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !5291, file: !557, line: 50, baseType: !5294, size: 64)
!5294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5295, size: 64, elements: !562)
!5295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5291, size: 32)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !5270, file: !531, line: 68, baseType: !5297, size: 32, offset: 64)
!5297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5298, size: 32)
!5298 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !5299)
!5299 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !5300)
!5300 = !{!5301}
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5299, file: !567, line: 232, baseType: !5302, size: 64)
!5302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !5277)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !5270, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !5270, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!5305 = !DIDerivedType(tag: DW_TAG_member, scope: !5270, file: !531, line: 90, baseType: !5306, size: 16, offset: 112)
!5306 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5270, file: !531, line: 90, size: 16, elements: !5307)
!5307 = !{!5308, !5313}
!5308 = !DIDerivedType(tag: DW_TAG_member, scope: !5306, file: !531, line: 91, baseType: !5309, size: 16)
!5309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5306, file: !531, line: 91, size: 16, elements: !5310)
!5310 = !{!5311, !5312}
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5309, file: !531, line: 96, baseType: !581, size: 8)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !5309, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !5306, file: !531, line: 100, baseType: !227, size: 16)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !5270, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !5270, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5270, file: !531, line: 131, baseType: !5317, size: 192, offset: 192)
!5317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !5318)
!5318 = !{!5319, !5320, !5326}
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5317, file: !567, line: 245, baseType: !5276, size: 64)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5317, file: !567, line: 246, baseType: !5321, size: 32, offset: 64)
!5321 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !5322)
!5322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5323, size: 32)
!5323 = !DISubroutineType(types: !5324)
!5324 = !{null, !5325}
!5325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5317, size: 32)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !5317, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !5267, file: !531, line: 250, baseType: !5328, size: 288, offset: 384)
!5328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !5329)
!5329 = !{!5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !5328, file: !601, line: 26, baseType: !208, size: 32)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !5328, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !5328, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !5328, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !5328, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !5328, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !5328, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !5328, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !5328, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !5267, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !5267, file: !531, line: 256, baseType: !5298, size: 64, offset: 704)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !5267, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !5267, file: !531, line: 300, baseType: !5343, size: 96, offset: 800)
!5343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !5344)
!5344 = !{!5345, !5346, !5347}
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !5343, file: !531, line: 153, baseType: !22, size: 32)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5343, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !5343, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !5267, file: !531, line: 325, baseType: !5349, size: 32, offset: 896)
!5349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 32)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !5351)
!5351 = !{!5352, !5358, !5359}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5350, file: !624, line: 5074, baseType: !5353, size: 96)
!5353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !5354)
!5354 = !{!5355, !5356, !5357}
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !5353, file: !628, line: 57, baseType: !631, size: 32)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !5353, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !5353, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5350, file: !624, line: 5075, baseType: !5298, size: 64, offset: 96)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5350, file: !624, line: 5076, baseType: !5360, offset: 160)
!5360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5267, file: !531, line: 343, baseType: !5362, size: 64, offset: 928)
!5362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !5363)
!5363 = !{!5364, !5365}
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !5362, file: !601, line: 63, baseType: !208, size: 32)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !5362, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!5366 = !DILocation(line: 535, column: 9, scope: !5262)
!5367 = !DILocation(line: 535, column: 2, scope: !5262)
!5368 = distinct !DISubprogram(name: "k_thread_abort", scope: !5369, file: !5369, line: 188, type: !5370, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !5372)
!5369 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!5370 = !DISubroutineType(types: !5371)
!5371 = !{null, !5265}
!5372 = !{!5373}
!5373 = !DILocalVariable(name: "thread", arg: 1, scope: !5368, file: !5369, line: 188, type: !5265)
!5374 = !DILocation(line: 0, scope: !5368)
!5375 = !DILocation(line: 197, column: 2, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5368, file: !5369, line: 197, column: 2)
!5377 = !{i64 2154739609}
!5378 = !DILocation(line: 198, column: 2, scope: !5368)
!5379 = !DILocation(line: 199, column: 1, scope: !5368)
!5380 = distinct !DISubprogram(name: "z_current_get", scope: !5369, file: !5369, line: 173, type: !5263, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2685, retainedNodes: !639)
!5381 = !DILocation(line: 180, column: 2, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5380, file: !5369, line: 180, column: 2)
!5383 = !{i64 2154739541}
!5384 = !DILocation(line: 181, column: 9, scope: !5380)
!5385 = !DILocation(line: 181, column: 2, scope: !5380)
!5386 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2691, file: !2691, line: 1338, type: !5387, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5395)
!5387 = !DISubroutineType(types: !5388)
!5388 = !{!125, !4577, !124, !140, !5389, !208}
!5389 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4217, line: 99, baseType: !5390)
!5390 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4217, line: 40, baseType: !5391)
!5391 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2691, baseType: !5392)
!5392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5393)
!5393 = !{!5394}
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5392, file: !2691, baseType: !124, size: 32)
!5395 = !{!5396, !5397, !5398, !5399, !5400, !5401, !5405, !5406, !5407, !5409, !5414, !5457, !5460, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5472, !5473, !5474, !5478, !5481, !5483, !5486, !5487, !5488, !5493, !5499, !5502, !5506, !5512, !5516, !5519, !5521, !5524}
!5396 = !DILocalVariable(name: "out", arg: 1, scope: !5386, file: !2691, line: 1338, type: !4577)
!5397 = !DILocalVariable(name: "ctx", arg: 2, scope: !5386, file: !2691, line: 1338, type: !124)
!5398 = !DILocalVariable(name: "fp", arg: 3, scope: !5386, file: !2691, line: 1338, type: !140)
!5399 = !DILocalVariable(name: "ap", arg: 4, scope: !5386, file: !2691, line: 1339, type: !5389)
!5400 = !DILocalVariable(name: "flags", arg: 5, scope: !5386, file: !2691, line: 1339, type: !208)
!5401 = !DILocalVariable(name: "buf", scope: !5386, file: !2691, line: 1341, type: !5402)
!5402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !142, size: 176, elements: !5403)
!5403 = !{!5404}
!5404 = !DISubrange(count: 22)
!5405 = !DILocalVariable(name: "count", scope: !5386, file: !2691, line: 1342, type: !272)
!5406 = !DILocalVariable(name: "sint", scope: !5386, file: !2691, line: 1343, type: !2710)
!5407 = !DILocalVariable(name: "tagged_ap", scope: !5386, file: !2691, line: 1345, type: !5408)
!5408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!5409 = !DILocalVariable(name: "rc", scope: !5410, file: !2691, line: 1377, type: !125)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !2691, line: 1377, column: 4)
!5411 = distinct !DILexicalBlock(scope: !5412, file: !2691, line: 1376, column: 19)
!5412 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1376, column: 7)
!5413 = distinct !DILexicalBlock(scope: !5386, file: !2691, line: 1375, column: 19)
!5414 = !DILocalVariable(name: "state", scope: !5413, file: !2691, line: 1395, type: !5415)
!5415 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5386, file: !2691, line: 1392, size: 192, elements: !5416)
!5416 = !{!5417, !5425}
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5415, file: !2691, line: 1393, baseType: !5418, size: 64)
!5418 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2691, line: 166, size: 64, elements: !5419)
!5419 = !{!5420, !5421, !5422, !5423, !5424}
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !5418, file: !2691, line: 168, baseType: !2710, size: 64)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !5418, file: !2691, line: 171, baseType: !2713, size: 64)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !5418, file: !2691, line: 174, baseType: !385, size: 64)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !5418, file: !2691, line: 177, baseType: !383, size: 64)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5418, file: !2691, line: 180, baseType: !124, size: 32)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !5415, file: !2691, line: 1394, baseType: !5426, size: 96, offset: 64)
!5426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2691, line: 189, size: 96, elements: !5427)
!5427 = !{!5428, !5429, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5452}
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !5426, file: !2691, line: 191, baseType: !153, size: 1, flags: DIFlagBitField, extraData: i64 0)
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !5426, file: !2691, line: 194, baseType: !153, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !5426, file: !2691, line: 197, baseType: !153, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !5426, file: !2691, line: 200, baseType: !153, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !5426, file: !2691, line: 203, baseType: !153, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !5426, file: !2691, line: 206, baseType: !153, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !5426, file: !2691, line: 209, baseType: !153, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !5426, file: !2691, line: 212, baseType: !153, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !5426, file: !2691, line: 219, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !5426, file: !2691, line: 222, baseType: !153, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !5426, file: !2691, line: 229, baseType: !153, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !5426, file: !2691, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !5426, file: !2691, line: 238, baseType: !153, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !5426, file: !2691, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !5426, file: !2691, line: 244, baseType: !153, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !5426, file: !2691, line: 247, baseType: !153, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !5426, file: !2691, line: 252, baseType: !153, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !5426, file: !2691, line: 257, baseType: !153, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !5426, file: !2691, line: 260, baseType: !151, size: 8, offset: 24)
!5447 = !DIDerivedType(tag: DW_TAG_member, scope: !5426, file: !2691, line: 262, baseType: !5448, size: 32, offset: 32)
!5448 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5426, file: !2691, line: 262, size: 32, elements: !5449)
!5449 = !{!5450, !5451}
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !5448, file: !2691, line: 267, baseType: !125, size: 32)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !5448, file: !2691, line: 289, baseType: !125, size: 32)
!5452 = !DIDerivedType(tag: DW_TAG_member, scope: !5426, file: !2691, line: 292, baseType: !5453, size: 32, offset: 64)
!5453 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5426, file: !2691, line: 292, size: 32, elements: !5454)
!5454 = !{!5455, !5456}
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !5453, file: !2691, line: 297, baseType: !125, size: 32)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !5453, file: !2691, line: 306, baseType: !125, size: 32)
!5457 = !DILocalVariable(name: "conv", scope: !5413, file: !2691, line: 1400, type: !5458)
!5458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5459)
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5426, size: 32)
!5460 = !DILocalVariable(name: "value", scope: !5413, file: !2691, line: 1401, type: !5461)
!5461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5462)
!5462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5418, size: 32)
!5463 = !DILocalVariable(name: "sp", scope: !5413, file: !2691, line: 1402, type: !140)
!5464 = !DILocalVariable(name: "width", scope: !5413, file: !2691, line: 1403, type: !125)
!5465 = !DILocalVariable(name: "precision", scope: !5413, file: !2691, line: 1404, type: !125)
!5466 = !DILocalVariable(name: "bps", scope: !5413, file: !2691, line: 1405, type: !140)
!5467 = !DILocalVariable(name: "bpe", scope: !5413, file: !2691, line: 1406, type: !140)
!5468 = !DILocalVariable(name: "sign", scope: !5413, file: !2691, line: 1407, type: !142)
!5469 = !DILocalVariable(name: "arg", scope: !5470, file: !2691, line: 1432, type: !125)
!5470 = distinct !DILexicalBlock(scope: !5471, file: !2691, line: 1431, column: 24)
!5471 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1431, column: 7)
!5472 = !DILocalVariable(name: "specifier_cat", scope: !5413, file: !2691, line: 1468, type: !2690)
!5473 = !DILocalVariable(name: "length_mod", scope: !5413, file: !2691, line: 1470, type: !2698)
!5474 = !DILocalVariable(name: "rc", scope: !5475, file: !2691, line: 1575, type: !125)
!5475 = distinct !DILexicalBlock(scope: !5476, file: !2691, line: 1575, column: 4)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !2691, line: 1574, column: 43)
!5477 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1574, column: 7)
!5478 = !DILocalVariable(name: "rc", scope: !5479, file: !2691, line: 1584, type: !125)
!5479 = distinct !DILexicalBlock(scope: !5480, file: !2691, line: 1584, column: 4)
!5480 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1582, column: 28)
!5481 = !DILocalVariable(name: "len", scope: !5482, file: !2691, line: 1589, type: !272)
!5482 = distinct !DILexicalBlock(scope: !5480, file: !2691, line: 1586, column: 13)
!5483 = !DILocalVariable(name: "len", scope: !5484, file: !2691, line: 1641, type: !272)
!5484 = distinct !DILexicalBlock(scope: !5485, file: !2691, line: 1640, column: 24)
!5485 = distinct !DILexicalBlock(scope: !5480, file: !2691, line: 1640, column: 8)
!5486 = !DILocalVariable(name: "nj_len", scope: !5413, file: !2691, line: 1722, type: !272)
!5487 = !DILocalVariable(name: "pad_len", scope: !5413, file: !2691, line: 1723, type: !125)
!5488 = !DILocalVariable(name: "pad", scope: !5489, file: !2691, line: 1751, type: !142)
!5489 = distinct !DILexicalBlock(scope: !5490, file: !2691, line: 1750, column: 26)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !2691, line: 1750, column: 8)
!5491 = distinct !DILexicalBlock(scope: !5492, file: !2691, line: 1747, column: 18)
!5492 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1747, column: 7)
!5493 = !DILocalVariable(name: "rc", scope: !5494, file: !2691, line: 1758, type: !125)
!5494 = distinct !DILexicalBlock(scope: !5495, file: !2691, line: 1758, column: 7)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !2691, line: 1757, column: 21)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !2691, line: 1757, column: 10)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !2691, line: 1756, column: 26)
!5498 = distinct !DILexicalBlock(scope: !5489, file: !2691, line: 1756, column: 9)
!5499 = !DILocalVariable(name: "rc", scope: !5500, file: !2691, line: 1765, type: !125)
!5500 = distinct !DILexicalBlock(scope: !5501, file: !2691, line: 1765, column: 6)
!5501 = distinct !DILexicalBlock(scope: !5489, file: !2691, line: 1764, column: 25)
!5502 = !DILocalVariable(name: "rc", scope: !5503, file: !2691, line: 1774, type: !125)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !2691, line: 1774, column: 4)
!5504 = distinct !DILexicalBlock(scope: !5505, file: !2691, line: 1773, column: 18)
!5505 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1773, column: 7)
!5506 = !DILocalVariable(name: "rc", scope: !5507, file: !2691, line: 1819, type: !125)
!5507 = distinct !DILexicalBlock(scope: !5508, file: !2691, line: 1819, column: 5)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !2691, line: 1818, column: 44)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !2691, line: 1818, column: 8)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !2691, line: 1817, column: 10)
!5511 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1777, column: 7)
!5512 = !DILocalVariable(name: "rc", scope: !5513, file: !2691, line: 1823, type: !125)
!5513 = distinct !DILexicalBlock(scope: !5514, file: !2691, line: 1823, column: 5)
!5514 = distinct !DILexicalBlock(scope: !5515, file: !2691, line: 1822, column: 26)
!5515 = distinct !DILexicalBlock(scope: !5510, file: !2691, line: 1822, column: 8)
!5516 = !DILocalVariable(name: "rc", scope: !5517, file: !2691, line: 1828, type: !125)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !2691, line: 1828, column: 5)
!5518 = distinct !DILexicalBlock(scope: !5510, file: !2691, line: 1827, column: 26)
!5519 = !DILocalVariable(name: "rc", scope: !5520, file: !2691, line: 1831, type: !125)
!5520 = distinct !DILexicalBlock(scope: !5510, file: !2691, line: 1831, column: 4)
!5521 = !DILocalVariable(name: "rc", scope: !5522, file: !2691, line: 1836, type: !125)
!5522 = distinct !DILexicalBlock(scope: !5523, file: !2691, line: 1836, column: 4)
!5523 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1835, column: 21)
!5524 = !DILabel(scope: !5480, name: "prec_int_pad0", file: !2691, line: 1634)
!5525 = !DILocation(line: 0, scope: !5386)
!5526 = !DILocation(line: 1341, column: 2, scope: !5386)
!5527 = !DILocation(line: 1341, column: 7, scope: !5386)
!5528 = !DILocation(line: 1375, column: 2, scope: !5386)
!5529 = !DILocation(line: 1342, column: 9, scope: !5386)
!5530 = !DILocation(line: 1375, column: 9, scope: !5386)
!5531 = !DILocation(line: 1377, column: 4, scope: !5410)
!5532 = !DILocation(line: 0, scope: !5410)
!5533 = !DILocation(line: 1377, column: 4, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5410, file: !2691, line: 1377, column: 4)
!5535 = distinct !{!5535, !5528, !5536}
!5536 = !DILocation(line: 1839, column: 2, scope: !5386)
!5537 = !DILocation(line: 1392, column: 3, scope: !5413)
!5538 = !DILocation(line: 1395, column: 5, scope: !5413)
!5539 = !DILocation(line: 0, scope: !5413)
!5540 = !DILocation(line: 1409, column: 8, scope: !5413)
!5541 = !DILocation(line: 1414, column: 13, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1414, column: 7)
!5543 = !DILocation(line: 1414, column: 7, scope: !5413)
!5544 = !DILocation(line: 1415, column: 12, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5542, file: !2691, line: 1414, column: 25)
!5546 = !DILocation(line: 1417, column: 14, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5545, file: !2691, line: 1417, column: 8)
!5548 = !DILocation(line: 1417, column: 8, scope: !5545)
!5549 = !DILocation(line: 1418, column: 21, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5547, file: !2691, line: 1417, column: 19)
!5551 = !DILocation(line: 1419, column: 13, scope: !5550)
!5552 = !DILocation(line: 1420, column: 4, scope: !5550)
!5553 = !DILocation(line: 1421, column: 20, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5542, file: !2691, line: 1421, column: 14)
!5555 = !DILocation(line: 1421, column: 14, scope: !5542)
!5556 = !DILocation(line: 1431, column: 13, scope: !5471)
!5557 = !DILocation(line: 1431, column: 7, scope: !5413)
!5558 = !DILocation(line: 1432, column: 14, scope: !5470)
!5559 = !DILocation(line: 0, scope: !5470)
!5560 = !DILocation(line: 1434, column: 12, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5470, file: !2691, line: 1434, column: 8)
!5562 = !DILocation(line: 1434, column: 8, scope: !5470)
!5563 = !DILocation(line: 1435, column: 24, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5561, file: !2691, line: 1434, column: 17)
!5565 = !DILocation(line: 1436, column: 4, scope: !5564)
!5566 = !DILocation(line: 1439, column: 20, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5471, file: !2691, line: 1439, column: 14)
!5568 = !DILocation(line: 1439, column: 14, scope: !5471)
!5569 = !DILocation(line: 1469, column: 37, scope: !5413)
!5570 = !DILocation(line: 1448, column: 20, scope: !5413)
!5571 = !DILocation(line: 1449, column: 22, scope: !5413)
!5572 = !DILocation(line: 1471, column: 34, scope: !5413)
!5573 = !DILocation(line: 1478, column: 7, scope: !5413)
!5574 = !DILocation(line: 1479, column: 4, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5576, file: !2691, line: 1478, column: 40)
!5576 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1478, column: 7)
!5577 = !DILocation(line: 1484, column: 19, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5575, file: !2691, line: 1479, column: 24)
!5579 = !DILocation(line: 1484, column: 17, scope: !5578)
!5580 = !DILocation(line: 1485, column: 5, scope: !5578)
!5581 = !DILocation(line: 1492, column: 20, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5583, file: !2691, line: 1491, column: 12)
!5583 = distinct !DILexicalBlock(scope: !5578, file: !2691, line: 1487, column: 9)
!5584 = !DILocation(line: 1492, column: 18, scope: !5582)
!5585 = !DILocation(line: 1494, column: 5, scope: !5578)
!5586 = !DILocation(line: 1497, column: 23, scope: !5578)
!5587 = !DILocation(line: 1496, column: 17, scope: !5578)
!5588 = !DILocation(line: 1498, column: 5, scope: !5578)
!5589 = !DILocation(line: 1501, column: 23, scope: !5578)
!5590 = !DILocation(line: 1500, column: 17, scope: !5578)
!5591 = !DILocation(line: 1502, column: 5, scope: !5578)
!5592 = !DILocation(line: 1513, column: 23, scope: !5578)
!5593 = !DILocation(line: 1513, column: 6, scope: !5578)
!5594 = !DILocation(line: 1512, column: 17, scope: !5578)
!5595 = !DILocation(line: 1514, column: 5, scope: !5578)
!5596 = !DILocation(line: 0, scope: !5578)
!5597 = !DILocation(line: 1516, column: 8, scope: !5575)
!5598 = !DILocation(line: 1517, column: 19, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5600, file: !2691, line: 1516, column: 33)
!5600 = distinct !DILexicalBlock(scope: !5575, file: !2691, line: 1516, column: 8)
!5601 = !DILocation(line: 1517, column: 17, scope: !5599)
!5602 = !DILocation(line: 1518, column: 4, scope: !5599)
!5603 = !DILocation(line: 1519, column: 19, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5605, file: !2691, line: 1518, column: 39)
!5605 = distinct !DILexicalBlock(scope: !5600, file: !2691, line: 1518, column: 15)
!5606 = !DILocation(line: 1519, column: 17, scope: !5604)
!5607 = !DILocation(line: 1520, column: 4, scope: !5604)
!5608 = !DILocation(line: 1522, column: 4, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5610, file: !2691, line: 1521, column: 47)
!5610 = distinct !DILexicalBlock(scope: !5576, file: !2691, line: 1521, column: 14)
!5611 = !DILocation(line: 1527, column: 19, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5609, file: !2691, line: 1522, column: 24)
!5613 = !DILocation(line: 1527, column: 17, scope: !5612)
!5614 = !DILocation(line: 1528, column: 5, scope: !5612)
!5615 = !DILocation(line: 0, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5612, file: !2691, line: 1530, column: 9)
!5617 = !DILocation(line: 1540, column: 23, scope: !5612)
!5618 = !DILocation(line: 1539, column: 17, scope: !5612)
!5619 = !DILocation(line: 1542, column: 5, scope: !5612)
!5620 = !DILocation(line: 1545, column: 23, scope: !5612)
!5621 = !DILocation(line: 1544, column: 17, scope: !5612)
!5622 = !DILocation(line: 1547, column: 5, scope: !5612)
!5623 = !DILocation(line: 1551, column: 23, scope: !5612)
!5624 = !DILocation(line: 1551, column: 6, scope: !5612)
!5625 = !DILocation(line: 1550, column: 17, scope: !5612)
!5626 = !DILocation(line: 1552, column: 5, scope: !5612)
!5627 = !DILocation(line: 0, scope: !5612)
!5628 = !DILocation(line: 1554, column: 8, scope: !5609)
!5629 = !DILocation(line: 1555, column: 19, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5631, file: !2691, line: 1554, column: 33)
!5631 = distinct !DILexicalBlock(scope: !5609, file: !2691, line: 1554, column: 8)
!5632 = !DILocation(line: 1555, column: 17, scope: !5630)
!5633 = !DILocation(line: 1556, column: 4, scope: !5630)
!5634 = !DILocation(line: 1557, column: 19, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5636, file: !2691, line: 1556, column: 39)
!5636 = distinct !DILexicalBlock(scope: !5631, file: !2691, line: 1556, column: 15)
!5637 = !DILocation(line: 1557, column: 17, scope: !5635)
!5638 = !DILocation(line: 1558, column: 4, scope: !5635)
!5639 = !DILocation(line: 0, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5641, file: !2691, line: 1560, column: 8)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !2691, line: 1559, column: 45)
!5642 = distinct !DILexicalBlock(scope: !5610, file: !2691, line: 1559, column: 14)
!5643 = !DILocation(line: 1566, column: 17, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5645, file: !2691, line: 1565, column: 46)
!5645 = distinct !DILexicalBlock(scope: !5642, file: !2691, line: 1565, column: 14)
!5646 = !DILocation(line: 1566, column: 15, scope: !5644)
!5647 = !DILocation(line: 1567, column: 3, scope: !5644)
!5648 = !DILocation(line: 1574, column: 21, scope: !5477)
!5649 = !DILocation(line: 1575, column: 4, scope: !5475)
!5650 = !DILocation(line: 0, scope: !5475)
!5651 = !DILocation(line: 1575, column: 4, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5475, file: !2691, line: 1575, column: 4)
!5653 = !DILocation(line: 1582, column: 17, scope: !5413)
!5654 = !DILocation(line: 1582, column: 3, scope: !5413)
!5655 = !DILocation(line: 1584, column: 4, scope: !5479)
!5656 = !DILocation(line: 0, scope: !5479)
!5657 = !DILocation(line: 1584, column: 4, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5479, file: !2691, line: 1584, column: 4)
!5659 = !DILocation(line: 1587, column: 31, scope: !5482)
!5660 = !DILocation(line: 1591, column: 18, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5482, file: !2691, line: 1591, column: 8)
!5662 = !DILocation(line: 1591, column: 8, scope: !5482)
!5663 = !DILocation(line: 1592, column: 11, scope: !5664)
!5664 = distinct !DILexicalBlock(scope: !5661, file: !2691, line: 1591, column: 24)
!5665 = !DILocation(line: 0, scope: !5482)
!5666 = !DILocation(line: 1593, column: 4, scope: !5664)
!5667 = !DILocation(line: 1594, column: 11, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5661, file: !2691, line: 1593, column: 11)
!5669 = !DILocation(line: 1604, column: 51, scope: !5480)
!5670 = !DILocation(line: 1604, column: 13, scope: !5480)
!5671 = !DILocation(line: 1604, column: 11, scope: !5480)
!5672 = !DILocation(line: 1606, column: 4, scope: !5480)
!5673 = !DILocation(line: 1609, column: 14, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5480, file: !2691, line: 1609, column: 8)
!5675 = !DILocation(line: 1609, column: 8, scope: !5480)
!5676 = !DILocation(line: 1619, column: 18, scope: !5480)
!5677 = !DILocation(line: 1620, column: 13, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5480, file: !2691, line: 1620, column: 8)
!5679 = !DILocation(line: 1620, column: 8, scope: !5480)
!5680 = !DILocation(line: 1622, column: 36, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5678, file: !2691, line: 1620, column: 18)
!5682 = !DILocation(line: 1622, column: 17, scope: !5681)
!5683 = !DILocation(line: 1623, column: 4, scope: !5681)
!5684 = !DILocation(line: 1632, column: 29, scope: !5480)
!5685 = !DILocation(line: 1632, column: 10, scope: !5480)
!5686 = !DILocation(line: 1632, column: 4, scope: !5480)
!5687 = !DILocation(line: 1407, column: 8, scope: !5413)
!5688 = !DILocation(line: 0, scope: !5480)
!5689 = !DILocation(line: 1634, column: 3, scope: !5480)
!5690 = !DILocation(line: 1640, column: 18, scope: !5485)
!5691 = !DILocation(line: 1640, column: 8, scope: !5480)
!5692 = !DILocation(line: 1729, column: 13, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1729, column: 7)
!5694 = !DILocation(line: 1641, column: 22, scope: !5484)
!5695 = !DILocation(line: 0, scope: !5484)
!5696 = !DILocation(line: 1646, column: 21, scope: !5484)
!5697 = !DILocation(line: 1649, column: 13, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5484, file: !2691, line: 1649, column: 9)
!5699 = !DILocation(line: 1649, column: 9, scope: !5484)
!5700 = !DILocation(line: 1650, column: 35, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5698, file: !2691, line: 1649, column: 34)
!5702 = !DILocation(line: 1650, column: 23, scope: !5701)
!5703 = !DILocation(line: 1651, column: 5, scope: !5701)
!5704 = !DILocation(line: 1660, column: 15, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5480, file: !2691, line: 1660, column: 8)
!5706 = !DILocation(line: 1660, column: 19, scope: !5705)
!5707 = !DILocation(line: 1660, column: 8, scope: !5480)
!5708 = !DILocation(line: 1661, column: 23, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5705, file: !2691, line: 1660, column: 28)
!5710 = !DILocation(line: 1661, column: 11, scope: !5709)
!5711 = !DILocation(line: 1665, column: 22, scope: !5709)
!5712 = !DILocation(line: 1666, column: 21, scope: !5709)
!5713 = !DILocation(line: 1668, column: 5, scope: !5709)
!5714 = !DILocation(line: 1677, column: 30, scope: !5715)
!5715 = distinct !DILexicalBlock(scope: !5716, file: !2691, line: 1676, column: 49)
!5716 = distinct !DILexicalBlock(scope: !5480, file: !2691, line: 1676, column: 8)
!5717 = !DILocation(line: 1677, column: 5, scope: !5715)
!5718 = !DILocation(line: 1680, column: 4, scope: !5480)
!5719 = !DILocation(line: 0, scope: !5661)
!5720 = !DILocation(line: 1597, column: 14, scope: !5482)
!5721 = !DILocation(line: 1699, column: 11, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1699, column: 7)
!5723 = !DILocation(line: 1699, column: 7, scope: !5413)
!5724 = !DILocation(line: 1725, column: 7, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1725, column: 7)
!5726 = !DILocation(line: 1725, column: 12, scope: !5725)
!5727 = !DILocation(line: 1747, column: 13, scope: !5492)
!5728 = !DILocation(line: 1747, column: 7, scope: !5413)
!5729 = !DILocation(line: 1722, column: 24, scope: !5413)
!5730 = !DILocation(line: 1725, column: 7, scope: !5413)
!5731 = !DILocation(line: 1729, column: 7, scope: !5413)
!5732 = !DILocation(line: 1736, column: 13, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5413, file: !2691, line: 1736, column: 7)
!5734 = !DILocation(line: 1735, column: 19, scope: !5413)
!5735 = !DILocation(line: 1736, column: 7, scope: !5413)
!5736 = !DILocation(line: 1748, column: 10, scope: !5491)
!5737 = !DILocation(line: 1750, column: 15, scope: !5490)
!5738 = !DILocation(line: 1750, column: 8, scope: !5491)
!5739 = !DILocation(line: 0, scope: !5489)
!5740 = !DILocation(line: 1756, column: 15, scope: !5498)
!5741 = !DILocation(line: 1756, column: 9, scope: !5489)
!5742 = !DILocation(line: 1758, column: 7, scope: !5494)
!5743 = !DILocation(line: 0, scope: !5494)
!5744 = !DILocation(line: 1758, column: 7, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5494, file: !2691, line: 1758, column: 7)
!5746 = !DILocation(line: 1764, column: 5, scope: !5489)
!5747 = !DILocation(line: 0, scope: !5491)
!5748 = !DILocation(line: 1764, column: 20, scope: !5489)
!5749 = !DILocation(line: 1764, column: 17, scope: !5489)
!5750 = !DILocation(line: 1765, column: 6, scope: !5500)
!5751 = !DILocation(line: 0, scope: !5500)
!5752 = !DILocation(line: 1765, column: 6, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5500, file: !2691, line: 1765, column: 6)
!5754 = distinct !{!5754, !5746, !5755}
!5755 = !DILocation(line: 1766, column: 5, scope: !5489)
!5756 = !DILocation(line: 1773, column: 12, scope: !5505)
!5757 = !DILocation(line: 1773, column: 7, scope: !5413)
!5758 = !DILocation(line: 1773, column: 7, scope: !5505)
!5759 = !DILocation(line: 1774, column: 4, scope: !5503)
!5760 = !DILocation(line: 0, scope: !5503)
!5761 = !DILocation(line: 1774, column: 4, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5503, file: !2691, line: 1774, column: 4)
!5763 = !DILocation(line: 1818, column: 8, scope: !5509)
!5764 = !DILocation(line: 1818, column: 27, scope: !5509)
!5765 = !DILocation(line: 1818, column: 25, scope: !5509)
!5766 = !DILocation(line: 1818, column: 8, scope: !5510)
!5767 = !DILocation(line: 1819, column: 5, scope: !5507)
!5768 = !DILocation(line: 0, scope: !5507)
!5769 = !DILocation(line: 1819, column: 5, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5507, file: !2691, line: 1819, column: 5)
!5771 = !DILocation(line: 1822, column: 14, scope: !5515)
!5772 = !DILocation(line: 1822, column: 8, scope: !5510)
!5773 = !DILocation(line: 1823, column: 5, scope: !5513)
!5774 = !DILocation(line: 0, scope: !5513)
!5775 = !DILocation(line: 1823, column: 5, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5513, file: !2691, line: 1823, column: 5)
!5777 = !DILocation(line: 1826, column: 20, scope: !5510)
!5778 = !DILocation(line: 1827, column: 4, scope: !5510)
!5779 = !DILocation(line: 0, scope: !5510)
!5780 = !DILocation(line: 1827, column: 21, scope: !5510)
!5781 = !DILocation(line: 1827, column: 18, scope: !5510)
!5782 = !DILocation(line: 1828, column: 5, scope: !5517)
!5783 = !DILocation(line: 0, scope: !5517)
!5784 = !DILocation(line: 1828, column: 5, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5517, file: !2691, line: 1828, column: 5)
!5786 = distinct !{!5786, !5778, !5787}
!5787 = !DILocation(line: 1829, column: 4, scope: !5510)
!5788 = !DILocation(line: 1831, column: 4, scope: !5520)
!5789 = !DILocation(line: 0, scope: !5520)
!5790 = !DILocation(line: 1831, column: 4, scope: !5791)
!5791 = distinct !DILexicalBlock(scope: !5520, file: !2691, line: 1831, column: 4)
!5792 = !DILocation(line: 1835, column: 16, scope: !5413)
!5793 = !DILocation(line: 1835, column: 3, scope: !5413)
!5794 = !DILocation(line: 1836, column: 4, scope: !5522)
!5795 = !DILocation(line: 0, scope: !5522)
!5796 = !DILocation(line: 1836, column: 4, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5522, file: !2691, line: 1836, column: 4)
!5798 = !DILocation(line: 1837, column: 4, scope: !5523)
!5799 = distinct !{!5799, !5793, !5800}
!5800 = !DILocation(line: 1838, column: 3, scope: !5413)
!5801 = !DILocation(line: 1844, column: 1, scope: !5386)
!5802 = distinct !DISubprogram(name: "extract_conversion", scope: !2691, file: !2691, line: 642, type: !5803, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5805)
!5803 = !DISubroutineType(types: !5804)
!5804 = !{!140, !5459, !140}
!5805 = !{!5806, !5807}
!5806 = !DILocalVariable(name: "conv", arg: 1, scope: !5802, file: !2691, line: 642, type: !5459)
!5807 = !DILocalVariable(name: "sp", arg: 2, scope: !5802, file: !2691, line: 643, type: !140)
!5808 = !DILocation(line: 0, scope: !5802)
!5809 = !DILocation(line: 645, column: 10, scope: !5802)
!5810 = !DILocation(line: 653, column: 2, scope: !5802)
!5811 = !DILocation(line: 654, column: 6, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5802, file: !2691, line: 654, column: 6)
!5813 = !DILocation(line: 654, column: 10, scope: !5812)
!5814 = !DILocation(line: 654, column: 6, scope: !5802)
!5815 = !DILocation(line: 655, column: 24, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5812, file: !2691, line: 654, column: 18)
!5817 = !DILocation(line: 655, column: 19, scope: !5816)
!5818 = !DILocation(line: 656, column: 3, scope: !5816)
!5819 = !DILocation(line: 659, column: 7, scope: !5802)
!5820 = !DILocation(line: 660, column: 7, scope: !5802)
!5821 = !DILocation(line: 661, column: 7, scope: !5802)
!5822 = !DILocation(line: 662, column: 7, scope: !5802)
!5823 = !DILocation(line: 663, column: 7, scope: !5802)
!5824 = !DILocation(line: 665, column: 2, scope: !5802)
!5825 = !DILocation(line: 666, column: 1, scope: !5802)
!5826 = distinct !DISubprogram(name: "outs", scope: !2691, file: !2691, line: 1319, type: !5827, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5829)
!5827 = !DISubroutineType(types: !5828)
!5828 = !{!125, !4577, !124, !140, !140}
!5829 = !{!5830, !5831, !5832, !5833, !5834, !5835}
!5830 = !DILocalVariable(name: "out", arg: 1, scope: !5826, file: !2691, line: 1319, type: !4577)
!5831 = !DILocalVariable(name: "ctx", arg: 2, scope: !5826, file: !2691, line: 1320, type: !124)
!5832 = !DILocalVariable(name: "sp", arg: 3, scope: !5826, file: !2691, line: 1321, type: !140)
!5833 = !DILocalVariable(name: "ep", arg: 4, scope: !5826, file: !2691, line: 1322, type: !140)
!5834 = !DILocalVariable(name: "count", scope: !5826, file: !2691, line: 1324, type: !272)
!5835 = !DILocalVariable(name: "rc", scope: !5836, file: !2691, line: 1327, type: !125)
!5836 = distinct !DILexicalBlock(scope: !5826, file: !2691, line: 1326, column: 45)
!5837 = !DILocation(line: 0, scope: !5826)
!5838 = !DILocation(line: 1326, column: 2, scope: !5826)
!5839 = !DILocation(line: 1324, column: 9, scope: !5826)
!5840 = !DILocation(line: 1326, column: 13, scope: !5826)
!5841 = !DILocation(line: 1326, column: 19, scope: !5826)
!5842 = !DILocation(line: 1327, column: 21, scope: !5836)
!5843 = !DILocation(line: 1326, column: 36, scope: !5826)
!5844 = !DILocation(line: 1326, column: 39, scope: !5826)
!5845 = !DILocation(line: 1327, column: 24, scope: !5836)
!5846 = !DILocation(line: 1327, column: 16, scope: !5836)
!5847 = !DILocation(line: 1327, column: 12, scope: !5836)
!5848 = !DILocation(line: 0, scope: !5836)
!5849 = !DILocation(line: 1329, column: 10, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5836, file: !2691, line: 1329, column: 7)
!5851 = !DILocation(line: 1329, column: 7, scope: !5836)
!5852 = distinct !{!5852, !5838, !5853}
!5853 = !DILocation(line: 1333, column: 2, scope: !5826)
!5854 = !DILocation(line: 1336, column: 1, scope: !5826)
!5855 = distinct !DISubprogram(name: "encode_uint", scope: !2691, file: !2691, line: 788, type: !5856, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5858)
!5856 = !DISubroutineType(types: !5857)
!5857 = !{!393, !2713, !5459, !393, !140}
!5858 = !{!5859, !5860, !5861, !5862, !5863, !5864, !5866, !5867}
!5859 = !DILocalVariable(name: "value", arg: 1, scope: !5855, file: !2691, line: 788, type: !2713)
!5860 = !DILocalVariable(name: "conv", arg: 2, scope: !5855, file: !2691, line: 789, type: !5459)
!5861 = !DILocalVariable(name: "bps", arg: 3, scope: !5855, file: !2691, line: 790, type: !393)
!5862 = !DILocalVariable(name: "bpe", arg: 4, scope: !5855, file: !2691, line: 791, type: !140)
!5863 = !DILocalVariable(name: "upcase", scope: !5855, file: !2691, line: 793, type: !153)
!5864 = !DILocalVariable(name: "radix", scope: !5855, file: !2691, line: 794, type: !5865)
!5865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5866 = !DILocalVariable(name: "bp", scope: !5855, file: !2691, line: 795, type: !393)
!5867 = !DILocalVariable(name: "lsv", scope: !5868, file: !2691, line: 798, type: !32)
!5868 = distinct !DILexicalBlock(scope: !5855, file: !2691, line: 797, column: 5)
!5869 = !DILocation(line: 0, scope: !5855)
!5870 = !DILocation(line: 793, column: 35, scope: !5855)
!5871 = !DILocation(line: 793, column: 24, scope: !5855)
!5872 = !DILocation(line: 793, column: 16, scope: !5855)
!5873 = !DILocation(line: 794, column: 29, scope: !5855)
!5874 = !DILocation(line: 795, column: 24, scope: !5855)
!5875 = !DILocation(line: 795, column: 17, scope: !5855)
!5876 = !DILocation(line: 797, column: 2, scope: !5855)
!5877 = !DILocation(line: 802, column: 9, scope: !5868)
!5878 = !DILocation(line: 798, column: 22, scope: !5868)
!5879 = !DILocation(line: 0, scope: !5868)
!5880 = !DILocation(line: 800, column: 16, scope: !5868)
!5881 = !DILocation(line: 800, column: 11, scope: !5868)
!5882 = !DILocation(line: 800, column: 4, scope: !5868)
!5883 = !DILocation(line: 800, column: 9, scope: !5868)
!5884 = !DILocation(line: 803, column: 18, scope: !5855)
!5885 = !DILocation(line: 803, column: 24, scope: !5855)
!5886 = !DILocation(line: 803, column: 2, scope: !5868)
!5887 = distinct !{!5887, !5876, !5888}
!5888 = !DILocation(line: 803, column: 37, scope: !5855)
!5889 = !DILocation(line: 808, column: 12, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5855, file: !2691, line: 808, column: 6)
!5891 = !DILocation(line: 808, column: 6, scope: !5855)
!5892 = !DILocation(line: 809, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5890, file: !2691, line: 808, column: 23)
!5894 = !DILocation(line: 813, column: 3, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !2691, line: 811, column: 27)
!5896 = distinct !DILexicalBlock(scope: !5897, file: !2691, line: 811, column: 14)
!5897 = distinct !DILexicalBlock(scope: !5893, file: !2691, line: 809, column: 7)
!5898 = !DILocation(line: 0, scope: !5897)
!5899 = !DILocation(line: 818, column: 2, scope: !5855)
!5900 = distinct !DISubprogram(name: "store_count", scope: !2691, file: !2691, line: 1280, type: !5901, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5905)
!5901 = !DISubroutineType(types: !5902)
!5902 = !{null, !5903, !124, !125}
!5903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5904, size: 32)
!5904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5426)
!5905 = !{!5906, !5907, !5908}
!5906 = !DILocalVariable(name: "conv", arg: 1, scope: !5900, file: !2691, line: 1280, type: !5903)
!5907 = !DILocalVariable(name: "dp", arg: 2, scope: !5900, file: !2691, line: 1281, type: !124)
!5908 = !DILocalVariable(name: "count", arg: 3, scope: !5900, file: !2691, line: 1282, type: !125)
!5909 = !DILocation(line: 0, scope: !5900)
!5910 = !DILocation(line: 1284, column: 38, scope: !5900)
!5911 = !DILocation(line: 1284, column: 2, scope: !5900)
!5912 = !DILocation(line: 1286, column: 4, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5900, file: !2691, line: 1284, column: 50)
!5914 = !DILocation(line: 1286, column: 14, scope: !5913)
!5915 = !DILocation(line: 1287, column: 3, scope: !5913)
!5916 = !DILocation(line: 1289, column: 24, scope: !5913)
!5917 = !DILocation(line: 1289, column: 22, scope: !5913)
!5918 = !DILocation(line: 1290, column: 3, scope: !5913)
!5919 = !DILocation(line: 1292, column: 18, scope: !5913)
!5920 = !DILocation(line: 1292, column: 4, scope: !5913)
!5921 = !DILocation(line: 1292, column: 16, scope: !5913)
!5922 = !DILocation(line: 1293, column: 3, scope: !5913)
!5923 = !DILocation(line: 1295, column: 4, scope: !5913)
!5924 = !DILocation(line: 1295, column: 15, scope: !5913)
!5925 = !DILocation(line: 1296, column: 3, scope: !5913)
!5926 = !DILocation(line: 1298, column: 22, scope: !5913)
!5927 = !DILocation(line: 1298, column: 4, scope: !5913)
!5928 = !DILocation(line: 1298, column: 20, scope: !5913)
!5929 = !DILocation(line: 1299, column: 3, scope: !5913)
!5930 = !DILocation(line: 1301, column: 21, scope: !5913)
!5931 = !DILocation(line: 1301, column: 4, scope: !5913)
!5932 = !DILocation(line: 1301, column: 19, scope: !5913)
!5933 = !DILocation(line: 1302, column: 3, scope: !5913)
!5934 = !DILocation(line: 1304, column: 4, scope: !5913)
!5935 = !DILocation(line: 1304, column: 17, scope: !5913)
!5936 = !DILocation(line: 1305, column: 3, scope: !5913)
!5937 = !DILocation(line: 1307, column: 4, scope: !5913)
!5938 = !DILocation(line: 1307, column: 20, scope: !5913)
!5939 = !DILocation(line: 1308, column: 3, scope: !5913)
!5940 = !DILocation(line: 1316, column: 1, scope: !5900)
!5941 = distinct !DISubprogram(name: "isupper", scope: !5942, file: !5942, line: 16, type: !410, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5943)
!5942 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5943 = !{!5944}
!5944 = !DILocalVariable(name: "a", arg: 1, scope: !5941, file: !5942, line: 16, type: !125)
!5945 = !DILocation(line: 0, scope: !5941)
!5946 = !DILocation(line: 18, column: 29, scope: !5941)
!5947 = !DILocation(line: 18, column: 45, scope: !5941)
!5948 = !DILocation(line: 18, column: 2, scope: !5941)
!5949 = distinct !DISubprogram(name: "conversion_radix", scope: !2691, file: !2691, line: 761, type: !5950, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5952)
!5950 = !DISubroutineType(types: !5951)
!5951 = !{!272, !142}
!5952 = !{!5953}
!5953 = !DILocalVariable(name: "specifier", arg: 1, scope: !5949, file: !2691, line: 761, type: !142)
!5954 = !DILocation(line: 0, scope: !5949)
!5955 = !DILocation(line: 763, column: 2, scope: !5949)
!5956 = !DILocation(line: 770, column: 3, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5949, file: !2691, line: 763, column: 21)
!5958 = !DILocation(line: 774, column: 3, scope: !5957)
!5959 = !DILocation(line: 0, scope: !5957)
!5960 = !DILocation(line: 776, column: 1, scope: !5949)
!5961 = distinct !DISubprogram(name: "extract_flags", scope: !2691, file: !2691, line: 339, type: !5803, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5962)
!5962 = !{!5963, !5964, !5965}
!5963 = !DILocalVariable(name: "conv", arg: 1, scope: !5961, file: !2691, line: 339, type: !5459)
!5964 = !DILocalVariable(name: "sp", arg: 2, scope: !5961, file: !2691, line: 340, type: !140)
!5965 = !DILocalVariable(name: "loop", scope: !5961, file: !2691, line: 342, type: !153)
!5966 = !DILocation(line: 0, scope: !5961)
!5967 = !DILocation(line: 344, column: 2, scope: !5961)
!5968 = !DILocation(line: 345, column: 11, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5961, file: !2691, line: 344, column: 5)
!5970 = !DILocation(line: 345, column: 3, scope: !5969)
!5971 = !DILocation(line: 351, column: 4, scope: !5972)
!5972 = distinct !DILexicalBlock(scope: !5969, file: !2691, line: 345, column: 16)
!5973 = !DILocation(line: 354, column: 4, scope: !5972)
!5974 = !DILocation(line: 357, column: 4, scope: !5972)
!5975 = !DILocation(line: 360, column: 4, scope: !5972)
!5976 = !DILocation(line: 0, scope: !5972)
!5977 = !DILocation(line: 370, column: 12, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5961, file: !2691, line: 370, column: 6)
!5979 = !DILocation(line: 370, column: 22, scope: !5978)
!5980 = !DILocation(line: 371, column: 19, scope: !5981)
!5981 = distinct !DILexicalBlock(scope: !5978, file: !2691, line: 370, column: 42)
!5982 = !DILocation(line: 372, column: 2, scope: !5981)
!5983 = !DILocation(line: 376, column: 2, scope: !5961)
!5984 = distinct !DISubprogram(name: "extract_width", scope: !2691, file: !2691, line: 388, type: !5803, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !5985)
!5985 = !{!5986, !5987, !5988, !5989}
!5986 = !DILocalVariable(name: "conv", arg: 1, scope: !5984, file: !2691, line: 388, type: !5459)
!5987 = !DILocalVariable(name: "sp", arg: 2, scope: !5984, file: !2691, line: 389, type: !140)
!5988 = !DILocalVariable(name: "wp", scope: !5984, file: !2691, line: 398, type: !140)
!5989 = !DILocalVariable(name: "width", scope: !5984, file: !2691, line: 399, type: !272)
!5990 = !DILocation(line: 0, scope: !5984)
!5991 = !DILocation(line: 391, column: 8, scope: !5984)
!5992 = !DILocation(line: 391, column: 22, scope: !5984)
!5993 = !DILocation(line: 393, column: 6, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5984, file: !2691, line: 393, column: 6)
!5995 = !DILocation(line: 393, column: 10, scope: !5994)
!5996 = !DILocation(line: 393, column: 6, scope: !5984)
!5997 = !DILocation(line: 394, column: 20, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5994, file: !2691, line: 393, column: 18)
!5999 = !DILocation(line: 395, column: 10, scope: !5998)
!6000 = !DILocation(line: 395, column: 3, scope: !5998)
!6001 = !DILocation(line: 399, column: 17, scope: !5984)
!6002 = !DILocation(line: 401, column: 6, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5984, file: !2691, line: 401, column: 6)
!6004 = !DILocation(line: 401, column: 9, scope: !6003)
!6005 = !DILocation(line: 401, column: 6, scope: !5984)
!6006 = !DILocation(line: 402, column: 23, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6003, file: !2691, line: 401, column: 16)
!6008 = !DILocation(line: 403, column: 9, scope: !6007)
!6009 = !DILocation(line: 403, column: 21, scope: !6007)
!6010 = !DILocation(line: 405, column: 11, scope: !6007)
!6011 = !DILocation(line: 404, column: 21, scope: !6007)
!6012 = !DILocation(line: 406, column: 2, scope: !6007)
!6013 = !DILocation(line: 409, column: 1, scope: !5984)
!6014 = distinct !DISubprogram(name: "extract_prec", scope: !2691, file: !2691, line: 420, type: !5803, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6015)
!6015 = !{!6016, !6017, !6018}
!6016 = !DILocalVariable(name: "conv", arg: 1, scope: !6014, file: !2691, line: 420, type: !5459)
!6017 = !DILocalVariable(name: "sp", arg: 2, scope: !6014, file: !2691, line: 421, type: !140)
!6018 = !DILocalVariable(name: "prec", scope: !6014, file: !2691, line: 435, type: !272)
!6019 = !DILocation(line: 0, scope: !6014)
!6020 = !DILocation(line: 423, column: 24, scope: !6014)
!6021 = !DILocation(line: 423, column: 28, scope: !6014)
!6022 = !DILocation(line: 423, column: 8, scope: !6014)
!6023 = !DILocation(line: 423, column: 21, scope: !6014)
!6024 = !DILocation(line: 425, column: 6, scope: !6014)
!6025 = !DILocation(line: 428, column: 2, scope: !6014)
!6026 = !DILocation(line: 430, column: 6, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6014, file: !2691, line: 430, column: 6)
!6028 = !DILocation(line: 430, column: 10, scope: !6027)
!6029 = !DILocation(line: 430, column: 6, scope: !6014)
!6030 = !DILocation(line: 431, column: 19, scope: !6031)
!6031 = distinct !DILexicalBlock(scope: !6027, file: !2691, line: 430, column: 18)
!6032 = !DILocation(line: 432, column: 10, scope: !6031)
!6033 = !DILocation(line: 432, column: 3, scope: !6031)
!6034 = !DILocation(line: 435, column: 16, scope: !6014)
!6035 = !DILocation(line: 437, column: 8, scope: !6014)
!6036 = !DILocation(line: 437, column: 19, scope: !6014)
!6037 = !DILocation(line: 439, column: 10, scope: !6014)
!6038 = !DILocation(line: 438, column: 20, scope: !6014)
!6039 = !DILocation(line: 441, column: 9, scope: !6014)
!6040 = !DILocation(line: 442, column: 1, scope: !6014)
!6041 = distinct !DISubprogram(name: "extract_length", scope: !2691, file: !2691, line: 453, type: !5803, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6042)
!6042 = !{!6043, !6044}
!6043 = !DILocalVariable(name: "conv", arg: 1, scope: !6041, file: !2691, line: 453, type: !5459)
!6044 = !DILocalVariable(name: "sp", arg: 2, scope: !6041, file: !2691, line: 454, type: !140)
!6045 = !DILocation(line: 0, scope: !6041)
!6046 = !DILocation(line: 456, column: 10, scope: !6041)
!6047 = !DILocation(line: 456, column: 2, scope: !6041)
!6048 = !DILocation(line: 458, column: 8, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6050, file: !2691, line: 458, column: 7)
!6050 = distinct !DILexicalBlock(scope: !6041, file: !2691, line: 456, column: 15)
!6051 = !DILocation(line: 458, column: 7, scope: !6049)
!6052 = !DILocation(line: 458, column: 13, scope: !6049)
!6053 = !DILocation(line: 0, scope: !6049)
!6054 = !DILocation(line: 458, column: 7, scope: !6050)
!6055 = !DILocation(line: 459, column: 21, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6049, file: !2691, line: 458, column: 21)
!6057 = !DILocation(line: 460, column: 4, scope: !6056)
!6058 = !DILocation(line: 461, column: 3, scope: !6056)
!6059 = !DILocation(line: 462, column: 21, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6049, file: !2691, line: 461, column: 10)
!6061 = !DILocation(line: 466, column: 8, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6050, file: !2691, line: 466, column: 7)
!6063 = !DILocation(line: 466, column: 7, scope: !6062)
!6064 = !DILocation(line: 466, column: 13, scope: !6062)
!6065 = !DILocation(line: 0, scope: !6062)
!6066 = !DILocation(line: 466, column: 7, scope: !6050)
!6067 = !DILocation(line: 467, column: 21, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6062, file: !2691, line: 466, column: 21)
!6069 = !DILocation(line: 468, column: 4, scope: !6068)
!6070 = !DILocation(line: 469, column: 3, scope: !6068)
!6071 = !DILocation(line: 470, column: 21, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6062, file: !2691, line: 469, column: 10)
!6073 = !DILocation(line: 474, column: 9, scope: !6050)
!6074 = !DILocation(line: 474, column: 20, scope: !6050)
!6075 = !DILocation(line: 475, column: 3, scope: !6050)
!6076 = !DILocation(line: 476, column: 3, scope: !6050)
!6077 = !DILocation(line: 478, column: 9, scope: !6050)
!6078 = !DILocation(line: 478, column: 20, scope: !6050)
!6079 = !DILocation(line: 479, column: 3, scope: !6050)
!6080 = !DILocation(line: 480, column: 3, scope: !6050)
!6081 = !DILocation(line: 482, column: 9, scope: !6050)
!6082 = !DILocation(line: 482, column: 20, scope: !6050)
!6083 = !DILocation(line: 483, column: 3, scope: !6050)
!6084 = !DILocation(line: 484, column: 3, scope: !6050)
!6085 = !DILocation(line: 486, column: 9, scope: !6050)
!6086 = !DILocation(line: 486, column: 20, scope: !6050)
!6087 = !DILocation(line: 487, column: 3, scope: !6050)
!6088 = !DILocation(line: 492, column: 21, scope: !6050)
!6089 = !DILocation(line: 493, column: 3, scope: !6050)
!6090 = !DILocation(line: 495, column: 9, scope: !6050)
!6091 = !DILocation(line: 495, column: 20, scope: !6050)
!6092 = !DILocation(line: 496, column: 3, scope: !6050)
!6093 = !DILocation(line: 498, column: 2, scope: !6041)
!6094 = distinct !DISubprogram(name: "extract_specifier", scope: !2691, file: !2691, line: 513, type: !5803, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6095)
!6095 = !{!6096, !6097, !6098, !6099}
!6096 = !DILocalVariable(name: "conv", arg: 1, scope: !6094, file: !2691, line: 513, type: !5459)
!6097 = !DILocalVariable(name: "sp", arg: 2, scope: !6094, file: !2691, line: 514, type: !140)
!6098 = !DILocalVariable(name: "unsupported", scope: !6094, file: !2691, line: 516, type: !153)
!6099 = !DILabel(scope: !6100, name: "int_conv", file: !2691, line: 526)
!6100 = distinct !DILexicalBlock(scope: !6094, file: !2691, line: 520, column: 27)
!6101 = !DILocation(line: 0, scope: !6094)
!6102 = !DILocation(line: 518, column: 20, scope: !6094)
!6103 = !DILocation(line: 518, column: 8, scope: !6094)
!6104 = !DILocation(line: 518, column: 18, scope: !6094)
!6105 = !DILocation(line: 520, column: 2, scope: !6094)
!6106 = !DILocation(line: 525, column: 3, scope: !6100)
!6107 = !DILocation(line: 0, scope: !6100)
!6108 = !DILocation(line: 526, column: 1, scope: !6100)
!6109 = !DILocation(line: 528, column: 24, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6100, file: !2691, line: 528, column: 7)
!6111 = !DILocation(line: 528, column: 7, scope: !6100)
!6112 = !DILocation(line: 535, column: 23, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6100, file: !2691, line: 535, column: 7)
!6114 = !DILocation(line: 535, column: 7, scope: !6100)
!6115 = !DILocation(line: 536, column: 36, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6113, file: !2691, line: 535, column: 31)
!6117 = !DILocation(line: 537, column: 3, scope: !6116)
!6118 = !DILocation(line: 570, column: 9, scope: !6100)
!6119 = !DILocation(line: 570, column: 23, scope: !6100)
!6120 = !DILocation(line: 575, column: 4, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6122, file: !2691, line: 573, column: 48)
!6122 = distinct !DILexicalBlock(scope: !6100, file: !2691, line: 573, column: 7)
!6123 = !DILocation(line: 603, column: 9, scope: !6100)
!6124 = !DILocation(line: 603, column: 23, scope: !6100)
!6125 = !DILocation(line: 605, column: 24, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6100, file: !2691, line: 605, column: 7)
!6127 = !DILocation(line: 605, column: 7, scope: !6100)
!6128 = !DILocation(line: 612, column: 9, scope: !6100)
!6129 = !DILocation(line: 612, column: 23, scope: !6100)
!6130 = !DILocation(line: 619, column: 24, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6100, file: !2691, line: 619, column: 7)
!6132 = !DILocation(line: 619, column: 7, scope: !6100)
!6133 = !DILocation(line: 625, column: 9, scope: !6100)
!6134 = !DILocation(line: 625, column: 17, scope: !6100)
!6135 = !DILocation(line: 626, column: 3, scope: !6100)
!6136 = !DILocation(line: 629, column: 20, scope: !6094)
!6137 = !DILocation(line: 629, column: 8, scope: !6094)
!6138 = !DILocation(line: 518, column: 23, scope: !6094)
!6139 = !DILocation(line: 631, column: 2, scope: !6094)
!6140 = distinct !DISubprogram(name: "extract_decimal", scope: !2691, file: !2691, line: 318, type: !6141, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6143)
!6141 = !DISubroutineType(types: !6142)
!6142 = !{!272, !386}
!6143 = !{!6144, !6145, !6146}
!6144 = !DILocalVariable(name: "str", arg: 1, scope: !6140, file: !2691, line: 318, type: !386)
!6145 = !DILocalVariable(name: "sp", scope: !6140, file: !2691, line: 320, type: !140)
!6146 = !DILocalVariable(name: "val", scope: !6140, file: !2691, line: 321, type: !272)
!6147 = !DILocation(line: 0, scope: !6140)
!6148 = !DILocation(line: 320, column: 19, scope: !6140)
!6149 = !DILocation(line: 323, column: 37, scope: !6140)
!6150 = !DILocation(line: 323, column: 17, scope: !6140)
!6151 = !DILocation(line: 323, column: 9, scope: !6140)
!6152 = !DILocation(line: 323, column: 2, scope: !6140)
!6153 = !DILocation(line: 324, column: 13, scope: !6154)
!6154 = distinct !DILexicalBlock(scope: !6140, file: !2691, line: 323, column: 43)
!6155 = !DILocation(line: 324, column: 24, scope: !6154)
!6156 = !DILocation(line: 324, column: 19, scope: !6154)
!6157 = !DILocation(line: 324, column: 27, scope: !6154)
!6158 = distinct !{!6158, !6152, !6159}
!6159 = !DILocation(line: 325, column: 2, scope: !6140)
!6160 = !DILocation(line: 326, column: 7, scope: !6140)
!6161 = !DILocation(line: 327, column: 2, scope: !6140)
!6162 = distinct !DISubprogram(name: "isdigit", scope: !5942, file: !5942, line: 43, type: !410, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2687, retainedNodes: !6163)
!6163 = !{!6164}
!6164 = !DILocalVariable(name: "a", arg: 1, scope: !6162, file: !5942, line: 43, type: !125)
!6165 = !DILocation(line: 0, scope: !6162)
!6166 = !DILocation(line: 45, column: 29, scope: !6162)
!6167 = !DILocation(line: 45, column: 45, scope: !6162)
!6168 = !DILocation(line: 45, column: 2, scope: !6162)
!6169 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !6170, file: !6170, line: 9, type: !3297, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2721, retainedNodes: !639)
!6170 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!6171 = !DILocation(line: 11, column: 1, scope: !6169)
!6172 = !{i64 2147566122, i64 2147566165, i64 2147566205}
!6173 = !DILocation(line: 12, column: 1, scope: !6169)
!6174 = !{i64 2147570349, i64 2147570392, i64 2147570432}
!6175 = !DILocation(line: 13, column: 1, scope: !6169)
!6176 = !{i64 2147570558, i64 2147570601, i64 2147570641}
!6177 = !DILocation(line: 14, column: 1, scope: !6169)
!6178 = !{i64 2147570727, i64 2147570770, i64 2147570810}
!6179 = !DILocation(line: 15, column: 1, scope: !6169)
!6180 = !{i64 2147570890, i64 2147570933, i64 2147570973}
!6181 = !DILocation(line: 16, column: 1, scope: !6169)
!6182 = !{i64 2147571074, i64 2147571117, i64 2147571157}
!6183 = !DILocation(line: 17, column: 1, scope: !6169)
!6184 = !{i64 2147571253, i64 2147571296, i64 2147571336}
!6185 = !DILocation(line: 18, column: 1, scope: !6169)
!6186 = !{i64 2147571495, i64 2147571538, i64 2147571578}
!6187 = !DILocation(line: 19, column: 1, scope: !6169)
!6188 = !{i64 2147571730, i64 2147571773, i64 2147571813}
!6189 = !DILocation(line: 20, column: 1, scope: !6169)
!6190 = !{i64 2147571917, i64 2147571960, i64 2147572000}
!6191 = !DILocation(line: 21, column: 1, scope: !6169)
!6192 = !{i64 2147572133, i64 2147572176, i64 2147572216}
!6193 = !DILocation(line: 22, column: 1, scope: !6169)
!6194 = !{i64 2147572336, i64 2147572379, i64 2147572419}
!6195 = !DILocation(line: 23, column: 1, scope: !6169)
!6196 = !{i64 2147572539, i64 2147572582, i64 2147572622}
!6197 = !DILocation(line: 24, column: 1, scope: !6169)
!6198 = !{i64 2147572714, i64 2147572757, i64 2147572797}
!6199 = !DILocation(line: 25, column: 1, scope: !6169)
!6200 = !{i64 2147572922, i64 2147572965, i64 2147573005}
!6201 = !DILocation(line: 26, column: 1, scope: !6169)
!6202 = !{i64 2147573126, i64 2147573169, i64 2147573209}
!6203 = !DILocation(line: 27, column: 1, scope: !6169)
!6204 = !{i64 2147573319, i64 2147573362, i64 2147573402}
!6205 = !DILocation(line: 28, column: 1, scope: !6169)
!6206 = !{i64 2147573521, i64 2147573564, i64 2147573604}
!6207 = !DILocation(line: 29, column: 1, scope: !6169)
!6208 = !{i64 2147573720, i64 2147573763, i64 2147573803}
!6209 = !DILocation(line: 30, column: 1, scope: !6169)
!6210 = !{i64 2147573947, i64 2147573990, i64 2147574030}
!6211 = !DILocation(line: 31, column: 1, scope: !6169)
!6212 = !{i64 2147574149, i64 2147574192, i64 2147574232}
!6213 = !DILocation(line: 32, column: 1, scope: !6169)
!6214 = !{i64 2147574364, i64 2147574407, i64 2147574447}
!6215 = !DILocation(line: 33, column: 1, scope: !6169)
!6216 = !{i64 2147574545, i64 2147574588, i64 2147574628}
!6217 = !DILocation(line: 34, column: 1, scope: !6169)
!6218 = !{i64 2147574717, i64 2147574760, i64 2147574800}
!6219 = !DILocation(line: 35, column: 1, scope: !6169)
!6220 = !{i64 2147574919, i64 2147574962, i64 2147575002}
!6221 = !DILocation(line: 36, column: 1, scope: !6169)
!6222 = !{i64 2147575145, i64 2147575188, i64 2147575228}
!6223 = !DILocation(line: 37, column: 1, scope: !6169)
!6224 = !{i64 2147575344, i64 2147575387, i64 2147575427}
!6225 = !DILocation(line: 38, column: 1, scope: !6169)
!6226 = !{i64 2147575519, i64 2147575562, i64 2147575602}
!6227 = !DILocation(line: 39, column: 1, scope: !6169)
!6228 = !{i64 2147575772, i64 2147575815, i64 2147575855}
!6229 = !DILocation(line: 40, column: 1, scope: !6169)
!6230 = !{i64 2147576013, i64 2147576056, i64 2147576096}
!6231 = !DILocation(line: 41, column: 1, scope: !6169)
!6232 = !{i64 2147576248, i64 2147576291, i64 2147576331}
!6233 = !DILocation(line: 42, column: 1, scope: !6169)
!6234 = !{i64 2147576480, i64 2147576523, i64 2147576563}
!6235 = !DILocation(line: 43, column: 1, scope: !6169)
!6236 = !{i64 2147576706, i64 2147576749, i64 2147576789}
!6237 = !DILocation(line: 44, column: 1, scope: !6169)
!6238 = !{i64 2147576932, i64 2147576975, i64 2147577015}
!6239 = !DILocation(line: 45, column: 1, scope: !6169)
!6240 = !{i64 2147577158, i64 2147577201, i64 2147577241}
!6241 = !DILocation(line: 46, column: 1, scope: !6169)
!6242 = !{i64 2147577393, i64 2147577436, i64 2147577476}
!6243 = !DILocation(line: 47, column: 1, scope: !6169)
!6244 = !{i64 2147577619, i64 2147577662, i64 2147577702}
!6245 = !DILocation(line: 48, column: 1, scope: !6169)
!6246 = !{i64 2147577866, i64 2147577909, i64 2147577949}
!6247 = !DILocation(line: 49, column: 1, scope: !6169)
!6248 = !{i64 2147578095, i64 2147578138, i64 2147578178}
!6249 = !DILocation(line: 50, column: 1, scope: !6169)
!6250 = !{i64 2147578327, i64 2147578370, i64 2147578410}
!6251 = !DILocation(line: 51, column: 1, scope: !6169)
!6252 = !{i64 2147578571, i64 2147578614, i64 2147578654}
!6253 = !DILocation(line: 52, column: 1, scope: !6169)
!6254 = !{i64 2147578809, i64 2147578852, i64 2147578892}
!6255 = !DILocation(line: 53, column: 1, scope: !6169)
!6256 = !{i64 2147579083, i64 2147579126, i64 2147579166}
!6257 = !DILocation(line: 54, column: 1, scope: !6169)
!6258 = !{i64 2147583382, i64 2147583425, i64 2147583465}
!6259 = !DILocation(line: 55, column: 1, scope: !6169)
!6260 = !{i64 2147583635, i64 2147583678, i64 2147583718}
!6261 = !DILocation(line: 56, column: 1, scope: !6169)
!6262 = !{i64 2147583879, i64 2147583922, i64 2147583962}
!6263 = !DILocation(line: 57, column: 1, scope: !6169)
!6264 = !{i64 2147584114, i64 2147584157, i64 2147584197}
!6265 = !DILocation(line: 58, column: 1, scope: !6169)
!6266 = !{i64 2147584364, i64 2147584407, i64 2147584447}
!6267 = !DILocation(line: 59, column: 1, scope: !6169)
!6268 = !{i64 2147584611, i64 2147584654, i64 2147584694}
!6269 = !DILocation(line: 60, column: 1, scope: !6169)
!6270 = !{i64 2147584846, i64 2147584889, i64 2147584929}
!6271 = !DILocation(line: 61, column: 1, scope: !6169)
!6272 = !{i64 2147585081, i64 2147585124, i64 2147585164}
!6273 = !DILocation(line: 62, column: 1, scope: !6169)
!6274 = !{i64 2147585316, i64 2147585359, i64 2147585399}
!6275 = !DILocation(line: 63, column: 1, scope: !6169)
!6276 = !{i64 2147585554, i64 2147585597, i64 2147585637}
!6277 = !DILocation(line: 64, column: 1, scope: !6169)
!6278 = !{i64 2147585795, i64 2147585838, i64 2147585878}
!6279 = !DILocation(line: 65, column: 1, scope: !6169)
!6280 = !{i64 2147586075, i64 2147586118, i64 2147586158}
!6281 = !DILocation(line: 66, column: 1, scope: !6169)
!6282 = !{i64 2147586334, i64 2147586377, i64 2147586417}
!6283 = !DILocation(line: 67, column: 1, scope: !6169)
!6284 = !{i64 2147586563, i64 2147586606, i64 2147586646}
!6285 = !DILocation(line: 68, column: 1, scope: !6169)
!6286 = !{i64 2147586789, i64 2147586832, i64 2147586872}
!6287 = !DILocation(line: 69, column: 1, scope: !6169)
!6288 = !{i64 2147587027, i64 2147587070, i64 2147587110}
!6289 = !DILocation(line: 70, column: 1, scope: !6169)
!6290 = !{i64 2147587256, i64 2147587299, i64 2147587339}
!6291 = !DILocation(line: 71, column: 1, scope: !6169)
!6292 = !{i64 2147587464, i64 2147587507, i64 2147587547}
!6293 = !DILocation(line: 72, column: 1, scope: !6169)
!6294 = !{i64 2147587675, i64 2147587718, i64 2147587758}
!6295 = !DILocation(line: 73, column: 1, scope: !6169)
!6296 = !{i64 2147587910, i64 2147587953, i64 2147587993}
!6297 = !DILocation(line: 74, column: 1, scope: !6169)
!6298 = !{i64 2147588139, i64 2147588182, i64 2147588222}
!6299 = !DILocation(line: 75, column: 1, scope: !6169)
!6300 = !{i64 2147588356, i64 2147588399, i64 2147588439}
!6301 = !DILocation(line: 76, column: 1, scope: !6169)
!6302 = !{i64 2147588585, i64 2147588628, i64 2147588668}
!6303 = !DILocation(line: 77, column: 1, scope: !6169)
!6304 = !{i64 2147588823, i64 2147588866, i64 2147588906}
!6305 = !DILocation(line: 78, column: 1, scope: !6169)
!6306 = !{i64 2147589055, i64 2147589098, i64 2147589138}
!6307 = !DILocation(line: 79, column: 1, scope: !6169)
!6308 = !{i64 2147589281, i64 2147589324, i64 2147589364}
!6309 = !DILocation(line: 80, column: 1, scope: !6169)
!6310 = !{i64 2147589498, i64 2147589541, i64 2147589581}
!6311 = !DILocation(line: 81, column: 1, scope: !6169)
!6312 = !{i64 2147589730, i64 2147589773, i64 2147589813}
!6313 = !DILocation(line: 82, column: 1, scope: !6169)
!6314 = !{i64 2147589956, i64 2147589999, i64 2147590039}
!6315 = !DILocation(line: 83, column: 1, scope: !6169)
!6316 = !{i64 2147590170, i64 2147590213, i64 2147590253}
!6317 = !DILocation(line: 84, column: 1, scope: !6169)
!6318 = !{i64 2147590390, i64 2147590433, i64 2147590473}
!6319 = !DILocation(line: 85, column: 1, scope: !6169)
!6320 = !{i64 2147590622, i64 2147590665, i64 2147590705}
!6321 = !DILocation(line: 86, column: 1, scope: !6169)
!6322 = !{i64 2147590830, i64 2147590873, i64 2147590913}
!6323 = !DILocation(line: 87, column: 1, scope: !6169)
!6324 = !{i64 2147591035, i64 2147591078, i64 2147591118}
!6325 = !DILocation(line: 88, column: 1, scope: !6169)
!6326 = !{i64 2147591252, i64 2147591295, i64 2147591335}
!6327 = !DILocation(line: 89, column: 1, scope: !6169)
!6328 = !{i64 2147595527, i64 2147595570, i64 2147595610}
!6329 = !DILocation(line: 90, column: 1, scope: !6169)
!6330 = !{i64 2147595753, i64 2147595796, i64 2147595836}
!6331 = !DILocation(line: 91, column: 1, scope: !6169)
!6332 = !{i64 2147595973, i64 2147596016, i64 2147596056}
!6333 = !DILocation(line: 92, column: 1, scope: !6169)
!6334 = !{i64 2147596178, i64 2147596221, i64 2147596261}
!6335 = !DILocation(line: 93, column: 1, scope: !6169)
!6336 = !{i64 2147596410, i64 2147596453, i64 2147596493}
!6337 = !DILocation(line: 94, column: 1, scope: !6169)
!6338 = !{i64 2147596645, i64 2147596688, i64 2147596728}
!6339 = !DILocation(line: 95, column: 1, scope: !6169)
!6340 = !{i64 2147596895, i64 2147596938, i64 2147596978}
!6341 = !DILocation(line: 96, column: 1, scope: !6169)
!6342 = !{i64 2147597145, i64 2147597188, i64 2147597228}
!6343 = !DILocation(line: 97, column: 1, scope: !6169)
!6344 = !{i64 2147597383, i64 2147597426, i64 2147597466}
!6345 = !DILocation(line: 98, column: 1, scope: !6169)
!6346 = !{i64 2147597594, i64 2147597637, i64 2147597677}
!6347 = !DILocation(line: 99, column: 1, scope: !6169)
!6348 = !{i64 2147597811, i64 2147597854, i64 2147597894}
!6349 = !DILocation(line: 100, column: 1, scope: !6169)
!6350 = !{i64 2147598007, i64 2147598050, i64 2147598090}
!6351 = !DILocation(line: 101, column: 1, scope: !6169)
!6352 = !{i64 2147598209, i64 2147598252, i64 2147598292}
!6353 = !DILocation(line: 102, column: 1, scope: !6169)
!6354 = !{i64 2147598402, i64 2147598445, i64 2147598485}
!6355 = !DILocation(line: 103, column: 1, scope: !6169)
!6356 = !{i64 2147598610, i64 2147598653, i64 2147598693}
!6357 = !DILocation(line: 104, column: 1, scope: !6169)
!6358 = !{i64 2147598803, i64 2147598846, i64 2147598886}
!6359 = !DILocation(line: 105, column: 1, scope: !6169)
!6360 = !{i64 2147599008, i64 2147599051, i64 2147599091}
!6361 = !DILocation(line: 106, column: 1, scope: !6169)
!6362 = !{i64 2147599213, i64 2147599256, i64 2147599296}
!6363 = !DILocation(line: 107, column: 1, scope: !6169)
!6364 = !{i64 2147599418, i64 2147599461, i64 2147599501}
!6365 = !DILocation(line: 108, column: 1, scope: !6169)
!6366 = !{i64 2147599626, i64 2147599669, i64 2147599709}
!6367 = !DILocation(line: 109, column: 1, scope: !6169)
!6368 = !{i64 2147599822, i64 2147599865, i64 2147599905}
!6369 = !DILocation(line: 110, column: 1, scope: !6169)
!6370 = !{i64 2147600030, i64 2147600073, i64 2147600113}
!6371 = !DILocation(line: 111, column: 1, scope: !6169)
!6372 = !{i64 2147600241, i64 2147600284, i64 2147600324}
!6373 = !DILocation(line: 112, column: 1, scope: !6169)
!6374 = !{i64 2147600440, i64 2147600483, i64 2147600523}
!6375 = !DILocation(line: 113, column: 1, scope: !6169)
!6376 = !{i64 2147600615, i64 2147600658, i64 2147600698}
!6377 = !DILocation(line: 114, column: 1, scope: !6169)
!6378 = !{i64 2147600799, i64 2147600842, i64 2147600882}
!6379 = !DILocation(line: 115, column: 1, scope: !6169)
!6380 = !{i64 2147601001, i64 2147601044, i64 2147601084}
!6381 = !DILocation(line: 116, column: 1, scope: !6169)
!6382 = !{i64 2147601200, i64 2147601243, i64 2147601283}
!6383 = !DILocation(line: 117, column: 1, scope: !6169)
!6384 = !{i64 2147601405, i64 2147601448, i64 2147601488}
!6385 = !DILocation(line: 118, column: 1, scope: !6169)
!6386 = !{i64 2147601598, i64 2147601641, i64 2147601681}
!6387 = !DILocation(line: 119, column: 1, scope: !6169)
!6388 = !{i64 2147601764, i64 2147601807, i64 2147601847}
!6389 = !DILocation(line: 120, column: 1, scope: !6169)
!6390 = !{i64 2147601948, i64 2147601991, i64 2147602031}
!6391 = !DILocation(line: 121, column: 1, scope: !6169)
!6392 = !{i64 2147602138, i64 2147602181, i64 2147602221}
!6393 = !DILocation(line: 122, column: 1, scope: !6169)
!6394 = !{i64 2147602322, i64 2147602365, i64 2147602405}
!6395 = !DILocation(line: 123, column: 1, scope: !6169)
!6396 = !{i64 2147602536, i64 2147602579, i64 2147602619}
!6397 = !DILocation(line: 124, column: 1, scope: !6169)
!6398 = !{i64 2147602747, i64 2147602790, i64 2147602830}
!6399 = !DILocation(line: 125, column: 1, scope: !6169)
!6400 = !{i64 2147602970, i64 2147603013, i64 2147603053}
!6401 = !DILocation(line: 126, column: 1, scope: !6169)
!6402 = !{i64 2147603154, i64 2147603197, i64 2147603237}
!6403 = !DILocation(line: 127, column: 1, scope: !6169)
!6404 = !{i64 2147603368, i64 2147603411, i64 2147603451}
!6405 = !DILocation(line: 128, column: 1, scope: !6169)
!6406 = !{i64 2147603534, i64 2147603577, i64 2147603617}
!6407 = !DILocation(line: 129, column: 1, scope: !6169)
!6408 = !{i64 2147603715, i64 2147603758, i64 2147603798}
!6409 = !DILocation(line: 130, column: 1, scope: !6169)
!6410 = !{i64 2147603908, i64 2147603951, i64 2147603991}
!6411 = !DILocation(line: 131, column: 1, scope: !6169)
!6412 = !{i64 2147604134, i64 2147604177, i64 2147604217}
!6413 = !DILocation(line: 132, column: 1, scope: !6169)
!6414 = !{i64 2147604348, i64 2147604391, i64 2147604431}
!6415 = !DILocation(line: 133, column: 1, scope: !6169)
!6416 = !{i64 2147604574, i64 2147604617, i64 2147604657}
!6417 = !DILocation(line: 134, column: 1, scope: !6169)
!6418 = !{i64 2147608852, i64 2147608895, i64 2147608935}
!6419 = !DILocation(line: 135, column: 1, scope: !6169)
!6420 = !{i64 2147609129, i64 2147609172, i64 2147609212}
!6421 = !DILocation(line: 136, column: 1, scope: !6169)
!6422 = !{i64 2147609355, i64 2147609398, i64 2147609438}
!6423 = !DILocation(line: 137, column: 1, scope: !6169)
!6424 = !{i64 2147609563, i64 2147609606, i64 2147609646}
!6425 = !DILocation(line: 138, column: 1, scope: !6169)
!6426 = !{i64 2147609759, i64 2147609802, i64 2147609842}
!6427 = !DILocation(line: 139, column: 1, scope: !6169)
!6428 = !{i64 2147610024, i64 2147610067, i64 2147610107}
!6429 = !DILocation(line: 140, column: 1, scope: !6169)
!6430 = !{i64 2147610238, i64 2147610281, i64 2147610321}
!6431 = !DILocation(line: 141, column: 1, scope: !6169)
!6432 = !{i64 2147610413, i64 2147610456, i64 2147610496}
!6433 = !DILocation(line: 142, column: 1, scope: !6169)
!6434 = !{i64 2147610667, i64 2147610710, i64 2147610750}
!6435 = !DILocation(line: 143, column: 1, scope: !6169)
!6436 = !{i64 2147610866, i64 2147610909, i64 2147610949}
!6437 = !DILocation(line: 144, column: 1, scope: !6169)
!6438 = !{i64 2147611108, i64 2147611151, i64 2147611191}
!6439 = !DILocation(line: 145, column: 1, scope: !6169)
!6440 = !{i64 2147611271, i64 2147611314, i64 2147611354}
!6441 = !DILocation(line: 146, column: 1, scope: !6169)
!6442 = !{i64 2147611458, i64 2147611501, i64 2147611541}
!6443 = !DILocation(line: 147, column: 1, scope: !6169)
!6444 = !{i64 2147611666, i64 2147611709, i64 2147611749}
!6445 = !DILocation(line: 148, column: 1, scope: !6169)
!6446 = !{i64 2147611862, i64 2147611905, i64 2147611945}
!6447 = !DILocation(line: 149, column: 1, scope: !6169)
!6448 = !{i64 2147612055, i64 2147612098, i64 2147612138}
!6449 = !DILocation(line: 150, column: 1, scope: !6169)
!6450 = !{i64 2147612238, i64 2147612281, i64 2147612321}
!6451 = !DILocation(line: 151, column: 1, scope: !6169)
!6452 = !{i64 2147612452, i64 2147612495, i64 2147612535}
!6453 = !DILocation(line: 152, column: 1, scope: !6169)
!6454 = !{i64 2147612663, i64 2147612706, i64 2147612746}
!6455 = !DILocation(line: 153, column: 1, scope: !6169)
!6456 = !{i64 2147612883, i64 2147612926, i64 2147612966}
!6457 = !DILocation(line: 154, column: 1, scope: !6169)
!6458 = !{i64 2147613090, i64 2147613133, i64 2147613173}
!6459 = !DILocation(line: 155, column: 1, scope: !6169)
!6460 = !{i64 2147613363, i64 2147613406, i64 2147613446}
!6461 = !DILocation(line: 156, column: 1, scope: !6169)
!6462 = !{i64 2147613611, i64 2147613654, i64 2147613694}
!6463 = !DILocation(line: 157, column: 1, scope: !6169)
!6464 = !{i64 2147613810, i64 2147613853, i64 2147613893}
!6465 = !DILocation(line: 158, column: 1, scope: !6169)
!6466 = !{i64 2147614045, i64 2147614088, i64 2147614128}
!6467 = !DILocation(line: 159, column: 1, scope: !6169)
!6468 = !{i64 2147614295, i64 2147614338, i64 2147614378}
!6469 = !DILocation(line: 160, column: 1, scope: !6169)
!6470 = !{i64 2147614497, i64 2147614540, i64 2147614580}
!6471 = !DILocation(line: 161, column: 1, scope: !6169)
!6472 = !{i64 2147614720, i64 2147614763, i64 2147614803}
!6473 = !DILocation(line: 162, column: 1, scope: !6169)
!6474 = !{i64 2147614934, i64 2147614977, i64 2147615017}
!6475 = !DILocation(line: 163, column: 1, scope: !6169)
!6476 = !{i64 2147615178, i64 2147615221, i64 2147615261}
!6477 = !DILocation(line: 164, column: 1, scope: !6169)
!6478 = !{i64 2147615407, i64 2147615450, i64 2147615490}
!6479 = !DILocation(line: 165, column: 1, scope: !6169)
!6480 = !{i64 2147615636, i64 2147615679, i64 2147615719}
!6481 = !DILocation(line: 166, column: 1, scope: !6169)
!6482 = !{i64 2147615844, i64 2147615887, i64 2147615927}
!6483 = !DILocation(line: 167, column: 1, scope: !6169)
!6484 = !{i64 2147616082, i64 2147616125, i64 2147616165}
!6485 = !DILocation(line: 168, column: 1, scope: !6169)
!6486 = !{i64 2147616308, i64 2147616351, i64 2147616391}
!6487 = !DILocation(line: 169, column: 1, scope: !6169)
!6488 = !{i64 2147616567, i64 2147616610, i64 2147616650}
!6489 = !DILocation(line: 170, column: 1, scope: !6169)
!6490 = !{i64 2147616787, i64 2147616830, i64 2147616870}
!6491 = !DILocation(line: 171, column: 1, scope: !6169)
!6492 = !{i64 2147617019, i64 2147617062, i64 2147617102}
!6493 = !DILocation(line: 172, column: 1, scope: !6169)
!6494 = !{i64 2147621321, i64 2147621364, i64 2147621404}
!6495 = !DILocation(line: 173, column: 1, scope: !6169)
!6496 = !{i64 2147621562, i64 2147621605, i64 2147621645}
!6497 = !DILocation(line: 174, column: 1, scope: !6169)
!6498 = !{i64 2147621785, i64 2147621828, i64 2147621868}
!6499 = !DILocation(line: 175, column: 1, scope: !6169)
!6500 = !{i64 2147622002, i64 2147622045, i64 2147622085}
!6501 = !DILocation(line: 176, column: 1, scope: !6169)
!6502 = !{i64 2147622243, i64 2147622286, i64 2147622326}
!6503 = !DILocation(line: 177, column: 1, scope: !6169)
!6504 = !{i64 2147622430, i64 2147622473, i64 2147622513}
!6505 = !DILocation(line: 178, column: 1, scope: !6169)
!6506 = !{i64 2147622617, i64 2147622660, i64 2147622700}
!6507 = !DILocation(line: 179, column: 1, scope: !6169)
!6508 = !{i64 2147622780, i64 2147622823, i64 2147622863}
!6509 = !DILocation(line: 180, column: 1, scope: !6169)
!6510 = !{i64 2147622985, i64 2147623028, i64 2147623068}
!6511 = !DILocation(line: 181, column: 1, scope: !6169)
!6512 = !{i64 2147623178, i64 2147623221, i64 2147623261}
!6513 = !DILocation(line: 182, column: 1, scope: !6169)
!6514 = !{i64 2147623437, i64 2147623480, i64 2147623520}
!6515 = !DILocation(line: 183, column: 1, scope: !6169)
!6516 = !{i64 2147623660, i64 2147623703, i64 2147623743}
!6517 = !DILocation(line: 184, column: 1, scope: !6169)
!6518 = !{i64 2147623889, i64 2147623932, i64 2147623972}
!6519 = !DILocation(line: 185, column: 1, scope: !6169)
!6520 = !{i64 2147624103, i64 2147624146, i64 2147624186}
!6521 = !DILocation(line: 186, column: 1, scope: !6169)
!6522 = !{i64 2147624305, i64 2147624348, i64 2147624388}
!6523 = !DILocation(line: 187, column: 1, scope: !6169)
!6524 = !{i64 2147624501, i64 2147624544, i64 2147624584}
!6525 = !DILocation(line: 188, column: 1, scope: !6169)
!6526 = !{i64 2147624713, i64 2147624756, i64 2147624796}
!6527 = !DILocation(line: 189, column: 1, scope: !6169)
!6528 = !{i64 2147624934, i64 2147624977, i64 2147625017}
!6529 = !DILocation(line: 190, column: 1, scope: !6169)
!6530 = !{i64 2147625148, i64 2147625191, i64 2147625231}
!6531 = !DILocation(line: 191, column: 1, scope: !6169)
!6532 = !{i64 2147625338, i64 2147625381, i64 2147625421}
!6533 = !DILocation(line: 192, column: 1, scope: !6169)
!6534 = !{i64 2147625537, i64 2147625580, i64 2147625620}
!6535 = !DILocation(line: 193, column: 1, scope: !6169)
!6536 = !{i64 2147625742, i64 2147625785, i64 2147625825}
!6537 = !DILocation(line: 194, column: 1, scope: !6169)
!6538 = !{i64 2147625962, i64 2147626005, i64 2147626045}
!6539 = !DILocation(line: 195, column: 1, scope: !6169)
!6540 = !{i64 2147626163, i64 2147626206, i64 2147626246}
!6541 = !DILocation(line: 196, column: 1, scope: !6169)
!6542 = !{i64 2147626362, i64 2147626405, i64 2147626445}
!6543 = !DILocation(line: 197, column: 1, scope: !6169)
!6544 = !{i64 2147626567, i64 2147626610, i64 2147626650}
!6545 = !DILocation(line: 198, column: 1, scope: !6169)
!6546 = !{i64 2147626736, i64 2147626779, i64 2147626819}
!6547 = !DILocation(line: 199, column: 1, scope: !6169)
!6548 = !{i64 2147626920, i64 2147626963, i64 2147627003}
!6549 = !DILocation(line: 200, column: 1, scope: !6169)
!6550 = !{i64 2147627104, i64 2147627147, i64 2147627187}
!6551 = !DILocation(line: 201, column: 1, scope: !6169)
!6552 = !{i64 2147627291, i64 2147627334, i64 2147627374}
!6553 = !DILocation(line: 202, column: 1, scope: !6169)
!6554 = !{i64 2147627475, i64 2147627518, i64 2147627558}
!6555 = !DILocation(line: 203, column: 1, scope: !6169)
!6556 = !{i64 2147627713, i64 2147627756, i64 2147627796}
!6557 = !DILocation(line: 204, column: 1, scope: !6169)
!6558 = !{i64 2147627943, i64 2147627986, i64 2147628026}
!6559 = !DILocation(line: 205, column: 1, scope: !6169)
!6560 = !{i64 2147628172, i64 2147628215, i64 2147628255}
!6561 = !DILocation(line: 206, column: 1, scope: !6169)
!6562 = !{i64 2147628359, i64 2147628402, i64 2147628442}
!6563 = !DILocation(line: 207, column: 1, scope: !6169)
!6564 = !{i64 2147628555, i64 2147628598, i64 2147628638}
!6565 = !DILocation(line: 208, column: 1, scope: !6169)
!6566 = !{i64 2147628763, i64 2147628806, i64 2147628846}
!6567 = !DILocation(line: 209, column: 1, scope: !6169)
!6568 = !{i64 2147628975, i64 2147629018, i64 2147629058}
!6569 = !DILocation(line: 210, column: 1, scope: !6169)
!6570 = !{i64 2147629174, i64 2147629217, i64 2147629257}
!6571 = !DILocation(line: 211, column: 1, scope: !6169)
!6572 = !{i64 2147629412, i64 2147629455, i64 2147629495}
!6573 = !DILocation(line: 212, column: 1, scope: !6169)
!6574 = !{i64 2147629608, i64 2147629651, i64 2147629691}
!6575 = !DILocation(line: 213, column: 1, scope: !6169)
!6576 = !{i64 2147629810, i64 2147629853, i64 2147629893}
!6577 = !DILocation(line: 214, column: 1, scope: !6169)
!6578 = !{i64 2147630003, i64 2147630046, i64 2147630086}
!6579 = !DILocation(line: 215, column: 1, scope: !6169)
!6580 = !{i64 2147630237, i64 2147630280, i64 2147630320}
!6581 = !DILocation(line: 216, column: 1, scope: !6169)
!6582 = !{i64 2147630400, i64 2147630443, i64 2147630483}
!6583 = !DILocation(line: 217, column: 1, scope: !6169)
!6584 = !{i64 2147634700, i64 2147634743, i64 2147634783}
!6585 = !DILocation(line: 218, column: 1, scope: !6169)
!6586 = !{i64 2147634939, i64 2147634982, i64 2147635022}
!6587 = !DILocation(line: 219, column: 1, scope: !6169)
!6588 = !{i64 2147635175, i64 2147635218, i64 2147635258}
!6589 = !DILocation(line: 220, column: 1, scope: !6169)
!6590 = !{i64 2147635405, i64 2147635448, i64 2147635488}
!6591 = !DILocation(line: 221, column: 1, scope: !6169)
!6592 = !{i64 2147635592, i64 2147635635, i64 2147635675}
!6593 = !DILocation(line: 222, column: 1, scope: !6169)
!6594 = !{i64 2147635791, i64 2147635834, i64 2147635874}
!6595 = !DILocation(line: 223, column: 1, scope: !6169)
!6596 = !{i64 2147636062, i64 2147636105, i64 2147636145}
!6597 = !DILocation(line: 224, column: 1, scope: !6169)
!6598 = !{i64 2147636237, i64 2147636280, i64 2147636320}
!6599 = !DILocation(line: 225, column: 1, scope: !6169)
!6600 = !{i64 2147636471, i64 2147636514, i64 2147636554}
!6601 = !DILocation(line: 226, column: 1, scope: !6169)
!6602 = !{i64 2147636679, i64 2147636722, i64 2147636762}
!6603 = !DILocation(line: 227, column: 1, scope: !6169)
!6604 = !{i64 2147636897, i64 2147636940, i64 2147636980}
!6605 = !DILocation(line: 228, column: 1, scope: !6169)
!6606 = !{i64 2147637087, i64 2147637130, i64 2147637170}
!6607 = !DILocation(line: 229, column: 1, scope: !6169)
!6608 = !{i64 2147637319, i64 2147637362, i64 2147637402}
!6609 = !DILocation(line: 230, column: 1, scope: !6169)
!6610 = !{i64 2147637539, i64 2147637582, i64 2147637622}
!6611 = !DILocation(line: 231, column: 1, scope: !6169)
!6612 = !{i64 2147637735, i64 2147637778, i64 2147637818}
!6613 = !DILocation(line: 232, column: 1, scope: !6169)
!6614 = !{i64 2147637941, i64 2147637984, i64 2147638024}
!6615 = !DILocation(line: 233, column: 1, scope: !6169)
!6616 = !{i64 2147638146, i64 2147638189, i64 2147638229}
!6617 = !DILocation(line: 234, column: 1, scope: !6169)
!6618 = !{i64 2147638360, i64 2147638403, i64 2147638443}
!6619 = !DILocation(line: 235, column: 1, scope: !6169)
!6620 = !{i64 2147638586, i64 2147638629, i64 2147638669}
!6621 = !DILocation(line: 236, column: 1, scope: !6169)
!6622 = !{i64 2147638794, i64 2147638837, i64 2147638877}
!6623 = !DILocation(line: 237, column: 1, scope: !6169)
!6624 = !{i64 2147638990, i64 2147639033, i64 2147639073}
!6625 = !DILocation(line: 238, column: 1, scope: !6169)
!6626 = !{i64 2147639222, i64 2147639265, i64 2147639305}
!6627 = !DILocation(line: 239, column: 1, scope: !6169)
!6628 = !{i64 2147639406, i64 2147639449, i64 2147639489}
!6629 = !DILocation(line: 240, column: 1, scope: !6169)
!6630 = !{i64 2147639615, i64 2147639658, i64 2147639698}
!6631 = !DILocation(line: 241, column: 1, scope: !6169)
!6632 = !{i64 2147639823, i64 2147639866, i64 2147639906}
!6633 = !DILocation(line: 242, column: 1, scope: !6169)
!6634 = !{i64 2147640019, i64 2147640062, i64 2147640102}
!6635 = !DILocation(line: 243, column: 1, scope: !6169)
!6636 = !{i64 2147640203, i64 2147640246, i64 2147640286}
!6637 = !DILocation(line: 244, column: 1, scope: !6169)
!6638 = !{i64 2147640429, i64 2147640472, i64 2147640512}
!6639 = !DILocation(line: 245, column: 1, scope: !6169)
!6640 = !{i64 2147640655, i64 2147640698, i64 2147640738}
!6641 = !DILocation(line: 246, column: 1, scope: !6169)
!6642 = !{i64 2147640881, i64 2147640924, i64 2147640964}
!6643 = !DILocation(line: 247, column: 1, scope: !6169)
!6644 = !{i64 2147641107, i64 2147641150, i64 2147641190}
!6645 = !DILocation(line: 248, column: 1, scope: !6169)
!6646 = !{i64 2147641333, i64 2147641376, i64 2147641416}
!6647 = !DILocation(line: 249, column: 1, scope: !6169)
!6648 = !{i64 2147641565, i64 2147641608, i64 2147641648}
!6649 = !DILocation(line: 250, column: 1, scope: !6169)
!6650 = !{i64 2147641803, i64 2147641846, i64 2147641886}
!6651 = !DILocation(line: 251, column: 1, scope: !6169)
!6652 = !{i64 2147642023, i64 2147642066, i64 2147642106}
!6653 = !DILocation(line: 252, column: 1, scope: !6169)
!6654 = !{i64 2147642267, i64 2147642310, i64 2147642350}
!6655 = !DILocation(line: 253, column: 1, scope: !6169)
!6656 = !{i64 2147642508, i64 2147642551, i64 2147642591}
!6657 = !DILocation(line: 254, column: 1, scope: !6169)
!6658 = !{i64 2147642743, i64 2147642786, i64 2147642826}
!6659 = !DILocation(line: 255, column: 1, scope: !6169)
!6660 = !{i64 2147642975, i64 2147643018, i64 2147643058}
!6661 = !DILocation(line: 256, column: 1, scope: !6169)
!6662 = !{i64 2147643177, i64 2147643220, i64 2147643260}
!6663 = !DILocation(line: 257, column: 1, scope: !6169)
!6664 = !{i64 2147647488, i64 2147647531, i64 2147647571}
!6665 = !DILocation(line: 258, column: 1, scope: !6169)
!6666 = !{i64 2147647726, i64 2147647769, i64 2147647809}
!6667 = !DILocation(line: 259, column: 1, scope: !6169)
!6668 = !{i64 2147647934, i64 2147647977, i64 2147648017}
!6669 = !DILocation(line: 260, column: 1, scope: !6169)
!6670 = !{i64 2147648130, i64 2147648173, i64 2147648213}
!6671 = !DILocation(line: 261, column: 1, scope: !6169)
!6672 = !{i64 2147648314, i64 2147648357, i64 2147648397}
!6673 = !DILocation(line: 262, column: 1, scope: !6169)
!6674 = !{i64 2147648531, i64 2147648574, i64 2147648614}
!6675 = !DILocation(line: 263, column: 1, scope: !6169)
!6676 = !{i64 2147648736, i64 2147648779, i64 2147648819}
!6677 = !DILocation(line: 264, column: 1, scope: !6169)
!6678 = !{i64 2147648971, i64 2147649014, i64 2147649054}
!6679 = !DILocation(line: 265, column: 1, scope: !6169)
!6680 = !{i64 2147649194, i64 2147649237, i64 2147649277}
!6681 = !DILocation(line: 266, column: 1, scope: !6169)
!6682 = !{i64 2147649418, i64 2147649461, i64 2147649501}
!6683 = !DILocation(line: 267, column: 1, scope: !6169)
!6684 = !{i64 2147649656, i64 2147649699, i64 2147649739}
!6685 = !DILocation(line: 268, column: 1, scope: !6169)
!6686 = !{i64 2147649894, i64 2147649937, i64 2147649977}
!6687 = !DILocation(line: 269, column: 1, scope: !6169)
!6688 = !{i64 2147650066, i64 2147650109, i64 2147650149}
!6689 = !DILocation(line: 270, column: 1, scope: !6169)
!6690 = !{i64 2147650281, i64 2147650324, i64 2147650364}
!6691 = !DILocation(line: 271, column: 1, scope: !6169)
!6692 = !{i64 2147650495, i64 2147650538, i64 2147650578}
!6693 = !DILocation(line: 272, column: 1, scope: !6169)
!6694 = !{i64 2147650697, i64 2147650740, i64 2147650780}
!6695 = !DILocation(line: 273, column: 1, scope: !6169)
!6696 = !{i64 2147650914, i64 2147650957, i64 2147650997}
!6697 = !DILocation(line: 274, column: 1, scope: !6169)
!6698 = !{i64 2147651167, i64 2147651210, i64 2147651250}
!6699 = !DILocation(line: 275, column: 1, scope: !6169)
!6700 = !{i64 2147651411, i64 2147651454, i64 2147651494}
!6701 = !DILocation(line: 276, column: 1, scope: !6169)
!6702 = !{i64 2147651628, i64 2147651671, i64 2147651711}
!6703 = !DILocation(line: 277, column: 1, scope: !6169)
!6704 = !{i64 2147651833, i64 2147651876, i64 2147651916}
!6705 = !DILocation(line: 278, column: 1, scope: !6169)
!6706 = !{i64 2147652026, i64 2147652069, i64 2147652109}
!6707 = !DILocation(line: 279, column: 1, scope: !6169)
!6708 = !{i64 2147652279, i64 2147652322, i64 2147652362}
!6709 = !DILocation(line: 280, column: 1, scope: !6169)
!6710 = !{i64 2147652487, i64 2147652530, i64 2147652570}
!6711 = !DILocation(line: 281, column: 1, scope: !6169)
!6712 = !{i64 2147652683, i64 2147652726, i64 2147652766}
!6713 = !DILocation(line: 282, column: 1, scope: !6169)
!6714 = !{i64 2147652897, i64 2147652940, i64 2147652980}
!6715 = !DILocation(line: 283, column: 1, scope: !6169)
!6716 = !{i64 2147653105, i64 2147653148, i64 2147653188}
!6717 = !DILocation(line: 284, column: 1, scope: !6169)
!6718 = !{i64 2147653295, i64 2147653338, i64 2147653378}
!6719 = !DILocation(line: 285, column: 1, scope: !6169)
!6720 = !{i64 2147653509, i64 2147653552, i64 2147653592}
!6721 = !DILocation(line: 286, column: 1, scope: !6169)
!6722 = !{i64 2147653771, i64 2147653814, i64 2147653854}
!6723 = !DILocation(line: 287, column: 1, scope: !6169)
!6724 = !{i64 2147653982, i64 2147654025, i64 2147654065}
!6725 = !DILocation(line: 288, column: 1, scope: !6169)
!6726 = !{i64 2147654226, i64 2147654269, i64 2147654309}
!6727 = !DILocation(line: 289, column: 1, scope: !6169)
!6728 = !{i64 2147654437, i64 2147654480, i64 2147654520}
!6729 = !DILocation(line: 290, column: 1, scope: !6169)
!6730 = !{i64 2147654666, i64 2147654709, i64 2147654749}
!6731 = !DILocation(line: 291, column: 1, scope: !6169)
!6732 = !{i64 2147654931, i64 2147654974, i64 2147655014}
!6733 = !DILocation(line: 292, column: 1, scope: !6169)
!6734 = !{i64 2147655136, i64 2147655179, i64 2147655219}
!6735 = !DILocation(line: 293, column: 1, scope: !6169)
!6736 = !{i64 2147655332, i64 2147655375, i64 2147655415}
!6737 = !DILocation(line: 294, column: 1, scope: !6169)
!6738 = !{i64 2147655555, i64 2147655598, i64 2147655638}
!6739 = !DILocation(line: 295, column: 1, scope: !6169)
!6740 = !{i64 2147655718, i64 2147655761, i64 2147655801}
!6741 = !DILocation(line: 296, column: 1, scope: !6169)
!6742 = !{i64 2147655923, i64 2147655966, i64 2147656006}
!6743 = !DILocation(line: 297, column: 1, scope: !6169)
!6744 = !{i64 2147660204, i64 2147660247, i64 2147660287}
!6745 = !DILocation(line: 298, column: 1, scope: !6169)
!6746 = !{i64 2147660418, i64 2147660461, i64 2147660501}
!6747 = !DILocation(line: 299, column: 1, scope: !6169)
!6748 = !{i64 2147660662, i64 2147660705, i64 2147660745}
!6749 = !DILocation(line: 300, column: 1, scope: !6169)
!6750 = !{i64 2147660894, i64 2147660937, i64 2147660977}
!6751 = !DILocation(line: 301, column: 1, scope: !6169)
!6752 = !{i64 2147661108, i64 2147661151, i64 2147661191}
!6753 = !DILocation(line: 302, column: 1, scope: !6169)
!6754 = !{i64 2147661319, i64 2147661362, i64 2147661402}
!6755 = !DILocation(line: 303, column: 1, scope: !6169)
!6756 = !{i64 2147661512, i64 2147661555, i64 2147661595}
!6757 = !DILocation(line: 304, column: 1, scope: !6169)
!6758 = !{i64 2147661711, i64 2147661754, i64 2147661794}
!6759 = !DILocation(line: 305, column: 1, scope: !6169)
!6760 = !{i64 2147661883, i64 2147661926, i64 2147661966}
!6761 = !DILocation(line: 306, column: 1, scope: !6169)
!6762 = !{i64 2147662076, i64 2147662119, i64 2147662159}
!6763 = !DILocation(line: 307, column: 1, scope: !6169)
!6764 = !{i64 2147662272, i64 2147662315, i64 2147662355}
!6765 = !DILocation(line: 308, column: 1, scope: !6169)
!6766 = !{i64 2147662435, i64 2147662478, i64 2147662518}
!6767 = !DILocation(line: 309, column: 1, scope: !6169)
!6768 = !{i64 2147662637, i64 2147662680, i64 2147662720}
!6769 = !DILocation(line: 310, column: 1, scope: !6169)
!6770 = !{i64 2147662842, i64 2147662885, i64 2147662925}
!6771 = !DILocation(line: 311, column: 1, scope: !6169)
!6772 = !{i64 2147663050, i64 2147663093, i64 2147663133}
!6773 = !DILocation(line: 312, column: 1, scope: !6169)
!6774 = !{i64 2147663243, i64 2147663286, i64 2147663326}
!6775 = !DILocation(line: 313, column: 1, scope: !6169)
!6776 = !{i64 2147663430, i64 2147663473, i64 2147663513}
!6777 = !DILocation(line: 314, column: 1, scope: !6169)
!6778 = !{i64 2147663657, i64 2147663700, i64 2147663740}
!6779 = !DILocation(line: 315, column: 1, scope: !6169)
!6780 = !{i64 2147663874, i64 2147663917, i64 2147663957}
!6781 = !DILocation(line: 316, column: 1, scope: !6169)
!6782 = !{i64 2147664166, i64 2147664209, i64 2147664249}
!6783 = !DILocation(line: 317, column: 1, scope: !6169)
!6784 = !{i64 2147664398, i64 2147664441, i64 2147664481}
!6785 = !DILocation(line: 318, column: 1, scope: !6169)
!6786 = !{i64 2147664615, i64 2147664658, i64 2147664698}
!6787 = !DILocation(line: 319, column: 1, scope: !6169)
!6788 = !{i64 2147664822, i64 2147664865, i64 2147664905}
!6789 = !DILocation(line: 320, column: 1, scope: !6169)
!6790 = !{i64 2147665023, i64 2147665066, i64 2147665106}
!6791 = !DILocation(line: 321, column: 1, scope: !6169)
!6792 = !{i64 2147665255, i64 2147665298, i64 2147665338}
!6793 = !DILocation(line: 322, column: 1, scope: !6169)
!6794 = !{i64 2147665463, i64 2147665506, i64 2147665546}
!6795 = !DILocation(line: 323, column: 1, scope: !6169)
!6796 = !{i64 2147665653, i64 2147665696, i64 2147665736}
!6797 = !DILocation(line: 324, column: 1, scope: !6169)
!6798 = !{i64 2147665879, i64 2147665922, i64 2147665962}
!6799 = !DILocation(line: 325, column: 1, scope: !6169)
!6800 = !{i64 2147666068, i64 2147666111, i64 2147666151}
!6801 = !DILocation(line: 326, column: 1, scope: !6169)
!6802 = !{i64 2147666339, i64 2147666382, i64 2147666422}
!6803 = !DILocation(line: 327, column: 1, scope: !6169)
!6804 = !{i64 2147666559, i64 2147666602, i64 2147666642}
!6805 = !DILocation(line: 328, column: 1, scope: !6169)
!6806 = !{i64 2147666812, i64 2147666855, i64 2147666895}
!6807 = !DILocation(line: 329, column: 1, scope: !6169)
!6808 = !{i64 2147667020, i64 2147667063, i64 2147667103}
!6809 = !DILocation(line: 330, column: 1, scope: !6169)
!6810 = !{i64 2147667252, i64 2147667295, i64 2147667335}
!6811 = !DILocation(line: 331, column: 1, scope: !6169)
!6812 = !{i64 2147667463, i64 2147667506, i64 2147667546}
!6813 = !DILocation(line: 332, column: 1, scope: !6169)
!6814 = !{i64 2147667653, i64 2147667696, i64 2147667736}
!6815 = !DILocation(line: 333, column: 1, scope: !6169)
!6816 = !{i64 2147667867, i64 2147667910, i64 2147667950}
!6817 = !DILocation(line: 334, column: 1, scope: !6169)
!6818 = !{i64 2147668066, i64 2147668109, i64 2147668149}
!6819 = !DILocation(line: 335, column: 1, scope: !6169)
!6820 = !{i64 2147668253, i64 2147668296, i64 2147668336}
!6821 = !DILocation(line: 336, column: 1, scope: !6169)
!6822 = !{i64 2147668461, i64 2147668504, i64 2147668544}
!6823 = !DILocation(line: 337, column: 1, scope: !6169)
!6824 = !{i64 2147668690, i64 2147668733, i64 2147668773}
!6825 = !DILocation(line: 338, column: 1, scope: !6169)
!6826 = !{i64 2147668892, i64 2147668935, i64 2147668975}
!6827 = !DILocation(line: 339, column: 1, scope: !6169)
!6828 = !{i64 2147673152, i64 2147673195, i64 2147673235}
!6829 = !DILocation(line: 340, column: 1, scope: !6169)
!6830 = !{i64 2147673342, i64 2147673385, i64 2147673425}
!6831 = !DILocation(line: 341, column: 1, scope: !6169)
!6832 = !{i64 2147673559, i64 2147673602, i64 2147673642}
!6833 = !DILocation(line: 343, column: 1, scope: !6169)
!6834 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !431, file: !431, line: 30, type: !438, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6835)
!6835 = !{!6836, !6837}
!6836 = !DILocalVariable(name: "arg", arg: 1, scope: !6834, file: !431, line: 30, type: !440)
!6837 = !DILocalVariable(name: "key", scope: !6834, file: !431, line: 32, type: !208)
!6838 = !DILocation(line: 0, scope: !6834)
!6839 = !DILocation(line: 37, column: 2, scope: !6834)
!6840 = !DILocation(line: 38, column: 2, scope: !6834)
!6841 = !DILocation(line: 55, column: 2, scope: !6842, inlinedAt: !6849)
!6842 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6843, file: !6843, line: 42, type: !6844, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6846)
!6843 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6844 = !DISubroutineType(types: !6845)
!6845 = !{!32}
!6846 = !{!6847, !6848}
!6847 = !DILocalVariable(name: "key", scope: !6842, file: !6843, line: 44, type: !32)
!6848 = !DILocalVariable(name: "tmp", scope: !6842, file: !6843, line: 53, type: !32)
!6849 = distinct !DILocation(line: 40, column: 8, scope: !6834)
!6850 = !{i64 2132284}
!6851 = !DILocation(line: 0, scope: !6842, inlinedAt: !6849)
!6852 = !DILocalVariable(name: "key", arg: 1, scope: !6853, file: !6843, line: 84, type: !32)
!6853 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6843, file: !6843, line: 84, type: !6854, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !6856)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{null, !32}
!6856 = !{!6852}
!6857 = !DILocation(line: 0, scope: !6853, inlinedAt: !6858)
!6858 = distinct !DILocation(line: 47, column: 2, scope: !6834)
!6859 = !DILocation(line: 95, column: 2, scope: !6853, inlinedAt: !6858)
!6860 = !{i64 2133101}
!6861 = !DILocation(line: 51, column: 18, scope: !6834)
!6862 = !DILocation(line: 53, column: 2, scope: !6834)
!6863 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6864, file: !6864, line: 1609, type: !3297, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6864 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6865 = !DILocation(line: 1611, column: 3, scope: !6863)
!6866 = !DILocation(line: 1612, column: 1, scope: !6863)
!6867 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6864, file: !6864, line: 1629, type: !3297, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !414, retainedNodes: !639)
!6868 = !DILocation(line: 1631, column: 3, scope: !6867)
!6869 = !DILocation(line: 1632, column: 1, scope: !6867)
!6870 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !461, file: !461, line: 26, type: !467, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !458, retainedNodes: !6871)
!6871 = !{!6872}
!6872 = !DILocalVariable(name: "dev", arg: 1, scope: !6870, file: !461, line: 26, type: !469)
!6873 = !DILocation(line: 0, scope: !6870)
!6874 = !DILocation(line: 68, column: 2, scope: !6870)
!6875 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6876, file: !6876, line: 14, type: !5149, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6877)
!6876 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6877 = !{!6878, !6879}
!6878 = !DILocalVariable(name: "fmt", arg: 1, scope: !6875, file: !6876, line: 14, type: !140)
!6879 = !DILocalVariable(name: "ap", scope: !6875, file: !6876, line: 16, type: !6880)
!6880 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4217, line: 99, baseType: !6881)
!6881 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !4217, line: 40, baseType: !6882)
!6882 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6876, baseType: !6883)
!6883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6884)
!6884 = !{!6885}
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6883, file: !6876, line: 16, baseType: !124, size: 32)
!6886 = !DILocation(line: 0, scope: !6875)
!6887 = !DILocation(line: 16, column: 2, scope: !6875)
!6888 = !DILocation(line: 16, column: 10, scope: !6875)
!6889 = !DILocation(line: 18, column: 2, scope: !6875)
!6890 = !DILocation(line: 19, column: 2, scope: !6875)
!6891 = !DILocation(line: 20, column: 2, scope: !6875)
!6892 = !DILocation(line: 21, column: 1, scope: !6875)
!6893 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6876, file: !6876, line: 23, type: !6894, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6896)
!6894 = !DISubroutineType(types: !6895)
!6895 = !{null, !140, !6880}
!6896 = !{!6897, !6898}
!6897 = !DILocalVariable(name: "fmt", arg: 1, scope: !6893, file: !6876, line: 23, type: !140)
!6898 = !DILocalVariable(name: "ap", arg: 2, scope: !6893, file: !6876, line: 23, type: !6880)
!6899 = !DILocation(line: 0, scope: !6893)
!6900 = !DILocation(line: 25, column: 2, scope: !6893)
!6901 = !DILocation(line: 26, column: 1, scope: !6893)
!6902 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6876, file: !6876, line: 52, type: !6903, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6905)
!6903 = !DISubroutineType(types: !6904)
!6904 = !{null, !125, !13, !272}
!6905 = !{!6906, !6907, !6908, !6909}
!6906 = !DILocalVariable(name: "level", arg: 1, scope: !6902, file: !6876, line: 52, type: !125)
!6907 = !DILocalVariable(name: "data", arg: 2, scope: !6902, file: !6876, line: 52, type: !13)
!6908 = !DILocalVariable(name: "size", arg: 3, scope: !6902, file: !6876, line: 52, type: !272)
!6909 = !DILocalVariable(name: "data_buffer", scope: !6902, file: !6876, line: 54, type: !140)
!6910 = !DILocation(line: 0, scope: !6902)
!6911 = !DILocation(line: 55, column: 14, scope: !6902)
!6912 = !DILocation(line: 55, column: 2, scope: !6902)
!6913 = !DILocation(line: 56, column: 3, scope: !6914)
!6914 = distinct !DILexicalBlock(scope: !6902, file: !6876, line: 55, column: 20)
!6915 = !DILocation(line: 57, column: 3, scope: !6914)
!6916 = !DILocation(line: 59, column: 7, scope: !6914)
!6917 = distinct !{!6917, !6912, !6918}
!6918 = !DILocation(line: 65, column: 2, scope: !6902)
!6919 = !DILocation(line: 66, column: 1, scope: !6902)
!6920 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3461, file: !3461, line: 175, type: !3462, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6921)
!6921 = !{!6922}
!6922 = !DILocalVariable(name: "level", arg: 1, scope: !6920, file: !3461, line: 175, type: !125)
!6923 = !DILocation(line: 0, scope: !6920)
!6924 = !DILocation(line: 177, column: 2, scope: !6920)
!6925 = !DILocation(line: 189, column: 1, scope: !6920)
!6926 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6876, file: !6876, line: 28, type: !6927, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6929)
!6927 = !DISubroutineType(types: !6928)
!6928 = !{null, !140, !272}
!6929 = !{!6930, !6931, !6932, !6934, !6936}
!6930 = !DILocalVariable(name: "data", arg: 1, scope: !6926, file: !6876, line: 28, type: !140)
!6931 = !DILocalVariable(name: "length", arg: 2, scope: !6926, file: !6876, line: 28, type: !272)
!6932 = !DILocalVariable(name: "i", scope: !6933, file: !6876, line: 30, type: !272)
!6933 = distinct !DILexicalBlock(scope: !6926, file: !6876, line: 30, column: 2)
!6934 = !DILocalVariable(name: "i", scope: !6935, file: !6876, line: 40, type: !272)
!6935 = distinct !DILexicalBlock(scope: !6926, file: !6876, line: 40, column: 2)
!6936 = !DILocalVariable(name: "c", scope: !6937, file: !6876, line: 42, type: !151)
!6937 = distinct !DILexicalBlock(scope: !6938, file: !6876, line: 41, column: 19)
!6938 = distinct !DILexicalBlock(scope: !6939, file: !6876, line: 41, column: 7)
!6939 = distinct !DILexicalBlock(scope: !6940, file: !6876, line: 40, column: 54)
!6940 = distinct !DILexicalBlock(scope: !6935, file: !6876, line: 40, column: 2)
!6941 = !DILocation(line: 0, scope: !6926)
!6942 = !DILocation(line: 0, scope: !6933)
!6943 = !DILocation(line: 30, column: 2, scope: !6933)
!6944 = !DILocation(line: 38, column: 2, scope: !6926)
!6945 = !DILocation(line: 0, scope: !6935)
!6946 = !DILocation(line: 40, column: 2, scope: !6935)
!6947 = !DILocation(line: 31, column: 9, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6876, line: 31, column: 7)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6876, line: 30, column: 54)
!6950 = distinct !DILexicalBlock(scope: !6933, file: !6876, line: 30, column: 2)
!6951 = !DILocation(line: 31, column: 7, scope: !6949)
!6952 = !DILocation(line: 32, column: 35, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6948, file: !6876, line: 31, column: 19)
!6954 = !DILocation(line: 32, column: 20, scope: !6953)
!6955 = !DILocation(line: 32, column: 4, scope: !6953)
!6956 = !DILocation(line: 33, column: 3, scope: !6953)
!6957 = !DILocation(line: 34, column: 4, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6948, file: !6876, line: 33, column: 10)
!6959 = !DILocation(line: 30, column: 50, scope: !6950)
!6960 = !DILocation(line: 30, column: 24, scope: !6950)
!6961 = distinct !{!6961, !6943, !6962}
!6962 = !DILocation(line: 36, column: 2, scope: !6933)
!6963 = !DILocation(line: 49, column: 2, scope: !6926)
!6964 = !DILocation(line: 50, column: 1, scope: !6926)
!6965 = !DILocation(line: 41, column: 9, scope: !6938)
!6966 = !DILocation(line: 41, column: 7, scope: !6939)
!6967 = !DILocation(line: 42, column: 22, scope: !6937)
!6968 = !DILocation(line: 0, scope: !6937)
!6969 = !DILocation(line: 44, column: 25, scope: !6937)
!6970 = !DILocation(line: 44, column: 17, scope: !6937)
!6971 = !DILocation(line: 44, column: 33, scope: !6937)
!6972 = !DILocation(line: 44, column: 4, scope: !6937)
!6973 = !DILocation(line: 45, column: 3, scope: !6937)
!6974 = !DILocation(line: 46, column: 4, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6938, file: !6876, line: 45, column: 10)
!6976 = !DILocation(line: 40, column: 50, scope: !6940)
!6977 = !DILocation(line: 40, column: 24, scope: !6940)
!6978 = distinct !{!6978, !6946, !6979}
!6979 = !DILocation(line: 48, column: 2, scope: !6935)
!6980 = distinct !DISubprogram(name: "isprint", scope: !5942, file: !5942, line: 37, type: !410, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2723, retainedNodes: !6981)
!6981 = !{!6982}
!6982 = !DILocalVariable(name: "c", arg: 1, scope: !6980, file: !5942, line: 37, type: !125)
!6983 = !DILocation(line: 0, scope: !6980)
!6984 = !DILocation(line: 39, column: 38, scope: !6980)
!6985 = !DILocation(line: 39, column: 2, scope: !6980)
!6986 = distinct !DISubprogram(name: "_copy", scope: !6987, file: !6987, line: 40, type: !6988, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !6990)
!6987 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6988 = !DISubroutineType(types: !6989)
!6989 = !{!32, !184, !32, !490, !32}
!6990 = !{!6991, !6992, !6993, !6994}
!6991 = !DILocalVariable(name: "to", arg: 1, scope: !6986, file: !6987, line: 40, type: !184)
!6992 = !DILocalVariable(name: "to_len", arg: 2, scope: !6986, file: !6987, line: 40, type: !32)
!6993 = !DILocalVariable(name: "from", arg: 3, scope: !6986, file: !6987, line: 41, type: !490)
!6994 = !DILocalVariable(name: "from_len", arg: 4, scope: !6986, file: !6987, line: 41, type: !32)
!6995 = !DILocation(line: 0, scope: !6986)
!6996 = !DILocation(line: 43, column: 15, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6986, file: !6987, line: 43, column: 6)
!6998 = !DILocation(line: 43, column: 6, scope: !6986)
!6999 = !DILocation(line: 44, column: 9, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6997, file: !6987, line: 43, column: 26)
!7001 = !DILocation(line: 45, column: 3, scope: !7000)
!7002 = !DILocation(line: 0, scope: !6997)
!7003 = !DILocation(line: 49, column: 1, scope: !6986)
!7004 = distinct !DISubprogram(name: "_set", scope: !6987, file: !6987, line: 51, type: !7005, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7007)
!7005 = !DISubroutineType(types: !7006)
!7006 = !{null, !124, !150, !32}
!7007 = !{!7008, !7009, !7010}
!7008 = !DILocalVariable(name: "to", arg: 1, scope: !7004, file: !6987, line: 51, type: !124)
!7009 = !DILocalVariable(name: "val", arg: 2, scope: !7004, file: !6987, line: 51, type: !150)
!7010 = !DILocalVariable(name: "len", arg: 3, scope: !7004, file: !6987, line: 51, type: !32)
!7011 = !DILocation(line: 0, scope: !7004)
!7012 = !DILocation(line: 53, column: 19, scope: !7004)
!7013 = !DILocation(line: 53, column: 8, scope: !7004)
!7014 = !DILocation(line: 54, column: 1, scope: !7004)
!7015 = distinct !DISubprogram(name: "_double_byte", scope: !6987, file: !6987, line: 59, type: !7016, scopeLine: 60, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7018)
!7016 = !DISubroutineType(types: !7017)
!7017 = !{!150, !150}
!7018 = !{!7019}
!7019 = !DILocalVariable(name: "a", arg: 1, scope: !7015, file: !6987, line: 59, type: !150)
!7020 = !DILocation(line: 0, scope: !7015)
!7021 = !DILocation(line: 61, column: 12, scope: !7015)
!7022 = !DILocation(line: 61, column: 27, scope: !7015)
!7023 = !DILocation(line: 61, column: 17, scope: !7015)
!7024 = !DILocation(line: 61, column: 2, scope: !7015)
!7025 = distinct !DISubprogram(name: "_compare", scope: !6987, file: !6987, line: 64, type: !7026, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2726, retainedNodes: !7028)
!7026 = !DISubroutineType(types: !7027)
!7027 = !{!125, !490, !490, !272}
!7028 = !{!7029, !7030, !7031, !7032, !7033, !7034, !7035}
!7029 = !DILocalVariable(name: "a", arg: 1, scope: !7025, file: !6987, line: 64, type: !490)
!7030 = !DILocalVariable(name: "b", arg: 2, scope: !7025, file: !6987, line: 64, type: !490)
!7031 = !DILocalVariable(name: "size", arg: 3, scope: !7025, file: !6987, line: 64, type: !272)
!7032 = !DILocalVariable(name: "tempa", scope: !7025, file: !6987, line: 66, type: !490)
!7033 = !DILocalVariable(name: "tempb", scope: !7025, file: !6987, line: 67, type: !490)
!7034 = !DILocalVariable(name: "result", scope: !7025, file: !6987, line: 68, type: !150)
!7035 = !DILocalVariable(name: "i", scope: !7036, file: !6987, line: 70, type: !32)
!7036 = distinct !DILexicalBlock(scope: !7025, file: !6987, line: 70, column: 2)
!7037 = !DILocation(line: 0, scope: !7025)
!7038 = !DILocation(line: 0, scope: !7036)
!7039 = !DILocation(line: 70, column: 29, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7036, file: !6987, line: 70, column: 2)
!7041 = !DILocation(line: 70, column: 2, scope: !7036)
!7042 = !DILocation(line: 73, column: 2, scope: !7025)
!7043 = !DILocation(line: 71, column: 13, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7040, file: !6987, line: 70, column: 42)
!7045 = !DILocation(line: 71, column: 24, scope: !7044)
!7046 = !DILocation(line: 71, column: 22, scope: !7044)
!7047 = !DILocation(line: 71, column: 10, scope: !7044)
!7048 = !DILocation(line: 70, column: 38, scope: !7040)
!7049 = distinct !{!7049, !7041, !7050}
!7050 = !DILocation(line: 72, column: 2, scope: !7036)
!7051 = distinct !DISubprogram(name: "tc_aes128_set_decrypt_key", scope: !501, file: !501, line: 62, type: !7052, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7054)
!7052 = !DISubroutineType(types: !7053)
!7053 = !{!125, !491, !490}
!7054 = !{!7055, !7056}
!7055 = !DILocalVariable(name: "s", arg: 1, scope: !7051, file: !501, line: 62, type: !491)
!7056 = !DILocalVariable(name: "k", arg: 2, scope: !7051, file: !501, line: 62, type: !490)
!7057 = !DILocation(line: 0, scope: !7051)
!7058 = !DILocation(line: 64, column: 9, scope: !7051)
!7059 = !DILocation(line: 64, column: 2, scope: !7051)
!7060 = distinct !DISubprogram(name: "tc_aes_decrypt", scope: !501, file: !501, line: 129, type: !7061, scopeLine: 130, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7064)
!7061 = !DISubroutineType(types: !7062)
!7062 = !{!125, !184, !490, !7063}
!7063 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!7064 = !{!7065, !7066, !7067, !7068, !7069}
!7065 = !DILocalVariable(name: "out", arg: 1, scope: !7060, file: !501, line: 129, type: !184)
!7066 = !DILocalVariable(name: "in", arg: 2, scope: !7060, file: !501, line: 129, type: !490)
!7067 = !DILocalVariable(name: "s", arg: 3, scope: !7060, file: !501, line: 129, type: !7063)
!7068 = !DILocalVariable(name: "state", scope: !7060, file: !501, line: 131, type: !311)
!7069 = !DILocalVariable(name: "i", scope: !7060, file: !501, line: 132, type: !32)
!7070 = !DILocation(line: 0, scope: !7060)
!7071 = !DILocation(line: 131, column: 2, scope: !7060)
!7072 = !DILocation(line: 131, column: 10, scope: !7060)
!7073 = !DILocation(line: 134, column: 10, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7060, file: !501, line: 134, column: 6)
!7075 = !DILocation(line: 134, column: 6, scope: !7060)
!7076 = !DILocation(line: 142, column: 8, scope: !7060)
!7077 = !DILocation(line: 144, column: 32, scope: !7060)
!7078 = !DILocation(line: 144, column: 2, scope: !7060)
!7079 = !DILocation(line: 146, column: 2, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7060, file: !501, line: 146, column: 2)
!7081 = !DILocation(line: 147, column: 3, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !501, line: 146, column: 31)
!7083 = distinct !DILexicalBlock(scope: !7080, file: !501, line: 146, column: 2)
!7084 = !DILocation(line: 148, column: 3, scope: !7082)
!7085 = !DILocation(line: 149, column: 37, scope: !7082)
!7086 = !DILocation(line: 149, column: 33, scope: !7082)
!7087 = !DILocation(line: 149, column: 3, scope: !7082)
!7088 = !DILocation(line: 150, column: 3, scope: !7082)
!7089 = !DILocation(line: 146, column: 26, scope: !7083)
!7090 = !DILocation(line: 146, column: 21, scope: !7083)
!7091 = distinct !{!7091, !7079, !7092}
!7092 = !DILocation(line: 151, column: 2, scope: !7080)
!7093 = !DILocation(line: 144, column: 23, scope: !7060)
!7094 = !DILocation(line: 153, column: 2, scope: !7060)
!7095 = !DILocation(line: 154, column: 2, scope: !7060)
!7096 = !DILocation(line: 155, column: 2, scope: !7060)
!7097 = !DILocation(line: 157, column: 8, scope: !7060)
!7098 = !DILocation(line: 160, column: 2, scope: !7060)
!7099 = !DILocation(line: 163, column: 2, scope: !7060)
!7100 = !DILocation(line: 164, column: 1, scope: !7060)
!7101 = distinct !DISubprogram(name: "add_round_key", scope: !501, file: !501, line: 92, type: !7102, scopeLine: 93, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7105)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{null, !184, !7104}
!7104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5865, size: 32)
!7105 = !{!7106, !7107}
!7106 = !DILocalVariable(name: "s", arg: 1, scope: !7101, file: !501, line: 92, type: !184)
!7107 = !DILocalVariable(name: "k", arg: 2, scope: !7101, file: !501, line: 92, type: !7104)
!7108 = !DILocation(line: 0, scope: !7101)
!7109 = !DILocation(line: 94, column: 20, scope: !7101)
!7110 = !DILocation(line: 94, column: 25, scope: !7101)
!7111 = !DILocation(line: 94, column: 7, scope: !7101)
!7112 = !DILocation(line: 94, column: 51, scope: !7101)
!7113 = !DILocation(line: 94, column: 56, scope: !7101)
!7114 = !DILocation(line: 94, column: 33, scope: !7101)
!7115 = !DILocation(line: 94, column: 38, scope: !7101)
!7116 = !DILocation(line: 95, column: 20, scope: !7101)
!7117 = !DILocation(line: 95, column: 25, scope: !7101)
!7118 = !DILocation(line: 95, column: 2, scope: !7101)
!7119 = !DILocation(line: 95, column: 7, scope: !7101)
!7120 = !DILocation(line: 95, column: 50, scope: !7101)
!7121 = !DILocation(line: 95, column: 32, scope: !7101)
!7122 = !DILocation(line: 95, column: 37, scope: !7101)
!7123 = !DILocation(line: 96, column: 20, scope: !7101)
!7124 = !DILocation(line: 96, column: 25, scope: !7101)
!7125 = !DILocation(line: 96, column: 2, scope: !7101)
!7126 = !DILocation(line: 96, column: 7, scope: !7101)
!7127 = !DILocation(line: 96, column: 51, scope: !7101)
!7128 = !DILocation(line: 96, column: 56, scope: !7101)
!7129 = !DILocation(line: 96, column: 33, scope: !7101)
!7130 = !DILocation(line: 96, column: 38, scope: !7101)
!7131 = !DILocation(line: 97, column: 20, scope: !7101)
!7132 = !DILocation(line: 97, column: 25, scope: !7101)
!7133 = !DILocation(line: 97, column: 2, scope: !7101)
!7134 = !DILocation(line: 97, column: 7, scope: !7101)
!7135 = !DILocation(line: 97, column: 50, scope: !7101)
!7136 = !DILocation(line: 97, column: 32, scope: !7101)
!7137 = !DILocation(line: 97, column: 37, scope: !7101)
!7138 = !DILocation(line: 98, column: 20, scope: !7101)
!7139 = !DILocation(line: 98, column: 25, scope: !7101)
!7140 = !DILocation(line: 98, column: 2, scope: !7101)
!7141 = !DILocation(line: 98, column: 7, scope: !7101)
!7142 = !DILocation(line: 98, column: 51, scope: !7101)
!7143 = !DILocation(line: 98, column: 56, scope: !7101)
!7144 = !DILocation(line: 98, column: 33, scope: !7101)
!7145 = !DILocation(line: 98, column: 38, scope: !7101)
!7146 = !DILocation(line: 99, column: 21, scope: !7101)
!7147 = !DILocation(line: 99, column: 26, scope: !7101)
!7148 = !DILocation(line: 99, column: 2, scope: !7101)
!7149 = !DILocation(line: 99, column: 8, scope: !7101)
!7150 = !DILocation(line: 99, column: 52, scope: !7101)
!7151 = !DILocation(line: 99, column: 33, scope: !7101)
!7152 = !DILocation(line: 99, column: 39, scope: !7101)
!7153 = !DILocation(line: 100, column: 21, scope: !7101)
!7154 = !DILocation(line: 100, column: 26, scope: !7101)
!7155 = !DILocation(line: 100, column: 2, scope: !7101)
!7156 = !DILocation(line: 100, column: 8, scope: !7101)
!7157 = !DILocation(line: 100, column: 53, scope: !7101)
!7158 = !DILocation(line: 100, column: 58, scope: !7101)
!7159 = !DILocation(line: 100, column: 34, scope: !7101)
!7160 = !DILocation(line: 100, column: 40, scope: !7101)
!7161 = !DILocation(line: 101, column: 21, scope: !7101)
!7162 = !DILocation(line: 101, column: 26, scope: !7101)
!7163 = !DILocation(line: 101, column: 2, scope: !7101)
!7164 = !DILocation(line: 101, column: 8, scope: !7101)
!7165 = !DILocation(line: 101, column: 52, scope: !7101)
!7166 = !DILocation(line: 101, column: 33, scope: !7101)
!7167 = !DILocation(line: 101, column: 39, scope: !7101)
!7168 = !DILocation(line: 102, column: 1, scope: !7101)
!7169 = distinct !DISubprogram(name: "inv_shift_rows", scope: !501, file: !501, line: 118, type: !7170, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7172)
!7170 = !DISubroutineType(types: !7171)
!7171 = !{null, !184}
!7172 = !{!7173, !7174}
!7173 = !DILocalVariable(name: "s", arg: 1, scope: !7169, file: !501, line: 118, type: !184)
!7174 = !DILocalVariable(name: "t", scope: !7169, file: !501, line: 120, type: !311)
!7175 = !DILocation(line: 0, scope: !7169)
!7176 = !DILocation(line: 120, column: 2, scope: !7169)
!7177 = !DILocation(line: 120, column: 10, scope: !7169)
!7178 = !DILocation(line: 122, column: 10, scope: !7169)
!7179 = !DILocation(line: 122, column: 8, scope: !7169)
!7180 = !DILocation(line: 122, column: 23, scope: !7169)
!7181 = !DILocation(line: 122, column: 16, scope: !7169)
!7182 = !DILocation(line: 122, column: 21, scope: !7169)
!7183 = !DILocation(line: 122, column: 37, scope: !7169)
!7184 = !DILocation(line: 122, column: 30, scope: !7169)
!7185 = !DILocation(line: 122, column: 35, scope: !7169)
!7186 = !DILocation(line: 122, column: 51, scope: !7169)
!7187 = !DILocation(line: 122, column: 44, scope: !7169)
!7188 = !DILocation(line: 122, column: 49, scope: !7169)
!7189 = !DILocation(line: 123, column: 10, scope: !7169)
!7190 = !DILocation(line: 123, column: 2, scope: !7169)
!7191 = !DILocation(line: 123, column: 8, scope: !7169)
!7192 = !DILocation(line: 123, column: 23, scope: !7169)
!7193 = !DILocation(line: 123, column: 16, scope: !7169)
!7194 = !DILocation(line: 123, column: 21, scope: !7169)
!7195 = !DILocation(line: 123, column: 36, scope: !7169)
!7196 = !DILocation(line: 123, column: 29, scope: !7169)
!7197 = !DILocation(line: 123, column: 34, scope: !7169)
!7198 = !DILocation(line: 123, column: 50, scope: !7169)
!7199 = !DILocation(line: 123, column: 43, scope: !7169)
!7200 = !DILocation(line: 123, column: 48, scope: !7169)
!7201 = !DILocation(line: 124, column: 10, scope: !7169)
!7202 = !DILocation(line: 124, column: 2, scope: !7169)
!7203 = !DILocation(line: 124, column: 8, scope: !7169)
!7204 = !DILocation(line: 124, column: 23, scope: !7169)
!7205 = !DILocation(line: 124, column: 16, scope: !7169)
!7206 = !DILocation(line: 124, column: 21, scope: !7169)
!7207 = !DILocation(line: 124, column: 37, scope: !7169)
!7208 = !DILocation(line: 124, column: 29, scope: !7169)
!7209 = !DILocation(line: 124, column: 35, scope: !7169)
!7210 = !DILocation(line: 124, column: 51, scope: !7169)
!7211 = !DILocation(line: 124, column: 43, scope: !7169)
!7212 = !DILocation(line: 124, column: 49, scope: !7169)
!7213 = !DILocation(line: 125, column: 10, scope: !7169)
!7214 = !DILocation(line: 125, column: 2, scope: !7169)
!7215 = !DILocation(line: 125, column: 8, scope: !7169)
!7216 = !DILocation(line: 125, column: 25, scope: !7169)
!7217 = !DILocation(line: 125, column: 17, scope: !7169)
!7218 = !DILocation(line: 125, column: 23, scope: !7169)
!7219 = !DILocation(line: 125, column: 39, scope: !7169)
!7220 = !DILocation(line: 125, column: 31, scope: !7169)
!7221 = !DILocation(line: 125, column: 37, scope: !7169)
!7222 = !DILocation(line: 125, column: 53, scope: !7169)
!7223 = !DILocation(line: 125, column: 45, scope: !7169)
!7224 = !DILocation(line: 125, column: 51, scope: !7169)
!7225 = !DILocation(line: 126, column: 8, scope: !7169)
!7226 = !DILocation(line: 127, column: 1, scope: !7169)
!7227 = distinct !DISubprogram(name: "inv_sub_bytes", scope: !501, file: !501, line: 104, type: !7170, scopeLine: 105, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7228)
!7228 = !{!7229, !7230}
!7229 = !DILocalVariable(name: "s", arg: 1, scope: !7227, file: !501, line: 104, type: !184)
!7230 = !DILocalVariable(name: "i", scope: !7227, file: !501, line: 106, type: !32)
!7231 = !DILocation(line: 0, scope: !7227)
!7232 = !DILocation(line: 108, column: 2, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7227, file: !501, line: 108, column: 2)
!7234 = !DILocation(line: 109, column: 19, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7236, file: !501, line: 108, column: 32)
!7236 = distinct !DILexicalBlock(scope: !7233, file: !501, line: 108, column: 2)
!7237 = !DILocation(line: 109, column: 10, scope: !7235)
!7238 = !DILocation(line: 109, column: 8, scope: !7235)
!7239 = !DILocation(line: 108, column: 27, scope: !7236)
!7240 = !DILocation(line: 108, column: 16, scope: !7236)
!7241 = distinct !{!7241, !7232, !7242}
!7242 = !DILocation(line: 110, column: 2, scope: !7233)
!7243 = !DILocation(line: 111, column: 1, scope: !7227)
!7244 = distinct !DISubprogram(name: "inv_mix_columns", scope: !501, file: !501, line: 81, type: !7170, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7245)
!7245 = !{!7246, !7247}
!7246 = !DILocalVariable(name: "s", arg: 1, scope: !7244, file: !501, line: 81, type: !184)
!7247 = !DILocalVariable(name: "t", scope: !7244, file: !501, line: 83, type: !311)
!7248 = !DILocation(line: 0, scope: !7244)
!7249 = !DILocation(line: 83, column: 2, scope: !7244)
!7250 = !DILocation(line: 83, column: 10, scope: !7244)
!7251 = !DILocation(line: 85, column: 2, scope: !7244)
!7252 = !DILocation(line: 86, column: 19, scope: !7244)
!7253 = !DILocation(line: 86, column: 27, scope: !7244)
!7254 = !DILocation(line: 86, column: 2, scope: !7244)
!7255 = !DILocation(line: 87, column: 19, scope: !7244)
!7256 = !DILocation(line: 87, column: 29, scope: !7244)
!7257 = !DILocation(line: 87, column: 2, scope: !7244)
!7258 = !DILocation(line: 88, column: 19, scope: !7244)
!7259 = !DILocation(line: 88, column: 29, scope: !7244)
!7260 = !DILocation(line: 88, column: 2, scope: !7244)
!7261 = !DILocation(line: 89, column: 8, scope: !7244)
!7262 = !DILocation(line: 90, column: 1, scope: !7244)
!7263 = distinct !DISubprogram(name: "mult_row_column", scope: !501, file: !501, line: 73, type: !7264, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !487, retainedNodes: !7266)
!7264 = !DISubroutineType(types: !7265)
!7265 = !{null, !184, !490}
!7266 = !{!7267, !7268}
!7267 = !DILocalVariable(name: "out", arg: 1, scope: !7263, file: !501, line: 73, type: !184)
!7268 = !DILocalVariable(name: "in", arg: 2, scope: !7263, file: !501, line: 73, type: !490)
!7269 = !DILocation(line: 0, scope: !7263)
!7270 = !DILocation(line: 75, column: 11, scope: !7263)
!7271 = !DILocation(line: 75, column: 26, scope: !7263)
!7272 = !DILocation(line: 75, column: 41, scope: !7263)
!7273 = !DILocation(line: 75, column: 56, scope: !7263)
!7274 = !DILocation(line: 75, column: 24, scope: !7263)
!7275 = !DILocation(line: 75, column: 39, scope: !7263)
!7276 = !DILocation(line: 75, column: 54, scope: !7263)
!7277 = !DILocation(line: 75, column: 9, scope: !7263)
!7278 = !DILocation(line: 76, column: 11, scope: !7263)
!7279 = !DILocation(line: 76, column: 26, scope: !7263)
!7280 = !DILocation(line: 76, column: 41, scope: !7263)
!7281 = !DILocation(line: 76, column: 56, scope: !7263)
!7282 = !DILocation(line: 76, column: 24, scope: !7263)
!7283 = !DILocation(line: 76, column: 39, scope: !7263)
!7284 = !DILocation(line: 76, column: 54, scope: !7263)
!7285 = !DILocation(line: 76, column: 2, scope: !7263)
!7286 = !DILocation(line: 76, column: 9, scope: !7263)
!7287 = !DILocation(line: 77, column: 11, scope: !7263)
!7288 = !DILocation(line: 77, column: 26, scope: !7263)
!7289 = !DILocation(line: 77, column: 41, scope: !7263)
!7290 = !DILocation(line: 77, column: 56, scope: !7263)
!7291 = !DILocation(line: 77, column: 24, scope: !7263)
!7292 = !DILocation(line: 77, column: 39, scope: !7263)
!7293 = !DILocation(line: 77, column: 54, scope: !7263)
!7294 = !DILocation(line: 77, column: 2, scope: !7263)
!7295 = !DILocation(line: 77, column: 9, scope: !7263)
!7296 = !DILocation(line: 78, column: 11, scope: !7263)
!7297 = !DILocation(line: 78, column: 26, scope: !7263)
!7298 = !DILocation(line: 78, column: 41, scope: !7263)
!7299 = !DILocation(line: 78, column: 56, scope: !7263)
!7300 = !DILocation(line: 78, column: 24, scope: !7263)
!7301 = !DILocation(line: 78, column: 39, scope: !7263)
!7302 = !DILocation(line: 78, column: 54, scope: !7263)
!7303 = !DILocation(line: 78, column: 2, scope: !7263)
!7304 = !DILocation(line: 78, column: 9, scope: !7263)
!7305 = !DILocation(line: 79, column: 1, scope: !7263)
!7306 = distinct !DISubprogram(name: "tc_aes128_set_encrypt_key", scope: !516, file: !516, line: 70, type: !7307, scopeLine: 71, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7309)
!7307 = !DISubroutineType(types: !7308)
!7308 = !{!125, !510, !490}
!7309 = !{!7310, !7311, !7312, !7314, !7315}
!7310 = !DILocalVariable(name: "s", arg: 1, scope: !7306, file: !516, line: 70, type: !510)
!7311 = !DILocalVariable(name: "k", arg: 2, scope: !7306, file: !516, line: 70, type: !490)
!7312 = !DILocalVariable(name: "rconst", scope: !7306, file: !516, line: 72, type: !7313)
!7313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5865, size: 352, elements: !2084)
!7314 = !DILocalVariable(name: "i", scope: !7306, file: !516, line: 76, type: !32)
!7315 = !DILocalVariable(name: "t", scope: !7306, file: !516, line: 77, type: !32)
!7316 = !DILocation(line: 0, scope: !7306)
!7317 = !DILocation(line: 72, column: 21, scope: !7306)
!7318 = !DILocation(line: 79, column: 8, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7306, file: !516, line: 79, column: 6)
!7320 = !DILocation(line: 79, column: 6, scope: !7306)
!7321 = !DILocation(line: 91, column: 7, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !516, line: 90, column: 35)
!7323 = distinct !DILexicalBlock(scope: !7324, file: !516, line: 90, column: 2)
!7324 = distinct !DILexicalBlock(scope: !7306, file: !516, line: 90, column: 2)
!7325 = !DILocation(line: 90, column: 2, scope: !7324)
!7326 = !DILocation(line: 86, column: 22, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7328, file: !516, line: 85, column: 27)
!7328 = distinct !DILexicalBlock(scope: !7329, file: !516, line: 85, column: 2)
!7329 = distinct !DILexicalBlock(scope: !7306, file: !516, line: 85, column: 2)
!7330 = !DILocation(line: 86, column: 18, scope: !7327)
!7331 = !DILocation(line: 86, column: 25, scope: !7327)
!7332 = !DILocation(line: 86, column: 40, scope: !7327)
!7333 = !DILocation(line: 86, column: 34, scope: !7327)
!7334 = !DILocation(line: 86, column: 43, scope: !7327)
!7335 = !DILocation(line: 86, column: 31, scope: !7327)
!7336 = !DILocation(line: 87, column: 17, scope: !7327)
!7337 = !DILocation(line: 87, column: 11, scope: !7327)
!7338 = !DILocation(line: 87, column: 20, scope: !7327)
!7339 = !DILocation(line: 86, column: 49, scope: !7327)
!7340 = !DILocation(line: 87, column: 34, scope: !7327)
!7341 = !DILocation(line: 87, column: 28, scope: !7327)
!7342 = !DILocation(line: 87, column: 27, scope: !7327)
!7343 = !DILocation(line: 87, column: 25, scope: !7327)
!7344 = !DILocation(line: 86, column: 3, scope: !7327)
!7345 = !DILocation(line: 86, column: 15, scope: !7327)
!7346 = !DILocation(line: 85, column: 22, scope: !7328)
!7347 = !DILocation(line: 85, column: 16, scope: !7328)
!7348 = !DILocation(line: 85, column: 2, scope: !7329)
!7349 = distinct !{!7349, !7348, !7350}
!7350 = !DILocation(line: 88, column: 2, scope: !7329)
!7351 = !DILocation(line: 92, column: 10, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7322, file: !516, line: 92, column: 7)
!7353 = !DILocation(line: 92, column: 16, scope: !7352)
!7354 = !DILocation(line: 92, column: 7, scope: !7322)
!7355 = !DILocation(line: 93, column: 8, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7352, file: !516, line: 92, column: 22)
!7357 = !DILocation(line: 93, column: 38, scope: !7356)
!7358 = !DILocation(line: 93, column: 30, scope: !7356)
!7359 = !DILocation(line: 93, column: 28, scope: !7356)
!7360 = !DILocation(line: 94, column: 3, scope: !7356)
!7361 = !DILocation(line: 0, scope: !7322)
!7362 = !DILocation(line: 95, column: 27, scope: !7322)
!7363 = !DILocation(line: 95, column: 17, scope: !7322)
!7364 = !DILocation(line: 95, column: 32, scope: !7322)
!7365 = !DILocation(line: 95, column: 3, scope: !7322)
!7366 = !DILocation(line: 95, column: 15, scope: !7322)
!7367 = !DILocation(line: 90, column: 30, scope: !7323)
!7368 = !DILocation(line: 90, column: 11, scope: !7323)
!7369 = distinct !{!7369, !7325, !7370}
!7370 = !DILocation(line: 96, column: 2, scope: !7324)
!7371 = !DILocation(line: 99, column: 1, scope: !7306)
!7372 = distinct !DISubprogram(name: "rotword", scope: !516, file: !516, line: 62, type: !7373, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7375)
!7373 = !DISubroutineType(types: !7374)
!7374 = !{!32, !32}
!7375 = !{!7376}
!7376 = !DILocalVariable(name: "a", arg: 1, scope: !7372, file: !516, line: 62, type: !32)
!7377 = !DILocation(line: 0, scope: !7372)
!7378 = !DILocation(line: 64, column: 21, scope: !7372)
!7379 = !DILocation(line: 64, column: 2, scope: !7372)
!7380 = distinct !DISubprogram(name: "tc_aes_encrypt", scope: !516, file: !516, line: 158, type: !7381, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7384)
!7381 = !DISubroutineType(types: !7382)
!7382 = !{!125, !184, !490, !7383}
!7383 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!7384 = !{!7385, !7386, !7387, !7388, !7389}
!7385 = !DILocalVariable(name: "out", arg: 1, scope: !7380, file: !516, line: 158, type: !184)
!7386 = !DILocalVariable(name: "in", arg: 2, scope: !7380, file: !516, line: 158, type: !490)
!7387 = !DILocalVariable(name: "s", arg: 3, scope: !7380, file: !516, line: 158, type: !7383)
!7388 = !DILocalVariable(name: "state", scope: !7380, file: !516, line: 160, type: !311)
!7389 = !DILocalVariable(name: "i", scope: !7380, file: !516, line: 161, type: !32)
!7390 = !DILocation(line: 0, scope: !7380)
!7391 = !DILocation(line: 160, column: 2, scope: !7380)
!7392 = !DILocation(line: 160, column: 10, scope: !7380)
!7393 = !DILocation(line: 163, column: 10, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7380, file: !516, line: 163, column: 6)
!7395 = !DILocation(line: 163, column: 6, scope: !7380)
!7396 = !DILocation(line: 171, column: 8, scope: !7380)
!7397 = !DILocation(line: 172, column: 23, scope: !7380)
!7398 = !DILocation(line: 172, column: 2, scope: !7380)
!7399 = !DILocation(line: 174, column: 2, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7380, file: !516, line: 174, column: 2)
!7401 = !DILocation(line: 175, column: 3, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7403, file: !516, line: 174, column: 33)
!7403 = distinct !DILexicalBlock(scope: !7400, file: !516, line: 174, column: 2)
!7404 = !DILocation(line: 176, column: 3, scope: !7402)
!7405 = !DILocation(line: 177, column: 3, scope: !7402)
!7406 = !DILocation(line: 178, column: 40, scope: !7402)
!7407 = !DILocation(line: 178, column: 37, scope: !7402)
!7408 = !DILocation(line: 178, column: 33, scope: !7402)
!7409 = !DILocation(line: 178, column: 3, scope: !7402)
!7410 = !DILocation(line: 174, column: 16, scope: !7403)
!7411 = distinct !{!7411, !7399, !7412}
!7412 = !DILocation(line: 179, column: 2, scope: !7400)
!7413 = !DILocation(line: 181, column: 2, scope: !7380)
!7414 = !DILocation(line: 182, column: 2, scope: !7380)
!7415 = !DILocation(line: 183, column: 32, scope: !7380)
!7416 = !DILocation(line: 183, column: 2, scope: !7380)
!7417 = !DILocation(line: 185, column: 8, scope: !7380)
!7418 = !DILocation(line: 188, column: 2, scope: !7380)
!7419 = !DILocation(line: 190, column: 2, scope: !7380)
!7420 = !DILocation(line: 191, column: 1, scope: !7380)
!7421 = distinct !DISubprogram(name: "add_round_key", scope: !516, file: !516, line: 101, type: !7102, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7422)
!7422 = !{!7423, !7424}
!7423 = !DILocalVariable(name: "s", arg: 1, scope: !7421, file: !516, line: 101, type: !184)
!7424 = !DILocalVariable(name: "k", arg: 2, scope: !7421, file: !516, line: 101, type: !7104)
!7425 = !DILocation(line: 0, scope: !7421)
!7426 = !DILocation(line: 103, column: 20, scope: !7421)
!7427 = !DILocation(line: 103, column: 25, scope: !7421)
!7428 = !DILocation(line: 103, column: 7, scope: !7421)
!7429 = !DILocation(line: 103, column: 51, scope: !7421)
!7430 = !DILocation(line: 103, column: 56, scope: !7421)
!7431 = !DILocation(line: 103, column: 33, scope: !7421)
!7432 = !DILocation(line: 103, column: 38, scope: !7421)
!7433 = !DILocation(line: 104, column: 20, scope: !7421)
!7434 = !DILocation(line: 104, column: 25, scope: !7421)
!7435 = !DILocation(line: 104, column: 2, scope: !7421)
!7436 = !DILocation(line: 104, column: 7, scope: !7421)
!7437 = !DILocation(line: 104, column: 50, scope: !7421)
!7438 = !DILocation(line: 104, column: 32, scope: !7421)
!7439 = !DILocation(line: 104, column: 37, scope: !7421)
!7440 = !DILocation(line: 105, column: 20, scope: !7421)
!7441 = !DILocation(line: 105, column: 25, scope: !7421)
!7442 = !DILocation(line: 105, column: 2, scope: !7421)
!7443 = !DILocation(line: 105, column: 7, scope: !7421)
!7444 = !DILocation(line: 105, column: 51, scope: !7421)
!7445 = !DILocation(line: 105, column: 56, scope: !7421)
!7446 = !DILocation(line: 105, column: 33, scope: !7421)
!7447 = !DILocation(line: 105, column: 38, scope: !7421)
!7448 = !DILocation(line: 106, column: 20, scope: !7421)
!7449 = !DILocation(line: 106, column: 25, scope: !7421)
!7450 = !DILocation(line: 106, column: 2, scope: !7421)
!7451 = !DILocation(line: 106, column: 7, scope: !7421)
!7452 = !DILocation(line: 106, column: 50, scope: !7421)
!7453 = !DILocation(line: 106, column: 32, scope: !7421)
!7454 = !DILocation(line: 106, column: 37, scope: !7421)
!7455 = !DILocation(line: 107, column: 20, scope: !7421)
!7456 = !DILocation(line: 107, column: 25, scope: !7421)
!7457 = !DILocation(line: 107, column: 2, scope: !7421)
!7458 = !DILocation(line: 107, column: 7, scope: !7421)
!7459 = !DILocation(line: 107, column: 51, scope: !7421)
!7460 = !DILocation(line: 107, column: 56, scope: !7421)
!7461 = !DILocation(line: 107, column: 33, scope: !7421)
!7462 = !DILocation(line: 107, column: 38, scope: !7421)
!7463 = !DILocation(line: 108, column: 21, scope: !7421)
!7464 = !DILocation(line: 108, column: 26, scope: !7421)
!7465 = !DILocation(line: 108, column: 2, scope: !7421)
!7466 = !DILocation(line: 108, column: 8, scope: !7421)
!7467 = !DILocation(line: 108, column: 52, scope: !7421)
!7468 = !DILocation(line: 108, column: 33, scope: !7421)
!7469 = !DILocation(line: 108, column: 39, scope: !7421)
!7470 = !DILocation(line: 109, column: 21, scope: !7421)
!7471 = !DILocation(line: 109, column: 26, scope: !7421)
!7472 = !DILocation(line: 109, column: 2, scope: !7421)
!7473 = !DILocation(line: 109, column: 8, scope: !7421)
!7474 = !DILocation(line: 109, column: 53, scope: !7421)
!7475 = !DILocation(line: 109, column: 58, scope: !7421)
!7476 = !DILocation(line: 109, column: 34, scope: !7421)
!7477 = !DILocation(line: 109, column: 40, scope: !7421)
!7478 = !DILocation(line: 110, column: 21, scope: !7421)
!7479 = !DILocation(line: 110, column: 26, scope: !7421)
!7480 = !DILocation(line: 110, column: 2, scope: !7421)
!7481 = !DILocation(line: 110, column: 8, scope: !7421)
!7482 = !DILocation(line: 110, column: 52, scope: !7421)
!7483 = !DILocation(line: 110, column: 33, scope: !7421)
!7484 = !DILocation(line: 110, column: 39, scope: !7421)
!7485 = !DILocation(line: 111, column: 1, scope: !7421)
!7486 = distinct !DISubprogram(name: "sub_bytes", scope: !516, file: !516, line: 113, type: !7170, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7487)
!7487 = !{!7488, !7489}
!7488 = !DILocalVariable(name: "s", arg: 1, scope: !7486, file: !516, line: 113, type: !184)
!7489 = !DILocalVariable(name: "i", scope: !7486, file: !516, line: 115, type: !32)
!7490 = !DILocation(line: 0, scope: !7486)
!7491 = !DILocation(line: 117, column: 2, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7486, file: !516, line: 117, column: 2)
!7493 = !DILocation(line: 118, column: 15, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7495, file: !516, line: 117, column: 34)
!7495 = distinct !DILexicalBlock(scope: !7492, file: !516, line: 117, column: 2)
!7496 = !DILocation(line: 118, column: 10, scope: !7494)
!7497 = !DILocation(line: 118, column: 8, scope: !7494)
!7498 = !DILocation(line: 117, column: 29, scope: !7495)
!7499 = !DILocation(line: 117, column: 16, scope: !7495)
!7500 = distinct !{!7500, !7491, !7501}
!7501 = !DILocation(line: 119, column: 2, scope: !7492)
!7502 = !DILocation(line: 120, column: 1, scope: !7486)
!7503 = distinct !DISubprogram(name: "shift_rows", scope: !516, file: !516, line: 147, type: !7170, scopeLine: 148, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7504)
!7504 = !{!7505, !7506}
!7505 = !DILocalVariable(name: "s", arg: 1, scope: !7503, file: !516, line: 147, type: !184)
!7506 = !DILocalVariable(name: "t", scope: !7503, file: !516, line: 149, type: !311)
!7507 = !DILocation(line: 0, scope: !7503)
!7508 = !DILocation(line: 149, column: 2, scope: !7503)
!7509 = !DILocation(line: 149, column: 10, scope: !7503)
!7510 = !DILocation(line: 151, column: 10, scope: !7503)
!7511 = !DILocation(line: 151, column: 8, scope: !7503)
!7512 = !DILocation(line: 151, column: 23, scope: !7503)
!7513 = !DILocation(line: 151, column: 16, scope: !7503)
!7514 = !DILocation(line: 151, column: 21, scope: !7503)
!7515 = !DILocation(line: 151, column: 36, scope: !7503)
!7516 = !DILocation(line: 151, column: 29, scope: !7503)
!7517 = !DILocation(line: 151, column: 34, scope: !7503)
!7518 = !DILocation(line: 151, column: 50, scope: !7503)
!7519 = !DILocation(line: 151, column: 43, scope: !7503)
!7520 = !DILocation(line: 151, column: 48, scope: !7503)
!7521 = !DILocation(line: 152, column: 10, scope: !7503)
!7522 = !DILocation(line: 152, column: 2, scope: !7503)
!7523 = !DILocation(line: 152, column: 8, scope: !7503)
!7524 = !DILocation(line: 152, column: 23, scope: !7503)
!7525 = !DILocation(line: 152, column: 16, scope: !7503)
!7526 = !DILocation(line: 152, column: 21, scope: !7503)
!7527 = !DILocation(line: 152, column: 36, scope: !7503)
!7528 = !DILocation(line: 152, column: 29, scope: !7503)
!7529 = !DILocation(line: 152, column: 34, scope: !7503)
!7530 = !DILocation(line: 152, column: 50, scope: !7503)
!7531 = !DILocation(line: 152, column: 43, scope: !7503)
!7532 = !DILocation(line: 152, column: 48, scope: !7503)
!7533 = !DILocation(line: 153, column: 10, scope: !7503)
!7534 = !DILocation(line: 153, column: 2, scope: !7503)
!7535 = !DILocation(line: 153, column: 8, scope: !7503)
!7536 = !DILocation(line: 153, column: 23, scope: !7503)
!7537 = !DILocation(line: 153, column: 16, scope: !7503)
!7538 = !DILocation(line: 153, column: 21, scope: !7503)
!7539 = !DILocation(line: 153, column: 38, scope: !7503)
!7540 = !DILocation(line: 153, column: 30, scope: !7503)
!7541 = !DILocation(line: 153, column: 36, scope: !7503)
!7542 = !DILocation(line: 153, column: 52, scope: !7503)
!7543 = !DILocation(line: 153, column: 44, scope: !7503)
!7544 = !DILocation(line: 153, column: 50, scope: !7503)
!7545 = !DILocation(line: 154, column: 10, scope: !7503)
!7546 = !DILocation(line: 154, column: 2, scope: !7503)
!7547 = !DILocation(line: 154, column: 8, scope: !7503)
!7548 = !DILocation(line: 154, column: 25, scope: !7503)
!7549 = !DILocation(line: 154, column: 17, scope: !7503)
!7550 = !DILocation(line: 154, column: 23, scope: !7503)
!7551 = !DILocation(line: 154, column: 39, scope: !7503)
!7552 = !DILocation(line: 154, column: 31, scope: !7503)
!7553 = !DILocation(line: 154, column: 37, scope: !7503)
!7554 = !DILocation(line: 154, column: 53, scope: !7503)
!7555 = !DILocation(line: 154, column: 45, scope: !7503)
!7556 = !DILocation(line: 154, column: 51, scope: !7503)
!7557 = !DILocation(line: 155, column: 9, scope: !7503)
!7558 = !DILocation(line: 156, column: 1, scope: !7503)
!7559 = distinct !DISubprogram(name: "mix_columns", scope: !516, file: !516, line: 132, type: !7170, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7560)
!7560 = !{!7561, !7562}
!7561 = !DILocalVariable(name: "s", arg: 1, scope: !7559, file: !516, line: 132, type: !184)
!7562 = !DILocalVariable(name: "t", scope: !7559, file: !516, line: 134, type: !311)
!7563 = !DILocation(line: 0, scope: !7559)
!7564 = !DILocation(line: 134, column: 2, scope: !7559)
!7565 = !DILocation(line: 134, column: 10, scope: !7559)
!7566 = !DILocation(line: 136, column: 2, scope: !7559)
!7567 = !DILocation(line: 137, column: 19, scope: !7559)
!7568 = !DILocation(line: 137, column: 27, scope: !7559)
!7569 = !DILocation(line: 137, column: 2, scope: !7559)
!7570 = !DILocation(line: 138, column: 19, scope: !7559)
!7571 = !DILocation(line: 138, column: 32, scope: !7559)
!7572 = !DILocation(line: 138, column: 2, scope: !7559)
!7573 = !DILocation(line: 139, column: 19, scope: !7559)
!7574 = !DILocation(line: 139, column: 32, scope: !7559)
!7575 = !DILocation(line: 139, column: 2, scope: !7559)
!7576 = !DILocation(line: 140, column: 9, scope: !7559)
!7577 = !DILocation(line: 141, column: 1, scope: !7559)
!7578 = distinct !DISubprogram(name: "mult_row_column", scope: !516, file: !516, line: 124, type: !7264, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !507, retainedNodes: !7579)
!7579 = !{!7580, !7581}
!7580 = !DILocalVariable(name: "out", arg: 1, scope: !7578, file: !516, line: 124, type: !184)
!7581 = !DILocalVariable(name: "in", arg: 2, scope: !7578, file: !516, line: 124, type: !490)
!7582 = !DILocation(line: 0, scope: !7578)
!7583 = !DILocation(line: 126, column: 24, scope: !7578)
!7584 = !DILocation(line: 126, column: 11, scope: !7578)
!7585 = !DILocation(line: 126, column: 33, scope: !7578)
!7586 = !DILocation(line: 126, column: 49, scope: !7578)
!7587 = !DILocation(line: 126, column: 57, scope: !7578)
!7588 = !DILocation(line: 126, column: 31, scope: !7578)
!7589 = !DILocation(line: 126, column: 47, scope: !7578)
!7590 = !DILocation(line: 126, column: 55, scope: !7578)
!7591 = !DILocation(line: 126, column: 9, scope: !7578)
!7592 = !DILocation(line: 127, column: 11, scope: !7578)
!7593 = !DILocation(line: 127, column: 32, scope: !7578)
!7594 = !DILocation(line: 127, column: 19, scope: !7578)
!7595 = !DILocation(line: 127, column: 41, scope: !7578)
!7596 = !DILocation(line: 127, column: 57, scope: !7578)
!7597 = !DILocation(line: 127, column: 17, scope: !7578)
!7598 = !DILocation(line: 127, column: 39, scope: !7578)
!7599 = !DILocation(line: 127, column: 55, scope: !7578)
!7600 = !DILocation(line: 127, column: 2, scope: !7578)
!7601 = !DILocation(line: 127, column: 9, scope: !7578)
!7602 = !DILocation(line: 128, column: 11, scope: !7578)
!7603 = !DILocation(line: 128, column: 19, scope: !7578)
!7604 = !DILocation(line: 128, column: 40, scope: !7578)
!7605 = !DILocation(line: 128, column: 27, scope: !7578)
!7606 = !DILocation(line: 128, column: 49, scope: !7578)
!7607 = !DILocation(line: 128, column: 17, scope: !7578)
!7608 = !DILocation(line: 128, column: 25, scope: !7578)
!7609 = !DILocation(line: 128, column: 47, scope: !7578)
!7610 = !DILocation(line: 128, column: 2, scope: !7578)
!7611 = !DILocation(line: 128, column: 9, scope: !7578)
!7612 = !DILocation(line: 129, column: 11, scope: !7578)
!7613 = !DILocation(line: 129, column: 27, scope: !7578)
!7614 = !DILocation(line: 129, column: 25, scope: !7578)
!7615 = !DILocation(line: 129, column: 35, scope: !7578)
!7616 = !DILocation(line: 129, column: 33, scope: !7578)
!7617 = !DILocation(line: 129, column: 56, scope: !7578)
!7618 = !DILocation(line: 129, column: 43, scope: !7578)
!7619 = !DILocation(line: 129, column: 41, scope: !7578)
!7620 = !DILocation(line: 129, column: 2, scope: !7578)
!7621 = !DILocation(line: 129, column: 9, scope: !7578)
!7622 = !DILocation(line: 130, column: 1, scope: !7578)
!7623 = distinct !DISubprogram(name: "tc_cbc_mode_encrypt", scope: !7624, file: !7624, line: 37, type: !7625, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !7628)
!7624 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/cbc_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7625 = !DISubroutineType(types: !7626)
!7626 = !{!125, !184, !32, !490, !32, !490, !7627}
!7627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2731)
!7628 = !{!7629, !7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637}
!7629 = !DILocalVariable(name: "out", arg: 1, scope: !7623, file: !7624, line: 37, type: !184)
!7630 = !DILocalVariable(name: "outlen", arg: 2, scope: !7623, file: !7624, line: 37, type: !32)
!7631 = !DILocalVariable(name: "in", arg: 3, scope: !7623, file: !7624, line: 37, type: !490)
!7632 = !DILocalVariable(name: "inlen", arg: 4, scope: !7623, file: !7624, line: 38, type: !32)
!7633 = !DILocalVariable(name: "iv", arg: 5, scope: !7623, file: !7624, line: 38, type: !490)
!7634 = !DILocalVariable(name: "sched", arg: 6, scope: !7623, file: !7624, line: 39, type: !7627)
!7635 = !DILocalVariable(name: "buffer", scope: !7623, file: !7624, line: 42, type: !311)
!7636 = !DILocalVariable(name: "n", scope: !7623, file: !7624, line: 43, type: !32)
!7637 = !DILocalVariable(name: "m", scope: !7623, file: !7624, line: 43, type: !32)
!7638 = !DILocation(line: 0, scope: !7623)
!7639 = !DILocation(line: 42, column: 2, scope: !7623)
!7640 = !DILocation(line: 42, column: 10, scope: !7623)
!7641 = !DILocation(line: 46, column: 10, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7623, file: !7624, line: 46, column: 6)
!7643 = !DILocation(line: 46, column: 27, scope: !7642)
!7644 = !DILocation(line: 58, column: 8, scope: !7623)
!7645 = !DILocation(line: 60, column: 8, scope: !7623)
!7646 = !DILocation(line: 63, column: 2, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7623, file: !7624, line: 63, column: 2)
!7648 = !DILocation(line: 61, column: 6, scope: !7623)
!7649 = !DILocation(line: 64, column: 21, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !7624, line: 63, column: 34)
!7651 = distinct !DILexicalBlock(scope: !7647, file: !7624, line: 63, column: 2)
!7652 = !DILocation(line: 64, column: 18, scope: !7650)
!7653 = !DILocation(line: 64, column: 11, scope: !7650)
!7654 = !DILocation(line: 64, column: 3, scope: !7650)
!7655 = !DILocation(line: 64, column: 15, scope: !7650)
!7656 = !DILocation(line: 65, column: 9, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7650, file: !7624, line: 65, column: 7)
!7658 = !DILocation(line: 65, column: 7, scope: !7650)
!7659 = !DILocation(line: 66, column: 10, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7657, file: !7624, line: 65, column: 31)
!7661 = !DILocation(line: 67, column: 10, scope: !7660)
!7662 = !DILocation(line: 69, column: 8, scope: !7660)
!7663 = !DILocation(line: 71, column: 3, scope: !7660)
!7664 = !DILocation(line: 0, scope: !7650)
!7665 = !DILocation(line: 63, column: 29, scope: !7651)
!7666 = !DILocation(line: 63, column: 20, scope: !7651)
!7667 = distinct !{!7667, !7646, !7668}
!7668 = !DILocation(line: 72, column: 2, scope: !7647)
!7669 = !DILocation(line: 75, column: 1, scope: !7623)
!7670 = distinct !DISubprogram(name: "tc_cbc_mode_decrypt", scope: !7624, file: !7624, line: 77, type: !7625, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2728, retainedNodes: !7671)
!7671 = !{!7672, !7673, !7674, !7675, !7676, !7677, !7678, !7679, !7680, !7681}
!7672 = !DILocalVariable(name: "out", arg: 1, scope: !7670, file: !7624, line: 77, type: !184)
!7673 = !DILocalVariable(name: "outlen", arg: 2, scope: !7670, file: !7624, line: 77, type: !32)
!7674 = !DILocalVariable(name: "in", arg: 3, scope: !7670, file: !7624, line: 77, type: !490)
!7675 = !DILocalVariable(name: "inlen", arg: 4, scope: !7670, file: !7624, line: 78, type: !32)
!7676 = !DILocalVariable(name: "iv", arg: 5, scope: !7670, file: !7624, line: 78, type: !490)
!7677 = !DILocalVariable(name: "sched", arg: 6, scope: !7670, file: !7624, line: 79, type: !7627)
!7678 = !DILocalVariable(name: "buffer", scope: !7670, file: !7624, line: 82, type: !311)
!7679 = !DILocalVariable(name: "p", scope: !7670, file: !7624, line: 83, type: !490)
!7680 = !DILocalVariable(name: "n", scope: !7670, file: !7624, line: 84, type: !32)
!7681 = !DILocalVariable(name: "m", scope: !7670, file: !7624, line: 84, type: !32)
!7682 = !DILocation(line: 0, scope: !7670)
!7683 = !DILocation(line: 82, column: 2, scope: !7670)
!7684 = !DILocation(line: 82, column: 10, scope: !7670)
!7685 = !DILocation(line: 87, column: 10, scope: !7686)
!7686 = distinct !DILexicalBlock(scope: !7670, file: !7624, line: 87, column: 6)
!7687 = !DILocation(line: 87, column: 27, scope: !7686)
!7688 = !DILocation(line: 105, column: 10, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !7624, line: 105, column: 7)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !7624, line: 104, column: 35)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !7624, line: 104, column: 2)
!7692 = distinct !DILexicalBlock(scope: !7670, file: !7624, line: 104, column: 2)
!7693 = !DILocation(line: 105, column: 31, scope: !7689)
!7694 = !DILocation(line: 105, column: 7, scope: !7690)
!7695 = !DILocation(line: 106, column: 10, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7689, file: !7624, line: 105, column: 37)
!7697 = !DILocation(line: 107, column: 7, scope: !7696)
!7698 = !DILocation(line: 109, column: 3, scope: !7696)
!7699 = !DILocation(line: 0, scope: !7692)
!7700 = !DILocation(line: 110, column: 20, scope: !7690)
!7701 = !DILocation(line: 110, column: 12, scope: !7690)
!7702 = !DILocation(line: 110, column: 28, scope: !7690)
!7703 = !DILocation(line: 110, column: 26, scope: !7690)
!7704 = !DILocation(line: 110, column: 24, scope: !7690)
!7705 = !DILocation(line: 110, column: 7, scope: !7690)
!7706 = !DILocation(line: 110, column: 10, scope: !7690)
!7707 = !DILocation(line: 104, column: 30, scope: !7691)
!7708 = !DILocation(line: 104, column: 20, scope: !7691)
!7709 = !DILocation(line: 104, column: 2, scope: !7692)
!7710 = distinct !{!7710, !7709, !7711}
!7711 = !DILocation(line: 111, column: 2, scope: !7692)
!7712 = !DILocation(line: 114, column: 1, scope: !7670)
!7713 = distinct !DISubprogram(name: "tc_ctr_mode", scope: !7714, file: !7714, line: 37, type: !7715, scopeLine: 39, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2736, retainedNodes: !7718)
!7714 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ctr_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7715 = !DISubroutineType(types: !7716)
!7716 = !{!125, !184, !32, !490, !32, !184, !7717}
!7717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2739)
!7718 = !{!7719, !7720, !7721, !7722, !7723, !7724, !7725, !7726, !7727, !7728}
!7719 = !DILocalVariable(name: "out", arg: 1, scope: !7713, file: !7714, line: 37, type: !184)
!7720 = !DILocalVariable(name: "outlen", arg: 2, scope: !7713, file: !7714, line: 37, type: !32)
!7721 = !DILocalVariable(name: "in", arg: 3, scope: !7713, file: !7714, line: 37, type: !490)
!7722 = !DILocalVariable(name: "inlen", arg: 4, scope: !7713, file: !7714, line: 38, type: !32)
!7723 = !DILocalVariable(name: "ctr", arg: 5, scope: !7713, file: !7714, line: 38, type: !184)
!7724 = !DILocalVariable(name: "sched", arg: 6, scope: !7713, file: !7714, line: 38, type: !7717)
!7725 = !DILocalVariable(name: "buffer", scope: !7713, file: !7714, line: 41, type: !311)
!7726 = !DILocalVariable(name: "nonce", scope: !7713, file: !7714, line: 42, type: !311)
!7727 = !DILocalVariable(name: "block_num", scope: !7713, file: !7714, line: 43, type: !32)
!7728 = !DILocalVariable(name: "i", scope: !7713, file: !7714, line: 44, type: !32)
!7729 = !DILocation(line: 0, scope: !7713)
!7730 = !DILocation(line: 41, column: 2, scope: !7713)
!7731 = !DILocation(line: 41, column: 10, scope: !7713)
!7732 = !DILocation(line: 42, column: 2, scope: !7713)
!7733 = !DILocation(line: 42, column: 10, scope: !7713)
!7734 = !DILocation(line: 47, column: 10, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7713, file: !7714, line: 47, column: 6)
!7736 = !DILocation(line: 47, column: 27, scope: !7735)
!7737 = !DILocation(line: 58, column: 8, scope: !7713)
!7738 = !DILocation(line: 61, column: 15, scope: !7713)
!7739 = !DILocation(line: 61, column: 35, scope: !7713)
!7740 = !DILocation(line: 62, column: 8, scope: !7713)
!7741 = !DILocation(line: 62, column: 27, scope: !7713)
!7742 = !DILocation(line: 61, column: 45, scope: !7713)
!7743 = !DILocation(line: 61, column: 25, scope: !7713)
!7744 = !DILocation(line: 61, column: 32, scope: !7713)
!7745 = !DILocation(line: 62, column: 18, scope: !7713)
!7746 = !DILocation(line: 61, column: 52, scope: !7713)
!7747 = !DILocation(line: 62, column: 26, scope: !7713)
!7748 = !DILocation(line: 62, column: 24, scope: !7713)
!7749 = !DILocation(line: 63, column: 2, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7713, file: !7714, line: 63, column: 2)
!7751 = !DILocation(line: 64, column: 10, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !7714, line: 64, column: 7)
!7753 = distinct !DILexicalBlock(scope: !7754, file: !7714, line: 63, column: 30)
!7754 = distinct !DILexicalBlock(scope: !7750, file: !7714, line: 63, column: 2)
!7755 = !DILocation(line: 64, column: 33, scope: !7752)
!7756 = !DILocation(line: 64, column: 7, scope: !7753)
!7757 = !DILocation(line: 66, column: 8, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7759, file: !7714, line: 66, column: 8)
!7759 = distinct !DILexicalBlock(scope: !7752, file: !7714, line: 64, column: 39)
!7760 = !DILocation(line: 66, column: 8, scope: !7759)
!7761 = !DILocation(line: 67, column: 14, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7758, file: !7714, line: 66, column: 46)
!7763 = !DILocation(line: 68, column: 37, scope: !7762)
!7764 = !DILocation(line: 68, column: 17, scope: !7762)
!7765 = !DILocation(line: 68, column: 15, scope: !7762)
!7766 = !DILocation(line: 69, column: 37, scope: !7762)
!7767 = !DILocation(line: 69, column: 17, scope: !7762)
!7768 = !DILocation(line: 69, column: 15, scope: !7762)
!7769 = !DILocation(line: 70, column: 37, scope: !7762)
!7770 = !DILocation(line: 70, column: 17, scope: !7762)
!7771 = !DILocation(line: 70, column: 15, scope: !7762)
!7772 = !DILocation(line: 71, column: 17, scope: !7762)
!7773 = !DILocation(line: 71, column: 15, scope: !7762)
!7774 = !DILocation(line: 75, column: 3, scope: !7759)
!7775 = !DILocation(line: 77, column: 12, scope: !7753)
!7776 = !DILocation(line: 77, column: 47, scope: !7753)
!7777 = !DILocation(line: 77, column: 44, scope: !7753)
!7778 = !DILocation(line: 77, column: 42, scope: !7753)
!7779 = !DILocation(line: 77, column: 7, scope: !7753)
!7780 = !DILocation(line: 77, column: 10, scope: !7753)
!7781 = !DILocation(line: 63, column: 25, scope: !7754)
!7782 = !DILocation(line: 63, column: 16, scope: !7754)
!7783 = distinct !{!7783, !7749, !7784}
!7784 = !DILocation(line: 78, column: 2, scope: !7750)
!7785 = !DILocation(line: 81, column: 2, scope: !7713)
!7786 = !DILocation(line: 81, column: 10, scope: !7713)
!7787 = !DILocation(line: 81, column: 23, scope: !7713)
!7788 = !DILocation(line: 81, column: 31, scope: !7713)
!7789 = !DILocation(line: 82, column: 2, scope: !7713)
!7790 = !DILocation(line: 82, column: 10, scope: !7713)
!7791 = !DILocation(line: 82, column: 23, scope: !7713)
!7792 = !DILocation(line: 82, column: 31, scope: !7713)
!7793 = !DILocation(line: 84, column: 2, scope: !7713)
!7794 = !DILocation(line: 85, column: 1, scope: !7713)
!7795 = distinct !DISubprogram(name: "tc_ccm_config", scope: !7796, file: !7796, line: 39, type: !7797, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !7799)
!7796 = !DIFile(filename: "modules/crypto/tinycrypt/lib/source/ccm_mode.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!125, !2747, !2753, !184, !32, !32}
!7799 = !{!7800, !7801, !7802, !7803, !7804}
!7800 = !DILocalVariable(name: "c", arg: 1, scope: !7795, file: !7796, line: 39, type: !2747)
!7801 = !DILocalVariable(name: "sched", arg: 2, scope: !7795, file: !7796, line: 39, type: !2753)
!7802 = !DILocalVariable(name: "nonce", arg: 3, scope: !7795, file: !7796, line: 39, type: !184)
!7803 = !DILocalVariable(name: "nlen", arg: 4, scope: !7795, file: !7796, line: 40, type: !32)
!7804 = !DILocalVariable(name: "mlen", arg: 5, scope: !7795, file: !7796, line: 40, type: !32)
!7805 = !DILocation(line: 0, scope: !7795)
!7806 = !DILocation(line: 44, column: 8, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7795, file: !7796, line: 44, column: 6)
!7808 = !DILocation(line: 44, column: 27, scope: !7807)
!7809 = !DILocation(line: 50, column: 24, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !7796, line: 50, column: 13)
!7811 = distinct !DILexicalBlock(scope: !7807, file: !7796, line: 48, column: 13)
!7812 = !DILocation(line: 54, column: 5, scope: !7795)
!7813 = !DILocation(line: 54, column: 10, scope: !7795)
!7814 = !DILocation(line: 55, column: 5, scope: !7795)
!7815 = !DILocation(line: 55, column: 11, scope: !7795)
!7816 = !DILocation(line: 56, column: 5, scope: !7795)
!7817 = !DILocation(line: 56, column: 11, scope: !7795)
!7818 = !DILocation(line: 58, column: 2, scope: !7795)
!7819 = !DILocation(line: 59, column: 1, scope: !7795)
!7820 = distinct !DISubprogram(name: "tc_ccm_generation_encryption", scope: !7796, file: !7796, line: 137, type: !7821, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !7823)
!7821 = !DISubroutineType(types: !7822)
!7822 = !{!125, !184, !32, !490, !32, !490, !32, !2747}
!7823 = !{!7824, !7825, !7826, !7827, !7828, !7829, !7830, !7831, !7832, !7833}
!7824 = !DILocalVariable(name: "out", arg: 1, scope: !7820, file: !7796, line: 137, type: !184)
!7825 = !DILocalVariable(name: "olen", arg: 2, scope: !7820, file: !7796, line: 137, type: !32)
!7826 = !DILocalVariable(name: "associated_data", arg: 3, scope: !7820, file: !7796, line: 138, type: !490)
!7827 = !DILocalVariable(name: "alen", arg: 4, scope: !7820, file: !7796, line: 139, type: !32)
!7828 = !DILocalVariable(name: "payload", arg: 5, scope: !7820, file: !7796, line: 139, type: !490)
!7829 = !DILocalVariable(name: "plen", arg: 6, scope: !7820, file: !7796, line: 140, type: !32)
!7830 = !DILocalVariable(name: "c", arg: 7, scope: !7820, file: !7796, line: 140, type: !2747)
!7831 = !DILocalVariable(name: "b", scope: !7820, file: !7796, line: 154, type: !311)
!7832 = !DILocalVariable(name: "tag", scope: !7820, file: !7796, line: 155, type: !311)
!7833 = !DILocalVariable(name: "i", scope: !7820, file: !7796, line: 156, type: !32)
!7834 = !DILocation(line: 0, scope: !7820)
!7835 = !DILocation(line: 144, column: 11, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7820, file: !7796, line: 144, column: 6)
!7837 = !DILocation(line: 144, column: 29, scope: !7836)
!7838 = !DILocation(line: 146, column: 10, scope: !7836)
!7839 = !DILocation(line: 146, column: 15, scope: !7836)
!7840 = !DILocation(line: 147, column: 10, scope: !7836)
!7841 = !DILocation(line: 147, column: 15, scope: !7836)
!7842 = !DILocation(line: 150, column: 22, scope: !7836)
!7843 = !DILocation(line: 150, column: 17, scope: !7836)
!7844 = !DILocation(line: 150, column: 9, scope: !7836)
!7845 = !DILocation(line: 144, column: 6, scope: !7820)
!7846 = !DILocation(line: 154, column: 2, scope: !7820)
!7847 = !DILocation(line: 154, column: 10, scope: !7820)
!7848 = !DILocation(line: 155, column: 2, scope: !7820)
!7849 = !DILocation(line: 155, column: 10, scope: !7820)
!7850 = !DILocation(line: 161, column: 10, scope: !7820)
!7851 = !DILocation(line: 161, column: 53, scope: !7820)
!7852 = !DILocation(line: 161, column: 31, scope: !7820)
!7853 = !DILocation(line: 161, column: 9, scope: !7820)
!7854 = !DILocation(line: 161, column: 7, scope: !7820)
!7855 = !DILocation(line: 162, column: 2, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7820, file: !7796, line: 162, column: 2)
!7857 = !DILocation(line: 163, column: 21, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7859, file: !7796, line: 162, column: 28)
!7859 = distinct !DILexicalBlock(scope: !7856, file: !7796, line: 162, column: 2)
!7860 = !DILocation(line: 163, column: 10, scope: !7858)
!7861 = !DILocation(line: 163, column: 3, scope: !7858)
!7862 = !DILocation(line: 163, column: 8, scope: !7858)
!7863 = !DILocation(line: 162, column: 23, scope: !7859)
!7864 = !DILocation(line: 162, column: 16, scope: !7859)
!7865 = distinct !{!7865, !7855, !7866}
!7866 = !DILocation(line: 164, column: 2, scope: !7856)
!7867 = !DILocation(line: 165, column: 25, scope: !7820)
!7868 = !DILocation(line: 165, column: 10, scope: !7820)
!7869 = !DILocation(line: 165, column: 2, scope: !7820)
!7870 = !DILocation(line: 165, column: 8, scope: !7820)
!7871 = !DILocation(line: 166, column: 10, scope: !7820)
!7872 = !DILocation(line: 166, column: 2, scope: !7820)
!7873 = !DILocation(line: 166, column: 8, scope: !7820)
!7874 = !DILocation(line: 169, column: 35, scope: !7820)
!7875 = !DILocation(line: 169, column: 9, scope: !7820)
!7876 = !DILocation(line: 170, column: 6, scope: !7820)
!7877 = !DILocation(line: 171, column: 49, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7879, file: !7796, line: 170, column: 16)
!7879 = distinct !DILexicalBlock(scope: !7820, file: !7796, line: 170, column: 6)
!7880 = !DILocation(line: 171, column: 3, scope: !7878)
!7881 = !DILocation(line: 172, column: 2, scope: !7878)
!7882 = !DILocation(line: 173, column: 6, scope: !7820)
!7883 = !DILocation(line: 174, column: 41, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !7796, line: 173, column: 16)
!7885 = distinct !DILexicalBlock(scope: !7820, file: !7796, line: 173, column: 6)
!7886 = !DILocation(line: 174, column: 3, scope: !7884)
!7887 = !DILocation(line: 175, column: 2, scope: !7884)
!7888 = !DILocation(line: 180, column: 7, scope: !7820)
!7889 = !DILocation(line: 181, column: 16, scope: !7820)
!7890 = !DILocation(line: 181, column: 8, scope: !7820)
!7891 = !DILocation(line: 184, column: 47, scope: !7820)
!7892 = !DILocation(line: 184, column: 2, scope: !7820)
!7893 = !DILocation(line: 186, column: 16, scope: !7820)
!7894 = !DILocation(line: 186, column: 8, scope: !7820)
!7895 = !DILocation(line: 189, column: 33, scope: !7820)
!7896 = !DILocation(line: 189, column: 9, scope: !7820)
!7897 = !DILocation(line: 191, column: 21, scope: !7898)
!7898 = distinct !DILexicalBlock(scope: !7899, file: !7796, line: 191, column: 2)
!7899 = distinct !DILexicalBlock(scope: !7820, file: !7796, line: 191, column: 2)
!7900 = !DILocation(line: 191, column: 16, scope: !7898)
!7901 = !DILocation(line: 191, column: 2, scope: !7899)
!7902 = !DILocation(line: 190, column: 6, scope: !7820)
!7903 = !DILocation(line: 192, column: 12, scope: !7904)
!7904 = distinct !DILexicalBlock(scope: !7898, file: !7796, line: 191, column: 32)
!7905 = !DILocation(line: 192, column: 21, scope: !7904)
!7906 = !DILocation(line: 192, column: 19, scope: !7904)
!7907 = !DILocation(line: 192, column: 7, scope: !7904)
!7908 = !DILocation(line: 192, column: 10, scope: !7904)
!7909 = !DILocation(line: 191, column: 27, scope: !7898)
!7910 = distinct !{!7910, !7901, !7911}
!7911 = !DILocation(line: 193, column: 2, scope: !7899)
!7912 = !DILocation(line: 196, column: 1, scope: !7820)
!7913 = distinct !DISubprogram(name: "ccm_cbc_mac", scope: !7796, file: !7796, line: 64, type: !7914, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !7916)
!7914 = !DISubroutineType(types: !7915)
!7915 = !{null, !184, !490, !32, !32, !2753}
!7916 = !{!7917, !7918, !7919, !7920, !7921, !7922}
!7917 = !DILocalVariable(name: "T", arg: 1, scope: !7913, file: !7796, line: 64, type: !184)
!7918 = !DILocalVariable(name: "data", arg: 2, scope: !7913, file: !7796, line: 64, type: !490)
!7919 = !DILocalVariable(name: "dlen", arg: 3, scope: !7913, file: !7796, line: 64, type: !32)
!7920 = !DILocalVariable(name: "flag", arg: 4, scope: !7913, file: !7796, line: 65, type: !32)
!7921 = !DILocalVariable(name: "sched", arg: 5, scope: !7913, file: !7796, line: 65, type: !2753)
!7922 = !DILocalVariable(name: "i", scope: !7913, file: !7796, line: 68, type: !32)
!7923 = !DILocation(line: 0, scope: !7913)
!7924 = !DILocation(line: 70, column: 11, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7913, file: !7796, line: 70, column: 6)
!7926 = !DILocation(line: 70, column: 6, scope: !7913)
!7927 = !DILocation(line: 71, column: 26, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7925, file: !7796, line: 70, column: 16)
!7929 = !DILocation(line: 71, column: 8, scope: !7928)
!7930 = !DILocation(line: 72, column: 3, scope: !7928)
!7931 = !DILocation(line: 72, column: 8, scope: !7928)
!7932 = !DILocation(line: 73, column: 8, scope: !7928)
!7933 = !DILocation(line: 74, column: 2, scope: !7928)
!7934 = !DILocation(line: 0, scope: !7925)
!7935 = !DILocation(line: 78, column: 11, scope: !7913)
!7936 = !DILocation(line: 78, column: 2, scope: !7913)
!7937 = !DILocation(line: 79, column: 30, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7913, file: !7796, line: 78, column: 19)
!7939 = !DILocation(line: 79, column: 25, scope: !7938)
!7940 = !DILocation(line: 79, column: 6, scope: !7938)
!7941 = !DILocation(line: 79, column: 9, scope: !7938)
!7942 = !DILocation(line: 79, column: 3, scope: !7938)
!7943 = !DILocation(line: 79, column: 22, scope: !7938)
!7944 = !DILocation(line: 80, column: 11, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7938, file: !7796, line: 80, column: 7)
!7946 = !DILocation(line: 80, column: 24, scope: !7945)
!7947 = !DILocation(line: 80, column: 30, scope: !7945)
!7948 = !DILocation(line: 81, column: 11, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !7796, line: 80, column: 44)
!7950 = !DILocation(line: 82, column: 3, scope: !7949)
!7951 = distinct !{!7951, !7936, !7952}
!7952 = !DILocation(line: 83, column: 2, scope: !7913)
!7953 = !DILocation(line: 84, column: 1, scope: !7913)
!7954 = distinct !DISubprogram(name: "ccm_ctr_mode", scope: !7796, file: !7796, line: 93, type: !7955, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !7958)
!7955 = !DISubroutineType(types: !7956)
!7956 = !{!125, !184, !32, !490, !32, !184, !7957}
!7957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2753)
!7958 = !{!7959, !7960, !7961, !7962, !7963, !7964, !7965, !7966, !7967, !7968}
!7959 = !DILocalVariable(name: "out", arg: 1, scope: !7954, file: !7796, line: 93, type: !184)
!7960 = !DILocalVariable(name: "outlen", arg: 2, scope: !7954, file: !7796, line: 93, type: !32)
!7961 = !DILocalVariable(name: "in", arg: 3, scope: !7954, file: !7796, line: 93, type: !490)
!7962 = !DILocalVariable(name: "inlen", arg: 4, scope: !7954, file: !7796, line: 94, type: !32)
!7963 = !DILocalVariable(name: "ctr", arg: 5, scope: !7954, file: !7796, line: 94, type: !184)
!7964 = !DILocalVariable(name: "sched", arg: 6, scope: !7954, file: !7796, line: 94, type: !7957)
!7965 = !DILocalVariable(name: "buffer", scope: !7954, file: !7796, line: 97, type: !311)
!7966 = !DILocalVariable(name: "nonce", scope: !7954, file: !7796, line: 98, type: !311)
!7967 = !DILocalVariable(name: "block_num", scope: !7954, file: !7796, line: 99, type: !227)
!7968 = !DILocalVariable(name: "i", scope: !7954, file: !7796, line: 100, type: !32)
!7969 = !DILocation(line: 0, scope: !7954)
!7970 = !DILocation(line: 97, column: 2, scope: !7954)
!7971 = !DILocation(line: 97, column: 10, scope: !7954)
!7972 = !DILocation(line: 98, column: 2, scope: !7954)
!7973 = !DILocation(line: 98, column: 10, scope: !7954)
!7974 = !DILocation(line: 103, column: 10, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7954, file: !7796, line: 103, column: 6)
!7976 = !DILocation(line: 103, column: 27, scope: !7975)
!7977 = !DILocation(line: 114, column: 9, scope: !7954)
!7978 = !DILocation(line: 117, column: 27, scope: !7954)
!7979 = !DILocation(line: 117, column: 44, scope: !7954)
!7980 = !DILocation(line: 117, column: 37, scope: !7954)
!7981 = !DILocation(line: 117, column: 43, scope: !7954)
!7982 = !DILocation(line: 117, column: 42, scope: !7954)
!7983 = !DILocation(line: 118, column: 2, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7954, file: !7796, line: 118, column: 2)
!7985 = !DILocation(line: 119, column: 10, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7987, file: !7796, line: 119, column: 7)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !7796, line: 118, column: 30)
!7988 = distinct !DILexicalBlock(scope: !7984, file: !7796, line: 118, column: 2)
!7989 = !DILocation(line: 119, column: 33, scope: !7986)
!7990 = !DILocation(line: 119, column: 7, scope: !7987)
!7991 = !DILocation(line: 120, column: 13, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7986, file: !7796, line: 119, column: 39)
!7993 = !DILocation(line: 121, column: 36, scope: !7992)
!7994 = !DILocation(line: 121, column: 16, scope: !7992)
!7995 = !DILocation(line: 121, column: 14, scope: !7992)
!7996 = !DILocation(line: 122, column: 16, scope: !7992)
!7997 = !DILocation(line: 122, column: 14, scope: !7992)
!7998 = !DILocation(line: 123, column: 9, scope: !7999)
!7999 = distinct !DILexicalBlock(scope: !7992, file: !7796, line: 123, column: 8)
!8000 = !DILocation(line: 123, column: 8, scope: !7992)
!8001 = !DILocation(line: 128, column: 12, scope: !7987)
!8002 = !DILocation(line: 128, column: 49, scope: !7987)
!8003 = !DILocation(line: 128, column: 46, scope: !7987)
!8004 = !DILocation(line: 128, column: 44, scope: !7987)
!8005 = !DILocation(line: 128, column: 7, scope: !7987)
!8006 = !DILocation(line: 128, column: 10, scope: !7987)
!8007 = !DILocation(line: 118, column: 25, scope: !7988)
!8008 = !DILocation(line: 118, column: 16, scope: !7988)
!8009 = distinct !{!8009, !7983, !8010}
!8010 = !DILocation(line: 129, column: 2, scope: !7984)
!8011 = !DILocation(line: 132, column: 12, scope: !7954)
!8012 = !DILocation(line: 132, column: 33, scope: !7954)
!8013 = !DILocation(line: 132, column: 2, scope: !7954)
!8014 = !DILocation(line: 132, column: 10, scope: !7954)
!8015 = !DILocation(line: 132, column: 23, scope: !7954)
!8016 = !DILocation(line: 132, column: 31, scope: !7954)
!8017 = !DILocation(line: 134, column: 2, scope: !7954)
!8018 = !DILocation(line: 135, column: 1, scope: !7954)
!8019 = distinct !DISubprogram(name: "tc_ccm_decryption_verification", scope: !7796, file: !7796, line: 198, type: !7821, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2744, retainedNodes: !8020)
!8020 = !{!8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8029, !8030}
!8021 = !DILocalVariable(name: "out", arg: 1, scope: !8019, file: !7796, line: 198, type: !184)
!8022 = !DILocalVariable(name: "olen", arg: 2, scope: !8019, file: !7796, line: 198, type: !32)
!8023 = !DILocalVariable(name: "associated_data", arg: 3, scope: !8019, file: !7796, line: 199, type: !490)
!8024 = !DILocalVariable(name: "alen", arg: 4, scope: !8019, file: !7796, line: 200, type: !32)
!8025 = !DILocalVariable(name: "payload", arg: 5, scope: !8019, file: !7796, line: 200, type: !490)
!8026 = !DILocalVariable(name: "plen", arg: 6, scope: !8019, file: !7796, line: 201, type: !32)
!8027 = !DILocalVariable(name: "c", arg: 7, scope: !8019, file: !7796, line: 201, type: !2747)
!8028 = !DILocalVariable(name: "b", scope: !8019, file: !7796, line: 215, type: !311)
!8029 = !DILocalVariable(name: "tag", scope: !8019, file: !7796, line: 216, type: !311)
!8030 = !DILocalVariable(name: "i", scope: !8019, file: !7796, line: 217, type: !32)
!8031 = !DILocation(line: 0, scope: !8019)
!8032 = !DILocation(line: 205, column: 11, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8019, file: !7796, line: 205, column: 6)
!8034 = !DILocation(line: 205, column: 29, scope: !8033)
!8035 = !DILocation(line: 207, column: 13, scope: !8033)
!8036 = !DILocation(line: 207, column: 18, scope: !8033)
!8037 = !DILocation(line: 208, column: 13, scope: !8033)
!8038 = !DILocation(line: 208, column: 18, scope: !8033)
!8039 = !DILocation(line: 211, column: 24, scope: !8033)
!8040 = !DILocation(line: 211, column: 19, scope: !8033)
!8041 = !DILocation(line: 211, column: 12, scope: !8033)
!8042 = !DILocation(line: 205, column: 6, scope: !8019)
!8043 = !DILocation(line: 215, column: 2, scope: !8019)
!8044 = !DILocation(line: 215, column: 10, scope: !8019)
!8045 = !DILocation(line: 216, column: 2, scope: !8019)
!8046 = !DILocation(line: 216, column: 10, scope: !8019)
!8047 = !DILocation(line: 222, column: 7, scope: !8019)
!8048 = !DILocation(line: 223, column: 2, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8019, file: !7796, line: 223, column: 2)
!8050 = !DILocation(line: 224, column: 21, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !7796, line: 223, column: 27)
!8052 = distinct !DILexicalBlock(scope: !8049, file: !7796, line: 223, column: 2)
!8053 = !DILocation(line: 224, column: 10, scope: !8051)
!8054 = !DILocation(line: 224, column: 3, scope: !8051)
!8055 = !DILocation(line: 224, column: 8, scope: !8051)
!8056 = !DILocation(line: 223, column: 22, scope: !8052)
!8057 = !DILocation(line: 223, column: 16, scope: !8052)
!8058 = distinct !{!8058, !8048, !8059}
!8059 = !DILocation(line: 225, column: 2, scope: !8049)
!8060 = !DILocation(line: 226, column: 10, scope: !8019)
!8061 = !DILocation(line: 226, column: 16, scope: !8019)
!8062 = !DILocation(line: 226, column: 2, scope: !8019)
!8063 = !DILocation(line: 226, column: 8, scope: !8019)
!8064 = !DILocation(line: 229, column: 67, scope: !8019)
!8065 = !DILocation(line: 229, column: 2, scope: !8019)
!8066 = !DILocation(line: 231, column: 16, scope: !8019)
!8067 = !DILocation(line: 231, column: 8, scope: !8019)
!8068 = !DILocation(line: 234, column: 33, scope: !8019)
!8069 = !DILocation(line: 234, column: 9, scope: !8019)
!8070 = !DILocation(line: 235, column: 16, scope: !8071)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !7796, line: 235, column: 2)
!8072 = distinct !DILexicalBlock(scope: !8019, file: !7796, line: 235, column: 2)
!8073 = !DILocation(line: 235, column: 2, scope: !8072)
!8074 = !DILocation(line: 236, column: 39, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8071, file: !7796, line: 235, column: 32)
!8076 = !DILocation(line: 236, column: 12, scope: !8075)
!8077 = !DILocation(line: 236, column: 46, scope: !8075)
!8078 = !DILocation(line: 236, column: 44, scope: !8075)
!8079 = !DILocation(line: 236, column: 3, scope: !8075)
!8080 = !DILocation(line: 236, column: 10, scope: !8075)
!8081 = !DILocation(line: 235, column: 27, scope: !8071)
!8082 = distinct !{!8082, !8073, !8083}
!8083 = !DILocation(line: 237, column: 2, scope: !8072)
!8084 = !DILocation(line: 242, column: 10, scope: !8019)
!8085 = !DILocation(line: 242, column: 51, scope: !8019)
!8086 = !DILocation(line: 242, column: 30, scope: !8019)
!8087 = !DILocation(line: 242, column: 9, scope: !8019)
!8088 = !DILocation(line: 242, column: 7, scope: !8019)
!8089 = !DILocation(line: 243, column: 2, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !8019, file: !7796, line: 243, column: 2)
!8091 = !DILocation(line: 244, column: 21, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !7796, line: 243, column: 27)
!8093 = distinct !DILexicalBlock(scope: !8090, file: !7796, line: 243, column: 2)
!8094 = !DILocation(line: 244, column: 10, scope: !8092)
!8095 = !DILocation(line: 244, column: 3, scope: !8092)
!8096 = !DILocation(line: 244, column: 8, scope: !8092)
!8097 = !DILocation(line: 243, column: 22, scope: !8093)
!8098 = !DILocation(line: 243, column: 16, scope: !8093)
!8099 = distinct !{!8099, !8089, !8100}
!8100 = !DILocation(line: 245, column: 2, scope: !8090)
!8101 = !DILocation(line: 246, column: 26, scope: !8019)
!8102 = !DILocation(line: 246, column: 37, scope: !8019)
!8103 = !DILocation(line: 246, column: 10, scope: !8019)
!8104 = !DILocation(line: 246, column: 8, scope: !8019)
!8105 = !DILocation(line: 247, column: 10, scope: !8019)
!8106 = !DILocation(line: 247, column: 8, scope: !8019)
!8107 = !DILocation(line: 250, column: 33, scope: !8019)
!8108 = !DILocation(line: 250, column: 9, scope: !8019)
!8109 = !DILocation(line: 251, column: 6, scope: !8019)
!8110 = !DILocation(line: 252, column: 47, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8112, file: !7796, line: 251, column: 16)
!8112 = distinct !DILexicalBlock(scope: !8019, file: !7796, line: 251, column: 6)
!8113 = !DILocation(line: 252, column: 3, scope: !8111)
!8114 = !DILocation(line: 253, column: 2, scope: !8111)
!8115 = !DILocation(line: 254, column: 6, scope: !8019)
!8116 = !DILocation(line: 255, column: 33, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !7796, line: 254, column: 16)
!8118 = distinct !DILexicalBlock(scope: !8019, file: !7796, line: 254, column: 6)
!8119 = !DILocation(line: 255, column: 28, scope: !8117)
!8120 = !DILocation(line: 255, column: 45, scope: !8117)
!8121 = !DILocation(line: 255, column: 3, scope: !8117)
!8122 = !DILocation(line: 256, column: 2, scope: !8117)
!8123 = !DILocation(line: 259, column: 26, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8019, file: !7796, line: 259, column: 6)
!8125 = !DILocation(line: 259, column: 6, scope: !8124)
!8126 = !DILocation(line: 259, column: 32, scope: !8124)
!8127 = !DILocation(line: 259, column: 6, scope: !8019)
!8128 = !DILocation(line: 263, column: 26, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8124, file: !7796, line: 261, column: 11)
!8130 = !DILocation(line: 263, column: 21, scope: !8129)
!8131 = !DILocation(line: 263, column: 3, scope: !8129)
!8132 = !DILocation(line: 264, column: 3, scope: !8129)
!8133 = !DILocation(line: 0, scope: !8124)
!8134 = !DILocation(line: 266, column: 1, scope: !8019)
!8135 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !8136, file: !8136, line: 57, type: !8137, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !8183)
!8136 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8137 = !DISubroutineType(types: !8138)
!8138 = !{null, !32, !8139}
!8139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8140, size: 32)
!8140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8141)
!8141 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2880, line: 141, baseType: !8142)
!8142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2880, line: 97, size: 256, elements: !8143)
!8143 = !{!8144}
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !8142, file: !2880, line: 107, baseType: !8145, size: 256)
!8145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2880, line: 98, size: 256, elements: !8146)
!8146 = !{!8147, !8152, !8157, !8162, !8167, !8172, !8177, !8182}
!8147 = !DIDerivedType(tag: DW_TAG_member, scope: !8145, file: !2880, line: 99, baseType: !8148, size: 32)
!8148 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8145, file: !2880, line: 99, size: 32, elements: !8149)
!8149 = !{!8150, !8151}
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !8148, file: !2880, line: 99, baseType: !208, size: 32)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !8148, file: !2880, line: 99, baseType: !208, size: 32)
!8152 = !DIDerivedType(tag: DW_TAG_member, scope: !8145, file: !2880, line: 100, baseType: !8153, size: 32, offset: 32)
!8153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8145, file: !2880, line: 100, size: 32, elements: !8154)
!8154 = !{!8155, !8156}
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !8153, file: !2880, line: 100, baseType: !208, size: 32)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !8153, file: !2880, line: 100, baseType: !208, size: 32)
!8157 = !DIDerivedType(tag: DW_TAG_member, scope: !8145, file: !2880, line: 101, baseType: !8158, size: 32, offset: 64)
!8158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8145, file: !2880, line: 101, size: 32, elements: !8159)
!8159 = !{!8160, !8161}
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !8158, file: !2880, line: 101, baseType: !208, size: 32)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !8158, file: !2880, line: 101, baseType: !208, size: 32)
!8162 = !DIDerivedType(tag: DW_TAG_member, scope: !8145, file: !2880, line: 102, baseType: !8163, size: 32, offset: 96)
!8163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8145, file: !2880, line: 102, size: 32, elements: !8164)
!8164 = !{!8165, !8166}
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !8163, file: !2880, line: 102, baseType: !208, size: 32)
!8166 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !8163, file: !2880, line: 102, baseType: !208, size: 32)
!8167 = !DIDerivedType(tag: DW_TAG_member, scope: !8145, file: !2880, line: 103, baseType: !8168, size: 32, offset: 128)
!8168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8145, file: !2880, line: 103, size: 32, elements: !8169)
!8169 = !{!8170, !8171}
!8170 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8168, file: !2880, line: 103, baseType: !208, size: 32)
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8168, file: !2880, line: 103, baseType: !208, size: 32)
!8172 = !DIDerivedType(tag: DW_TAG_member, scope: !8145, file: !2880, line: 104, baseType: !8173, size: 32, offset: 160)
!8173 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8145, file: !2880, line: 104, size: 32, elements: !8174)
!8174 = !{!8175, !8176}
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !8173, file: !2880, line: 104, baseType: !208, size: 32)
!8176 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8173, file: !2880, line: 104, baseType: !208, size: 32)
!8177 = !DIDerivedType(tag: DW_TAG_member, scope: !8145, file: !2880, line: 105, baseType: !8178, size: 32, offset: 192)
!8178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8145, file: !2880, line: 105, size: 32, elements: !8179)
!8179 = !{!8180, !8181}
!8180 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !8178, file: !2880, line: 105, baseType: !208, size: 32)
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8178, file: !2880, line: 105, baseType: !208, size: 32)
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !8145, file: !2880, line: 106, baseType: !208, size: 32, offset: 224)
!8183 = !{!8184, !8185}
!8184 = !DILocalVariable(name: "reason", arg: 1, scope: !8135, file: !8136, line: 57, type: !32)
!8185 = !DILocalVariable(name: "esf", arg: 2, scope: !8135, file: !8136, line: 57, type: !8139)
!8186 = !DILocation(line: 0, scope: !8135)
!8187 = !DILocation(line: 60, column: 10, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8135, file: !8136, line: 60, column: 6)
!8189 = !DILocation(line: 60, column: 6, scope: !8135)
!8190 = !DILocation(line: 61, column: 3, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8188, file: !8136, line: 60, column: 19)
!8192 = !DILocation(line: 62, column: 2, scope: !8191)
!8193 = !DILocation(line: 63, column: 2, scope: !8135)
!8194 = !DILocation(line: 64, column: 1, scope: !8135)
!8195 = distinct !DISubprogram(name: "esf_dump", scope: !8136, file: !8136, line: 20, type: !8196, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !8198)
!8196 = !DISubroutineType(types: !8197)
!8197 = !{null, !8139}
!8198 = !{!8199}
!8199 = !DILocalVariable(name: "esf", arg: 1, scope: !8195, file: !8136, line: 20, type: !8139)
!8200 = !DILocation(line: 0, scope: !8195)
!8201 = !DILocation(line: 22, column: 2, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !8136, line: 22, column: 2)
!8203 = distinct !DILexicalBlock(scope: !8204, file: !8136, line: 22, column: 2)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !8136, line: 22, column: 2)
!8205 = distinct !DILexicalBlock(scope: !8195, file: !8136, line: 22, column: 2)
!8206 = !DILocation(line: 24, column: 2, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8208, file: !8136, line: 24, column: 2)
!8208 = distinct !DILexicalBlock(scope: !8209, file: !8136, line: 24, column: 2)
!8209 = distinct !DILexicalBlock(scope: !8210, file: !8136, line: 24, column: 2)
!8210 = distinct !DILexicalBlock(scope: !8195, file: !8136, line: 24, column: 2)
!8211 = !DILocation(line: 26, column: 2, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8213, file: !8136, line: 26, column: 2)
!8213 = distinct !DILexicalBlock(scope: !8214, file: !8136, line: 26, column: 2)
!8214 = distinct !DILexicalBlock(scope: !8215, file: !8136, line: 26, column: 2)
!8215 = distinct !DILexicalBlock(scope: !8195, file: !8136, line: 26, column: 2)
!8216 = !DILocation(line: 53, column: 2, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8218, file: !8136, line: 53, column: 2)
!8218 = distinct !DILexicalBlock(scope: !8219, file: !8136, line: 53, column: 2)
!8219 = distinct !DILexicalBlock(scope: !8220, file: !8136, line: 53, column: 2)
!8220 = distinct !DILexicalBlock(scope: !8195, file: !8136, line: 53, column: 2)
!8221 = !DILocation(line: 55, column: 1, scope: !8195)
!8222 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !8136, file: !8136, line: 82, type: !8223, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !8238)
!8223 = !DISubroutineType(types: !8224)
!8224 = !{null, !8139, !8225}
!8225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8226, size: 32)
!8226 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8227)
!8227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8228)
!8228 = !{!8229, !8230, !8231, !8232, !8233, !8234, !8235, !8236, !8237}
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8227, file: !601, line: 26, baseType: !208, size: 32)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8227, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8227, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8232 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8227, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8227, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8227, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8227, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8227, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8227, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8238 = !{!8239, !8240, !8241}
!8239 = !DILocalVariable(name: "esf", arg: 1, scope: !8222, file: !8136, line: 82, type: !8139)
!8240 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !8222, file: !8136, line: 82, type: !8225)
!8241 = !DILocalVariable(name: "reason", scope: !8222, file: !8136, line: 88, type: !32)
!8242 = !DILocation(line: 0, scope: !8222)
!8243 = !DILocation(line: 88, column: 35, scope: !8222)
!8244 = !DILocation(line: 108, column: 2, scope: !8222)
!8245 = !DILocation(line: 131, column: 1, scope: !8222)
!8246 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !8136, file: !8136, line: 133, type: !8247, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2760, retainedNodes: !8249)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{null, !124}
!8249 = !{!8250, !8251, !8252}
!8250 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !8246, file: !8136, line: 133, type: !124)
!8251 = !DILocalVariable(name: "ssf_contents", scope: !8246, file: !8136, line: 135, type: !1027)
!8252 = !DILocalVariable(name: "oops_esf", scope: !8246, file: !8136, line: 136, type: !8141)
!8253 = !DILocation(line: 0, scope: !8246)
!8254 = !DILocation(line: 136, column: 2, scope: !8246)
!8255 = !DILocation(line: 136, column: 15, scope: !8246)
!8256 = !DILocation(line: 139, column: 22, scope: !8246)
!8257 = !DILocation(line: 139, column: 17, scope: !8246)
!8258 = !DILocation(line: 139, column: 20, scope: !8246)
!8259 = !DILocation(line: 141, column: 2, scope: !8246)
!8260 = !DILocation(line: 142, column: 2, scope: !8246)
!8261 = distinct !DISubprogram(name: "arch_irq_enable", scope: !8262, file: !8262, line: 40, type: !6854, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !8263)
!8262 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8263 = !{!8264}
!8264 = !DILocalVariable(name: "irq", arg: 1, scope: !8261, file: !8262, line: 40, type: !32)
!8265 = !DILocation(line: 0, scope: !8261)
!8266 = !DILocation(line: 42, column: 2, scope: !8261)
!8267 = !DILocation(line: 43, column: 1, scope: !8261)
!8268 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !680, file: !680, line: 1684, type: !8269, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !8271)
!8269 = !DISubroutineType(types: !8270)
!8270 = !{null, !934}
!8271 = !{!8272}
!8272 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8268, file: !680, line: 1684, type: !934)
!8273 = !DILocation(line: 0, scope: !8268)
!8274 = !DILocation(line: 1686, column: 23, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8268, file: !680, line: 1686, column: 7)
!8276 = !DILocation(line: 1686, column: 7, scope: !8268)
!8277 = !DILocation(line: 1688, column: 5, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8275, file: !680, line: 1687, column: 3)
!8279 = !{i64 2151025256}
!8280 = !DILocation(line: 1689, column: 81, scope: !8278)
!8281 = !DILocation(line: 1689, column: 60, scope: !8278)
!8282 = !DILocation(line: 1689, column: 34, scope: !8278)
!8283 = !DILocation(line: 1689, column: 5, scope: !8278)
!8284 = !DILocation(line: 1689, column: 43, scope: !8278)
!8285 = !DILocation(line: 1690, column: 5, scope: !8278)
!8286 = !{i64 2151025370}
!8287 = !DILocation(line: 1691, column: 3, scope: !8278)
!8288 = !DILocation(line: 1692, column: 1, scope: !8268)
!8289 = distinct !DISubprogram(name: "arch_irq_disable", scope: !8262, file: !8262, line: 45, type: !6854, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !8290)
!8290 = !{!8291}
!8291 = !DILocalVariable(name: "irq", arg: 1, scope: !8289, file: !8262, line: 45, type: !32)
!8292 = !DILocation(line: 0, scope: !8289)
!8293 = !DILocation(line: 47, column: 2, scope: !8289)
!8294 = !DILocation(line: 48, column: 1, scope: !8289)
!8295 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !680, file: !680, line: 1722, type: !8269, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !8296)
!8296 = !{!8297}
!8297 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8295, file: !680, line: 1722, type: !934)
!8298 = !DILocation(line: 0, scope: !8295)
!8299 = !DILocation(line: 1724, column: 23, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8295, file: !680, line: 1724, column: 7)
!8301 = !DILocation(line: 1724, column: 7, scope: !8295)
!8302 = !DILocation(line: 1726, column: 81, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8300, file: !680, line: 1725, column: 3)
!8304 = !DILocation(line: 1726, column: 60, scope: !8303)
!8305 = !DILocation(line: 1726, column: 34, scope: !8303)
!8306 = !DILocation(line: 1726, column: 5, scope: !8303)
!8307 = !DILocation(line: 1726, column: 43, scope: !8303)
!8308 = !DILocation(line: 271, column: 3, scope: !8309, inlinedAt: !8311)
!8309 = distinct !DISubprogram(name: "__DSB", scope: !8310, file: !8310, line: 269, type: !3297, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !639)
!8310 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8311 = distinct !DILocation(line: 1727, column: 5, scope: !8303)
!8312 = !{i64 3479639}
!8313 = !DILocation(line: 260, column: 3, scope: !8314, inlinedAt: !8315)
!8314 = distinct !DISubprogram(name: "__ISB", scope: !8310, file: !8310, line: 258, type: !3297, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !639)
!8315 = distinct !DILocation(line: 1728, column: 5, scope: !8303)
!8316 = !{i64 3479356}
!8317 = !DILocation(line: 1729, column: 3, scope: !8303)
!8318 = !DILocation(line: 1730, column: 1, scope: !8295)
!8319 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !8262, file: !8262, line: 50, type: !8320, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !8322)
!8320 = !DISubroutineType(types: !8321)
!8321 = !{!125, !32}
!8322 = !{!8323}
!8323 = !DILocalVariable(name: "irq", arg: 1, scope: !8319, file: !8262, line: 50, type: !32)
!8324 = !DILocation(line: 0, scope: !8319)
!8325 = !DILocation(line: 52, column: 20, scope: !8319)
!8326 = !DILocation(line: 52, column: 9, scope: !8319)
!8327 = !DILocation(line: 52, column: 41, scope: !8319)
!8328 = !DILocation(line: 52, column: 39, scope: !8319)
!8329 = !DILocation(line: 52, column: 2, scope: !8319)
!8330 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !8262, file: !8262, line: 64, type: !8331, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !8333)
!8331 = !DISubroutineType(types: !8332)
!8332 = !{null, !32, !32, !208}
!8333 = !{!8334, !8335, !8336}
!8334 = !DILocalVariable(name: "irq", arg: 1, scope: !8330, file: !8262, line: 64, type: !32)
!8335 = !DILocalVariable(name: "prio", arg: 2, scope: !8330, file: !8262, line: 64, type: !32)
!8336 = !DILocalVariable(name: "flags", arg: 3, scope: !8330, file: !8262, line: 64, type: !208)
!8337 = !DILocation(line: 0, scope: !8330)
!8338 = !DILocation(line: 83, column: 8, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8340, file: !8262, line: 82, column: 9)
!8340 = distinct !DILexicalBlock(scope: !8330, file: !8262, line: 76, column: 6)
!8341 = !DILocation(line: 95, column: 2, scope: !8330)
!8342 = !DILocation(line: 96, column: 1, scope: !8330)
!8343 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8344, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !8346)
!8344 = !DISubroutineType(types: !8345)
!8345 = !{null, !934, !208}
!8346 = !{!8347, !8348}
!8347 = !DILocalVariable(name: "IRQn", arg: 1, scope: !8343, file: !680, line: 1814, type: !934)
!8348 = !DILocalVariable(name: "priority", arg: 2, scope: !8343, file: !680, line: 1814, type: !208)
!8349 = !DILocation(line: 0, scope: !8343)
!8350 = !DILocation(line: 0, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8343, file: !680, line: 1816, column: 7)
!8352 = !DILocation(line: 1816, column: 7, scope: !8343)
!8353 = !DILocation(line: 1824, column: 1, scope: !8343)
!8354 = distinct !DISubprogram(name: "z_irq_spurious", scope: !8262, file: !8262, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2771, retainedNodes: !8355)
!8355 = !{!8356}
!8356 = !DILocalVariable(name: "unused", arg: 1, scope: !8354, file: !8262, line: 155, type: !13)
!8357 = !DILocation(line: 0, scope: !8354)
!8358 = !DILocation(line: 159, column: 2, scope: !8354)
!8359 = !DILocation(line: 160, column: 1, scope: !8354)
!8360 = distinct !DISubprogram(name: "z_arm_nmi", scope: !8361, file: !8361, line: 87, type: !3297, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2817, retainedNodes: !639)
!8361 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8362 = !DILocation(line: 89, column: 2, scope: !8360)
!8363 = !DILocation(line: 90, column: 2, scope: !8360)
!8364 = !DILocation(line: 91, column: 1, scope: !8360)
!8365 = !DISubprogram(name: "z_SysNmiOnReset", scope: !8361, file: !8361, line: 23, type: !3297, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8366 = !DISubprogram(name: "z_arm_int_exit", scope: !8367, file: !8367, line: 153, type: !3297, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!8367 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8368 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !8369, file: !8369, line: 256, type: !3297, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !639)
!8369 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8370 = !DILocation(line: 258, column: 2, scope: !8368)
!8371 = !DILocation(line: 260, column: 2, scope: !8368)
!8372 = !DILocation(line: 262, column: 2, scope: !8368)
!8373 = !DILocation(line: 263, column: 2, scope: !8368)
!8374 = !DILocation(line: 267, column: 2, scope: !8368)
!8375 = !DILocation(line: 268, column: 2, scope: !8368)
!8376 = distinct !DISubprogram(name: "relocate_vector_table", scope: !8369, file: !8369, line: 53, type: !3297, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !639)
!8377 = !DILocation(line: 55, column: 12, scope: !8376)
!8378 = !DILocation(line: 271, column: 3, scope: !8379, inlinedAt: !8380)
!8379 = distinct !DISubprogram(name: "__DSB", scope: !8310, file: !8310, line: 269, type: !3297, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !639)
!8380 = distinct !DILocation(line: 56, column: 2, scope: !8376)
!8381 = !{i64 3478310}
!8382 = !DILocation(line: 260, column: 3, scope: !8383, inlinedAt: !8384)
!8383 = distinct !DISubprogram(name: "__ISB", scope: !8310, file: !8310, line: 258, type: !3297, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !639)
!8384 = distinct !DILocation(line: 57, column: 2, scope: !8376)
!8385 = !{i64 3478027}
!8386 = !DILocation(line: 58, column: 1, scope: !8376)
!8387 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !8369, file: !8369, line: 96, type: !3297, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !639)
!8388 = !DILocation(line: 103, column: 13, scope: !8387)
!8389 = !DILocation(line: 975, column: 3, scope: !8390, inlinedAt: !8395)
!8390 = distinct !DISubprogram(name: "__get_CONTROL", scope: !8310, file: !8310, line: 971, type: !8391, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !8393)
!8391 = !DISubroutineType(types: !8392)
!8392 = !{!208}
!8393 = !{!8394}
!8394 = !DILocalVariable(name: "result", scope: !8390, file: !8310, line: 973, type: !208)
!8395 = distinct !DILocation(line: 189, column: 16, scope: !8387)
!8396 = !{i64 3499140}
!8397 = !DILocation(line: 0, scope: !8390, inlinedAt: !8395)
!8398 = !DILocation(line: 189, column: 32, scope: !8387)
!8399 = !DILocalVariable(name: "control", arg: 1, scope: !8400, file: !8310, line: 1001, type: !208)
!8400 = distinct !DISubprogram(name: "__set_CONTROL", scope: !8310, file: !8310, line: 1001, type: !8401, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2819, retainedNodes: !8403)
!8401 = !DISubroutineType(types: !8402)
!8402 = !{null, !208}
!8403 = !{!8399}
!8404 = !DILocation(line: 0, scope: !8400, inlinedAt: !8405)
!8405 = distinct !DILocation(line: 189, column: 2, scope: !8387)
!8406 = !DILocation(line: 1003, column: 3, scope: !8400, inlinedAt: !8405)
!8407 = !{i64 3499860}
!8408 = !DILocation(line: 260, column: 3, scope: !8383, inlinedAt: !8409)
!8409 = distinct !DILocation(line: 1004, column: 3, scope: !8400, inlinedAt: !8405)
!8410 = !DILocation(line: 191, column: 1, scope: !8387)
!8411 = distinct !DISubprogram(name: "arch_swap", scope: !8412, file: !8412, line: 33, type: !8320, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !8413)
!8412 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8413 = !{!8414}
!8414 = !DILocalVariable(name: "key", arg: 1, scope: !8411, file: !8412, line: 33, type: !32)
!8415 = !DILocation(line: 0, scope: !8411)
!8416 = !DILocation(line: 36, column: 2, scope: !8411)
!8417 = !DILocation(line: 36, column: 17, scope: !8411)
!8418 = !DILocation(line: 36, column: 25, scope: !8411)
!8419 = !DILocation(line: 37, column: 37, scope: !8411)
!8420 = !DILocation(line: 37, column: 17, scope: !8411)
!8421 = !DILocation(line: 37, column: 35, scope: !8411)
!8422 = !DILocation(line: 41, column: 12, scope: !8411)
!8423 = !DILocalVariable(name: "key", arg: 1, scope: !8424, file: !6843, line: 84, type: !32)
!8424 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6843, file: !6843, line: 84, type: !6854, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2847, retainedNodes: !8425)
!8425 = !{!8423}
!8426 = !DILocation(line: 0, scope: !8424, inlinedAt: !8427)
!8427 = distinct !DILocation(line: 44, column: 2, scope: !8411)
!8428 = !DILocation(line: 95, column: 2, scope: !8424, inlinedAt: !8427)
!8429 = !{i64 2240374}
!8430 = !DILocation(line: 53, column: 9, scope: !8411)
!8431 = !DILocation(line: 53, column: 24, scope: !8411)
!8432 = !DILocation(line: 53, column: 2, scope: !8411)
!8433 = distinct !DISubprogram(name: "arch_new_thread", scope: !8434, file: !8434, line: 56, type: !8435, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2875, retainedNodes: !8542)
!8434 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8435 = !DISubroutineType(types: !8436)
!8436 = !{null, !8437, !8537, !393, !5247, !124, !124, !124}
!8437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8438, size: 32)
!8438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !8439)
!8439 = !{!8440, !8498, !8510, !8511, !8512, !8513, !8519, !8532}
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8438, file: !531, line: 247, baseType: !8441, size: 384)
!8441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !8442)
!8442 = !{!8443, !8467, !8474, !8475, !8476, !8485, !8486, !8487}
!8443 = !DIDerivedType(tag: DW_TAG_member, scope: !8441, file: !531, line: 60, baseType: !8444, size: 64)
!8444 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8441, file: !531, line: 60, size: 64, elements: !8445)
!8445 = !{!8446, !8461}
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !8444, file: !531, line: 61, baseType: !8447, size: 64)
!8447 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !8448)
!8448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !8449)
!8449 = !{!8450, !8456}
!8450 = !DIDerivedType(tag: DW_TAG_member, scope: !8448, file: !541, line: 38, baseType: !8451, size: 32)
!8451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8448, file: !541, line: 38, size: 32, elements: !8452)
!8452 = !{!8453, !8455}
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !8451, file: !541, line: 39, baseType: !8454, size: 32)
!8454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8448, size: 32)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8451, file: !541, line: 40, baseType: !8454, size: 32)
!8456 = !DIDerivedType(tag: DW_TAG_member, scope: !8448, file: !541, line: 42, baseType: !8457, size: 32, offset: 32)
!8457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8448, file: !541, line: 42, size: 32, elements: !8458)
!8458 = !{!8459, !8460}
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !8457, file: !541, line: 43, baseType: !8454, size: 32)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !8457, file: !541, line: 44, baseType: !8454, size: 32)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !8444, file: !531, line: 62, baseType: !8462, size: 64)
!8462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !8463)
!8463 = !{!8464}
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !8462, file: !557, line: 50, baseType: !8465, size: 64)
!8465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8466, size: 64, elements: !562)
!8466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8462, size: 32)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !8441, file: !531, line: 68, baseType: !8468, size: 32, offset: 64)
!8468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8469, size: 32)
!8469 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !8470)
!8470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !8471)
!8471 = !{!8472}
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !8470, file: !567, line: 232, baseType: !8473, size: 64)
!8473 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !8448)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !8441, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !8441, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!8476 = !DIDerivedType(tag: DW_TAG_member, scope: !8441, file: !531, line: 90, baseType: !8477, size: 16, offset: 112)
!8477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8441, file: !531, line: 90, size: 16, elements: !8478)
!8478 = !{!8479, !8484}
!8479 = !DIDerivedType(tag: DW_TAG_member, scope: !8477, file: !531, line: 91, baseType: !8480, size: 16)
!8480 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8477, file: !531, line: 91, size: 16, elements: !8481)
!8481 = !{!8482, !8483}
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !8480, file: !531, line: 96, baseType: !581, size: 8)
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !8480, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !8477, file: !531, line: 100, baseType: !227, size: 16)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !8441, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!8486 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !8441, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!8487 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8441, file: !531, line: 131, baseType: !8488, size: 192, offset: 192)
!8488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !8489)
!8489 = !{!8490, !8491, !8497}
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !8488, file: !567, line: 245, baseType: !8447, size: 64)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !8488, file: !567, line: 246, baseType: !8492, size: 32, offset: 64)
!8492 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !8493)
!8493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8494, size: 32)
!8494 = !DISubroutineType(types: !8495)
!8495 = !{null, !8496}
!8496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8488, size: 32)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !8488, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !8438, file: !531, line: 250, baseType: !8499, size: 288, offset: 384)
!8499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8500)
!8500 = !{!8501, !8502, !8503, !8504, !8505, !8506, !8507, !8508, !8509}
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8499, file: !601, line: 26, baseType: !208, size: 32)
!8502 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8499, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8499, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8499, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8499, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8506 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8499, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8507 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8499, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8499, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8499, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !8438, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !8438, file: !531, line: 256, baseType: !8469, size: 64, offset: 704)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !8438, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !8438, file: !531, line: 300, baseType: !8514, size: 96, offset: 800)
!8514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !8515)
!8515 = !{!8516, !8517, !8518}
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8514, file: !531, line: 153, baseType: !22, size: 32)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8514, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !8514, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !8438, file: !531, line: 325, baseType: !8520, size: 32, offset: 896)
!8520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8521, size: 32)
!8521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !8522)
!8522 = !{!8523, !8529, !8530}
!8523 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8521, file: !624, line: 5074, baseType: !8524, size: 96)
!8524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !8525)
!8525 = !{!8526, !8527, !8528}
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !8524, file: !628, line: 57, baseType: !631, size: 32)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !8524, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!8528 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !8524, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!8529 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8521, file: !624, line: 5075, baseType: !8469, size: 64, offset: 96)
!8530 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8521, file: !624, line: 5076, baseType: !8531, offset: 160)
!8531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8438, file: !531, line: 343, baseType: !8533, size: 64, offset: 928)
!8533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !8534)
!8534 = !{!8535, !8536}
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !8533, file: !601, line: 63, baseType: !208, size: 32)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !8533, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!8537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8538, size: 32)
!8538 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5248, line: 44, baseType: !8539)
!8539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2354, line: 47, size: 8, elements: !8540)
!8540 = !{!8541}
!8541 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8539, file: !2354, line: 48, baseType: !142, size: 8)
!8542 = !{!8543, !8544, !8545, !8546, !8547, !8548, !8549, !8550}
!8543 = !DILocalVariable(name: "thread", arg: 1, scope: !8433, file: !8434, line: 56, type: !8437)
!8544 = !DILocalVariable(name: "stack", arg: 2, scope: !8433, file: !8434, line: 56, type: !8537)
!8545 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !8433, file: !8434, line: 57, type: !393)
!8546 = !DILocalVariable(name: "entry", arg: 4, scope: !8433, file: !8434, line: 57, type: !5247)
!8547 = !DILocalVariable(name: "p1", arg: 5, scope: !8433, file: !8434, line: 58, type: !124)
!8548 = !DILocalVariable(name: "p2", arg: 6, scope: !8433, file: !8434, line: 58, type: !124)
!8549 = !DILocalVariable(name: "p3", arg: 7, scope: !8433, file: !8434, line: 58, type: !124)
!8550 = !DILocalVariable(name: "iframe", scope: !8433, file: !8434, line: 60, type: !2878)
!8551 = !DILocation(line: 0, scope: !8433)
!8552 = !DILocation(line: 85, column: 11, scope: !8433)
!8553 = !DILocation(line: 93, column: 10, scope: !8433)
!8554 = !DILocation(line: 98, column: 13, scope: !8433)
!8555 = !DILocation(line: 100, column: 15, scope: !8433)
!8556 = !DILocation(line: 100, column: 10, scope: !8433)
!8557 = !DILocation(line: 100, column: 13, scope: !8433)
!8558 = !DILocation(line: 101, column: 15, scope: !8433)
!8559 = !DILocation(line: 101, column: 10, scope: !8433)
!8560 = !DILocation(line: 101, column: 13, scope: !8433)
!8561 = !DILocation(line: 102, column: 15, scope: !8433)
!8562 = !DILocation(line: 102, column: 10, scope: !8433)
!8563 = !DILocation(line: 102, column: 13, scope: !8433)
!8564 = !DILocation(line: 103, column: 15, scope: !8433)
!8565 = !DILocation(line: 103, column: 10, scope: !8433)
!8566 = !DILocation(line: 103, column: 13, scope: !8433)
!8567 = !DILocation(line: 106, column: 10, scope: !8433)
!8568 = !DILocation(line: 106, column: 15, scope: !8433)
!8569 = !DILocation(line: 122, column: 29, scope: !8433)
!8570 = !DILocation(line: 122, column: 23, scope: !8433)
!8571 = !DILocation(line: 122, column: 27, scope: !8433)
!8572 = !DILocation(line: 123, column: 15, scope: !8433)
!8573 = !DILocation(line: 123, column: 23, scope: !8433)
!8574 = !DILocation(line: 143, column: 1, scope: !8433)
!8575 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !8434, file: !8434, line: 385, type: !8576, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2875, retainedNodes: !8579)
!8576 = !DISubroutineType(types: !8577)
!8577 = !{!208, !8578, !8578}
!8578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !208)
!8579 = !{!8580, !8581, !8582, !8585}
!8580 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !8575, file: !8434, line: 385, type: !8578)
!8581 = !DILocalVariable(name: "psp", arg: 2, scope: !8575, file: !8434, line: 385, type: !8578)
!8582 = !DILocalVariable(name: "thread", scope: !8575, file: !8434, line: 388, type: !8583)
!8583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8584, size: 32)
!8584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8438)
!8585 = !DILocalVariable(name: "guard_len", scope: !8575, file: !8434, line: 405, type: !208)
!8586 = !DILocation(line: 0, scope: !8575)
!8587 = !DILocation(line: 388, column: 34, scope: !8575)
!8588 = !DILocation(line: 390, column: 13, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8575, file: !8434, line: 390, column: 6)
!8590 = !DILocation(line: 390, column: 6, scope: !8575)
!8591 = !DILocation(line: 438, column: 6, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8575, file: !8434, line: 438, column: 6)
!8593 = !DILocation(line: 438, column: 6, scope: !8575)
!8594 = !DILocation(line: 442, column: 3, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8592, file: !8434, line: 440, column: 22)
!8596 = !DILocation(line: 455, column: 1, scope: !8575)
!8597 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !8434, file: !8434, line: 530, type: !8598, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2875, retainedNodes: !8600)
!8598 = !DISubroutineType(types: !8599)
!8599 = !{null, !8437, !393, !5247}
!8600 = !{!8601, !8602, !8603}
!8601 = !DILocalVariable(name: "main_thread", arg: 1, scope: !8597, file: !8434, line: 530, type: !8437)
!8602 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !8597, file: !8434, line: 530, type: !393)
!8603 = !DILocalVariable(name: "_main", arg: 3, scope: !8597, file: !8434, line: 531, type: !5247)
!8604 = !DILocation(line: 0, scope: !8597)
!8605 = !DILocation(line: 535, column: 11, scope: !8597)
!8606 = !DILocation(line: 560, column: 2, scope: !8597)
!8607 = !DILocation(line: 576, column: 2, scope: !8597)
!8608 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!8609 = !DILocation(line: 603, column: 2, scope: !8597)
!8610 = distinct !DISubprogram(name: "z_arm_fault", scope: !8611, file: !8611, line: 1036, type: !8612, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !8627)
!8611 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8612 = !DISubroutineType(types: !8613)
!8613 = !{null, !208, !208, !208, !8614}
!8614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8615, size: 32)
!8615 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !601, line: 37, baseType: !8616)
!8616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !8617)
!8617 = !{!8618, !8619, !8620, !8621, !8622, !8623, !8624, !8625, !8626}
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !8616, file: !601, line: 26, baseType: !208, size: 32)
!8619 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !8616, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!8620 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !8616, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !8616, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !8616, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !8616, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !8616, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !8616, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !8616, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!8627 = !{!8628, !8629, !8630, !8631, !8632, !8633, !8634, !8635, !8636, !8637}
!8628 = !DILocalVariable(name: "msp", arg: 1, scope: !8610, file: !8611, line: 1036, type: !208)
!8629 = !DILocalVariable(name: "psp", arg: 2, scope: !8610, file: !8611, line: 1036, type: !208)
!8630 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8610, file: !8611, line: 1036, type: !208)
!8631 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !8610, file: !8611, line: 1037, type: !8614)
!8632 = !DILocalVariable(name: "reason", scope: !8610, file: !8611, line: 1039, type: !208)
!8633 = !DILocalVariable(name: "fault", scope: !8610, file: !8611, line: 1040, type: !125)
!8634 = !DILocalVariable(name: "recoverable", scope: !8610, file: !8611, line: 1041, type: !153)
!8635 = !DILocalVariable(name: "nested_exc", scope: !8610, file: !8611, line: 1041, type: !153)
!8636 = !DILocalVariable(name: "esf", scope: !8610, file: !8611, line: 1042, type: !2946)
!8637 = !DILocalVariable(name: "esf_copy", scope: !8610, file: !8611, line: 1047, type: !2947)
!8638 = !DILocation(line: 0, scope: !8610)
!8639 = !DILocation(line: 1040, column: 19, scope: !8610)
!8640 = !DILocation(line: 1040, column: 24, scope: !8610)
!8641 = !DILocation(line: 1041, column: 2, scope: !8610)
!8642 = !DILocation(line: 1047, column: 2, scope: !8610)
!8643 = !DILocation(line: 1047, column: 15, scope: !8610)
!8644 = !DILocalVariable(name: "key", arg: 1, scope: !8645, file: !6843, line: 84, type: !32)
!8645 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6843, file: !6843, line: 84, type: !6854, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !8646)
!8646 = !{!8644}
!8647 = !DILocation(line: 0, scope: !8645, inlinedAt: !8648)
!8648 = distinct !DILocation(line: 1050, column: 2, scope: !8610)
!8649 = !DILocation(line: 95, column: 2, scope: !8645, inlinedAt: !8648)
!8650 = !{i64 2273618}
!8651 = !DILocation(line: 1055, column: 9, scope: !8610)
!8652 = !DILocation(line: 1063, column: 11, scope: !8610)
!8653 = !DILocation(line: 1064, column: 6, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8610, file: !8611, line: 1064, column: 6)
!8655 = !{i8 0, i8 2}
!8656 = !DILocation(line: 1064, column: 6, scope: !8610)
!8657 = !DILocation(line: 1070, column: 20, scope: !8610)
!8658 = !DILocation(line: 1070, column: 2, scope: !8610)
!8659 = !DILocation(line: 1089, column: 6, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8610, file: !8611, line: 1089, column: 6)
!8661 = !DILocation(line: 0, scope: !8660)
!8662 = !DILocation(line: 1089, column: 6, scope: !8610)
!8663 = !DILocation(line: 1090, column: 28, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8665, file: !8611, line: 1090, column: 7)
!8665 = distinct !DILexicalBlock(scope: !8660, file: !8611, line: 1089, column: 18)
!8666 = !DILocation(line: 1090, column: 44, scope: !8664)
!8667 = !DILocation(line: 1090, column: 7, scope: !8665)
!8668 = !DILocation(line: 1091, column: 24, scope: !8669)
!8669 = distinct !DILexicalBlock(scope: !8664, file: !8611, line: 1090, column: 50)
!8670 = !DILocation(line: 1092, column: 3, scope: !8669)
!8671 = !DILocation(line: 1094, column: 23, scope: !8672)
!8672 = distinct !DILexicalBlock(scope: !8660, file: !8611, line: 1093, column: 9)
!8673 = !DILocation(line: 1097, column: 2, scope: !8610)
!8674 = !DILocation(line: 1098, column: 1, scope: !8610)
!8675 = distinct !DISubprogram(name: "get_esf", scope: !8611, file: !8611, line: 894, type: !8676, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !8679)
!8676 = !DISubroutineType(types: !8677)
!8677 = !{!2946, !208, !208, !208, !8678}
!8678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!8679 = !{!8680, !8681, !8682, !8683, !8684, !8685}
!8680 = !DILocalVariable(name: "msp", arg: 1, scope: !8675, file: !8611, line: 894, type: !208)
!8681 = !DILocalVariable(name: "psp", arg: 2, scope: !8675, file: !8611, line: 894, type: !208)
!8682 = !DILocalVariable(name: "exc_return", arg: 3, scope: !8675, file: !8611, line: 894, type: !208)
!8683 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !8675, file: !8611, line: 895, type: !8678)
!8684 = !DILocalVariable(name: "alternative_state_exc", scope: !8675, file: !8611, line: 897, type: !153)
!8685 = !DILocalVariable(name: "ptr_esf", scope: !8675, file: !8611, line: 898, type: !2946)
!8686 = !DILocation(line: 0, scope: !8675)
!8687 = !DILocation(line: 900, column: 14, scope: !8675)
!8688 = !DILocation(line: 902, column: 49, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8675, file: !8611, line: 902, column: 6)
!8690 = !DILocation(line: 902, column: 6, scope: !8675)
!8691 = !DILocation(line: 983, column: 44, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8675, file: !8611, line: 983, column: 6)
!8693 = !DILocation(line: 985, column: 3, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8695, file: !8611, line: 985, column: 3)
!8695 = distinct !DILexicalBlock(scope: !8696, file: !8611, line: 985, column: 3)
!8696 = distinct !DILexicalBlock(scope: !8697, file: !8611, line: 985, column: 3)
!8697 = distinct !DILexicalBlock(scope: !8698, file: !8611, line: 985, column: 3)
!8698 = distinct !DILexicalBlock(scope: !8692, file: !8611, line: 984, column: 47)
!8699 = !DILocation(line: 986, column: 3, scope: !8698)
!8700 = !DILocation(line: 983, column: 18, scope: !8692)
!8701 = !DILocation(line: 991, column: 7, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8703, file: !8611, line: 990, column: 30)
!8703 = distinct !DILexicalBlock(scope: !8675, file: !8611, line: 990, column: 6)
!8704 = !DILocation(line: 998, column: 16, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !8611, line: 995, column: 10)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !8611, line: 991, column: 7)
!8707 = !DILocation(line: 1002, column: 2, scope: !8675)
!8708 = !DILocation(line: 1003, column: 1, scope: !8675)
!8709 = distinct !DISubprogram(name: "fault_handle", scope: !8611, file: !8611, line: 786, type: !8710, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !8712)
!8710 = !DISubroutineType(types: !8711)
!8711 = !{!208, !2946, !125, !8678}
!8712 = !{!8713, !8714, !8715, !8716}
!8713 = !DILocalVariable(name: "esf", arg: 1, scope: !8709, file: !8611, line: 786, type: !2946)
!8714 = !DILocalVariable(name: "fault", arg: 2, scope: !8709, file: !8611, line: 786, type: !125)
!8715 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8709, file: !8611, line: 786, type: !8678)
!8716 = !DILocalVariable(name: "reason", scope: !8709, file: !8611, line: 788, type: !208)
!8717 = !DILocation(line: 0, scope: !8709)
!8718 = !DILocation(line: 790, column: 15, scope: !8709)
!8719 = !DILocation(line: 792, column: 2, scope: !8709)
!8720 = !DILocation(line: 794, column: 12, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8709, file: !8611, line: 792, column: 17)
!8722 = !DILocation(line: 795, column: 3, scope: !8721)
!8723 = !DILocation(line: 800, column: 12, scope: !8721)
!8724 = !DILocation(line: 801, column: 3, scope: !8721)
!8725 = !DILocation(line: 803, column: 12, scope: !8721)
!8726 = !DILocation(line: 804, column: 3, scope: !8721)
!8727 = !DILocation(line: 806, column: 12, scope: !8721)
!8728 = !DILocation(line: 807, column: 3, scope: !8721)
!8729 = !DILocation(line: 814, column: 3, scope: !8721)
!8730 = !DILocation(line: 815, column: 3, scope: !8721)
!8731 = !DILocation(line: 820, column: 3, scope: !8721)
!8732 = !DILocation(line: 821, column: 3, scope: !8721)
!8733 = !DILocation(line: 829, column: 2, scope: !8709)
!8734 = distinct !DISubprogram(name: "hard_fault", scope: !8611, file: !8611, line: 709, type: !8735, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !8737)
!8735 = !DISubroutineType(types: !8736)
!8736 = !{!208, !2946, !8678}
!8737 = !{!8738, !8739, !8740}
!8738 = !DILocalVariable(name: "esf", arg: 1, scope: !8734, file: !8611, line: 709, type: !2946)
!8739 = !DILocalVariable(name: "recoverable", arg: 2, scope: !8734, file: !8611, line: 709, type: !8678)
!8740 = !DILocalVariable(name: "reason", scope: !8734, file: !8611, line: 711, type: !208)
!8741 = !DILocation(line: 0, scope: !8734)
!8742 = !DILocation(line: 713, column: 2, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8744, file: !8611, line: 713, column: 2)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !8611, line: 713, column: 2)
!8745 = distinct !DILexicalBlock(scope: !8746, file: !8611, line: 713, column: 2)
!8746 = distinct !DILexicalBlock(scope: !8734, file: !8611, line: 713, column: 2)
!8747 = !DILocation(line: 732, column: 15, scope: !8734)
!8748 = !DILocation(line: 734, column: 12, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8734, file: !8611, line: 734, column: 6)
!8750 = !DILocation(line: 734, column: 17, scope: !8749)
!8751 = !DILocation(line: 734, column: 41, scope: !8749)
!8752 = !DILocation(line: 734, column: 6, scope: !8734)
!8753 = !DILocation(line: 735, column: 3, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8755, file: !8611, line: 735, column: 3)
!8755 = distinct !DILexicalBlock(scope: !8756, file: !8611, line: 735, column: 3)
!8756 = distinct !DILexicalBlock(scope: !8757, file: !8611, line: 735, column: 3)
!8757 = distinct !DILexicalBlock(scope: !8758, file: !8611, line: 735, column: 3)
!8758 = distinct !DILexicalBlock(scope: !8749, file: !8611, line: 734, column: 47)
!8759 = !DILocation(line: 736, column: 2, scope: !8758)
!8760 = !DILocation(line: 736, column: 19, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8749, file: !8611, line: 736, column: 13)
!8762 = !DILocation(line: 736, column: 49, scope: !8761)
!8763 = !DILocation(line: 736, column: 13, scope: !8749)
!8764 = !DILocation(line: 737, column: 3, scope: !8765)
!8765 = distinct !DILexicalBlock(scope: !8766, file: !8611, line: 737, column: 3)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !8611, line: 737, column: 3)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !8611, line: 737, column: 3)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !8611, line: 737, column: 3)
!8769 = distinct !DILexicalBlock(scope: !8761, file: !8611, line: 736, column: 55)
!8770 = !DILocation(line: 738, column: 2, scope: !8769)
!8771 = !DILocation(line: 738, column: 19, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8761, file: !8611, line: 738, column: 13)
!8773 = !DILocation(line: 738, column: 24, scope: !8772)
!8774 = !DILocation(line: 738, column: 47, scope: !8772)
!8775 = !DILocation(line: 738, column: 13, scope: !8761)
!8776 = !DILocation(line: 739, column: 3, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !8611, line: 739, column: 3)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !8611, line: 739, column: 3)
!8779 = distinct !DILexicalBlock(scope: !8780, file: !8611, line: 739, column: 3)
!8780 = distinct !DILexicalBlock(scope: !8781, file: !8611, line: 739, column: 3)
!8781 = distinct !DILexicalBlock(scope: !8772, file: !8611, line: 738, column: 53)
!8782 = !DILocation(line: 740, column: 7, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8781, file: !8611, line: 740, column: 7)
!8784 = !DILocation(line: 740, column: 7, scope: !8781)
!8785 = !DILocation(line: 741, column: 4, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8787, file: !8611, line: 741, column: 4)
!8787 = distinct !DILexicalBlock(scope: !8788, file: !8611, line: 741, column: 4)
!8788 = distinct !DILexicalBlock(scope: !8789, file: !8611, line: 741, column: 4)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !8611, line: 741, column: 4)
!8790 = distinct !DILexicalBlock(scope: !8783, file: !8611, line: 740, column: 38)
!8791 = !DILocation(line: 742, column: 24, scope: !8790)
!8792 = !DILocation(line: 743, column: 3, scope: !8790)
!8793 = !DILocation(line: 743, column: 20, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8783, file: !8611, line: 743, column: 14)
!8795 = !DILocation(line: 743, column: 25, scope: !8794)
!8796 = !DILocation(line: 743, column: 52, scope: !8794)
!8797 = !DILocation(line: 743, column: 14, scope: !8783)
!8798 = !DILocation(line: 744, column: 13, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8794, file: !8611, line: 743, column: 58)
!8800 = !DILocation(line: 745, column: 3, scope: !8799)
!8801 = !DILocation(line: 745, column: 20, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8794, file: !8611, line: 745, column: 14)
!8803 = !DILocation(line: 745, column: 25, scope: !8802)
!8804 = !DILocation(line: 745, column: 52, scope: !8802)
!8805 = !DILocation(line: 745, column: 14, scope: !8794)
!8806 = !DILocation(line: 746, column: 13, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8802, file: !8611, line: 745, column: 58)
!8808 = !DILocation(line: 747, column: 3, scope: !8807)
!8809 = !DILocation(line: 747, column: 20, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8802, file: !8611, line: 747, column: 14)
!8811 = !DILocation(line: 747, column: 52, scope: !8810)
!8812 = !DILocation(line: 747, column: 14, scope: !8802)
!8813 = !DILocation(line: 748, column: 13, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8810, file: !8611, line: 747, column: 58)
!8815 = !DILocation(line: 753, column: 3, scope: !8814)
!8816 = !DILocation(line: 766, column: 2, scope: !8734)
!8817 = distinct !DISubprogram(name: "mem_manage_fault", scope: !8611, file: !8611, line: 229, type: !8710, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !8818)
!8818 = !{!8819, !8820, !8821, !8822, !8823, !8824, !8827}
!8819 = !DILocalVariable(name: "esf", arg: 1, scope: !8817, file: !8611, line: 229, type: !2946)
!8820 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8817, file: !8611, line: 229, type: !125)
!8821 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8817, file: !8611, line: 230, type: !8678)
!8822 = !DILocalVariable(name: "reason", scope: !8817, file: !8611, line: 232, type: !208)
!8823 = !DILocalVariable(name: "mmfar", scope: !8817, file: !8611, line: 233, type: !208)
!8824 = !DILocalVariable(name: "temp", scope: !8825, file: !8611, line: 254, type: !208)
!8825 = distinct !DILexicalBlock(scope: !8826, file: !8611, line: 244, column: 48)
!8826 = distinct !DILexicalBlock(scope: !8817, file: !8611, line: 244, column: 6)
!8827 = !DILocalVariable(name: "min_stack_ptr", scope: !8828, file: !8611, line: 309, type: !208)
!8828 = distinct !DILexicalBlock(scope: !8829, file: !8611, line: 308, column: 43)
!8829 = distinct !DILexicalBlock(scope: !8830, file: !8611, line: 308, column: 7)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !8611, line: 289, column: 40)
!8831 = distinct !DILexicalBlock(scope: !8817, file: !8611, line: 288, column: 6)
!8832 = !DILocation(line: 0, scope: !8817)
!8833 = !DILocation(line: 235, column: 2, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !8611, line: 235, column: 2)
!8835 = distinct !DILexicalBlock(scope: !8836, file: !8611, line: 235, column: 2)
!8836 = distinct !DILexicalBlock(scope: !8837, file: !8611, line: 235, column: 2)
!8837 = distinct !DILexicalBlock(scope: !8817, file: !8611, line: 235, column: 2)
!8838 = !DILocation(line: 237, column: 12, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8817, file: !8611, line: 237, column: 6)
!8840 = !DILocation(line: 237, column: 17, scope: !8839)
!8841 = !DILocation(line: 237, column: 41, scope: !8839)
!8842 = !DILocation(line: 237, column: 6, scope: !8817)
!8843 = !DILocation(line: 238, column: 3, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8845, file: !8611, line: 238, column: 3)
!8845 = distinct !DILexicalBlock(scope: !8846, file: !8611, line: 238, column: 3)
!8846 = distinct !DILexicalBlock(scope: !8847, file: !8611, line: 238, column: 3)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !8611, line: 238, column: 3)
!8848 = distinct !DILexicalBlock(scope: !8839, file: !8611, line: 237, column: 47)
!8849 = !DILocation(line: 240, column: 2, scope: !8848)
!8850 = !DILocation(line: 241, column: 12, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8817, file: !8611, line: 241, column: 6)
!8852 = !DILocation(line: 241, column: 17, scope: !8851)
!8853 = !DILocation(line: 241, column: 43, scope: !8851)
!8854 = !DILocation(line: 241, column: 6, scope: !8817)
!8855 = !DILocation(line: 242, column: 3, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !8611, line: 242, column: 3)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !8611, line: 242, column: 3)
!8858 = distinct !DILexicalBlock(scope: !8859, file: !8611, line: 242, column: 3)
!8859 = distinct !DILexicalBlock(scope: !8860, file: !8611, line: 242, column: 3)
!8860 = distinct !DILexicalBlock(scope: !8851, file: !8611, line: 241, column: 49)
!8861 = !DILocation(line: 243, column: 2, scope: !8860)
!8862 = !DILocation(line: 244, column: 12, scope: !8826)
!8863 = !DILocation(line: 244, column: 17, scope: !8826)
!8864 = !DILocation(line: 244, column: 42, scope: !8826)
!8865 = !DILocation(line: 244, column: 6, scope: !8817)
!8866 = !DILocation(line: 245, column: 3, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8868, file: !8611, line: 245, column: 3)
!8868 = distinct !DILexicalBlock(scope: !8869, file: !8611, line: 245, column: 3)
!8869 = distinct !DILexicalBlock(scope: !8870, file: !8611, line: 245, column: 3)
!8870 = distinct !DILexicalBlock(scope: !8825, file: !8611, line: 245, column: 3)
!8871 = !DILocation(line: 254, column: 24, scope: !8825)
!8872 = !DILocation(line: 0, scope: !8825)
!8873 = !DILocation(line: 256, column: 13, scope: !8874)
!8874 = distinct !DILexicalBlock(scope: !8825, file: !8611, line: 256, column: 7)
!8875 = !DILocation(line: 256, column: 18, scope: !8874)
!8876 = !DILocation(line: 256, column: 44, scope: !8874)
!8877 = !DILocation(line: 256, column: 7, scope: !8825)
!8878 = !DILocation(line: 258, column: 4, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8880, file: !8611, line: 258, column: 4)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !8611, line: 258, column: 4)
!8881 = distinct !DILexicalBlock(scope: !8882, file: !8611, line: 258, column: 4)
!8882 = distinct !DILexicalBlock(scope: !8883, file: !8611, line: 258, column: 4)
!8883 = distinct !DILexicalBlock(scope: !8874, file: !8611, line: 256, column: 50)
!8884 = !DILocation(line: 259, column: 24, scope: !8885)
!8885 = distinct !DILexicalBlock(scope: !8883, file: !8611, line: 259, column: 8)
!8886 = !DILocation(line: 259, column: 8, scope: !8883)
!8887 = !DILocation(line: 261, column: 15, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8885, file: !8611, line: 259, column: 30)
!8889 = !DILocation(line: 262, column: 4, scope: !8888)
!8890 = !DILocation(line: 265, column: 12, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8817, file: !8611, line: 265, column: 6)
!8892 = !DILocation(line: 265, column: 17, scope: !8891)
!8893 = !DILocation(line: 265, column: 42, scope: !8891)
!8894 = !DILocation(line: 265, column: 6, scope: !8817)
!8895 = !DILocation(line: 266, column: 3, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8897, file: !8611, line: 266, column: 3)
!8897 = distinct !DILexicalBlock(scope: !8898, file: !8611, line: 266, column: 3)
!8898 = distinct !DILexicalBlock(scope: !8899, file: !8611, line: 266, column: 3)
!8899 = distinct !DILexicalBlock(scope: !8900, file: !8611, line: 266, column: 3)
!8900 = distinct !DILexicalBlock(scope: !8891, file: !8611, line: 265, column: 48)
!8901 = !DILocation(line: 267, column: 2, scope: !8900)
!8902 = !DILocation(line: 269, column: 12, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8817, file: !8611, line: 269, column: 6)
!8904 = !DILocation(line: 269, column: 17, scope: !8903)
!8905 = !DILocation(line: 269, column: 41, scope: !8903)
!8906 = !DILocation(line: 269, column: 6, scope: !8817)
!8907 = !DILocation(line: 270, column: 3, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8909, file: !8611, line: 270, column: 3)
!8909 = distinct !DILexicalBlock(scope: !8910, file: !8611, line: 270, column: 3)
!8910 = distinct !DILexicalBlock(scope: !8911, file: !8611, line: 270, column: 3)
!8911 = distinct !DILexicalBlock(scope: !8912, file: !8611, line: 270, column: 3)
!8912 = distinct !DILexicalBlock(scope: !8903, file: !8611, line: 269, column: 47)
!8913 = !DILocation(line: 272, column: 2, scope: !8912)
!8914 = !DILocation(line: 288, column: 12, scope: !8831)
!8915 = !DILocation(line: 288, column: 17, scope: !8831)
!8916 = !DILocation(line: 288, column: 41, scope: !8831)
!8917 = !DILocation(line: 289, column: 9, scope: !8831)
!8918 = !DILocation(line: 289, column: 14, scope: !8831)
!8919 = !DILocation(line: 288, column: 6, scope: !8817)
!8920 = !DILocation(line: 308, column: 12, scope: !8829)
!8921 = !DILocation(line: 308, column: 17, scope: !8829)
!8922 = !DILocation(line: 308, column: 7, scope: !8830)
!8923 = !DILocation(line: 310, column: 6, scope: !8828)
!8924 = !DILocation(line: 309, column: 29, scope: !8828)
!8925 = !DILocation(line: 0, scope: !8828)
!8926 = !DILocation(line: 312, column: 8, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8828, file: !8611, line: 312, column: 8)
!8928 = !DILocation(line: 312, column: 8, scope: !8828)
!8929 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !8930, file: !8310, line: 1099, type: !208)
!8930 = distinct !DISubprogram(name: "__set_PSP", scope: !8310, file: !8310, line: 1099, type: !8401, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !8931)
!8931 = !{!8929}
!8932 = !DILocation(line: 0, scope: !8930, inlinedAt: !8933)
!8933 = distinct !DILocation(line: 338, column: 5, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8927, file: !8611, line: 312, column: 23)
!8935 = !DILocation(line: 1101, column: 3, scope: !8930, inlinedAt: !8933)
!8936 = !{i64 3529279}
!8937 = !DILocation(line: 341, column: 4, scope: !8934)
!8938 = !DILocation(line: 360, column: 12, scope: !8939)
!8939 = distinct !DILexicalBlock(scope: !8817, file: !8611, line: 360, column: 6)
!8940 = !DILocation(line: 360, column: 17, scope: !8939)
!8941 = !DILocation(line: 360, column: 41, scope: !8939)
!8942 = !DILocation(line: 360, column: 6, scope: !8817)
!8943 = !DILocation(line: 361, column: 14, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8939, file: !8611, line: 360, column: 47)
!8945 = !DILocation(line: 362, column: 2, scope: !8944)
!8946 = !DILocation(line: 366, column: 12, scope: !8817)
!8947 = !DILocation(line: 369, column: 15, scope: !8817)
!8948 = !DILocation(line: 371, column: 2, scope: !8817)
!8949 = distinct !DISubprogram(name: "bus_fault", scope: !8611, file: !8611, line: 383, type: !8950, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !8952)
!8950 = !DISubroutineType(types: !8951)
!8951 = !{!125, !2946, !125, !8678}
!8952 = !{!8953, !8954, !8955, !8956, !8957}
!8953 = !DILocalVariable(name: "esf", arg: 1, scope: !8949, file: !8611, line: 383, type: !2946)
!8954 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !8949, file: !8611, line: 383, type: !125)
!8955 = !DILocalVariable(name: "recoverable", arg: 3, scope: !8949, file: !8611, line: 383, type: !8678)
!8956 = !DILocalVariable(name: "reason", scope: !8949, file: !8611, line: 385, type: !208)
!8957 = !DILocalVariable(name: "bfar", scope: !8958, file: !8611, line: 405, type: !208)
!8958 = distinct !DILexicalBlock(scope: !8959, file: !8611, line: 395, column: 42)
!8959 = distinct !DILexicalBlock(scope: !8949, file: !8611, line: 395, column: 6)
!8960 = !DILocation(line: 0, scope: !8949)
!8961 = !DILocation(line: 387, column: 2, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8963, file: !8611, line: 387, column: 2)
!8963 = distinct !DILexicalBlock(scope: !8964, file: !8611, line: 387, column: 2)
!8964 = distinct !DILexicalBlock(scope: !8965, file: !8611, line: 387, column: 2)
!8965 = distinct !DILexicalBlock(scope: !8949, file: !8611, line: 387, column: 2)
!8966 = !DILocation(line: 389, column: 11, scope: !8967)
!8967 = distinct !DILexicalBlock(scope: !8949, file: !8611, line: 389, column: 6)
!8968 = !DILocation(line: 389, column: 16, scope: !8967)
!8969 = !DILocation(line: 389, column: 6, scope: !8949)
!8970 = !DILocation(line: 390, column: 3, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8972, file: !8611, line: 390, column: 3)
!8972 = distinct !DILexicalBlock(scope: !8973, file: !8611, line: 390, column: 3)
!8973 = distinct !DILexicalBlock(scope: !8974, file: !8611, line: 390, column: 3)
!8974 = distinct !DILexicalBlock(scope: !8975, file: !8611, line: 390, column: 3)
!8975 = distinct !DILexicalBlock(scope: !8967, file: !8611, line: 389, column: 39)
!8976 = !DILocation(line: 391, column: 2, scope: !8975)
!8977 = !DILocation(line: 392, column: 11, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8949, file: !8611, line: 392, column: 6)
!8979 = !DILocation(line: 392, column: 16, scope: !8978)
!8980 = !DILocation(line: 392, column: 6, scope: !8949)
!8981 = !DILocation(line: 393, column: 3, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8983, file: !8611, line: 393, column: 3)
!8983 = distinct !DILexicalBlock(scope: !8984, file: !8611, line: 393, column: 3)
!8984 = distinct !DILexicalBlock(scope: !8985, file: !8611, line: 393, column: 3)
!8985 = distinct !DILexicalBlock(scope: !8986, file: !8611, line: 393, column: 3)
!8986 = distinct !DILexicalBlock(scope: !8978, file: !8611, line: 392, column: 41)
!8987 = !DILocation(line: 394, column: 2, scope: !8986)
!8988 = !DILocation(line: 395, column: 11, scope: !8959)
!8989 = !DILocation(line: 395, column: 16, scope: !8959)
!8990 = !DILocation(line: 395, column: 6, scope: !8949)
!8991 = !DILocation(line: 396, column: 3, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !8611, line: 396, column: 3)
!8993 = distinct !DILexicalBlock(scope: !8994, file: !8611, line: 396, column: 3)
!8994 = distinct !DILexicalBlock(scope: !8995, file: !8611, line: 396, column: 3)
!8995 = distinct !DILexicalBlock(scope: !8958, file: !8611, line: 396, column: 3)
!8996 = !DILocation(line: 405, column: 3, scope: !8958)
!8997 = !DILocation(line: 0, scope: !8958)
!8998 = !DILocation(line: 407, column: 13, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8958, file: !8611, line: 407, column: 7)
!9000 = !DILocation(line: 407, column: 18, scope: !8999)
!9001 = !DILocation(line: 407, column: 44, scope: !8999)
!9002 = !DILocation(line: 407, column: 7, scope: !8958)
!9003 = !DILocation(line: 408, column: 4, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9005, file: !8611, line: 408, column: 4)
!9005 = distinct !DILexicalBlock(scope: !9006, file: !8611, line: 408, column: 4)
!9006 = distinct !DILexicalBlock(scope: !9007, file: !8611, line: 408, column: 4)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !8611, line: 408, column: 4)
!9008 = distinct !DILexicalBlock(scope: !8999, file: !8611, line: 407, column: 50)
!9009 = !DILocation(line: 409, column: 24, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9008, file: !8611, line: 409, column: 8)
!9011 = !DILocation(line: 409, column: 8, scope: !9008)
!9012 = !DILocation(line: 411, column: 15, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9010, file: !8611, line: 409, column: 30)
!9014 = !DILocation(line: 412, column: 4, scope: !9013)
!9015 = !DILocation(line: 415, column: 11, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !8949, file: !8611, line: 415, column: 6)
!9017 = !DILocation(line: 415, column: 16, scope: !9016)
!9018 = !DILocation(line: 415, column: 6, scope: !8949)
!9019 = !DILocation(line: 416, column: 3, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9021, file: !8611, line: 416, column: 3)
!9021 = distinct !DILexicalBlock(scope: !9022, file: !8611, line: 416, column: 3)
!9022 = distinct !DILexicalBlock(scope: !9023, file: !8611, line: 416, column: 3)
!9023 = distinct !DILexicalBlock(scope: !9024, file: !8611, line: 416, column: 3)
!9024 = distinct !DILexicalBlock(scope: !9016, file: !8611, line: 415, column: 44)
!9025 = !DILocation(line: 417, column: 2, scope: !9024)
!9026 = !DILocation(line: 418, column: 12, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !8949, file: !8611, line: 418, column: 6)
!9028 = !DILocation(line: 418, column: 17, scope: !9027)
!9029 = !DILocation(line: 418, column: 41, scope: !9027)
!9030 = !DILocation(line: 418, column: 6, scope: !8949)
!9031 = !DILocation(line: 423, column: 18, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9027, file: !8611, line: 423, column: 13)
!9033 = !DILocation(line: 423, column: 23, scope: !9032)
!9034 = !DILocation(line: 423, column: 13, scope: !9027)
!9035 = !DILocation(line: 0, scope: !9027)
!9036 = !DILocation(line: 524, column: 12, scope: !8949)
!9037 = !DILocation(line: 526, column: 15, scope: !8949)
!9038 = !DILocation(line: 528, column: 2, scope: !8949)
!9039 = distinct !DISubprogram(name: "usage_fault", scope: !8611, file: !8611, line: 539, type: !9040, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !9044)
!9040 = !DISubroutineType(types: !9041)
!9041 = !{!208, !9042}
!9042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9043, size: 32)
!9043 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2947)
!9044 = !{!9045, !9046}
!9045 = !DILocalVariable(name: "esf", arg: 1, scope: !9039, file: !8611, line: 539, type: !9042)
!9046 = !DILocalVariable(name: "reason", scope: !9039, file: !8611, line: 541, type: !208)
!9047 = !DILocation(line: 0, scope: !9039)
!9048 = !DILocation(line: 543, column: 2, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !8611, line: 543, column: 2)
!9050 = distinct !DILexicalBlock(scope: !9051, file: !8611, line: 543, column: 2)
!9051 = distinct !DILexicalBlock(scope: !9052, file: !8611, line: 543, column: 2)
!9052 = distinct !DILexicalBlock(scope: !9039, file: !8611, line: 543, column: 2)
!9053 = !DILocation(line: 546, column: 12, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9039, file: !8611, line: 546, column: 6)
!9055 = !DILocation(line: 546, column: 17, scope: !9054)
!9056 = !DILocation(line: 546, column: 43, scope: !9054)
!9057 = !DILocation(line: 546, column: 6, scope: !9039)
!9058 = !DILocation(line: 547, column: 3, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9060, file: !8611, line: 547, column: 3)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !8611, line: 547, column: 3)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !8611, line: 547, column: 3)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !8611, line: 547, column: 3)
!9063 = distinct !DILexicalBlock(scope: !9054, file: !8611, line: 546, column: 49)
!9064 = !DILocation(line: 548, column: 2, scope: !9063)
!9065 = !DILocation(line: 549, column: 12, scope: !9066)
!9066 = distinct !DILexicalBlock(scope: !9039, file: !8611, line: 549, column: 6)
!9067 = !DILocation(line: 549, column: 17, scope: !9066)
!9068 = !DILocation(line: 549, column: 43, scope: !9066)
!9069 = !DILocation(line: 549, column: 6, scope: !9039)
!9070 = !DILocation(line: 550, column: 3, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9072, file: !8611, line: 550, column: 3)
!9072 = distinct !DILexicalBlock(scope: !9073, file: !8611, line: 550, column: 3)
!9073 = distinct !DILexicalBlock(scope: !9074, file: !8611, line: 550, column: 3)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !8611, line: 550, column: 3)
!9075 = distinct !DILexicalBlock(scope: !9066, file: !8611, line: 549, column: 49)
!9076 = !DILocation(line: 551, column: 2, scope: !9075)
!9077 = !DILocation(line: 567, column: 12, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !9039, file: !8611, line: 567, column: 6)
!9079 = !DILocation(line: 567, column: 17, scope: !9078)
!9080 = !DILocation(line: 567, column: 38, scope: !9078)
!9081 = !DILocation(line: 567, column: 6, scope: !9039)
!9082 = !DILocation(line: 568, column: 3, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !8611, line: 568, column: 3)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !8611, line: 568, column: 3)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !8611, line: 568, column: 3)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !8611, line: 568, column: 3)
!9087 = distinct !DILexicalBlock(scope: !9078, file: !8611, line: 567, column: 44)
!9088 = !DILocation(line: 569, column: 2, scope: !9087)
!9089 = !DILocation(line: 570, column: 12, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9039, file: !8611, line: 570, column: 6)
!9091 = !DILocation(line: 570, column: 17, scope: !9090)
!9092 = !DILocation(line: 570, column: 39, scope: !9090)
!9093 = !DILocation(line: 570, column: 6, scope: !9039)
!9094 = !DILocation(line: 571, column: 3, scope: !9095)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !8611, line: 571, column: 3)
!9096 = distinct !DILexicalBlock(scope: !9097, file: !8611, line: 571, column: 3)
!9097 = distinct !DILexicalBlock(scope: !9098, file: !8611, line: 571, column: 3)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !8611, line: 571, column: 3)
!9099 = distinct !DILexicalBlock(scope: !9090, file: !8611, line: 570, column: 45)
!9100 = !DILocation(line: 572, column: 2, scope: !9099)
!9101 = !DILocation(line: 573, column: 12, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9039, file: !8611, line: 573, column: 6)
!9103 = !DILocation(line: 573, column: 17, scope: !9102)
!9104 = !DILocation(line: 573, column: 42, scope: !9102)
!9105 = !DILocation(line: 573, column: 6, scope: !9039)
!9106 = !DILocation(line: 574, column: 3, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9108, file: !8611, line: 574, column: 3)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !8611, line: 574, column: 3)
!9109 = distinct !DILexicalBlock(scope: !9110, file: !8611, line: 574, column: 3)
!9110 = distinct !DILexicalBlock(scope: !9111, file: !8611, line: 574, column: 3)
!9111 = distinct !DILexicalBlock(scope: !9102, file: !8611, line: 573, column: 48)
!9112 = !DILocation(line: 575, column: 2, scope: !9111)
!9113 = !DILocation(line: 576, column: 12, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9039, file: !8611, line: 576, column: 6)
!9115 = !DILocation(line: 576, column: 17, scope: !9114)
!9116 = !DILocation(line: 576, column: 44, scope: !9114)
!9117 = !DILocation(line: 576, column: 6, scope: !9039)
!9118 = !DILocation(line: 577, column: 3, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !8611, line: 577, column: 3)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !8611, line: 577, column: 3)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !8611, line: 577, column: 3)
!9122 = distinct !DILexicalBlock(scope: !9123, file: !8611, line: 577, column: 3)
!9123 = distinct !DILexicalBlock(scope: !9114, file: !8611, line: 576, column: 50)
!9124 = !DILocation(line: 578, column: 2, scope: !9123)
!9125 = !DILocation(line: 581, column: 12, scope: !9039)
!9126 = !DILocation(line: 583, column: 2, scope: !9039)
!9127 = distinct !DISubprogram(name: "debug_monitor", scope: !8611, file: !8611, line: 632, type: !9128, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !9130)
!9128 = !DISubroutineType(types: !9129)
!9129 = !{null, !2946, !8678}
!9130 = !{!9131, !9132}
!9131 = !DILocalVariable(name: "esf", arg: 1, scope: !9127, file: !8611, line: 632, type: !2946)
!9132 = !DILocalVariable(name: "recoverable", arg: 2, scope: !9127, file: !8611, line: 632, type: !8678)
!9133 = !DILocation(line: 0, scope: !9127)
!9134 = !DILocation(line: 634, column: 15, scope: !9127)
!9135 = !DILocation(line: 636, column: 2, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9137, file: !8611, line: 636, column: 2)
!9137 = distinct !DILexicalBlock(scope: !9138, file: !8611, line: 636, column: 2)
!9138 = distinct !DILexicalBlock(scope: !9139, file: !8611, line: 636, column: 2)
!9139 = distinct !DILexicalBlock(scope: !9127, file: !8611, line: 636, column: 2)
!9140 = !DILocation(line: 652, column: 1, scope: !9127)
!9141 = distinct !DISubprogram(name: "reserved_exception", scope: !8611, file: !8611, line: 776, type: !9142, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !9144)
!9142 = !DISubroutineType(types: !9143)
!9143 = !{null, !9042, !125}
!9144 = !{!9145, !9146}
!9145 = !DILocalVariable(name: "esf", arg: 1, scope: !9141, file: !8611, line: 776, type: !9042)
!9146 = !DILocalVariable(name: "fault", arg: 2, scope: !9141, file: !8611, line: 776, type: !125)
!9147 = !DILocation(line: 0, scope: !9141)
!9148 = !DILocation(line: 780, column: 2, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9150, file: !8611, line: 780, column: 2)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !8611, line: 780, column: 2)
!9151 = distinct !DILexicalBlock(scope: !9152, file: !8611, line: 780, column: 2)
!9152 = distinct !DILexicalBlock(scope: !9141, file: !8611, line: 780, column: 2)
!9153 = !DILocation(line: 783, column: 1, scope: !9141)
!9154 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !8611, file: !8611, line: 658, type: !9155, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !9157)
!9155 = !DISubroutineType(types: !9156)
!9156 = !{!153, !2946}
!9157 = !{!9158, !9159, !9160}
!9158 = !DILocalVariable(name: "esf", arg: 1, scope: !9154, file: !8611, line: 658, type: !2946)
!9159 = !DILocalVariable(name: "ret_addr", scope: !9154, file: !8611, line: 660, type: !2989)
!9160 = !DILocalVariable(name: "fault_insn", scope: !9154, file: !8611, line: 686, type: !227)
!9161 = !DILocation(line: 0, scope: !9154)
!9162 = !DILocation(line: 660, column: 46, scope: !9154)
!9163 = !DILocation(line: 660, column: 23, scope: !9154)
!9164 = !DILocation(line: 682, column: 11, scope: !9154)
!9165 = !DILocation(line: 271, column: 3, scope: !9166, inlinedAt: !9167)
!9166 = distinct !DISubprogram(name: "__DSB", scope: !8310, file: !8310, line: 269, type: !3297, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !639)
!9167 = distinct !DILocation(line: 683, column: 2, scope: !9154)
!9168 = !{i64 3505414}
!9169 = !DILocation(line: 260, column: 3, scope: !9170, inlinedAt: !9171)
!9170 = distinct !DISubprogram(name: "__ISB", scope: !8310, file: !8310, line: 258, type: !3297, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !639)
!9171 = distinct !DILocation(line: 684, column: 2, scope: !9154)
!9172 = !{i64 3505131}
!9173 = !DILocation(line: 686, column: 35, scope: !9154)
!9174 = !DILocation(line: 686, column: 24, scope: !9154)
!9175 = !DILocation(line: 688, column: 11, scope: !9154)
!9176 = !DILocation(line: 271, column: 3, scope: !9166, inlinedAt: !9177)
!9177 = distinct !DILocation(line: 689, column: 2, scope: !9154)
!9178 = !DILocation(line: 260, column: 3, scope: !9170, inlinedAt: !9179)
!9179 = distinct !DILocation(line: 690, column: 2, scope: !9154)
!9180 = !DILocation(line: 693, column: 45, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9154, file: !8611, line: 693, column: 6)
!9182 = !DILocation(line: 699, column: 1, scope: !9154)
!9183 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !8611, file: !8611, line: 1107, type: !3297, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2918, retainedNodes: !639)
!9184 = !DILocation(line: 1111, column: 11, scope: !9183)
!9185 = !DILocation(line: 1136, column: 1, scope: !9183)
!9186 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !9187, file: !9187, line: 26, type: !3297, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !9188)
!9187 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9188 = !{!9189}
!9189 = !DILocalVariable(name: "irq", scope: !9186, file: !9187, line: 28, type: !125)
!9190 = !DILocation(line: 0, scope: !9186)
!9191 = !DILocation(line: 30, column: 2, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9186, file: !9187, line: 30, column: 2)
!9193 = !DILocation(line: 31, column: 3, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !9187, line: 30, column: 39)
!9195 = distinct !DILexicalBlock(scope: !9192, file: !9187, line: 30, column: 2)
!9196 = !DILocation(line: 30, column: 35, scope: !9195)
!9197 = !DILocation(line: 30, column: 13, scope: !9195)
!9198 = distinct !{!9198, !9191, !9199}
!9199 = !DILocation(line: 32, column: 2, scope: !9192)
!9200 = !DILocation(line: 33, column: 1, scope: !9186)
!9201 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8344, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2990, retainedNodes: !9202)
!9202 = !{!9203, !9204}
!9203 = !DILocalVariable(name: "IRQn", arg: 1, scope: !9201, file: !680, line: 1814, type: !934)
!9204 = !DILocalVariable(name: "priority", arg: 2, scope: !9201, file: !680, line: 1814, type: !208)
!9205 = !DILocation(line: 0, scope: !9201)
!9206 = !DILocation(line: 1816, column: 7, scope: !9201)
!9207 = !DILocation(line: 0, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9201, file: !680, line: 1816, column: 7)
!9209 = !DILocation(line: 1824, column: 1, scope: !9201)
!9210 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !9211, file: !9211, line: 27, type: !9212, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !9315)
!9211 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9212 = !DISubroutineType(types: !9213)
!9213 = !{null, !9214}
!9214 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !9215)
!9215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9216, size: 32)
!9216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !9217)
!9217 = !{!9218, !9276, !9288, !9289, !9290, !9291, !9297, !9310}
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !9216, file: !531, line: 247, baseType: !9219, size: 384)
!9219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !9220)
!9220 = !{!9221, !9245, !9252, !9253, !9254, !9263, !9264, !9265}
!9221 = !DIDerivedType(tag: DW_TAG_member, scope: !9219, file: !531, line: 60, baseType: !9222, size: 64)
!9222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9219, file: !531, line: 60, size: 64, elements: !9223)
!9223 = !{!9224, !9239}
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !9222, file: !531, line: 61, baseType: !9225, size: 64)
!9225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !9226)
!9226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !9227)
!9227 = !{!9228, !9234}
!9228 = !DIDerivedType(tag: DW_TAG_member, scope: !9226, file: !541, line: 38, baseType: !9229, size: 32)
!9229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9226, file: !541, line: 38, size: 32, elements: !9230)
!9230 = !{!9231, !9233}
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9229, file: !541, line: 39, baseType: !9232, size: 32)
!9232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9226, size: 32)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9229, file: !541, line: 40, baseType: !9232, size: 32)
!9234 = !DIDerivedType(tag: DW_TAG_member, scope: !9226, file: !541, line: 42, baseType: !9235, size: 32, offset: 32)
!9235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9226, file: !541, line: 42, size: 32, elements: !9236)
!9236 = !{!9237, !9238}
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9235, file: !541, line: 43, baseType: !9232, size: 32)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9235, file: !541, line: 44, baseType: !9232, size: 32)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !9222, file: !531, line: 62, baseType: !9240, size: 64)
!9240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !9241)
!9241 = !{!9242}
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9240, file: !557, line: 50, baseType: !9243, size: 64)
!9243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9244, size: 64, elements: !562)
!9244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9240, size: 32)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !9219, file: !531, line: 68, baseType: !9246, size: 32, offset: 64)
!9246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9247, size: 32)
!9247 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !9248)
!9248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !9249)
!9249 = !{!9250}
!9250 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9248, file: !567, line: 232, baseType: !9251, size: 64)
!9251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !9226)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !9219, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !9219, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!9254 = !DIDerivedType(tag: DW_TAG_member, scope: !9219, file: !531, line: 90, baseType: !9255, size: 16, offset: 112)
!9255 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9219, file: !531, line: 90, size: 16, elements: !9256)
!9256 = !{!9257, !9262}
!9257 = !DIDerivedType(tag: DW_TAG_member, scope: !9255, file: !531, line: 91, baseType: !9258, size: 16)
!9258 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9255, file: !531, line: 91, size: 16, elements: !9259)
!9259 = !{!9260, !9261}
!9260 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9258, file: !531, line: 96, baseType: !581, size: 8)
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !9258, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!9262 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !9255, file: !531, line: 100, baseType: !227, size: 16)
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !9219, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !9219, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !9219, file: !531, line: 131, baseType: !9266, size: 192, offset: 192)
!9266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !9267)
!9267 = !{!9268, !9269, !9275}
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9266, file: !567, line: 245, baseType: !9225, size: 64)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !9266, file: !567, line: 246, baseType: !9270, size: 32, offset: 64)
!9270 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !9271)
!9271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9272, size: 32)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{null, !9274}
!9274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9266, size: 32)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !9266, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !9216, file: !531, line: 250, baseType: !9277, size: 288, offset: 384)
!9277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !9278)
!9278 = !{!9279, !9280, !9281, !9282, !9283, !9284, !9285, !9286, !9287}
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !9277, file: !601, line: 26, baseType: !208, size: 32)
!9280 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !9277, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!9281 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !9277, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!9282 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !9277, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !9277, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!9284 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !9277, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!9285 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !9277, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!9286 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !9277, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !9277, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!9288 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !9216, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!9289 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !9216, file: !531, line: 256, baseType: !9247, size: 64, offset: 704)
!9290 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !9216, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !9216, file: !531, line: 300, baseType: !9292, size: 96, offset: 800)
!9292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !9293)
!9293 = !{!9294, !9295, !9296}
!9294 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9292, file: !531, line: 153, baseType: !22, size: 32)
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9292, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!9296 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !9292, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!9297 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !9216, file: !531, line: 325, baseType: !9298, size: 32, offset: 896)
!9298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9299, size: 32)
!9299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !9300)
!9300 = !{!9301, !9307, !9308}
!9301 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9299, file: !624, line: 5074, baseType: !9302, size: 96)
!9302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !9303)
!9303 = !{!9304, !9305, !9306}
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !9302, file: !628, line: 57, baseType: !631, size: 32)
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !9302, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !9302, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !9299, file: !624, line: 5075, baseType: !9247, size: 64, offset: 96)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9299, file: !624, line: 5076, baseType: !9309, offset: 160)
!9309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !9216, file: !531, line: 343, baseType: !9311, size: 64, offset: 928)
!9311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !9312)
!9312 = !{!9313, !9314}
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !9311, file: !601, line: 63, baseType: !208, size: 32)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !9311, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!9315 = !{!9316}
!9316 = !DILocalVariable(name: "thread", arg: 1, scope: !9210, file: !9211, line: 27, type: !9214)
!9317 = !DILocation(line: 0, scope: !9210)
!9318 = !DILocation(line: 29, column: 6, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9210, file: !9211, line: 29, column: 6)
!9320 = !DILocation(line: 29, column: 15, scope: !9319)
!9321 = !DILocation(line: 29, column: 6, scope: !9210)
!9322 = !DILocation(line: 1031, column: 3, scope: !9323, inlinedAt: !9326)
!9323 = distinct !DISubprogram(name: "__get_IPSR", scope: !8310, file: !8310, line: 1027, type: !8391, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !9324)
!9324 = !{!9325}
!9325 = !DILocalVariable(name: "result", scope: !9323, file: !8310, line: 1029, type: !208)
!9326 = distinct !DILocation(line: 48, column: 10, scope: !9327, inlinedAt: !9331)
!9327 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9328, file: !9328, line: 46, type: !9329, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3035, retainedNodes: !639)
!9328 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!153}
!9331 = distinct !DILocation(line: 30, column: 7, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9333, file: !9211, line: 30, column: 7)
!9333 = distinct !DILexicalBlock(scope: !9319, file: !9211, line: 29, column: 26)
!9334 = !{i64 3494262}
!9335 = !DILocation(line: 0, scope: !9323, inlinedAt: !9326)
!9336 = !DILocation(line: 48, column: 9, scope: !9327, inlinedAt: !9331)
!9337 = !DILocation(line: 30, column: 7, scope: !9333)
!9338 = !DILocation(line: 42, column: 14, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9332, file: !9211, line: 30, column: 25)
!9340 = !DILocation(line: 48, column: 15, scope: !9339)
!9341 = !DILocation(line: 49, column: 3, scope: !9339)
!9342 = !DILocation(line: 52, column: 2, scope: !9210)
!9343 = !DILocation(line: 53, column: 1, scope: !9210)
!9344 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !526, file: !526, line: 127, type: !3297, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !519, retainedNodes: !639)
!9345 = !DILocation(line: 134, column: 2, scope: !9344)
!9346 = !DILocation(line: 156, column: 1, scope: !9344)
!9347 = !DILocation(line: 0, scope: !525)
!9348 = !DILocation(line: 289, column: 36, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !525, file: !526, line: 285, column: 2)
!9350 = !DILocation(line: 289, column: 42, scope: !9349)
!9351 = !DILocation(line: 300, column: 36, scope: !525)
!9352 = !DILocation(line: 301, column: 35, scope: !525)
!9353 = !DILocation(line: 302, column: 37, scope: !525)
!9354 = !DILocation(line: 311, column: 2, scope: !525)
!9355 = !DILocation(line: 316, column: 1, scope: !525)
!9356 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !708, file: !708, line: 180, type: !3297, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9357 = !DILocation(line: 188, column: 12, scope: !9356)
!9358 = !DILocation(line: 271, column: 3, scope: !9359, inlinedAt: !9360)
!9359 = distinct !DISubprogram(name: "__DSB", scope: !8310, file: !8310, line: 269, type: !3297, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9360 = distinct !DILocation(line: 192, column: 2, scope: !9356)
!9361 = !{i64 3663090}
!9362 = !DILocation(line: 260, column: 3, scope: !9363, inlinedAt: !9364)
!9363 = distinct !DISubprogram(name: "__ISB", scope: !8310, file: !8310, line: 258, type: !3297, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9364 = distinct !DILocation(line: 193, column: 2, scope: !9356)
!9365 = !{i64 3662807}
!9366 = !DILocation(line: 194, column: 1, scope: !9356)
!9367 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !708, file: !708, line: 199, type: !3297, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9368 = !DILocation(line: 282, column: 3, scope: !9369, inlinedAt: !9370)
!9369 = distinct !DISubprogram(name: "__DMB", scope: !8310, file: !8310, line: 280, type: !3297, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !639)
!9370 = distinct !DILocation(line: 202, column: 2, scope: !9367)
!9371 = !{i64 3663366}
!9372 = !DILocation(line: 205, column: 12, scope: !9367)
!9373 = !DILocation(line: 206, column: 1, scope: !9367)
!9374 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !708, file: !708, line: 275, type: !9375, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9388)
!9375 = !DISubroutineType(types: !9376)
!9376 = !{null, !9377, !323, !8578, !8578}
!9377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9378, size: 32)
!9378 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9379)
!9379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !652, line: 52, size: 96, elements: !9380)
!9380 = !{!9381, !9382, !9383}
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9379, file: !652, line: 53, baseType: !22, size: 32)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9379, file: !652, line: 54, baseType: !272, size: 32, offset: 32)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9379, file: !652, line: 55, baseType: !9384, size: 32, offset: 64)
!9384 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !658, line: 151, baseType: !9385)
!9385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !658, line: 149, size: 32, elements: !9386)
!9386 = !{!9387}
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !9385, file: !658, line: 150, baseType: !208, size: 32)
!9388 = !{!9389, !9390, !9391, !9392}
!9389 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9374, file: !708, line: 276, type: !9377)
!9390 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9374, file: !708, line: 276, type: !323)
!9391 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !9374, file: !708, line: 277, type: !8578)
!9392 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9374, file: !708, line: 277, type: !8578)
!9393 = !DILocation(line: 0, scope: !9374)
!9394 = !DILocation(line: 279, column: 6, scope: !9395)
!9395 = distinct !DILexicalBlock(scope: !9374, file: !708, line: 279, column: 6)
!9396 = !DILocation(line: 285, column: 1, scope: !9374)
!9397 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !9398, file: !9398, line: 220, type: !9399, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9401)
!9398 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9399 = !DISubroutineType(types: !9400)
!9400 = !{!125, !9377, !323, !8578, !8578}
!9401 = !{!9402, !9403, !9404, !9405, !9406}
!9402 = !DILocalVariable(name: "static_regions", arg: 1, scope: !9397, file: !9398, line: 221, type: !9377)
!9403 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9397, file: !9398, line: 221, type: !323)
!9404 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !9397, file: !9398, line: 222, type: !8578)
!9405 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !9397, file: !9398, line: 223, type: !8578)
!9406 = !DILocalVariable(name: "mpu_reg_index", scope: !9397, file: !9398, line: 225, type: !125)
!9407 = !DILocation(line: 0, scope: !9397)
!9408 = !DILocation(line: 225, column: 22, scope: !9397)
!9409 = !DILocation(line: 233, column: 18, scope: !9397)
!9410 = !DILocation(line: 236, column: 23, scope: !9397)
!9411 = !DILocation(line: 236, column: 21, scope: !9397)
!9412 = !DILocation(line: 238, column: 2, scope: !9397)
!9413 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !708, file: !708, line: 105, type: !9414, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9416)
!9414 = !DISubroutineType(types: !9415)
!9415 = !{!125, !9377, !150, !150, !153}
!9416 = !{!9417, !9418, !9419, !9420, !9421, !9422}
!9417 = !DILocalVariable(name: "regions", arg: 1, scope: !9413, file: !708, line: 106, type: !9377)
!9418 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9413, file: !708, line: 106, type: !150)
!9419 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !9413, file: !708, line: 106, type: !150)
!9420 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !9413, file: !708, line: 107, type: !153)
!9421 = !DILocalVariable(name: "i", scope: !9413, file: !708, line: 109, type: !125)
!9422 = !DILocalVariable(name: "reg_index", scope: !9413, file: !708, line: 110, type: !125)
!9423 = !DILocation(line: 0, scope: !9413)
!9424 = !DILocation(line: 110, column: 18, scope: !9413)
!9425 = !DILocation(line: 112, column: 16, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !708, line: 112, column: 2)
!9427 = distinct !DILexicalBlock(scope: !9413, file: !708, line: 112, column: 2)
!9428 = !DILocation(line: 112, column: 2, scope: !9427)
!9429 = !DILocation(line: 113, column: 7, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9431, file: !708, line: 113, column: 7)
!9431 = distinct !DILexicalBlock(scope: !9426, file: !708, line: 112, column: 36)
!9432 = !DILocation(line: 113, column: 18, scope: !9430)
!9433 = !DILocation(line: 113, column: 23, scope: !9430)
!9434 = !DILocation(line: 113, column: 7, scope: !9431)
!9435 = !DILocation(line: 118, column: 23, scope: !9436)
!9436 = distinct !DILexicalBlock(scope: !9431, file: !708, line: 118, column: 7)
!9437 = !DILocation(line: 119, column: 7, scope: !9436)
!9438 = !DILocation(line: 118, column: 7, scope: !9431)
!9439 = !DILocation(line: 120, column: 4, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9441, file: !708, line: 120, column: 4)
!9441 = distinct !DILexicalBlock(scope: !9442, file: !708, line: 120, column: 4)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !708, line: 120, column: 4)
!9443 = distinct !DILexicalBlock(scope: !9444, file: !708, line: 120, column: 4)
!9444 = distinct !DILexicalBlock(scope: !9436, file: !708, line: 119, column: 45)
!9445 = !DILocation(line: 121, column: 4, scope: !9444)
!9446 = !DILocation(line: 124, column: 36, scope: !9431)
!9447 = !DILocation(line: 124, column: 15, scope: !9431)
!9448 = !DILocation(line: 126, column: 17, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !9431, file: !708, line: 126, column: 7)
!9450 = !DILocation(line: 126, column: 7, scope: !9431)
!9451 = !DILocation(line: 131, column: 12, scope: !9431)
!9452 = !DILocation(line: 132, column: 2, scope: !9431)
!9453 = !DILocation(line: 112, column: 32, scope: !9426)
!9454 = distinct !{!9454, !9428, !9455}
!9455 = !DILocation(line: 132, column: 2, scope: !9427)
!9456 = !DILocation(line: 135, column: 1, scope: !9413)
!9457 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !9398, file: !9398, line: 63, type: !9458, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9460)
!9458 = !DISubroutineType(types: !9459)
!9459 = !{!125, !9377}
!9460 = !{!9461, !9462}
!9461 = !DILocalVariable(name: "part", arg: 1, scope: !9457, file: !9398, line: 63, type: !9377)
!9462 = !DILocalVariable(name: "partition_is_valid", scope: !9457, file: !9398, line: 70, type: !125)
!9463 = !DILocation(line: 0, scope: !9457)
!9464 = !DILocation(line: 71, column: 11, scope: !9457)
!9465 = !DILocation(line: 71, column: 37, scope: !9457)
!9466 = !{i32 0, i32 33}
!9467 = !DILocation(line: 72, column: 3, scope: !9457)
!9468 = !DILocation(line: 71, column: 30, scope: !9457)
!9469 = !DILocation(line: 75, column: 11, scope: !9457)
!9470 = !DILocation(line: 75, column: 17, scope: !9457)
!9471 = !DILocation(line: 75, column: 38, scope: !9457)
!9472 = !DILocation(line: 77, column: 2, scope: !9457)
!9473 = distinct !DISubprogram(name: "mpu_configure_region", scope: !708, file: !708, line: 79, type: !9474, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9476)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{!125, !323, !9377}
!9476 = !{!9477, !9478, !9479}
!9477 = !DILocalVariable(name: "index", arg: 1, scope: !9473, file: !708, line: 79, type: !323)
!9478 = !DILocalVariable(name: "new_region", arg: 2, scope: !9473, file: !708, line: 80, type: !9377)
!9479 = !DILocalVariable(name: "region_conf", scope: !9473, file: !708, line: 82, type: !697)
!9480 = !DILocation(line: 0, scope: !9473)
!9481 = !DILocation(line: 82, column: 2, scope: !9473)
!9482 = !DILocation(line: 82, column: 24, scope: !9473)
!9483 = !DILocation(line: 87, column: 33, scope: !9473)
!9484 = !DILocation(line: 87, column: 14, scope: !9473)
!9485 = !DILocation(line: 87, column: 19, scope: !9473)
!9486 = !DILocation(line: 91, column: 55, scope: !9473)
!9487 = !DILocation(line: 92, column: 16, scope: !9473)
!9488 = !DILocation(line: 92, column: 53, scope: !9473)
!9489 = !DILocation(line: 91, column: 2, scope: !9473)
!9490 = !DILocation(line: 95, column: 9, scope: !9473)
!9491 = !DILocation(line: 97, column: 1, scope: !9473)
!9492 = !DILocation(line: 95, column: 2, scope: !9473)
!9493 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !9398, file: !9398, line: 113, type: !9494, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9499)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{null, !9496, !9497, !208, !208}
!9496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 32)
!9497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9498, size: 32)
!9498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9384)
!9499 = !{!9500, !9501, !9502, !9503}
!9500 = !DILocalVariable(name: "p_attr", arg: 1, scope: !9493, file: !9398, line: 114, type: !9496)
!9501 = !DILocalVariable(name: "attr", arg: 2, scope: !9493, file: !9398, line: 115, type: !9497)
!9502 = !DILocalVariable(name: "base", arg: 3, scope: !9493, file: !9398, line: 115, type: !208)
!9503 = !DILocalVariable(name: "size", arg: 4, scope: !9493, file: !9398, line: 115, type: !208)
!9504 = !DILocation(line: 0, scope: !9493)
!9505 = !DILocation(line: 127, column: 23, scope: !9493)
!9506 = !DILocation(line: 127, column: 35, scope: !9493)
!9507 = !DILocation(line: 127, column: 33, scope: !9493)
!9508 = !DILocation(line: 127, column: 10, scope: !9493)
!9509 = !DILocation(line: 127, column: 15, scope: !9493)
!9510 = !DILocation(line: 129, column: 1, scope: !9493)
!9511 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !708, file: !708, line: 57, type: !9512, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9514)
!9512 = !DISubroutineType(types: !9513)
!9513 = !{!125, !323, !695}
!9514 = !{!9515, !9516}
!9515 = !DILocalVariable(name: "index", arg: 1, scope: !9511, file: !708, line: 57, type: !323)
!9516 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9511, file: !708, line: 58, type: !695)
!9517 = !DILocation(line: 0, scope: !9511)
!9518 = !DILocation(line: 61, column: 6, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9511, file: !708, line: 61, column: 6)
!9520 = !DILocation(line: 61, column: 12, scope: !9519)
!9521 = !DILocation(line: 61, column: 6, scope: !9511)
!9522 = !DILocation(line: 64, column: 3, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !708, line: 64, column: 3)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !708, line: 64, column: 3)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !708, line: 64, column: 3)
!9526 = distinct !DILexicalBlock(scope: !9527, file: !708, line: 64, column: 3)
!9527 = distinct !DILexicalBlock(scope: !9519, file: !708, line: 61, column: 40)
!9528 = !DILocation(line: 65, column: 3, scope: !9527)
!9529 = !DILocation(line: 71, column: 2, scope: !9511)
!9530 = !DILocation(line: 73, column: 2, scope: !9511)
!9531 = !DILocation(line: 74, column: 1, scope: !9511)
!9532 = distinct !DISubprogram(name: "region_init", scope: !9398, file: !9398, line: 29, type: !9533, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9535)
!9533 = !DISubroutineType(types: !9534)
!9534 = !{null, !8578, !695}
!9535 = !{!9536, !9537}
!9536 = !DILocalVariable(name: "index", arg: 1, scope: !9532, file: !9398, line: 29, type: !8578)
!9537 = !DILocalVariable(name: "region_conf", arg: 2, scope: !9532, file: !9398, line: 30, type: !695)
!9538 = !DILocation(line: 0, scope: !9532)
!9539 = !DILocation(line: 33, column: 2, scope: !9532)
!9540 = !DILocation(line: 47, column: 28, scope: !9532)
!9541 = !DILocation(line: 47, column: 33, scope: !9532)
!9542 = !DILocation(line: 48, column: 26, scope: !9532)
!9543 = !DILocation(line: 47, column: 12, scope: !9532)
!9544 = !DILocation(line: 49, column: 32, scope: !9532)
!9545 = !DILocation(line: 49, column: 37, scope: !9532)
!9546 = !DILocation(line: 49, column: 12, scope: !9532)
!9547 = !DILocation(line: 53, column: 1, scope: !9532)
!9548 = distinct !DISubprogram(name: "set_region_number", scope: !9549, file: !9549, line: 32, type: !8401, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9550)
!9549 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9550 = !{!9551}
!9551 = !DILocalVariable(name: "index", arg: 1, scope: !9548, file: !9549, line: 32, type: !208)
!9552 = !DILocation(line: 0, scope: !9548)
!9553 = !DILocation(line: 34, column: 11, scope: !9548)
!9554 = !DILocation(line: 35, column: 1, scope: !9548)
!9555 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !9398, file: !9398, line: 88, type: !9556, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9558)
!9556 = !DISubroutineType(types: !9557)
!9557 = !{!208, !208}
!9558 = !{!9559}
!9559 = !DILocalVariable(name: "size", arg: 1, scope: !9555, file: !9398, line: 88, type: !208)
!9560 = !DILocation(line: 0, scope: !9555)
!9561 = !DILocation(line: 91, column: 11, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9555, file: !9398, line: 91, column: 6)
!9563 = !DILocation(line: 91, column: 6, scope: !9555)
!9564 = !DILocation(line: 100, column: 11, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9555, file: !9398, line: 100, column: 6)
!9566 = !DILocation(line: 100, column: 6, scope: !9555)
!9567 = !DILocation(line: 104, column: 35, scope: !9555)
!9568 = !DILocation(line: 104, column: 16, scope: !9555)
!9569 = !DILocation(line: 104, column: 50, scope: !9555)
!9570 = !DILocation(line: 104, column: 72, scope: !9555)
!9571 = !DILocation(line: 104, column: 2, scope: !9555)
!9572 = !DILocation(line: 106, column: 1, scope: !9555)
!9573 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !708, file: !708, line: 307, type: !9574, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9576)
!9574 = !DISubroutineType(types: !9575)
!9575 = !{null, !9377, !150}
!9576 = !{!9577, !9578}
!9577 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9573, file: !708, line: 308, type: !9377)
!9578 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9573, file: !708, line: 308, type: !150)
!9579 = !DILocation(line: 0, scope: !9573)
!9580 = !DILocation(line: 310, column: 6, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9573, file: !708, line: 310, column: 6)
!9582 = !DILocation(line: 316, column: 1, scope: !9573)
!9583 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !9398, file: !9398, line: 249, type: !9584, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9586)
!9584 = !DISubroutineType(types: !9585)
!9585 = !{!125, !9377, !150}
!9586 = !{!9587, !9588, !9589, !9590}
!9587 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !9583, file: !9398, line: 250, type: !9377)
!9588 = !DILocalVariable(name: "regions_num", arg: 2, scope: !9583, file: !9398, line: 250, type: !150)
!9589 = !DILocalVariable(name: "mpu_reg_index", scope: !9583, file: !9398, line: 252, type: !125)
!9590 = !DILocalVariable(name: "i", scope: !9591, file: !9398, line: 264, type: !125)
!9591 = distinct !DILexicalBlock(scope: !9592, file: !9398, line: 264, column: 3)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !9398, line: 261, column: 32)
!9593 = distinct !DILexicalBlock(scope: !9583, file: !9398, line: 261, column: 6)
!9594 = !DILocation(line: 0, scope: !9583)
!9595 = !DILocation(line: 252, column: 22, scope: !9583)
!9596 = !DILocation(line: 258, column: 18, scope: !9583)
!9597 = !DILocation(line: 261, column: 20, scope: !9593)
!9598 = !DILocation(line: 261, column: 6, scope: !9583)
!9599 = !DILocation(line: 0, scope: !9591)
!9600 = !DILocation(line: 265, column: 4, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9602, file: !9398, line: 264, column: 59)
!9602 = distinct !DILexicalBlock(scope: !9591, file: !9398, line: 264, column: 3)
!9603 = !DILocation(line: 264, column: 55, scope: !9602)
!9604 = !DILocation(line: 264, column: 33, scope: !9602)
!9605 = !DILocation(line: 264, column: 3, scope: !9591)
!9606 = distinct !{!9606, !9605, !9607}
!9607 = !DILocation(line: 266, column: 3, scope: !9591)
!9608 = !DILocation(line: 269, column: 2, scope: !9583)
!9609 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !9610, file: !9610, line: 218, type: !8401, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9611)
!9610 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9611 = !{!9612}
!9612 = !DILocalVariable(name: "rnr", arg: 1, scope: !9609, file: !9610, line: 218, type: !208)
!9613 = !DILocation(line: 0, scope: !9609)
!9614 = !DILocation(line: 220, column: 12, scope: !9609)
!9615 = !DILocation(line: 221, column: 13, scope: !9609)
!9616 = !DILocation(line: 222, column: 1, scope: !9609)
!9617 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !708, file: !708, line: 326, type: !9618, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !675, retainedNodes: !9620)
!9618 = !DISubroutineType(types: !9619)
!9619 = !{!125}
!9620 = !{!9621}
!9621 = !DILocalVariable(name: "r_index", scope: !9617, file: !708, line: 328, type: !208)
!9622 = !DILocation(line: 330, column: 17, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9617, file: !708, line: 330, column: 6)
!9624 = !DILocation(line: 330, column: 29, scope: !9623)
!9625 = !DILocation(line: 330, column: 6, scope: !9617)
!9626 = !DILocation(line: 347, column: 2, scope: !9617)
!9627 = !DILocation(line: 0, scope: !9617)
!9628 = !DILocation(line: 364, column: 29, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9630, file: !708, line: 364, column: 2)
!9630 = distinct !DILexicalBlock(scope: !9617, file: !708, line: 364, column: 2)
!9631 = !DILocation(line: 364, column: 2, scope: !9630)
!9632 = !DILocation(line: 365, column: 25, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9629, file: !708, line: 364, column: 66)
!9634 = !DILocation(line: 365, column: 3, scope: !9633)
!9635 = !DILocation(line: 364, column: 62, scope: !9629)
!9636 = distinct !{!9636, !9631, !9637}
!9637 = !DILocation(line: 366, column: 2, scope: !9630)
!9638 = !DILocation(line: 369, column: 23, scope: !9617)
!9639 = !DILocation(line: 369, column: 21, scope: !9617)
!9640 = !DILocation(line: 372, column: 2, scope: !9617)
!9641 = !DILocation(line: 443, column: 2, scope: !9617)
!9642 = !DILocation(line: 444, column: 1, scope: !9617)
!9643 = distinct !DISubprogram(name: "strcpy", scope: !9644, file: !9644, line: 20, type: !9645, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9649)
!9644 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9645 = !DISubroutineType(types: !9646)
!9646 = !{!393, !9647, !9648}
!9647 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !393)
!9648 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !140)
!9649 = !{!9650, !9651, !9652}
!9650 = !DILocalVariable(name: "d", arg: 1, scope: !9643, file: !9644, line: 20, type: !9647)
!9651 = !DILocalVariable(name: "s", arg: 2, scope: !9643, file: !9644, line: 20, type: !9648)
!9652 = !DILocalVariable(name: "dest", scope: !9643, file: !9644, line: 22, type: !393)
!9653 = !DILocation(line: 0, scope: !9643)
!9654 = !DILocation(line: 24, column: 9, scope: !9643)
!9655 = !DILocation(line: 24, column: 12, scope: !9643)
!9656 = !DILocation(line: 24, column: 2, scope: !9643)
!9657 = !DILocation(line: 25, column: 6, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9643, file: !9644, line: 24, column: 21)
!9659 = !DILocation(line: 26, column: 4, scope: !9658)
!9660 = !DILocation(line: 27, column: 4, scope: !9658)
!9661 = distinct !{!9661, !9656, !9662}
!9662 = !DILocation(line: 28, column: 2, scope: !9643)
!9663 = !DILocation(line: 30, column: 5, scope: !9643)
!9664 = !DILocation(line: 32, column: 2, scope: !9643)
!9665 = distinct !DISubprogram(name: "strncpy", scope: !9644, file: !9644, line: 42, type: !9666, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9668)
!9666 = !DISubroutineType(types: !9667)
!9667 = !{!393, !9647, !9648, !272}
!9668 = !{!9669, !9670, !9671, !9672}
!9669 = !DILocalVariable(name: "d", arg: 1, scope: !9665, file: !9644, line: 42, type: !9647)
!9670 = !DILocalVariable(name: "s", arg: 2, scope: !9665, file: !9644, line: 42, type: !9648)
!9671 = !DILocalVariable(name: "n", arg: 3, scope: !9665, file: !9644, line: 42, type: !272)
!9672 = !DILocalVariable(name: "dest", scope: !9665, file: !9644, line: 44, type: !393)
!9673 = !DILocation(line: 0, scope: !9665)
!9674 = !DILocation(line: 46, column: 12, scope: !9665)
!9675 = !DILocation(line: 46, column: 17, scope: !9665)
!9676 = !DILocation(line: 46, column: 20, scope: !9665)
!9677 = !DILocation(line: 46, column: 23, scope: !9665)
!9678 = !DILocation(line: 46, column: 2, scope: !9665)
!9679 = !DILocation(line: 47, column: 6, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9665, file: !9644, line: 46, column: 32)
!9681 = !DILocation(line: 48, column: 4, scope: !9680)
!9682 = !DILocation(line: 49, column: 4, scope: !9680)
!9683 = !DILocation(line: 50, column: 4, scope: !9680)
!9684 = distinct !{!9684, !9678, !9685}
!9685 = !DILocation(line: 51, column: 2, scope: !9665)
!9686 = !DILocation(line: 54, column: 6, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !9665, file: !9644, line: 53, column: 16)
!9688 = !DILocation(line: 55, column: 4, scope: !9687)
!9689 = !DILocation(line: 56, column: 4, scope: !9687)
!9690 = !DILocation(line: 53, column: 11, scope: !9665)
!9691 = !DILocation(line: 53, column: 2, scope: !9665)
!9692 = distinct !{!9692, !9691, !9693}
!9693 = !DILocation(line: 57, column: 2, scope: !9665)
!9694 = !DILocation(line: 59, column: 2, scope: !9665)
!9695 = distinct !DISubprogram(name: "strchr", scope: !9644, file: !9644, line: 69, type: !9696, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9698)
!9696 = !DISubroutineType(types: !9697)
!9697 = !{!393, !140, !125}
!9698 = !{!9699, !9700, !9701}
!9699 = !DILocalVariable(name: "s", arg: 1, scope: !9695, file: !9644, line: 69, type: !140)
!9700 = !DILocalVariable(name: "c", arg: 2, scope: !9695, file: !9644, line: 69, type: !125)
!9701 = !DILocalVariable(name: "tmp", scope: !9695, file: !9644, line: 71, type: !142)
!9702 = !DILocation(line: 0, scope: !9695)
!9703 = !DILocation(line: 73, column: 2, scope: !9695)
!9704 = !DILocation(line: 73, column: 10, scope: !9695)
!9705 = !DILocation(line: 73, column: 13, scope: !9695)
!9706 = !DILocation(line: 73, column: 21, scope: !9695)
!9707 = !DILocation(line: 74, column: 4, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9695, file: !9644, line: 73, column: 38)
!9709 = distinct !{!9709, !9703, !9710}
!9710 = !DILocation(line: 75, column: 2, scope: !9695)
!9711 = !DILocation(line: 77, column: 9, scope: !9695)
!9712 = !DILocation(line: 77, column: 2, scope: !9695)
!9713 = distinct !DISubprogram(name: "strrchr", scope: !9644, file: !9644, line: 87, type: !9696, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9714)
!9714 = !{!9715, !9716, !9717}
!9715 = !DILocalVariable(name: "s", arg: 1, scope: !9713, file: !9644, line: 87, type: !140)
!9716 = !DILocalVariable(name: "c", arg: 2, scope: !9713, file: !9644, line: 87, type: !125)
!9717 = !DILocalVariable(name: "match", scope: !9713, file: !9644, line: 89, type: !393)
!9718 = !DILocation(line: 0, scope: !9713)
!9719 = !DILocation(line: 91, column: 2, scope: !9713)
!9720 = !DILocation(line: 92, column: 7, scope: !9721)
!9721 = distinct !DILexicalBlock(scope: !9722, file: !9644, line: 92, column: 7)
!9722 = distinct !DILexicalBlock(scope: !9713, file: !9644, line: 91, column: 5)
!9723 = !DILocation(line: 92, column: 10, scope: !9721)
!9724 = !DILocation(line: 92, column: 7, scope: !9722)
!9725 = !DILocation(line: 95, column: 13, scope: !9713)
!9726 = !DILocation(line: 95, column: 2, scope: !9722)
!9727 = distinct !{!9727, !9719, !9728}
!9728 = !DILocation(line: 95, column: 15, scope: !9713)
!9729 = !DILocation(line: 97, column: 2, scope: !9713)
!9730 = distinct !DISubprogram(name: "strlen", scope: !9644, file: !9644, line: 107, type: !9731, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9733)
!9731 = !DISubroutineType(types: !9732)
!9732 = !{!272, !140}
!9733 = !{!9734, !9735}
!9734 = !DILocalVariable(name: "s", arg: 1, scope: !9730, file: !9644, line: 107, type: !140)
!9735 = !DILocalVariable(name: "n", scope: !9730, file: !9644, line: 109, type: !272)
!9736 = !DILocation(line: 0, scope: !9730)
!9737 = !DILocation(line: 111, column: 9, scope: !9730)
!9738 = !DILocation(line: 111, column: 12, scope: !9730)
!9739 = !DILocation(line: 111, column: 2, scope: !9730)
!9740 = !DILocation(line: 112, column: 4, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9730, file: !9644, line: 111, column: 21)
!9742 = !DILocation(line: 113, column: 4, scope: !9741)
!9743 = distinct !{!9743, !9739, !9744}
!9744 = !DILocation(line: 114, column: 2, scope: !9730)
!9745 = !DILocation(line: 116, column: 2, scope: !9730)
!9746 = distinct !DISubprogram(name: "strnlen", scope: !9644, file: !9644, line: 126, type: !9747, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9749)
!9747 = !DISubroutineType(types: !9748)
!9748 = !{!272, !140, !272}
!9749 = !{!9750, !9751, !9752}
!9750 = !DILocalVariable(name: "s", arg: 1, scope: !9746, file: !9644, line: 126, type: !140)
!9751 = !DILocalVariable(name: "maxlen", arg: 2, scope: !9746, file: !9644, line: 126, type: !272)
!9752 = !DILocalVariable(name: "n", scope: !9746, file: !9644, line: 128, type: !272)
!9753 = !DILocation(line: 0, scope: !9746)
!9754 = !DILocation(line: 130, column: 9, scope: !9746)
!9755 = !DILocation(line: 130, column: 12, scope: !9746)
!9756 = !DILocation(line: 130, column: 20, scope: !9746)
!9757 = !DILocation(line: 130, column: 2, scope: !9746)
!9758 = !DILocation(line: 131, column: 4, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9746, file: !9644, line: 130, column: 35)
!9760 = !DILocation(line: 132, column: 4, scope: !9759)
!9761 = distinct !{!9761, !9757, !9762}
!9762 = !DILocation(line: 133, column: 2, scope: !9746)
!9763 = !DILocation(line: 135, column: 2, scope: !9746)
!9764 = distinct !DISubprogram(name: "strcmp", scope: !9644, file: !9644, line: 145, type: !9765, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9767)
!9765 = !DISubroutineType(types: !9766)
!9766 = !{!125, !140, !140}
!9767 = !{!9768, !9769}
!9768 = !DILocalVariable(name: "s1", arg: 1, scope: !9764, file: !9644, line: 145, type: !140)
!9769 = !DILocalVariable(name: "s2", arg: 2, scope: !9764, file: !9644, line: 145, type: !140)
!9770 = !DILocation(line: 0, scope: !9764)
!9771 = !DILocation(line: 147, column: 10, scope: !9764)
!9772 = !DILocation(line: 147, column: 17, scope: !9764)
!9773 = !DILocation(line: 147, column: 14, scope: !9764)
!9774 = !DILocation(line: 147, column: 22, scope: !9764)
!9775 = !DILocation(line: 148, column: 5, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9764, file: !9644, line: 147, column: 40)
!9777 = !DILocation(line: 149, column: 5, scope: !9776)
!9778 = distinct !{!9778, !9779, !9780}
!9779 = !DILocation(line: 147, column: 2, scope: !9764)
!9780 = !DILocation(line: 150, column: 2, scope: !9764)
!9781 = !DILocation(line: 152, column: 9, scope: !9764)
!9782 = !DILocation(line: 152, column: 15, scope: !9764)
!9783 = !DILocation(line: 152, column: 13, scope: !9764)
!9784 = !DILocation(line: 152, column: 2, scope: !9764)
!9785 = distinct !DISubprogram(name: "strncmp", scope: !9644, file: !9644, line: 162, type: !9786, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9788)
!9786 = !DISubroutineType(types: !9787)
!9787 = !{!125, !140, !140, !272}
!9788 = !{!9789, !9790, !9791}
!9789 = !DILocalVariable(name: "s1", arg: 1, scope: !9785, file: !9644, line: 162, type: !140)
!9790 = !DILocalVariable(name: "s2", arg: 2, scope: !9785, file: !9644, line: 162, type: !140)
!9791 = !DILocalVariable(name: "n", arg: 3, scope: !9785, file: !9644, line: 162, type: !272)
!9792 = !DILocation(line: 0, scope: !9785)
!9793 = !DILocation(line: 164, column: 17, scope: !9785)
!9794 = !DILocation(line: 164, column: 21, scope: !9785)
!9795 = !DILocation(line: 164, column: 28, scope: !9785)
!9796 = !DILocation(line: 164, column: 25, scope: !9785)
!9797 = !DILocation(line: 164, column: 33, scope: !9785)
!9798 = !DILocation(line: 165, column: 5, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9785, file: !9644, line: 164, column: 51)
!9800 = !DILocation(line: 166, column: 5, scope: !9799)
!9801 = !DILocation(line: 167, column: 4, scope: !9799)
!9802 = distinct !{!9802, !9803, !9804}
!9803 = !DILocation(line: 164, column: 2, scope: !9785)
!9804 = !DILocation(line: 168, column: 2, scope: !9785)
!9805 = !DILocation(line: 170, column: 25, scope: !9785)
!9806 = !DILocation(line: 170, column: 31, scope: !9785)
!9807 = !DILocation(line: 170, column: 29, scope: !9785)
!9808 = !DILocation(line: 170, column: 9, scope: !9785)
!9809 = !DILocation(line: 170, column: 2, scope: !9785)
!9810 = distinct !DISubprogram(name: "strtok_r", scope: !9644, file: !9644, line: 180, type: !9811, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9813)
!9811 = !DISubroutineType(types: !9812)
!9812 = !{!393, !393, !140, !392}
!9813 = !{!9814, !9815, !9816, !9817, !9818}
!9814 = !DILocalVariable(name: "str", arg: 1, scope: !9810, file: !9644, line: 180, type: !393)
!9815 = !DILocalVariable(name: "sep", arg: 2, scope: !9810, file: !9644, line: 180, type: !140)
!9816 = !DILocalVariable(name: "state", arg: 3, scope: !9810, file: !9644, line: 180, type: !392)
!9817 = !DILocalVariable(name: "start", scope: !9810, file: !9644, line: 182, type: !393)
!9818 = !DILocalVariable(name: "end", scope: !9810, file: !9644, line: 182, type: !393)
!9819 = !DILocation(line: 0, scope: !9810)
!9820 = !DILocation(line: 184, column: 10, scope: !9810)
!9821 = !DILocation(line: 184, column: 22, scope: !9810)
!9822 = !DILocation(line: 187, column: 9, scope: !9810)
!9823 = !DILocation(line: 187, column: 16, scope: !9810)
!9824 = !DILocation(line: 187, column: 19, scope: !9810)
!9825 = !DILocation(line: 187, column: 2, scope: !9810)
!9826 = !DILocation(line: 188, column: 8, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9810, file: !9644, line: 187, column: 40)
!9828 = distinct !{!9828, !9825, !9829}
!9829 = !DILocation(line: 189, column: 2, scope: !9810)
!9830 = !DILocation(line: 198, column: 9, scope: !9810)
!9831 = !DILocation(line: 198, column: 18, scope: !9810)
!9832 = !DILocation(line: 198, column: 17, scope: !9810)
!9833 = !DILocation(line: 198, column: 2, scope: !9810)
!9834 = !DILocation(line: 199, column: 6, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9810, file: !9644, line: 198, column: 37)
!9836 = !DILocation(line: 198, column: 14, scope: !9810)
!9837 = distinct !{!9837, !9833, !9838}
!9838 = !DILocation(line: 200, column: 2, scope: !9810)
!9839 = !DILocation(line: 203, column: 8, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9841, file: !9644, line: 202, column: 20)
!9841 = distinct !DILexicalBlock(scope: !9810, file: !9644, line: 202, column: 6)
!9842 = !DILocation(line: 204, column: 16, scope: !9840)
!9843 = !DILocation(line: 205, column: 2, scope: !9840)
!9844 = !DILocation(line: 210, column: 1, scope: !9810)
!9845 = distinct !DISubprogram(name: "strcat", scope: !9644, file: !9644, line: 212, type: !9645, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9846)
!9846 = !{!9847, !9848}
!9847 = !DILocalVariable(name: "dest", arg: 1, scope: !9845, file: !9644, line: 212, type: !9647)
!9848 = !DILocalVariable(name: "src", arg: 2, scope: !9845, file: !9644, line: 212, type: !9648)
!9849 = !DILocation(line: 0, scope: !9845)
!9850 = !DILocation(line: 214, column: 16, scope: !9845)
!9851 = !DILocation(line: 214, column: 14, scope: !9845)
!9852 = !DILocation(line: 214, column: 2, scope: !9845)
!9853 = !DILocation(line: 215, column: 2, scope: !9845)
!9854 = distinct !DISubprogram(name: "strncat", scope: !9644, file: !9644, line: 218, type: !9666, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9855)
!9855 = !{!9856, !9857, !9858, !9859, !9860}
!9856 = !DILocalVariable(name: "dest", arg: 1, scope: !9854, file: !9644, line: 218, type: !9647)
!9857 = !DILocalVariable(name: "src", arg: 2, scope: !9854, file: !9644, line: 218, type: !9648)
!9858 = !DILocalVariable(name: "n", arg: 3, scope: !9854, file: !9644, line: 219, type: !272)
!9859 = !DILocalVariable(name: "orig_dest", scope: !9854, file: !9644, line: 221, type: !393)
!9860 = !DILocalVariable(name: "len", scope: !9854, file: !9644, line: 222, type: !272)
!9861 = !DILocation(line: 0, scope: !9854)
!9862 = !DILocation(line: 222, column: 15, scope: !9854)
!9863 = !DILocation(line: 224, column: 7, scope: !9854)
!9864 = !DILocation(line: 225, column: 14, scope: !9854)
!9865 = !DILocation(line: 225, column: 19, scope: !9854)
!9866 = !DILocation(line: 225, column: 11, scope: !9854)
!9867 = !DILocation(line: 225, column: 23, scope: !9854)
!9868 = !DILocation(line: 225, column: 28, scope: !9854)
!9869 = !DILocation(line: 225, column: 2, scope: !9854)
!9870 = !DILocation(line: 226, column: 17, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9854, file: !9644, line: 225, column: 38)
!9872 = !DILocation(line: 226, column: 8, scope: !9871)
!9873 = !DILocation(line: 226, column: 11, scope: !9871)
!9874 = distinct !{!9874, !9869, !9875}
!9875 = !DILocation(line: 227, column: 2, scope: !9854)
!9876 = !DILocation(line: 228, column: 8, scope: !9854)
!9877 = !DILocation(line: 230, column: 2, scope: !9854)
!9878 = distinct !DISubprogram(name: "memcmp", scope: !9644, file: !9644, line: 239, type: !9879, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9881)
!9879 = !DISubroutineType(types: !9880)
!9880 = !{!125, !13, !13, !272}
!9881 = !{!9882, !9883, !9884, !9885, !9886}
!9882 = !DILocalVariable(name: "m1", arg: 1, scope: !9878, file: !9644, line: 239, type: !13)
!9883 = !DILocalVariable(name: "m2", arg: 2, scope: !9878, file: !9644, line: 239, type: !13)
!9884 = !DILocalVariable(name: "n", arg: 3, scope: !9878, file: !9644, line: 239, type: !272)
!9885 = !DILocalVariable(name: "c1", scope: !9878, file: !9644, line: 241, type: !140)
!9886 = !DILocalVariable(name: "c2", scope: !9878, file: !9644, line: 242, type: !140)
!9887 = !DILocation(line: 0, scope: !9878)
!9888 = !DILocation(line: 244, column: 7, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9878, file: !9644, line: 244, column: 6)
!9890 = !DILocation(line: 244, column: 6, scope: !9878)
!9891 = !DILocation(line: 248, column: 10, scope: !9878)
!9892 = !DILocation(line: 248, column: 14, scope: !9878)
!9893 = !DILocation(line: 248, column: 19, scope: !9878)
!9894 = !DILocation(line: 248, column: 2, scope: !9878)
!9895 = !DILocation(line: 248, column: 23, scope: !9878)
!9896 = !DILocation(line: 248, column: 30, scope: !9878)
!9897 = !DILocation(line: 248, column: 27, scope: !9878)
!9898 = !DILocation(line: 249, column: 5, scope: !9899)
!9899 = distinct !DILexicalBlock(scope: !9878, file: !9644, line: 248, column: 36)
!9900 = !DILocation(line: 250, column: 5, scope: !9899)
!9901 = distinct !{!9901, !9894, !9902}
!9902 = !DILocation(line: 251, column: 2, scope: !9878)
!9903 = !DILocation(line: 253, column: 9, scope: !9878)
!9904 = !DILocation(line: 253, column: 15, scope: !9878)
!9905 = !DILocation(line: 253, column: 13, scope: !9878)
!9906 = !DILocation(line: 253, column: 2, scope: !9878)
!9907 = !DILocation(line: 254, column: 1, scope: !9878)
!9908 = distinct !DISubprogram(name: "memmove", scope: !9644, file: !9644, line: 263, type: !9909, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9911)
!9909 = !DISubroutineType(types: !9910)
!9910 = !{!124, !124, !13, !272}
!9911 = !{!9912, !9913, !9914, !9915, !9916}
!9912 = !DILocalVariable(name: "d", arg: 1, scope: !9908, file: !9644, line: 263, type: !124)
!9913 = !DILocalVariable(name: "s", arg: 2, scope: !9908, file: !9644, line: 263, type: !13)
!9914 = !DILocalVariable(name: "n", arg: 3, scope: !9908, file: !9644, line: 263, type: !272)
!9915 = !DILocalVariable(name: "dest", scope: !9908, file: !9644, line: 265, type: !393)
!9916 = !DILocalVariable(name: "src", scope: !9908, file: !9644, line: 266, type: !140)
!9917 = !DILocation(line: 0, scope: !9908)
!9918 = !DILocation(line: 268, column: 21, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9908, file: !9644, line: 268, column: 6)
!9920 = !DILocation(line: 268, column: 28, scope: !9919)
!9921 = !DILocation(line: 268, column: 6, scope: !9908)
!9922 = !DILocation(line: 280, column: 12, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9919, file: !9644, line: 278, column: 9)
!9924 = !DILocation(line: 280, column: 3, scope: !9923)
!9925 = !DILocation(line: 275, column: 5, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9927, file: !9644, line: 274, column: 17)
!9927 = distinct !DILexicalBlock(scope: !9919, file: !9644, line: 268, column: 33)
!9928 = !DILocation(line: 276, column: 14, scope: !9926)
!9929 = !DILocation(line: 276, column: 4, scope: !9926)
!9930 = !DILocation(line: 276, column: 12, scope: !9926)
!9931 = !DILocation(line: 274, column: 12, scope: !9927)
!9932 = !DILocation(line: 274, column: 3, scope: !9927)
!9933 = distinct !{!9933, !9932, !9934}
!9934 = !DILocation(line: 277, column: 3, scope: !9927)
!9935 = !DILocation(line: 281, column: 12, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9923, file: !9644, line: 280, column: 17)
!9937 = !DILocation(line: 281, column: 10, scope: !9936)
!9938 = !DILocation(line: 282, column: 8, scope: !9936)
!9939 = !DILocation(line: 283, column: 7, scope: !9936)
!9940 = !DILocation(line: 284, column: 5, scope: !9936)
!9941 = distinct !{!9941, !9924, !9942}
!9942 = !DILocation(line: 285, column: 3, scope: !9923)
!9943 = !DILocation(line: 288, column: 2, scope: !9908)
!9944 = distinct !DISubprogram(name: "memcpy", scope: !9644, file: !9644, line: 298, type: !9945, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9949)
!9945 = !DISubroutineType(types: !9946)
!9946 = !{!124, !9947, !9948, !272}
!9947 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !124)
!9948 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!9949 = !{!9950, !9951, !9952, !9953, !9954}
!9950 = !DILocalVariable(name: "d", arg: 1, scope: !9944, file: !9644, line: 298, type: !9947)
!9951 = !DILocalVariable(name: "s", arg: 2, scope: !9944, file: !9644, line: 298, type: !9948)
!9952 = !DILocalVariable(name: "n", arg: 3, scope: !9944, file: !9644, line: 298, type: !272)
!9953 = !DILocalVariable(name: "d_byte", scope: !9944, file: !9644, line: 302, type: !1132)
!9954 = !DILocalVariable(name: "s_byte", scope: !9944, file: !9644, line: 303, type: !3066)
!9955 = !DILocation(line: 0, scope: !9944)
!9956 = !DILocation(line: 337, column: 11, scope: !9944)
!9957 = !DILocation(line: 337, column: 2, scope: !9944)
!9958 = !DILocation(line: 338, column: 25, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9944, file: !9644, line: 337, column: 16)
!9960 = !DILocation(line: 338, column: 17, scope: !9959)
!9961 = !DILocation(line: 338, column: 11, scope: !9959)
!9962 = !DILocation(line: 338, column: 15, scope: !9959)
!9963 = !DILocation(line: 339, column: 4, scope: !9959)
!9964 = distinct !{!9964, !9957, !9965}
!9965 = !DILocation(line: 340, column: 2, scope: !9944)
!9966 = !DILocation(line: 342, column: 2, scope: !9944)
!9967 = distinct !DISubprogram(name: "memset", scope: !9644, file: !9644, line: 352, type: !9968, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9970)
!9968 = !DISubroutineType(types: !9969)
!9969 = !{!124, !124, !125, !272}
!9970 = !{!9971, !9972, !9973, !9974, !9975}
!9971 = !DILocalVariable(name: "buf", arg: 1, scope: !9967, file: !9644, line: 352, type: !124)
!9972 = !DILocalVariable(name: "c", arg: 2, scope: !9967, file: !9644, line: 352, type: !125)
!9973 = !DILocalVariable(name: "n", arg: 3, scope: !9967, file: !9644, line: 352, type: !272)
!9974 = !DILocalVariable(name: "d_byte", scope: !9967, file: !9644, line: 356, type: !1132)
!9975 = !DILocalVariable(name: "c_byte", scope: !9967, file: !9644, line: 357, type: !151)
!9976 = !DILocation(line: 0, scope: !9967)
!9977 = !DILocation(line: 357, column: 25, scope: !9967)
!9978 = !DILocation(line: 389, column: 11, scope: !9967)
!9979 = !DILocation(line: 389, column: 2, scope: !9967)
!9980 = !DILocation(line: 390, column: 11, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9967, file: !9644, line: 389, column: 16)
!9982 = !DILocation(line: 390, column: 15, scope: !9981)
!9983 = !DILocation(line: 391, column: 4, scope: !9981)
!9984 = distinct !{!9984, !9979, !9985}
!9985 = !DILocation(line: 392, column: 2, scope: !9967)
!9986 = !DILocation(line: 394, column: 2, scope: !9967)
!9987 = distinct !DISubprogram(name: "memchr", scope: !9644, file: !9644, line: 404, type: !9988, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3063, retainedNodes: !9990)
!9988 = !DISubroutineType(types: !9989)
!9989 = !{!124, !13, !125, !272}
!9990 = !{!9991, !9992, !9993, !9994}
!9991 = !DILocalVariable(name: "s", arg: 1, scope: !9987, file: !9644, line: 404, type: !13)
!9992 = !DILocalVariable(name: "c", arg: 2, scope: !9987, file: !9644, line: 404, type: !125)
!9993 = !DILocalVariable(name: "n", arg: 3, scope: !9987, file: !9644, line: 404, type: !272)
!9994 = !DILocalVariable(name: "p", scope: !9995, file: !9644, line: 407, type: !3066)
!9995 = distinct !DILexicalBlock(scope: !9996, file: !9644, line: 406, column: 14)
!9996 = distinct !DILexicalBlock(scope: !9987, file: !9644, line: 406, column: 6)
!9997 = !DILocation(line: 0, scope: !9987)
!9998 = !DILocation(line: 406, column: 8, scope: !9996)
!9999 = !DILocation(line: 406, column: 6, scope: !9987)
!10000 = !DILocation(line: 409, column: 3, scope: !9995)
!10001 = !DILocation(line: 0, scope: !9995)
!10002 = !DILocation(line: 410, column: 8, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !10004, file: !9644, line: 410, column: 8)
!10004 = distinct !DILexicalBlock(scope: !9995, file: !9644, line: 409, column: 6)
!10005 = !DILocation(line: 410, column: 13, scope: !10003)
!10006 = !DILocation(line: 410, column: 8, scope: !10004)
!10007 = distinct !{!10007, !10000, !10008}
!10008 = !DILocation(line: 414, column: 20, scope: !9995)
!10009 = !DILocation(line: 417, column: 2, scope: !9987)
!10010 = !DILocation(line: 418, column: 1, scope: !9987)
!10011 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !718, file: !718, line: 23, type: !5071, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10012)
!10012 = !{!10013}
!10013 = !DILocalVariable(name: "hook", arg: 1, scope: !10011, file: !718, line: 23, type: !409)
!10014 = !DILocation(line: 0, scope: !10011)
!10015 = !DILocation(line: 25, column: 15, scope: !10011)
!10016 = !DILocation(line: 26, column: 1, scope: !10011)
!10017 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !718, file: !718, line: 14, type: !410, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10018)
!10018 = !{!10019}
!10019 = !DILocalVariable(name: "c", arg: 1, scope: !10017, file: !718, line: 14, type: !125)
!10020 = !DILocation(line: 0, scope: !10017)
!10021 = !DILocation(line: 18, column: 2, scope: !10017)
!10022 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !718, file: !718, line: 28, type: !10023, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10025)
!10023 = !DISubroutineType(types: !10024)
!10024 = !{!125, !125, !714}
!10025 = !{!10026, !10027}
!10026 = !DILocalVariable(name: "c", arg: 1, scope: !10022, file: !718, line: 28, type: !125)
!10027 = !DILocalVariable(name: "stream", arg: 2, scope: !10022, file: !718, line: 28, type: !714)
!10028 = !DILocation(line: 0, scope: !10022)
!10029 = !DILocation(line: 30, column: 27, scope: !10022)
!10030 = !DILocation(line: 30, column: 50, scope: !10022)
!10031 = !DILocation(line: 30, column: 9, scope: !10022)
!10032 = !DILocation(line: 30, column: 2, scope: !10022)
!10033 = distinct !DISubprogram(name: "fputc", scope: !718, file: !718, line: 41, type: !10023, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10034)
!10034 = !{!10035, !10036}
!10035 = !DILocalVariable(name: "c", arg: 1, scope: !10033, file: !718, line: 41, type: !125)
!10036 = !DILocalVariable(name: "stream", arg: 2, scope: !10033, file: !718, line: 41, type: !714)
!10037 = !DILocation(line: 0, scope: !10033)
!10038 = !DILocation(line: 43, column: 9, scope: !10033)
!10039 = !DILocation(line: 43, column: 2, scope: !10033)
!10040 = distinct !DISubprogram(name: "zephyr_fputc", scope: !10041, file: !10041, line: 72, type: !10023, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10042)
!10041 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!10042 = !{!10043, !10044}
!10043 = !DILocalVariable(name: "c", arg: 1, scope: !10040, file: !10041, line: 72, type: !125)
!10044 = !DILocalVariable(name: "stream", arg: 2, scope: !10040, file: !10041, line: 72, type: !714)
!10045 = !DILocation(line: 0, scope: !10040)
!10046 = !DILocation(line: 81, column: 2, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10040, file: !10041, line: 81, column: 2)
!10048 = !{i64 2154805158}
!10049 = !DILocation(line: 82, column: 9, scope: !10040)
!10050 = !DILocation(line: 82, column: 2, scope: !10040)
!10051 = distinct !DISubprogram(name: "fputs", scope: !718, file: !718, line: 46, type: !10052, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10055)
!10052 = !DISubroutineType(types: !10053)
!10053 = !{!125, !9648, !10054}
!10054 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !714)
!10055 = !{!10056, !10057, !10058, !10059}
!10056 = !DILocalVariable(name: "s", arg: 1, scope: !10051, file: !718, line: 46, type: !9648)
!10057 = !DILocalVariable(name: "stream", arg: 2, scope: !10051, file: !718, line: 46, type: !10054)
!10058 = !DILocalVariable(name: "len", scope: !10051, file: !718, line: 48, type: !125)
!10059 = !DILocalVariable(name: "ret", scope: !10051, file: !718, line: 49, type: !125)
!10060 = !DILocation(line: 0, scope: !10051)
!10061 = !DILocation(line: 48, column: 12, scope: !10051)
!10062 = !DILocation(line: 51, column: 8, scope: !10051)
!10063 = !DILocation(line: 53, column: 13, scope: !10051)
!10064 = !DILocation(line: 53, column: 9, scope: !10051)
!10065 = !DILocation(line: 53, column: 2, scope: !10051)
!10066 = distinct !DISubprogram(name: "fwrite", scope: !718, file: !718, line: 99, type: !10067, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10069)
!10067 = !DISubroutineType(types: !10068)
!10068 = !{!272, !9948, !272, !272, !10054}
!10069 = !{!10070, !10071, !10072, !10073}
!10070 = !DILocalVariable(name: "ptr", arg: 1, scope: !10066, file: !718, line: 99, type: !9948)
!10071 = !DILocalVariable(name: "size", arg: 2, scope: !10066, file: !718, line: 99, type: !272)
!10072 = !DILocalVariable(name: "nitems", arg: 3, scope: !10066, file: !718, line: 99, type: !272)
!10073 = !DILocalVariable(name: "stream", arg: 4, scope: !10066, file: !718, line: 100, type: !10054)
!10074 = !DILocation(line: 0, scope: !10066)
!10075 = !DILocation(line: 102, column: 9, scope: !10066)
!10076 = !DILocation(line: 102, column: 2, scope: !10066)
!10077 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !10041, file: !10041, line: 96, type: !10067, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10078)
!10078 = !{!10079, !10080, !10081, !10082}
!10079 = !DILocalVariable(name: "ptr", arg: 1, scope: !10077, file: !10041, line: 96, type: !9948)
!10080 = !DILocalVariable(name: "size", arg: 2, scope: !10077, file: !10041, line: 96, type: !272)
!10081 = !DILocalVariable(name: "nitems", arg: 3, scope: !10077, file: !10041, line: 96, type: !272)
!10082 = !DILocalVariable(name: "stream", arg: 4, scope: !10077, file: !10041, line: 96, type: !10054)
!10083 = !DILocation(line: 0, scope: !10077)
!10084 = !DILocation(line: 107, column: 2, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10077, file: !10041, line: 107, column: 2)
!10086 = !{i64 2154805262}
!10087 = !DILocation(line: 108, column: 9, scope: !10077)
!10088 = !DILocation(line: 108, column: 2, scope: !10077)
!10089 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !718, file: !718, line: 56, type: !10067, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10090)
!10090 = !{!10091, !10092, !10093, !10094, !10095, !10096, !10097, !10098}
!10091 = !DILocalVariable(name: "ptr", arg: 1, scope: !10089, file: !718, line: 56, type: !9948)
!10092 = !DILocalVariable(name: "size", arg: 2, scope: !10089, file: !718, line: 56, type: !272)
!10093 = !DILocalVariable(name: "nitems", arg: 3, scope: !10089, file: !718, line: 57, type: !272)
!10094 = !DILocalVariable(name: "stream", arg: 4, scope: !10089, file: !718, line: 57, type: !10054)
!10095 = !DILocalVariable(name: "i", scope: !10089, file: !718, line: 59, type: !272)
!10096 = !DILocalVariable(name: "j", scope: !10089, file: !718, line: 60, type: !272)
!10097 = !DILocalVariable(name: "p", scope: !10089, file: !718, line: 61, type: !3066)
!10098 = !DILabel(scope: !10089, name: "done", file: !718, line: 82)
!10099 = !DILocation(line: 0, scope: !10089)
!10100 = !DILocation(line: 63, column: 14, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10089, file: !718, line: 63, column: 6)
!10102 = !DILocation(line: 63, column: 24, scope: !10101)
!10103 = !DILocation(line: 72, column: 3, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10089, file: !718, line: 70, column: 5)
!10105 = !DILocation(line: 0, scope: !10104)
!10106 = !DILocation(line: 73, column: 8, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10108, file: !718, line: 73, column: 8)
!10108 = distinct !DILexicalBlock(scope: !10104, file: !718, line: 72, column: 6)
!10109 = !DILocation(line: 73, column: 29, scope: !10107)
!10110 = !DILocation(line: 73, column: 27, scope: !10107)
!10111 = !DILocation(line: 73, column: 21, scope: !10107)
!10112 = !DILocation(line: 73, column: 33, scope: !10107)
!10113 = !DILocation(line: 73, column: 8, scope: !10108)
!10114 = !DILocation(line: 76, column: 5, scope: !10108)
!10115 = !DILocation(line: 77, column: 14, scope: !10104)
!10116 = !DILocation(line: 77, column: 3, scope: !10108)
!10117 = distinct !{!10117, !10103, !10118}
!10118 = !DILocation(line: 77, column: 17, scope: !10104)
!10119 = !DILocation(line: 79, column: 4, scope: !10104)
!10120 = !DILocation(line: 80, column: 13, scope: !10089)
!10121 = !DILocation(line: 80, column: 2, scope: !10104)
!10122 = distinct !{!10122, !10123, !10124}
!10123 = !DILocation(line: 70, column: 2, scope: !10089)
!10124 = !DILocation(line: 80, column: 16, scope: !10089)
!10125 = !DILocation(line: 82, column: 1, scope: !10089)
!10126 = !DILocation(line: 83, column: 17, scope: !10089)
!10127 = !DILocation(line: 83, column: 2, scope: !10089)
!10128 = !DILocation(line: 84, column: 1, scope: !10089)
!10129 = distinct !DISubprogram(name: "puts", scope: !718, file: !718, line: 106, type: !10130, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !711, retainedNodes: !10132)
!10130 = !DISubroutineType(types: !10131)
!10131 = !{!125, !140}
!10132 = !{!10133}
!10133 = !DILocalVariable(name: "s", arg: 1, scope: !10129, file: !718, line: 106, type: !140)
!10134 = !DILocation(line: 0, scope: !10129)
!10135 = !DILocation(line: 108, column: 6, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10129, file: !718, line: 108, column: 6)
!10137 = !DILocation(line: 108, column: 23, scope: !10136)
!10138 = !DILocation(line: 108, column: 6, scope: !10129)
!10139 = !DILocation(line: 112, column: 9, scope: !10129)
!10140 = !DILocation(line: 112, column: 29, scope: !10129)
!10141 = !DILocation(line: 112, column: 2, scope: !10129)
!10142 = !DILocation(line: 113, column: 1, scope: !10129)
!10143 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !850, file: !850, line: 368, type: !901, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10144)
!10144 = !{!10145}
!10145 = !DILocalVariable(name: "dev", arg: 1, scope: !10143, file: !850, line: 368, type: !879)
!10146 = !DILocation(line: 0, scope: !10143)
!10147 = !DILocation(line: 370, column: 2, scope: !10143)
!10148 = !DILocation(line: 371, column: 1, scope: !10143)
!10149 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !850, file: !850, line: 243, type: !10150, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{null, !125, !125, !879}
!10152 = !{!10153, !10154, !10155, !10156, !10158}
!10153 = !DILocalVariable(name: "min", arg: 1, scope: !10149, file: !850, line: 243, type: !125)
!10154 = !DILocalVariable(name: "max", arg: 2, scope: !10149, file: !850, line: 243, type: !125)
!10155 = !DILocalVariable(name: "dev", arg: 3, scope: !10149, file: !850, line: 243, type: !879)
!10156 = !DILocalVariable(name: "data", scope: !10149, file: !850, line: 245, type: !10157)
!10157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 32)
!10158 = !DILocalVariable(name: "line", scope: !10149, file: !850, line: 246, type: !125)
!10159 = !DILocation(line: 0, scope: !10149)
!10160 = !DILocation(line: 245, column: 38, scope: !10149)
!10161 = !DILocation(line: 249, column: 24, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10163, file: !850, line: 249, column: 2)
!10163 = distinct !DILexicalBlock(scope: !10149, file: !850, line: 249, column: 2)
!10164 = !DILocation(line: 249, column: 2, scope: !10163)
!10165 = !DILocation(line: 251, column: 7, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !850, line: 251, column: 7)
!10167 = distinct !DILexicalBlock(scope: !10162, file: !850, line: 249, column: 39)
!10168 = !DILocation(line: 251, column: 7, scope: !10167)
!10169 = !DILocation(line: 253, column: 4, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10166, file: !850, line: 251, column: 36)
!10171 = !DILocation(line: 256, column: 24, scope: !10172)
!10172 = distinct !DILexicalBlock(scope: !10170, file: !850, line: 256, column: 8)
!10173 = !DILocation(line: 256, column: 9, scope: !10172)
!10174 = !DILocation(line: 256, column: 8, scope: !10170)
!10175 = !DILocation(line: 260, column: 43, scope: !10170)
!10176 = !DILocation(line: 260, column: 4, scope: !10170)
!10177 = !DILocation(line: 261, column: 3, scope: !10170)
!10178 = !DILocation(line: 249, column: 35, scope: !10162)
!10179 = distinct !{!10179, !10164, !10180}
!10180 = !DILocation(line: 262, column: 2, scope: !10163)
!10181 = !DILocation(line: 263, column: 1, scope: !10149)
!10182 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !850, file: !850, line: 158, type: !410, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10183)
!10183 = !{!10184}
!10184 = !DILocalVariable(name: "line", arg: 1, scope: !10182, file: !850, line: 158, type: !125)
!10185 = !DILocation(line: 0, scope: !10182)
!10186 = !DILocation(line: 170, column: 38, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !850, line: 160, column: 17)
!10188 = distinct !DILexicalBlock(scope: !10182, file: !850, line: 160, column: 6)
!10189 = !DILocation(line: 170, column: 10, scope: !10187)
!10190 = !DILocation(line: 176, column: 1, scope: !10182)
!10191 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !850, file: !850, line: 183, type: !10192, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10194)
!10192 = !DISubroutineType(types: !10193)
!10193 = !{null, !125}
!10194 = !{!10195}
!10195 = !DILocalVariable(name: "line", arg: 1, scope: !10191, file: !850, line: 183, type: !125)
!10196 = !DILocation(line: 0, scope: !10191)
!10197 = !DILocation(line: 195, column: 28, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !850, line: 185, column: 17)
!10199 = distinct !DILexicalBlock(scope: !10191, file: !850, line: 185, column: 6)
!10200 = !DILocation(line: 195, column: 3, scope: !10198)
!10201 = !DILocation(line: 200, column: 1, scope: !10191)
!10202 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !10203, file: !10203, line: 910, type: !8401, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10204)
!10203 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10204 = !{!10205}
!10205 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10202, file: !10203, line: 910, type: !208)
!10206 = !DILocation(line: 0, scope: !10202)
!10207 = !DILocation(line: 912, column: 3, scope: !10202)
!10208 = !DILocation(line: 913, column: 1, scope: !10202)
!10209 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !10203, file: !10203, line: 834, type: !9556, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10210)
!10210 = !{!10211}
!10211 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10209, file: !10203, line: 834, type: !208)
!10212 = !DILocation(line: 0, scope: !10209)
!10213 = !DILocation(line: 836, column: 11, scope: !10209)
!10214 = !DILocation(line: 836, column: 40, scope: !10209)
!10215 = !DILocation(line: 836, column: 3, scope: !10209)
!10216 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !850, file: !850, line: 304, type: !901, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10217)
!10217 = !{!10218}
!10218 = !DILocalVariable(name: "dev", arg: 1, scope: !10216, file: !850, line: 304, type: !879)
!10219 = !DILocation(line: 0, scope: !10216)
!10220 = !DILocation(line: 306, column: 2, scope: !10216)
!10221 = !DILocation(line: 307, column: 1, scope: !10216)
!10222 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !850, file: !850, line: 299, type: !901, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10223)
!10223 = !{!10224}
!10224 = !DILocalVariable(name: "dev", arg: 1, scope: !10222, file: !850, line: 299, type: !879)
!10225 = !DILocation(line: 0, scope: !10222)
!10226 = !DILocation(line: 301, column: 2, scope: !10222)
!10227 = !DILocation(line: 302, column: 1, scope: !10222)
!10228 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !850, file: !850, line: 294, type: !901, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10229)
!10229 = !{!10230}
!10230 = !DILocalVariable(name: "dev", arg: 1, scope: !10228, file: !850, line: 294, type: !879)
!10231 = !DILocation(line: 0, scope: !10228)
!10232 = !DILocation(line: 296, column: 2, scope: !10228)
!10233 = !DILocation(line: 297, column: 1, scope: !10228)
!10234 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !850, file: !850, line: 397, type: !901, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10235)
!10235 = !{!10236}
!10236 = !DILocalVariable(name: "dev", arg: 1, scope: !10234, file: !850, line: 397, type: !879)
!10237 = !DILocation(line: 0, scope: !10234)
!10238 = !DILocation(line: 399, column: 2, scope: !10234)
!10239 = !DILocation(line: 400, column: 1, scope: !10234)
!10240 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !850, file: !850, line: 392, type: !901, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10241)
!10241 = !{!10242}
!10242 = !DILocalVariable(name: "dev", arg: 1, scope: !10240, file: !850, line: 392, type: !879)
!10243 = !DILocation(line: 0, scope: !10240)
!10244 = !DILocation(line: 394, column: 2, scope: !10240)
!10245 = !DILocation(line: 395, column: 1, scope: !10240)
!10246 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !850, file: !850, line: 289, type: !901, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10247)
!10247 = !{!10248}
!10248 = !DILocalVariable(name: "dev", arg: 1, scope: !10246, file: !850, line: 289, type: !879)
!10249 = !DILocation(line: 0, scope: !10246)
!10250 = !DILocation(line: 291, column: 2, scope: !10246)
!10251 = !DILocation(line: 292, column: 1, scope: !10246)
!10252 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !850, file: !850, line: 387, type: !901, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10253)
!10253 = !{!10254}
!10254 = !DILocalVariable(name: "dev", arg: 1, scope: !10252, file: !850, line: 387, type: !879)
!10255 = !DILocation(line: 0, scope: !10252)
!10256 = !DILocation(line: 389, column: 2, scope: !10252)
!10257 = !DILocation(line: 390, column: 1, scope: !10252)
!10258 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !850, file: !850, line: 382, type: !901, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10259)
!10259 = !{!10260}
!10260 = !DILocalVariable(name: "dev", arg: 1, scope: !10258, file: !850, line: 382, type: !879)
!10261 = !DILocation(line: 0, scope: !10258)
!10262 = !DILocation(line: 384, column: 2, scope: !10258)
!10263 = !DILocation(line: 385, column: 1, scope: !10258)
!10264 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !850, file: !850, line: 373, type: !901, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10265)
!10265 = !{!10266}
!10266 = !DILocalVariable(name: "dev", arg: 1, scope: !10264, file: !850, line: 373, type: !879)
!10267 = !DILocation(line: 0, scope: !10264)
!10268 = !DILocation(line: 375, column: 2, scope: !10264)
!10269 = !DILocation(line: 376, column: 1, scope: !10264)
!10270 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !850, file: !850, line: 284, type: !901, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10271)
!10271 = !{!10272}
!10272 = !DILocalVariable(name: "dev", arg: 1, scope: !10270, file: !850, line: 284, type: !879)
!10273 = !DILocation(line: 0, scope: !10270)
!10274 = !DILocation(line: 286, column: 2, scope: !10270)
!10275 = !DILocation(line: 287, column: 1, scope: !10270)
!10276 = distinct !DISubprogram(name: "stm32_exti_init", scope: !850, file: !850, line: 416, type: !877, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10277)
!10277 = !{!10278}
!10278 = !DILocalVariable(name: "dev", arg: 1, scope: !10276, file: !850, line: 416, type: !879)
!10279 = !DILocation(line: 0, scope: !10276)
!10280 = !DILocation(line: 418, column: 2, scope: !10276)
!10281 = !DILocation(line: 420, column: 2, scope: !10276)
!10282 = !DILocation(line: 0, scope: !900)
!10283 = !DILocation(line: 493, column: 2, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !900, file: !850, line: 493, column: 2)
!10285 = !DILocation(line: 497, column: 2, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !900, file: !850, line: 497, column: 2)
!10287 = !DILocation(line: 507, column: 2, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !900, file: !850, line: 507, column: 2)
!10289 = !DILocation(line: 512, column: 2, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !900, file: !850, line: 512, column: 2)
!10291 = !DILocation(line: 516, column: 2, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !900, file: !850, line: 516, column: 2)
!10293 = !DILocation(line: 523, column: 2, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !900, file: !850, line: 523, column: 2)
!10295 = !DILocation(line: 527, column: 2, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !900, file: !850, line: 527, column: 2)
!10297 = !DILocation(line: 581, column: 2, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !900, file: !850, line: 581, column: 2)
!10299 = !DILocation(line: 586, column: 2, scope: !10300)
!10300 = distinct !DILexicalBlock(scope: !900, file: !850, line: 586, column: 2)
!10301 = !DILocation(line: 591, column: 2, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !900, file: !850, line: 591, column: 2)
!10303 = !DILocation(line: 595, column: 2, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !900, file: !850, line: 595, column: 2)
!10305 = !DILocation(line: 607, column: 1, scope: !900)
!10306 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !850, file: !850, line: 112, type: !10192, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10307)
!10307 = !{!10308, !10309}
!10308 = !DILocalVariable(name: "line", arg: 1, scope: !10306, file: !850, line: 112, type: !125)
!10309 = !DILocalVariable(name: "irqnum", scope: !10306, file: !850, line: 114, type: !125)
!10310 = !DILocation(line: 0, scope: !10306)
!10311 = !DILocation(line: 121, column: 11, scope: !10306)
!10312 = !DILocation(line: 130, column: 26, scope: !10306)
!10313 = !DILocation(line: 130, column: 2, scope: !10306)
!10314 = !DILocation(line: 134, column: 2, scope: !10306)
!10315 = !DILocation(line: 135, column: 1, scope: !10306)
!10316 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !10203, file: !10203, line: 268, type: !8401, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10317)
!10317 = !{!10318}
!10318 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10316, file: !10203, line: 268, type: !208)
!10319 = !DILocation(line: 0, scope: !10316)
!10320 = !DILocation(line: 270, column: 3, scope: !10316)
!10321 = !DILocation(line: 271, column: 1, scope: !10316)
!10322 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !850, file: !850, line: 137, type: !10192, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10323)
!10323 = !{!10324}
!10324 = !DILocalVariable(name: "line", arg: 1, scope: !10322, file: !850, line: 137, type: !125)
!10325 = !DILocation(line: 0, scope: !10322)
!10326 = !DILocation(line: 141, column: 11, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10322, file: !850, line: 141, column: 6)
!10328 = !DILocation(line: 141, column: 6, scope: !10322)
!10329 = !DILocation(line: 145, column: 28, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10327, file: !850, line: 141, column: 17)
!10331 = !DILocation(line: 145, column: 3, scope: !10330)
!10332 = !DILocation(line: 147, column: 2, scope: !10330)
!10333 = !DILocation(line: 151, column: 1, scope: !10322)
!10334 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !10203, file: !10203, line: 309, type: !8401, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10335)
!10335 = !{!10336}
!10336 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10334, file: !10203, line: 309, type: !208)
!10337 = !DILocation(line: 0, scope: !10334)
!10338 = !DILocation(line: 311, column: 3, scope: !10334)
!10339 = !DILocation(line: 312, column: 1, scope: !10334)
!10340 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !850, file: !850, line: 202, type: !10341, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10343)
!10341 = !DISubroutineType(types: !10342)
!10342 = !{null, !125, !125}
!10343 = !{!10344, !10345}
!10344 = !DILocalVariable(name: "line", arg: 1, scope: !10340, file: !850, line: 202, type: !125)
!10345 = !DILocalVariable(name: "trigger", arg: 2, scope: !10340, file: !850, line: 202, type: !125)
!10346 = !DILocation(line: 0, scope: !10340)
!10347 = !DILocation(line: 211, column: 2, scope: !10340)
!10348 = !DILocation(line: 213, column: 36, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10340, file: !850, line: 211, column: 19)
!10350 = !DILocation(line: 213, column: 3, scope: !10349)
!10351 = !DILocation(line: 214, column: 3, scope: !10349)
!10352 = !DILocation(line: 215, column: 3, scope: !10349)
!10353 = !DILocation(line: 217, column: 35, scope: !10349)
!10354 = !DILocation(line: 217, column: 3, scope: !10349)
!10355 = !DILocation(line: 218, column: 3, scope: !10349)
!10356 = !DILocation(line: 219, column: 3, scope: !10349)
!10357 = !DILocation(line: 221, column: 36, scope: !10349)
!10358 = !DILocation(line: 221, column: 3, scope: !10349)
!10359 = !DILocation(line: 222, column: 3, scope: !10349)
!10360 = !DILocation(line: 223, column: 3, scope: !10349)
!10361 = !DILocation(line: 225, column: 35, scope: !10349)
!10362 = !DILocation(line: 225, column: 3, scope: !10349)
!10363 = !DILocation(line: 226, column: 3, scope: !10349)
!10364 = !DILocation(line: 227, column: 3, scope: !10349)
!10365 = !DILocation(line: 232, column: 1, scope: !10340)
!10366 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !10203, file: !10203, line: 573, type: !8401, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10367)
!10367 = !{!10368}
!10368 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10366, file: !10203, line: 573, type: !208)
!10369 = !DILocation(line: 0, scope: !10366)
!10370 = !DILocation(line: 575, column: 3, scope: !10366)
!10371 = !DILocation(line: 577, column: 1, scope: !10366)
!10372 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !10203, file: !10203, line: 703, type: !8401, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10373)
!10373 = !{!10374}
!10374 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10372, file: !10203, line: 703, type: !208)
!10375 = !DILocation(line: 0, scope: !10372)
!10376 = !DILocation(line: 705, column: 3, scope: !10372)
!10377 = !DILocation(line: 706, column: 1, scope: !10372)
!10378 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !10203, file: !10203, line: 529, type: !8401, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10379)
!10379 = !{!10380}
!10380 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10378, file: !10203, line: 529, type: !208)
!10381 = !DILocation(line: 0, scope: !10378)
!10382 = !DILocation(line: 531, column: 3, scope: !10378)
!10383 = !DILocation(line: 533, column: 1, scope: !10378)
!10384 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !10203, file: !10203, line: 661, type: !8401, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10385)
!10385 = !{!10386}
!10386 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !10384, file: !10203, line: 661, type: !208)
!10387 = !DILocation(line: 0, scope: !10384)
!10388 = !DILocation(line: 663, column: 3, scope: !10384)
!10389 = !DILocation(line: 664, column: 1, scope: !10384)
!10390 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !850, file: !850, line: 433, type: !10391, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10393)
!10391 = !DISubroutineType(types: !10392)
!10392 = !{!125, !125, !890, !124}
!10393 = !{!10394, !10395, !10396, !10397, !10399}
!10394 = !DILocalVariable(name: "line", arg: 1, scope: !10390, file: !850, line: 433, type: !125)
!10395 = !DILocalVariable(name: "cb", arg: 2, scope: !10390, file: !850, line: 433, type: !890)
!10396 = !DILocalVariable(name: "arg", arg: 3, scope: !10390, file: !850, line: 433, type: !124)
!10397 = !DILocalVariable(name: "dev", scope: !10390, file: !850, line: 435, type: !10398)
!10398 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !879)
!10399 = !DILocalVariable(name: "data", scope: !10390, file: !850, line: 436, type: !10157)
!10400 = !DILocation(line: 0, scope: !10390)
!10401 = !DILocation(line: 438, column: 21, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10390, file: !850, line: 438, column: 6)
!10403 = !DILocation(line: 438, column: 6, scope: !10402)
!10404 = !DILocation(line: 438, column: 6, scope: !10390)
!10405 = !DILocation(line: 442, column: 20, scope: !10390)
!10406 = !DILocation(line: 443, column: 17, scope: !10390)
!10407 = !DILocation(line: 443, column: 22, scope: !10390)
!10408 = !DILocation(line: 445, column: 2, scope: !10390)
!10409 = !DILocation(line: 446, column: 1, scope: !10390)
!10410 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !850, file: !850, line: 448, type: !10192, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !746, retainedNodes: !10411)
!10411 = !{!10412, !10413, !10414}
!10412 = !DILocalVariable(name: "line", arg: 1, scope: !10410, file: !850, line: 448, type: !125)
!10413 = !DILocalVariable(name: "dev", scope: !10410, file: !850, line: 450, type: !10398)
!10414 = !DILocalVariable(name: "data", scope: !10410, file: !850, line: 451, type: !10157)
!10415 = !DILocation(line: 0, scope: !10410)
!10416 = !DILocation(line: 453, column: 17, scope: !10410)
!10417 = !DILocation(line: 453, column: 20, scope: !10410)
!10418 = !DILocation(line: 454, column: 17, scope: !10410)
!10419 = !DILocation(line: 454, column: 22, scope: !10410)
!10420 = !DILocation(line: 455, column: 1, scope: !10410)
!10421 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !1031, file: !1031, line: 183, type: !1069, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10422)
!10422 = !{!10423, !10424, !10425, !10426, !10427}
!10423 = !DILocalVariable(name: "dev", arg: 1, scope: !10421, file: !1031, line: 183, type: !1060)
!10424 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10421, file: !1031, line: 184, type: !1071)
!10425 = !DILocalVariable(name: "pclken", scope: !10421, file: !1031, line: 186, type: !1021)
!10426 = !DILocalVariable(name: "reg", scope: !10421, file: !1031, line: 187, type: !1798)
!10427 = !DILocalVariable(name: "reg_val", scope: !10421, file: !1031, line: 188, type: !208)
!10428 = !DILocation(line: 0, scope: !10421)
!10429 = !DILocation(line: 192, column: 6, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10421, file: !1031, line: 192, column: 6)
!10431 = !DILocation(line: 192, column: 6, scope: !10421)
!10432 = !DILocation(line: 197, column: 52, scope: !10421)
!10433 = !DILocation(line: 197, column: 8, scope: !10421)
!10434 = !DILocation(line: 198, column: 12, scope: !10421)
!10435 = !DILocation(line: 199, column: 21, scope: !10421)
!10436 = !DILocation(line: 199, column: 10, scope: !10421)
!10437 = !DILocation(line: 200, column: 7, scope: !10421)
!10438 = !DILocation(line: 202, column: 2, scope: !10421)
!10439 = !DILocation(line: 203, column: 1, scope: !10421)
!10440 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !1031, file: !1031, line: 205, type: !1069, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10441)
!10441 = !{!10442, !10443, !10444, !10445, !10446}
!10442 = !DILocalVariable(name: "dev", arg: 1, scope: !10440, file: !1031, line: 205, type: !1060)
!10443 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10440, file: !1031, line: 206, type: !1071)
!10444 = !DILocalVariable(name: "pclken", scope: !10440, file: !1031, line: 208, type: !1021)
!10445 = !DILocalVariable(name: "reg", scope: !10440, file: !1031, line: 209, type: !1798)
!10446 = !DILocalVariable(name: "reg_val", scope: !10440, file: !1031, line: 210, type: !208)
!10447 = !DILocation(line: 0, scope: !10440)
!10448 = !DILocation(line: 214, column: 6, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10440, file: !1031, line: 214, column: 6)
!10450 = !DILocation(line: 214, column: 6, scope: !10440)
!10451 = !DILocation(line: 219, column: 52, scope: !10440)
!10452 = !DILocation(line: 219, column: 8, scope: !10440)
!10453 = !DILocation(line: 220, column: 12, scope: !10440)
!10454 = !DILocation(line: 221, column: 22, scope: !10440)
!10455 = !DILocation(line: 221, column: 13, scope: !10440)
!10456 = !DILocation(line: 221, column: 10, scope: !10440)
!10457 = !DILocation(line: 222, column: 7, scope: !10440)
!10458 = !DILocation(line: 224, column: 2, scope: !10440)
!10459 = !DILocation(line: 225, column: 1, scope: !10440)
!10460 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !1031, file: !1031, line: 262, type: !1085, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10461)
!10461 = !{!10462, !10463, !10464, !10465, !10466, !10467, !10468, !10469}
!10462 = !DILocalVariable(name: "clock", arg: 1, scope: !10460, file: !1031, line: 262, type: !1060)
!10463 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10460, file: !1031, line: 263, type: !1071)
!10464 = !DILocalVariable(name: "rate", arg: 3, scope: !10460, file: !1031, line: 264, type: !1027)
!10465 = !DILocalVariable(name: "pclken", scope: !10460, file: !1031, line: 266, type: !1021)
!10466 = !DILocalVariable(name: "ahb_clock", scope: !10460, file: !1031, line: 273, type: !208)
!10467 = !DILocalVariable(name: "apb1_clock", scope: !10460, file: !1031, line: 274, type: !208)
!10468 = !DILocalVariable(name: "apb2_clock", scope: !10460, file: !1031, line: 276, type: !208)
!10469 = !DILocalVariable(name: "ahb3_clock", scope: !10460, file: !1031, line: 286, type: !208)
!10470 = !DILocation(line: 0, scope: !10460)
!10471 = !DILocation(line: 273, column: 23, scope: !10460)
!10472 = !DILocation(line: 274, column: 24, scope: !10460)
!10473 = !DILocation(line: 299, column: 18, scope: !10460)
!10474 = !DILocation(line: 299, column: 2, scope: !10460)
!10475 = !DILocation(line: 319, column: 3, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10460, file: !1031, line: 299, column: 23)
!10477 = !DILocation(line: 323, column: 3, scope: !10476)
!10478 = !DILocation(line: 346, column: 33, scope: !10476)
!10479 = !DILocation(line: 346, column: 11, scope: !10476)
!10480 = !DILocation(line: 350, column: 3, scope: !10476)
!10481 = !DILocation(line: 354, column: 33, scope: !10476)
!10482 = !DILocation(line: 354, column: 11, scope: !10476)
!10483 = !DILocation(line: 358, column: 3, scope: !10476)
!10484 = !DILocation(line: 374, column: 3, scope: !10476)
!10485 = !DILocation(line: 379, column: 3, scope: !10476)
!10486 = !DILocation(line: 0, scope: !10476)
!10487 = !DILocation(line: 396, column: 1, scope: !10460)
!10488 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !1031, file: !1031, line: 227, type: !1101, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10489)
!10489 = !{!10490, !10491, !10492, !10493, !10494, !10495, !10496, !10497}
!10490 = !DILocalVariable(name: "dev", arg: 1, scope: !10488, file: !1031, line: 227, type: !1060)
!10491 = !DILocalVariable(name: "sub_system", arg: 2, scope: !10488, file: !1031, line: 228, type: !1071)
!10492 = !DILocalVariable(name: "data", arg: 3, scope: !10488, file: !1031, line: 229, type: !124)
!10493 = !DILocalVariable(name: "pclken", scope: !10488, file: !1031, line: 233, type: !1021)
!10494 = !DILocalVariable(name: "reg", scope: !10488, file: !1031, line: 234, type: !1798)
!10495 = !DILocalVariable(name: "reg_val", scope: !10488, file: !1031, line: 235, type: !208)
!10496 = !DILocalVariable(name: "dt_val", scope: !10488, file: !1031, line: 235, type: !208)
!10497 = !DILocalVariable(name: "err", scope: !10488, file: !1031, line: 236, type: !125)
!10498 = !DILocation(line: 0, scope: !10488)
!10499 = !DILocation(line: 241, column: 30, scope: !10488)
!10500 = !DILocation(line: 241, column: 8, scope: !10488)
!10501 = !DILocation(line: 242, column: 10, scope: !10502)
!10502 = distinct !DILexicalBlock(scope: !10488, file: !1031, line: 242, column: 6)
!10503 = !DILocation(line: 242, column: 6, scope: !10488)
!10504 = !DILocation(line: 247, column: 11, scope: !10488)
!10505 = !DILocation(line: 248, column: 6, scope: !10488)
!10506 = !DILocation(line: 247, column: 44, scope: !10488)
!10507 = !DILocation(line: 250, column: 6, scope: !10488)
!10508 = !DILocation(line: 249, column: 52, scope: !10488)
!10509 = !DILocation(line: 249, column: 8, scope: !10488)
!10510 = !DILocation(line: 251, column: 12, scope: !10488)
!10511 = !DILocation(line: 252, column: 10, scope: !10488)
!10512 = !DILocation(line: 253, column: 7, scope: !10488)
!10513 = !DILocation(line: 255, column: 2, scope: !10488)
!10514 = !DILocation(line: 260, column: 1, scope: !10488)
!10515 = distinct !DISubprogram(name: "enabled_clock", scope: !1031, file: !1031, line: 100, type: !10516, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10518)
!10516 = !DISubroutineType(types: !10517)
!10517 = !{!125, !208}
!10518 = !{!10519, !10520}
!10519 = !DILocalVariable(name: "src_clk", arg: 1, scope: !10515, file: !1031, line: 100, type: !208)
!10520 = !DILocalVariable(name: "r", scope: !10515, file: !1031, line: 102, type: !125)
!10521 = !DILocation(line: 0, scope: !10515)
!10522 = !DILocation(line: 104, column: 2, scope: !10515)
!10523 = !DILocation(line: 180, column: 2, scope: !10515)
!10524 = !DILocation(line: 181, column: 1, scope: !10515)
!10525 = distinct !DISubprogram(name: "get_bus_clock", scope: !1031, file: !1031, line: 79, type: !10526, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10528)
!10526 = !DISubroutineType(types: !10527)
!10527 = !{!208, !208, !208}
!10528 = !{!10529, !10530}
!10529 = !DILocalVariable(name: "clock", arg: 1, scope: !10525, file: !1031, line: 79, type: !208)
!10530 = !DILocalVariable(name: "prescaler", arg: 2, scope: !10525, file: !1031, line: 79, type: !208)
!10531 = !DILocation(line: 0, scope: !10525)
!10532 = !DILocation(line: 81, column: 15, scope: !10525)
!10533 = !DILocation(line: 81, column: 2, scope: !10525)
!10534 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !1031, file: !1031, line: 68, type: !10535, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10537)
!10535 = !DISubroutineType(types: !10536)
!10536 = !{!208, !208, !125, !125, !125}
!10537 = !{!10538, !10539, !10540, !10541}
!10538 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !10534, file: !1031, line: 68, type: !208)
!10539 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !10534, file: !1031, line: 69, type: !125)
!10540 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !10534, file: !1031, line: 70, type: !125)
!10541 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !10534, file: !1031, line: 71, type: !125)
!10542 = !DILocation(line: 0, scope: !10534)
!10543 = !DILocation(line: 75, column: 22, scope: !10534)
!10544 = !DILocation(line: 76, column: 13, scope: !10534)
!10545 = !DILocation(line: 75, column: 34, scope: !10534)
!10546 = !DILocation(line: 75, column: 2, scope: !10534)
!10547 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !1031, file: !1031, line: 641, type: !1058, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10548)
!10548 = !{!10549, !10550, !10551}
!10549 = !DILocalVariable(name: "dev", arg: 1, scope: !10547, file: !1031, line: 641, type: !1060)
!10550 = !DILocalVariable(name: "old_flash_freq", scope: !10547, file: !1031, line: 664, type: !208)
!10551 = !DILocalVariable(name: "new_flash_freq", scope: !10547, file: !1031, line: 665, type: !208)
!10552 = !DILocation(line: 0, scope: !10547)
!10553 = !DILocation(line: 646, column: 2, scope: !10547)
!10554 = !DILocation(line: 667, column: 19, scope: !10547)
!10555 = !DILocation(line: 674, column: 21, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10547, file: !1031, line: 674, column: 6)
!10557 = !DILocation(line: 674, column: 6, scope: !10547)
!10558 = !DILocation(line: 675, column: 3, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10556, file: !1031, line: 674, column: 59)
!10560 = !DILocation(line: 676, column: 2, scope: !10559)
!10561 = !DILocation(line: 680, column: 2, scope: !10547)
!10562 = !DILocation(line: 683, column: 2, scope: !10547)
!10563 = !DILocation(line: 690, column: 3, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10565, file: !1031, line: 689, column: 9)
!10565 = distinct !DILexicalBlock(scope: !10547, file: !1031, line: 685, column: 6)
!10566 = !DILocation(line: 695, column: 2, scope: !10547)
!10567 = !DILocation(line: 696, column: 2, scope: !10547)
!10568 = !DILocation(line: 696, column: 9, scope: !10547)
!10569 = !DILocation(line: 696, column: 34, scope: !10547)
!10570 = distinct !{!10570, !10567, !10571}
!10571 = !DILocation(line: 697, column: 2, scope: !10547)
!10572 = !DILocation(line: 720, column: 21, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10547, file: !1031, line: 720, column: 6)
!10574 = !DILocation(line: 720, column: 6, scope: !10547)
!10575 = !DILocation(line: 721, column: 3, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10573, file: !1031, line: 720, column: 60)
!10577 = !DILocation(line: 722, column: 2, scope: !10576)
!10578 = !DILocation(line: 725, column: 18, scope: !10547)
!10579 = !DILocation(line: 728, column: 2, scope: !10547)
!10580 = !DILocation(line: 730, column: 2, scope: !10547)
!10581 = !DILocation(line: 745, column: 2, scope: !10547)
!10582 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !10583, file: !10583, line: 3275, type: !8391, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10583 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10584 = !DILocation(line: 3277, column: 21, scope: !10582)
!10585 = !DILocation(line: 3277, column: 3, scope: !10582)
!10586 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !1031, file: !1031, line: 507, type: !3297, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10587 = !DILocation(line: 516, column: 4, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10589, file: !1031, line: 515, column: 10)
!10589 = distinct !DILexicalBlock(scope: !10590, file: !1031, line: 513, column: 7)
!10590 = distinct !DILexicalBlock(scope: !10591, file: !1031, line: 510, column: 37)
!10591 = distinct !DILexicalBlock(scope: !10586, file: !1031, line: 510, column: 6)
!10592 = !DILocation(line: 526, column: 3, scope: !10590)
!10593 = !DILocation(line: 527, column: 3, scope: !10590)
!10594 = !DILocation(line: 527, column: 10, scope: !10590)
!10595 = !DILocation(line: 527, column: 31, scope: !10590)
!10596 = distinct !{!10596, !10593, !10597}
!10597 = !DILocation(line: 529, column: 3, scope: !10590)
!10598 = !DILocation(line: 583, column: 3, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10600, file: !1031, line: 577, column: 37)
!10600 = distinct !DILexicalBlock(scope: !10586, file: !1031, line: 577, column: 6)
!10601 = !DILocation(line: 584, column: 3, scope: !10599)
!10602 = !DILocation(line: 584, column: 10, scope: !10599)
!10603 = !DILocation(line: 584, column: 31, scope: !10599)
!10604 = distinct !{!10604, !10601, !10605}
!10605 = !DILocation(line: 585, column: 3, scope: !10599)
!10606 = !DILocation(line: 627, column: 1, scope: !10586)
!10607 = distinct !DISubprogram(name: "set_up_plls", scope: !1031, file: !1031, line: 448, type: !3297, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10608 = !DILocation(line: 460, column: 6, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10607, file: !1031, line: 460, column: 6)
!10610 = !DILocation(line: 460, column: 31, scope: !10609)
!10611 = !DILocation(line: 460, column: 6, scope: !10607)
!10612 = !DILocation(line: 461, column: 3, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10609, file: !1031, line: 460, column: 67)
!10614 = !DILocation(line: 462, column: 3, scope: !10613)
!10615 = !DILocation(line: 463, column: 2, scope: !10613)
!10616 = !DILocation(line: 464, column: 2, scope: !10607)
!10617 = !DILocation(line: 488, column: 2, scope: !10607)
!10618 = !DILocation(line: 492, column: 2, scope: !10607)
!10619 = !DILocation(line: 496, column: 2, scope: !10607)
!10620 = !DILocation(line: 499, column: 2, scope: !10607)
!10621 = !DILocation(line: 500, column: 2, scope: !10607)
!10622 = !DILocation(line: 500, column: 9, scope: !10607)
!10623 = !DILocation(line: 500, column: 30, scope: !10607)
!10624 = distinct !{!10624, !10621, !10625}
!10625 = !DILocation(line: 502, column: 2, scope: !10607)
!10626 = !DILocation(line: 505, column: 1, scope: !10607)
!10627 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10583, file: !10583, line: 3224, type: !8401, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10628)
!10628 = !{!10629}
!10629 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10627, file: !10583, line: 3224, type: !208)
!10630 = !DILocation(line: 0, scope: !10627)
!10631 = !DILocation(line: 3226, column: 3, scope: !10627)
!10632 = !DILocation(line: 3227, column: 1, scope: !10627)
!10633 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10583, file: !10583, line: 3188, type: !8401, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10634)
!10634 = !{!10635}
!10635 = !DILocalVariable(name: "Source", arg: 1, scope: !10633, file: !10583, line: 3188, type: !208)
!10636 = !DILocation(line: 0, scope: !10633)
!10637 = !DILocation(line: 3190, column: 3, scope: !10633)
!10638 = !DILocation(line: 3191, column: 1, scope: !10633)
!10639 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10583, file: !10583, line: 3204, type: !8391, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10640 = !DILocation(line: 3206, column: 21, scope: !10639)
!10641 = !DILocation(line: 3206, column: 3, scope: !10639)
!10642 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10583, file: !10583, line: 3240, type: !8401, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10643)
!10643 = !{!10644}
!10644 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10642, file: !10583, line: 3240, type: !208)
!10645 = !DILocation(line: 0, scope: !10642)
!10646 = !DILocation(line: 3242, column: 3, scope: !10642)
!10647 = !DILocation(line: 3243, column: 1, scope: !10642)
!10648 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10583, file: !10583, line: 3256, type: !8401, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !10649)
!10649 = !{!10650}
!10650 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !10648, file: !10583, line: 3256, type: !208)
!10651 = !DILocation(line: 0, scope: !10648)
!10652 = !DILocation(line: 3258, column: 3, scope: !10648)
!10653 = !DILocation(line: 3259, column: 1, scope: !10648)
!10654 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !1031, file: !1031, line: 409, type: !3297, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10655 = !DILocation(line: 412, column: 6, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10654, file: !1031, line: 412, column: 6)
!10657 = !DILocation(line: 412, column: 27, scope: !10656)
!10658 = !DILocation(line: 412, column: 6, scope: !10654)
!10659 = !DILocation(line: 414, column: 3, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10656, file: !1031, line: 412, column: 33)
!10661 = !DILocation(line: 415, column: 3, scope: !10660)
!10662 = !DILocation(line: 415, column: 10, scope: !10660)
!10663 = !DILocation(line: 415, column: 31, scope: !10660)
!10664 = distinct !{!10664, !10661, !10665}
!10665 = !DILocation(line: 417, column: 3, scope: !10660)
!10666 = !DILocation(line: 421, column: 2, scope: !10654)
!10667 = !DILocation(line: 422, column: 2, scope: !10654)
!10668 = !DILocation(line: 422, column: 9, scope: !10654)
!10669 = !DILocation(line: 422, column: 34, scope: !10654)
!10670 = distinct !{!10670, !10667, !10671}
!10671 = !DILocation(line: 423, column: 2, scope: !10654)
!10672 = !DILocation(line: 424, column: 1, scope: !10654)
!10673 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !10583, file: !10583, line: 4195, type: !3297, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10674 = !DILocation(line: 4197, column: 3, scope: !10673)
!10675 = !DILocation(line: 4198, column: 1, scope: !10673)
!10676 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10583, file: !10583, line: 4184, type: !3297, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10677 = !DILocation(line: 4186, column: 3, scope: !10676)
!10678 = !DILocation(line: 4187, column: 1, scope: !10676)
!10679 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10583, file: !10583, line: 4205, type: !8391, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10680 = !DILocation(line: 4207, column: 11, scope: !10679)
!10681 = !DILocation(line: 4207, column: 44, scope: !10679)
!10682 = !DILocation(line: 4207, column: 3, scope: !10679)
!10683 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10583, file: !10583, line: 3007, type: !8391, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10684 = !DILocation(line: 3009, column: 11, scope: !10683)
!10685 = !DILocation(line: 3009, column: 44, scope: !10683)
!10686 = !DILocation(line: 3009, column: 3, scope: !10683)
!10687 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10583, file: !10583, line: 2987, type: !3297, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10688 = !DILocation(line: 2989, column: 3, scope: !10687)
!10689 = !DILocation(line: 2990, column: 1, scope: !10687)
!10690 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10583, file: !10583, line: 2939, type: !3297, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10691 = !DILocation(line: 2941, column: 3, scope: !10690)
!10692 = !DILocation(line: 2942, column: 1, scope: !10690)
!10693 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10583, file: !10583, line: 2949, type: !3297, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10694 = !DILocation(line: 2951, column: 3, scope: !10693)
!10695 = !DILocation(line: 2952, column: 1, scope: !10693)
!10696 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10583, file: !10583, line: 2969, type: !8391, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10697 = !DILocation(line: 2971, column: 11, scope: !10696)
!10698 = !DILocation(line: 2971, column: 44, scope: !10696)
!10699 = !DILocation(line: 2971, column: 3, scope: !10696)
!10700 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !10583, file: !10583, line: 3143, type: !3297, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10701 = !DILocation(line: 3145, column: 3, scope: !10700)
!10702 = !DILocation(line: 3146, column: 1, scope: !10700)
!10703 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !10583, file: !10583, line: 3163, type: !8391, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !969, retainedNodes: !639)
!10704 = !DILocation(line: 3165, column: 11, scope: !10703)
!10705 = !DILocation(line: 3165, column: 46, scope: !10703)
!10706 = !DILocation(line: 3165, column: 3, scope: !10703)
!10707 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !10708, file: !10708, line: 40, type: !8391, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !639)
!10708 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10709 = !DILocation(line: 45, column: 3, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10711, file: !10708, line: 44, column: 44)
!10711 = distinct !DILexicalBlock(scope: !10712, file: !10708, line: 44, column: 13)
!10712 = distinct !DILexicalBlock(scope: !10707, file: !10708, line: 42, column: 6)
!10713 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !10708, file: !10708, line: 56, type: !3297, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !639)
!10714 = !DILocation(line: 58, column: 2, scope: !10713)
!10715 = !DILocation(line: 62, column: 1, scope: !10713)
!10716 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10583, file: !10583, line: 4304, type: !10717, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !10719)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{null, !208, !208, !208, !208}
!10719 = !{!10720, !10721, !10722, !10723}
!10720 = !DILocalVariable(name: "Source", arg: 1, scope: !10716, file: !10583, line: 4304, type: !208)
!10721 = !DILocalVariable(name: "PLLM", arg: 2, scope: !10716, file: !10583, line: 4304, type: !208)
!10722 = !DILocalVariable(name: "PLLN", arg: 3, scope: !10716, file: !10583, line: 4304, type: !208)
!10723 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !10716, file: !10583, line: 4304, type: !208)
!10724 = !DILocation(line: 0, scope: !10716)
!10725 = !DILocation(line: 4306, column: 3, scope: !10716)
!10726 = !DILocation(line: 4308, column: 3, scope: !10716)
!10727 = !DILocation(line: 4312, column: 1, scope: !10716)
!10728 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !10708, file: !10708, line: 69, type: !3297, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !639)
!10729 = !DILocation(line: 72, column: 2, scope: !10728)
!10730 = !DILocation(line: 73, column: 1, scope: !10728)
!10731 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !10732, file: !10732, line: 1185, type: !8401, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3068, retainedNodes: !10733)
!10732 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10733 = !{!10734, !10735}
!10734 = !DILocalVariable(name: "Periphs", arg: 1, scope: !10731, file: !10732, line: 1185, type: !208)
!10735 = !DILocalVariable(name: "tmpreg", scope: !10731, file: !10732, line: 1187, type: !423)
!10736 = !DILocation(line: 0, scope: !10731)
!10737 = !DILocation(line: 1187, column: 3, scope: !10731)
!10738 = !DILocation(line: 1187, column: 17, scope: !10731)
!10739 = !DILocation(line: 1188, column: 3, scope: !10731)
!10740 = !DILocation(line: 1190, column: 12, scope: !10731)
!10741 = !DILocation(line: 1190, column: 10, scope: !10731)
!10742 = !DILocation(line: 1191, column: 9, scope: !10731)
!10743 = !DILocation(line: 1192, column: 1, scope: !10731)
!10744 = distinct !DISubprogram(name: "uart_console_init", scope: !1162, file: !1162, line: 588, type: !1139, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10745)
!10745 = !{!10746}
!10746 = !DILocalVariable(name: "arg", arg: 1, scope: !10744, file: !1162, line: 588, type: !1117)
!10747 = !DILocation(line: 0, scope: !10744)
!10748 = !DILocation(line: 593, column: 7, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10744, file: !1162, line: 593, column: 6)
!10750 = !DILocation(line: 593, column: 6, scope: !10744)
!10751 = !DILocation(line: 597, column: 2, scope: !10744)
!10752 = !DILocation(line: 599, column: 2, scope: !10744)
!10753 = !DILocation(line: 600, column: 1, scope: !10744)
!10754 = distinct !DISubprogram(name: "device_is_ready", scope: !4202, file: !4202, line: 47, type: !10755, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10757)
!10755 = !DISubroutineType(types: !10756)
!10756 = !{!153, !1117}
!10757 = !{!10758}
!10758 = !DILocalVariable(name: "dev", arg: 1, scope: !10754, file: !4202, line: 47, type: !1117)
!10759 = !DILocation(line: 0, scope: !10754)
!10760 = !DILocation(line: 55, column: 2, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10754, file: !4202, line: 55, column: 2)
!10762 = !{i64 2154953238}
!10763 = !DILocation(line: 56, column: 9, scope: !10754)
!10764 = !DILocation(line: 56, column: 2, scope: !10754)
!10765 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1162, file: !1162, line: 573, type: !3297, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !639)
!10766 = !DILocation(line: 576, column: 2, scope: !10765)
!10767 = !DILocation(line: 579, column: 2, scope: !10765)
!10768 = !DILocation(line: 581, column: 1, scope: !10765)
!10769 = distinct !DISubprogram(name: "console_out", scope: !1162, file: !1162, line: 77, type: !410, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10770)
!10770 = !{!10771}
!10771 = !DILocalVariable(name: "c", arg: 1, scope: !10769, file: !1162, line: 77, type: !125)
!10772 = !DILocation(line: 0, scope: !10769)
!10773 = !DILocation(line: 89, column: 11, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10769, file: !1162, line: 89, column: 6)
!10775 = !DILocation(line: 89, column: 6, scope: !10769)
!10776 = !DILocation(line: 90, column: 3, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10774, file: !1162, line: 89, column: 17)
!10778 = !DILocation(line: 91, column: 2, scope: !10777)
!10779 = !DILocation(line: 92, column: 34, scope: !10769)
!10780 = !DILocation(line: 92, column: 2, scope: !10769)
!10781 = !DILocation(line: 94, column: 2, scope: !10769)
!10782 = distinct !DISubprogram(name: "uart_poll_out", scope: !10783, file: !10783, line: 95, type: !1135, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10784)
!10783 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/crypto")
!10784 = !{!10785, !10786}
!10785 = !DILocalVariable(name: "dev", arg: 1, scope: !10782, file: !10783, line: 95, type: !1117)
!10786 = !DILocalVariable(name: "out_char", arg: 2, scope: !10782, file: !10783, line: 95, type: !151)
!10787 = !DILocation(line: 0, scope: !10782)
!10788 = !DILocation(line: 105, column: 2, scope: !10789)
!10789 = distinct !DILexicalBlock(scope: !10782, file: !10783, line: 105, column: 2)
!10790 = !{i64 2155036629}
!10791 = !DILocation(line: 106, column: 2, scope: !10782)
!10792 = !DILocation(line: 107, column: 1, scope: !10782)
!10793 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !1111, file: !1111, line: 574, type: !1135, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10794)
!10794 = !{!10795, !10796, !10797}
!10795 = !DILocalVariable(name: "dev", arg: 1, scope: !10793, file: !1111, line: 574, type: !1117)
!10796 = !DILocalVariable(name: "out_char", arg: 2, scope: !10793, file: !1111, line: 575, type: !151)
!10797 = !DILocalVariable(name: "api", scope: !10793, file: !1111, line: 577, type: !1108)
!10798 = !DILocation(line: 0, scope: !10793)
!10799 = !DILocation(line: 578, column: 40, scope: !10793)
!10800 = !DILocation(line: 580, column: 7, scope: !10793)
!10801 = !DILocation(line: 580, column: 2, scope: !10793)
!10802 = !DILocation(line: 581, column: 1, scope: !10793)
!10803 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !10755, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10804)
!10804 = !{!10805}
!10805 = !DILocalVariable(name: "dev", arg: 1, scope: !10803, file: !137, line: 730, type: !1117)
!10806 = !DILocation(line: 0, scope: !10803)
!10807 = !DILocation(line: 732, column: 9, scope: !10803)
!10808 = !DILocation(line: 732, column: 2, scope: !10803)
!10809 = distinct !DISubprogram(name: "uart_register_input", scope: !1162, file: !1162, line: 560, type: !10810, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !10855)
!10810 = !DISubroutineType(types: !10811)
!10811 = !{null, !10812, !10812, !10852}
!10812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10813, size: 32)
!10813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !624, line: 2208, size: 128, elements: !10814)
!10814 = !{!10815}
!10815 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !10813, file: !624, line: 2209, baseType: !10816, size: 128)
!10816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !624, line: 1709, size: 128, elements: !10817)
!10817 = !{!10818, !10831, !10833}
!10818 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !10816, file: !624, line: 1710, baseType: !10819, size: 64)
!10819 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !10820, line: 46, baseType: !10821)
!10820 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !10820, line: 41, size: 64, elements: !10822)
!10822 = !{!10823, !10830}
!10823 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10821, file: !10820, line: 42, baseType: !10824, size: 32)
!10824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10825, size: 32)
!10825 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !10820, line: 39, baseType: !10826)
!10826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !10820, line: 35, size: 32, elements: !10827)
!10827 = !{!10828}
!10828 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !10826, file: !10820, line: 36, baseType: !10829, size: 32)
!10829 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !10820, line: 32, baseType: !208)
!10830 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10821, file: !10820, line: 43, baseType: !10824, size: 32, offset: 32)
!10831 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10816, file: !624, line: 1711, baseType: !10832, offset: 64)
!10832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!10833 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !10816, file: !624, line: 1712, baseType: !10834, size: 64, offset: 64)
!10834 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !10835)
!10835 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !10836)
!10836 = !{!10837}
!10837 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !10835, file: !567, line: 232, baseType: !10838, size: 64)
!10838 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !10839)
!10839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !10840)
!10840 = !{!10841, !10847}
!10841 = !DIDerivedType(tag: DW_TAG_member, scope: !10839, file: !541, line: 38, baseType: !10842, size: 32)
!10842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10839, file: !541, line: 38, size: 32, elements: !10843)
!10843 = !{!10844, !10846}
!10844 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10842, file: !541, line: 39, baseType: !10845, size: 32)
!10845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10839, size: 32)
!10846 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10842, file: !541, line: 40, baseType: !10845, size: 32)
!10847 = !DIDerivedType(tag: DW_TAG_member, scope: !10839, file: !541, line: 42, baseType: !10848, size: 32, offset: 32)
!10848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10839, file: !541, line: 42, size: 32, elements: !10849)
!10849 = !{!10850, !10851}
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !10848, file: !541, line: 43, baseType: !10845, size: 32)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10848, file: !541, line: 44, baseType: !10845, size: 32)
!10852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10853, size: 32)
!10853 = !DISubroutineType(types: !10854)
!10854 = !{!150, !393, !150}
!10855 = !{!10856, !10857, !10858}
!10856 = !DILocalVariable(name: "avail", arg: 1, scope: !10809, file: !1162, line: 560, type: !10812)
!10857 = !DILocalVariable(name: "lines", arg: 2, scope: !10809, file: !1162, line: 560, type: !10812)
!10858 = !DILocalVariable(name: "completion", arg: 3, scope: !10809, file: !1162, line: 561, type: !10852)
!10859 = !DILocation(line: 0, scope: !10809)
!10860 = !DILocation(line: 566, column: 1, scope: !10809)
!10861 = distinct !DISubprogram(name: "tc_shim_init", scope: !1177, file: !1177, line: 305, type: !1201, scopeLine: 306, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10862)
!10862 = !{!10863, !10864}
!10863 = !DILocalVariable(name: "dev", arg: 1, scope: !10861, file: !1177, line: 305, type: !1203)
!10864 = !DILocalVariable(name: "i", scope: !10861, file: !1177, line: 307, type: !125)
!10865 = !DILocation(line: 0, scope: !10861)
!10866 = !DILocation(line: 311, column: 29, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10868, file: !1177, line: 310, column: 43)
!10868 = distinct !DILexicalBlock(scope: !10869, file: !1177, line: 310, column: 2)
!10869 = distinct !DILexicalBlock(scope: !10861, file: !1177, line: 310, column: 2)
!10870 = !DILocation(line: 314, column: 2, scope: !10861)
!10871 = distinct !DISubprogram(name: "tc_query_caps", scope: !1177, file: !1177, line: 289, type: !1201, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10872)
!10872 = !{!10873}
!10873 = !DILocalVariable(name: "dev", arg: 1, scope: !10871, file: !1177, line: 289, type: !1203)
!10874 = !DILocation(line: 0, scope: !10871)
!10875 = !DILocation(line: 291, column: 2, scope: !10871)
!10876 = distinct !DISubprogram(name: "tc_session_setup", scope: !1177, file: !1177, line: 193, type: !1214, scopeLine: 196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !10877)
!10877 = !{!10878, !10879, !10880, !10881, !10882, !10883, !10885}
!10878 = !DILocalVariable(name: "dev", arg: 1, scope: !10876, file: !1177, line: 193, type: !1203)
!10879 = !DILocalVariable(name: "ctx", arg: 2, scope: !10876, file: !1177, line: 193, type: !1216)
!10880 = !DILocalVariable(name: "algo", arg: 3, scope: !10876, file: !1177, line: 194, type: !39)
!10881 = !DILocalVariable(name: "mode", arg: 4, scope: !10876, file: !1177, line: 194, type: !30)
!10882 = !DILocalVariable(name: "op_type", arg: 5, scope: !10876, file: !1177, line: 195, type: !42)
!10883 = !DILocalVariable(name: "data", scope: !10876, file: !1177, line: 197, type: !10884)
!10884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 32)
!10885 = !DILocalVariable(name: "idx", scope: !10876, file: !1177, line: 198, type: !125)
!10886 = !DILocation(line: 0, scope: !10876)
!10887 = !DILocation(line: 203, column: 11, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10876, file: !1177, line: 203, column: 6)
!10889 = !DILocation(line: 203, column: 6, scope: !10876)
!10890 = !DILocation(line: 204, column: 3, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10892, file: !1177, line: 204, column: 3)
!10892 = distinct !DILexicalBlock(scope: !10893, file: !1177, line: 204, column: 3)
!10893 = distinct !DILexicalBlock(scope: !10894, file: !1177, line: 204, column: 3)
!10894 = distinct !DILexicalBlock(scope: !10895, file: !1177, line: 204, column: 3)
!10895 = distinct !DILexicalBlock(scope: !10888, file: !1177, line: 203, column: 38)
!10896 = !DILocation(line: 205, column: 3, scope: !10895)
!10897 = !DILocation(line: 211, column: 13, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10876, file: !1177, line: 211, column: 6)
!10899 = !DILocation(line: 211, column: 19, scope: !10898)
!10900 = !DILocation(line: 211, column: 6, scope: !10876)
!10901 = !DILocation(line: 212, column: 3, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10903, file: !1177, line: 212, column: 3)
!10903 = distinct !DILexicalBlock(scope: !10904, file: !1177, line: 212, column: 3)
!10904 = distinct !DILexicalBlock(scope: !10905, file: !1177, line: 212, column: 3)
!10905 = distinct !DILexicalBlock(scope: !10906, file: !1177, line: 212, column: 3)
!10906 = distinct !DILexicalBlock(scope: !10898, file: !1177, line: 211, column: 36)
!10907 = !DILocation(line: 213, column: 3, scope: !10906)
!10908 = !DILocation(line: 216, column: 11, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10876, file: !1177, line: 216, column: 6)
!10910 = !DILocation(line: 216, column: 18, scope: !10909)
!10911 = !DILocation(line: 216, column: 6, scope: !10876)
!10912 = !DILocation(line: 218, column: 3, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10914, file: !1177, line: 218, column: 3)
!10914 = distinct !DILexicalBlock(scope: !10915, file: !1177, line: 218, column: 3)
!10915 = distinct !DILexicalBlock(scope: !10916, file: !1177, line: 218, column: 3)
!10916 = distinct !DILexicalBlock(scope: !10917, file: !1177, line: 218, column: 3)
!10917 = distinct !DILexicalBlock(scope: !10909, file: !1177, line: 216, column: 38)
!10918 = !DILocation(line: 219, column: 3, scope: !10917)
!10919 = !DILocation(line: 222, column: 14, scope: !10920)
!10920 = distinct !DILexicalBlock(scope: !10876, file: !1177, line: 222, column: 6)
!10921 = !DILocation(line: 222, column: 6, scope: !10876)
!10922 = !DILocation(line: 223, column: 3, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10920, file: !1177, line: 222, column: 43)
!10924 = !DILocation(line: 225, column: 13, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10923, file: !1177, line: 223, column: 17)
!10926 = !DILocation(line: 225, column: 29, scope: !10925)
!10927 = !DILocation(line: 226, column: 4, scope: !10925)
!10928 = !DILocation(line: 228, column: 34, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10925, file: !1177, line: 228, column: 8)
!10930 = !DILocation(line: 228, column: 42, scope: !10929)
!10931 = !DILocation(line: 228, column: 8, scope: !10925)
!10932 = !DILocation(line: 229, column: 5, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10934, file: !1177, line: 229, column: 5)
!10934 = distinct !DILexicalBlock(scope: !10935, file: !1177, line: 229, column: 5)
!10935 = distinct !DILexicalBlock(scope: !10936, file: !1177, line: 229, column: 5)
!10936 = distinct !DILexicalBlock(scope: !10937, file: !1177, line: 229, column: 5)
!10937 = distinct !DILexicalBlock(scope: !10929, file: !1177, line: 228, column: 50)
!10938 = !DILocation(line: 231, column: 5, scope: !10937)
!10939 = !DILocation(line: 233, column: 13, scope: !10925)
!10940 = !DILocation(line: 233, column: 29, scope: !10925)
!10941 = !DILocation(line: 234, column: 4, scope: !10925)
!10942 = !DILocation(line: 236, column: 13, scope: !10925)
!10943 = !DILocation(line: 236, column: 29, scope: !10925)
!10944 = !DILocation(line: 237, column: 4, scope: !10925)
!10945 = !DILocation(line: 239, column: 4, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !1177, line: 239, column: 4)
!10947 = distinct !DILexicalBlock(scope: !10948, file: !1177, line: 239, column: 4)
!10948 = distinct !DILexicalBlock(scope: !10949, file: !1177, line: 239, column: 4)
!10949 = distinct !DILexicalBlock(scope: !10925, file: !1177, line: 239, column: 4)
!10950 = !DILocation(line: 240, column: 4, scope: !10925)
!10951 = !DILocation(line: 243, column: 3, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10920, file: !1177, line: 242, column: 9)
!10953 = !DILocation(line: 245, column: 13, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10952, file: !1177, line: 243, column: 17)
!10955 = !DILocation(line: 245, column: 29, scope: !10954)
!10956 = !DILocation(line: 246, column: 4, scope: !10954)
!10957 = !DILocation(line: 249, column: 34, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10954, file: !1177, line: 249, column: 8)
!10959 = !DILocation(line: 249, column: 42, scope: !10958)
!10960 = !DILocation(line: 249, column: 8, scope: !10954)
!10961 = !DILocation(line: 250, column: 5, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10963, file: !1177, line: 250, column: 5)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !1177, line: 250, column: 5)
!10964 = distinct !DILexicalBlock(scope: !10965, file: !1177, line: 250, column: 5)
!10965 = distinct !DILexicalBlock(scope: !10966, file: !1177, line: 250, column: 5)
!10966 = distinct !DILexicalBlock(scope: !10958, file: !1177, line: 249, column: 50)
!10967 = !DILocation(line: 252, column: 5, scope: !10966)
!10968 = !DILocation(line: 254, column: 13, scope: !10954)
!10969 = !DILocation(line: 254, column: 29, scope: !10954)
!10970 = !DILocation(line: 255, column: 4, scope: !10954)
!10971 = !DILocation(line: 257, column: 13, scope: !10954)
!10972 = !DILocation(line: 257, column: 29, scope: !10954)
!10973 = !DILocation(line: 258, column: 4, scope: !10954)
!10974 = !DILocation(line: 260, column: 4, scope: !10975)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !1177, line: 260, column: 4)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !1177, line: 260, column: 4)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !1177, line: 260, column: 4)
!10978 = distinct !DILexicalBlock(scope: !10954, file: !1177, line: 260, column: 4)
!10979 = !DILocation(line: 261, column: 4, scope: !10954)
!10980 = !DILocation(line: 266, column: 11, scope: !10876)
!10981 = !DILocation(line: 266, column: 23, scope: !10876)
!10982 = !DILocation(line: 268, column: 8, scope: !10876)
!10983 = !DILocation(line: 269, column: 10, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10876, file: !1177, line: 269, column: 6)
!10985 = !DILocation(line: 269, column: 6, scope: !10876)
!10986 = !DILocation(line: 270, column: 3, scope: !10987)
!10987 = distinct !DILexicalBlock(scope: !10988, file: !1177, line: 270, column: 3)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !1177, line: 270, column: 3)
!10989 = distinct !DILexicalBlock(scope: !10990, file: !1177, line: 270, column: 3)
!10990 = distinct !DILexicalBlock(scope: !10991, file: !1177, line: 270, column: 3)
!10991 = distinct !DILexicalBlock(scope: !10984, file: !1177, line: 269, column: 33)
!10992 = !DILocation(line: 271, column: 3, scope: !10991)
!10993 = !DILocation(line: 274, column: 10, scope: !10876)
!10994 = !DILocation(line: 276, column: 39, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10876, file: !1177, line: 276, column: 6)
!10996 = !DILocation(line: 276, column: 61, scope: !10995)
!10997 = !DILocation(line: 276, column: 6, scope: !10995)
!10998 = !DILocation(line: 277, column: 5, scope: !10995)
!10999 = !DILocation(line: 276, column: 6, scope: !10876)
!11000 = !DILocation(line: 278, column: 3, scope: !11001)
!11001 = distinct !DILexicalBlock(scope: !11002, file: !1177, line: 278, column: 3)
!11002 = distinct !DILexicalBlock(scope: !11003, file: !1177, line: 278, column: 3)
!11003 = distinct !DILexicalBlock(scope: !11004, file: !1177, line: 278, column: 3)
!11004 = distinct !DILexicalBlock(scope: !11005, file: !1177, line: 278, column: 3)
!11005 = distinct !DILexicalBlock(scope: !10995, file: !1177, line: 277, column: 24)
!11006 = !DILocation(line: 279, column: 24, scope: !11005)
!11007 = !DILocation(line: 279, column: 31, scope: !11005)
!11008 = !DILocation(line: 281, column: 3, scope: !11005)
!11009 = !DILocation(line: 284, column: 7, scope: !10876)
!11010 = !DILocation(line: 284, column: 23, scope: !10876)
!11011 = !DILocation(line: 286, column: 2, scope: !10876)
!11012 = !DILocation(line: 287, column: 1, scope: !10876)
!11013 = distinct !DISubprogram(name: "tc_session_free", scope: !1177, file: !1177, line: 294, type: !1290, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11014)
!11014 = !{!11015, !11016, !11017}
!11015 = !DILocalVariable(name: "dev", arg: 1, scope: !11013, file: !1177, line: 294, type: !1203)
!11016 = !DILocalVariable(name: "sessn", arg: 2, scope: !11013, file: !1177, line: 294, type: !1216)
!11017 = !DILocalVariable(name: "data", scope: !11013, file: !1177, line: 296, type: !10884)
!11018 = !DILocation(line: 0, scope: !11013)
!11019 = !DILocation(line: 296, column: 43, scope: !11013)
!11020 = !DILocation(line: 299, column: 8, scope: !11013)
!11021 = !DILocation(line: 300, column: 8, scope: !11013)
!11022 = !DILocation(line: 300, column: 15, scope: !11013)
!11023 = !DILocation(line: 302, column: 2, scope: !11013)
!11024 = distinct !DISubprogram(name: "do_cbc_encrypt", scope: !1177, file: !1177, line: 28, type: !1243, scopeLine: 30, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11025)
!11025 = !{!11026, !11027, !11028, !11029}
!11026 = !DILocalVariable(name: "ctx", arg: 1, scope: !11024, file: !1177, line: 28, type: !1216)
!11027 = !DILocalVariable(name: "op", arg: 2, scope: !11024, file: !1177, line: 28, type: !1231)
!11028 = !DILocalVariable(name: "iv", arg: 3, scope: !11024, file: !1177, line: 29, type: !184)
!11029 = !DILocalVariable(name: "data", scope: !11024, file: !1177, line: 31, type: !10884)
!11030 = !DILocation(line: 0, scope: !11024)
!11031 = !DILocation(line: 31, column: 41, scope: !11024)
!11032 = !DILocation(line: 33, column: 30, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11024, file: !1177, line: 33, column: 6)
!11034 = !DILocation(line: 34, column: 9, scope: !11033)
!11035 = !DILocation(line: 35, column: 9, scope: !11033)
!11036 = !DILocation(line: 35, column: 21, scope: !11033)
!11037 = !DILocation(line: 37, column: 12, scope: !11033)
!11038 = !DILocation(line: 33, column: 6, scope: !11033)
!11039 = !DILocation(line: 37, column: 25, scope: !11033)
!11040 = !DILocation(line: 33, column: 6, scope: !11024)
!11041 = !DILocation(line: 38, column: 3, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11043, file: !1177, line: 38, column: 3)
!11043 = distinct !DILexicalBlock(scope: !11044, file: !1177, line: 38, column: 3)
!11044 = distinct !DILexicalBlock(scope: !11045, file: !1177, line: 38, column: 3)
!11045 = distinct !DILexicalBlock(scope: !11046, file: !1177, line: 38, column: 3)
!11046 = distinct !DILexicalBlock(scope: !11033, file: !1177, line: 37, column: 44)
!11047 = !DILocation(line: 39, column: 3, scope: !11046)
!11048 = !DILocation(line: 43, column: 20, scope: !11024)
!11049 = !DILocation(line: 43, column: 6, scope: !11024)
!11050 = !DILocation(line: 43, column: 14, scope: !11024)
!11051 = !DILocation(line: 45, column: 2, scope: !11024)
!11052 = !DILocation(line: 46, column: 1, scope: !11024)
!11053 = distinct !DISubprogram(name: "do_ctr_op", scope: !1177, file: !1177, line: 76, type: !1243, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11054)
!11054 = !{!11055, !11056, !11057, !11058, !11059, !11060}
!11055 = !DILocalVariable(name: "ctx", arg: 1, scope: !11053, file: !1177, line: 76, type: !1216)
!11056 = !DILocalVariable(name: "op", arg: 2, scope: !11053, file: !1177, line: 76, type: !1231)
!11057 = !DILocalVariable(name: "iv", arg: 3, scope: !11053, file: !1177, line: 77, type: !184)
!11058 = !DILocalVariable(name: "data", scope: !11053, file: !1177, line: 79, type: !10884)
!11059 = !DILocalVariable(name: "ctr", scope: !11053, file: !1177, line: 80, type: !311)
!11060 = !DILocalVariable(name: "ivlen", scope: !11053, file: !1177, line: 81, type: !125)
!11061 = !DILocation(line: 0, scope: !11053)
!11062 = !DILocation(line: 79, column: 41, scope: !11053)
!11063 = !DILocation(line: 80, column: 2, scope: !11053)
!11064 = !DILocation(line: 80, column: 10, scope: !11053)
!11065 = !DILocation(line: 81, column: 19, scope: !11053)
!11066 = !DILocation(line: 81, column: 14, scope: !11053)
!11067 = !DILocation(line: 81, column: 55, scope: !11053)
!11068 = !DILocation(line: 81, column: 63, scope: !11053)
!11069 = !DILocation(line: 81, column: 26, scope: !11053)
!11070 = !DILocation(line: 86, column: 2, scope: !11053)
!11071 = !DILocation(line: 88, column: 22, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11053, file: !1177, line: 88, column: 6)
!11073 = !DILocation(line: 88, column: 35, scope: !11072)
!11074 = !DILocation(line: 88, column: 52, scope: !11072)
!11075 = !DILocation(line: 89, column: 8, scope: !11072)
!11076 = !DILocation(line: 90, column: 11, scope: !11072)
!11077 = !DILocation(line: 88, column: 6, scope: !11072)
!11078 = !DILocation(line: 90, column: 24, scope: !11072)
!11079 = !DILocation(line: 88, column: 6, scope: !11053)
!11080 = !DILocation(line: 91, column: 3, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !1177, line: 91, column: 3)
!11082 = distinct !DILexicalBlock(scope: !11083, file: !1177, line: 91, column: 3)
!11083 = distinct !DILexicalBlock(scope: !11084, file: !1177, line: 91, column: 3)
!11084 = distinct !DILexicalBlock(scope: !11085, file: !1177, line: 91, column: 3)
!11085 = distinct !DILexicalBlock(scope: !11072, file: !1177, line: 90, column: 43)
!11086 = !DILocation(line: 92, column: 3, scope: !11085)
!11087 = !DILocation(line: 96, column: 20, scope: !11053)
!11088 = !DILocation(line: 96, column: 6, scope: !11053)
!11089 = !DILocation(line: 96, column: 14, scope: !11053)
!11090 = !DILocation(line: 98, column: 2, scope: !11053)
!11091 = !DILocation(line: 99, column: 1, scope: !11053)
!11092 = distinct !DISubprogram(name: "do_ccm_encrypt_mac", scope: !1177, file: !1177, line: 101, type: !1250, scopeLine: 103, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11093)
!11093 = !{!11094, !11095, !11096, !11097, !11105, !11106, !11108}
!11094 = !DILocalVariable(name: "ctx", arg: 1, scope: !11092, file: !1177, line: 101, type: !1216)
!11095 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11092, file: !1177, line: 102, type: !1252)
!11096 = !DILocalVariable(name: "nonce", arg: 3, scope: !11092, file: !1177, line: 102, type: !184)
!11097 = !DILocalVariable(name: "ccm", scope: !11092, file: !1177, line: 104, type: !11098)
!11098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_ccm_mode_struct", file: !2748, line: 91, size: 96, elements: !11099)
!11099 = !{!11100, !11103, !11104}
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "sched", scope: !11098, file: !2748, line: 92, baseType: !11101, size: 32)
!11101 = !DIDerivedType(tag: DW_TAG_typedef, name: "TCAesKeySched_t", file: !492, line: 66, baseType: !11102)
!11102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1343, size: 32)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "nonce", scope: !11098, file: !2748, line: 93, baseType: !184, size: 32, offset: 32)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "mlen", scope: !11098, file: !2748, line: 94, baseType: !32, size: 32, offset: 64)
!11105 = !DILocalVariable(name: "data", scope: !11092, file: !1177, line: 105, type: !10884)
!11106 = !DILocalVariable(name: "ccm_param", scope: !11092, file: !1177, line: 106, type: !11107)
!11107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 32)
!11108 = !DILocalVariable(name: "op", scope: !11092, file: !1177, line: 107, type: !1231)
!11109 = !DILocation(line: 0, scope: !11092)
!11110 = !DILocation(line: 104, column: 2, scope: !11092)
!11111 = !DILocation(line: 104, column: 28, scope: !11092)
!11112 = !DILocation(line: 105, column: 41, scope: !11092)
!11113 = !DILocation(line: 106, column: 39, scope: !11092)
!11114 = !DILocation(line: 106, column: 51, scope: !11092)
!11115 = !DILocation(line: 107, column: 35, scope: !11092)
!11116 = !DILocation(line: 109, column: 33, scope: !11117)
!11117 = distinct !DILexicalBlock(scope: !11092, file: !1177, line: 109, column: 6)
!11118 = !DILocation(line: 110, column: 15, scope: !11117)
!11119 = !DILocation(line: 110, column: 4, scope: !11117)
!11120 = !DILocation(line: 111, column: 15, scope: !11117)
!11121 = !DILocation(line: 111, column: 4, scope: !11117)
!11122 = !DILocation(line: 109, column: 6, scope: !11117)
!11123 = !DILocation(line: 111, column: 24, scope: !11117)
!11124 = !DILocation(line: 109, column: 6, scope: !11092)
!11125 = !DILocation(line: 112, column: 3, scope: !11126)
!11126 = distinct !DILexicalBlock(scope: !11127, file: !1177, line: 112, column: 3)
!11127 = distinct !DILexicalBlock(scope: !11128, file: !1177, line: 112, column: 3)
!11128 = distinct !DILexicalBlock(scope: !11129, file: !1177, line: 112, column: 3)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !1177, line: 112, column: 3)
!11130 = distinct !DILexicalBlock(scope: !11117, file: !1177, line: 111, column: 43)
!11131 = !DILocation(line: 113, column: 3, scope: !11130)
!11132 = !DILocation(line: 116, column: 39, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11092, file: !1177, line: 116, column: 6)
!11134 = !DILocation(line: 116, column: 52, scope: !11133)
!11135 = !DILocation(line: 117, column: 16, scope: !11133)
!11136 = !DILocation(line: 117, column: 29, scope: !11133)
!11137 = !DILocation(line: 117, column: 41, scope: !11133)
!11138 = !DILocation(line: 118, column: 11, scope: !11133)
!11139 = !DILocation(line: 116, column: 6, scope: !11133)
!11140 = !DILocation(line: 118, column: 25, scope: !11133)
!11141 = !DILocation(line: 116, column: 6, scope: !11092)
!11142 = !DILocation(line: 119, column: 3, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !1177, line: 119, column: 3)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !1177, line: 119, column: 3)
!11145 = distinct !DILexicalBlock(scope: !11146, file: !1177, line: 119, column: 3)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !1177, line: 119, column: 3)
!11147 = distinct !DILexicalBlock(scope: !11133, file: !1177, line: 118, column: 44)
!11148 = !DILocation(line: 120, column: 3, scope: !11147)
!11149 = !DILocation(line: 128, column: 15, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11092, file: !1177, line: 128, column: 6)
!11151 = !DILocation(line: 128, column: 6, scope: !11150)
!11152 = !DILocation(line: 128, column: 6, scope: !11092)
!11153 = !DILocation(line: 129, column: 28, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11150, file: !1177, line: 128, column: 20)
!11155 = !DILocation(line: 129, column: 42, scope: !11154)
!11156 = !DILocation(line: 129, column: 36, scope: !11154)
!11157 = !DILocation(line: 129, column: 54, scope: !11154)
!11158 = !DILocation(line: 129, column: 3, scope: !11154)
!11159 = !DILocation(line: 130, column: 2, scope: !11154)
!11160 = !DILocation(line: 136, column: 20, scope: !11092)
!11161 = !DILocation(line: 136, column: 33, scope: !11092)
!11162 = !DILocation(line: 136, column: 27, scope: !11092)
!11163 = !DILocation(line: 136, column: 6, scope: !11092)
!11164 = !DILocation(line: 136, column: 14, scope: !11092)
!11165 = !DILocation(line: 138, column: 2, scope: !11092)
!11166 = !DILocation(line: 139, column: 1, scope: !11092)
!11167 = distinct !DISubprogram(name: "do_cbc_decrypt", scope: !1177, file: !1177, line: 48, type: !1243, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11168)
!11168 = !{!11169, !11170, !11171, !11172}
!11169 = !DILocalVariable(name: "ctx", arg: 1, scope: !11167, file: !1177, line: 48, type: !1216)
!11170 = !DILocalVariable(name: "op", arg: 2, scope: !11167, file: !1177, line: 48, type: !1231)
!11171 = !DILocalVariable(name: "iv", arg: 3, scope: !11167, file: !1177, line: 49, type: !184)
!11172 = !DILocalVariable(name: "data", scope: !11167, file: !1177, line: 51, type: !10884)
!11173 = !DILocation(line: 0, scope: !11167)
!11174 = !DILocation(line: 56, column: 16, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11167, file: !1177, line: 56, column: 6)
!11176 = !DILocation(line: 56, column: 9, scope: !11175)
!11177 = !DILocation(line: 56, column: 6, scope: !11167)
!11178 = !DILocation(line: 57, column: 3, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11180, file: !1177, line: 57, column: 3)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !1177, line: 57, column: 3)
!11181 = distinct !DILexicalBlock(scope: !11182, file: !1177, line: 57, column: 3)
!11182 = distinct !DILexicalBlock(scope: !11183, file: !1177, line: 57, column: 3)
!11183 = distinct !DILexicalBlock(scope: !11175, file: !1177, line: 56, column: 24)
!11184 = !DILocation(line: 58, column: 3, scope: !11183)
!11185 = !DILocation(line: 51, column: 41, scope: !11167)
!11186 = !DILocation(line: 61, column: 30, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11167, file: !1177, line: 61, column: 6)
!11188 = !DILocation(line: 62, column: 8, scope: !11187)
!11189 = !DILocation(line: 63, column: 15, scope: !11187)
!11190 = !DILocation(line: 64, column: 8, scope: !11187)
!11191 = !DILocation(line: 64, column: 15, scope: !11187)
!11192 = !DILocation(line: 65, column: 23, scope: !11187)
!11193 = !DILocation(line: 61, column: 6, scope: !11187)
!11194 = !DILocation(line: 65, column: 36, scope: !11187)
!11195 = !DILocation(line: 61, column: 6, scope: !11167)
!11196 = !DILocation(line: 66, column: 3, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11198, file: !1177, line: 66, column: 3)
!11198 = distinct !DILexicalBlock(scope: !11199, file: !1177, line: 66, column: 3)
!11199 = distinct !DILexicalBlock(scope: !11200, file: !1177, line: 66, column: 3)
!11200 = distinct !DILexicalBlock(scope: !11201, file: !1177, line: 66, column: 3)
!11201 = distinct !DILexicalBlock(scope: !11187, file: !1177, line: 65, column: 55)
!11202 = !DILocation(line: 67, column: 3, scope: !11201)
!11203 = !DILocation(line: 71, column: 20, scope: !11167)
!11204 = !DILocation(line: 71, column: 6, scope: !11167)
!11205 = !DILocation(line: 71, column: 14, scope: !11167)
!11206 = !DILocation(line: 73, column: 2, scope: !11167)
!11207 = !DILocation(line: 74, column: 1, scope: !11167)
!11208 = distinct !DISubprogram(name: "do_ccm_decrypt_auth", scope: !1177, file: !1177, line: 141, type: !1250, scopeLine: 143, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11209)
!11209 = !{!11210, !11211, !11212, !11213, !11214, !11215, !11216}
!11210 = !DILocalVariable(name: "ctx", arg: 1, scope: !11208, file: !1177, line: 141, type: !1216)
!11211 = !DILocalVariable(name: "aead_op", arg: 2, scope: !11208, file: !1177, line: 142, type: !1252)
!11212 = !DILocalVariable(name: "nonce", arg: 3, scope: !11208, file: !1177, line: 142, type: !184)
!11213 = !DILocalVariable(name: "ccm", scope: !11208, file: !1177, line: 144, type: !11098)
!11214 = !DILocalVariable(name: "data", scope: !11208, file: !1177, line: 145, type: !10884)
!11215 = !DILocalVariable(name: "ccm_param", scope: !11208, file: !1177, line: 146, type: !11107)
!11216 = !DILocalVariable(name: "op", scope: !11208, file: !1177, line: 147, type: !1231)
!11217 = !DILocation(line: 0, scope: !11208)
!11218 = !DILocation(line: 144, column: 2, scope: !11208)
!11219 = !DILocation(line: 144, column: 28, scope: !11208)
!11220 = !DILocation(line: 145, column: 41, scope: !11208)
!11221 = !DILocation(line: 146, column: 39, scope: !11208)
!11222 = !DILocation(line: 146, column: 51, scope: !11208)
!11223 = !DILocation(line: 147, column: 35, scope: !11208)
!11224 = !DILocation(line: 149, column: 33, scope: !11225)
!11225 = distinct !DILexicalBlock(scope: !11208, file: !1177, line: 149, column: 6)
!11226 = !DILocation(line: 150, column: 17, scope: !11225)
!11227 = !DILocation(line: 150, column: 6, scope: !11225)
!11228 = !DILocation(line: 151, column: 17, scope: !11225)
!11229 = !DILocation(line: 151, column: 6, scope: !11225)
!11230 = !DILocation(line: 149, column: 6, scope: !11225)
!11231 = !DILocation(line: 151, column: 26, scope: !11225)
!11232 = !DILocation(line: 149, column: 6, scope: !11208)
!11233 = !DILocation(line: 152, column: 3, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11235, file: !1177, line: 152, column: 3)
!11235 = distinct !DILexicalBlock(scope: !11236, file: !1177, line: 152, column: 3)
!11236 = distinct !DILexicalBlock(scope: !11237, file: !1177, line: 152, column: 3)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !1177, line: 152, column: 3)
!11238 = distinct !DILexicalBlock(scope: !11225, file: !1177, line: 151, column: 45)
!11239 = !DILocation(line: 153, column: 3, scope: !11238)
!11240 = !DILocation(line: 160, column: 15, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11208, file: !1177, line: 160, column: 6)
!11242 = !DILocation(line: 160, column: 26, scope: !11241)
!11243 = !DILocation(line: 160, column: 39, scope: !11241)
!11244 = !DILocation(line: 160, column: 33, scope: !11241)
!11245 = !DILocation(line: 160, column: 19, scope: !11241)
!11246 = !DILocation(line: 160, column: 6, scope: !11208)
!11247 = !DILocation(line: 161, column: 3, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11249, file: !1177, line: 161, column: 3)
!11249 = distinct !DILexicalBlock(scope: !11250, file: !1177, line: 161, column: 3)
!11250 = distinct !DILexicalBlock(scope: !11251, file: !1177, line: 161, column: 3)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !1177, line: 161, column: 3)
!11252 = distinct !DILexicalBlock(scope: !11241, file: !1177, line: 160, column: 47)
!11253 = !DILocation(line: 162, column: 3, scope: !11252)
!11254 = !DILocation(line: 165, column: 41, scope: !11255)
!11255 = distinct !DILexicalBlock(scope: !11208, file: !1177, line: 165, column: 6)
!11256 = !DILocation(line: 165, column: 54, scope: !11255)
!11257 = !DILocation(line: 166, column: 18, scope: !11255)
!11258 = !DILocation(line: 166, column: 31, scope: !11255)
!11259 = !DILocation(line: 168, column: 33, scope: !11255)
!11260 = !DILocation(line: 168, column: 22, scope: !11255)
!11261 = !DILocation(line: 168, column: 20, scope: !11255)
!11262 = !DILocation(line: 165, column: 6, scope: !11255)
!11263 = !DILocation(line: 169, column: 15, scope: !11255)
!11264 = !DILocation(line: 165, column: 6, scope: !11208)
!11265 = !DILocation(line: 170, column: 3, scope: !11266)
!11266 = distinct !DILexicalBlock(scope: !11267, file: !1177, line: 170, column: 3)
!11267 = distinct !DILexicalBlock(scope: !11268, file: !1177, line: 170, column: 3)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !1177, line: 170, column: 3)
!11269 = distinct !DILexicalBlock(scope: !11270, file: !1177, line: 170, column: 3)
!11270 = distinct !DILexicalBlock(scope: !11255, file: !1177, line: 169, column: 34)
!11271 = !DILocation(line: 171, column: 3, scope: !11270)
!11272 = !DILocation(line: 174, column: 20, scope: !11208)
!11273 = !DILocation(line: 174, column: 40, scope: !11208)
!11274 = !DILocation(line: 174, column: 29, scope: !11208)
!11275 = !DILocation(line: 174, column: 27, scope: !11208)
!11276 = !DILocation(line: 174, column: 6, scope: !11208)
!11277 = !DILocation(line: 174, column: 14, scope: !11208)
!11278 = !DILocation(line: 176, column: 2, scope: !11208)
!11279 = !DILocation(line: 177, column: 1, scope: !11208)
!11280 = distinct !DISubprogram(name: "get_unused_session", scope: !1177, file: !1177, line: 179, type: !9618, scopeLine: 180, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1171, retainedNodes: !11281)
!11281 = !{!11282}
!11282 = !DILocalVariable(name: "i", scope: !11280, file: !1177, line: 181, type: !125)
!11283 = !DILocation(line: 0, scope: !11280)
!11284 = !DILocation(line: 183, column: 2, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11280, file: !1177, line: 183, column: 2)
!11286 = !DILocation(line: 184, column: 26, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !1177, line: 184, column: 7)
!11288 = distinct !DILexicalBlock(scope: !11289, file: !1177, line: 183, column: 43)
!11289 = distinct !DILexicalBlock(scope: !11285, file: !1177, line: 183, column: 2)
!11290 = !DILocation(line: 184, column: 33, scope: !11287)
!11291 = !DILocation(line: 184, column: 7, scope: !11288)
!11292 = !DILocation(line: 185, column: 30, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11287, file: !1177, line: 184, column: 39)
!11294 = !DILocation(line: 186, column: 4, scope: !11293)
!11295 = distinct !{!11295, !11284, !11296}
!11296 = !DILocation(line: 188, column: 2, scope: !11285)
!11297 = !DILocation(line: 190, column: 2, scope: !11280)
!11298 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1524, file: !1524, line: 523, type: !1380, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11299)
!11299 = !{!11300, !11301, !11302, !11303, !11304}
!11300 = !DILocalVariable(name: "dev", arg: 1, scope: !11298, file: !1524, line: 523, type: !1382)
!11301 = !DILocalVariable(name: "pin", arg: 2, scope: !11298, file: !1524, line: 524, type: !1397)
!11302 = !DILocalVariable(name: "flags", arg: 3, scope: !11298, file: !1524, line: 524, type: !1398)
!11303 = !DILocalVariable(name: "err", scope: !11298, file: !1524, line: 526, type: !125)
!11304 = !DILocalVariable(name: "pincfg", scope: !11298, file: !1524, line: 527, type: !125)
!11305 = !DILocation(line: 0, scope: !11298)
!11306 = !DILocation(line: 527, column: 2, scope: !11298)
!11307 = !DILocation(line: 532, column: 8, scope: !11298)
!11308 = !DILocation(line: 533, column: 10, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11298, file: !1524, line: 533, column: 6)
!11310 = !DILocation(line: 533, column: 6, scope: !11298)
!11311 = !DILocation(line: 543, column: 13, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11298, file: !1524, line: 543, column: 6)
!11313 = !DILocation(line: 543, column: 28, scope: !11312)
!11314 = !DILocation(line: 543, column: 6, scope: !11298)
!11315 = !DILocation(line: 544, column: 14, scope: !11316)
!11316 = distinct !DILexicalBlock(scope: !11317, file: !1524, line: 544, column: 7)
!11317 = distinct !DILexicalBlock(scope: !11312, file: !1524, line: 543, column: 34)
!11318 = !DILocation(line: 544, column: 39, scope: !11316)
!11319 = !DILocation(line: 544, column: 7, scope: !11317)
!11320 = !DILocation(line: 545, column: 38, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11316, file: !1524, line: 544, column: 45)
!11322 = !DILocation(line: 545, column: 4, scope: !11321)
!11323 = !DILocation(line: 546, column: 3, scope: !11321)
!11324 = !DILocation(line: 546, column: 21, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11316, file: !1524, line: 546, column: 14)
!11326 = !DILocation(line: 546, column: 45, scope: !11325)
!11327 = !DILocation(line: 546, column: 14, scope: !11316)
!11328 = !DILocation(line: 547, column: 40, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11325, file: !1524, line: 546, column: 51)
!11330 = !DILocation(line: 547, column: 4, scope: !11329)
!11331 = !DILocation(line: 548, column: 3, scope: !11329)
!11332 = !DILocation(line: 551, column: 32, scope: !11298)
!11333 = !DILocation(line: 551, column: 37, scope: !11298)
!11334 = !DILocation(line: 551, column: 2, scope: !11298)
!11335 = !DILocation(line: 554, column: 6, scope: !11298)
!11336 = !DILocation(line: 562, column: 1, scope: !11298)
!11337 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1524, file: !1524, line: 410, type: !11338, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11340)
!11338 = !DISubroutineType(types: !11339)
!11339 = !{!125, !1382, !1027}
!11340 = !{!11341, !11342, !11343, !11345}
!11341 = !DILocalVariable(name: "dev", arg: 1, scope: !11337, file: !1524, line: 410, type: !1382)
!11342 = !DILocalVariable(name: "value", arg: 2, scope: !11337, file: !1524, line: 410, type: !1027)
!11343 = !DILocalVariable(name: "cfg", scope: !11337, file: !1524, line: 412, type: !11344)
!11344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 32)
!11345 = !DILocalVariable(name: "gpio", scope: !11337, file: !1524, line: 413, type: !1455)
!11346 = !DILocation(line: 0, scope: !11337)
!11347 = !DILocation(line: 412, column: 45, scope: !11337)
!11348 = !DILocation(line: 413, column: 44, scope: !11337)
!11349 = !DILocation(line: 415, column: 11, scope: !11337)
!11350 = !DILocation(line: 415, column: 9, scope: !11337)
!11351 = !DILocation(line: 417, column: 2, scope: !11337)
!11352 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1524, file: !1524, line: 420, type: !1407, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11353)
!11353 = !{!11354, !11355, !11356, !11357, !11358, !11359}
!11354 = !DILocalVariable(name: "dev", arg: 1, scope: !11352, file: !1524, line: 420, type: !1382)
!11355 = !DILocalVariable(name: "mask", arg: 2, scope: !11352, file: !1524, line: 421, type: !1409)
!11356 = !DILocalVariable(name: "value", arg: 3, scope: !11352, file: !1524, line: 422, type: !1404)
!11357 = !DILocalVariable(name: "cfg", scope: !11352, file: !1524, line: 424, type: !11344)
!11358 = !DILocalVariable(name: "gpio", scope: !11352, file: !1524, line: 425, type: !1455)
!11359 = !DILocalVariable(name: "port_value", scope: !11352, file: !1524, line: 426, type: !208)
!11360 = !DILocation(line: 0, scope: !11352)
!11361 = !DILocation(line: 424, column: 45, scope: !11352)
!11362 = !DILocation(line: 425, column: 44, scope: !11352)
!11363 = !DILocation(line: 430, column: 15, scope: !11352)
!11364 = !DILocation(line: 431, column: 46, scope: !11352)
!11365 = !DILocation(line: 431, column: 44, scope: !11352)
!11366 = !DILocation(line: 431, column: 61, scope: !11352)
!11367 = !DILocation(line: 431, column: 53, scope: !11352)
!11368 = !DILocation(line: 431, column: 2, scope: !11352)
!11369 = !DILocation(line: 435, column: 2, scope: !11352)
!11370 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1524, file: !1524, line: 438, type: !1412, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11371)
!11371 = !{!11372, !11373, !11374, !11375}
!11372 = !DILocalVariable(name: "dev", arg: 1, scope: !11370, file: !1524, line: 438, type: !1382)
!11373 = !DILocalVariable(name: "pins", arg: 2, scope: !11370, file: !1524, line: 439, type: !1409)
!11374 = !DILocalVariable(name: "cfg", scope: !11370, file: !1524, line: 441, type: !11344)
!11375 = !DILocalVariable(name: "gpio", scope: !11370, file: !1524, line: 442, type: !1455)
!11376 = !DILocation(line: 0, scope: !11370)
!11377 = !DILocation(line: 441, column: 45, scope: !11370)
!11378 = !DILocation(line: 442, column: 44, scope: !11370)
!11379 = !DILocation(line: 448, column: 2, scope: !11370)
!11380 = !DILocation(line: 450, column: 2, scope: !11370)
!11381 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1524, file: !1524, line: 453, type: !1412, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11382)
!11382 = !{!11383, !11384, !11385, !11386}
!11383 = !DILocalVariable(name: "dev", arg: 1, scope: !11381, file: !1524, line: 453, type: !1382)
!11384 = !DILocalVariable(name: "pins", arg: 2, scope: !11381, file: !1524, line: 454, type: !1409)
!11385 = !DILocalVariable(name: "cfg", scope: !11381, file: !1524, line: 456, type: !11344)
!11386 = !DILocalVariable(name: "gpio", scope: !11381, file: !1524, line: 457, type: !1455)
!11387 = !DILocation(line: 0, scope: !11381)
!11388 = !DILocation(line: 456, column: 45, scope: !11381)
!11389 = !DILocation(line: 457, column: 44, scope: !11381)
!11390 = !DILocation(line: 467, column: 2, scope: !11381)
!11391 = !DILocation(line: 470, column: 2, scope: !11381)
!11392 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1524, file: !1524, line: 473, type: !1412, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11393)
!11393 = !{!11394, !11395, !11396, !11397}
!11394 = !DILocalVariable(name: "dev", arg: 1, scope: !11392, file: !1524, line: 473, type: !1382)
!11395 = !DILocalVariable(name: "pins", arg: 2, scope: !11392, file: !1524, line: 474, type: !1409)
!11396 = !DILocalVariable(name: "cfg", scope: !11392, file: !1524, line: 476, type: !11344)
!11397 = !DILocalVariable(name: "gpio", scope: !11392, file: !1524, line: 477, type: !1455)
!11398 = !DILocation(line: 0, scope: !11392)
!11399 = !DILocation(line: 476, column: 45, scope: !11392)
!11400 = !DILocation(line: 477, column: 44, scope: !11392)
!11401 = !DILocation(line: 484, column: 2, scope: !11392)
!11402 = !DILocation(line: 487, column: 2, scope: !11392)
!11403 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1524, file: !1524, line: 594, type: !1418, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11404)
!11404 = !{!11405, !11406, !11407, !11408, !11409, !11410, !11412, !11413, !11414}
!11405 = !DILocalVariable(name: "dev", arg: 1, scope: !11403, file: !1524, line: 594, type: !1382)
!11406 = !DILocalVariable(name: "pin", arg: 2, scope: !11403, file: !1524, line: 595, type: !1397)
!11407 = !DILocalVariable(name: "mode", arg: 3, scope: !11403, file: !1524, line: 596, type: !1356)
!11408 = !DILocalVariable(name: "trig", arg: 4, scope: !11403, file: !1524, line: 597, type: !1362)
!11409 = !DILocalVariable(name: "cfg", scope: !11403, file: !1524, line: 599, type: !11344)
!11410 = !DILocalVariable(name: "data", scope: !11403, file: !1524, line: 600, type: !11411)
!11411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 32)
!11412 = !DILocalVariable(name: "edge", scope: !11403, file: !1524, line: 601, type: !125)
!11413 = !DILocalVariable(name: "err", scope: !11403, file: !1524, line: 602, type: !125)
!11414 = !DILabel(scope: !11403, name: "exit", file: !1524, line: 643)
!11415 = !DILocation(line: 0, scope: !11403)
!11416 = !DILocation(line: 599, column: 45, scope: !11403)
!11417 = !DILocation(line: 604, column: 6, scope: !11403)
!11418 = !DILocation(line: 605, column: 34, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !1524, line: 605, column: 7)
!11420 = distinct !DILexicalBlock(scope: !11421, file: !1524, line: 604, column: 38)
!11421 = distinct !DILexicalBlock(scope: !11403, file: !1524, line: 604, column: 6)
!11422 = !DILocation(line: 605, column: 7, scope: !11419)
!11423 = !DILocation(line: 605, column: 47, scope: !11419)
!11424 = !DILocation(line: 605, column: 39, scope: !11419)
!11425 = !DILocation(line: 605, column: 7, scope: !11420)
!11426 = !DILocation(line: 606, column: 4, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11419, file: !1524, line: 605, column: 53)
!11428 = !DILocation(line: 607, column: 4, scope: !11427)
!11429 = !DILocation(line: 608, column: 4, scope: !11427)
!11430 = !DILocation(line: 609, column: 3, scope: !11427)
!11431 = !DILocation(line: 600, column: 38, scope: !11403)
!11432 = !DILocation(line: 620, column: 30, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11403, file: !1524, line: 620, column: 6)
!11434 = !DILocation(line: 620, column: 6, scope: !11433)
!11435 = !DILocation(line: 620, column: 57, scope: !11433)
!11436 = !DILocation(line: 620, column: 6, scope: !11403)
!11437 = !DILocation(line: 625, column: 29, scope: !11403)
!11438 = !DILocation(line: 625, column: 2, scope: !11403)
!11439 = !DILocation(line: 627, column: 2, scope: !11403)
!11440 = !DILocation(line: 630, column: 3, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11403, file: !1524, line: 627, column: 16)
!11442 = !DILocation(line: 633, column: 3, scope: !11441)
!11443 = !DILocation(line: 636, column: 3, scope: !11441)
!11444 = !DILocation(line: 639, column: 2, scope: !11403)
!11445 = !DILocation(line: 641, column: 2, scope: !11403)
!11446 = !DILocation(line: 643, column: 1, scope: !11403)
!11447 = !DILocation(line: 644, column: 2, scope: !11403)
!11448 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1524, file: !1524, line: 647, type: !1422, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11449)
!11449 = !{!11450, !11451, !11452, !11453}
!11450 = !DILocalVariable(name: "dev", arg: 1, scope: !11448, file: !1524, line: 647, type: !1382)
!11451 = !DILocalVariable(name: "callback", arg: 2, scope: !11448, file: !1524, line: 648, type: !1424)
!11452 = !DILocalVariable(name: "set", arg: 3, scope: !11448, file: !1524, line: 649, type: !153)
!11453 = !DILocalVariable(name: "data", scope: !11448, file: !1524, line: 651, type: !11411)
!11454 = !DILocation(line: 0, scope: !11448)
!11455 = !DILocation(line: 651, column: 38, scope: !11448)
!11456 = !DILocation(line: 653, column: 37, scope: !11448)
!11457 = !DILocation(line: 653, column: 9, scope: !11448)
!11458 = !DILocation(line: 653, column: 2, scope: !11448)
!11459 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !11460, file: !11460, line: 38, type: !11461, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11464)
!11460 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11461 = !DISubroutineType(types: !11462)
!11462 = !{!125, !11463, !1424, !153}
!11463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!11464 = !{!11465, !11466, !11467}
!11465 = !DILocalVariable(name: "callbacks", arg: 1, scope: !11459, file: !11460, line: 38, type: !11463)
!11466 = !DILocalVariable(name: "callback", arg: 2, scope: !11459, file: !11460, line: 39, type: !1424)
!11467 = !DILocalVariable(name: "set", arg: 3, scope: !11459, file: !11460, line: 40, type: !153)
!11468 = !DILocation(line: 0, scope: !11459)
!11469 = !DILocation(line: 45, column: 7, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11459, file: !11460, line: 45, column: 6)
!11471 = !DILocation(line: 45, column: 6, scope: !11459)
!11472 = !DILocation(line: 46, column: 56, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !11460, line: 46, column: 7)
!11474 = distinct !DILexicalBlock(scope: !11470, file: !11460, line: 45, column: 38)
!11475 = !DILocation(line: 46, column: 8, scope: !11473)
!11476 = !DILocation(line: 46, column: 7, scope: !11474)
!11477 = !DILocation(line: 51, column: 13, scope: !11470)
!11478 = !DILocation(line: 56, column: 43, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11480, file: !11460, line: 55, column: 11)
!11480 = distinct !DILexicalBlock(scope: !11459, file: !11460, line: 55, column: 6)
!11481 = !DILocation(line: 56, column: 3, scope: !11479)
!11482 = !DILocation(line: 57, column: 2, scope: !11479)
!11483 = !DILocation(line: 60, column: 1, scope: !11459)
!11484 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1429, file: !1429, line: 261, type: !11485, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11487)
!11485 = !DISubroutineType(types: !11486)
!11486 = !{!153, !11463}
!11487 = !{!11488}
!11488 = !DILocalVariable(name: "list", arg: 1, scope: !11484, file: !1429, line: 261, type: !11463)
!11489 = !DILocation(line: 0, scope: !11484)
!11490 = !DILocation(line: 261, column: 1, scope: !11484)
!11491 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1429, file: !1429, line: 417, type: !11492, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11494)
!11492 = !DISubroutineType(types: !11493)
!11493 = !{!153, !11463, !1600}
!11494 = !{!11495, !11496, !11497, !11498}
!11495 = !DILocalVariable(name: "list", arg: 1, scope: !11491, file: !1429, line: 417, type: !11463)
!11496 = !DILocalVariable(name: "node", arg: 2, scope: !11491, file: !1429, line: 417, type: !1600)
!11497 = !DILocalVariable(name: "prev", scope: !11491, file: !1429, line: 417, type: !1600)
!11498 = !DILocalVariable(name: "test", scope: !11491, file: !1429, line: 417, type: !1600)
!11499 = !DILocation(line: 0, scope: !11491)
!11500 = !DILocation(line: 417, column: 1, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11491, file: !1429, line: 417, column: 1)
!11502 = !DILocation(line: 417, column: 1, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11501, file: !1429, line: 417, column: 1)
!11504 = !DILocation(line: 417, column: 1, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !1429, line: 417, column: 1)
!11506 = distinct !DILexicalBlock(scope: !11503, file: !1429, line: 417, column: 1)
!11507 = !DILocation(line: 417, column: 1, scope: !11506)
!11508 = distinct !{!11508, !11500, !11500}
!11509 = !DILocation(line: 417, column: 1, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11505, file: !1429, line: 417, column: 1)
!11511 = !DILocation(line: 417, column: 1, scope: !11491)
!11512 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1429, file: !1429, line: 298, type: !11513, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11515)
!11513 = !DISubroutineType(types: !11514)
!11514 = !{null, !11463, !1600}
!11515 = !{!11516, !11517}
!11516 = !DILocalVariable(name: "list", arg: 1, scope: !11512, file: !1429, line: 298, type: !11463)
!11517 = !DILocalVariable(name: "node", arg: 2, scope: !11512, file: !1429, line: 298, type: !1600)
!11518 = !DILocation(line: 0, scope: !11512)
!11519 = !DILocation(line: 298, column: 1, scope: !11512)
!11520 = !DILocation(line: 298, column: 1, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11512, file: !1429, line: 298, column: 1)
!11522 = !DILocation(line: 298, column: 1, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11521, file: !1429, line: 298, column: 1)
!11524 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1429, file: !1429, line: 231, type: !11525, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11527)
!11525 = !DISubroutineType(types: !11526)
!11526 = !{!1600, !11463}
!11527 = !{!11528}
!11528 = !DILocalVariable(name: "list", arg: 1, scope: !11524, file: !1429, line: 231, type: !11463)
!11529 = !DILocation(line: 0, scope: !11524)
!11530 = !DILocation(line: 233, column: 15, scope: !11524)
!11531 = !DILocation(line: 233, column: 2, scope: !11524)
!11532 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1429, file: !1429, line: 209, type: !11533, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11535)
!11533 = !DISubroutineType(types: !11534)
!11534 = !{null, !1600, !1600}
!11535 = !{!11536, !11537}
!11536 = !DILocalVariable(name: "parent", arg: 1, scope: !11532, file: !1429, line: 209, type: !1600)
!11537 = !DILocalVariable(name: "child", arg: 2, scope: !11532, file: !1429, line: 209, type: !1600)
!11538 = !DILocation(line: 0, scope: !11532)
!11539 = !DILocation(line: 211, column: 10, scope: !11532)
!11540 = !DILocation(line: 211, column: 15, scope: !11532)
!11541 = !DILocation(line: 212, column: 1, scope: !11532)
!11542 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1429, file: !1429, line: 214, type: !11513, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11543)
!11543 = !{!11544, !11545}
!11544 = !DILocalVariable(name: "list", arg: 1, scope: !11542, file: !1429, line: 214, type: !11463)
!11545 = !DILocalVariable(name: "node", arg: 2, scope: !11542, file: !1429, line: 214, type: !1600)
!11546 = !DILocation(line: 0, scope: !11542)
!11547 = !DILocation(line: 216, column: 8, scope: !11542)
!11548 = !DILocation(line: 216, column: 13, scope: !11542)
!11549 = !DILocation(line: 217, column: 1, scope: !11542)
!11550 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1429, file: !1429, line: 243, type: !11525, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11551)
!11551 = !{!11552}
!11552 = !DILocalVariable(name: "list", arg: 1, scope: !11550, file: !1429, line: 243, type: !11463)
!11553 = !DILocation(line: 0, scope: !11550)
!11554 = !DILocation(line: 245, column: 15, scope: !11550)
!11555 = !DILocation(line: 245, column: 2, scope: !11550)
!11556 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1429, file: !1429, line: 219, type: !11513, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11557)
!11557 = !{!11558, !11559}
!11558 = !DILocalVariable(name: "list", arg: 1, scope: !11556, file: !1429, line: 219, type: !11463)
!11559 = !DILocalVariable(name: "node", arg: 2, scope: !11556, file: !1429, line: 219, type: !1600)
!11560 = !DILocation(line: 0, scope: !11556)
!11561 = !DILocation(line: 221, column: 8, scope: !11556)
!11562 = !DILocation(line: 221, column: 13, scope: !11556)
!11563 = !DILocation(line: 222, column: 1, scope: !11556)
!11564 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1429, file: !1429, line: 401, type: !11565, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11567)
!11565 = !DISubroutineType(types: !11566)
!11566 = !{null, !11463, !1600, !1600}
!11567 = !{!11568, !11569, !11570}
!11568 = !DILocalVariable(name: "list", arg: 1, scope: !11564, file: !1429, line: 401, type: !11463)
!11569 = !DILocalVariable(name: "prev_node", arg: 2, scope: !11564, file: !1429, line: 401, type: !1600)
!11570 = !DILocalVariable(name: "node", arg: 3, scope: !11564, file: !1429, line: 401, type: !1600)
!11571 = !DILocation(line: 0, scope: !11564)
!11572 = !DILocation(line: 401, column: 1, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11564, file: !1429, line: 401, column: 1)
!11574 = !DILocation(line: 0, scope: !11573)
!11575 = !DILocation(line: 401, column: 1, scope: !11564)
!11576 = !DILocation(line: 401, column: 1, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11573, file: !1429, line: 401, column: 1)
!11578 = !DILocation(line: 401, column: 1, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11577, file: !1429, line: 401, column: 1)
!11580 = !DILocation(line: 401, column: 1, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11579, file: !1429, line: 401, column: 1)
!11582 = !DILocation(line: 401, column: 1, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11573, file: !1429, line: 401, column: 1)
!11584 = !DILocation(line: 401, column: 1, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11583, file: !1429, line: 401, column: 1)
!11586 = !DILocation(line: 401, column: 1, scope: !11587)
!11587 = distinct !DILexicalBlock(scope: !11585, file: !1429, line: 401, column: 1)
!11588 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1429, file: !1429, line: 285, type: !11589, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11591)
!11589 = !DISubroutineType(types: !11590)
!11590 = !{!1600, !1600}
!11591 = !{!11592}
!11592 = !DILocalVariable(name: "node", arg: 1, scope: !11588, file: !1429, line: 285, type: !1600)
!11593 = !DILocation(line: 0, scope: !11588)
!11594 = !DILocation(line: 285, column: 1, scope: !11588)
!11595 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1429, file: !1429, line: 274, type: !11589, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11596)
!11596 = !{!11597}
!11597 = !DILocalVariable(name: "node", arg: 1, scope: !11595, file: !1429, line: 274, type: !1600)
!11598 = !DILocation(line: 0, scope: !11595)
!11599 = !DILocation(line: 274, column: 1, scope: !11595)
!11600 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1429, file: !1429, line: 204, type: !11589, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11601)
!11601 = !{!11602}
!11602 = !DILocalVariable(name: "node", arg: 1, scope: !11600, file: !1429, line: 204, type: !1600)
!11603 = !DILocation(line: 0, scope: !11600)
!11604 = !DILocation(line: 206, column: 15, scope: !11600)
!11605 = !DILocation(line: 206, column: 2, scope: !11600)
!11606 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1524, file: !1524, line: 342, type: !410, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11607)
!11607 = !{!11608, !11609, !11610}
!11608 = !DILocalVariable(name: "pin", arg: 1, scope: !11606, file: !1524, line: 342, type: !125)
!11609 = !DILocalVariable(name: "line", scope: !11606, file: !1524, line: 344, type: !208)
!11610 = !DILocalVariable(name: "port", scope: !11606, file: !1524, line: 345, type: !125)
!11611 = !DILocation(line: 0, scope: !11606)
!11612 = !DILocation(line: 344, column: 18, scope: !11606)
!11613 = !{i32 983040, i32 0}
!11614 = !DILocation(line: 356, column: 9, scope: !11606)
!11615 = !DILocation(line: 370, column: 2, scope: !11606)
!11616 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1524, file: !1524, line: 37, type: !893, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11617)
!11617 = !{!11618, !11619, !11620}
!11618 = !DILocalVariable(name: "line", arg: 1, scope: !11616, file: !1524, line: 37, type: !125)
!11619 = !DILocalVariable(name: "arg", arg: 2, scope: !11616, file: !1524, line: 37, type: !124)
!11620 = !DILocalVariable(name: "data", scope: !11616, file: !1524, line: 39, type: !11411)
!11621 = !DILocation(line: 0, scope: !11616)
!11622 = !DILocation(line: 41, column: 29, scope: !11616)
!11623 = !DILocation(line: 41, column: 39, scope: !11616)
!11624 = !DILocation(line: 41, column: 44, scope: !11616)
!11625 = !DILocation(line: 41, column: 2, scope: !11616)
!11626 = !DILocation(line: 42, column: 1, scope: !11616)
!11627 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1524, file: !1524, line: 376, type: !11628, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11630)
!11628 = !DISubroutineType(types: !11629)
!11629 = !{!125, !125, !125}
!11630 = !{!11631, !11632, !11633, !11635, !11636}
!11631 = !DILocalVariable(name: "port", arg: 1, scope: !11627, file: !1524, line: 376, type: !125)
!11632 = !DILocalVariable(name: "pin", arg: 2, scope: !11627, file: !1524, line: 376, type: !125)
!11633 = !DILocalVariable(name: "clk", scope: !11627, file: !1524, line: 386, type: !11634)
!11634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!11635 = !DILocalVariable(name: "pclken", scope: !11627, file: !1524, line: 387, type: !1643)
!11636 = !DILocalVariable(name: "ret", scope: !11627, file: !1524, line: 396, type: !125)
!11637 = !DILocation(line: 0, scope: !11627)
!11638 = !DILocation(line: 387, column: 2, scope: !11627)
!11639 = !DILocation(line: 387, column: 22, scope: !11627)
!11640 = !DILocation(line: 399, column: 8, scope: !11627)
!11641 = !DILocation(line: 400, column: 10, scope: !11642)
!11642 = distinct !DILexicalBlock(scope: !11627, file: !1524, line: 400, column: 6)
!11643 = !DILocation(line: 400, column: 6, scope: !11627)
!11644 = !DILocation(line: 405, column: 2, scope: !11627)
!11645 = !DILocation(line: 407, column: 2, scope: !11627)
!11646 = !DILocation(line: 408, column: 1, scope: !11627)
!11647 = distinct !DISubprogram(name: "clock_control_on", scope: !978, file: !978, line: 123, type: !1489, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11648)
!11648 = !{!11649, !11650, !11651}
!11649 = !DILocalVariable(name: "dev", arg: 1, scope: !11647, file: !978, line: 123, type: !1382)
!11650 = !DILocalVariable(name: "sys", arg: 2, scope: !11647, file: !978, line: 124, type: !1071)
!11651 = !DILocalVariable(name: "api", scope: !11647, file: !978, line: 126, type: !1482)
!11652 = !DILocation(line: 0, scope: !11647)
!11653 = !DILocation(line: 127, column: 49, scope: !11647)
!11654 = !DILocation(line: 129, column: 14, scope: !11647)
!11655 = !DILocation(line: 129, column: 9, scope: !11647)
!11656 = !DILocation(line: 129, column: 2, scope: !11647)
!11657 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1524, file: !1524, line: 311, type: !10341, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11658)
!11658 = !{!11659, !11660, !11661}
!11659 = !DILocalVariable(name: "port", arg: 1, scope: !11657, file: !1524, line: 311, type: !125)
!11660 = !DILocalVariable(name: "pin", arg: 2, scope: !11657, file: !1524, line: 311, type: !125)
!11661 = !DILocalVariable(name: "line", scope: !11657, file: !1524, line: 313, type: !208)
!11662 = !DILocation(line: 0, scope: !11657)
!11663 = !DILocation(line: 313, column: 18, scope: !11657)
!11664 = !DILocation(line: 337, column: 2, scope: !11657)
!11665 = !DILocation(line: 340, column: 1, scope: !11657)
!11666 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1524, file: !1524, line: 295, type: !11667, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11669)
!11667 = !DISubroutineType(types: !11668)
!11668 = !{!208, !125}
!11669 = !{!11670}
!11670 = !DILocalVariable(name: "pin", arg: 1, scope: !11666, file: !1524, line: 295, type: !125)
!11671 = !DILocation(line: 0, scope: !11666)
!11672 = !DILocation(line: 307, column: 46, scope: !11666)
!11673 = !DILocation(line: 307, column: 27, scope: !11666)
!11674 = !DILocation(line: 307, column: 32, scope: !11666)
!11675 = !DILocation(line: 307, column: 14, scope: !11666)
!11676 = !DILocation(line: 307, column: 39, scope: !11666)
!11677 = !DILocation(line: 307, column: 2, scope: !11666)
!11678 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6864, file: !6864, line: 671, type: !11679, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11681)
!11679 = !DISubroutineType(types: !11680)
!11680 = !{null, !208, !208}
!11681 = !{!11682, !11683}
!11682 = !DILocalVariable(name: "Port", arg: 1, scope: !11678, file: !6864, line: 671, type: !208)
!11683 = !DILocalVariable(name: "Line", arg: 2, scope: !11678, file: !6864, line: 671, type: !208)
!11684 = !DILocation(line: 0, scope: !11678)
!11685 = !DILocation(line: 673, column: 3, scope: !11678)
!11686 = !DILocalVariable(name: "value", arg: 1, scope: !11687, file: !8310, line: 373, type: !208)
!11687 = distinct !DISubprogram(name: "__RBIT", scope: !8310, file: !8310, line: 373, type: !9556, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11688)
!11688 = !{!11686, !11689}
!11689 = !DILocalVariable(name: "result", scope: !11687, file: !8310, line: 375, type: !208)
!11690 = !DILocation(line: 0, scope: !11687, inlinedAt: !11691)
!11691 = distinct !DILocation(line: 673, column: 3, scope: !11678)
!11692 = !DILocation(line: 380, column: 4, scope: !11687, inlinedAt: !11691)
!11693 = !{i64 3501562}
!11694 = !DILocalVariable(name: "value", arg: 1, scope: !11695, file: !8310, line: 403, type: !208)
!11695 = distinct !DISubprogram(name: "__CLZ", scope: !8310, file: !8310, line: 403, type: !11696, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11698)
!11696 = !DISubroutineType(types: !11697)
!11697 = !{!150, !208}
!11698 = !{!11694}
!11699 = !DILocation(line: 0, scope: !11695, inlinedAt: !11700)
!11700 = distinct !DILocation(line: 673, column: 3, scope: !11678)
!11701 = !DILocation(line: 414, column: 7, scope: !11695, inlinedAt: !11700)
!11702 = !DILocation(line: 674, column: 1, scope: !11678)
!11703 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !11460, file: !11460, line: 69, type: !11704, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11706)
!11704 = !DISubroutineType(types: !11705)
!11705 = !{null, !11463, !1382, !208}
!11706 = !{!11707, !11708, !11709, !11710, !11711}
!11707 = !DILocalVariable(name: "list", arg: 1, scope: !11703, file: !11460, line: 69, type: !11463)
!11708 = !DILocalVariable(name: "port", arg: 2, scope: !11703, file: !11460, line: 70, type: !1382)
!11709 = !DILocalVariable(name: "pins", arg: 3, scope: !11703, file: !11460, line: 71, type: !208)
!11710 = !DILocalVariable(name: "cb", scope: !11703, file: !11460, line: 73, type: !1424)
!11711 = !DILocalVariable(name: "tmp", scope: !11703, file: !11460, line: 73, type: !1424)
!11712 = !DILocation(line: 0, scope: !11703)
!11713 = !DILocation(line: 75, column: 2, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11703, file: !11460, line: 75, column: 2)
!11715 = !DILocation(line: 0, scope: !11714)
!11716 = !DILocation(line: 76, column: 11, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11718, file: !11460, line: 76, column: 7)
!11718 = distinct !DILexicalBlock(scope: !11719, file: !11460, line: 75, column: 57)
!11719 = distinct !DILexicalBlock(scope: !11714, file: !11460, line: 75, column: 2)
!11720 = !DILocation(line: 76, column: 20, scope: !11717)
!11721 = !DILocation(line: 76, column: 7, scope: !11718)
!11722 = !DILocation(line: 78, column: 8, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11717, file: !11460, line: 76, column: 28)
!11724 = !DILocation(line: 78, column: 4, scope: !11723)
!11725 = !DILocation(line: 79, column: 3, scope: !11723)
!11726 = !DILocation(line: 75, column: 2, scope: !11719)
!11727 = !DILocation(line: 81, column: 1, scope: !11703)
!11728 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6864, file: !6864, line: 710, type: !9556, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11729)
!11729 = !{!11730}
!11730 = !DILocalVariable(name: "Line", arg: 1, scope: !11728, file: !6864, line: 710, type: !208)
!11731 = !DILocation(line: 0, scope: !11728)
!11732 = !DILocation(line: 712, column: 21, scope: !11728)
!11733 = !DILocation(line: 0, scope: !11687, inlinedAt: !11734)
!11734 = distinct !DILocation(line: 712, column: 76, scope: !11728)
!11735 = !DILocation(line: 380, column: 4, scope: !11687, inlinedAt: !11734)
!11736 = !DILocation(line: 0, scope: !11695, inlinedAt: !11737)
!11737 = distinct !DILocation(line: 712, column: 76, scope: !11728)
!11738 = !DILocation(line: 414, column: 7, scope: !11695, inlinedAt: !11737)
!11739 = !DILocation(line: 712, column: 73, scope: !11728)
!11740 = !DILocation(line: 712, column: 3, scope: !11728)
!11741 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !11742, file: !11742, line: 910, type: !11743, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11745)
!11742 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11743 = !DISubroutineType(types: !11744)
!11744 = !{null, !1455, !208}
!11745 = !{!11746, !11747}
!11746 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11741, file: !11742, line: 910, type: !1455)
!11747 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11741, file: !11742, line: 910, type: !208)
!11748 = !DILocation(line: 0, scope: !11741)
!11749 = !DILocation(line: 912, column: 3, scope: !11741)
!11750 = !DILocation(line: 913, column: 1, scope: !11741)
!11751 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !11742, file: !11742, line: 823, type: !11752, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11754)
!11752 = !DISubroutineType(types: !11753)
!11753 = !{!208, !1455}
!11754 = !{!11755}
!11755 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11751, file: !11742, line: 823, type: !1455)
!11756 = !DILocation(line: 0, scope: !11751)
!11757 = !DILocation(line: 825, column: 21, scope: !11751)
!11758 = !DILocation(line: 825, column: 3, scope: !11751)
!11759 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !11742, file: !11742, line: 812, type: !11743, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11760)
!11760 = !{!11761, !11762}
!11761 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11759, file: !11742, line: 812, type: !1455)
!11762 = !DILocalVariable(name: "PortValue", arg: 2, scope: !11759, file: !11742, line: 812, type: !208)
!11763 = !DILocation(line: 0, scope: !11759)
!11764 = !DILocation(line: 814, column: 3, scope: !11759)
!11765 = !DILocation(line: 815, column: 1, scope: !11759)
!11766 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !11742, file: !11742, line: 771, type: !11752, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11767)
!11767 = !{!11768}
!11768 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11766, file: !11742, line: 771, type: !1455)
!11769 = !DILocation(line: 0, scope: !11766)
!11770 = !DILocation(line: 773, column: 21, scope: !11766)
!11771 = !DILocation(line: 773, column: 3, scope: !11766)
!11772 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1524, file: !1524, line: 47, type: !11773, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11775)
!11773 = !DISubroutineType(types: !11774)
!11774 = !{!125, !1398, !387}
!11775 = !{!11776, !11777}
!11776 = !DILocalVariable(name: "flags", arg: 1, scope: !11772, file: !1524, line: 47, type: !1398)
!11777 = !DILocalVariable(name: "pincfg", arg: 2, scope: !11772, file: !1524, line: 47, type: !387)
!11778 = !DILocation(line: 0, scope: !11772)
!11779 = !DILocation(line: 50, column: 13, scope: !11780)
!11780 = distinct !DILexicalBlock(scope: !11772, file: !1524, line: 50, column: 6)
!11781 = !DILocation(line: 50, column: 28, scope: !11780)
!11782 = !DILocation(line: 50, column: 6, scope: !11772)
!11783 = !DILocation(line: 53, column: 11, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11780, file: !1524, line: 50, column: 34)
!11785 = !DILocation(line: 55, column: 14, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11784, file: !1524, line: 55, column: 7)
!11787 = !DILocation(line: 55, column: 35, scope: !11786)
!11788 = !DILocation(line: 55, column: 7, scope: !11784)
!11789 = !DILocation(line: 56, column: 14, scope: !11790)
!11790 = distinct !DILexicalBlock(scope: !11791, file: !1524, line: 56, column: 8)
!11791 = distinct !DILexicalBlock(scope: !11786, file: !1524, line: 55, column: 41)
!11792 = !DILocation(line: 56, column: 8, scope: !11791)
!11793 = !DILocation(line: 0, scope: !11786)
!11794 = !DILocation(line: 66, column: 14, scope: !11795)
!11795 = distinct !DILexicalBlock(scope: !11784, file: !1524, line: 66, column: 7)
!11796 = !DILocation(line: 66, column: 30, scope: !11795)
!11797 = !DILocation(line: 66, column: 7, scope: !11784)
!11798 = !DILocation(line: 67, column: 12, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11795, file: !1524, line: 66, column: 36)
!11800 = !DILocation(line: 68, column: 3, scope: !11799)
!11801 = !DILocation(line: 68, column: 21, scope: !11802)
!11802 = distinct !DILexicalBlock(scope: !11795, file: !1524, line: 68, column: 14)
!11803 = !DILocation(line: 68, column: 39, scope: !11802)
!11804 = !DILocation(line: 68, column: 14, scope: !11795)
!11805 = !DILocation(line: 69, column: 12, scope: !11806)
!11806 = distinct !DILexicalBlock(scope: !11802, file: !1524, line: 68, column: 45)
!11807 = !DILocation(line: 70, column: 3, scope: !11806)
!11808 = !DILocation(line: 72, column: 21, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11780, file: !1524, line: 72, column: 14)
!11810 = !DILocation(line: 72, column: 35, scope: !11809)
!11811 = !DILocation(line: 72, column: 14, scope: !11780)
!11812 = !DILocation(line: 77, column: 14, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11814, file: !1524, line: 77, column: 7)
!11814 = distinct !DILexicalBlock(scope: !11809, file: !1524, line: 72, column: 41)
!11815 = !DILocation(line: 77, column: 30, scope: !11813)
!11816 = !DILocation(line: 77, column: 7, scope: !11814)
!11817 = !DILocation(line: 0, scope: !11780)
!11818 = !DILocation(line: 90, column: 1, scope: !11772)
!11819 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1524, file: !1524, line: 157, type: !11820, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11822)
!11820 = !DISubroutineType(types: !11821)
!11821 = !{null, !1382, !125, !125, !125}
!11822 = !{!11823, !11824, !11825, !11826, !11827, !11828, !11829, !11830, !11831, !11832, !11833}
!11823 = !DILocalVariable(name: "dev", arg: 1, scope: !11819, file: !1524, line: 157, type: !1382)
!11824 = !DILocalVariable(name: "pin", arg: 2, scope: !11819, file: !1524, line: 157, type: !125)
!11825 = !DILocalVariable(name: "conf", arg: 3, scope: !11819, file: !1524, line: 158, type: !125)
!11826 = !DILocalVariable(name: "func", arg: 4, scope: !11819, file: !1524, line: 158, type: !125)
!11827 = !DILocalVariable(name: "cfg", scope: !11819, file: !1524, line: 160, type: !11344)
!11828 = !DILocalVariable(name: "gpio", scope: !11819, file: !1524, line: 161, type: !1455)
!11829 = !DILocalVariable(name: "pin_ll", scope: !11819, file: !1524, line: 163, type: !125)
!11830 = !DILocalVariable(name: "mode", scope: !11819, file: !1524, line: 227, type: !32)
!11831 = !DILocalVariable(name: "otype", scope: !11819, file: !1524, line: 227, type: !32)
!11832 = !DILocalVariable(name: "ospeed", scope: !11819, file: !1524, line: 227, type: !32)
!11833 = !DILocalVariable(name: "pupd", scope: !11819, file: !1524, line: 227, type: !32)
!11834 = !DILocation(line: 0, scope: !11819)
!11835 = !DILocation(line: 160, column: 45, scope: !11819)
!11836 = !DILocation(line: 161, column: 44, scope: !11819)
!11837 = !DILocation(line: 163, column: 15, scope: !11819)
!11838 = !DILocation(line: 229, column: 14, scope: !11819)
!11839 = !DILocation(line: 246, column: 47, scope: !11819)
!11840 = !DILocation(line: 246, column: 2, scope: !11819)
!11841 = !DILocation(line: 248, column: 43, scope: !11819)
!11842 = !DILocation(line: 248, column: 2, scope: !11819)
!11843 = !DILocation(line: 250, column: 40, scope: !11819)
!11844 = !DILocation(line: 250, column: 2, scope: !11819)
!11845 = !DILocation(line: 252, column: 11, scope: !11846)
!11846 = distinct !DILexicalBlock(scope: !11819, file: !1524, line: 252, column: 6)
!11847 = !DILocation(line: 252, column: 6, scope: !11819)
!11848 = !DILocation(line: 253, column: 11, scope: !11849)
!11849 = distinct !DILexicalBlock(scope: !11850, file: !1524, line: 253, column: 7)
!11850 = distinct !DILexicalBlock(scope: !11846, file: !1524, line: 252, column: 36)
!11851 = !DILocation(line: 253, column: 7, scope: !11850)
!11852 = !DILocation(line: 254, column: 4, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11849, file: !1524, line: 253, column: 16)
!11854 = !DILocation(line: 255, column: 3, scope: !11853)
!11855 = !DILocation(line: 256, column: 4, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11849, file: !1524, line: 255, column: 10)
!11857 = !DILocation(line: 260, column: 40, scope: !11819)
!11858 = !DILocation(line: 260, column: 2, scope: !11819)
!11859 = !DILocation(line: 265, column: 1, scope: !11819)
!11860 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1524, file: !1524, line: 137, type: !11667, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11861)
!11861 = !{!11862, !11863}
!11862 = !DILocalVariable(name: "pin", arg: 1, scope: !11860, file: !1524, line: 137, type: !125)
!11863 = !DILocalVariable(name: "pinval", scope: !11860, file: !1524, line: 139, type: !208)
!11864 = !DILocation(line: 0, scope: !11860)
!11865 = !DILocation(line: 149, column: 13, scope: !11860)
!11866 = !DILocation(line: 151, column: 2, scope: !11860)
!11867 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !11742, file: !11742, line: 342, type: !11868, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11870)
!11868 = !DISubroutineType(types: !11869)
!11869 = !{null, !1455, !208, !208}
!11870 = !{!11871, !11872, !11873}
!11871 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11867, file: !11742, line: 342, type: !1455)
!11872 = !DILocalVariable(name: "PinMask", arg: 2, scope: !11867, file: !11742, line: 342, type: !208)
!11873 = !DILocalVariable(name: "OutputType", arg: 3, scope: !11867, file: !11742, line: 342, type: !208)
!11874 = !DILocation(line: 0, scope: !11867)
!11875 = !DILocation(line: 344, column: 3, scope: !11867)
!11876 = !DILocation(line: 345, column: 1, scope: !11867)
!11877 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !11742, file: !11742, line: 413, type: !11868, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11878)
!11878 = !{!11879, !11880, !11881}
!11879 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11877, file: !11742, line: 413, type: !1455)
!11880 = !DILocalVariable(name: "Pin", arg: 2, scope: !11877, file: !11742, line: 413, type: !208)
!11881 = !DILocalVariable(name: "Speed", arg: 3, scope: !11877, file: !11742, line: 413, type: !208)
!11882 = !DILocation(line: 0, scope: !11877)
!11883 = !DILocation(line: 415, column: 3, scope: !11877)
!11884 = !DILocation(line: 0, scope: !11687, inlinedAt: !11885)
!11885 = distinct !DILocation(line: 415, column: 3, scope: !11877)
!11886 = !DILocation(line: 380, column: 4, scope: !11687, inlinedAt: !11885)
!11887 = !DILocation(line: 0, scope: !11695, inlinedAt: !11888)
!11888 = distinct !DILocation(line: 415, column: 3, scope: !11877)
!11889 = !DILocation(line: 414, column: 7, scope: !11695, inlinedAt: !11888)
!11890 = !DILocation(line: 0, scope: !11687, inlinedAt: !11891)
!11891 = distinct !DILocation(line: 415, column: 3, scope: !11877)
!11892 = !DILocation(line: 0, scope: !11695, inlinedAt: !11893)
!11893 = distinct !DILocation(line: 415, column: 3, scope: !11877)
!11894 = !DILocation(line: 417, column: 1, scope: !11877)
!11895 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !11742, file: !11742, line: 484, type: !11868, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11896)
!11896 = !{!11897, !11898, !11899}
!11897 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11895, file: !11742, line: 484, type: !1455)
!11898 = !DILocalVariable(name: "Pin", arg: 2, scope: !11895, file: !11742, line: 484, type: !208)
!11899 = !DILocalVariable(name: "Pull", arg: 3, scope: !11895, file: !11742, line: 484, type: !208)
!11900 = !DILocation(line: 0, scope: !11895)
!11901 = !DILocation(line: 486, column: 3, scope: !11895)
!11902 = !DILocation(line: 0, scope: !11687, inlinedAt: !11903)
!11903 = distinct !DILocation(line: 486, column: 3, scope: !11895)
!11904 = !DILocation(line: 380, column: 4, scope: !11687, inlinedAt: !11903)
!11905 = !DILocation(line: 0, scope: !11695, inlinedAt: !11906)
!11906 = distinct !DILocation(line: 486, column: 3, scope: !11895)
!11907 = !DILocation(line: 414, column: 7, scope: !11695, inlinedAt: !11906)
!11908 = !DILocation(line: 0, scope: !11687, inlinedAt: !11909)
!11909 = distinct !DILocation(line: 486, column: 3, scope: !11895)
!11910 = !DILocation(line: 0, scope: !11695, inlinedAt: !11911)
!11911 = distinct !DILocation(line: 486, column: 3, scope: !11895)
!11912 = !DILocation(line: 487, column: 1, scope: !11895)
!11913 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !11742, file: !11742, line: 556, type: !11868, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11914)
!11914 = !{!11915, !11916, !11917}
!11915 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11913, file: !11742, line: 556, type: !1455)
!11916 = !DILocalVariable(name: "Pin", arg: 2, scope: !11913, file: !11742, line: 556, type: !208)
!11917 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11913, file: !11742, line: 556, type: !208)
!11918 = !DILocation(line: 0, scope: !11913)
!11919 = !DILocation(line: 558, column: 3, scope: !11913)
!11920 = !DILocation(line: 0, scope: !11687, inlinedAt: !11921)
!11921 = distinct !DILocation(line: 558, column: 3, scope: !11913)
!11922 = !DILocation(line: 380, column: 4, scope: !11687, inlinedAt: !11921)
!11923 = !DILocation(line: 0, scope: !11695, inlinedAt: !11924)
!11924 = distinct !DILocation(line: 558, column: 3, scope: !11913)
!11925 = !DILocation(line: 414, column: 7, scope: !11695, inlinedAt: !11924)
!11926 = !DILocation(line: 0, scope: !11687, inlinedAt: !11927)
!11927 = distinct !DILocation(line: 558, column: 3, scope: !11913)
!11928 = !DILocation(line: 0, scope: !11695, inlinedAt: !11929)
!11929 = distinct !DILocation(line: 558, column: 3, scope: !11913)
!11930 = !DILocation(line: 560, column: 1, scope: !11913)
!11931 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !11742, file: !11742, line: 633, type: !11868, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11932)
!11932 = !{!11933, !11934, !11935}
!11933 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11931, file: !11742, line: 633, type: !1455)
!11934 = !DILocalVariable(name: "Pin", arg: 2, scope: !11931, file: !11742, line: 633, type: !208)
!11935 = !DILocalVariable(name: "Alternate", arg: 3, scope: !11931, file: !11742, line: 633, type: !208)
!11936 = !DILocation(line: 0, scope: !11931)
!11937 = !DILocation(line: 635, column: 3, scope: !11931)
!11938 = !DILocation(line: 0, scope: !11687, inlinedAt: !11939)
!11939 = distinct !DILocation(line: 635, column: 3, scope: !11931)
!11940 = !DILocation(line: 380, column: 4, scope: !11687, inlinedAt: !11939)
!11941 = !DILocation(line: 0, scope: !11695, inlinedAt: !11942)
!11942 = distinct !DILocation(line: 635, column: 3, scope: !11931)
!11943 = !DILocation(line: 414, column: 7, scope: !11695, inlinedAt: !11942)
!11944 = !DILocation(line: 0, scope: !11687, inlinedAt: !11945)
!11945 = distinct !DILocation(line: 635, column: 3, scope: !11931)
!11946 = !DILocation(line: 0, scope: !11695, inlinedAt: !11947)
!11947 = distinct !DILocation(line: 635, column: 3, scope: !11931)
!11948 = !DILocation(line: 637, column: 1, scope: !11931)
!11949 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !11742, file: !11742, line: 273, type: !11868, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11950)
!11950 = !{!11951, !11952, !11953}
!11951 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !11949, file: !11742, line: 273, type: !1455)
!11952 = !DILocalVariable(name: "Pin", arg: 2, scope: !11949, file: !11742, line: 273, type: !208)
!11953 = !DILocalVariable(name: "Mode", arg: 3, scope: !11949, file: !11742, line: 273, type: !208)
!11954 = !DILocation(line: 0, scope: !11949)
!11955 = !DILocation(line: 275, column: 3, scope: !11949)
!11956 = !DILocation(line: 0, scope: !11687, inlinedAt: !11957)
!11957 = distinct !DILocation(line: 275, column: 3, scope: !11949)
!11958 = !DILocation(line: 380, column: 4, scope: !11687, inlinedAt: !11957)
!11959 = !DILocation(line: 0, scope: !11695, inlinedAt: !11960)
!11960 = distinct !DILocation(line: 275, column: 3, scope: !11949)
!11961 = !DILocation(line: 414, column: 7, scope: !11695, inlinedAt: !11960)
!11962 = !DILocation(line: 0, scope: !11687, inlinedAt: !11963)
!11963 = distinct !DILocation(line: 275, column: 3, scope: !11949)
!11964 = !DILocation(line: 0, scope: !11695, inlinedAt: !11965)
!11965 = distinct !DILocation(line: 275, column: 3, scope: !11949)
!11966 = !DILocation(line: 276, column: 1, scope: !11949)
!11967 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1524, file: !1524, line: 698, type: !1537, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11968)
!11968 = !{!11969, !11970, !11971}
!11969 = !DILocalVariable(name: "dev", arg: 1, scope: !11967, file: !1524, line: 698, type: !1382)
!11970 = !DILocalVariable(name: "data", scope: !11967, file: !1524, line: 700, type: !11411)
!11971 = !DILocalVariable(name: "ret", scope: !11967, file: !1524, line: 701, type: !125)
!11972 = !DILocation(line: 0, scope: !11967)
!11973 = !DILocation(line: 700, column: 38, scope: !11967)
!11974 = !DILocation(line: 703, column: 8, scope: !11967)
!11975 = !DILocation(line: 703, column: 12, scope: !11967)
!11976 = !DILocation(line: 705, column: 7, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11967, file: !1524, line: 705, column: 6)
!11978 = !DILocation(line: 705, column: 6, scope: !11967)
!11979 = !DILocation(line: 722, column: 8, scope: !11967)
!11980 = !DILocation(line: 723, column: 10, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11967, file: !1524, line: 723, column: 6)
!11982 = !DILocation(line: 723, column: 6, scope: !11967)
!11983 = !DILocation(line: 731, column: 1, scope: !11967)
!11984 = distinct !DISubprogram(name: "device_is_ready", scope: !4202, file: !4202, line: 47, type: !11985, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11987)
!11985 = !DISubroutineType(types: !11986)
!11986 = !{!153, !1382}
!11987 = !{!11988}
!11988 = !DILocalVariable(name: "dev", arg: 1, scope: !11984, file: !4202, line: 47, type: !1382)
!11989 = !DILocation(line: 0, scope: !11984)
!11990 = !DILocation(line: 55, column: 2, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11984, file: !4202, line: 55, column: 2)
!11992 = !{i64 2154944445}
!11993 = !DILocation(line: 56, column: 9, scope: !11984)
!11994 = !DILocation(line: 56, column: 2, scope: !11984)
!11995 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1524, file: !1524, line: 270, type: !11996, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !11998)
!11996 = !DISubroutineType(types: !11997)
!11997 = !{!125, !1382, !153}
!11998 = !{!11999, !12000, !12001, !12002, !12003}
!11999 = !DILocalVariable(name: "dev", arg: 1, scope: !11995, file: !1524, line: 270, type: !1382)
!12000 = !DILocalVariable(name: "on", arg: 2, scope: !11995, file: !1524, line: 270, type: !153)
!12001 = !DILocalVariable(name: "cfg", scope: !11995, file: !1524, line: 272, type: !11344)
!12002 = !DILocalVariable(name: "ret", scope: !11995, file: !1524, line: 273, type: !125)
!12003 = !DILocalVariable(name: "clk", scope: !11995, file: !1524, line: 278, type: !11634)
!12004 = !DILocation(line: 0, scope: !11995)
!12005 = !DILocation(line: 272, column: 45, scope: !11995)
!12006 = !DILocation(line: 282, column: 38, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12008, file: !1524, line: 280, column: 10)
!12008 = distinct !DILexicalBlock(scope: !11995, file: !1524, line: 280, column: 6)
!12009 = !DILocation(line: 282, column: 6, scope: !12007)
!12010 = !DILocation(line: 281, column: 9, scope: !12007)
!12011 = !DILocation(line: 293, column: 1, scope: !11995)
!12012 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !11985, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !12013)
!12013 = !{!12014}
!12014 = !DILocalVariable(name: "dev", arg: 1, scope: !12012, file: !137, line: 730, type: !1382)
!12015 = !DILocation(line: 0, scope: !12012)
!12016 = !DILocation(line: 732, column: 9, scope: !12012)
!12017 = !DILocation(line: 732, column: 2, scope: !12012)
!12018 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1524, file: !1524, line: 496, type: !12019, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1353, retainedNodes: !12021)
!12019 = !DISubroutineType(types: !12020)
!12020 = !{!125, !1382, !125, !125, !125}
!12021 = !{!12022, !12023, !12024, !12025, !12026, !12027}
!12022 = !DILocalVariable(name: "dev", arg: 1, scope: !12018, file: !1524, line: 496, type: !1382)
!12023 = !DILocalVariable(name: "pin", arg: 2, scope: !12018, file: !1524, line: 496, type: !125)
!12024 = !DILocalVariable(name: "conf", arg: 3, scope: !12018, file: !1524, line: 496, type: !125)
!12025 = !DILocalVariable(name: "func", arg: 4, scope: !12018, file: !1524, line: 496, type: !125)
!12026 = !DILocalVariable(name: "ret", scope: !12018, file: !1524, line: 498, type: !125)
!12027 = !DILocalVariable(name: "gpio_out", scope: !12028, file: !1524, line: 508, type: !208)
!12028 = distinct !DILexicalBlock(scope: !12029, file: !1524, line: 507, column: 27)
!12029 = distinct !DILexicalBlock(scope: !12018, file: !1524, line: 507, column: 6)
!12030 = !DILocation(line: 0, scope: !12018)
!12031 = !DILocation(line: 505, column: 2, scope: !12018)
!12032 = !DILocation(line: 507, column: 11, scope: !12029)
!12033 = !DILocation(line: 507, column: 6, scope: !12018)
!12034 = !DILocation(line: 508, column: 28, scope: !12028)
!12035 = !DILocation(line: 0, scope: !12028)
!12036 = !DILocation(line: 510, column: 16, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !12028, file: !1524, line: 510, column: 7)
!12038 = !DILocation(line: 0, scope: !12037)
!12039 = !DILocation(line: 510, column: 7, scope: !12028)
!12040 = !DILocation(line: 511, column: 4, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12037, file: !1524, line: 510, column: 32)
!12042 = !DILocation(line: 512, column: 3, scope: !12041)
!12043 = !DILocation(line: 513, column: 4, scope: !12044)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !1524, line: 512, column: 39)
!12045 = distinct !DILexicalBlock(scope: !12037, file: !1524, line: 512, column: 14)
!12046 = !DILocation(line: 514, column: 3, scope: !12044)
!12047 = !DILocation(line: 518, column: 1, scope: !12018)
!12048 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1802, file: !1802, line: 526, type: !1703, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12049)
!12049 = !{!12050, !12051, !12052}
!12050 = !DILocalVariable(name: "dev", arg: 1, scope: !12048, file: !1802, line: 526, type: !1705)
!12051 = !DILocalVariable(name: "c", arg: 2, scope: !12048, file: !1802, line: 526, type: !1132)
!12052 = !DILocalVariable(name: "config", scope: !12048, file: !1802, line: 528, type: !12053)
!12053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 32)
!12054 = !DILocation(line: 0, scope: !12048)
!12055 = !DILocation(line: 528, column: 48, scope: !12048)
!12056 = !DILocation(line: 531, column: 40, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !12048, file: !1802, line: 531, column: 6)
!12058 = !DILocation(line: 531, column: 6, scope: !12057)
!12059 = !DILocation(line: 531, column: 6, scope: !12048)
!12060 = !DILocation(line: 532, column: 34, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !12057, file: !1802, line: 531, column: 48)
!12062 = !DILocation(line: 532, column: 3, scope: !12061)
!12063 = !DILocation(line: 533, column: 2, scope: !12061)
!12064 = !DILocation(line: 539, column: 42, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !12048, file: !1802, line: 539, column: 6)
!12066 = !DILocation(line: 539, column: 7, scope: !12065)
!12067 = !DILocation(line: 539, column: 6, scope: !12048)
!12068 = !DILocation(line: 543, column: 52, scope: !12048)
!12069 = !DILocation(line: 543, column: 22, scope: !12048)
!12070 = !DILocation(line: 543, column: 5, scope: !12048)
!12071 = !DILocation(line: 545, column: 2, scope: !12048)
!12072 = !DILocation(line: 546, column: 1, scope: !12048)
!12073 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1802, file: !1802, line: 548, type: !1722, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12074)
!12074 = !{!12075, !12076, !12077, !12078}
!12075 = !DILocalVariable(name: "dev", arg: 1, scope: !12073, file: !1802, line: 548, type: !1705)
!12076 = !DILocalVariable(name: "c", arg: 2, scope: !12073, file: !1802, line: 549, type: !151)
!12077 = !DILocalVariable(name: "config", scope: !12073, file: !1802, line: 551, type: !12053)
!12078 = !DILocalVariable(name: "key", scope: !12073, file: !1802, line: 555, type: !32)
!12079 = !DILocation(line: 0, scope: !12073)
!12080 = !DILocation(line: 551, column: 48, scope: !12073)
!12081 = !DILocation(line: 562, column: 2, scope: !12073)
!12082 = !DILocation(line: 563, column: 41, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12084, file: !1802, line: 563, column: 7)
!12084 = distinct !DILexicalBlock(scope: !12073, file: !1802, line: 562, column: 12)
!12085 = !DILocation(line: 563, column: 7, scope: !12083)
!12086 = !DILocation(line: 563, column: 7, scope: !12084)
!12087 = !DILocation(line: 55, column: 2, scope: !12088, inlinedAt: !12092)
!12088 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6843, file: !6843, line: 42, type: !6844, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12089)
!12089 = !{!12090, !12091}
!12090 = !DILocalVariable(name: "key", scope: !12088, file: !6843, line: 44, type: !32)
!12091 = !DILocalVariable(name: "tmp", scope: !12088, file: !6843, line: 53, type: !32)
!12092 = distinct !DILocation(line: 564, column: 10, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12083, file: !1802, line: 563, column: 49)
!12094 = !{i64 2289975}
!12095 = !DILocation(line: 0, scope: !12088, inlinedAt: !12092)
!12096 = !DILocation(line: 565, column: 42, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !12093, file: !1802, line: 565, column: 8)
!12098 = !DILocation(line: 565, column: 8, scope: !12097)
!12099 = !DILocation(line: 565, column: 8, scope: !12093)
!12100 = !DILocalVariable(name: "key", arg: 1, scope: !12101, file: !6843, line: 84, type: !32)
!12101 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6843, file: !6843, line: 84, type: !6854, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12102)
!12102 = !{!12100}
!12103 = !DILocation(line: 0, scope: !12101, inlinedAt: !12104)
!12104 = distinct !DILocation(line: 568, column: 4, scope: !12093)
!12105 = !DILocation(line: 95, column: 2, scope: !12101, inlinedAt: !12104)
!12106 = !{i64 2290792}
!12107 = !DILocation(line: 569, column: 3, scope: !12093)
!12108 = distinct !{!12108, !12081, !12109}
!12109 = !DILocation(line: 570, column: 2, scope: !12073)
!12110 = !DILocation(line: 592, column: 33, scope: !12073)
!12111 = !DILocation(line: 592, column: 2, scope: !12073)
!12112 = !DILocation(line: 0, scope: !12101, inlinedAt: !12113)
!12113 = distinct !DILocation(line: 593, column: 2, scope: !12073)
!12114 = !DILocation(line: 95, column: 2, scope: !12101, inlinedAt: !12113)
!12115 = !DILocation(line: 594, column: 1, scope: !12073)
!12116 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1802, file: !1802, line: 596, type: !1726, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12117)
!12117 = !{!12118, !12119, !12120}
!12118 = !DILocalVariable(name: "dev", arg: 1, scope: !12116, file: !1802, line: 596, type: !1705)
!12119 = !DILocalVariable(name: "config", scope: !12116, file: !1802, line: 598, type: !12053)
!12120 = !DILocalVariable(name: "err", scope: !12116, file: !1802, line: 599, type: !208)
!12121 = !DILocation(line: 0, scope: !12116)
!12122 = !DILocation(line: 598, column: 48, scope: !12116)
!12123 = !DILocation(line: 606, column: 40, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12116, file: !1802, line: 606, column: 6)
!12125 = !DILocation(line: 606, column: 6, scope: !12124)
!12126 = !DILocation(line: 606, column: 6, scope: !12116)
!12127 = !DILocation(line: 610, column: 39, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12116, file: !1802, line: 610, column: 6)
!12129 = !DILocation(line: 610, column: 6, scope: !12128)
!12130 = !DILocation(line: 610, column: 6, scope: !12116)
!12131 = !DILocation(line: 614, column: 39, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12116, file: !1802, line: 614, column: 6)
!12133 = !DILocation(line: 614, column: 6, scope: !12132)
!12134 = !DILocation(line: 614, column: 6, scope: !12116)
!12135 = !DILocation(line: 619, column: 40, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12116, file: !1802, line: 619, column: 6)
!12137 = !DILocation(line: 619, column: 6, scope: !12136)
!12138 = !DILocation(line: 619, column: 6, scope: !12116)
!12139 = !DILocation(line: 623, column: 10, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12116, file: !1802, line: 623, column: 6)
!12141 = !DILocation(line: 623, column: 6, scope: !12116)
!12142 = !DILocation(line: 624, column: 34, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !12140, file: !1802, line: 623, column: 24)
!12144 = !DILocation(line: 624, column: 3, scope: !12143)
!12145 = !DILocation(line: 625, column: 2, scope: !12143)
!12146 = !DILocation(line: 632, column: 10, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12116, file: !1802, line: 632, column: 6)
!12148 = !DILocation(line: 632, column: 6, scope: !12116)
!12149 = !DILocation(line: 633, column: 34, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12147, file: !1802, line: 632, column: 32)
!12151 = !DILocation(line: 633, column: 3, scope: !12150)
!12152 = !DILocation(line: 634, column: 2, scope: !12150)
!12153 = !DILocation(line: 636, column: 10, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12116, file: !1802, line: 636, column: 6)
!12155 = !DILocation(line: 636, column: 6, scope: !12116)
!12156 = !DILocation(line: 637, column: 33, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12154, file: !1802, line: 636, column: 31)
!12158 = !DILocation(line: 637, column: 3, scope: !12157)
!12159 = !DILocation(line: 638, column: 2, scope: !12157)
!12160 = !DILocation(line: 640, column: 10, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12116, file: !1802, line: 640, column: 6)
!12162 = !DILocation(line: 640, column: 6, scope: !12116)
!12163 = !DILocation(line: 641, column: 33, scope: !12164)
!12164 = distinct !DILexicalBlock(scope: !12161, file: !1802, line: 640, column: 32)
!12165 = !DILocation(line: 641, column: 3, scope: !12164)
!12166 = !DILocation(line: 642, column: 2, scope: !12164)
!12167 = !DILocation(line: 646, column: 32, scope: !12116)
!12168 = !DILocation(line: 646, column: 2, scope: !12116)
!12169 = !DILocation(line: 648, column: 2, scope: !12116)
!12170 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1802, file: !1802, line: 419, type: !1730, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12171)
!12171 = !{!12172, !12173, !12174, !12175, !12177, !12178, !12179, !12180}
!12172 = !DILocalVariable(name: "dev", arg: 1, scope: !12170, file: !1802, line: 419, type: !1705)
!12173 = !DILocalVariable(name: "cfg", arg: 2, scope: !12170, file: !1802, line: 420, type: !1732)
!12174 = !DILocalVariable(name: "config", scope: !12170, file: !1802, line: 422, type: !12053)
!12175 = !DILocalVariable(name: "data", scope: !12170, file: !1802, line: 423, type: !12176)
!12176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 32)
!12177 = !DILocalVariable(name: "parity", scope: !12170, file: !1802, line: 424, type: !8578)
!12178 = !DILocalVariable(name: "stopbits", scope: !12170, file: !1802, line: 425, type: !8578)
!12179 = !DILocalVariable(name: "databits", scope: !12170, file: !1802, line: 426, type: !8578)
!12180 = !DILocalVariable(name: "flowctrl", scope: !12170, file: !1802, line: 428, type: !8578)
!12181 = !DILocation(line: 0, scope: !12170)
!12182 = !DILocation(line: 422, column: 48, scope: !12170)
!12183 = !DILocation(line: 423, column: 38, scope: !12170)
!12184 = !DILocation(line: 424, column: 56, scope: !12170)
!12185 = !DILocation(line: 424, column: 51, scope: !12170)
!12186 = !DILocation(line: 424, column: 26, scope: !12170)
!12187 = !DILocation(line: 425, column: 60, scope: !12170)
!12188 = !DILocation(line: 425, column: 55, scope: !12170)
!12189 = !DILocation(line: 425, column: 28, scope: !12170)
!12190 = !DILocation(line: 426, column: 60, scope: !12170)
!12191 = !DILocation(line: 426, column: 55, scope: !12170)
!12192 = !DILocation(line: 426, column: 28, scope: !12170)
!12193 = !DILocation(line: 428, column: 58, scope: !12170)
!12194 = !DILocation(line: 428, column: 53, scope: !12170)
!12195 = !DILocation(line: 428, column: 28, scope: !12170)
!12196 = !DILocation(line: 431, column: 44, scope: !12197)
!12197 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 431, column: 6)
!12198 = !DILocation(line: 438, column: 22, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 437, column: 6)
!12200 = !DILocation(line: 437, column: 6, scope: !12170)
!12201 = !DILocation(line: 448, column: 6, scope: !12170)
!12202 = !DILocation(line: 465, column: 47, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 465, column: 6)
!12204 = !DILocation(line: 475, column: 21, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 475, column: 6)
!12206 = !DILocation(line: 475, column: 6, scope: !12170)
!12207 = !DILocation(line: 476, column: 8, scope: !12208)
!12208 = distinct !DILexicalBlock(scope: !12209, file: !1802, line: 476, column: 7)
!12209 = distinct !DILexicalBlock(scope: !12205, file: !1802, line: 475, column: 49)
!12210 = !DILocation(line: 477, column: 34, scope: !12208)
!12211 = !DILocation(line: 476, column: 7, scope: !12209)
!12212 = !DILocation(line: 482, column: 27, scope: !12170)
!12213 = !DILocation(line: 482, column: 2, scope: !12170)
!12214 = !DILocation(line: 484, column: 16, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 484, column: 6)
!12216 = !DILocation(line: 484, column: 13, scope: !12215)
!12217 = !DILocation(line: 484, column: 6, scope: !12170)
!12218 = !DILocation(line: 485, column: 3, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12215, file: !1802, line: 484, column: 44)
!12220 = !DILocation(line: 486, column: 2, scope: !12219)
!12221 = !DILocation(line: 488, column: 18, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 488, column: 6)
!12223 = !DILocation(line: 488, column: 15, scope: !12222)
!12224 = !DILocation(line: 488, column: 6, scope: !12170)
!12225 = !DILocation(line: 489, column: 3, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12222, file: !1802, line: 488, column: 48)
!12227 = !DILocation(line: 490, column: 2, scope: !12226)
!12228 = !DILocation(line: 492, column: 18, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 492, column: 6)
!12230 = !DILocation(line: 492, column: 15, scope: !12229)
!12231 = !DILocation(line: 492, column: 6, scope: !12170)
!12232 = !DILocation(line: 493, column: 3, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12229, file: !1802, line: 492, column: 48)
!12234 = !DILocation(line: 494, column: 2, scope: !12233)
!12235 = !DILocation(line: 496, column: 18, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 496, column: 6)
!12237 = !DILocation(line: 496, column: 15, scope: !12236)
!12238 = !DILocation(line: 496, column: 6, scope: !12170)
!12239 = !DILocation(line: 497, column: 3, scope: !12240)
!12240 = distinct !DILexicalBlock(scope: !12236, file: !1802, line: 496, column: 46)
!12241 = !DILocation(line: 498, column: 2, scope: !12240)
!12242 = !DILocation(line: 500, column: 11, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12170, file: !1802, line: 500, column: 6)
!12244 = !DILocation(line: 500, column: 29, scope: !12243)
!12245 = !DILocation(line: 500, column: 20, scope: !12243)
!12246 = !DILocation(line: 500, column: 6, scope: !12170)
!12247 = !DILocation(line: 501, column: 3, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12243, file: !1802, line: 500, column: 40)
!12249 = !DILocation(line: 502, column: 26, scope: !12248)
!12250 = !DILocation(line: 502, column: 19, scope: !12248)
!12251 = !DILocation(line: 503, column: 2, scope: !12248)
!12252 = !DILocation(line: 505, column: 26, scope: !12170)
!12253 = !DILocation(line: 505, column: 2, scope: !12170)
!12254 = !DILocation(line: 506, column: 2, scope: !12170)
!12255 = !DILocation(line: 507, column: 1, scope: !12170)
!12256 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1802, file: !1802, line: 509, type: !1743, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12257)
!12257 = !{!12258, !12259, !12260}
!12258 = !DILocalVariable(name: "dev", arg: 1, scope: !12256, file: !1802, line: 509, type: !1705)
!12259 = !DILocalVariable(name: "cfg", arg: 2, scope: !12256, file: !1802, line: 510, type: !1745)
!12260 = !DILocalVariable(name: "data", scope: !12256, file: !1802, line: 512, type: !12176)
!12261 = !DILocation(line: 0, scope: !12256)
!12262 = !DILocation(line: 512, column: 38, scope: !12256)
!12263 = !DILocation(line: 514, column: 24, scope: !12256)
!12264 = !DILocation(line: 514, column: 7, scope: !12256)
!12265 = !DILocation(line: 514, column: 16, scope: !12256)
!12266 = !DILocation(line: 515, column: 41, scope: !12256)
!12267 = !{i32 0, i32 1537}
!12268 = !DILocation(line: 515, column: 16, scope: !12256)
!12269 = !DILocation(line: 515, column: 7, scope: !12256)
!12270 = !DILocation(line: 515, column: 14, scope: !12256)
!12271 = !DILocation(line: 517, column: 3, scope: !12256)
!12272 = !{i32 0, i32 12289}
!12273 = !DILocation(line: 516, column: 19, scope: !12256)
!12274 = !DILocation(line: 516, column: 7, scope: !12256)
!12275 = !DILocation(line: 516, column: 17, scope: !12256)
!12276 = !DILocation(line: 519, column: 3, scope: !12256)
!12277 = !DILocation(line: 519, column: 33, scope: !12256)
!12278 = !DILocation(line: 518, column: 19, scope: !12256)
!12279 = !DILocation(line: 518, column: 7, scope: !12256)
!12280 = !DILocation(line: 518, column: 17, scope: !12256)
!12281 = !DILocation(line: 521, column: 3, scope: !12256)
!12282 = !{i32 0, i32 769}
!12283 = !DILocation(line: 520, column: 19, scope: !12256)
!12284 = !DILocation(line: 520, column: 7, scope: !12256)
!12285 = !DILocation(line: 520, column: 17, scope: !12256)
!12286 = !DILocation(line: 522, column: 2, scope: !12256)
!12287 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1802, file: !1802, line: 205, type: !12288, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12290)
!12288 = !DISubroutineType(types: !12289)
!12289 = !{!208, !1705}
!12290 = !{!12291, !12292}
!12291 = !DILocalVariable(name: "dev", arg: 1, scope: !12287, file: !1802, line: 205, type: !1705)
!12292 = !DILocalVariable(name: "config", scope: !12287, file: !1802, line: 207, type: !12053)
!12293 = !DILocation(line: 0, scope: !12287)
!12294 = !DILocation(line: 207, column: 48, scope: !12287)
!12295 = !DILocation(line: 209, column: 36, scope: !12287)
!12296 = !DILocation(line: 209, column: 9, scope: !12287)
!12297 = !DILocation(line: 209, column: 2, scope: !12287)
!12298 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1802, file: !1802, line: 270, type: !12299, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12301)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{!1671, !208}
!12301 = !{!12302}
!12302 = !DILocalVariable(name: "parity", arg: 1, scope: !12298, file: !1802, line: 270, type: !208)
!12303 = !DILocation(line: 0, scope: !12298)
!12304 = !DILocation(line: 272, column: 2, scope: !12298)
!12305 = !DILocation(line: 281, column: 1, scope: !12298)
!12306 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1802, file: !1802, line: 220, type: !12288, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12307)
!12307 = !{!12308, !12309}
!12308 = !DILocalVariable(name: "dev", arg: 1, scope: !12306, file: !1802, line: 220, type: !1705)
!12309 = !DILocalVariable(name: "config", scope: !12306, file: !1802, line: 222, type: !12053)
!12310 = !DILocation(line: 0, scope: !12306)
!12311 = !DILocation(line: 222, column: 48, scope: !12306)
!12312 = !DILocation(line: 224, column: 44, scope: !12306)
!12313 = !DILocation(line: 224, column: 9, scope: !12306)
!12314 = !DILocation(line: 224, column: 2, scope: !12306)
!12315 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1802, file: !1802, line: 304, type: !12316, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12318)
!12316 = !DISubroutineType(types: !12317)
!12317 = !{!1685, !208}
!12318 = !{!12319}
!12319 = !DILocalVariable(name: "sb", arg: 1, scope: !12315, file: !1802, line: 304, type: !208)
!12320 = !DILocation(line: 0, scope: !12315)
!12321 = !DILocation(line: 306, column: 2, scope: !12315)
!12322 = !DILocation(line: 0, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12315, file: !1802, line: 306, column: 14)
!12324 = !DILocation(line: 323, column: 1, scope: !12315)
!12325 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1802, file: !1802, line: 235, type: !12288, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12326)
!12326 = !{!12327, !12328}
!12327 = !DILocalVariable(name: "dev", arg: 1, scope: !12325, file: !1802, line: 235, type: !1705)
!12328 = !DILocalVariable(name: "config", scope: !12325, file: !1802, line: 237, type: !12053)
!12329 = !DILocation(line: 0, scope: !12325)
!12330 = !DILocation(line: 237, column: 48, scope: !12325)
!12331 = !DILocation(line: 239, column: 39, scope: !12325)
!12332 = !DILocation(line: 239, column: 9, scope: !12325)
!12333 = !DILocation(line: 239, column: 2, scope: !12325)
!12334 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1802, file: !1802, line: 355, type: !12335, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12337)
!12335 = !DISubroutineType(types: !12336)
!12336 = !{!1678, !208, !208}
!12337 = !{!12338, !12339}
!12338 = !DILocalVariable(name: "db", arg: 1, scope: !12334, file: !1802, line: 355, type: !208)
!12339 = !DILocalVariable(name: "p", arg: 2, scope: !12334, file: !1802, line: 356, type: !208)
!12340 = !DILocation(line: 0, scope: !12334)
!12341 = !DILocation(line: 358, column: 2, scope: !12334)
!12342 = !DILocation(line: 384, column: 1, scope: !12334)
!12343 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1802, file: !1802, line: 250, type: !12288, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12344)
!12344 = !{!12345, !12346}
!12345 = !DILocalVariable(name: "dev", arg: 1, scope: !12343, file: !1802, line: 250, type: !1705)
!12346 = !DILocalVariable(name: "config", scope: !12343, file: !1802, line: 252, type: !12053)
!12347 = !DILocation(line: 0, scope: !12343)
!12348 = !DILocation(line: 252, column: 48, scope: !12343)
!12349 = !DILocation(line: 254, column: 40, scope: !12343)
!12350 = !DILocation(line: 254, column: 9, scope: !12343)
!12351 = !DILocation(line: 254, column: 2, scope: !12343)
!12352 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1802, file: !1802, line: 409, type: !12353, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12355)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!1691, !208}
!12355 = !{!12356}
!12356 = !DILocalVariable(name: "fc", arg: 1, scope: !12352, file: !1802, line: 409, type: !208)
!12357 = !DILocation(line: 0, scope: !12352)
!12358 = !DILocation(line: 411, column: 9, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12352, file: !1802, line: 411, column: 6)
!12360 = !DILocation(line: 416, column: 1, scope: !12352)
!12361 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !12362, file: !12362, line: 967, type: !12363, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12365)
!12362 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12363 = !DISubroutineType(types: !12364)
!12364 = !{!208, !1746}
!12365 = !{!12366}
!12366 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12361, file: !12362, line: 967, type: !1746)
!12367 = !DILocation(line: 0, scope: !12361)
!12368 = !DILocation(line: 969, column: 21, scope: !12361)
!12369 = !DILocation(line: 969, column: 3, scope: !12361)
!12370 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !12362, file: !12362, line: 601, type: !12363, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12371)
!12371 = !{!12372}
!12372 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12370, file: !12362, line: 601, type: !1746)
!12373 = !DILocation(line: 0, scope: !12370)
!12374 = !DILocation(line: 603, column: 21, scope: !12370)
!12375 = !DILocation(line: 603, column: 3, scope: !12370)
!12376 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !12362, file: !12362, line: 820, type: !12363, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12377)
!12377 = !{!12378}
!12378 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12376, file: !12362, line: 820, type: !1746)
!12379 = !DILocation(line: 0, scope: !12376)
!12380 = !DILocation(line: 822, column: 21, scope: !12376)
!12381 = !DILocation(line: 822, column: 3, scope: !12376)
!12382 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !12362, file: !12362, line: 547, type: !12363, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12383)
!12383 = !{!12384}
!12384 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12382, file: !12362, line: 547, type: !1746)
!12385 = !DILocation(line: 0, scope: !12382)
!12386 = !DILocation(line: 549, column: 21, scope: !12382)
!12387 = !DILocation(line: 549, column: 3, scope: !12382)
!12388 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1802, file: !1802, line: 257, type: !12389, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12391)
!12389 = !DISubroutineType(types: !12390)
!12390 = !{!208, !1671}
!12391 = !{!12392}
!12392 = !DILocalVariable(name: "parity", arg: 1, scope: !12388, file: !1802, line: 257, type: !1671)
!12393 = !DILocation(line: 0, scope: !12388)
!12394 = !DILocation(line: 259, column: 2, scope: !12388)
!12395 = !DILocation(line: 268, column: 1, scope: !12388)
!12396 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1802, file: !1802, line: 283, type: !12397, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12399)
!12397 = !DISubroutineType(types: !12398)
!12398 = !{!208, !1685}
!12399 = !{!12400}
!12400 = !DILocalVariable(name: "sb", arg: 1, scope: !12396, file: !1802, line: 283, type: !1685)
!12401 = !DILocation(line: 0, scope: !12396)
!12402 = !DILocation(line: 285, column: 2, scope: !12396)
!12403 = !DILocation(line: 0, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12396, file: !1802, line: 285, column: 14)
!12405 = !DILocation(line: 302, column: 1, scope: !12396)
!12406 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1802, file: !1802, line: 325, type: !12407, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12409)
!12407 = !DISubroutineType(types: !12408)
!12408 = !{!208, !1678, !1671}
!12409 = !{!12410, !12411}
!12410 = !DILocalVariable(name: "db", arg: 1, scope: !12406, file: !1802, line: 325, type: !1678)
!12411 = !DILocalVariable(name: "p", arg: 2, scope: !12406, file: !1802, line: 326, type: !1671)
!12412 = !DILocation(line: 0, scope: !12406)
!12413 = !DILocation(line: 328, column: 2, scope: !12406)
!12414 = !DILocation(line: 353, column: 1, scope: !12406)
!12415 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1802, file: !1802, line: 393, type: !12416, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12418)
!12416 = !DISubroutineType(types: !12417)
!12417 = !{!208, !1691}
!12418 = !{!12419}
!12419 = !DILocalVariable(name: "fc", arg: 1, scope: !12415, file: !1802, line: 393, type: !1691)
!12420 = !DILocation(line: 0, scope: !12415)
!12421 = !DILocation(line: 395, column: 9, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12415, file: !1802, line: 395, column: 6)
!12423 = !DILocation(line: 400, column: 1, scope: !12415)
!12424 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !12362, file: !12362, line: 424, type: !12425, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12427)
!12425 = !DISubroutineType(types: !12426)
!12426 = !{null, !1746}
!12427 = !{!12428}
!12428 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12424, file: !12362, line: 424, type: !1746)
!12429 = !DILocation(line: 0, scope: !12424)
!12430 = !DILocation(line: 426, column: 3, scope: !12424)
!12431 = !DILocation(line: 427, column: 1, scope: !12424)
!12432 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1802, file: !1802, line: 197, type: !12433, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12435)
!12433 = !DISubroutineType(types: !12434)
!12434 = !{null, !1705, !208}
!12435 = !{!12436, !12437, !12438}
!12436 = !DILocalVariable(name: "dev", arg: 1, scope: !12432, file: !1802, line: 197, type: !1705)
!12437 = !DILocalVariable(name: "parity", arg: 2, scope: !12432, file: !1802, line: 198, type: !208)
!12438 = !DILocalVariable(name: "config", scope: !12432, file: !1802, line: 200, type: !12053)
!12439 = !DILocation(line: 0, scope: !12432)
!12440 = !DILocation(line: 200, column: 48, scope: !12432)
!12441 = !DILocation(line: 202, column: 29, scope: !12432)
!12442 = !DILocation(line: 202, column: 2, scope: !12432)
!12443 = !DILocation(line: 203, column: 1, scope: !12432)
!12444 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1802, file: !1802, line: 212, type: !12433, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12445)
!12445 = !{!12446, !12447, !12448}
!12446 = !DILocalVariable(name: "dev", arg: 1, scope: !12444, file: !1802, line: 212, type: !1705)
!12447 = !DILocalVariable(name: "stopbits", arg: 2, scope: !12444, file: !1802, line: 213, type: !208)
!12448 = !DILocalVariable(name: "config", scope: !12444, file: !1802, line: 215, type: !12053)
!12449 = !DILocation(line: 0, scope: !12444)
!12450 = !DILocation(line: 215, column: 48, scope: !12444)
!12451 = !DILocation(line: 217, column: 37, scope: !12444)
!12452 = !DILocation(line: 217, column: 2, scope: !12444)
!12453 = !DILocation(line: 218, column: 1, scope: !12444)
!12454 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1802, file: !1802, line: 227, type: !12433, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12455)
!12455 = !{!12456, !12457, !12458}
!12456 = !DILocalVariable(name: "dev", arg: 1, scope: !12454, file: !1802, line: 227, type: !1705)
!12457 = !DILocalVariable(name: "databits", arg: 2, scope: !12454, file: !1802, line: 228, type: !208)
!12458 = !DILocalVariable(name: "config", scope: !12454, file: !1802, line: 230, type: !12053)
!12459 = !DILocation(line: 0, scope: !12454)
!12460 = !DILocation(line: 230, column: 48, scope: !12454)
!12461 = !DILocation(line: 232, column: 32, scope: !12454)
!12462 = !DILocation(line: 232, column: 2, scope: !12454)
!12463 = !DILocation(line: 233, column: 1, scope: !12454)
!12464 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1802, file: !1802, line: 242, type: !12433, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12465)
!12465 = !{!12466, !12467, !12468}
!12466 = !DILocalVariable(name: "dev", arg: 1, scope: !12464, file: !1802, line: 242, type: !1705)
!12467 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !12464, file: !1802, line: 243, type: !208)
!12468 = !DILocalVariable(name: "config", scope: !12464, file: !1802, line: 245, type: !12053)
!12469 = !DILocation(line: 0, scope: !12464)
!12470 = !DILocation(line: 245, column: 48, scope: !12464)
!12471 = !DILocation(line: 247, column: 33, scope: !12464)
!12472 = !DILocation(line: 247, column: 2, scope: !12464)
!12473 = !DILocation(line: 248, column: 1, scope: !12464)
!12474 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1802, file: !1802, line: 107, type: !12433, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12475)
!12475 = !{!12476, !12477, !12478, !12479, !12480}
!12476 = !DILocalVariable(name: "dev", arg: 1, scope: !12474, file: !1802, line: 107, type: !1705)
!12477 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !12474, file: !1802, line: 107, type: !208)
!12478 = !DILocalVariable(name: "config", scope: !12474, file: !1802, line: 109, type: !12053)
!12479 = !DILocalVariable(name: "data", scope: !12474, file: !1802, line: 110, type: !12176)
!12480 = !DILocalVariable(name: "clock_rate", scope: !12474, file: !1802, line: 112, type: !208)
!12481 = !DILocation(line: 0, scope: !12474)
!12482 = !DILocation(line: 109, column: 48, scope: !12474)
!12483 = !DILocation(line: 110, column: 38, scope: !12474)
!12484 = !DILocation(line: 112, column: 2, scope: !12474)
!12485 = !DILocation(line: 123, column: 36, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12487, file: !1802, line: 123, column: 7)
!12487 = distinct !DILexicalBlock(scope: !12488, file: !1802, line: 122, column: 9)
!12488 = distinct !DILexicalBlock(scope: !12474, file: !1802, line: 115, column: 6)
!12489 = !DILocation(line: 124, column: 42, scope: !12486)
!12490 = !DILocation(line: 123, column: 7, scope: !12486)
!12491 = !DILocation(line: 125, column: 22, scope: !12486)
!12492 = !DILocation(line: 123, column: 7, scope: !12487)
!12493 = !DILocation(line: 126, column: 4, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12495, file: !1802, line: 126, column: 4)
!12495 = distinct !DILexicalBlock(scope: !12496, file: !1802, line: 126, column: 4)
!12496 = distinct !DILexicalBlock(scope: !12497, file: !1802, line: 126, column: 4)
!12497 = distinct !DILexicalBlock(scope: !12498, file: !1802, line: 126, column: 4)
!12498 = distinct !DILexicalBlock(scope: !12486, file: !1802, line: 125, column: 27)
!12499 = !DILocation(line: 127, column: 4, scope: !12498)
!12500 = !DILocation(line: 176, column: 36, scope: !12474)
!12501 = !DILocation(line: 176, column: 3, scope: !12474)
!12502 = !DILocation(line: 179, column: 32, scope: !12474)
!12503 = !DILocation(line: 180, column: 10, scope: !12474)
!12504 = !DILocation(line: 179, column: 3, scope: !12474)
!12505 = !DILocation(line: 195, column: 1, scope: !12474)
!12506 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !12362, file: !12362, line: 410, type: !12425, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12507)
!12507 = !{!12508}
!12508 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12506, file: !12362, line: 410, type: !1746)
!12509 = !DILocation(line: 0, scope: !12506)
!12510 = !DILocation(line: 412, column: 3, scope: !12506)
!12511 = !DILocation(line: 413, column: 1, scope: !12506)
!12512 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !978, file: !978, line: 216, type: !1779, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12513)
!12513 = !{!12514, !12515, !12516, !12517}
!12514 = !DILocalVariable(name: "dev", arg: 1, scope: !12512, file: !978, line: 216, type: !1705)
!12515 = !DILocalVariable(name: "sys", arg: 2, scope: !12512, file: !978, line: 217, type: !1071)
!12516 = !DILocalVariable(name: "rate", arg: 3, scope: !12512, file: !978, line: 218, type: !1027)
!12517 = !DILocalVariable(name: "api", scope: !12512, file: !978, line: 220, type: !1757)
!12518 = !DILocation(line: 0, scope: !12512)
!12519 = !DILocation(line: 221, column: 49, scope: !12512)
!12520 = !DILocation(line: 223, column: 11, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12512, file: !978, line: 223, column: 6)
!12522 = !DILocation(line: 223, column: 20, scope: !12521)
!12523 = !DILocation(line: 223, column: 6, scope: !12512)
!12524 = !DILocation(line: 227, column: 9, scope: !12512)
!12525 = !DILocation(line: 227, column: 2, scope: !12512)
!12526 = !DILocation(line: 228, column: 1, scope: !12512)
!12527 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !3461, file: !3461, line: 175, type: !3462, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12528)
!12528 = !{!12529}
!12529 = !DILocalVariable(name: "level", arg: 1, scope: !12527, file: !3461, line: 175, type: !125)
!12530 = !DILocation(line: 0, scope: !12527)
!12531 = !DILocation(line: 177, column: 2, scope: !12527)
!12532 = !DILocation(line: 189, column: 1, scope: !12527)
!12533 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !12362, file: !12362, line: 615, type: !12534, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12536)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{null, !1746, !208}
!12536 = !{!12537, !12538}
!12537 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12533, file: !12362, line: 615, type: !1746)
!12538 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !12533, file: !12362, line: 615, type: !208)
!12539 = !DILocation(line: 0, scope: !12533)
!12540 = !DILocation(line: 617, column: 3, scope: !12533)
!12541 = !DILocation(line: 618, column: 1, scope: !12533)
!12542 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !12362, file: !12362, line: 1020, type: !12543, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12545)
!12543 = !DISubroutineType(types: !12544)
!12544 = !{null, !1746, !208, !208, !208}
!12545 = !{!12546, !12547, !12548, !12549}
!12546 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12542, file: !12362, line: 1020, type: !1746)
!12547 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !12542, file: !12362, line: 1020, type: !208)
!12548 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !12542, file: !12362, line: 1020, type: !208)
!12549 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !12542, file: !12362, line: 1021, type: !208)
!12550 = !DILocation(line: 0, scope: !12542)
!12551 = !DILocation(line: 1029, column: 30, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12553, file: !12362, line: 1028, column: 3)
!12553 = distinct !DILexicalBlock(scope: !12542, file: !12362, line: 1023, column: 7)
!12554 = !DILocation(line: 1029, column: 19, scope: !12552)
!12555 = !DILocation(line: 1029, column: 13, scope: !12552)
!12556 = !DILocation(line: 1029, column: 17, scope: !12552)
!12557 = !DILocation(line: 1031, column: 1, scope: !12542)
!12558 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !12362, file: !12362, line: 949, type: !12534, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12559)
!12559 = !{!12560, !12561}
!12560 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12558, file: !12362, line: 949, type: !1746)
!12561 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !12558, file: !12362, line: 949, type: !208)
!12562 = !DILocation(line: 0, scope: !12558)
!12563 = !DILocation(line: 951, column: 3, scope: !12558)
!12564 = !DILocation(line: 952, column: 1, scope: !12558)
!12565 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !12362, file: !12362, line: 588, type: !12534, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12566)
!12566 = !{!12567, !12568}
!12567 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12565, file: !12362, line: 588, type: !1746)
!12568 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12565, file: !12362, line: 588, type: !208)
!12569 = !DILocation(line: 0, scope: !12565)
!12570 = !DILocation(line: 590, column: 3, scope: !12565)
!12571 = !DILocation(line: 591, column: 1, scope: !12565)
!12572 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !12362, file: !12362, line: 805, type: !12534, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12573)
!12573 = !{!12574, !12575}
!12574 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12572, file: !12362, line: 805, type: !1746)
!12575 = !DILocalVariable(name: "StopBits", arg: 2, scope: !12572, file: !12362, line: 805, type: !208)
!12576 = !DILocation(line: 0, scope: !12572)
!12577 = !DILocation(line: 807, column: 3, scope: !12572)
!12578 = !DILocation(line: 808, column: 1, scope: !12572)
!12579 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !12362, file: !12362, line: 532, type: !12534, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12580)
!12580 = !{!12581, !12582}
!12581 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12579, file: !12362, line: 532, type: !1746)
!12582 = !DILocalVariable(name: "Parity", arg: 2, scope: !12579, file: !12362, line: 532, type: !208)
!12583 = !DILocation(line: 0, scope: !12579)
!12584 = !DILocation(line: 534, column: 3, scope: !12579)
!12585 = !DILocation(line: 535, column: 1, scope: !12579)
!12586 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !12362, file: !12362, line: 1770, type: !12363, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12587)
!12587 = !{!12588}
!12588 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12586, file: !12362, line: 1770, type: !1746)
!12589 = !DILocation(line: 0, scope: !12586)
!12590 = !DILocation(line: 1772, column: 11, scope: !12586)
!12591 = !DILocation(line: 1772, column: 46, scope: !12586)
!12592 = !DILocation(line: 1772, column: 3, scope: !12586)
!12593 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !12362, file: !12362, line: 1737, type: !12363, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12594)
!12594 = !{!12595}
!12595 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12593, file: !12362, line: 1737, type: !1746)
!12596 = !DILocation(line: 0, scope: !12593)
!12597 = !DILocation(line: 1739, column: 11, scope: !12593)
!12598 = !DILocation(line: 1739, column: 3, scope: !12593)
!12599 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !12362, file: !12362, line: 1748, type: !12363, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12600)
!12600 = !{!12601}
!12601 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12599, file: !12362, line: 1748, type: !1746)
!12602 = !DILocation(line: 0, scope: !12599)
!12603 = !DILocation(line: 1750, column: 11, scope: !12599)
!12604 = !DILocation(line: 1750, column: 45, scope: !12599)
!12605 = !DILocation(line: 1750, column: 3, scope: !12599)
!12606 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !12362, file: !12362, line: 1827, type: !12363, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12607)
!12607 = !{!12608}
!12608 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12606, file: !12362, line: 1827, type: !1746)
!12609 = !DILocation(line: 0, scope: !12606)
!12610 = !DILocation(line: 1829, column: 11, scope: !12606)
!12611 = !DILocation(line: 1829, column: 46, scope: !12606)
!12612 = !DILocation(line: 1829, column: 3, scope: !12606)
!12613 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !12362, file: !12362, line: 1992, type: !12425, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12614)
!12614 = !{!12615}
!12615 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12613, file: !12362, line: 1992, type: !1746)
!12616 = !DILocation(line: 0, scope: !12613)
!12617 = !DILocation(line: 1994, column: 3, scope: !12613)
!12618 = !DILocation(line: 1995, column: 1, scope: !12613)
!12619 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !12362, file: !12362, line: 1934, type: !12425, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12620)
!12620 = !{!12621, !12622}
!12621 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12619, file: !12362, line: 1934, type: !1746)
!12622 = !DILocalVariable(name: "tmpreg", scope: !12619, file: !12362, line: 1936, type: !423)
!12623 = !DILocation(line: 0, scope: !12619)
!12624 = !DILocation(line: 1936, column: 3, scope: !12619)
!12625 = !DILocation(line: 1936, column: 17, scope: !12619)
!12626 = !DILocation(line: 1937, column: 20, scope: !12619)
!12627 = !DILocation(line: 1937, column: 10, scope: !12619)
!12628 = !DILocation(line: 1938, column: 10, scope: !12619)
!12629 = !DILocation(line: 1939, column: 20, scope: !12619)
!12630 = !DILocation(line: 1939, column: 10, scope: !12619)
!12631 = !DILocation(line: 1940, column: 10, scope: !12619)
!12632 = !DILocation(line: 1941, column: 1, scope: !12619)
!12633 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !12362, file: !12362, line: 1877, type: !12425, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12634)
!12634 = !{!12635, !12636}
!12635 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12633, file: !12362, line: 1877, type: !1746)
!12636 = !DILocalVariable(name: "tmpreg", scope: !12633, file: !12362, line: 1879, type: !423)
!12637 = !DILocation(line: 0, scope: !12633)
!12638 = !DILocation(line: 1879, column: 3, scope: !12633)
!12639 = !DILocation(line: 1879, column: 17, scope: !12633)
!12640 = !DILocation(line: 1880, column: 20, scope: !12633)
!12641 = !DILocation(line: 1880, column: 10, scope: !12633)
!12642 = !DILocation(line: 1881, column: 10, scope: !12633)
!12643 = !DILocation(line: 1882, column: 20, scope: !12633)
!12644 = !DILocation(line: 1882, column: 10, scope: !12633)
!12645 = !DILocation(line: 1883, column: 10, scope: !12633)
!12646 = !DILocation(line: 1884, column: 1, scope: !12633)
!12647 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !12362, file: !12362, line: 1896, type: !12425, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12648)
!12648 = !{!12649, !12650}
!12649 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12647, file: !12362, line: 1896, type: !1746)
!12650 = !DILocalVariable(name: "tmpreg", scope: !12647, file: !12362, line: 1898, type: !423)
!12651 = !DILocation(line: 0, scope: !12647)
!12652 = !DILocation(line: 1898, column: 3, scope: !12647)
!12653 = !DILocation(line: 1898, column: 17, scope: !12647)
!12654 = !DILocation(line: 1899, column: 20, scope: !12647)
!12655 = !DILocation(line: 1899, column: 10, scope: !12647)
!12656 = !DILocation(line: 1900, column: 10, scope: !12647)
!12657 = !DILocation(line: 1901, column: 20, scope: !12647)
!12658 = !DILocation(line: 1901, column: 10, scope: !12647)
!12659 = !DILocation(line: 1902, column: 10, scope: !12647)
!12660 = !DILocation(line: 1903, column: 1, scope: !12647)
!12661 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !12362, file: !12362, line: 1915, type: !12425, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12662)
!12662 = !{!12663, !12664}
!12663 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12661, file: !12362, line: 1915, type: !1746)
!12664 = !DILocalVariable(name: "tmpreg", scope: !12661, file: !12362, line: 1917, type: !423)
!12665 = !DILocation(line: 0, scope: !12661)
!12666 = !DILocation(line: 1917, column: 3, scope: !12661)
!12667 = !DILocation(line: 1917, column: 17, scope: !12661)
!12668 = !DILocation(line: 1918, column: 20, scope: !12661)
!12669 = !DILocation(line: 1918, column: 10, scope: !12661)
!12670 = !DILocation(line: 1919, column: 10, scope: !12661)
!12671 = !DILocation(line: 1920, column: 20, scope: !12661)
!12672 = !DILocation(line: 1920, column: 10, scope: !12661)
!12673 = !DILocation(line: 1921, column: 10, scope: !12661)
!12674 = !DILocation(line: 1922, column: 1, scope: !12661)
!12675 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !12362, file: !12362, line: 1814, type: !12363, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12676)
!12676 = !{!12677}
!12677 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12675, file: !12362, line: 1814, type: !1746)
!12678 = !DILocation(line: 0, scope: !12675)
!12679 = !DILocation(line: 1816, column: 11, scope: !12675)
!12680 = !DILocation(line: 1816, column: 46, scope: !12675)
!12681 = !DILocation(line: 1816, column: 3, scope: !12675)
!12682 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !12362, file: !12362, line: 2426, type: !12683, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12685)
!12683 = !DISubroutineType(types: !12684)
!12684 = !{null, !1746, !150}
!12685 = !{!12686, !12687}
!12686 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12682, file: !12362, line: 2426, type: !1746)
!12687 = !DILocalVariable(name: "Value", arg: 2, scope: !12682, file: !12362, line: 2426, type: !150)
!12688 = !DILocation(line: 0, scope: !12682)
!12689 = !DILocation(line: 2428, column: 16, scope: !12682)
!12690 = !DILocation(line: 2428, column: 11, scope: !12682)
!12691 = !DILocation(line: 2428, column: 14, scope: !12682)
!12692 = !DILocation(line: 2429, column: 1, scope: !12682)
!12693 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !12362, file: !12362, line: 1792, type: !12363, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12694)
!12694 = !{!12695}
!12695 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12693, file: !12362, line: 1792, type: !1746)
!12696 = !DILocation(line: 0, scope: !12693)
!12697 = !DILocation(line: 1794, column: 11, scope: !12693)
!12698 = !DILocation(line: 1794, column: 47, scope: !12693)
!12699 = !DILocation(line: 1794, column: 3, scope: !12693)
!12700 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !12362, file: !12362, line: 2403, type: !12701, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!150, !1746}
!12703 = !{!12704}
!12704 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12700, file: !12362, line: 2403, type: !1746)
!12705 = !DILocation(line: 0, scope: !12700)
!12706 = !DILocation(line: 2405, column: 20, scope: !12700)
!12707 = !DILocation(line: 2405, column: 10, scope: !12700)
!12708 = !DILocation(line: 2405, column: 3, scope: !12700)
!12709 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1802, file: !1802, line: 1583, type: !1726, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12710)
!12710 = !{!12711, !12712, !12713, !12714, !12715, !12716}
!12711 = !DILocalVariable(name: "dev", arg: 1, scope: !12709, file: !1802, line: 1583, type: !1705)
!12712 = !DILocalVariable(name: "config", scope: !12709, file: !1802, line: 1585, type: !12053)
!12713 = !DILocalVariable(name: "data", scope: !12709, file: !1802, line: 1586, type: !12176)
!12714 = !DILocalVariable(name: "ll_parity", scope: !12709, file: !1802, line: 1587, type: !208)
!12715 = !DILocalVariable(name: "ll_datawidth", scope: !12709, file: !1802, line: 1588, type: !208)
!12716 = !DILocalVariable(name: "err", scope: !12709, file: !1802, line: 1589, type: !125)
!12717 = !DILocation(line: 0, scope: !12709)
!12718 = !DILocation(line: 1585, column: 48, scope: !12709)
!12719 = !DILocation(line: 1586, column: 38, scope: !12709)
!12720 = !DILocation(line: 1591, column: 2, scope: !12709)
!12721 = !DILocation(line: 1593, column: 29, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12709, file: !1802, line: 1593, column: 6)
!12723 = !DILocation(line: 1593, column: 7, scope: !12722)
!12724 = !DILocation(line: 1593, column: 6, scope: !12709)
!12725 = !DILocation(line: 1594, column: 3, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !1802, line: 1594, column: 3)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !1802, line: 1594, column: 3)
!12728 = distinct !DILexicalBlock(scope: !12729, file: !1802, line: 1594, column: 3)
!12729 = distinct !DILexicalBlock(scope: !12730, file: !1802, line: 1594, column: 3)
!12730 = distinct !DILexicalBlock(scope: !12722, file: !1802, line: 1593, column: 37)
!12731 = !DILocation(line: 1595, column: 3, scope: !12730)
!12732 = !DILocation(line: 1599, column: 31, scope: !12709)
!12733 = !DILocation(line: 1599, column: 71, scope: !12709)
!12734 = !DILocation(line: 1599, column: 8, scope: !12709)
!12735 = !DILocation(line: 1600, column: 10, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12709, file: !1802, line: 1600, column: 6)
!12737 = !DILocation(line: 1600, column: 6, scope: !12709)
!12738 = !DILocation(line: 1601, column: 3, scope: !12739)
!12739 = distinct !DILexicalBlock(scope: !12740, file: !1802, line: 1601, column: 3)
!12740 = distinct !DILexicalBlock(scope: !12741, file: !1802, line: 1601, column: 3)
!12741 = distinct !DILexicalBlock(scope: !12742, file: !1802, line: 1601, column: 3)
!12742 = distinct !DILexicalBlock(scope: !12743, file: !1802, line: 1601, column: 3)
!12743 = distinct !DILexicalBlock(scope: !12736, file: !1802, line: 1600, column: 16)
!12744 = !DILocation(line: 1602, column: 3, scope: !12743)
!12745 = !DILocation(line: 1616, column: 36, scope: !12709)
!12746 = !DILocation(line: 1616, column: 8, scope: !12709)
!12747 = !DILocation(line: 1617, column: 10, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12709, file: !1802, line: 1617, column: 6)
!12749 = !DILocation(line: 1617, column: 6, scope: !12709)
!12750 = !DILocation(line: 1621, column: 27, scope: !12709)
!12751 = !DILocation(line: 1621, column: 2, scope: !12709)
!12752 = !DILocation(line: 1624, column: 40, scope: !12709)
!12753 = !DILocation(line: 1624, column: 2, scope: !12709)
!12754 = !DILocation(line: 1630, column: 14, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12709, file: !1802, line: 1630, column: 6)
!12756 = !DILocation(line: 1630, column: 6, scope: !12709)
!12757 = !DILocation(line: 1640, column: 4, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12759, file: !1802, line: 1640, column: 4)
!12759 = distinct !DILexicalBlock(scope: !12760, file: !1802, line: 1640, column: 4)
!12760 = distinct !DILexicalBlock(scope: !12761, file: !1802, line: 1640, column: 4)
!12761 = distinct !DILexicalBlock(scope: !12762, file: !1802, line: 1640, column: 4)
!12762 = distinct !DILexicalBlock(scope: !12763, file: !1802, line: 1639, column: 28)
!12763 = distinct !DILexicalBlock(scope: !12764, file: !1802, line: 1639, column: 7)
!12764 = distinct !DILexicalBlock(scope: !12765, file: !1802, line: 1638, column: 9)
!12765 = distinct !DILexicalBlock(scope: !12755, file: !1802, line: 1634, column: 13)
!12766 = !DILocation(line: 0, scope: !12755)
!12767 = !DILocation(line: 1649, column: 35, scope: !12709)
!12768 = !DILocation(line: 1649, column: 2, scope: !12709)
!12769 = !DILocation(line: 1654, column: 14, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12709, file: !1802, line: 1654, column: 6)
!12771 = !DILocation(line: 1654, column: 6, scope: !12709)
!12772 = !DILocation(line: 1655, column: 3, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12770, file: !1802, line: 1654, column: 31)
!12774 = !DILocation(line: 1656, column: 2, scope: !12773)
!12775 = !DILocation(line: 1659, column: 37, scope: !12709)
!12776 = !DILocation(line: 1659, column: 2, scope: !12709)
!12777 = !DILocation(line: 1662, column: 14, scope: !12778)
!12778 = distinct !DILexicalBlock(scope: !12709, file: !1802, line: 1662, column: 6)
!12779 = !DILocation(line: 1662, column: 6, scope: !12709)
!12780 = !DILocation(line: 1663, column: 37, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12778, file: !1802, line: 1662, column: 27)
!12782 = !DILocation(line: 1663, column: 3, scope: !12781)
!12783 = !DILocation(line: 1664, column: 2, scope: !12781)
!12784 = !DILocation(line: 1684, column: 26, scope: !12709)
!12785 = !DILocation(line: 1684, column: 2, scope: !12709)
!12786 = !DILocation(line: 1722, column: 2, scope: !12709)
!12787 = !DILocation(line: 1724, column: 1, scope: !12709)
!12788 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1802, file: !1802, line: 651, type: !12789, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12791)
!12789 = !DISubroutineType(types: !12790)
!12790 = !{null, !1705}
!12791 = !{!12792, !12793, !12794}
!12792 = !DILocalVariable(name: "dev", arg: 1, scope: !12788, file: !1802, line: 651, type: !1705)
!12793 = !DILocalVariable(name: "data", scope: !12788, file: !1802, line: 653, type: !12176)
!12794 = !DILocalVariable(name: "clk", scope: !12788, file: !1802, line: 654, type: !12795)
!12795 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1705)
!12796 = !DILocation(line: 0, scope: !12788)
!12797 = !DILocation(line: 653, column: 38, scope: !12788)
!12798 = !DILocation(line: 656, column: 8, scope: !12788)
!12799 = !DILocation(line: 656, column: 14, scope: !12788)
!12800 = !DILocation(line: 657, column: 1, scope: !12788)
!12801 = distinct !DISubprogram(name: "device_is_ready", scope: !4202, file: !4202, line: 47, type: !12802, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12804)
!12802 = !DISubroutineType(types: !12803)
!12803 = !{!153, !1705}
!12804 = !{!12805}
!12805 = !DILocalVariable(name: "dev", arg: 1, scope: !12801, file: !4202, line: 47, type: !1705)
!12806 = !DILocation(line: 0, scope: !12801)
!12807 = !DILocation(line: 55, column: 2, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12801, file: !4202, line: 55, column: 2)
!12809 = !{i64 2155035608}
!12810 = !DILocation(line: 56, column: 9, scope: !12801)
!12811 = !DILocation(line: 56, column: 2, scope: !12801)
!12812 = distinct !DISubprogram(name: "clock_control_on", scope: !978, file: !978, line: 123, type: !1764, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12813)
!12813 = !{!12814, !12815, !12816}
!12814 = !DILocalVariable(name: "dev", arg: 1, scope: !12812, file: !978, line: 123, type: !1705)
!12815 = !DILocalVariable(name: "sys", arg: 2, scope: !12812, file: !978, line: 124, type: !1071)
!12816 = !DILocalVariable(name: "api", scope: !12812, file: !978, line: 126, type: !1757)
!12817 = !DILocation(line: 0, scope: !12812)
!12818 = !DILocation(line: 127, column: 49, scope: !12812)
!12819 = !DILocation(line: 129, column: 14, scope: !12812)
!12820 = !DILocation(line: 129, column: 9, scope: !12812)
!12821 = !DILocation(line: 129, column: 2, scope: !12812)
!12822 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1840, file: !1840, line: 342, type: !12823, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12825)
!12823 = !DISubroutineType(types: !12824)
!12824 = !{!125, !1837, !150}
!12825 = !{!12826, !12827, !12828, !12829}
!12826 = !DILocalVariable(name: "config", arg: 1, scope: !12822, file: !1840, line: 342, type: !1837)
!12827 = !DILocalVariable(name: "id", arg: 2, scope: !12822, file: !1840, line: 343, type: !150)
!12828 = !DILocalVariable(name: "ret", scope: !12822, file: !1840, line: 345, type: !125)
!12829 = !DILocalVariable(name: "state", scope: !12822, file: !1840, line: 346, type: !1843)
!12830 = !DILocation(line: 0, scope: !12822)
!12831 = !DILocation(line: 346, column: 2, scope: !12822)
!12832 = !DILocation(line: 348, column: 8, scope: !12822)
!12833 = !DILocation(line: 349, column: 10, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12822, file: !1840, line: 349, column: 6)
!12835 = !DILocation(line: 349, column: 6, scope: !12822)
!12836 = !DILocation(line: 353, column: 44, scope: !12822)
!12837 = !DILocation(line: 353, column: 9, scope: !12822)
!12838 = !DILocation(line: 353, column: 2, scope: !12822)
!12839 = !DILocation(line: 354, column: 1, scope: !12822)
!12840 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !12362, file: !12362, line: 497, type: !12534, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12841)
!12841 = !{!12842, !12843, !12844}
!12842 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12840, file: !12362, line: 497, type: !1746)
!12843 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !12840, file: !12362, line: 497, type: !208)
!12844 = !DILocalVariable(name: "val", scope: !12845, file: !12362, line: 499, type: !208)
!12845 = distinct !DILexicalBlock(scope: !12840, file: !12362, line: 499, column: 3)
!12846 = !DILocation(line: 0, scope: !12840)
!12847 = !DILocation(line: 499, column: 3, scope: !12845)
!12848 = !DILocalVariable(name: "addr", arg: 1, scope: !12849, file: !8310, line: 476, type: !1798)
!12849 = distinct !DISubprogram(name: "__LDREXW", scope: !8310, file: !8310, line: 476, type: !12850, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12852)
!12850 = !DISubroutineType(types: !12851)
!12851 = !{!208, !1798}
!12852 = !{!12848, !12853}
!12853 = !DILocalVariable(name: "result", scope: !12849, file: !8310, line: 478, type: !208)
!12854 = !DILocation(line: 0, scope: !12849, inlinedAt: !12855)
!12855 = distinct !DILocation(line: 499, column: 3, scope: !12856)
!12856 = distinct !DILexicalBlock(scope: !12845, file: !12362, line: 499, column: 3)
!12857 = !DILocation(line: 480, column: 4, scope: !12849, inlinedAt: !12855)
!12858 = !{i64 3529169}
!12859 = !DILocation(line: 499, column: 3, scope: !12856)
!12860 = !DILocation(line: 0, scope: !12845)
!12861 = !DILocalVariable(name: "value", arg: 1, scope: !12862, file: !8310, line: 527, type: !208)
!12862 = distinct !DISubprogram(name: "__STREXW", scope: !8310, file: !8310, line: 527, type: !12863, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12865)
!12863 = !DISubroutineType(types: !12864)
!12864 = !{!208, !208, !1798}
!12865 = !{!12861, !12866, !12867}
!12866 = !DILocalVariable(name: "addr", arg: 2, scope: !12862, file: !8310, line: 527, type: !1798)
!12867 = !DILocalVariable(name: "result", scope: !12862, file: !8310, line: 529, type: !208)
!12868 = !DILocation(line: 0, scope: !12862, inlinedAt: !12869)
!12869 = distinct !DILocation(line: 499, column: 3, scope: !12845)
!12870 = !DILocation(line: 531, column: 4, scope: !12862, inlinedAt: !12869)
!12871 = !{i64 3530605}
!12872 = distinct !{!12872, !12847, !12847}
!12873 = !DILocation(line: 500, column: 1, scope: !12840)
!12874 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !12362, file: !12362, line: 850, type: !12543, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12875)
!12875 = !{!12876, !12877, !12878, !12879}
!12876 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12874, file: !12362, line: 850, type: !1746)
!12877 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !12874, file: !12362, line: 850, type: !208)
!12878 = !DILocalVariable(name: "Parity", arg: 3, scope: !12874, file: !12362, line: 850, type: !208)
!12879 = !DILocalVariable(name: "StopBits", arg: 4, scope: !12874, file: !12362, line: 851, type: !208)
!12880 = !DILocation(line: 0, scope: !12874)
!12881 = !DILocation(line: 853, column: 3, scope: !12874)
!12882 = !DILocation(line: 854, column: 3, scope: !12874)
!12883 = !DILocation(line: 855, column: 1, scope: !12874)
!12884 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !12362, file: !12362, line: 1337, type: !12425, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12885)
!12885 = !{!12886}
!12886 = !DILocalVariable(name: "USARTx", arg: 1, scope: !12884, file: !12362, line: 1337, type: !1746)
!12887 = !DILocation(line: 0, scope: !12884)
!12888 = !DILocation(line: 1339, column: 3, scope: !12884)
!12889 = !DILocation(line: 1340, column: 1, scope: !12884)
!12890 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1840, file: !1840, line: 316, type: !12891, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12893)
!12891 = !DISubroutineType(types: !12892)
!12892 = !{!125, !1837, !1843}
!12893 = !{!12894, !12895, !12896}
!12894 = !DILocalVariable(name: "config", arg: 1, scope: !12890, file: !1840, line: 317, type: !1837)
!12895 = !DILocalVariable(name: "state", arg: 2, scope: !12890, file: !1840, line: 318, type: !1843)
!12896 = !DILocalVariable(name: "reg", scope: !12890, file: !1840, line: 320, type: !22)
!12897 = !DILocation(line: 0, scope: !12890)
!12898 = !DILocation(line: 329, column: 39, scope: !12890)
!12899 = !DILocation(line: 329, column: 52, scope: !12890)
!12900 = !DILocation(line: 329, column: 9, scope: !12890)
!12901 = !DILocation(line: 329, column: 2, scope: !12890)
!12902 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !12802, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1661, retainedNodes: !12903)
!12903 = !{!12904}
!12904 = !DILocalVariable(name: "dev", arg: 1, scope: !12902, file: !137, line: 730, type: !1705)
!12905 = !DILocation(line: 0, scope: !12902)
!12906 = !DILocation(line: 732, column: 9, scope: !12902)
!12907 = !DILocation(line: 732, column: 2, scope: !12902)
!12908 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1963, file: !1963, line: 270, type: !1969, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !12909)
!12909 = !{!12910}
!12910 = !DILocalVariable(name: "dev", arg: 1, scope: !12908, file: !1963, line: 270, type: !1971)
!12911 = !DILocation(line: 0, scope: !12908)
!12912 = !DILocation(line: 274, column: 2, scope: !12908)
!12913 = !DILocation(line: 275, column: 12, scope: !12908)
!12914 = !DILocation(line: 276, column: 15, scope: !12908)
!12915 = !DILocation(line: 277, column: 16, scope: !12908)
!12916 = !DILocation(line: 278, column: 15, scope: !12908)
!12917 = !DILocation(line: 279, column: 16, scope: !12908)
!12918 = !DILocation(line: 282, column: 2, scope: !12908)
!12919 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8344, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !12920)
!12920 = !{!12921, !12922}
!12921 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12919, file: !680, line: 1814, type: !934)
!12922 = !DILocalVariable(name: "priority", arg: 2, scope: !12919, file: !680, line: 1814, type: !208)
!12923 = !DILocation(line: 0, scope: !12919)
!12924 = !DILocation(line: 1822, column: 46, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12926, file: !680, line: 1821, column: 3)
!12926 = distinct !DILexicalBlock(scope: !12919, file: !680, line: 1816, column: 7)
!12927 = !DILocation(line: 1824, column: 1, scope: !12919)
!12928 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1963, file: !1963, line: 118, type: !8247, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !12929)
!12929 = !{!12930, !12931}
!12930 = !DILocalVariable(name: "arg", arg: 1, scope: !12928, file: !1963, line: 118, type: !124)
!12931 = !DILocalVariable(name: "dticks", scope: !12928, file: !1963, line: 121, type: !208)
!12932 = !DILocation(line: 0, scope: !12928)
!12933 = !DILocation(line: 124, column: 2, scope: !12928)
!12934 = !DILocation(line: 129, column: 17, scope: !12928)
!12935 = !DILocation(line: 129, column: 14, scope: !12928)
!12936 = !DILocation(line: 130, column: 15, scope: !12928)
!12937 = !DILocation(line: 145, column: 27, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12939, file: !1963, line: 132, column: 16)
!12939 = distinct !DILexicalBlock(scope: !12928, file: !1963, line: 132, column: 6)
!12940 = !DILocation(line: 145, column: 25, scope: !12938)
!12941 = !DILocation(line: 145, column: 45, scope: !12938)
!12942 = !DILocation(line: 146, column: 30, scope: !12938)
!12943 = !DILocation(line: 146, column: 20, scope: !12938)
!12944 = !DILocation(line: 147, column: 3, scope: !12938)
!12945 = !DILocation(line: 151, column: 2, scope: !12928)
!12946 = !DILocation(line: 152, column: 1, scope: !12928)
!12947 = distinct !DISubprogram(name: "elapsed", scope: !1963, file: !1963, line: 85, type: !8391, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !12948)
!12948 = !{!12949, !12950, !12951}
!12949 = !DILocalVariable(name: "val1", scope: !12947, file: !1963, line: 87, type: !208)
!12950 = !DILocalVariable(name: "ctrl", scope: !12947, file: !1963, line: 88, type: !208)
!12951 = !DILocalVariable(name: "val2", scope: !12947, file: !1963, line: 89, type: !208)
!12952 = !DILocation(line: 87, column: 27, scope: !12947)
!12953 = !DILocation(line: 0, scope: !12947)
!12954 = !DILocation(line: 88, column: 27, scope: !12947)
!12955 = !DILocation(line: 89, column: 27, scope: !12947)
!12956 = !DILocation(line: 105, column: 12, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12947, file: !1963, line: 105, column: 6)
!12958 = !DILocation(line: 106, column: 6, scope: !12957)
!12959 = !DILocation(line: 107, column: 16, scope: !12960)
!12960 = distinct !DILexicalBlock(scope: !12957, file: !1963, line: 106, column: 24)
!12961 = !DILocation(line: 111, column: 18, scope: !12960)
!12962 = !DILocation(line: 112, column: 2, scope: !12960)
!12963 = !DILocation(line: 114, column: 20, scope: !12947)
!12964 = !DILocation(line: 114, column: 30, scope: !12947)
!12965 = !DILocation(line: 114, column: 28, scope: !12947)
!12966 = !DILocation(line: 114, column: 2, scope: !12947)
!12967 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1963, file: !1963, line: 154, type: !12968, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !12970)
!12968 = !DISubroutineType(types: !12969)
!12969 = !{null, !908, !153}
!12970 = !{!12971, !12972, !12973, !12974, !12975, !12976, !12977, !12982, !12983}
!12971 = !DILocalVariable(name: "ticks", arg: 1, scope: !12967, file: !1963, line: 154, type: !908)
!12972 = !DILocalVariable(name: "idle", arg: 2, scope: !12967, file: !1963, line: 154, type: !153)
!12973 = !DILocalVariable(name: "delay", scope: !12967, file: !1963, line: 169, type: !208)
!12974 = !DILocalVariable(name: "val1", scope: !12967, file: !1963, line: 170, type: !208)
!12975 = !DILocalVariable(name: "val2", scope: !12967, file: !1963, line: 170, type: !208)
!12976 = !DILocalVariable(name: "last_load_", scope: !12967, file: !1963, line: 171, type: !208)
!12977 = !DILocalVariable(name: "key", scope: !12967, file: !1963, line: 176, type: !12978)
!12978 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !12979)
!12979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !12980)
!12980 = !{!12981}
!12981 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12979, file: !638, line: 33, baseType: !125, size: 32)
!12982 = !DILocalVariable(name: "pending", scope: !12967, file: !1963, line: 178, type: !208)
!12983 = !DILocalVariable(name: "unannounced", scope: !12967, file: !1963, line: 185, type: !208)
!12984 = !DILocation(line: 0, scope: !12967)
!12985 = !DILocation(line: 162, column: 49, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12967, file: !1963, line: 162, column: 6)
!12987 = !DILocation(line: 163, column: 17, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12986, file: !1963, line: 162, column: 78)
!12989 = !DILocation(line: 164, column: 13, scope: !12988)
!12990 = !DILocation(line: 165, column: 3, scope: !12988)
!12991 = !DILocation(line: 171, column: 24, scope: !12967)
!12992 = !DILocation(line: 173, column: 10, scope: !12967)
!12993 = !DILocation(line: 174, column: 10, scope: !12967)
!12994 = !DILocalVariable(name: "l", arg: 1, scope: !12995, file: !638, line: 136, type: !12998)
!12995 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !12996, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !12999)
!12996 = !DISubroutineType(types: !12997)
!12997 = !{!12978, !12998}
!12998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 32)
!12999 = !{!12994, !13000}
!13000 = !DILocalVariable(name: "k", scope: !12995, file: !638, line: 139, type: !12978)
!13001 = !DILocation(line: 0, scope: !12995, inlinedAt: !13002)
!13002 = distinct !DILocation(line: 176, column: 25, scope: !12967)
!13003 = !DILocation(line: 55, column: 2, scope: !13004, inlinedAt: !13008)
!13004 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6843, file: !6843, line: 42, type: !6844, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !13005)
!13005 = !{!13006, !13007}
!13006 = !DILocalVariable(name: "key", scope: !13004, file: !6843, line: 44, type: !32)
!13007 = !DILocalVariable(name: "tmp", scope: !13004, file: !6843, line: 53, type: !32)
!13008 = distinct !DILocation(line: 145, column: 10, scope: !12995, inlinedAt: !13002)
!13009 = !{i64 2222510}
!13010 = !DILocation(line: 0, scope: !13004, inlinedAt: !13008)
!13011 = !DILocation(line: 178, column: 21, scope: !12967)
!13012 = !DILocation(line: 180, column: 18, scope: !12967)
!13013 = !DILocation(line: 182, column: 14, scope: !12967)
!13014 = !DILocation(line: 183, column: 15, scope: !12967)
!13015 = !DILocation(line: 185, column: 39, scope: !12967)
!13016 = !DILocation(line: 185, column: 37, scope: !12967)
!13017 = !DILocation(line: 187, column: 27, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !12967, file: !1963, line: 187, column: 6)
!13019 = !DILocation(line: 187, column: 6, scope: !12967)
!13020 = !DILocation(line: 202, column: 27, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13018, file: !1963, line: 195, column: 9)
!13022 = !DILocation(line: 202, column: 48, scope: !13021)
!13023 = !DILocation(line: 203, column: 9, scope: !13021)
!13024 = !DILocation(line: 204, column: 11, scope: !13021)
!13025 = !DILocation(line: 205, column: 13, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13021, file: !1963, line: 205, column: 7)
!13027 = !DILocation(line: 205, column: 7, scope: !13021)
!13028 = !DILocation(line: 0, scope: !13018)
!13029 = !DILocation(line: 212, column: 18, scope: !12967)
!13030 = !DILocation(line: 214, column: 28, scope: !12967)
!13031 = !DILocation(line: 214, column: 16, scope: !12967)
!13032 = !DILocation(line: 215, column: 15, scope: !12967)
!13033 = !DILocation(line: 227, column: 11, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !12967, file: !1963, line: 227, column: 6)
!13035 = !DILocation(line: 227, column: 6, scope: !12967)
!13036 = !DILocation(line: 228, column: 15, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13034, file: !1963, line: 227, column: 19)
!13038 = !DILocation(line: 228, column: 38, scope: !13037)
!13039 = !DILocation(line: 228, column: 24, scope: !13037)
!13040 = !DILocation(line: 229, column: 2, scope: !13037)
!13041 = !DILocation(line: 230, column: 24, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13034, file: !1963, line: 229, column: 9)
!13043 = !DILocation(line: 230, column: 15, scope: !13042)
!13044 = !DILocation(line: 0, scope: !13034)
!13045 = !DILocalVariable(name: "key", arg: 2, scope: !13046, file: !638, line: 190, type: !12978)
!13046 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !13047, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !13049)
!13047 = !DISubroutineType(types: !13048)
!13048 = !{null, !12998, !12978}
!13049 = !{!13050, !13045}
!13050 = !DILocalVariable(name: "l", arg: 1, scope: !13046, file: !638, line: 189, type: !12998)
!13051 = !DILocation(line: 0, scope: !13046, inlinedAt: !13052)
!13052 = distinct !DILocation(line: 232, column: 2, scope: !12967)
!13053 = !DILocalVariable(name: "key", arg: 1, scope: !13054, file: !6843, line: 84, type: !32)
!13054 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6843, file: !6843, line: 84, type: !6854, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !13055)
!13055 = !{!13053}
!13056 = !DILocation(line: 0, scope: !13054, inlinedAt: !13057)
!13057 = distinct !DILocation(line: 215, column: 2, scope: !13046, inlinedAt: !13052)
!13058 = !DILocation(line: 95, column: 2, scope: !13054, inlinedAt: !13057)
!13059 = !{i64 2223327}
!13060 = !DILocation(line: 234, column: 1, scope: !12967)
!13061 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1963, file: !1963, line: 236, type: !8391, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !13062)
!13062 = !{!13063, !13064}
!13063 = !DILocalVariable(name: "key", scope: !13061, file: !1963, line: 242, type: !12978)
!13064 = !DILocalVariable(name: "cyc", scope: !13061, file: !1963, line: 243, type: !208)
!13065 = !DILocation(line: 0, scope: !12995, inlinedAt: !13066)
!13066 = distinct !DILocation(line: 242, column: 25, scope: !13061)
!13067 = !DILocation(line: 55, column: 2, scope: !13004, inlinedAt: !13068)
!13068 = distinct !DILocation(line: 145, column: 10, scope: !12995, inlinedAt: !13066)
!13069 = !DILocation(line: 0, scope: !13004, inlinedAt: !13068)
!13070 = !DILocation(line: 0, scope: !13061)
!13071 = !DILocation(line: 243, column: 17, scope: !13061)
!13072 = !DILocation(line: 243, column: 29, scope: !13061)
!13073 = !DILocation(line: 243, column: 27, scope: !13061)
!13074 = !DILocation(line: 243, column: 43, scope: !13061)
!13075 = !DILocation(line: 243, column: 41, scope: !13061)
!13076 = !DILocation(line: 0, scope: !13046, inlinedAt: !13077)
!13077 = distinct !DILocation(line: 245, column: 2, scope: !13061)
!13078 = !DILocation(line: 0, scope: !13054, inlinedAt: !13079)
!13079 = distinct !DILocation(line: 215, column: 2, scope: !13046, inlinedAt: !13077)
!13080 = !DILocation(line: 95, column: 2, scope: !13054, inlinedAt: !13079)
!13081 = !DILocation(line: 246, column: 13, scope: !13061)
!13082 = !DILocation(line: 246, column: 2, scope: !13061)
!13083 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1963, file: !1963, line: 249, type: !8391, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !13084)
!13084 = !{!13085, !13086}
!13085 = !DILocalVariable(name: "key", scope: !13083, file: !1963, line: 251, type: !12978)
!13086 = !DILocalVariable(name: "ret", scope: !13083, file: !1963, line: 252, type: !208)
!13087 = !DILocation(line: 0, scope: !12995, inlinedAt: !13088)
!13088 = distinct !DILocation(line: 251, column: 25, scope: !13083)
!13089 = !DILocation(line: 55, column: 2, scope: !13004, inlinedAt: !13090)
!13090 = distinct !DILocation(line: 145, column: 10, scope: !12995, inlinedAt: !13088)
!13091 = !DILocation(line: 0, scope: !13004, inlinedAt: !13090)
!13092 = !DILocation(line: 0, scope: !13083)
!13093 = !DILocation(line: 252, column: 17, scope: !13083)
!13094 = !DILocation(line: 252, column: 29, scope: !13083)
!13095 = !DILocation(line: 252, column: 27, scope: !13083)
!13096 = !DILocation(line: 0, scope: !13046, inlinedAt: !13097)
!13097 = distinct !DILocation(line: 254, column: 2, scope: !13083)
!13098 = !DILocation(line: 0, scope: !13054, inlinedAt: !13099)
!13099 = distinct !DILocation(line: 215, column: 2, scope: !13046, inlinedAt: !13097)
!13100 = !DILocation(line: 95, column: 2, scope: !13054, inlinedAt: !13099)
!13101 = !DILocation(line: 255, column: 2, scope: !13083)
!13102 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1963, file: !1963, line: 258, type: !3297, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !639)
!13103 = !DILocation(line: 260, column: 6, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13102, file: !1963, line: 260, column: 6)
!13105 = !DILocation(line: 260, column: 16, scope: !13104)
!13106 = !DILocation(line: 260, column: 6, scope: !13102)
!13107 = !DILocation(line: 261, column: 17, scope: !13108)
!13108 = distinct !DILexicalBlock(scope: !13104, file: !1963, line: 260, column: 34)
!13109 = !DILocation(line: 262, column: 2, scope: !13108)
!13110 = !DILocation(line: 263, column: 1, scope: !13102)
!13111 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1963, file: !1963, line: 265, type: !3297, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1885, retainedNodes: !639)
!13112 = !DILocation(line: 267, column: 16, scope: !13111)
!13113 = !DILocation(line: 268, column: 1, scope: !13111)
!13114 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !13115, file: !13115, line: 9, type: !13116, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3106, retainedNodes: !13139)
!13115 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13116 = !DISubroutineType(types: !13117)
!13117 = !{!125, !13118, !150, !13138}
!13118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13119, size: 32)
!13119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13120)
!13120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1840, line: 60, size: 64, elements: !13121)
!13121 = !{!13122, !13137}
!13122 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !13120, file: !1840, line: 69, baseType: !13123, size: 32)
!13123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13124, size: 32)
!13124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13125)
!13125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1840, line: 50, size: 64, elements: !13126)
!13126 = !{!13127, !13135, !13136}
!13127 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !13125, file: !1840, line: 52, baseType: !13128, size: 32)
!13128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13129, size: 32)
!13129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13130)
!13130 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1851, line: 37, baseType: !13131)
!13131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1851, line: 32, size: 64, elements: !13132)
!13132 = !{!13133, !13134}
!13133 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13131, file: !1851, line: 34, baseType: !208, size: 32)
!13134 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13131, file: !1851, line: 36, baseType: !208, size: 32, offset: 32)
!13135 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !13125, file: !1840, line: 54, baseType: !150, size: 8, offset: 32)
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13125, file: !1840, line: 56, baseType: !150, size: 8, offset: 40)
!13137 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !13120, file: !1840, line: 71, baseType: !150, size: 8, offset: 32)
!13138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13123, size: 32)
!13139 = !{!13140, !13141, !13142}
!13140 = !DILocalVariable(name: "config", arg: 1, scope: !13114, file: !13115, line: 9, type: !13118)
!13141 = !DILocalVariable(name: "id", arg: 2, scope: !13114, file: !13115, line: 9, type: !150)
!13142 = !DILocalVariable(name: "state", arg: 3, scope: !13114, file: !13115, line: 10, type: !13138)
!13143 = !DILocation(line: 0, scope: !13114)
!13144 = !DILocation(line: 12, column: 20, scope: !13114)
!13145 = !DILocation(line: 13, column: 27, scope: !13114)
!13146 = !DILocation(line: 13, column: 42, scope: !13114)
!13147 = !DILocation(line: 13, column: 19, scope: !13114)
!13148 = !DILocation(line: 13, column: 16, scope: !13114)
!13149 = !DILocation(line: 13, column: 2, scope: !13114)
!13150 = distinct !{!13150, !13149, !13151}
!13151 = !DILocation(line: 19, column: 2, scope: !13114)
!13152 = !DILocation(line: 14, column: 23, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13154, file: !13115, line: 14, column: 7)
!13154 = distinct !DILexicalBlock(scope: !13114, file: !13115, line: 13, column: 54)
!13155 = !DILocation(line: 14, column: 10, scope: !13153)
!13156 = !DILocation(line: 18, column: 11, scope: !13154)
!13157 = !DILocation(line: 14, column: 7, scope: !13154)
!13158 = !DILocation(line: 22, column: 1, scope: !13114)
!13159 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !2080, file: !2080, line: 193, type: !13160, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13169)
!13160 = !DISubroutineType(types: !13161)
!13161 = !{!125, !13162, !150, !22}
!13162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13163, size: 32)
!13163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13164)
!13164 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1851, line: 37, baseType: !13165)
!13165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1851, line: 32, size: 64, elements: !13166)
!13166 = !{!13167, !13168}
!13167 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !13165, file: !1851, line: 34, baseType: !208, size: 32)
!13168 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !13165, file: !1851, line: 36, baseType: !208, size: 32, offset: 32)
!13169 = !{!13170, !13171, !13172, !13173, !13174, !13175, !13176, !13177, !13179}
!13170 = !DILocalVariable(name: "pins", arg: 1, scope: !13159, file: !2080, line: 193, type: !13162)
!13171 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !13159, file: !2080, line: 193, type: !150)
!13172 = !DILocalVariable(name: "reg", arg: 3, scope: !13159, file: !2080, line: 194, type: !22)
!13173 = !DILocalVariable(name: "pin", scope: !13159, file: !2080, line: 196, type: !208)
!13174 = !DILocalVariable(name: "mux", scope: !13159, file: !2080, line: 196, type: !208)
!13175 = !DILocalVariable(name: "pin_cgf", scope: !13159, file: !2080, line: 197, type: !208)
!13176 = !DILocalVariable(name: "ret", scope: !13159, file: !2080, line: 198, type: !125)
!13177 = !DILocalVariable(name: "i", scope: !13178, file: !2080, line: 209, type: !150)
!13178 = distinct !DILexicalBlock(scope: !13159, file: !2080, line: 209, column: 2)
!13179 = !DILocalVariable(name: "gpio_out", scope: !13180, file: !2080, line: 239, type: !208)
!13180 = distinct !DILexicalBlock(scope: !13181, file: !2080, line: 238, column: 55)
!13181 = distinct !DILexicalBlock(scope: !13182, file: !2080, line: 238, column: 14)
!13182 = distinct !DILexicalBlock(scope: !13183, file: !2080, line: 236, column: 14)
!13183 = distinct !DILexicalBlock(scope: !13184, file: !2080, line: 234, column: 7)
!13184 = distinct !DILexicalBlock(scope: !13185, file: !2080, line: 209, column: 41)
!13185 = distinct !DILexicalBlock(scope: !13178, file: !2080, line: 209, column: 2)
!13186 = !DILocation(line: 0, scope: !13159)
!13187 = !DILocation(line: 0, scope: !13178)
!13188 = !DILocation(line: 209, column: 25, scope: !13185)
!13189 = !DILocation(line: 209, column: 2, scope: !13178)
!13190 = distinct !{!13190, !13189, !13191}
!13191 = !DILocation(line: 259, column: 2, scope: !13178)
!13192 = !DILocation(line: 210, column: 17, scope: !13184)
!13193 = !DILocation(line: 234, column: 7, scope: !13183)
!13194 = !DILocation(line: 234, column: 33, scope: !13183)
!13195 = !DILocation(line: 234, column: 7, scope: !13184)
!13196 = !DILocation(line: 235, column: 22, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13183, file: !2080, line: 234, column: 49)
!13198 = !DILocation(line: 235, column: 29, scope: !13197)
!13199 = !DILocation(line: 236, column: 3, scope: !13197)
!13200 = !DILocation(line: 236, column: 14, scope: !13183)
!13201 = !DILocation(line: 239, column: 32, scope: !13180)
!13202 = !DILocation(line: 0, scope: !13180)
!13203 = !DILocation(line: 241, column: 8, scope: !13180)
!13204 = !DILocation(line: 246, column: 3, scope: !13180)
!13205 = !DILocation(line: 252, column: 9, scope: !13184)
!13206 = !DILocation(line: 255, column: 9, scope: !13184)
!13207 = !DILocation(line: 256, column: 11, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13184, file: !2080, line: 256, column: 7)
!13209 = !DILocation(line: 209, column: 37, scope: !13185)
!13210 = !DILocation(line: 256, column: 7, scope: !13184)
!13211 = !DILocation(line: 262, column: 1, scope: !13159)
!13212 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !2080, file: !2080, line: 176, type: !13213, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13215)
!13213 = !DISubroutineType(types: !13214)
!13214 = !{!125, !208, !208, !208}
!13215 = !{!13216, !13217, !13218, !13219}
!13216 = !DILocalVariable(name: "pin", arg: 1, scope: !13212, file: !2080, line: 176, type: !208)
!13217 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !13212, file: !2080, line: 176, type: !208)
!13218 = !DILocalVariable(name: "pin_func", arg: 3, scope: !13212, file: !2080, line: 176, type: !208)
!13219 = !DILocalVariable(name: "port_device", scope: !13212, file: !2080, line: 178, type: !2010)
!13220 = !DILocation(line: 0, scope: !13212)
!13221 = !DILocation(line: 180, column: 22, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13212, file: !2080, line: 180, column: 6)
!13223 = !DILocation(line: 180, column: 6, scope: !13212)
!13224 = !DILocation(line: 180, column: 6, scope: !13222)
!13225 = !DILocation(line: 184, column: 16, scope: !13212)
!13226 = !DILocation(line: 186, column: 19, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13212, file: !2080, line: 186, column: 6)
!13228 = !DILocation(line: 186, column: 28, scope: !13227)
!13229 = !DILocation(line: 186, column: 33, scope: !13227)
!13230 = !DILocation(line: 186, column: 6, scope: !13212)
!13231 = !DILocation(line: 190, column: 43, scope: !13212)
!13232 = !DILocation(line: 190, column: 9, scope: !13212)
!13233 = !DILocation(line: 190, column: 2, scope: !13212)
!13234 = !DILocation(line: 191, column: 1, scope: !13212)
!13235 = distinct !DISubprogram(name: "device_is_ready", scope: !4202, file: !4202, line: 47, type: !13236, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13238)
!13236 = !DISubroutineType(types: !13237)
!13237 = !{!153, !2010}
!13238 = !{!13239}
!13239 = !DILocalVariable(name: "dev", arg: 1, scope: !13235, file: !4202, line: 47, type: !2010)
!13240 = !DILocation(line: 0, scope: !13235)
!13241 = !DILocation(line: 55, column: 2, scope: !13242)
!13242 = distinct !DILexicalBlock(scope: !13235, file: !4202, line: 55, column: 2)
!13243 = !{i64 2149460580}
!13244 = !DILocation(line: 56, column: 9, scope: !13235)
!13245 = !DILocation(line: 56, column: 2, scope: !13235)
!13246 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !137, file: !137, line: 730, type: !13236, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1998, retainedNodes: !13247)
!13247 = !{!13248}
!13248 = !DILocalVariable(name: "dev", arg: 1, scope: !13246, file: !137, line: 730, type: !2010)
!13249 = !DILocation(line: 0, scope: !13246)
!13250 = !DILocation(line: 732, column: 9, scope: !13246)
!13251 = !DILocation(line: 732, column: 2, scope: !13246)
!13252 = distinct !DISubprogram(name: "SystemInit", scope: !2129, file: !2129, line: 167, type: !3297, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2088, retainedNodes: !639)
!13253 = !DILocation(line: 182, column: 1, scope: !13252)
!13254 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2129, file: !2129, line: 220, type: !3297, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2088, retainedNodes: !13255)
!13255 = !{!13256, !13257, !13258, !13259, !13260}
!13256 = !DILocalVariable(name: "tmp", scope: !13254, file: !2129, line: 222, type: !208)
!13257 = !DILocalVariable(name: "pllvco", scope: !13254, file: !2129, line: 222, type: !208)
!13258 = !DILocalVariable(name: "pllp", scope: !13254, file: !2129, line: 222, type: !208)
!13259 = !DILocalVariable(name: "pllsource", scope: !13254, file: !2129, line: 222, type: !208)
!13260 = !DILocalVariable(name: "pllm", scope: !13254, file: !2129, line: 222, type: !208)
!13261 = !DILocation(line: 0, scope: !13254)
!13262 = !DILocation(line: 225, column: 14, scope: !13254)
!13263 = !DILocation(line: 225, column: 19, scope: !13254)
!13264 = !DILocation(line: 227, column: 3, scope: !13254)
!13265 = !DILocation(line: 240, column: 25, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13254, file: !2129, line: 228, column: 3)
!13267 = !DILocation(line: 241, column: 19, scope: !13266)
!13268 = !DILocation(line: 241, column: 27, scope: !13266)
!13269 = !DILocation(line: 0, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13266, file: !2129, line: 243, column: 11)
!13271 = !DILocation(line: 254, column: 22, scope: !13266)
!13272 = !DILocation(line: 254, column: 62, scope: !13266)
!13273 = !DILocation(line: 255, column: 31, scope: !13266)
!13274 = !DILocation(line: 256, column: 7, scope: !13266)
!13275 = !DILocation(line: 0, scope: !13266)
!13276 = !DILocation(line: 263, column: 30, scope: !13254)
!13277 = !DILocation(line: 263, column: 52, scope: !13254)
!13278 = !DILocation(line: 263, column: 9, scope: !13254)
!13279 = !DILocation(line: 265, column: 19, scope: !13254)
!13280 = !DILocation(line: 266, column: 1, scope: !13254)
!13281 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !13282, file: !13282, line: 200, type: !13283, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !639)
!13282 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13283 = !DISubroutineType(types: !13284)
!13284 = !{!13285}
!13285 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !3112, line: 44, baseType: !3111)
!13286 = !DILocation(line: 202, column: 3, scope: !13281)
!13287 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !13282, file: !13282, line: 219, type: !13288, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13313)
!13288 = !DISubroutineType(types: !13289)
!13289 = !{!13285, !13290}
!13290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13291, size: 32)
!13291 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !13292, line: 70, baseType: !13293)
!13292 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13293 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13292, line: 49, size: 416, elements: !13294)
!13294 = !{!13295, !13296, !13297, !13298, !13299, !13300, !13301}
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !13293, file: !13292, line: 51, baseType: !208, size: 32)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !13293, file: !13292, line: 54, baseType: !208, size: 32, offset: 32)
!13297 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !13293, file: !13292, line: 57, baseType: !208, size: 32, offset: 64)
!13298 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !13293, file: !13292, line: 60, baseType: !208, size: 32, offset: 96)
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !13293, file: !13292, line: 63, baseType: !208, size: 32, offset: 128)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !13293, file: !13292, line: 66, baseType: !208, size: 32, offset: 160)
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !13293, file: !13292, line: 69, baseType: !13302, size: 224, offset: 192)
!13302 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !13303, line: 73, baseType: !13304)
!13303 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13303, line: 45, size: 224, elements: !13305)
!13305 = !{!13306, !13307, !13308, !13309, !13310, !13311, !13312}
!13306 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !13304, file: !13303, line: 47, baseType: !208, size: 32)
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !13304, file: !13303, line: 50, baseType: !208, size: 32, offset: 32)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !13304, file: !13303, line: 53, baseType: !208, size: 32, offset: 64)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !13304, file: !13303, line: 56, baseType: !208, size: 32, offset: 96)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !13304, file: !13303, line: 60, baseType: !208, size: 32, offset: 128)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !13304, file: !13303, line: 63, baseType: !208, size: 32, offset: 160)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !13304, file: !13303, line: 68, baseType: !208, size: 32, offset: 192)
!13313 = !{!13314, !13315, !13316, !13317, !13321}
!13314 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13287, file: !13282, line: 219, type: !13290)
!13315 = !DILocalVariable(name: "tickstart", scope: !13287, file: !13282, line: 221, type: !208)
!13316 = !DILocalVariable(name: "pll_config", scope: !13287, file: !13282, line: 221, type: !208)
!13317 = !DILocalVariable(name: "pwrclkchanged", scope: !13318, file: !13282, line: 391, type: !13320)
!13318 = distinct !DILexicalBlock(scope: !13319, file: !13282, line: 390, column: 3)
!13319 = distinct !DILexicalBlock(scope: !13287, file: !13282, line: 389, column: 6)
!13320 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !973, line: 188, baseType: !3118)
!13321 = !DILocalVariable(name: "tmpreg", scope: !13322, file: !13282, line: 400, type: !423)
!13322 = distinct !DILexicalBlock(scope: !13323, file: !13282, line: 400, column: 7)
!13323 = distinct !DILexicalBlock(scope: !13324, file: !13282, line: 399, column: 5)
!13324 = distinct !DILexicalBlock(scope: !13318, file: !13282, line: 398, column: 8)
!13325 = !DILocation(line: 0, scope: !13287)
!13326 = !DILocation(line: 224, column: 24, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13287, file: !13282, line: 224, column: 6)
!13328 = !DILocation(line: 224, column: 6, scope: !13287)
!13329 = !DILocation(line: 232, column: 27, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13287, file: !13282, line: 232, column: 6)
!13331 = !DILocation(line: 232, column: 43, scope: !13330)
!13332 = !DILocation(line: 232, column: 69, scope: !13330)
!13333 = !DILocation(line: 232, column: 6, scope: !13287)
!13334 = !DILocation(line: 237, column: 9, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !13282, line: 237, column: 8)
!13336 = distinct !DILexicalBlock(scope: !13330, file: !13282, line: 233, column: 3)
!13337 = !DILocation(line: 237, column: 39, scope: !13335)
!13338 = !DILocation(line: 237, column: 60, scope: !13335)
!13339 = !DILocation(line: 238, column: 9, scope: !13335)
!13340 = !DILocation(line: 238, column: 39, scope: !13335)
!13341 = !DILocation(line: 238, column: 60, scope: !13335)
!13342 = !DILocation(line: 238, column: 70, scope: !13335)
!13343 = !DILocation(line: 238, column: 78, scope: !13335)
!13344 = !DILocation(line: 238, column: 100, scope: !13335)
!13345 = !DILocation(line: 237, column: 8, scope: !13336)
!13346 = !DILocation(line: 240, column: 11, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13348, file: !13282, line: 240, column: 10)
!13348 = distinct !DILexicalBlock(scope: !13335, file: !13282, line: 239, column: 5)
!13349 = !DILocation(line: 240, column: 57, scope: !13347)
!13350 = !DILocation(line: 240, column: 80, scope: !13347)
!13351 = !DILocation(line: 240, column: 89, scope: !13347)
!13352 = !DILocation(line: 240, column: 10, scope: !13348)
!13353 = !DILocation(line: 248, column: 7, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13355, file: !13282, line: 248, column: 7)
!13355 = distinct !DILexicalBlock(scope: !13356, file: !13282, line: 248, column: 7)
!13356 = distinct !DILexicalBlock(scope: !13335, file: !13282, line: 246, column: 5)
!13357 = !DILocation(line: 248, column: 7, scope: !13355)
!13358 = !DILocation(line: 248, column: 7, scope: !13359)
!13359 = distinct !DILexicalBlock(scope: !13354, file: !13282, line: 248, column: 7)
!13360 = !DILocation(line: 248, column: 7, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13362, file: !13282, line: 248, column: 7)
!13362 = distinct !DILexicalBlock(scope: !13354, file: !13282, line: 248, column: 7)
!13363 = !DILocation(line: 248, column: 7, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13362, file: !13282, line: 248, column: 7)
!13365 = !DILocation(line: 0, scope: !13354)
!13366 = !DILocation(line: 251, column: 30, scope: !13367)
!13367 = distinct !DILexicalBlock(scope: !13356, file: !13282, line: 251, column: 10)
!13368 = !DILocation(line: 251, column: 40, scope: !13367)
!13369 = !DILocation(line: 0, scope: !13367)
!13370 = !DILocation(line: 251, column: 10, scope: !13356)
!13371 = !DILocation(line: 257, column: 15, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13367, file: !13282, line: 252, column: 7)
!13373 = !DILocation(line: 257, column: 51, scope: !13372)
!13374 = !DILocation(line: 257, column: 9, scope: !13372)
!13375 = !DILocation(line: 259, column: 15, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13377, file: !13282, line: 259, column: 14)
!13377 = distinct !DILexicalBlock(scope: !13372, file: !13282, line: 258, column: 9)
!13378 = !DILocation(line: 259, column: 29, scope: !13376)
!13379 = !DILocation(line: 259, column: 43, scope: !13376)
!13380 = !DILocation(line: 259, column: 14, scope: !13377)
!13381 = distinct !{!13381, !13374, !13382}
!13382 = !DILocation(line: 263, column: 9, scope: !13372)
!13383 = !DILocation(line: 271, column: 15, scope: !13384)
!13384 = distinct !DILexicalBlock(scope: !13367, file: !13282, line: 266, column: 7)
!13385 = !DILocation(line: 271, column: 9, scope: !13384)
!13386 = !DILocation(line: 273, column: 15, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !13282, line: 273, column: 14)
!13388 = distinct !DILexicalBlock(scope: !13384, file: !13282, line: 272, column: 9)
!13389 = !DILocation(line: 273, column: 29, scope: !13387)
!13390 = !DILocation(line: 273, column: 43, scope: !13387)
!13391 = !DILocation(line: 273, column: 14, scope: !13388)
!13392 = distinct !{!13392, !13385, !13393}
!13393 = !DILocation(line: 277, column: 9, scope: !13384)
!13394 = !DILocation(line: 282, column: 27, scope: !13395)
!13395 = distinct !DILexicalBlock(scope: !13287, file: !13282, line: 282, column: 6)
!13396 = !DILocation(line: 282, column: 43, scope: !13395)
!13397 = !DILocation(line: 282, column: 69, scope: !13395)
!13398 = !DILocation(line: 282, column: 6, scope: !13287)
!13399 = !DILocation(line: 289, column: 9, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13401, file: !13282, line: 289, column: 8)
!13401 = distinct !DILexicalBlock(scope: !13395, file: !13282, line: 283, column: 3)
!13402 = !DILocation(line: 289, column: 39, scope: !13400)
!13403 = !DILocation(line: 289, column: 60, scope: !13400)
!13404 = !DILocation(line: 290, column: 9, scope: !13400)
!13405 = !DILocation(line: 290, column: 39, scope: !13400)
!13406 = !DILocation(line: 290, column: 60, scope: !13400)
!13407 = !DILocation(line: 290, column: 70, scope: !13400)
!13408 = !DILocation(line: 290, column: 78, scope: !13400)
!13409 = !DILocation(line: 290, column: 100, scope: !13400)
!13410 = !DILocation(line: 289, column: 8, scope: !13401)
!13411 = !DILocation(line: 293, column: 11, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13413, file: !13282, line: 293, column: 10)
!13413 = distinct !DILexicalBlock(scope: !13400, file: !13282, line: 291, column: 5)
!13414 = !DILocation(line: 293, column: 57, scope: !13412)
!13415 = !DILocation(line: 293, column: 80, scope: !13412)
!13416 = !DILocation(line: 293, column: 89, scope: !13412)
!13417 = !DILocation(line: 293, column: 10, scope: !13413)
!13418 = !DILocation(line: 307, column: 30, scope: !13419)
!13419 = distinct !DILexicalBlock(scope: !13420, file: !13282, line: 307, column: 10)
!13420 = distinct !DILexicalBlock(scope: !13400, file: !13282, line: 305, column: 5)
!13421 = !DILocation(line: 307, column: 39, scope: !13419)
!13422 = !DILocation(line: 307, column: 10, scope: !13420)
!13423 = !DILocation(line: 310, column: 9, scope: !13424)
!13424 = distinct !DILexicalBlock(scope: !13419, file: !13282, line: 308, column: 7)
!13425 = !DILocation(line: 313, column: 21, scope: !13424)
!13426 = !DILocation(line: 316, column: 9, scope: !13424)
!13427 = !DILocation(line: 316, column: 15, scope: !13424)
!13428 = !DILocation(line: 316, column: 51, scope: !13424)
!13429 = !DILocation(line: 318, column: 15, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13431, file: !13282, line: 318, column: 14)
!13431 = distinct !DILexicalBlock(scope: !13424, file: !13282, line: 317, column: 9)
!13432 = !DILocation(line: 318, column: 29, scope: !13430)
!13433 = !DILocation(line: 318, column: 43, scope: !13430)
!13434 = !DILocation(line: 318, column: 14, scope: !13431)
!13435 = distinct !{!13435, !13426, !13436}
!13436 = !DILocation(line: 322, column: 9, scope: !13424)
!13437 = !DILocation(line: 330, column: 9, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13419, file: !13282, line: 328, column: 7)
!13439 = !DILocation(line: 333, column: 21, scope: !13438)
!13440 = !DILocation(line: 336, column: 9, scope: !13438)
!13441 = !DILocation(line: 336, column: 15, scope: !13438)
!13442 = !DILocation(line: 338, column: 15, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13444, file: !13282, line: 338, column: 14)
!13444 = distinct !DILexicalBlock(scope: !13438, file: !13282, line: 337, column: 9)
!13445 = !DILocation(line: 338, column: 29, scope: !13443)
!13446 = !DILocation(line: 338, column: 43, scope: !13443)
!13447 = !DILocation(line: 338, column: 14, scope: !13444)
!13448 = distinct !{!13448, !13440, !13449}
!13449 = !DILocation(line: 342, column: 9, scope: !13438)
!13450 = !DILocation(line: 0, scope: !13400)
!13451 = !DILocation(line: 347, column: 27, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13287, file: !13282, line: 347, column: 6)
!13453 = !DILocation(line: 347, column: 43, scope: !13452)
!13454 = !DILocation(line: 347, column: 69, scope: !13452)
!13455 = !DILocation(line: 347, column: 6, scope: !13287)
!13456 = !DILocation(line: 353, column: 28, scope: !13457)
!13457 = distinct !DILexicalBlock(scope: !13458, file: !13282, line: 353, column: 8)
!13458 = distinct !DILexicalBlock(scope: !13452, file: !13282, line: 348, column: 3)
!13459 = !DILocation(line: 353, column: 37, scope: !13457)
!13460 = !DILocation(line: 353, column: 8, scope: !13458)
!13461 = !DILocation(line: 356, column: 7, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13457, file: !13282, line: 354, column: 5)
!13463 = !DILocation(line: 359, column: 19, scope: !13462)
!13464 = !DILocation(line: 362, column: 7, scope: !13462)
!13465 = !DILocation(line: 362, column: 13, scope: !13462)
!13466 = !DILocation(line: 362, column: 49, scope: !13462)
!13467 = !DILocation(line: 364, column: 13, scope: !13468)
!13468 = distinct !DILexicalBlock(scope: !13469, file: !13282, line: 364, column: 12)
!13469 = distinct !DILexicalBlock(scope: !13462, file: !13282, line: 363, column: 7)
!13470 = !DILocation(line: 364, column: 27, scope: !13468)
!13471 = !DILocation(line: 364, column: 41, scope: !13468)
!13472 = !DILocation(line: 364, column: 12, scope: !13469)
!13473 = distinct !{!13473, !13464, !13474}
!13474 = !DILocation(line: 368, column: 7, scope: !13462)
!13475 = !DILocation(line: 373, column: 7, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13457, file: !13282, line: 371, column: 5)
!13477 = !DILocation(line: 376, column: 19, scope: !13476)
!13478 = !DILocation(line: 379, column: 7, scope: !13476)
!13479 = !DILocation(line: 379, column: 13, scope: !13476)
!13480 = !DILocation(line: 381, column: 13, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13482, file: !13282, line: 381, column: 12)
!13482 = distinct !DILexicalBlock(scope: !13476, file: !13282, line: 380, column: 7)
!13483 = !DILocation(line: 381, column: 27, scope: !13481)
!13484 = !DILocation(line: 381, column: 41, scope: !13481)
!13485 = !DILocation(line: 381, column: 12, scope: !13482)
!13486 = distinct !{!13486, !13478, !13487}
!13487 = !DILocation(line: 385, column: 7, scope: !13476)
!13488 = !DILocation(line: 389, column: 27, scope: !13319)
!13489 = !DILocation(line: 389, column: 43, scope: !13319)
!13490 = !DILocation(line: 389, column: 69, scope: !13319)
!13491 = !DILocation(line: 389, column: 6, scope: !13287)
!13492 = !DILocation(line: 0, scope: !13318)
!13493 = !DILocation(line: 398, column: 8, scope: !13324)
!13494 = !DILocation(line: 398, column: 8, scope: !13318)
!13495 = !DILocation(line: 400, column: 7, scope: !13322)
!13496 = !DILocation(line: 400, column: 7, scope: !13323)
!13497 = !DILocation(line: 402, column: 5, scope: !13323)
!13498 = !DILocation(line: 404, column: 8, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13318, file: !13282, line: 404, column: 8)
!13500 = !DILocation(line: 404, column: 8, scope: !13318)
!13501 = !DILocation(line: 407, column: 7, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13499, file: !13282, line: 405, column: 5)
!13503 = !DILocation(line: 410, column: 19, scope: !13502)
!13504 = !DILocation(line: 412, column: 7, scope: !13502)
!13505 = !DILocation(line: 412, column: 13, scope: !13502)
!13506 = !DILocation(line: 414, column: 13, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13508, file: !13282, line: 414, column: 12)
!13508 = distinct !DILexicalBlock(scope: !13502, file: !13282, line: 413, column: 7)
!13509 = !DILocation(line: 414, column: 27, scope: !13507)
!13510 = !DILocation(line: 414, column: 40, scope: !13507)
!13511 = !DILocation(line: 414, column: 12, scope: !13508)
!13512 = distinct !{!13512, !13504, !13513}
!13513 = !DILocation(line: 418, column: 7, scope: !13502)
!13514 = !DILocation(line: 422, column: 5, scope: !13515)
!13515 = distinct !DILexicalBlock(scope: !13516, file: !13282, line: 422, column: 5)
!13516 = distinct !DILexicalBlock(scope: !13318, file: !13282, line: 422, column: 5)
!13517 = !DILocation(line: 422, column: 5, scope: !13516)
!13518 = !DILocation(line: 422, column: 5, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13515, file: !13282, line: 422, column: 5)
!13520 = !DILocation(line: 422, column: 5, scope: !13521)
!13521 = distinct !DILexicalBlock(scope: !13522, file: !13282, line: 422, column: 5)
!13522 = distinct !DILexicalBlock(scope: !13515, file: !13282, line: 422, column: 5)
!13523 = !DILocation(line: 422, column: 5, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13522, file: !13282, line: 422, column: 5)
!13525 = !DILocation(line: 0, scope: !13515)
!13526 = !DILocation(line: 424, column: 28, scope: !13527)
!13527 = distinct !DILexicalBlock(scope: !13318, file: !13282, line: 424, column: 8)
!13528 = !DILocation(line: 424, column: 38, scope: !13527)
!13529 = !DILocation(line: 0, scope: !13527)
!13530 = !DILocation(line: 424, column: 8, scope: !13318)
!13531 = !DILocation(line: 430, column: 13, scope: !13532)
!13532 = distinct !DILexicalBlock(scope: !13527, file: !13282, line: 425, column: 5)
!13533 = !DILocation(line: 430, column: 49, scope: !13532)
!13534 = !DILocation(line: 430, column: 7, scope: !13532)
!13535 = !DILocation(line: 432, column: 13, scope: !13536)
!13536 = distinct !DILexicalBlock(scope: !13537, file: !13282, line: 432, column: 12)
!13537 = distinct !DILexicalBlock(scope: !13532, file: !13282, line: 431, column: 7)
!13538 = !DILocation(line: 432, column: 27, scope: !13536)
!13539 = !DILocation(line: 432, column: 41, scope: !13536)
!13540 = !DILocation(line: 432, column: 12, scope: !13537)
!13541 = distinct !{!13541, !13534, !13542}
!13542 = !DILocation(line: 436, column: 7, scope: !13532)
!13543 = !DILocation(line: 444, column: 13, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13527, file: !13282, line: 439, column: 5)
!13545 = !DILocation(line: 444, column: 7, scope: !13544)
!13546 = !DILocation(line: 446, column: 13, scope: !13547)
!13547 = distinct !DILexicalBlock(scope: !13548, file: !13282, line: 446, column: 12)
!13548 = distinct !DILexicalBlock(scope: !13544, file: !13282, line: 445, column: 7)
!13549 = !DILocation(line: 446, column: 27, scope: !13547)
!13550 = !DILocation(line: 446, column: 41, scope: !13547)
!13551 = !DILocation(line: 446, column: 12, scope: !13548)
!13552 = distinct !{!13552, !13545, !13553}
!13553 = !DILocation(line: 450, column: 7, scope: !13544)
!13554 = !DILocation(line: 454, column: 8, scope: !13318)
!13555 = !DILocation(line: 456, column: 7, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13557, file: !13282, line: 455, column: 5)
!13557 = distinct !DILexicalBlock(scope: !13318, file: !13282, line: 454, column: 8)
!13558 = !DILocation(line: 457, column: 5, scope: !13556)
!13559 = !DILocation(line: 462, column: 31, scope: !13560)
!13560 = distinct !DILexicalBlock(scope: !13287, file: !13282, line: 462, column: 7)
!13561 = !DILocation(line: 462, column: 41, scope: !13560)
!13562 = !DILocation(line: 462, column: 7, scope: !13287)
!13563 = !DILocation(line: 465, column: 8, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13565, file: !13282, line: 465, column: 8)
!13565 = distinct !DILexicalBlock(scope: !13560, file: !13282, line: 463, column: 3)
!13566 = !DILocation(line: 465, column: 38, scope: !13564)
!13567 = !DILocation(line: 465, column: 8, scope: !13565)
!13568 = !DILocation(line: 467, column: 44, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13570, file: !13282, line: 467, column: 10)
!13570 = distinct !DILexicalBlock(scope: !13564, file: !13282, line: 466, column: 5)
!13571 = !DILocation(line: 0, scope: !13569)
!13572 = !DILocation(line: 467, column: 10, scope: !13570)
!13573 = !DILocation(line: 483, column: 15, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13569, file: !13282, line: 468, column: 7)
!13575 = !DILocation(line: 483, column: 9, scope: !13574)
!13576 = !DILocation(line: 485, column: 15, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13578, file: !13282, line: 485, column: 14)
!13578 = distinct !DILexicalBlock(scope: !13574, file: !13282, line: 484, column: 9)
!13579 = !DILocation(line: 485, column: 29, scope: !13577)
!13580 = !DILocation(line: 485, column: 43, scope: !13577)
!13581 = !DILocation(line: 485, column: 14, scope: !13578)
!13582 = distinct !{!13582, !13575, !13583}
!13583 = !DILocation(line: 489, column: 9, scope: !13574)
!13584 = !DILocation(line: 492, column: 9, scope: !13574)
!13585 = !DILocation(line: 498, column: 9, scope: !13574)
!13586 = !DILocation(line: 501, column: 21, scope: !13574)
!13587 = !DILocation(line: 504, column: 9, scope: !13574)
!13588 = !DILocation(line: 504, column: 15, scope: !13574)
!13589 = !DILocation(line: 504, column: 51, scope: !13574)
!13590 = !DILocation(line: 506, column: 15, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13592, file: !13282, line: 506, column: 14)
!13592 = distinct !DILexicalBlock(scope: !13574, file: !13282, line: 505, column: 9)
!13593 = !DILocation(line: 506, column: 29, scope: !13591)
!13594 = !DILocation(line: 506, column: 43, scope: !13591)
!13595 = !DILocation(line: 506, column: 14, scope: !13592)
!13596 = distinct !{!13596, !13587, !13597}
!13597 = !DILocation(line: 510, column: 9, scope: !13574)
!13598 = !DILocation(line: 521, column: 15, scope: !13599)
!13599 = distinct !DILexicalBlock(scope: !13569, file: !13282, line: 513, column: 7)
!13600 = !DILocation(line: 521, column: 9, scope: !13599)
!13601 = !DILocation(line: 523, column: 15, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13603, file: !13282, line: 523, column: 14)
!13603 = distinct !DILexicalBlock(scope: !13599, file: !13282, line: 522, column: 9)
!13604 = !DILocation(line: 523, column: 29, scope: !13602)
!13605 = !DILocation(line: 523, column: 43, scope: !13602)
!13606 = !DILocation(line: 523, column: 14, scope: !13603)
!13607 = distinct !{!13607, !13600, !13608}
!13608 = !DILocation(line: 527, column: 9, scope: !13599)
!13609 = !DILocation(line: 533, column: 44, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13611, file: !13282, line: 533, column: 10)
!13611 = distinct !DILexicalBlock(scope: !13564, file: !13282, line: 531, column: 5)
!13612 = !DILocation(line: 533, column: 10, scope: !13611)
!13613 = !DILocation(line: 540, column: 27, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13610, file: !13282, line: 538, column: 7)
!13615 = !DILocation(line: 543, column: 14, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13614, file: !13282, line: 542, column: 13)
!13617 = !DILocation(line: 543, column: 81, scope: !13616)
!13618 = !DILocation(line: 543, column: 55, scope: !13616)
!13619 = !DILocation(line: 543, column: 92, scope: !13616)
!13620 = !DILocation(line: 544, column: 14, scope: !13616)
!13621 = !DILocation(line: 544, column: 80, scope: !13616)
!13622 = !DILocation(line: 544, column: 53, scope: !13616)
!13623 = !DILocation(line: 544, column: 111, scope: !13616)
!13624 = !DILocation(line: 545, column: 14, scope: !13616)
!13625 = !DILocation(line: 545, column: 80, scope: !13616)
!13626 = !DILocation(line: 545, column: 86, scope: !13616)
!13627 = !DILocation(line: 545, column: 53, scope: !13616)
!13628 = !DILocation(line: 545, column: 111, scope: !13616)
!13629 = !DILocation(line: 546, column: 14, scope: !13616)
!13630 = !DILocation(line: 546, column: 82, scope: !13616)
!13631 = !DILocation(line: 546, column: 101, scope: !13616)
!13632 = !DILocation(line: 546, column: 53, scope: !13616)
!13633 = !DILocation(line: 546, column: 126, scope: !13616)
!13634 = !DILocation(line: 547, column: 14, scope: !13616)
!13635 = !DILocation(line: 547, column: 80, scope: !13616)
!13636 = !DILocation(line: 547, column: 85, scope: !13616)
!13637 = !DILocation(line: 547, column: 53, scope: !13616)
!13638 = !DILocation(line: 547, column: 111, scope: !13616)
!13639 = !DILocation(line: 548, column: 14, scope: !13616)
!13640 = !DILocation(line: 548, column: 80, scope: !13616)
!13641 = !DILocation(line: 548, column: 85, scope: !13616)
!13642 = !DILocation(line: 548, column: 53, scope: !13616)
!13643 = !DILocation(line: 542, column: 13, scope: !13614)
!13644 = !DILocation(line: 563, column: 3, scope: !13287)
!13645 = !DILocation(line: 564, column: 1, scope: !13287)
!13646 = !DISubprogram(name: "HAL_GetTick", scope: !13647, file: !13647, line: 234, type: !8391, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13647 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13648 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !13282, file: !13282, line: 591, type: !13649, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13660)
!13649 = !DISubroutineType(types: !13650)
!13650 = !{!13285, !13651, !208}
!13651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13652, size: 32)
!13652 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !13292, line: 92, baseType: !13653)
!13653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13292, line: 75, size: 160, elements: !13654)
!13654 = !{!13655, !13656, !13657, !13658, !13659}
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !13653, file: !13292, line: 77, baseType: !208, size: 32)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !13653, file: !13292, line: 80, baseType: !208, size: 32, offset: 32)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !13653, file: !13292, line: 83, baseType: !208, size: 32, offset: 64)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !13653, file: !13292, line: 86, baseType: !208, size: 32, offset: 96)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !13653, file: !13292, line: 89, baseType: !208, size: 32, offset: 128)
!13660 = !{!13661, !13662, !13663}
!13661 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13648, file: !13282, line: 591, type: !13651)
!13662 = !DILocalVariable(name: "FLatency", arg: 2, scope: !13648, file: !13282, line: 591, type: !208)
!13663 = !DILocalVariable(name: "tickstart", scope: !13648, file: !13282, line: 593, type: !208)
!13664 = !DILocation(line: 0, scope: !13648)
!13665 = !DILocation(line: 596, column: 24, scope: !13666)
!13666 = distinct !DILexicalBlock(scope: !13648, file: !13282, line: 596, column: 6)
!13667 = !DILocation(line: 596, column: 6, scope: !13648)
!13668 = !DILocation(line: 610, column: 17, scope: !13669)
!13669 = distinct !DILexicalBlock(scope: !13648, file: !13282, line: 610, column: 6)
!13670 = !DILocation(line: 610, column: 15, scope: !13669)
!13671 = !DILocation(line: 610, column: 6, scope: !13648)
!13672 = !DILocation(line: 613, column: 5, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13669, file: !13282, line: 611, column: 3)
!13674 = !DILocation(line: 617, column: 8, scope: !13675)
!13675 = distinct !DILexicalBlock(scope: !13673, file: !13282, line: 617, column: 8)
!13676 = !DILocation(line: 617, column: 34, scope: !13675)
!13677 = !DILocation(line: 617, column: 8, scope: !13673)
!13678 = !DILocation(line: 624, column: 27, scope: !13679)
!13679 = distinct !DILexicalBlock(scope: !13648, file: !13282, line: 624, column: 6)
!13680 = !DILocation(line: 624, column: 38, scope: !13679)
!13681 = !DILocation(line: 624, column: 60, scope: !13679)
!13682 = !DILocation(line: 624, column: 6, scope: !13648)
!13683 = !DILocation(line: 628, column: 40, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !13282, line: 628, column: 8)
!13685 = distinct !DILexicalBlock(scope: !13679, file: !13282, line: 625, column: 3)
!13686 = !DILocation(line: 628, column: 63, scope: !13684)
!13687 = !DILocation(line: 628, column: 8, scope: !13685)
!13688 = !DILocation(line: 630, column: 7, scope: !13689)
!13689 = distinct !DILexicalBlock(scope: !13684, file: !13282, line: 629, column: 5)
!13690 = !DILocation(line: 633, column: 29, scope: !13691)
!13691 = distinct !DILexicalBlock(scope: !13685, file: !13282, line: 633, column: 8)
!13692 = !DILocation(line: 631, column: 5, scope: !13689)
!13693 = !DILocation(line: 633, column: 40, scope: !13691)
!13694 = !DILocation(line: 633, column: 63, scope: !13691)
!13695 = !DILocation(line: 633, column: 8, scope: !13685)
!13696 = !DILocation(line: 635, column: 7, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13691, file: !13282, line: 634, column: 5)
!13698 = !DILocation(line: 636, column: 5, scope: !13697)
!13699 = !DILocation(line: 639, column: 5, scope: !13685)
!13700 = !DILocation(line: 643, column: 27, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13648, file: !13282, line: 643, column: 6)
!13702 = !DILocation(line: 640, column: 3, scope: !13685)
!13703 = !DILocation(line: 643, column: 38, scope: !13701)
!13704 = !DILocation(line: 643, column: 62, scope: !13701)
!13705 = !DILocation(line: 643, column: 6, scope: !13648)
!13706 = !DILocation(line: 648, column: 27, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !13708, file: !13282, line: 648, column: 8)
!13708 = distinct !DILexicalBlock(scope: !13701, file: !13282, line: 644, column: 3)
!13709 = !DILocation(line: 648, column: 8, scope: !13708)
!13710 = !DILocation(line: 651, column: 10, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13712, file: !13282, line: 651, column: 10)
!13712 = distinct !DILexicalBlock(scope: !13707, file: !13282, line: 649, column: 5)
!13713 = !DILocation(line: 651, column: 46, scope: !13711)
!13714 = !DILocation(line: 651, column: 10, scope: !13712)
!13715 = !DILocation(line: 661, column: 10, scope: !13716)
!13716 = distinct !DILexicalBlock(scope: !13717, file: !13282, line: 661, column: 10)
!13717 = distinct !DILexicalBlock(scope: !13718, file: !13282, line: 659, column: 5)
!13718 = distinct !DILexicalBlock(scope: !13707, file: !13282, line: 657, column: 13)
!13719 = !DILocation(line: 661, column: 46, scope: !13716)
!13720 = !DILocation(line: 661, column: 10, scope: !13717)
!13721 = !DILocation(line: 670, column: 10, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13723, file: !13282, line: 670, column: 10)
!13723 = distinct !DILexicalBlock(scope: !13718, file: !13282, line: 668, column: 5)
!13724 = !DILocation(line: 670, column: 46, scope: !13722)
!13725 = !DILocation(line: 670, column: 10, scope: !13723)
!13726 = !DILocation(line: 676, column: 5, scope: !13708)
!13727 = !DILocation(line: 679, column: 17, scope: !13708)
!13728 = !DILocation(line: 681, column: 5, scope: !13708)
!13729 = !DILocation(line: 681, column: 12, scope: !13708)
!13730 = !DILocation(line: 681, column: 65, scope: !13708)
!13731 = !DILocation(line: 681, column: 78, scope: !13708)
!13732 = !DILocation(line: 681, column: 42, scope: !13708)
!13733 = !DILocation(line: 683, column: 12, scope: !13734)
!13734 = distinct !DILexicalBlock(scope: !13735, file: !13282, line: 683, column: 11)
!13735 = distinct !DILexicalBlock(scope: !13708, file: !13282, line: 682, column: 5)
!13736 = !DILocation(line: 683, column: 26, scope: !13734)
!13737 = !DILocation(line: 683, column: 39, scope: !13734)
!13738 = !DILocation(line: 683, column: 11, scope: !13735)
!13739 = distinct !{!13739, !13728, !13740}
!13740 = !DILocation(line: 687, column: 5, scope: !13708)
!13741 = !DILocation(line: 691, column: 17, scope: !13742)
!13742 = distinct !DILexicalBlock(scope: !13648, file: !13282, line: 691, column: 6)
!13743 = !DILocation(line: 691, column: 15, scope: !13742)
!13744 = !DILocation(line: 691, column: 6, scope: !13648)
!13745 = !DILocation(line: 694, column: 5, scope: !13746)
!13746 = distinct !DILexicalBlock(scope: !13742, file: !13282, line: 692, column: 3)
!13747 = !DILocation(line: 698, column: 8, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13746, file: !13282, line: 698, column: 8)
!13749 = !DILocation(line: 698, column: 34, scope: !13748)
!13750 = !DILocation(line: 698, column: 8, scope: !13746)
!13751 = !DILocation(line: 705, column: 27, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13648, file: !13282, line: 705, column: 6)
!13753 = !DILocation(line: 705, column: 38, scope: !13752)
!13754 = !DILocation(line: 705, column: 61, scope: !13752)
!13755 = !DILocation(line: 705, column: 6, scope: !13648)
!13756 = !DILocation(line: 708, column: 5, scope: !13757)
!13757 = distinct !DILexicalBlock(scope: !13752, file: !13282, line: 706, column: 3)
!13758 = !DILocation(line: 712, column: 27, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13648, file: !13282, line: 712, column: 6)
!13760 = !DILocation(line: 709, column: 3, scope: !13757)
!13761 = !DILocation(line: 712, column: 38, scope: !13759)
!13762 = !DILocation(line: 712, column: 61, scope: !13759)
!13763 = !DILocation(line: 712, column: 6, scope: !13648)
!13764 = !DILocation(line: 715, column: 5, scope: !13765)
!13765 = distinct !DILexicalBlock(scope: !13759, file: !13282, line: 713, column: 3)
!13766 = !DILocation(line: 716, column: 3, scope: !13765)
!13767 = !DILocation(line: 719, column: 21, scope: !13648)
!13768 = !DILocation(line: 719, column: 70, scope: !13648)
!13769 = !DILocation(line: 719, column: 91, scope: !13648)
!13770 = !DILocation(line: 719, column: 50, scope: !13648)
!13771 = !DILocation(line: 719, column: 47, scope: !13648)
!13772 = !DILocation(line: 719, column: 19, scope: !13648)
!13773 = !DILocation(line: 722, column: 17, scope: !13648)
!13774 = !DILocation(line: 722, column: 3, scope: !13648)
!13775 = !DILocation(line: 724, column: 3, scope: !13648)
!13776 = !DILocation(line: 725, column: 1, scope: !13648)
!13777 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !13282, file: !13282, line: 885, type: !8391, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13778)
!13778 = !{!13779, !13780, !13781, !13782}
!13779 = !DILocalVariable(name: "pllm", scope: !13777, file: !13282, line: 887, type: !208)
!13780 = !DILocalVariable(name: "pllvco", scope: !13777, file: !13282, line: 887, type: !208)
!13781 = !DILocalVariable(name: "pllp", scope: !13777, file: !13282, line: 887, type: !208)
!13782 = !DILocalVariable(name: "sysclockfreq", scope: !13777, file: !13282, line: 888, type: !208)
!13783 = !DILocation(line: 0, scope: !13777)
!13784 = !DILocation(line: 891, column: 16, scope: !13777)
!13785 = !DILocation(line: 891, column: 21, scope: !13777)
!13786 = !DILocation(line: 891, column: 3, scope: !13777)
!13787 = !DILocation(line: 907, column: 19, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13789, file: !13282, line: 904, column: 5)
!13789 = distinct !DILexicalBlock(scope: !13777, file: !13282, line: 892, column: 3)
!13790 = !DILocation(line: 907, column: 27, scope: !13788)
!13791 = !DILocation(line: 908, column: 10, scope: !13792)
!13792 = distinct !DILexicalBlock(scope: !13788, file: !13282, line: 908, column: 10)
!13793 = !DILocation(line: 0, scope: !13792)
!13794 = !DILocation(line: 918, column: 23, scope: !13788)
!13795 = !DILocation(line: 918, column: 82, scope: !13788)
!13796 = !DILocation(line: 920, column: 28, scope: !13788)
!13797 = !DILocation(line: 921, column: 7, scope: !13788)
!13798 = !DILocation(line: 0, scope: !13789)
!13799 = !DILocation(line: 929, column: 3, scope: !13777)
!13800 = !DISubprogram(name: "HAL_InitTick", scope: !13647, file: !13647, line: 223, type: !13801, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13801 = !DISubroutineType(types: !13802)
!13802 = !{!13285, !208}
!13803 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !13282, file: !13282, line: 775, type: !13804, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13806)
!13804 = !DISubroutineType(types: !13805)
!13805 = !{null, !208, !208, !208}
!13806 = !{!13807, !13808, !13809, !13810, !13820}
!13807 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !13803, file: !13282, line: 775, type: !208)
!13808 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !13803, file: !13282, line: 775, type: !208)
!13809 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !13803, file: !13282, line: 775, type: !208)
!13810 = !DILocalVariable(name: "GPIO_InitStruct", scope: !13803, file: !13282, line: 777, type: !13811)
!13811 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !13812, line: 62, baseType: !13813)
!13812 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !13812, line: 46, size: 160, elements: !13814)
!13814 = !{!13815, !13816, !13817, !13818, !13819}
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !13813, file: !13812, line: 48, baseType: !208, size: 32)
!13816 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !13813, file: !13812, line: 51, baseType: !208, size: 32, offset: 32)
!13817 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !13813, file: !13812, line: 54, baseType: !208, size: 32, offset: 64)
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !13813, file: !13812, line: 57, baseType: !208, size: 32, offset: 96)
!13819 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !13813, file: !13812, line: 60, baseType: !208, size: 32, offset: 128)
!13820 = !DILocalVariable(name: "tmpreg", scope: !13821, file: !13282, line: 787, type: !423)
!13821 = distinct !DILexicalBlock(scope: !13822, file: !13282, line: 787, column: 5)
!13822 = distinct !DILexicalBlock(scope: !13823, file: !13282, line: 783, column: 3)
!13823 = distinct !DILexicalBlock(scope: !13803, file: !13282, line: 782, column: 6)
!13824 = !DILocation(line: 0, scope: !13803)
!13825 = !DILocation(line: 777, column: 3, scope: !13803)
!13826 = !DILocation(line: 777, column: 20, scope: !13803)
!13827 = !DILocation(line: 782, column: 15, scope: !13823)
!13828 = !DILocation(line: 782, column: 6, scope: !13803)
!13829 = !DILocation(line: 787, column: 5, scope: !13821)
!13830 = !DILocation(line: 787, column: 5, scope: !13822)
!13831 = !DILocation(line: 790, column: 21, scope: !13822)
!13832 = !DILocation(line: 790, column: 25, scope: !13822)
!13833 = !DILocation(line: 791, column: 21, scope: !13822)
!13834 = !DILocation(line: 791, column: 26, scope: !13822)
!13835 = !DILocation(line: 792, column: 21, scope: !13822)
!13836 = !DILocation(line: 792, column: 27, scope: !13822)
!13837 = !DILocation(line: 793, column: 21, scope: !13822)
!13838 = !DILocation(line: 793, column: 26, scope: !13822)
!13839 = !DILocation(line: 794, column: 21, scope: !13822)
!13840 = !DILocation(line: 794, column: 31, scope: !13822)
!13841 = !DILocation(line: 795, column: 5, scope: !13822)
!13842 = !DILocation(line: 798, column: 5, scope: !13822)
!13843 = !DILocation(line: 804, column: 3, scope: !13822)
!13844 = !DILocation(line: 830, column: 1, scope: !13803)
!13845 = !DISubprogram(name: "HAL_GPIO_Init", scope: !13812, file: !13812, line: 224, type: !13846, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!13846 = !DISubroutineType(types: !13847)
!13847 = !{null, !3180, !13848}
!13848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13811, size: 32)
!13849 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !13282, file: !13282, line: 841, type: !3297, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !639)
!13850 = !DILocation(line: 843, column: 38, scope: !13849)
!13851 = !DILocation(line: 844, column: 1, scope: !13849)
!13852 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !13282, file: !13282, line: 850, type: !3297, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !639)
!13853 = !DILocation(line: 852, column: 38, scope: !13852)
!13854 = !DILocation(line: 853, column: 1, scope: !13852)
!13855 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !13282, file: !13282, line: 941, type: !8391, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !639)
!13856 = !DILocation(line: 943, column: 10, scope: !13855)
!13857 = !DILocation(line: 943, column: 3, scope: !13855)
!13858 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !13282, file: !13282, line: 952, type: !8391, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !639)
!13859 = !DILocation(line: 955, column: 11, scope: !13858)
!13860 = !DILocation(line: 955, column: 56, scope: !13858)
!13861 = !DILocation(line: 955, column: 78, scope: !13858)
!13862 = !DILocation(line: 955, column: 36, scope: !13858)
!13863 = !DILocation(line: 955, column: 33, scope: !13858)
!13864 = !DILocation(line: 955, column: 3, scope: !13858)
!13865 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !13282, file: !13282, line: 964, type: !8391, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !639)
!13866 = !DILocation(line: 967, column: 11, scope: !13865)
!13867 = !DILocation(line: 967, column: 55, scope: !13865)
!13868 = !DILocation(line: 967, column: 77, scope: !13865)
!13869 = !DILocation(line: 967, column: 35, scope: !13865)
!13870 = !DILocation(line: 967, column: 32, scope: !13865)
!13871 = !DILocation(line: 967, column: 3, scope: !13865)
!13872 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !13282, file: !13282, line: 977, type: !13873, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13875)
!13873 = !DISubroutineType(types: !13874)
!13874 = !{null, !13290}
!13875 = !{!13876}
!13876 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !13872, file: !13282, line: 977, type: !13290)
!13877 = !DILocation(line: 0, scope: !13872)
!13878 = !DILocation(line: 980, column: 22, scope: !13872)
!13879 = !DILocation(line: 980, column: 37, scope: !13872)
!13880 = !DILocation(line: 983, column: 12, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13872, file: !13282, line: 983, column: 6)
!13882 = !DILocation(line: 983, column: 15, scope: !13881)
!13883 = !DILocation(line: 983, column: 31, scope: !13881)
!13884 = !DILocation(line: 983, column: 6, scope: !13872)
!13885 = !DILocation(line: 985, column: 24, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13881, file: !13282, line: 984, column: 3)
!13887 = !DILocation(line: 985, column: 33, scope: !13886)
!13888 = !DILocation(line: 986, column: 3, scope: !13886)
!13889 = !DILocation(line: 987, column: 17, scope: !13890)
!13890 = distinct !DILexicalBlock(scope: !13881, file: !13282, line: 987, column: 11)
!13891 = !DILocation(line: 987, column: 20, scope: !13890)
!13892 = !DILocation(line: 987, column: 35, scope: !13890)
!13893 = !DILocation(line: 0, scope: !13890)
!13894 = !DILocation(line: 987, column: 11, scope: !13881)
!13895 = !DILocation(line: 989, column: 33, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13890, file: !13282, line: 988, column: 3)
!13897 = !DILocation(line: 990, column: 3, scope: !13896)
!13898 = !DILocation(line: 993, column: 33, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13890, file: !13282, line: 992, column: 3)
!13900 = !DILocation(line: 997, column: 12, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13872, file: !13282, line: 997, column: 6)
!13902 = !DILocation(line: 997, column: 15, scope: !13901)
!13903 = !DILocation(line: 1003, column: 24, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13901, file: !13282, line: 1002, column: 3)
!13905 = !DILocation(line: 1003, column: 33, scope: !13904)
!13906 = !DILocation(line: 1006, column: 61, scope: !13872)
!13907 = !DILocation(line: 1006, column: 81, scope: !13872)
!13908 = !DILocation(line: 1006, column: 22, scope: !13872)
!13909 = !DILocation(line: 1006, column: 42, scope: !13872)
!13910 = !DILocation(line: 1009, column: 12, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13872, file: !13282, line: 1009, column: 6)
!13912 = !DILocation(line: 1009, column: 17, scope: !13911)
!13913 = !DILocation(line: 1009, column: 35, scope: !13911)
!13914 = !DILocation(line: 1009, column: 6, scope: !13872)
!13915 = !DILocation(line: 1011, column: 24, scope: !13916)
!13916 = distinct !DILexicalBlock(scope: !13911, file: !13282, line: 1010, column: 3)
!13917 = !DILocation(line: 1011, column: 33, scope: !13916)
!13918 = !DILocation(line: 1012, column: 3, scope: !13916)
!13919 = !DILocation(line: 1013, column: 17, scope: !13920)
!13920 = distinct !DILexicalBlock(scope: !13911, file: !13282, line: 1013, column: 11)
!13921 = !DILocation(line: 1013, column: 22, scope: !13920)
!13922 = !DILocation(line: 1013, column: 39, scope: !13920)
!13923 = !DILocation(line: 0, scope: !13920)
!13924 = !DILocation(line: 1013, column: 11, scope: !13911)
!13925 = !DILocation(line: 1015, column: 33, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13920, file: !13282, line: 1014, column: 3)
!13927 = !DILocation(line: 1016, column: 3, scope: !13926)
!13928 = !DILocation(line: 1019, column: 33, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13920, file: !13282, line: 1018, column: 3)
!13930 = !DILocation(line: 1023, column: 12, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13872, file: !13282, line: 1023, column: 6)
!13932 = !DILocation(line: 1023, column: 16, scope: !13931)
!13933 = !DILocation(line: 1029, column: 24, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13931, file: !13282, line: 1028, column: 3)
!13935 = !DILocation(line: 1029, column: 33, scope: !13934)
!13936 = !DILocation(line: 1033, column: 12, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13872, file: !13282, line: 1033, column: 6)
!13938 = !DILocation(line: 1033, column: 15, scope: !13937)
!13939 = !DILocation(line: 1033, column: 30, scope: !13937)
!13940 = !DILocation(line: 1033, column: 6, scope: !13872)
!13941 = !DILocation(line: 1039, column: 28, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13937, file: !13282, line: 1038, column: 3)
!13943 = !DILocation(line: 1039, column: 37, scope: !13942)
!13944 = !DILocation(line: 1041, column: 54, scope: !13872)
!13945 = !DILocation(line: 1041, column: 62, scope: !13872)
!13946 = !DILocation(line: 1041, column: 26, scope: !13872)
!13947 = !DILocation(line: 1041, column: 36, scope: !13872)
!13948 = !DILocation(line: 1042, column: 49, scope: !13872)
!13949 = !DILocation(line: 1042, column: 57, scope: !13872)
!13950 = !DILocation(line: 1042, column: 26, scope: !13872)
!13951 = !DILocation(line: 1042, column: 31, scope: !13872)
!13952 = !DILocation(line: 1043, column: 50, scope: !13872)
!13953 = !DILocation(line: 1043, column: 78, scope: !13872)
!13954 = !DILocation(line: 1043, column: 26, scope: !13872)
!13955 = !DILocation(line: 1043, column: 31, scope: !13872)
!13956 = !DILocation(line: 1044, column: 52, scope: !13872)
!13957 = !DILocation(line: 1044, column: 102, scope: !13872)
!13958 = !DILocation(line: 1044, column: 109, scope: !13872)
!13959 = !DILocation(line: 1044, column: 26, scope: !13872)
!13960 = !DILocation(line: 1044, column: 31, scope: !13872)
!13961 = !DILocation(line: 1045, column: 50, scope: !13872)
!13962 = !DILocation(line: 1045, column: 78, scope: !13872)
!13963 = !DILocation(line: 1045, column: 26, scope: !13872)
!13964 = !DILocation(line: 1045, column: 31, scope: !13872)
!13965 = !DILocation(line: 1046, column: 1, scope: !13872)
!13966 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !13282, file: !13282, line: 1056, type: !13967, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !13969)
!13967 = !DISubroutineType(types: !13968)
!13968 = !{null, !13651, !1027}
!13969 = !{!13970, !13971}
!13970 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !13966, file: !13282, line: 1056, type: !13651)
!13971 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !13966, file: !13282, line: 1056, type: !1027)
!13972 = !DILocation(line: 0, scope: !13966)
!13973 = !DILocation(line: 1059, column: 22, scope: !13966)
!13974 = !DILocation(line: 1059, column: 32, scope: !13966)
!13975 = !DILocation(line: 1062, column: 53, scope: !13966)
!13976 = !DILocation(line: 1062, column: 58, scope: !13966)
!13977 = !DILocation(line: 1062, column: 22, scope: !13966)
!13978 = !DILocation(line: 1062, column: 35, scope: !13966)
!13979 = !DILocation(line: 1065, column: 54, scope: !13966)
!13980 = !DILocation(line: 1065, column: 59, scope: !13966)
!13981 = !DILocation(line: 1065, column: 22, scope: !13966)
!13982 = !DILocation(line: 1065, column: 36, scope: !13966)
!13983 = !DILocation(line: 1068, column: 55, scope: !13966)
!13984 = !DILocation(line: 1068, column: 60, scope: !13966)
!13985 = !DILocation(line: 1068, column: 22, scope: !13966)
!13986 = !DILocation(line: 1068, column: 37, scope: !13966)
!13987 = !DILocation(line: 1071, column: 56, scope: !13966)
!13988 = !DILocation(line: 1071, column: 79, scope: !13966)
!13989 = !DILocation(line: 1071, column: 22, scope: !13966)
!13990 = !DILocation(line: 1071, column: 37, scope: !13966)
!13991 = !DILocation(line: 1074, column: 34, scope: !13966)
!13992 = !DILocation(line: 1074, column: 38, scope: !13966)
!13993 = !DILocation(line: 1074, column: 14, scope: !13966)
!13994 = !DILocation(line: 1075, column: 1, scope: !13966)
!13995 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !13282, file: !13282, line: 1082, type: !3297, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !639)
!13996 = !DILocation(line: 1085, column: 6, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13995, file: !13282, line: 1085, column: 6)
!13998 = !DILocation(line: 1085, column: 6, scope: !13995)
!13999 = !DILocation(line: 1088, column: 5, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13997, file: !13282, line: 1086, column: 3)
!14001 = !DILocation(line: 1091, column: 5, scope: !14000)
!14002 = !DILocation(line: 1092, column: 3, scope: !14000)
!14003 = !DILocation(line: 1093, column: 1, scope: !13995)
!14004 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !13282, file: !13282, line: 1099, type: !3297, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3108, retainedNodes: !639)
!14005 = !DILocation(line: 1104, column: 1, scope: !14004)
!14006 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !14007, file: !14007, line: 257, type: !8401, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14008)
!14007 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14008 = !{!14009}
!14009 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14006, file: !14007, line: 257, type: !208)
!14010 = !DILocation(line: 0, scope: !14006)
!14011 = !DILocation(line: 260, column: 3, scope: !14006)
!14012 = !DILocation(line: 261, column: 1, scope: !14006)
!14013 = distinct !DISubprogram(name: "LL_InitTick", scope: !14014, file: !14014, line: 260, type: !11679, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14015)
!14014 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14015 = !{!14016, !14017}
!14016 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14013, file: !14014, line: 260, type: !208)
!14017 = !DILocalVariable(name: "Ticks", arg: 2, scope: !14013, file: !14014, line: 260, type: !208)
!14018 = !DILocation(line: 0, scope: !14013)
!14019 = !DILocation(line: 263, column: 46, scope: !14013)
!14020 = !DILocation(line: 263, column: 55, scope: !14013)
!14021 = !DILocation(line: 263, column: 18, scope: !14013)
!14022 = !DILocation(line: 264, column: 18, scope: !14013)
!14023 = !DILocation(line: 265, column: 18, scope: !14013)
!14024 = !DILocation(line: 267, column: 1, scope: !14013)
!14025 = distinct !DISubprogram(name: "LL_mDelay", scope: !14007, file: !14007, line: 273, type: !8401, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14026)
!14026 = !{!14027, !14028}
!14027 = !DILocalVariable(name: "Delay", arg: 1, scope: !14025, file: !14007, line: 273, type: !208)
!14028 = !DILocalVariable(name: "tmp", scope: !14025, file: !14007, line: 275, type: !423)
!14029 = !DILocation(line: 0, scope: !14025)
!14030 = !DILocation(line: 275, column: 3, scope: !14025)
!14031 = !DILocation(line: 275, column: 18, scope: !14025)
!14032 = !DILocation(line: 275, column: 33, scope: !14025)
!14033 = !DILocation(line: 277, column: 10, scope: !14025)
!14034 = !DILocation(line: 280, column: 12, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !14025, file: !14007, line: 280, column: 6)
!14036 = !DILocation(line: 285, column: 3, scope: !14025)
!14037 = !DILocation(line: 287, column: 18, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !14007, line: 287, column: 8)
!14039 = distinct !DILexicalBlock(scope: !14025, file: !14007, line: 286, column: 3)
!14040 = !DILocation(line: 292, column: 1, scope: !14025)
!14041 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !14007, file: !14007, line: 323, type: !8401, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14042)
!14042 = !{!14043}
!14043 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !14041, file: !14007, line: 323, type: !208)
!14044 = !DILocation(line: 0, scope: !14041)
!14045 = !DILocation(line: 326, column: 19, scope: !14041)
!14046 = !DILocation(line: 327, column: 1, scope: !14041)
!14047 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !14007, file: !14007, line: 338, type: !14048, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14051)
!14048 = !DISubroutineType(types: !14049)
!14049 = !{!14050, !208}
!14050 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !973, line: 201, baseType: !972)
!14051 = !{!14052, !14053, !14054, !14055, !14056}
!14052 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !14047, file: !14007, line: 338, type: !208)
!14053 = !DILocalVariable(name: "timeout", scope: !14047, file: !14007, line: 340, type: !208)
!14054 = !DILocalVariable(name: "getlatency", scope: !14047, file: !14007, line: 341, type: !208)
!14055 = !DILocalVariable(name: "latency", scope: !14047, file: !14007, line: 342, type: !208)
!14056 = !DILocalVariable(name: "status", scope: !14047, file: !14007, line: 343, type: !14050)
!14057 = !DILocation(line: 0, scope: !14047)
!14058 = !DILocation(line: 347, column: 21, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14047, file: !14007, line: 347, column: 6)
!14060 = !DILocation(line: 347, column: 6, scope: !14047)
!14061 = !DILocation(line: 353, column: 8, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14063, file: !14007, line: 353, column: 8)
!14063 = distinct !DILexicalBlock(scope: !14059, file: !14007, line: 352, column: 3)
!14064 = !DILocation(line: 353, column: 40, scope: !14062)
!14065 = !DILocation(line: 353, column: 8, scope: !14063)
!14066 = !DILocation(line: 374, column: 55, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14068, file: !14007, line: 374, column: 10)
!14068 = distinct !DILexicalBlock(scope: !14062, file: !14007, line: 354, column: 5)
!14069 = !DILocation(line: 368, column: 26, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14068, file: !14007, line: 368, column: 10)
!14071 = !DILocation(line: 368, column: 55, scope: !14070)
!14072 = !DILocation(line: 380, column: 57, scope: !14073)
!14073 = distinct !DILexicalBlock(scope: !14074, file: !14007, line: 380, column: 12)
!14074 = distinct !DILexicalBlock(scope: !14067, file: !14007, line: 379, column: 7)
!14075 = !DILocation(line: 387, column: 8, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14063, file: !14007, line: 387, column: 8)
!14077 = !DILocation(line: 387, column: 40, scope: !14076)
!14078 = !DILocation(line: 387, column: 8, scope: !14063)
!14079 = !DILocation(line: 407, column: 26, scope: !14080)
!14080 = distinct !DILexicalBlock(scope: !14081, file: !14007, line: 407, column: 10)
!14081 = distinct !DILexicalBlock(scope: !14076, file: !14007, line: 388, column: 5)
!14082 = !DILocation(line: 407, column: 55, scope: !14080)
!14083 = !DILocation(line: 413, column: 28, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14085, file: !14007, line: 413, column: 12)
!14085 = distinct !DILexicalBlock(scope: !14080, file: !14007, line: 412, column: 7)
!14086 = !DILocation(line: 413, column: 57, scope: !14084)
!14087 = !DILocation(line: 0, scope: !14063)
!14088 = !DILocation(line: 420, column: 8, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14063, file: !14007, line: 420, column: 8)
!14090 = !DILocation(line: 420, column: 40, scope: !14089)
!14091 = !DILocation(line: 420, column: 8, scope: !14063)
!14092 = !DILocation(line: 429, column: 26, scope: !14093)
!14093 = distinct !DILexicalBlock(scope: !14094, file: !14007, line: 429, column: 10)
!14094 = distinct !DILexicalBlock(scope: !14089, file: !14007, line: 421, column: 5)
!14095 = !DILocation(line: 429, column: 55, scope: !14093)
!14096 = !DILocation(line: 435, column: 28, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14098, file: !14007, line: 435, column: 12)
!14098 = distinct !DILexicalBlock(scope: !14093, file: !14007, line: 434, column: 7)
!14099 = !DILocation(line: 435, column: 57, scope: !14097)
!14100 = !DILocation(line: 444, column: 5, scope: !14063)
!14101 = !DILocation(line: 448, column: 5, scope: !14063)
!14102 = !DILocation(line: 451, column: 18, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14063, file: !14007, line: 449, column: 5)
!14104 = !DILocation(line: 452, column: 12, scope: !14103)
!14105 = !DILocation(line: 453, column: 26, scope: !14063)
!14106 = !DILocation(line: 453, column: 38, scope: !14063)
!14107 = !DILocation(line: 453, column: 5, scope: !14103)
!14108 = distinct !{!14108, !14101, !14109}
!14109 = !DILocation(line: 453, column: 54, scope: !14063)
!14110 = !DILocation(line: 0, scope: !14059)
!14111 = !DILocation(line: 464, column: 3, scope: !14047)
!14112 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !14113, file: !14113, line: 519, type: !8391, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14113 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14114 = !DILocation(line: 521, column: 21, scope: !14112)
!14115 = !DILocation(line: 521, column: 3, scope: !14112)
!14116 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6864, file: !6864, line: 1543, type: !8401, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14117)
!14117 = !{!14118}
!14118 = !DILocalVariable(name: "Latency", arg: 1, scope: !14116, file: !6864, line: 1543, type: !208)
!14119 = !DILocation(line: 0, scope: !14116)
!14120 = !DILocation(line: 1545, column: 3, scope: !14116)
!14121 = !DILocation(line: 1546, column: 1, scope: !14116)
!14122 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6864, file: !6864, line: 1569, type: !8391, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14123 = !DILocation(line: 1571, column: 21, scope: !14122)
!14124 = !DILocation(line: 1571, column: 3, scope: !14122)
!14125 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !14007, file: !14007, line: 483, type: !14126, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14142)
!14126 = !DISubroutineType(types: !14127)
!14127 = !{!14050, !14128, !14135}
!14128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14129, size: 32)
!14129 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !14014, line: 114, baseType: !14130)
!14130 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14014, line: 94, size: 96, elements: !14131)
!14131 = !{!14132, !14133, !14134}
!14132 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !14130, file: !14014, line: 96, baseType: !208, size: 32)
!14133 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !14130, file: !14014, line: 102, baseType: !208, size: 32, offset: 32)
!14134 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !14130, file: !14014, line: 109, baseType: !208, size: 32, offset: 64)
!14135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14136, size: 32)
!14136 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !14014, line: 139, baseType: !14137)
!14137 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !14014, line: 119, size: 96, elements: !14138)
!14138 = !{!14139, !14140, !14141}
!14139 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !14137, file: !14014, line: 121, baseType: !208, size: 32)
!14140 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !14137, file: !14014, line: 127, baseType: !208, size: 32, offset: 32)
!14141 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !14137, file: !14014, line: 133, baseType: !208, size: 32, offset: 64)
!14142 = !{!14143, !14144, !14145, !14146}
!14143 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !14125, file: !14007, line: 483, type: !14128)
!14144 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14125, file: !14007, line: 484, type: !14135)
!14145 = !DILocalVariable(name: "status", scope: !14125, file: !14007, line: 486, type: !14050)
!14146 = !DILocalVariable(name: "pllfreq", scope: !14125, file: !14007, line: 487, type: !208)
!14147 = !DILocation(line: 0, scope: !14125)
!14148 = !DILocation(line: 490, column: 6, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14125, file: !14007, line: 490, column: 6)
!14150 = !DILocation(line: 490, column: 25, scope: !14149)
!14151 = !DILocation(line: 490, column: 6, scope: !14125)
!14152 = !DILocation(line: 493, column: 15, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14149, file: !14007, line: 491, column: 3)
!14154 = !DILocation(line: 496, column: 8, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14153, file: !14007, line: 496, column: 8)
!14156 = !DILocation(line: 496, column: 29, scope: !14155)
!14157 = !DILocation(line: 496, column: 8, scope: !14153)
!14158 = !DILocation(line: 498, column: 7, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14155, file: !14007, line: 497, column: 5)
!14160 = !DILocation(line: 499, column: 7, scope: !14159)
!14161 = !DILocation(line: 499, column: 14, scope: !14159)
!14162 = !DILocation(line: 499, column: 35, scope: !14159)
!14163 = distinct !{!14163, !14160, !14164}
!14164 = !DILocation(line: 502, column: 7, scope: !14159)
!14165 = !DILocation(line: 506, column: 76, scope: !14153)
!14166 = !DILocation(line: 506, column: 103, scope: !14153)
!14167 = !DILocation(line: 507, column: 54, scope: !14153)
!14168 = !DILocation(line: 506, column: 5, scope: !14153)
!14169 = !DILocation(line: 510, column: 14, scope: !14153)
!14170 = !DILocation(line: 511, column: 3, scope: !14153)
!14171 = !DILocation(line: 0, scope: !14149)
!14172 = !DILocation(line: 518, column: 3, scope: !14125)
!14173 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !14007, file: !14007, line: 642, type: !14174, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14176)
!14174 = !DISubroutineType(types: !14175)
!14175 = !{!14050}
!14176 = !{!14177}
!14177 = !DILocalVariable(name: "status", scope: !14173, file: !14007, line: 644, type: !14050)
!14178 = !DILocation(line: 0, scope: !14173)
!14179 = !DILocation(line: 647, column: 6, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14173, file: !14007, line: 647, column: 6)
!14181 = !DILocation(line: 647, column: 27, scope: !14180)
!14182 = !DILocation(line: 663, column: 6, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14173, file: !14007, line: 663, column: 6)
!14184 = !DILocation(line: 663, column: 30, scope: !14183)
!14185 = !DILocation(line: 663, column: 6, scope: !14173)
!14186 = !DILocation(line: 669, column: 3, scope: !14173)
!14187 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !14007, file: !14007, line: 611, type: !14188, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14190)
!14188 = !DISubroutineType(types: !14189)
!14189 = !{!208, !208, !14128}
!14190 = !{!14191, !14192, !14193}
!14191 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !14187, file: !14007, line: 611, type: !208)
!14192 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !14187, file: !14007, line: 611, type: !14128)
!14193 = !DILocalVariable(name: "pllfreq", scope: !14187, file: !14007, line: 613, type: !208)
!14194 = !DILocation(line: 0, scope: !14187)
!14195 = !DILocation(line: 622, column: 56, scope: !14187)
!14196 = !DILocation(line: 622, column: 61, scope: !14187)
!14197 = !DILocation(line: 622, column: 32, scope: !14187)
!14198 = !DILocation(line: 626, column: 45, scope: !14187)
!14199 = !DILocation(line: 626, column: 50, scope: !14187)
!14200 = !DILocation(line: 626, column: 21, scope: !14187)
!14201 = !DILocation(line: 630, column: 47, scope: !14187)
!14202 = !DILocation(line: 630, column: 82, scope: !14187)
!14203 = !DILocation(line: 630, column: 21, scope: !14187)
!14204 = !DILocation(line: 633, column: 3, scope: !14187)
!14205 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !10583, file: !10583, line: 3007, type: !8391, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14206 = !DILocation(line: 3009, column: 11, scope: !14205)
!14207 = !DILocation(line: 3009, column: 44, scope: !14205)
!14208 = !DILocation(line: 3009, column: 3, scope: !14205)
!14209 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !10583, file: !10583, line: 2987, type: !3297, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14210 = !DILocation(line: 2989, column: 3, scope: !14209)
!14211 = !DILocation(line: 2990, column: 1, scope: !14209)
!14212 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !10583, file: !10583, line: 4304, type: !10717, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14213)
!14213 = !{!14214, !14215, !14216, !14217}
!14214 = !DILocalVariable(name: "Source", arg: 1, scope: !14212, file: !10583, line: 4304, type: !208)
!14215 = !DILocalVariable(name: "PLLM", arg: 2, scope: !14212, file: !10583, line: 4304, type: !208)
!14216 = !DILocalVariable(name: "PLLN", arg: 3, scope: !14212, file: !10583, line: 4304, type: !208)
!14217 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !14212, file: !10583, line: 4304, type: !208)
!14218 = !DILocation(line: 0, scope: !14212)
!14219 = !DILocation(line: 4306, column: 3, scope: !14212)
!14220 = !DILocation(line: 4308, column: 3, scope: !14212)
!14221 = !DILocation(line: 4312, column: 1, scope: !14212)
!14222 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !14007, file: !14007, line: 681, type: !14223, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14225)
!14223 = !DISubroutineType(types: !14224)
!14224 = !{!14050, !208, !14135}
!14225 = !{!14226, !14227, !14228, !14229}
!14226 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !14222, file: !14007, line: 681, type: !208)
!14227 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !14222, file: !14007, line: 681, type: !14135)
!14228 = !DILocalVariable(name: "status", scope: !14222, file: !14007, line: 683, type: !14050)
!14229 = !DILocalVariable(name: "hclk_frequency", scope: !14222, file: !14007, line: 684, type: !208)
!14230 = !DILocation(line: 0, scope: !14222)
!14231 = !DILocation(line: 691, column: 20, scope: !14222)
!14232 = !DILocation(line: 694, column: 6, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14222, file: !14007, line: 694, column: 6)
!14234 = !DILocation(line: 694, column: 22, scope: !14233)
!14235 = !DILocation(line: 694, column: 6, scope: !14222)
!14236 = !DILocation(line: 697, column: 14, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14233, file: !14007, line: 695, column: 3)
!14238 = !DILocation(line: 701, column: 13, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14222, file: !14007, line: 701, column: 6)
!14240 = !DILocation(line: 701, column: 6, scope: !14222)
!14241 = !DILocation(line: 704, column: 5, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14239, file: !14007, line: 702, column: 3)
!14243 = !DILocation(line: 705, column: 5, scope: !14242)
!14244 = !DILocation(line: 705, column: 12, scope: !14242)
!14245 = !DILocation(line: 705, column: 33, scope: !14242)
!14246 = distinct !{!14246, !14243, !14247}
!14247 = !DILocation(line: 708, column: 5, scope: !14242)
!14248 = !DILocation(line: 711, column: 49, scope: !14242)
!14249 = !DILocation(line: 711, column: 5, scope: !14242)
!14250 = !DILocation(line: 712, column: 5, scope: !14242)
!14251 = !DILocation(line: 713, column: 5, scope: !14242)
!14252 = !DILocation(line: 713, column: 12, scope: !14242)
!14253 = !DILocation(line: 713, column: 37, scope: !14242)
!14254 = distinct !{!14254, !14251, !14255}
!14255 = !DILocation(line: 716, column: 5, scope: !14242)
!14256 = !DILocation(line: 719, column: 50, scope: !14242)
!14257 = !DILocation(line: 719, column: 5, scope: !14242)
!14258 = !DILocation(line: 720, column: 50, scope: !14242)
!14259 = !DILocation(line: 720, column: 5, scope: !14242)
!14260 = !DILocation(line: 721, column: 3, scope: !14242)
!14261 = !DILocation(line: 724, column: 6, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14222, file: !14007, line: 724, column: 6)
!14263 = !DILocation(line: 724, column: 22, scope: !14262)
!14264 = !DILocation(line: 724, column: 6, scope: !14222)
!14265 = !DILocation(line: 727, column: 14, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14262, file: !14007, line: 725, column: 3)
!14267 = !DILocation(line: 728, column: 3, scope: !14266)
!14268 = !DILocation(line: 731, column: 13, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14222, file: !14007, line: 731, column: 6)
!14270 = !DILocation(line: 731, column: 6, scope: !14222)
!14271 = !DILocation(line: 733, column: 5, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14269, file: !14007, line: 732, column: 3)
!14273 = !DILocation(line: 734, column: 3, scope: !14272)
!14274 = !DILocation(line: 736, column: 3, scope: !14222)
!14275 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !10583, file: !10583, line: 4184, type: !3297, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14276 = !DILocation(line: 4186, column: 3, scope: !14275)
!14277 = !DILocation(line: 4187, column: 1, scope: !14275)
!14278 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !10583, file: !10583, line: 4205, type: !8391, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14279 = !DILocation(line: 4207, column: 11, scope: !14278)
!14280 = !DILocation(line: 4207, column: 44, scope: !14278)
!14281 = !DILocation(line: 4207, column: 3, scope: !14278)
!14282 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !10583, file: !10583, line: 3224, type: !8401, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14283)
!14283 = !{!14284}
!14284 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14282, file: !10583, line: 3224, type: !208)
!14285 = !DILocation(line: 0, scope: !14282)
!14286 = !DILocation(line: 3226, column: 3, scope: !14282)
!14287 = !DILocation(line: 3227, column: 1, scope: !14282)
!14288 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !10583, file: !10583, line: 3188, type: !8401, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14289)
!14289 = !{!14290}
!14290 = !DILocalVariable(name: "Source", arg: 1, scope: !14288, file: !10583, line: 3188, type: !208)
!14291 = !DILocation(line: 0, scope: !14288)
!14292 = !DILocation(line: 3190, column: 3, scope: !14288)
!14293 = !DILocation(line: 3191, column: 1, scope: !14288)
!14294 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !10583, file: !10583, line: 3204, type: !8391, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14295 = !DILocation(line: 3206, column: 21, scope: !14294)
!14296 = !DILocation(line: 3206, column: 3, scope: !14294)
!14297 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !10583, file: !10583, line: 3240, type: !8401, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14298)
!14298 = !{!14299}
!14299 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14297, file: !10583, line: 3240, type: !208)
!14300 = !DILocation(line: 0, scope: !14297)
!14301 = !DILocation(line: 3242, column: 3, scope: !14297)
!14302 = !DILocation(line: 3243, column: 1, scope: !14297)
!14303 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !10583, file: !10583, line: 3256, type: !8401, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14304)
!14304 = !{!14305}
!14305 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !14303, file: !10583, line: 3256, type: !208)
!14306 = !DILocation(line: 0, scope: !14303)
!14307 = !DILocation(line: 3258, column: 3, scope: !14303)
!14308 = !DILocation(line: 3259, column: 1, scope: !14303)
!14309 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !10583, file: !10583, line: 5153, type: !8391, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14310 = !DILocation(line: 5155, column: 11, scope: !14309)
!14311 = !DILocation(line: 5155, column: 47, scope: !14309)
!14312 = !DILocation(line: 5155, column: 3, scope: !14309)
!14313 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !14007, file: !14007, line: 540, type: !14314, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !14316)
!14314 = !DISubroutineType(types: !14315)
!14315 = !{!14050, !208, !208, !14128, !14135}
!14316 = !{!14317, !14318, !14319, !14320, !14321, !14322}
!14317 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !14313, file: !14007, line: 540, type: !208)
!14318 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !14313, file: !14007, line: 540, type: !208)
!14319 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !14313, file: !14007, line: 541, type: !14128)
!14320 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !14313, file: !14007, line: 541, type: !14135)
!14321 = !DILocalVariable(name: "status", scope: !14313, file: !14007, line: 543, type: !14050)
!14322 = !DILocalVariable(name: "pllfreq", scope: !14313, file: !14007, line: 544, type: !208)
!14323 = !DILocation(line: 0, scope: !14313)
!14324 = !DILocation(line: 551, column: 6, scope: !14325)
!14325 = distinct !DILexicalBlock(scope: !14313, file: !14007, line: 551, column: 6)
!14326 = !DILocation(line: 551, column: 25, scope: !14325)
!14327 = !DILocation(line: 551, column: 6, scope: !14313)
!14328 = !DILocation(line: 554, column: 15, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14325, file: !14007, line: 552, column: 3)
!14330 = !DILocation(line: 557, column: 8, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14329, file: !14007, line: 557, column: 8)
!14332 = !DILocation(line: 557, column: 29, scope: !14331)
!14333 = !DILocation(line: 557, column: 8, scope: !14329)
!14334 = !DILocation(line: 560, column: 20, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14336, file: !14007, line: 560, column: 10)
!14336 = distinct !DILexicalBlock(scope: !14331, file: !14007, line: 558, column: 5)
!14337 = !DILocation(line: 560, column: 10, scope: !14336)
!14338 = !DILocation(line: 562, column: 9, scope: !14339)
!14339 = distinct !DILexicalBlock(scope: !14335, file: !14007, line: 561, column: 7)
!14340 = !DILocation(line: 563, column: 7, scope: !14339)
!14341 = !DILocation(line: 566, column: 9, scope: !14342)
!14342 = distinct !DILexicalBlock(scope: !14335, file: !14007, line: 565, column: 7)
!14343 = !DILocation(line: 570, column: 7, scope: !14336)
!14344 = !DILocation(line: 571, column: 7, scope: !14336)
!14345 = !DILocation(line: 571, column: 14, scope: !14336)
!14346 = !DILocation(line: 571, column: 35, scope: !14336)
!14347 = distinct !{!14347, !14344, !14348}
!14348 = !DILocation(line: 574, column: 7, scope: !14336)
!14349 = !DILocation(line: 578, column: 76, scope: !14329)
!14350 = !DILocation(line: 578, column: 103, scope: !14329)
!14351 = !DILocation(line: 579, column: 54, scope: !14329)
!14352 = !DILocation(line: 578, column: 5, scope: !14329)
!14353 = !DILocation(line: 582, column: 14, scope: !14329)
!14354 = !DILocation(line: 583, column: 3, scope: !14329)
!14355 = !DILocation(line: 0, scope: !14325)
!14356 = !DILocation(line: 590, column: 3, scope: !14313)
!14357 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !10583, file: !10583, line: 2969, type: !8391, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14358 = !DILocation(line: 2971, column: 11, scope: !14357)
!14359 = !DILocation(line: 2971, column: 44, scope: !14357)
!14360 = !DILocation(line: 2971, column: 3, scope: !14357)
!14361 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !10583, file: !10583, line: 2929, type: !3297, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14362 = !DILocation(line: 2931, column: 3, scope: !14361)
!14363 = !DILocation(line: 2932, column: 1, scope: !14361)
!14364 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !10583, file: !10583, line: 2939, type: !3297, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14365 = !DILocation(line: 2941, column: 3, scope: !14364)
!14366 = !DILocation(line: 2942, column: 1, scope: !14364)
!14367 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !10583, file: !10583, line: 2949, type: !3297, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3193, retainedNodes: !639)
!14368 = !DILocation(line: 2951, column: 3, scope: !14367)
!14369 = !DILocation(line: 2952, column: 1, scope: !14367)
!14370 = distinct !DISubprogram(name: "z_device_state_init", scope: !14371, file: !14371, line: 23, type: !3297, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14372)
!14371 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14372 = !{!14373}
!14373 = !DILocalVariable(name: "dev", scope: !14370, file: !14371, line: 25, type: !14374)
!14374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14375, size: 32)
!14375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14376)
!14376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !137, line: 378, size: 192, elements: !14377)
!14377 = !{!14378, !14379, !14380, !14381, !14387, !14388}
!14378 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !14376, file: !137, line: 380, baseType: !140, size: 32)
!14379 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !14376, file: !137, line: 382, baseType: !13, size: 32, offset: 32)
!14380 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !14376, file: !137, line: 384, baseType: !13, size: 32, offset: 64)
!14381 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !14376, file: !137, line: 386, baseType: !14382, size: 32, offset: 96)
!14382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14383, size: 32)
!14383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !137, line: 351, size: 16, elements: !14384)
!14384 = !{!14385, !14386}
!14385 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !14383, file: !137, line: 359, baseType: !150, size: 8)
!14386 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !14383, file: !137, line: 364, baseType: !153, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!14387 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !14376, file: !137, line: 388, baseType: !124, size: 32, offset: 128)
!14388 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !14376, file: !137, line: 396, baseType: !156, size: 32, offset: 160)
!14389 = !DILocation(line: 0, scope: !14370)
!14390 = !DILocation(line: 31, column: 1, scope: !14370)
!14391 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !14371, file: !14371, line: 33, type: !14392, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14394)
!14392 = !DISubroutineType(types: !14393)
!14393 = !{!14374, !140}
!14394 = !{!14395, !14396}
!14395 = !DILocalVariable(name: "name", arg: 1, scope: !14391, file: !14371, line: 33, type: !140)
!14396 = !DILocalVariable(name: "dev", scope: !14391, file: !14371, line: 35, type: !14374)
!14397 = !DILocation(line: 0, scope: !14391)
!14398 = !DILocation(line: 40, column: 12, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14391, file: !14371, line: 40, column: 6)
!14400 = !DILocation(line: 40, column: 21, scope: !14399)
!14401 = !DILocation(line: 40, column: 25, scope: !14399)
!14402 = !DILocation(line: 40, column: 33, scope: !14399)
!14403 = !DILocation(line: 40, column: 6, scope: !14391)
!14404 = !DILocation(line: 55, column: 2, scope: !14405)
!14405 = distinct !DILexicalBlock(scope: !14391, file: !14371, line: 55, column: 2)
!14406 = !DILocation(line: 50, column: 7, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14408, file: !14371, line: 50, column: 7)
!14408 = distinct !DILexicalBlock(scope: !14409, file: !14371, line: 49, column: 57)
!14409 = distinct !DILexicalBlock(scope: !14410, file: !14371, line: 49, column: 2)
!14410 = distinct !DILexicalBlock(scope: !14391, file: !14371, line: 49, column: 2)
!14411 = !DILocation(line: 50, column: 30, scope: !14407)
!14412 = !DILocation(line: 50, column: 39, scope: !14407)
!14413 = !DILocation(line: 50, column: 44, scope: !14407)
!14414 = !DILocation(line: 50, column: 7, scope: !14408)
!14415 = !DILocation(line: 49, column: 53, scope: !14409)
!14416 = !DILocation(line: 49, column: 33, scope: !14409)
!14417 = !DILocation(line: 49, column: 2, scope: !14410)
!14418 = distinct !{!14418, !14417, !14419}
!14419 = !DILocation(line: 53, column: 2, scope: !14410)
!14420 = !DILocation(line: 56, column: 7, scope: !14421)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !14371, line: 56, column: 7)
!14422 = distinct !DILexicalBlock(scope: !14423, file: !14371, line: 55, column: 57)
!14423 = distinct !DILexicalBlock(scope: !14405, file: !14371, line: 55, column: 2)
!14424 = !DILocation(line: 56, column: 30, scope: !14421)
!14425 = !DILocation(line: 56, column: 52, scope: !14421)
!14426 = !DILocation(line: 56, column: 34, scope: !14421)
!14427 = !DILocation(line: 56, column: 58, scope: !14421)
!14428 = !DILocation(line: 56, column: 7, scope: !14422)
!14429 = !DILocation(line: 55, column: 53, scope: !14423)
!14430 = !DILocation(line: 55, column: 33, scope: !14423)
!14431 = distinct !{!14431, !14404, !14432}
!14432 = !DILocation(line: 59, column: 2, scope: !14405)
!14433 = !DILocation(line: 62, column: 1, scope: !14391)
!14434 = distinct !DISubprogram(name: "z_device_is_ready", scope: !14371, file: !14371, line: 93, type: !14435, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14437)
!14435 = !DISubroutineType(types: !14436)
!14436 = !{!153, !14374}
!14437 = !{!14438}
!14438 = !DILocalVariable(name: "dev", arg: 1, scope: !14434, file: !14371, line: 93, type: !14374)
!14439 = !DILocation(line: 0, scope: !14434)
!14440 = !DILocation(line: 99, column: 10, scope: !14441)
!14441 = distinct !DILexicalBlock(scope: !14434, file: !14371, line: 99, column: 6)
!14442 = !DILocation(line: 99, column: 6, scope: !14434)
!14443 = !DILocation(line: 103, column: 14, scope: !14434)
!14444 = !DILocation(line: 103, column: 21, scope: !14434)
!14445 = !DILocation(line: 103, column: 33, scope: !14434)
!14446 = !DILocation(line: 103, column: 49, scope: !14434)
!14447 = !DILocation(line: 103, column: 58, scope: !14434)
!14448 = !DILocation(line: 104, column: 1, scope: !14434)
!14449 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !14371, file: !14371, line: 87, type: !14450, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14453)
!14450 = !DISubroutineType(types: !14451)
!14451 = !{!272, !14452}
!14452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14374, size: 32)
!14453 = !{!14454}
!14454 = !DILocalVariable(name: "devices", arg: 1, scope: !14449, file: !14371, line: 87, type: !14452)
!14455 = !DILocation(line: 0, scope: !14449)
!14456 = !DILocation(line: 89, column: 11, scope: !14449)
!14457 = !DILocation(line: 90, column: 2, scope: !14449)
!14458 = distinct !DISubprogram(name: "device_required_foreach", scope: !14371, file: !14371, line: 125, type: !14459, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14465)
!14459 = !DISubroutineType(types: !14460)
!14460 = !{!125, !14374, !14461, !124}
!14461 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !137, line: 471, baseType: !14462)
!14462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14463, size: 32)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{!125, !14374, !124}
!14465 = !{!14466, !14467, !14468, !14469, !14470}
!14466 = !DILocalVariable(name: "dev", arg: 1, scope: !14458, file: !14371, line: 125, type: !14374)
!14467 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14458, file: !14371, line: 126, type: !14461)
!14468 = !DILocalVariable(name: "context", arg: 3, scope: !14458, file: !14371, line: 127, type: !124)
!14469 = !DILocalVariable(name: "handle_count", scope: !14458, file: !14371, line: 129, type: !272)
!14470 = !DILocalVariable(name: "handles", scope: !14458, file: !14371, line: 130, type: !156)
!14471 = !DILocation(line: 0, scope: !14458)
!14472 = !DILocation(line: 129, column: 2, scope: !14458)
!14473 = !DILocation(line: 129, column: 9, scope: !14458)
!14474 = !DILocation(line: 130, column: 35, scope: !14458)
!14475 = !DILocation(line: 132, column: 33, scope: !14458)
!14476 = !DILocation(line: 132, column: 9, scope: !14458)
!14477 = !DILocation(line: 133, column: 1, scope: !14458)
!14478 = !DILocation(line: 132, column: 2, scope: !14458)
!14479 = distinct !DISubprogram(name: "device_required_handles_get", scope: !137, file: !137, line: 493, type: !14480, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14482)
!14480 = !DISubroutineType(types: !14481)
!14481 = !{!156, !14374, !2718}
!14482 = !{!14483, !14484, !14485, !14486}
!14483 = !DILocalVariable(name: "dev", arg: 1, scope: !14479, file: !137, line: 493, type: !14374)
!14484 = !DILocalVariable(name: "count", arg: 2, scope: !14479, file: !137, line: 493, type: !2718)
!14485 = !DILocalVariable(name: "rv", scope: !14479, file: !137, line: 495, type: !156)
!14486 = !DILocalVariable(name: "i", scope: !14487, file: !137, line: 498, type: !272)
!14487 = distinct !DILexicalBlock(scope: !14488, file: !137, line: 497, column: 18)
!14488 = distinct !DILexicalBlock(scope: !14479, file: !137, line: 497, column: 6)
!14489 = !DILocation(line: 0, scope: !14479)
!14490 = !DILocation(line: 495, column: 35, scope: !14479)
!14491 = !DILocation(line: 497, column: 9, scope: !14488)
!14492 = !DILocation(line: 497, column: 6, scope: !14479)
!14493 = !DILocation(line: 0, scope: !14487)
!14494 = !DILocation(line: 500, column: 11, scope: !14487)
!14495 = !DILocation(line: 500, column: 40, scope: !14487)
!14496 = !DILocation(line: 502, column: 4, scope: !14497)
!14497 = distinct !DILexicalBlock(scope: !14487, file: !137, line: 501, column: 40)
!14498 = distinct !{!14498, !14499, !14500}
!14499 = !DILocation(line: 500, column: 3, scope: !14487)
!14500 = !DILocation(line: 503, column: 3, scope: !14487)
!14501 = !DILocation(line: 504, column: 10, scope: !14487)
!14502 = !DILocation(line: 505, column: 2, scope: !14487)
!14503 = !DILocation(line: 507, column: 2, scope: !14479)
!14504 = distinct !DISubprogram(name: "device_visitor", scope: !14371, file: !14371, line: 106, type: !14505, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14507)
!14505 = !DISubroutineType(types: !14506)
!14506 = !{!125, !156, !272, !14461, !124}
!14507 = !{!14508, !14509, !14510, !14511, !14512, !14514, !14517, !14518}
!14508 = !DILocalVariable(name: "handles", arg: 1, scope: !14504, file: !14371, line: 106, type: !156)
!14509 = !DILocalVariable(name: "handle_count", arg: 2, scope: !14504, file: !14371, line: 107, type: !272)
!14510 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !14504, file: !14371, line: 108, type: !14461)
!14511 = !DILocalVariable(name: "context", arg: 4, scope: !14504, file: !14371, line: 109, type: !124)
!14512 = !DILocalVariable(name: "i", scope: !14513, file: !14371, line: 112, type: !272)
!14513 = distinct !DILexicalBlock(scope: !14504, file: !14371, line: 112, column: 2)
!14514 = !DILocalVariable(name: "dh", scope: !14515, file: !14371, line: 113, type: !158)
!14515 = distinct !DILexicalBlock(scope: !14516, file: !14371, line: 112, column: 44)
!14516 = distinct !DILexicalBlock(scope: !14513, file: !14371, line: 112, column: 2)
!14517 = !DILocalVariable(name: "rdev", scope: !14515, file: !14371, line: 114, type: !14374)
!14518 = !DILocalVariable(name: "rc", scope: !14515, file: !14371, line: 115, type: !125)
!14519 = !DILocation(line: 0, scope: !14504)
!14520 = !DILocation(line: 0, scope: !14513)
!14521 = !DILocation(line: 112, column: 23, scope: !14516)
!14522 = !DILocation(line: 112, column: 2, scope: !14513)
!14523 = distinct !{!14523, !14522, !14524}
!14524 = !DILocation(line: 120, column: 2, scope: !14513)
!14525 = !DILocation(line: 113, column: 24, scope: !14515)
!14526 = !DILocation(line: 0, scope: !14515)
!14527 = !DILocation(line: 114, column: 31, scope: !14515)
!14528 = !DILocation(line: 115, column: 12, scope: !14515)
!14529 = !DILocation(line: 117, column: 10, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14515, file: !14371, line: 117, column: 7)
!14531 = !DILocation(line: 112, column: 39, scope: !14516)
!14532 = !DILocation(line: 123, column: 1, scope: !14504)
!14533 = distinct !DISubprogram(name: "device_from_handle", scope: !137, file: !137, line: 439, type: !14534, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14536)
!14534 = !DISubroutineType(types: !14535)
!14535 = !{!14374, !158}
!14536 = !{!14537, !14538, !14539}
!14537 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !14533, file: !137, line: 439, type: !158)
!14538 = !DILocalVariable(name: "dev", scope: !14533, file: !137, line: 443, type: !14374)
!14539 = !DILocalVariable(name: "numdev", scope: !14533, file: !137, line: 444, type: !272)
!14540 = !DILocation(line: 0, scope: !14533)
!14541 = !DILocation(line: 446, column: 7, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14533, file: !137, line: 446, column: 6)
!14543 = !DILocation(line: 446, column: 18, scope: !14542)
!14544 = !DILocation(line: 446, column: 23, scope: !14542)
!14545 = !DILocation(line: 450, column: 2, scope: !14533)
!14546 = distinct !DISubprogram(name: "device_supported_foreach", scope: !14371, file: !14371, line: 135, type: !14459, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14547)
!14547 = !{!14548, !14549, !14550, !14551, !14552}
!14548 = !DILocalVariable(name: "dev", arg: 1, scope: !14546, file: !14371, line: 135, type: !14374)
!14549 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !14546, file: !14371, line: 136, type: !14461)
!14550 = !DILocalVariable(name: "context", arg: 3, scope: !14546, file: !14371, line: 137, type: !124)
!14551 = !DILocalVariable(name: "handle_count", scope: !14546, file: !14371, line: 139, type: !272)
!14552 = !DILocalVariable(name: "handles", scope: !14546, file: !14371, line: 140, type: !156)
!14553 = !DILocation(line: 0, scope: !14546)
!14554 = !DILocation(line: 139, column: 2, scope: !14546)
!14555 = !DILocation(line: 139, column: 9, scope: !14546)
!14556 = !DILocation(line: 140, column: 35, scope: !14546)
!14557 = !DILocation(line: 142, column: 33, scope: !14546)
!14558 = !DILocation(line: 142, column: 9, scope: !14546)
!14559 = !DILocation(line: 143, column: 1, scope: !14546)
!14560 = !DILocation(line: 142, column: 2, scope: !14546)
!14561 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !137, file: !137, line: 573, type: !14480, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3257, retainedNodes: !14562)
!14562 = !{!14563, !14564, !14565, !14566, !14567}
!14563 = !DILocalVariable(name: "dev", arg: 1, scope: !14561, file: !137, line: 573, type: !14374)
!14564 = !DILocalVariable(name: "count", arg: 2, scope: !14561, file: !137, line: 573, type: !2718)
!14565 = !DILocalVariable(name: "rv", scope: !14561, file: !137, line: 575, type: !156)
!14566 = !DILocalVariable(name: "region", scope: !14561, file: !137, line: 576, type: !272)
!14567 = !DILocalVariable(name: "i", scope: !14561, file: !137, line: 577, type: !272)
!14568 = !DILocation(line: 0, scope: !14561)
!14569 = !DILocation(line: 575, column: 35, scope: !14561)
!14570 = !DILocation(line: 579, column: 9, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !14561, file: !137, line: 579, column: 6)
!14572 = !DILocation(line: 579, column: 6, scope: !14561)
!14573 = !DILocation(line: 582, column: 8, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14575, file: !137, line: 582, column: 8)
!14575 = distinct !DILexicalBlock(scope: !14576, file: !137, line: 581, column: 23)
!14576 = distinct !DILexicalBlock(scope: !14571, file: !137, line: 579, column: 18)
!14577 = !DILocation(line: 582, column: 12, scope: !14574)
!14578 = !DILocation(line: 585, column: 6, scope: !14575)
!14579 = !DILocation(line: 0, scope: !14576)
!14580 = !DILocation(line: 581, column: 17, scope: !14576)
!14581 = !DILocation(line: 581, column: 3, scope: !14576)
!14582 = !DILocation(line: 588, column: 10, scope: !14576)
!14583 = !DILocation(line: 588, column: 16, scope: !14576)
!14584 = !DILocation(line: 589, column: 4, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14576, file: !137, line: 588, column: 39)
!14586 = !DILocation(line: 588, column: 3, scope: !14576)
!14587 = distinct !{!14587, !14586, !14588}
!14588 = !DILocation(line: 590, column: 3, scope: !14576)
!14589 = !DILocation(line: 591, column: 10, scope: !14576)
!14590 = !DILocation(line: 592, column: 2, scope: !14576)
!14591 = !DILocation(line: 575, column: 25, scope: !14561)
!14592 = !DILocation(line: 594, column: 2, scope: !14561)
!14593 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !2139, file: !2139, line: 49, type: !14594, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2136, retainedNodes: !639)
!14594 = !DISubroutineType(types: !14595)
!14595 = !{!387}
!14596 = !DILocation(line: 51, column: 10, scope: !14593)
!14597 = !DILocation(line: 51, column: 20, scope: !14593)
!14598 = !DILocation(line: 51, column: 2, scope: !14593)
!14599 = distinct !DISubprogram(name: "coredump", scope: !3264, file: !3264, line: 209, type: !14600, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14746)
!14600 = !DISubroutineType(types: !14601)
!14601 = !{null, !32, !14602, !14646}
!14602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14603, size: 32)
!14603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14604)
!14604 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2880, line: 141, baseType: !14605)
!14605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2880, line: 97, size: 256, elements: !14606)
!14606 = !{!14607}
!14607 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !14605, file: !2880, line: 107, baseType: !14608, size: 256)
!14608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2880, line: 98, size: 256, elements: !14609)
!14609 = !{!14610, !14615, !14620, !14625, !14630, !14635, !14640, !14645}
!14610 = !DIDerivedType(tag: DW_TAG_member, scope: !14608, file: !2880, line: 99, baseType: !14611, size: 32)
!14611 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14608, file: !2880, line: 99, size: 32, elements: !14612)
!14612 = !{!14613, !14614}
!14613 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !14611, file: !2880, line: 99, baseType: !208, size: 32)
!14614 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !14611, file: !2880, line: 99, baseType: !208, size: 32)
!14615 = !DIDerivedType(tag: DW_TAG_member, scope: !14608, file: !2880, line: 100, baseType: !14616, size: 32, offset: 32)
!14616 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14608, file: !2880, line: 100, size: 32, elements: !14617)
!14617 = !{!14618, !14619}
!14618 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !14616, file: !2880, line: 100, baseType: !208, size: 32)
!14619 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !14616, file: !2880, line: 100, baseType: !208, size: 32)
!14620 = !DIDerivedType(tag: DW_TAG_member, scope: !14608, file: !2880, line: 101, baseType: !14621, size: 32, offset: 64)
!14621 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14608, file: !2880, line: 101, size: 32, elements: !14622)
!14622 = !{!14623, !14624}
!14623 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !14621, file: !2880, line: 101, baseType: !208, size: 32)
!14624 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !14621, file: !2880, line: 101, baseType: !208, size: 32)
!14625 = !DIDerivedType(tag: DW_TAG_member, scope: !14608, file: !2880, line: 102, baseType: !14626, size: 32, offset: 96)
!14626 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14608, file: !2880, line: 102, size: 32, elements: !14627)
!14627 = !{!14628, !14629}
!14628 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !14626, file: !2880, line: 102, baseType: !208, size: 32)
!14629 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !14626, file: !2880, line: 102, baseType: !208, size: 32)
!14630 = !DIDerivedType(tag: DW_TAG_member, scope: !14608, file: !2880, line: 103, baseType: !14631, size: 32, offset: 128)
!14631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14608, file: !2880, line: 103, size: 32, elements: !14632)
!14632 = !{!14633, !14634}
!14633 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !14631, file: !2880, line: 103, baseType: !208, size: 32)
!14634 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !14631, file: !2880, line: 103, baseType: !208, size: 32)
!14635 = !DIDerivedType(tag: DW_TAG_member, scope: !14608, file: !2880, line: 104, baseType: !14636, size: 32, offset: 160)
!14636 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14608, file: !2880, line: 104, size: 32, elements: !14637)
!14637 = !{!14638, !14639}
!14638 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !14636, file: !2880, line: 104, baseType: !208, size: 32)
!14639 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !14636, file: !2880, line: 104, baseType: !208, size: 32)
!14640 = !DIDerivedType(tag: DW_TAG_member, scope: !14608, file: !2880, line: 105, baseType: !14641, size: 32, offset: 192)
!14641 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14608, file: !2880, line: 105, size: 32, elements: !14642)
!14642 = !{!14643, !14644}
!14643 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !14641, file: !2880, line: 105, baseType: !208, size: 32)
!14644 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !14641, file: !2880, line: 105, baseType: !208, size: 32)
!14645 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !14608, file: !2880, line: 106, baseType: !208, size: 32, offset: 224)
!14646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14647, size: 32)
!14647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !531, line: 245, size: 1024, elements: !14648)
!14648 = !{!14649, !14707, !14719, !14720, !14721, !14722, !14728, !14741}
!14649 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !14647, file: !531, line: 247, baseType: !14650, size: 384)
!14650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !531, line: 57, size: 384, elements: !14651)
!14651 = !{!14652, !14676, !14683, !14684, !14685, !14694, !14695, !14696}
!14652 = !DIDerivedType(tag: DW_TAG_member, scope: !14650, file: !531, line: 60, baseType: !14653, size: 64)
!14653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14650, file: !531, line: 60, size: 64, elements: !14654)
!14654 = !{!14655, !14670}
!14655 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !14653, file: !531, line: 61, baseType: !14656, size: 64)
!14656 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !541, line: 49, baseType: !14657)
!14657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !541, line: 37, size: 64, elements: !14658)
!14658 = !{!14659, !14665}
!14659 = !DIDerivedType(tag: DW_TAG_member, scope: !14657, file: !541, line: 38, baseType: !14660, size: 32)
!14660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14657, file: !541, line: 38, size: 32, elements: !14661)
!14661 = !{!14662, !14664}
!14662 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !14660, file: !541, line: 39, baseType: !14663, size: 32)
!14663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14657, size: 32)
!14664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !14660, file: !541, line: 40, baseType: !14663, size: 32)
!14665 = !DIDerivedType(tag: DW_TAG_member, scope: !14657, file: !541, line: 42, baseType: !14666, size: 32, offset: 32)
!14666 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14657, file: !541, line: 42, size: 32, elements: !14667)
!14667 = !{!14668, !14669}
!14668 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !14666, file: !541, line: 43, baseType: !14663, size: 32)
!14669 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !14666, file: !541, line: 44, baseType: !14663, size: 32)
!14670 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !14653, file: !531, line: 62, baseType: !14671, size: 64)
!14671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !557, line: 49, size: 64, elements: !14672)
!14672 = !{!14673}
!14673 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !14671, file: !557, line: 50, baseType: !14674, size: 64)
!14674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14675, size: 64, elements: !562)
!14675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14671, size: 32)
!14676 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !14650, file: !531, line: 68, baseType: !14677, size: 32, offset: 64)
!14677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14678, size: 32)
!14678 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !567, line: 233, baseType: !14679)
!14679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 231, size: 64, elements: !14680)
!14680 = !{!14681}
!14681 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !14679, file: !567, line: 232, baseType: !14682, size: 64)
!14682 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !541, line: 48, baseType: !14657)
!14683 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !14650, file: !531, line: 71, baseType: !150, size: 8, offset: 96)
!14684 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !14650, file: !531, line: 74, baseType: !150, size: 8, offset: 104)
!14685 = !DIDerivedType(tag: DW_TAG_member, scope: !14650, file: !531, line: 90, baseType: !14686, size: 16, offset: 112)
!14686 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !14650, file: !531, line: 90, size: 16, elements: !14687)
!14687 = !{!14688, !14693}
!14688 = !DIDerivedType(tag: DW_TAG_member, scope: !14686, file: !531, line: 91, baseType: !14689, size: 16)
!14689 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !14686, file: !531, line: 91, size: 16, elements: !14690)
!14690 = !{!14691, !14692}
!14691 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !14689, file: !531, line: 96, baseType: !581, size: 8)
!14692 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !14689, file: !531, line: 97, baseType: !150, size: 8, offset: 8)
!14693 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !14686, file: !531, line: 100, baseType: !227, size: 16)
!14694 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !14650, file: !531, line: 107, baseType: !208, size: 32, offset: 128)
!14695 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !14650, file: !531, line: 127, baseType: !124, size: 32, offset: 160)
!14696 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !14650, file: !531, line: 131, baseType: !14697, size: 192, offset: 192)
!14697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !567, line: 244, size: 192, elements: !14698)
!14698 = !{!14699, !14700, !14706}
!14699 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !14697, file: !567, line: 245, baseType: !14656, size: 64)
!14700 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !14697, file: !567, line: 246, baseType: !14701, size: 32, offset: 64)
!14701 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !567, line: 242, baseType: !14702)
!14702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14703, size: 32)
!14703 = !DISubroutineType(types: !14704)
!14704 = !{null, !14705}
!14705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14697, size: 32)
!14706 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !14697, file: !567, line: 249, baseType: !598, size: 64, offset: 128)
!14707 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !14647, file: !531, line: 250, baseType: !14708, size: 288, offset: 384)
!14708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !601, line: 25, size: 288, elements: !14709)
!14709 = !{!14710, !14711, !14712, !14713, !14714, !14715, !14716, !14717, !14718}
!14710 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !14708, file: !601, line: 26, baseType: !208, size: 32)
!14711 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !14708, file: !601, line: 27, baseType: !208, size: 32, offset: 32)
!14712 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !14708, file: !601, line: 28, baseType: !208, size: 32, offset: 64)
!14713 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !14708, file: !601, line: 29, baseType: !208, size: 32, offset: 96)
!14714 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !14708, file: !601, line: 30, baseType: !208, size: 32, offset: 128)
!14715 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !14708, file: !601, line: 31, baseType: !208, size: 32, offset: 160)
!14716 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !14708, file: !601, line: 32, baseType: !208, size: 32, offset: 192)
!14717 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !14708, file: !601, line: 33, baseType: !208, size: 32, offset: 224)
!14718 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !14708, file: !601, line: 34, baseType: !208, size: 32, offset: 256)
!14719 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !14647, file: !531, line: 253, baseType: !124, size: 32, offset: 672)
!14720 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !14647, file: !531, line: 256, baseType: !14678, size: 64, offset: 704)
!14721 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !14647, file: !531, line: 294, baseType: !125, size: 32, offset: 768)
!14722 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !14647, file: !531, line: 300, baseType: !14723, size: 96, offset: 800)
!14723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !531, line: 149, size: 96, elements: !14724)
!14724 = !{!14725, !14726, !14727}
!14725 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !14723, file: !531, line: 153, baseType: !22, size: 32)
!14726 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !14723, file: !531, line: 162, baseType: !272, size: 32, offset: 32)
!14727 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !14723, file: !531, line: 168, baseType: !272, size: 32, offset: 64)
!14728 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !14647, file: !531, line: 325, baseType: !14729, size: 32, offset: 896)
!14729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14730, size: 32)
!14730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !624, line: 5073, size: 160, elements: !14731)
!14731 = !{!14732, !14738, !14739}
!14732 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14730, file: !624, line: 5074, baseType: !14733, size: 96)
!14733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !628, line: 56, size: 96, elements: !14734)
!14734 = !{!14735, !14736, !14737}
!14735 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !14733, file: !628, line: 57, baseType: !631, size: 32)
!14736 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !14733, file: !628, line: 58, baseType: !124, size: 32, offset: 32)
!14737 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !14733, file: !628, line: 59, baseType: !272, size: 32, offset: 64)
!14738 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !14730, file: !624, line: 5075, baseType: !14678, size: 64, offset: 96)
!14739 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14730, file: !624, line: 5076, baseType: !14740, offset: 160)
!14740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !638, line: 43, elements: !639)
!14741 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !14647, file: !531, line: 343, baseType: !14742, size: 64, offset: 928)
!14742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !601, line: 60, size: 64, elements: !14743)
!14743 = !{!14744, !14745}
!14744 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !14742, file: !601, line: 63, baseType: !208, size: 32)
!14745 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !14742, file: !601, line: 66, baseType: !208, size: 32, offset: 32)
!14746 = !{!14747, !14748, !14749}
!14747 = !DILocalVariable(name: "reason", arg: 1, scope: !14599, file: !3264, line: 209, type: !32)
!14748 = !DILocalVariable(name: "esf", arg: 2, scope: !14599, file: !3264, line: 209, type: !14602)
!14749 = !DILocalVariable(name: "thread", arg: 3, scope: !14599, file: !3264, line: 210, type: !14646)
!14750 = !DILocation(line: 0, scope: !14599)
!14751 = !DILocation(line: 212, column: 1, scope: !14599)
!14752 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3264, file: !3264, line: 214, type: !14753, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14755)
!14753 = !DISubroutineType(types: !14754)
!14754 = !{null, !22, !22}
!14755 = !{!14756, !14757}
!14756 = !DILocalVariable(name: "start_addr", arg: 1, scope: !14752, file: !3264, line: 214, type: !22)
!14757 = !DILocalVariable(name: "end_addr", arg: 2, scope: !14752, file: !3264, line: 214, type: !22)
!14758 = !DILocation(line: 0, scope: !14752)
!14759 = !DILocation(line: 216, column: 1, scope: !14752)
!14760 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3264, file: !3264, line: 218, type: !14761, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14763)
!14761 = !DISubroutineType(types: !14762)
!14762 = !{null, !184, !272}
!14763 = !{!14764, !14765}
!14764 = !DILocalVariable(name: "buf", arg: 1, scope: !14760, file: !3264, line: 218, type: !184)
!14765 = !DILocalVariable(name: "buflen", arg: 2, scope: !14760, file: !3264, line: 218, type: !272)
!14766 = !DILocation(line: 0, scope: !14760)
!14767 = !DILocation(line: 220, column: 1, scope: !14760)
!14768 = distinct !DISubprogram(name: "coredump_query", scope: !3264, file: !3264, line: 222, type: !14769, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14771)
!14769 = !DISubroutineType(types: !14770)
!14770 = !{!125, !3263, !124}
!14771 = !{!14772, !14773}
!14772 = !DILocalVariable(name: "query_id", arg: 1, scope: !14768, file: !3264, line: 222, type: !3263)
!14773 = !DILocalVariable(name: "arg", arg: 2, scope: !14768, file: !3264, line: 222, type: !124)
!14774 = !DILocation(line: 0, scope: !14768)
!14775 = !DILocation(line: 224, column: 2, scope: !14768)
!14776 = distinct !DISubprogram(name: "coredump_cmd", scope: !3264, file: !3264, line: 227, type: !14777, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14779)
!14777 = !DISubroutineType(types: !14778)
!14778 = !{!125, !3270, !124}
!14779 = !{!14780, !14781}
!14780 = !DILocalVariable(name: "query_id", arg: 1, scope: !14776, file: !3264, line: 227, type: !3270)
!14781 = !DILocalVariable(name: "arg", arg: 2, scope: !14776, file: !3264, line: 227, type: !124)
!14782 = !DILocation(line: 0, scope: !14776)
!14783 = !DILocation(line: 229, column: 2, scope: !14776)
!14784 = distinct !DISubprogram(name: "arch_system_halt", scope: !14785, file: !14785, line: 23, type: !6854, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14786)
!14785 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!14786 = !{!14787}
!14787 = !DILocalVariable(name: "reason", arg: 1, scope: !14784, file: !14785, line: 23, type: !32)
!14788 = !DILocation(line: 0, scope: !14784)
!14789 = !DILocation(line: 55, column: 2, scope: !14790, inlinedAt: !14794)
!14790 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6843, file: !6843, line: 42, type: !6844, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14791)
!14791 = !{!14792, !14793}
!14792 = !DILocalVariable(name: "key", scope: !14790, file: !6843, line: 44, type: !32)
!14793 = !DILocalVariable(name: "tmp", scope: !14790, file: !6843, line: 53, type: !32)
!14794 = distinct !DILocation(line: 31, column: 8, scope: !14784)
!14795 = !{i64 2242535}
!14796 = !DILocation(line: 0, scope: !14790, inlinedAt: !14794)
!14797 = !DILocation(line: 32, column: 2, scope: !14784)
!14798 = !DILocation(line: 32, column: 2, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14800, file: !14785, line: 32, column: 2)
!14800 = distinct !DILexicalBlock(scope: !14784, file: !14785, line: 32, column: 2)
!14801 = distinct !{!14801, !14802, !14803}
!14802 = !DILocation(line: 32, column: 2, scope: !14800)
!14803 = !DILocation(line: 34, column: 2, scope: !14800)
!14804 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !14785, file: !14785, line: 39, type: !14805, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14807)
!14805 = !DISubroutineType(types: !14806)
!14806 = !{null, !32, !14602}
!14807 = !{!14808, !14809}
!14808 = !DILocalVariable(name: "reason", arg: 1, scope: !14804, file: !14785, line: 39, type: !32)
!14809 = !DILocalVariable(name: "esf", arg: 2, scope: !14804, file: !14785, line: 40, type: !14602)
!14810 = !DILocation(line: 0, scope: !14804)
!14811 = !DILocation(line: 45, column: 2, scope: !14812)
!14812 = distinct !DILexicalBlock(scope: !14813, file: !14785, line: 45, column: 2)
!14813 = distinct !DILexicalBlock(scope: !14814, file: !14785, line: 45, column: 2)
!14814 = distinct !DILexicalBlock(scope: !14815, file: !14785, line: 45, column: 2)
!14815 = distinct !DILexicalBlock(scope: !14804, file: !14785, line: 45, column: 2)
!14816 = !DILocation(line: 46, column: 2, scope: !14804)
!14817 = distinct !DISubprogram(name: "k_fatal_halt", scope: !14785, file: !14785, line: 81, type: !6854, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14818)
!14818 = !{!14819}
!14819 = !DILocalVariable(name: "reason", arg: 1, scope: !14817, file: !14785, line: 81, type: !32)
!14820 = !DILocation(line: 0, scope: !14817)
!14821 = !DILocation(line: 83, column: 2, scope: !14817)
!14822 = distinct !DISubprogram(name: "z_fatal_error", scope: !14785, file: !14785, line: 96, type: !14805, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14823)
!14823 = !{!14824, !14825, !14826, !14827}
!14824 = !DILocalVariable(name: "reason", arg: 1, scope: !14822, file: !14785, line: 96, type: !32)
!14825 = !DILocalVariable(name: "esf", arg: 2, scope: !14822, file: !14785, line: 96, type: !14602)
!14826 = !DILocalVariable(name: "key", scope: !14822, file: !14785, line: 102, type: !32)
!14827 = !DILocalVariable(name: "thread", scope: !14822, file: !14785, line: 103, type: !14646)
!14828 = !DILocation(line: 0, scope: !14822)
!14829 = !DILocation(line: 55, column: 2, scope: !14790, inlinedAt: !14830)
!14830 = distinct !DILocation(line: 102, column: 21, scope: !14822)
!14831 = !DILocation(line: 0, scope: !14790, inlinedAt: !14830)
!14832 = !DILocation(line: 104, column: 4, scope: !14822)
!14833 = !DILocation(line: 109, column: 2, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14835, file: !14785, line: 109, column: 2)
!14835 = distinct !DILexicalBlock(scope: !14836, file: !14785, line: 109, column: 2)
!14836 = distinct !DILexicalBlock(scope: !14837, file: !14785, line: 109, column: 2)
!14837 = distinct !DILexicalBlock(scope: !14822, file: !14785, line: 109, column: 2)
!14838 = !DILocation(line: 119, column: 11, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14822, file: !14785, line: 119, column: 6)
!14840 = !DILocation(line: 119, column: 20, scope: !14839)
!14841 = !DILocalVariable(name: "esf", arg: 1, scope: !14842, file: !9328, line: 71, type: !14602)
!14842 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !9328, file: !9328, line: 71, type: !14843, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14845)
!14843 = !DISubroutineType(types: !14844)
!14844 = !{!153, !14602}
!14845 = !{!14841}
!14846 = !DILocation(line: 0, scope: !14842, inlinedAt: !14847)
!14847 = distinct !DILocation(line: 119, column: 23, scope: !14839)
!14848 = !DILocation(line: 73, column: 21, scope: !14842, inlinedAt: !14847)
!14849 = !DILocation(line: 73, column: 26, scope: !14842, inlinedAt: !14847)
!14850 = !DILocation(line: 73, column: 9, scope: !14842, inlinedAt: !14847)
!14851 = !DILocation(line: 119, column: 6, scope: !14822)
!14852 = !DILocation(line: 120, column: 3, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14854, file: !14785, line: 120, column: 3)
!14854 = distinct !DILexicalBlock(scope: !14855, file: !14785, line: 120, column: 3)
!14855 = distinct !DILexicalBlock(scope: !14856, file: !14785, line: 120, column: 3)
!14856 = distinct !DILexicalBlock(scope: !14857, file: !14785, line: 120, column: 3)
!14857 = distinct !DILexicalBlock(scope: !14839, file: !14785, line: 119, column: 57)
!14858 = !DILocation(line: 121, column: 2, scope: !14857)
!14859 = !DILocation(line: 124, column: 2, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14861, file: !14785, line: 124, column: 2)
!14861 = distinct !DILexicalBlock(scope: !14862, file: !14785, line: 124, column: 2)
!14862 = distinct !DILexicalBlock(scope: !14863, file: !14785, line: 124, column: 2)
!14863 = distinct !DILexicalBlock(scope: !14822, file: !14785, line: 124, column: 2)
!14864 = !DILocation(line: 131, column: 2, scope: !14822)
!14865 = !DILocation(line: 0, scope: !14842, inlinedAt: !14866)
!14866 = distinct !DILocation(line: 151, column: 24, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14868, file: !14785, line: 151, column: 7)
!14868 = distinct !DILexicalBlock(scope: !14869, file: !14785, line: 146, column: 32)
!14869 = distinct !DILexicalBlock(scope: !14822, file: !14785, line: 146, column: 6)
!14870 = !DILocation(line: 151, column: 7, scope: !14868)
!14871 = !DILocation(line: 151, column: 21, scope: !14867)
!14872 = !DILocalVariable(name: "key", arg: 1, scope: !14873, file: !6843, line: 84, type: !32)
!14873 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6843, file: !6843, line: 84, type: !6854, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14874)
!14874 = !{!14872}
!14875 = !DILocation(line: 0, scope: !14873, inlinedAt: !14876)
!14876 = distinct !DILocation(line: 186, column: 2, scope: !14822)
!14877 = !DILocation(line: 95, column: 2, scope: !14873, inlinedAt: !14876)
!14878 = !{i64 2243352}
!14879 = !DILocation(line: 189, column: 3, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !14785, line: 188, column: 41)
!14881 = distinct !DILexicalBlock(scope: !14822, file: !14785, line: 188, column: 6)
!14882 = !DILocation(line: 191, column: 1, scope: !14822)
!14883 = distinct !DISubprogram(name: "k_current_get", scope: !624, file: !624, line: 530, type: !14884, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !639)
!14884 = !DISubroutineType(types: !14885)
!14885 = !{!14886}
!14886 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !14646)
!14887 = !DILocation(line: 535, column: 9, scope: !14883)
!14888 = !DILocation(line: 535, column: 2, scope: !14883)
!14889 = distinct !DISubprogram(name: "reason_to_str", scope: !14785, file: !14785, line: 62, type: !14890, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14892)
!14890 = !DISubroutineType(types: !14891)
!14891 = !{!140, !32}
!14892 = !{!14893}
!14893 = !DILocalVariable(name: "reason", arg: 1, scope: !14889, file: !14785, line: 62, type: !32)
!14894 = !DILocation(line: 0, scope: !14889)
!14895 = !DILocation(line: 64, column: 2, scope: !14889)
!14896 = !DILocation(line: 0, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14889, file: !14785, line: 64, column: 18)
!14898 = !DILocation(line: 78, column: 1, scope: !14889)
!14899 = distinct !DISubprogram(name: "thread_name_get", scope: !14785, file: !14785, line: 51, type: !14900, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14902)
!14900 = !DISubroutineType(types: !14901)
!14901 = !{!140, !14646}
!14902 = !{!14903, !14904}
!14903 = !DILocalVariable(name: "thread", arg: 1, scope: !14899, file: !14785, line: 51, type: !14646)
!14904 = !DILocalVariable(name: "thread_name", scope: !14899, file: !14785, line: 53, type: !140)
!14905 = !DILocation(line: 0, scope: !14899)
!14906 = !DILocation(line: 53, column: 36, scope: !14899)
!14907 = !DILocation(line: 53, column: 28, scope: !14899)
!14908 = !DILocation(line: 53, column: 47, scope: !14899)
!14909 = !DILocation(line: 55, column: 19, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14899, file: !14785, line: 55, column: 6)
!14911 = !DILocation(line: 55, column: 28, scope: !14910)
!14912 = !DILocation(line: 55, column: 32, scope: !14910)
!14913 = !DILocation(line: 55, column: 47, scope: !14910)
!14914 = !DILocation(line: 55, column: 6, scope: !14899)
!14915 = !DILocation(line: 57, column: 2, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14910, file: !14785, line: 55, column: 57)
!14917 = !DILocation(line: 59, column: 2, scope: !14899)
!14918 = distinct !DISubprogram(name: "k_thread_abort", scope: !5369, file: !5369, line: 188, type: !14919, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !14921)
!14919 = !DISubroutineType(types: !14920)
!14920 = !{null, !14886}
!14921 = !{!14922}
!14922 = !DILocalVariable(name: "thread", arg: 1, scope: !14918, file: !5369, line: 188, type: !14886)
!14923 = !DILocation(line: 0, scope: !14918)
!14924 = !DILocation(line: 197, column: 2, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14918, file: !5369, line: 197, column: 2)
!14926 = !{i64 2154743314}
!14927 = !DILocation(line: 198, column: 2, scope: !14918)
!14928 = !DILocation(line: 199, column: 1, scope: !14918)
!14929 = distinct !DISubprogram(name: "z_current_get", scope: !5369, file: !5369, line: 173, type: !14884, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3260, retainedNodes: !639)
!14930 = !DILocation(line: 180, column: 2, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14929, file: !5369, line: 180, column: 2)
!14932 = !{i64 2154743246}
!14933 = !DILocation(line: 181, column: 9, scope: !14929)
!14934 = !DILocation(line: 181, column: 2, scope: !14929)
!14935 = distinct !DISubprogram(name: "z_early_memset", scope: !2147, file: !2147, line: 108, type: !14936, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14938)
!14936 = !DISubroutineType(types: !14937)
!14937 = !{null, !124, !125, !272}
!14938 = !{!14939, !14940, !14941}
!14939 = !DILocalVariable(name: "dst", arg: 1, scope: !14935, file: !2147, line: 108, type: !124)
!14940 = !DILocalVariable(name: "c", arg: 2, scope: !14935, file: !2147, line: 108, type: !125)
!14941 = !DILocalVariable(name: "n", arg: 3, scope: !14935, file: !2147, line: 108, type: !272)
!14942 = !DILocation(line: 0, scope: !14935)
!14943 = !DILocation(line: 110, column: 9, scope: !14935)
!14944 = !DILocation(line: 111, column: 1, scope: !14935)
!14945 = distinct !DISubprogram(name: "z_early_memcpy", scope: !2147, file: !2147, line: 121, type: !14946, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14948)
!14946 = !DISubroutineType(types: !14947)
!14947 = !{null, !124, !13, !272}
!14948 = !{!14949, !14950, !14951}
!14949 = !DILocalVariable(name: "dst", arg: 1, scope: !14945, file: !2147, line: 121, type: !124)
!14950 = !DILocalVariable(name: "src", arg: 2, scope: !14945, file: !2147, line: 121, type: !13)
!14951 = !DILocalVariable(name: "n", arg: 3, scope: !14945, file: !2147, line: 121, type: !272)
!14952 = !DILocation(line: 0, scope: !14945)
!14953 = !DILocation(line: 123, column: 9, scope: !14945)
!14954 = !DILocation(line: 124, column: 1, scope: !14945)
!14955 = distinct !DISubprogram(name: "z_bss_zero", scope: !2147, file: !2147, line: 132, type: !3297, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !639)
!14956 = !DILocation(line: 143, column: 2, scope: !14955)
!14957 = !DILocation(line: 168, column: 1, scope: !14955)
!14958 = distinct !DISubprogram(name: "z_init_cpu", scope: !2147, file: !2147, line: 372, type: !10192, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14959)
!14959 = !{!14960}
!14960 = !DILocalVariable(name: "id", arg: 1, scope: !14958, file: !2147, line: 372, type: !125)
!14961 = !DILocation(line: 0, scope: !14958)
!14962 = !DILocation(line: 374, column: 2, scope: !14958)
!14963 = !DILocation(line: 375, column: 34, scope: !14958)
!14964 = !DILocation(line: 375, column: 19, scope: !14958)
!14965 = !DILocation(line: 375, column: 31, scope: !14958)
!14966 = !DILocation(line: 376, column: 24, scope: !14958)
!14967 = !DILocation(line: 376, column: 19, scope: !14958)
!14968 = !DILocation(line: 376, column: 22, scope: !14958)
!14969 = !DILocation(line: 378, column: 26, scope: !14958)
!14970 = !DILocation(line: 378, column: 4, scope: !14958)
!14971 = !DILocation(line: 378, column: 50, scope: !14958)
!14972 = !DILocation(line: 377, column: 19, scope: !14958)
!14973 = !DILocation(line: 377, column: 29, scope: !14958)
!14974 = !DILocation(line: 384, column: 1, scope: !14958)
!14975 = distinct !DISubprogram(name: "init_idle_thread", scope: !2147, file: !2147, line: 343, type: !10192, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14976)
!14976 = !{!14977, !14978, !14979, !14982}
!14977 = !DILocalVariable(name: "i", arg: 1, scope: !14975, file: !2147, line: 343, type: !125)
!14978 = !DILocalVariable(name: "thread", scope: !14975, file: !2147, line: 345, type: !2239)
!14979 = !DILocalVariable(name: "stack", scope: !14975, file: !2147, line: 346, type: !14980)
!14980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14981, size: 32)
!14981 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5248, line: 44, baseType: !2353)
!14982 = !DILocalVariable(name: "tname", scope: !14975, file: !2147, line: 358, type: !393)
!14983 = !DILocation(line: 0, scope: !14975)
!14984 = !DILocation(line: 345, column: 29, scope: !14975)
!14985 = !DILocation(line: 346, column: 28, scope: !14975)
!14986 = !DILocation(line: 362, column: 37, scope: !14975)
!14987 = !DILocation(line: 362, column: 36, scope: !14975)
!14988 = !DILocation(line: 361, column: 2, scope: !14975)
!14989 = !DILocation(line: 365, column: 2, scope: !14975)
!14990 = !DILocation(line: 370, column: 1, scope: !14975)
!14991 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2354, file: !2354, line: 331, type: !14992, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !14994)
!14992 = !DISubroutineType(types: !14993)
!14993 = !{!393, !14980}
!14994 = !{!14995}
!14995 = !DILocalVariable(name: "sym", arg: 1, scope: !14991, file: !2354, line: 331, type: !14980)
!14996 = !DILocation(line: 0, scope: !14991)
!14997 = !DILocation(line: 333, column: 21, scope: !14991)
!14998 = !DILocation(line: 333, column: 2, scope: !14991)
!14999 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15000, file: !15000, line: 155, type: !15001, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15003)
!15000 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15001 = !DISubroutineType(types: !15002)
!15002 = !{null, !2239}
!15003 = !{!15004}
!15004 = !DILocalVariable(name: "thread", arg: 1, scope: !14999, file: !15000, line: 155, type: !2239)
!15005 = !DILocation(line: 0, scope: !14999)
!15006 = !DILocation(line: 157, column: 15, scope: !14999)
!15007 = !DILocation(line: 157, column: 28, scope: !14999)
!15008 = !DILocation(line: 158, column: 1, scope: !14999)
!15009 = distinct !DISubprogram(name: "z_cstart", scope: !2147, file: !2147, line: 501, type: !3297, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15010)
!15010 = !{!15011}
!15011 = !DILocalVariable(name: "dummy_thread", scope: !15009, file: !2147, line: 518, type: !2240)
!15012 = !DILocation(line: 507, column: 2, scope: !15009)
!15013 = !DILocation(line: 43, column: 14, scope: !15014, inlinedAt: !15018)
!15014 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !15015, file: !15015, line: 40, type: !3297, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15016)
!15015 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15016 = !{!15017}
!15017 = !DILocalVariable(name: "msp", scope: !15014, file: !15015, line: 42, type: !208)
!15018 = distinct !DILocation(line: 44, column: 2, scope: !15019, inlinedAt: !15021)
!15019 = distinct !DISubprogram(name: "arch_kernel_init", scope: !15020, file: !15020, line: 42, type: !3297, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !639)
!15020 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15021 = distinct !DILocation(line: 510, column: 2, scope: !15009)
!15022 = !DILocation(line: 43, column: 3, scope: !15014, inlinedAt: !15018)
!15023 = !DILocation(line: 43, column: 60, scope: !15014, inlinedAt: !15018)
!15024 = !DILocation(line: 0, scope: !15014, inlinedAt: !15018)
!15025 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !15026, file: !8310, line: 1153, type: !208)
!15026 = distinct !DISubprogram(name: "__set_MSP", scope: !8310, file: !8310, line: 1153, type: !8401, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15027)
!15027 = !{!15025}
!15028 = !DILocation(line: 0, scope: !15026, inlinedAt: !15029)
!15029 = distinct !DILocation(line: 46, column: 2, scope: !15014, inlinedAt: !15018)
!15030 = !DILocation(line: 1155, column: 3, scope: !15026, inlinedAt: !15029)
!15031 = !{i64 3516911}
!15032 = !DILocation(line: 62, column: 11, scope: !15014, inlinedAt: !15018)
!15033 = !DILocation(line: 102, column: 2, scope: !15034, inlinedAt: !15035)
!15034 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !9328, file: !9328, line: 97, type: !3297, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !639)
!15035 = distinct !DILocation(line: 45, column: 2, scope: !15019, inlinedAt: !15021)
!15036 = !DILocation(line: 108, column: 2, scope: !15034, inlinedAt: !15035)
!15037 = !DILocation(line: 112, column: 2, scope: !15034, inlinedAt: !15035)
!15038 = !DILocation(line: 113, column: 2, scope: !15034, inlinedAt: !15035)
!15039 = !DILocation(line: 114, column: 2, scope: !15034, inlinedAt: !15035)
!15040 = !DILocation(line: 116, column: 2, scope: !15034, inlinedAt: !15035)
!15041 = !DILocation(line: 123, column: 13, scope: !15034, inlinedAt: !15035)
!15042 = !DILocation(line: 46, column: 2, scope: !15019, inlinedAt: !15021)
!15043 = !DILocation(line: 47, column: 2, scope: !15019, inlinedAt: !15021)
!15044 = !DILocation(line: 174, column: 12, scope: !15045, inlinedAt: !15046)
!15045 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !9328, file: !9328, line: 169, type: !3297, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !639)
!15046 = distinct !DILocation(line: 48, column: 2, scope: !15019, inlinedAt: !15021)
!15047 = !DILocation(line: 179, column: 12, scope: !15045, inlinedAt: !15046)
!15048 = !DILocation(line: 50, column: 2, scope: !15019, inlinedAt: !15021)
!15049 = !DILocation(line: 57, column: 2, scope: !15019, inlinedAt: !15021)
!15050 = !DILocation(line: 518, column: 2, scope: !15009)
!15051 = !DILocation(line: 518, column: 18, scope: !15009)
!15052 = !DILocation(line: 520, column: 2, scope: !15009)
!15053 = !DILocation(line: 523, column: 2, scope: !15009)
!15054 = !DILocation(line: 526, column: 2, scope: !15009)
!15055 = !DILocation(line: 527, column: 2, scope: !15009)
!15056 = !DILocation(line: 543, column: 24, scope: !15009)
!15057 = !DILocation(line: 543, column: 2, scope: !15009)
!15058 = !DILocation(line: 0, scope: !2378)
!15059 = !DILocation(line: 246, column: 15, scope: !2396)
!15060 = !DILocation(line: 246, column: 36, scope: !2395)
!15061 = !DILocation(line: 246, column: 2, scope: !2396)
!15062 = !DILocation(line: 247, column: 37, scope: !2394)
!15063 = !DILocation(line: 0, scope: !2394)
!15064 = !DILocation(line: 248, column: 19, scope: !2394)
!15065 = !DILocation(line: 248, column: 12, scope: !2394)
!15066 = !DILocation(line: 250, column: 11, scope: !15067)
!15067 = distinct !DILexicalBlock(scope: !2394, file: !2147, line: 250, column: 7)
!15068 = !DILocation(line: 250, column: 7, scope: !2394)
!15069 = !DILocation(line: 254, column: 11, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15071, file: !2147, line: 254, column: 8)
!15071 = distinct !DILexicalBlock(scope: !15067, file: !2147, line: 250, column: 20)
!15072 = !DILocation(line: 254, column: 8, scope: !15071)
!15073 = !DILocation(line: 255, column: 9, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15070, file: !2147, line: 254, column: 17)
!15075 = !DILocation(line: 258, column: 9, scope: !15074)
!15076 = !DILocation(line: 261, column: 28, scope: !15074)
!15077 = !DILocation(line: 261, column: 10, scope: !15074)
!15078 = !DILocation(line: 261, column: 17, scope: !15074)
!15079 = !DILocation(line: 261, column: 26, scope: !15074)
!15080 = !DILocation(line: 262, column: 4, scope: !15074)
!15081 = !DILocation(line: 263, column: 9, scope: !15071)
!15082 = !DILocation(line: 263, column: 16, scope: !15071)
!15083 = !DILocation(line: 263, column: 28, scope: !15071)
!15084 = !DILocation(line: 264, column: 3, scope: !15071)
!15085 = !DILocation(line: 246, column: 60, scope: !2395)
!15086 = distinct !{!15086, !15061, !15087}
!15087 = !DILocation(line: 265, column: 2, scope: !2396)
!15088 = !DILocation(line: 266, column: 1, scope: !2378)
!15089 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !680, file: !680, line: 1814, type: !8344, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15090)
!15090 = !{!15091, !15092}
!15091 = !DILocalVariable(name: "IRQn", arg: 1, scope: !15089, file: !680, line: 1814, type: !934)
!15092 = !DILocalVariable(name: "priority", arg: 2, scope: !15089, file: !680, line: 1814, type: !208)
!15093 = !DILocation(line: 0, scope: !15089)
!15094 = !DILocation(line: 1822, column: 48, scope: !15095)
!15095 = distinct !DILexicalBlock(scope: !15096, file: !680, line: 1821, column: 3)
!15096 = distinct !DILexicalBlock(scope: !15089, file: !680, line: 1816, column: 7)
!15097 = !DILocation(line: 1822, column: 32, scope: !15095)
!15098 = !DILocation(line: 1822, column: 40, scope: !15095)
!15099 = !DILocation(line: 1822, column: 5, scope: !15095)
!15100 = !DILocation(line: 1822, column: 46, scope: !15095)
!15101 = !DILocation(line: 1824, column: 1, scope: !15089)
!15102 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !15020, file: !15020, line: 32, type: !3297, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15103 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !15104, file: !15104, line: 215, type: !15001, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15105)
!15104 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15105 = !{!15106}
!15106 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !15103, file: !15104, line: 215, type: !2239)
!15107 = !DILocation(line: 0, scope: !15103)
!15108 = !DILocation(line: 217, column: 21, scope: !15103)
!15109 = !DILocation(line: 217, column: 34, scope: !15103)
!15110 = !DILocation(line: 221, column: 21, scope: !15103)
!15111 = !DILocation(line: 221, column: 34, scope: !15103)
!15112 = !DILocation(line: 223, column: 27, scope: !15103)
!15113 = !DILocation(line: 223, column: 33, scope: !15103)
!15114 = !DILocation(line: 224, column: 27, scope: !15103)
!15115 = !DILocation(line: 224, column: 32, scope: !15103)
!15116 = !DILocation(line: 232, column: 16, scope: !15103)
!15117 = !DILocation(line: 232, column: 30, scope: !15103)
!15118 = !DILocation(line: 239, column: 24, scope: !15103)
!15119 = !DILocation(line: 240, column: 1, scope: !15103)
!15120 = distinct !DISubprogram(name: "prepare_multithreading", scope: !2147, file: !2147, line: 399, type: !15121, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15123)
!15121 = !DISubroutineType(types: !15122)
!15122 = !{!393}
!15123 = !{!15124}
!15124 = !DILocalVariable(name: "stack_ptr", scope: !15120, file: !2147, line: 401, type: !393)
!15125 = !DILocation(line: 404, column: 2, scope: !15120)
!15126 = !DILocation(line: 416, column: 24, scope: !15120)
!15127 = !DILocation(line: 418, column: 14, scope: !15120)
!15128 = !DILocation(line: 0, scope: !15120)
!15129 = !DILocation(line: 423, column: 2, scope: !15120)
!15130 = !DILocation(line: 424, column: 2, scope: !15120)
!15131 = !DILocation(line: 426, column: 2, scope: !15120)
!15132 = !DILocation(line: 428, column: 2, scope: !15120)
!15133 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !2147, file: !2147, line: 432, type: !15134, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15136)
!15134 = !DISubroutineType(types: !15135)
!15135 = !{null, !393}
!15136 = !{!15137}
!15137 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !15133, file: !2147, line: 432, type: !393)
!15138 = !DILocation(line: 0, scope: !15133)
!15139 = !DILocation(line: 435, column: 2, scope: !15133)
!15140 = !DILocation(line: 445, column: 2, scope: !15133)
!15141 = distinct !DISubprogram(name: "bg_thread_main", scope: !2147, file: !2147, line: 277, type: !5250, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2143, retainedNodes: !15142)
!15142 = !{!15143, !15144, !15145}
!15143 = !DILocalVariable(name: "unused1", arg: 1, scope: !15141, file: !2147, line: 277, type: !124)
!15144 = !DILocalVariable(name: "unused2", arg: 2, scope: !15141, file: !2147, line: 277, type: !124)
!15145 = !DILocalVariable(name: "unused3", arg: 3, scope: !15141, file: !2147, line: 277, type: !124)
!15146 = !DILocation(line: 0, scope: !15141)
!15147 = !DILocation(line: 291, column: 20, scope: !15141)
!15148 = !DILocation(line: 293, column: 2, scope: !15141)
!15149 = !DILocation(line: 297, column: 2, scope: !15141)
!15150 = !DILocation(line: 305, column: 2, scope: !15141)
!15151 = !DILocation(line: 307, column: 2, scope: !15141)
!15152 = !DILocation(line: 330, column: 8, scope: !15141)
!15153 = !DILocation(line: 333, column: 34, scope: !15141)
!15154 = !DILocation(line: 339, column: 1, scope: !15141)
!15155 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2407, file: !2407, line: 45, type: !15156, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15164)
!15156 = !DISubroutineType(types: !15157)
!15157 = !{null, !15158, !124}
!15158 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !624, line: 103, baseType: !15159)
!15159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15160, size: 32)
!15160 = !DISubroutineType(types: !15161)
!15161 = !{null, !15162, !124}
!15162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15163, size: 32)
!15163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2412)
!15164 = !{!15165, !15166}
!15165 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15155, file: !2407, line: 45, type: !15158)
!15166 = !DILocalVariable(name: "user_data", arg: 2, scope: !15155, file: !2407, line: 45, type: !124)
!15167 = !DILocation(line: 0, scope: !15155)
!15168 = !DILocation(line: 71, column: 1, scope: !15155)
!15169 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2407, file: !2407, line: 73, type: !15156, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15170)
!15170 = !{!15171, !15172}
!15171 = !DILocalVariable(name: "user_cb", arg: 1, scope: !15169, file: !2407, line: 73, type: !15158)
!15172 = !DILocalVariable(name: "user_data", arg: 2, scope: !15169, file: !2407, line: 73, type: !124)
!15173 = !DILocation(line: 0, scope: !15169)
!15174 = !DILocation(line: 95, column: 1, scope: !15169)
!15175 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2407, file: !2407, line: 97, type: !9329, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !639)
!15176 = !DILocation(line: 1031, column: 3, scope: !15177, inlinedAt: !15180)
!15177 = distinct !DISubprogram(name: "__get_IPSR", scope: !8310, file: !8310, line: 1027, type: !8391, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15178)
!15178 = !{!15179}
!15179 = !DILocalVariable(name: "result", scope: !15177, file: !8310, line: 1029, type: !208)
!15180 = distinct !DILocation(line: 48, column: 10, scope: !15181, inlinedAt: !15182)
!15181 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9328, file: !9328, line: 46, type: !9329, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !639)
!15182 = distinct !DILocation(line: 99, column: 9, scope: !15175)
!15183 = !{i64 3522562}
!15184 = !DILocation(line: 0, scope: !15177, inlinedAt: !15180)
!15185 = !DILocation(line: 48, column: 9, scope: !15181, inlinedAt: !15182)
!15186 = !DILocation(line: 99, column: 2, scope: !15175)
!15187 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2407, file: !2407, line: 106, type: !3297, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !639)
!15188 = !DILocation(line: 108, column: 2, scope: !15187)
!15189 = !DILocation(line: 108, column: 17, scope: !15187)
!15190 = !DILocation(line: 108, column: 30, scope: !15187)
!15191 = !DILocation(line: 109, column: 1, scope: !15187)
!15192 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2407, file: !2407, line: 116, type: !3297, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !639)
!15193 = !DILocation(line: 118, column: 2, scope: !15192)
!15194 = !DILocation(line: 118, column: 17, scope: !15192)
!15195 = !DILocation(line: 118, column: 30, scope: !15192)
!15196 = !DILocation(line: 119, column: 1, scope: !15192)
!15197 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2407, file: !2407, line: 126, type: !9329, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !639)
!15198 = !DILocation(line: 128, column: 10, scope: !15197)
!15199 = !DILocation(line: 128, column: 25, scope: !15197)
!15200 = !DILocation(line: 128, column: 38, scope: !15197)
!15201 = !DILocation(line: 128, column: 53, scope: !15197)
!15202 = !DILocation(line: 128, column: 2, scope: !15197)
!15203 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2407, file: !2407, line: 187, type: !15204, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15206)
!15204 = !DISubroutineType(types: !15205)
!15205 = !{!125, !2411, !140}
!15206 = !{!15207, !15208}
!15207 = !DILocalVariable(name: "thread", arg: 1, scope: !15203, file: !2407, line: 187, type: !2411)
!15208 = !DILocalVariable(name: "value", arg: 2, scope: !15203, file: !2407, line: 187, type: !140)
!15209 = !DILocation(line: 0, scope: !15203)
!15210 = !DILocation(line: 206, column: 2, scope: !15203)
!15211 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2407, file: !2407, line: 238, type: !15212, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15214)
!15212 = !DISubroutineType(types: !15213)
!15213 = !{!140, !2411}
!15214 = !{!15215}
!15215 = !DILocalVariable(name: "thread", arg: 1, scope: !15211, file: !2407, line: 238, type: !2411)
!15216 = !DILocation(line: 0, scope: !15211)
!15217 = !DILocation(line: 244, column: 2, scope: !15211)
!15218 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2407, file: !2407, line: 248, type: !15219, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15221)
!15219 = !DISubroutineType(types: !15220)
!15220 = !{!125, !2410, !393, !272}
!15221 = !{!15222, !15223, !15224}
!15222 = !DILocalVariable(name: "thread", arg: 1, scope: !15218, file: !2407, line: 248, type: !2410)
!15223 = !DILocalVariable(name: "buf", arg: 2, scope: !15218, file: !2407, line: 248, type: !393)
!15224 = !DILocalVariable(name: "size", arg: 3, scope: !15218, file: !2407, line: 248, type: !272)
!15225 = !DILocation(line: 0, scope: !15218)
!15226 = !DILocation(line: 257, column: 2, scope: !15218)
!15227 = !DILocation(line: 0, scope: !2406)
!15228 = !DILocation(line: 281, column: 11, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !2406, file: !2407, line: 281, column: 6)
!15230 = !DILocation(line: 281, column: 20, scope: !15229)
!15231 = !DILocation(line: 275, column: 45, scope: !2406)
!15232 = !DILocation(line: 285, column: 10, scope: !2406)
!15233 = !DILocation(line: 0, scope: !2527)
!15234 = !DILocation(line: 293, column: 39, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !2527, file: !2407, line: 293, column: 2)
!15236 = !DILocation(line: 293, column: 2, scope: !2527)
!15237 = !DILocation(line: 273, column: 14, scope: !2406)
!15238 = !DILocation(line: 309, column: 2, scope: !2406)
!15239 = !DILocation(line: 309, column: 11, scope: !2406)
!15240 = !DILocation(line: 311, column: 2, scope: !2406)
!15241 = !DILocation(line: 293, column: 26, scope: !15235)
!15242 = !DILocation(line: 294, column: 9, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15235, file: !2407, line: 293, column: 54)
!15244 = !DILocation(line: 295, column: 21, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15243, file: !2407, line: 295, column: 7)
!15246 = !DILocation(line: 295, column: 28, scope: !15245)
!15247 = !DILocation(line: 295, column: 7, scope: !15243)
!15248 = !DILocation(line: 299, column: 25, scope: !15243)
!15249 = !DILocation(line: 299, column: 41, scope: !15243)
!15250 = !DILocation(line: 300, column: 7, scope: !15243)
!15251 = !DILocation(line: 300, column: 26, scope: !15243)
!15252 = !DILocation(line: 299, column: 10, scope: !15243)
!15253 = !DILocation(line: 299, column: 7, scope: !15243)
!15254 = !DILocation(line: 302, column: 16, scope: !15243)
!15255 = !DILocation(line: 304, column: 20, scope: !15256)
!15256 = distinct !DILexicalBlock(scope: !15243, file: !2407, line: 304, column: 7)
!15257 = !DILocation(line: 304, column: 7, scope: !15243)
!15258 = !DILocation(line: 305, column: 26, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15256, file: !2407, line: 304, column: 26)
!15260 = !DILocation(line: 305, column: 42, scope: !15259)
!15261 = !DILocation(line: 305, column: 11, scope: !15259)
!15262 = !DILocation(line: 305, column: 8, scope: !15259)
!15263 = !DILocation(line: 306, column: 3, scope: !15259)
!15264 = !DILocation(line: 293, column: 50, scope: !15235)
!15265 = !DILocation(line: 312, column: 1, scope: !2406)
!15266 = distinct !DISubprogram(name: "copy_bytes", scope: !2407, file: !2407, line: 261, type: !15267, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15269)
!15267 = !DISubroutineType(types: !15268)
!15268 = !{!272, !393, !272, !140, !272}
!15269 = !{!15270, !15271, !15272, !15273, !15274}
!15270 = !DILocalVariable(name: "dest", arg: 1, scope: !15266, file: !2407, line: 261, type: !393)
!15271 = !DILocalVariable(name: "dest_size", arg: 2, scope: !15266, file: !2407, line: 261, type: !272)
!15272 = !DILocalVariable(name: "src", arg: 3, scope: !15266, file: !2407, line: 261, type: !140)
!15273 = !DILocalVariable(name: "src_size", arg: 4, scope: !15266, file: !2407, line: 261, type: !272)
!15274 = !DILocalVariable(name: "bytes_to_copy", scope: !15266, file: !2407, line: 263, type: !272)
!15275 = !DILocation(line: 0, scope: !15266)
!15276 = !DILocation(line: 265, column: 18, scope: !15266)
!15277 = !DILocation(line: 266, column: 2, scope: !15266)
!15278 = !DILocation(line: 268, column: 2, scope: !15266)
!15279 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2407, file: !2407, line: 383, type: !15280, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15282)
!15280 = !DISubroutineType(types: !15281)
!15281 = !{null, !2411}
!15282 = !{!15283}
!15283 = !DILocalVariable(name: "thread", arg: 1, scope: !15279, file: !2407, line: 383, type: !2411)
!15284 = !DILocation(line: 0, scope: !15279)
!15285 = !DILocation(line: 387, column: 2, scope: !15279)
!15286 = !DILocation(line: 388, column: 1, scope: !15279)
!15287 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2407, file: !2407, line: 528, type: !15288, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15295)
!15288 = !DISubroutineType(types: !15289)
!15289 = !{!393, !2411, !15290, !272, !5247, !124, !124, !124, !125, !208, !140}
!15290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15291, size: 32)
!15291 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !5248, line: 44, baseType: !15292)
!15292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !2354, line: 47, size: 8, elements: !15293)
!15293 = !{!15294}
!15294 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !15292, file: !2354, line: 48, baseType: !142, size: 8)
!15295 = !{!15296, !15297, !15298, !15299, !15300, !15301, !15302, !15303, !15304, !15305, !15306}
!15296 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15287, file: !2407, line: 528, type: !2411)
!15297 = !DILocalVariable(name: "stack", arg: 2, scope: !15287, file: !2407, line: 529, type: !15290)
!15298 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15287, file: !2407, line: 529, type: !272)
!15299 = !DILocalVariable(name: "entry", arg: 4, scope: !15287, file: !2407, line: 530, type: !5247)
!15300 = !DILocalVariable(name: "p1", arg: 5, scope: !15287, file: !2407, line: 531, type: !124)
!15301 = !DILocalVariable(name: "p2", arg: 6, scope: !15287, file: !2407, line: 531, type: !124)
!15302 = !DILocalVariable(name: "p3", arg: 7, scope: !15287, file: !2407, line: 531, type: !124)
!15303 = !DILocalVariable(name: "prio", arg: 8, scope: !15287, file: !2407, line: 532, type: !125)
!15304 = !DILocalVariable(name: "options", arg: 9, scope: !15287, file: !2407, line: 532, type: !208)
!15305 = !DILocalVariable(name: "name", arg: 10, scope: !15287, file: !2407, line: 532, type: !140)
!15306 = !DILocalVariable(name: "stack_ptr", scope: !15287, file: !2407, line: 534, type: !393)
!15307 = !DILocation(line: 0, scope: !15287)
!15308 = !DILocation(line: 550, column: 28, scope: !15287)
!15309 = !DILocation(line: 550, column: 2, scope: !15287)
!15310 = !DILocation(line: 553, column: 34, scope: !15287)
!15311 = !DILocation(line: 553, column: 2, scope: !15287)
!15312 = !DILocation(line: 554, column: 14, scope: !15287)
!15313 = !DILocation(line: 564, column: 2, scope: !15287)
!15314 = !DILocation(line: 567, column: 14, scope: !15287)
!15315 = !DILocation(line: 567, column: 24, scope: !15287)
!15316 = !DILocation(line: 612, column: 7, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15287, file: !2407, line: 612, column: 6)
!15318 = !DILocation(line: 612, column: 6, scope: !15287)
!15319 = !DILocation(line: 627, column: 40, scope: !15287)
!15320 = !DILocation(line: 637, column: 2, scope: !15287)
!15321 = !DILocation(line: 613, column: 15, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15317, file: !2407, line: 612, column: 17)
!15323 = !DILocation(line: 613, column: 29, scope: !15322)
!15324 = !DILocation(line: 638, column: 1, scope: !15287)
!15325 = distinct !DISubprogram(name: "z_waitq_init", scope: !15326, file: !15326, line: 47, type: !15327, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15329)
!15326 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15327 = !DISubroutineType(types: !15328)
!15328 = !{null, !2442}
!15329 = !{!15330}
!15330 = !DILocalVariable(name: "w", arg: 1, scope: !15325, file: !15326, line: 47, type: !2442)
!15331 = !DILocation(line: 0, scope: !15325)
!15332 = !DILocation(line: 49, column: 21, scope: !15325)
!15333 = !DILocation(line: 49, column: 2, scope: !15325)
!15334 = !DILocation(line: 50, column: 1, scope: !15325)
!15335 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2407, file: !2407, line: 791, type: !15336, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15339)
!15336 = !DISubroutineType(types: !15337)
!15337 = !{null, !15338, !125, !208, !32}
!15338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 32)
!15339 = !{!15340, !15341, !15342, !15343}
!15340 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15335, file: !2407, line: 791, type: !15338)
!15341 = !DILocalVariable(name: "priority", arg: 2, scope: !15335, file: !2407, line: 791, type: !125)
!15342 = !DILocalVariable(name: "initial_state", arg: 3, scope: !15335, file: !2407, line: 792, type: !208)
!15343 = !DILocalVariable(name: "options", arg: 4, scope: !15335, file: !2407, line: 792, type: !32)
!15344 = !DILocation(line: 0, scope: !15335)
!15345 = !DILocation(line: 795, column: 15, scope: !15335)
!15346 = !DILocation(line: 795, column: 25, scope: !15335)
!15347 = !DILocation(line: 796, column: 30, scope: !15335)
!15348 = !DILocation(line: 796, column: 15, scope: !15335)
!15349 = !DILocation(line: 796, column: 28, scope: !15335)
!15350 = !DILocation(line: 797, column: 30, scope: !15335)
!15351 = !DILocation(line: 797, column: 15, scope: !15335)
!15352 = !DILocation(line: 797, column: 28, scope: !15335)
!15353 = !DILocation(line: 799, column: 22, scope: !15335)
!15354 = !DILocation(line: 799, column: 15, scope: !15335)
!15355 = !DILocation(line: 799, column: 20, scope: !15335)
!15356 = !DILocation(line: 801, column: 15, scope: !15335)
!15357 = !DILocation(line: 801, column: 28, scope: !15335)
!15358 = !DILocation(line: 814, column: 2, scope: !15335)
!15359 = !DILocation(line: 815, column: 1, scope: !15335)
!15360 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2407, file: !2407, line: 449, type: !15361, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15363)
!15361 = !DISubroutineType(types: !15362)
!15362 = !{!393, !2411, !15290, !272}
!15363 = !{!15364, !15365, !15366, !15367, !15368, !15369, !15370, !15371}
!15364 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15360, file: !2407, line: 449, type: !2411)
!15365 = !DILocalVariable(name: "stack", arg: 2, scope: !15360, file: !2407, line: 450, type: !15290)
!15366 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15360, file: !2407, line: 450, type: !272)
!15367 = !DILocalVariable(name: "stack_obj_size", scope: !15360, file: !2407, line: 452, type: !272)
!15368 = !DILocalVariable(name: "stack_buf_size", scope: !15360, file: !2407, line: 452, type: !272)
!15369 = !DILocalVariable(name: "stack_ptr", scope: !15360, file: !2407, line: 453, type: !393)
!15370 = !DILocalVariable(name: "stack_buf_start", scope: !15360, file: !2407, line: 453, type: !393)
!15371 = !DILocalVariable(name: "delta", scope: !15360, file: !2407, line: 454, type: !272)
!15372 = !DILocation(line: 0, scope: !15360)
!15373 = !DILocation(line: 465, column: 20, scope: !15374)
!15374 = distinct !DILexicalBlock(scope: !15360, file: !2407, line: 463, column: 2)
!15375 = !DILocation(line: 466, column: 21, scope: !15374)
!15376 = !DILocation(line: 473, column: 28, scope: !15360)
!15377 = !DILocation(line: 514, column: 33, scope: !15360)
!15378 = !DILocation(line: 514, column: 25, scope: !15360)
!15379 = !DILocation(line: 514, column: 31, scope: !15360)
!15380 = !DILocation(line: 515, column: 25, scope: !15360)
!15381 = !DILocation(line: 515, column: 30, scope: !15360)
!15382 = !DILocation(line: 516, column: 25, scope: !15360)
!15383 = !DILocation(line: 516, column: 31, scope: !15360)
!15384 = !DILocation(line: 520, column: 2, scope: !15360)
!15385 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !2354, file: !2354, line: 331, type: !15386, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15388)
!15386 = !DISubroutineType(types: !15387)
!15387 = !{!393, !15290}
!15388 = !{!15389}
!15389 = !DILocalVariable(name: "sym", arg: 1, scope: !15385, file: !2354, line: 331, type: !15290)
!15390 = !DILocation(line: 0, scope: !15385)
!15391 = !DILocation(line: 333, column: 21, scope: !15385)
!15392 = !DILocation(line: 333, column: 2, scope: !15385)
!15393 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !15394, file: !15394, line: 40, type: !15395, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15397)
!15394 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15395 = !DISubroutineType(types: !15396)
!15396 = !{null, !15338}
!15397 = !{!15398}
!15398 = !DILocalVariable(name: "thread_base", arg: 1, scope: !15393, file: !15394, line: 40, type: !15338)
!15399 = !DILocation(line: 0, scope: !15393)
!15400 = !DILocation(line: 42, column: 31, scope: !15393)
!15401 = !DILocation(line: 42, column: 2, scope: !15393)
!15402 = !DILocation(line: 43, column: 1, scope: !15393)
!15403 = distinct !DISubprogram(name: "z_init_timeout", scope: !15394, file: !15394, line: 25, type: !2468, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15404)
!15404 = !{!15405}
!15405 = !DILocalVariable(name: "to", arg: 1, scope: !15403, file: !15394, line: 25, type: !2470)
!15406 = !DILocation(line: 0, scope: !15403)
!15407 = !DILocation(line: 27, column: 22, scope: !15403)
!15408 = !DILocation(line: 27, column: 2, scope: !15403)
!15409 = !DILocation(line: 28, column: 1, scope: !15403)
!15410 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !15411, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15413)
!15411 = !DISubroutineType(types: !15412)
!15412 = !{null, !2514}
!15413 = !{!15414}
!15414 = !DILocalVariable(name: "node", arg: 1, scope: !15410, file: !541, line: 211, type: !2514)
!15415 = !DILocation(line: 0, scope: !15410)
!15416 = !DILocation(line: 213, column: 8, scope: !15410)
!15417 = !DILocation(line: 213, column: 13, scope: !15410)
!15418 = !DILocation(line: 214, column: 8, scope: !15410)
!15419 = !DILocation(line: 214, column: 13, scope: !15410)
!15420 = !DILocation(line: 215, column: 1, scope: !15410)
!15421 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !15422, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15425)
!15422 = !DISubroutineType(types: !15423)
!15423 = !{null, !15424}
!15424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!15425 = !{!15426}
!15426 = !DILocalVariable(name: "list", arg: 1, scope: !15421, file: !541, line: 197, type: !15424)
!15427 = !DILocation(line: 0, scope: !15421)
!15428 = !DILocation(line: 199, column: 8, scope: !15421)
!15429 = !DILocation(line: 199, column: 13, scope: !15421)
!15430 = !DILocation(line: 200, column: 8, scope: !15421)
!15431 = !DILocation(line: 200, column: 13, scope: !15421)
!15432 = !DILocation(line: 201, column: 1, scope: !15421)
!15433 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2407, file: !2407, line: 641, type: !15434, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15440)
!15434 = !DISubroutineType(types: !15435)
!15435 = !{!2410, !2411, !15290, !272, !5247, !124, !124, !124, !125, !208, !15436}
!15436 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1890, line: 67, baseType: !15437)
!15437 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1890, line: 65, size: 64, elements: !15438)
!15438 = !{!15439}
!15439 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !15437, file: !1890, line: 66, baseType: !1889, size: 64)
!15440 = !{!15441, !15442, !15443, !15444, !15445, !15446, !15447, !15448, !15449, !15450}
!15441 = !DILocalVariable(name: "new_thread", arg: 1, scope: !15433, file: !2407, line: 641, type: !2411)
!15442 = !DILocalVariable(name: "stack", arg: 2, scope: !15433, file: !2407, line: 642, type: !15290)
!15443 = !DILocalVariable(name: "stack_size", arg: 3, scope: !15433, file: !2407, line: 643, type: !272)
!15444 = !DILocalVariable(name: "entry", arg: 4, scope: !15433, file: !2407, line: 643, type: !5247)
!15445 = !DILocalVariable(name: "p1", arg: 5, scope: !15433, file: !2407, line: 644, type: !124)
!15446 = !DILocalVariable(name: "p2", arg: 6, scope: !15433, file: !2407, line: 644, type: !124)
!15447 = !DILocalVariable(name: "p3", arg: 7, scope: !15433, file: !2407, line: 644, type: !124)
!15448 = !DILocalVariable(name: "prio", arg: 8, scope: !15433, file: !2407, line: 645, type: !125)
!15449 = !DILocalVariable(name: "options", arg: 9, scope: !15433, file: !2407, line: 645, type: !208)
!15450 = !DILocalVariable(name: "delay", arg: 10, scope: !15433, file: !2407, line: 645, type: !15436)
!15451 = !DILocation(line: 0, scope: !15433)
!15452 = !DILocation(line: 649, column: 2, scope: !15433)
!15453 = !DILocation(line: 652, column: 7, scope: !15454)
!15454 = distinct !DILexicalBlock(scope: !15433, file: !2407, line: 652, column: 6)
!15455 = !DILocation(line: 652, column: 6, scope: !15433)
!15456 = !DILocation(line: 653, column: 3, scope: !15457)
!15457 = distinct !DILexicalBlock(scope: !15454, file: !2407, line: 652, column: 39)
!15458 = !DILocation(line: 654, column: 2, scope: !15457)
!15459 = !DILocation(line: 656, column: 2, scope: !15433)
!15460 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2407, file: !2407, line: 401, type: !15461, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15463)
!15461 = !DISubroutineType(types: !15462)
!15462 = !{null, !2411, !15436}
!15463 = !{!15464, !15465}
!15464 = !DILocalVariable(name: "thread", arg: 1, scope: !15460, file: !2407, line: 401, type: !2411)
!15465 = !DILocalVariable(name: "delay", arg: 2, scope: !15460, file: !2407, line: 401, type: !15436)
!15466 = !DILocation(line: 0, scope: !15460)
!15467 = !DILocation(line: 404, column: 6, scope: !15468)
!15468 = distinct !DILexicalBlock(scope: !15460, file: !2407, line: 404, column: 6)
!15469 = !DILocation(line: 404, column: 6, scope: !15460)
!15470 = !DILocation(line: 405, column: 3, scope: !15471)
!15471 = distinct !DILexicalBlock(scope: !15468, file: !2407, line: 404, column: 38)
!15472 = !DILocation(line: 406, column: 2, scope: !15471)
!15473 = !DILocation(line: 407, column: 3, scope: !15474)
!15474 = distinct !DILexicalBlock(scope: !15468, file: !2407, line: 406, column: 9)
!15475 = !DILocation(line: 413, column: 1, scope: !15460)
!15476 = distinct !DISubprogram(name: "k_thread_start", scope: !5369, file: !5369, line: 205, type: !15477, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15479)
!15477 = !DISubroutineType(types: !15478)
!15478 = !{null, !2410}
!15479 = !{!15480}
!15480 = !DILocalVariable(name: "thread", arg: 1, scope: !15476, file: !5369, line: 205, type: !2410)
!15481 = !DILocation(line: 0, scope: !15476)
!15482 = !DILocation(line: 214, column: 2, scope: !15483)
!15483 = distinct !DILexicalBlock(scope: !15476, file: !5369, line: 214, column: 2)
!15484 = !{i64 2154768538}
!15485 = !DILocation(line: 215, column: 2, scope: !15476)
!15486 = !DILocation(line: 216, column: 1, scope: !15476)
!15487 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15394, file: !15394, line: 47, type: !15461, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15488)
!15488 = !{!15489, !15490}
!15489 = !DILocalVariable(name: "thread", arg: 1, scope: !15487, file: !15394, line: 47, type: !2411)
!15490 = !DILocalVariable(name: "ticks", arg: 2, scope: !15487, file: !15394, line: 47, type: !15436)
!15491 = !DILocation(line: 0, scope: !15487)
!15492 = !DILocation(line: 49, column: 30, scope: !15487)
!15493 = !DILocation(line: 49, column: 2, scope: !15487)
!15494 = !DILocation(line: 50, column: 1, scope: !15487)
!15495 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2407, file: !2407, line: 748, type: !3297, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15496)
!15496 = !{!15497, !15515}
!15497 = !DILocalVariable(name: "thread_data", scope: !15498, file: !2407, line: 750, type: !15499)
!15498 = distinct !DILexicalBlock(scope: !15495, file: !2407, line: 750, column: 2)
!15499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15500, size: 32)
!15500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !624, line: 620, size: 384, elements: !15501)
!15501 = !{!15502, !15503, !15504, !15505, !15506, !15507, !15508, !15509, !15510, !15511, !15512, !15514}
!15502 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !15500, file: !624, line: 621, baseType: !2411, size: 32)
!15503 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !15500, file: !624, line: 622, baseType: !15290, size: 32, offset: 32)
!15504 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !15500, file: !624, line: 623, baseType: !32, size: 32, offset: 64)
!15505 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !15500, file: !624, line: 624, baseType: !5247, size: 32, offset: 96)
!15506 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !15500, file: !624, line: 625, baseType: !124, size: 32, offset: 128)
!15507 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !15500, file: !624, line: 626, baseType: !124, size: 32, offset: 160)
!15508 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !15500, file: !624, line: 627, baseType: !124, size: 32, offset: 192)
!15509 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !15500, file: !624, line: 628, baseType: !125, size: 32, offset: 224)
!15510 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !15500, file: !624, line: 629, baseType: !208, size: 32, offset: 256)
!15511 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !15500, file: !624, line: 630, baseType: !908, size: 32, offset: 288)
!15512 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !15500, file: !624, line: 631, baseType: !15513, size: 32, offset: 320)
!15513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3297, size: 32)
!15514 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !15500, file: !624, line: 632, baseType: !140, size: 32, offset: 352)
!15515 = !DILocalVariable(name: "thread_data", scope: !15516, file: !2407, line: 781, type: !15499)
!15516 = distinct !DILexicalBlock(scope: !15495, file: !2407, line: 781, column: 2)
!15517 = !DILocation(line: 0, scope: !15498)
!15518 = !DILocation(line: 750, column: 2, scope: !15498)
!15519 = !DILocation(line: 780, column: 2, scope: !15495)
!15520 = !DILocation(line: 0, scope: !15516)
!15521 = !DILocation(line: 781, column: 2, scope: !15516)
!15522 = !DILocation(line: 752, column: 17, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15524, file: !2407, line: 750, column: 38)
!15524 = distinct !DILexicalBlock(scope: !15498, file: !2407, line: 750, column: 2)
!15525 = !DILocation(line: 753, column: 17, scope: !15523)
!15526 = !DILocation(line: 754, column: 17, scope: !15523)
!15527 = !DILocation(line: 755, column: 17, scope: !15523)
!15528 = !DILocation(line: 756, column: 17, scope: !15523)
!15529 = !DILocation(line: 757, column: 17, scope: !15523)
!15530 = !DILocation(line: 758, column: 17, scope: !15523)
!15531 = !DILocation(line: 759, column: 17, scope: !15523)
!15532 = !DILocation(line: 760, column: 17, scope: !15523)
!15533 = !DILocation(line: 751, column: 3, scope: !15523)
!15534 = !DILocation(line: 763, column: 16, scope: !15523)
!15535 = !DILocation(line: 763, column: 29, scope: !15523)
!15536 = !DILocation(line: 763, column: 39, scope: !15523)
!15537 = !DILocation(line: 750, column: 2, scope: !15524)
!15538 = !DILocation(line: 750, column: 2, scope: !15539)
!15539 = distinct !DILexicalBlock(scope: !15524, file: !2407, line: 750, column: 2)
!15540 = distinct !{!15540, !15518, !15541}
!15541 = !DILocation(line: 764, column: 2, scope: !15498)
!15542 = !DILocation(line: 787, column: 2, scope: !15495)
!15543 = !DILocation(line: 788, column: 1, scope: !15495)
!15544 = !DILocation(line: 782, column: 20, scope: !15545)
!15545 = distinct !DILexicalBlock(scope: !15546, file: !2407, line: 782, column: 7)
!15546 = distinct !DILexicalBlock(scope: !15547, file: !2407, line: 781, column: 38)
!15547 = distinct !DILexicalBlock(scope: !15516, file: !2407, line: 781, column: 2)
!15548 = !DILocation(line: 782, column: 31, scope: !15545)
!15549 = !DILocation(line: 782, column: 7, scope: !15546)
!15550 = !DILocation(line: 783, column: 37, scope: !15551)
!15551 = distinct !DILexicalBlock(scope: !15545, file: !2407, line: 782, column: 51)
!15552 = !DILocation(line: 784, column: 10, scope: !15551)
!15553 = !DILocation(line: 783, column: 4, scope: !15551)
!15554 = !DILocation(line: 785, column: 3, scope: !15551)
!15555 = !DILocation(line: 781, column: 2, scope: !15547)
!15556 = !DILocation(line: 781, column: 2, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15547, file: !2407, line: 781, column: 2)
!15558 = distinct !{!15558, !15521, !15559}
!15559 = !DILocation(line: 786, column: 2, scope: !15516)
!15560 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !15561, file: !15561, line: 403, type: !15562, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15564)
!15561 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15562 = !DISubroutineType(types: !15563)
!15563 = !{!1796, !1796}
!15564 = !{!15565}
!15565 = !DILocalVariable(name: "t", arg: 1, scope: !15560, file: !15561, line: 403, type: !1796)
!15566 = !DILocation(line: 0, scope: !15560)
!15567 = !DILocalVariable(name: "t", arg: 1, scope: !15568, file: !15561, line: 102, type: !1796)
!15568 = distinct !DISubprogram(name: "z_tmcvt", scope: !15561, file: !15561, line: 102, type: !15569, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15571)
!15569 = !DISubroutineType(types: !15570)
!15570 = !{!1796, !1796, !208, !208, !153, !153, !153, !153}
!15571 = !{!15567, !15572, !15573, !15574, !15575, !15576, !15577, !15578, !15579, !15580, !15581}
!15572 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15568, file: !15561, line: 102, type: !208)
!15573 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15568, file: !15561, line: 103, type: !208)
!15574 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15568, file: !15561, line: 103, type: !153)
!15575 = !DILocalVariable(name: "result32", arg: 5, scope: !15568, file: !15561, line: 104, type: !153)
!15576 = !DILocalVariable(name: "round_up", arg: 6, scope: !15568, file: !15561, line: 104, type: !153)
!15577 = !DILocalVariable(name: "round_off", arg: 7, scope: !15568, file: !15561, line: 105, type: !153)
!15578 = !DILocalVariable(name: "mul_ratio", scope: !15568, file: !15561, line: 107, type: !153)
!15579 = !DILocalVariable(name: "div_ratio", scope: !15568, file: !15561, line: 109, type: !153)
!15580 = !DILocalVariable(name: "off", scope: !15568, file: !15561, line: 116, type: !1796)
!15581 = !DILocalVariable(name: "rdivisor", scope: !15582, file: !15561, line: 119, type: !208)
!15582 = distinct !DILexicalBlock(scope: !15583, file: !15561, line: 118, column: 18)
!15583 = distinct !DILexicalBlock(scope: !15568, file: !15561, line: 118, column: 6)
!15584 = !DILocation(line: 0, scope: !15568, inlinedAt: !15585)
!15585 = distinct !DILocation(line: 406, column: 9, scope: !15560)
!15586 = !DILocation(line: 145, column: 13, scope: !15587, inlinedAt: !15585)
!15587 = distinct !DILexicalBlock(scope: !15588, file: !15561, line: 144, column: 10)
!15588 = distinct !DILexicalBlock(scope: !15589, file: !15561, line: 142, column: 7)
!15589 = distinct !DILexicalBlock(scope: !15590, file: !15561, line: 141, column: 24)
!15590 = distinct !DILexicalBlock(scope: !15591, file: !15561, line: 141, column: 13)
!15591 = distinct !DILexicalBlock(scope: !15568, file: !15561, line: 134, column: 6)
!15592 = !DILocation(line: 406, column: 2, scope: !15560)
!15593 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2407, file: !2407, line: 817, type: !5245, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15594)
!15594 = !{!15595, !15596, !15597, !15598}
!15595 = !DILocalVariable(name: "entry", arg: 1, scope: !15593, file: !2407, line: 817, type: !5247)
!15596 = !DILocalVariable(name: "p1", arg: 2, scope: !15593, file: !2407, line: 818, type: !124)
!15597 = !DILocalVariable(name: "p2", arg: 3, scope: !15593, file: !2407, line: 818, type: !124)
!15598 = !DILocalVariable(name: "p3", arg: 4, scope: !15593, file: !2407, line: 818, type: !124)
!15599 = !DILocation(line: 0, scope: !15593)
!15600 = !DILocation(line: 822, column: 2, scope: !15593)
!15601 = !DILocation(line: 822, column: 17, scope: !15593)
!15602 = !DILocation(line: 822, column: 30, scope: !15593)
!15603 = !DILocation(line: 823, column: 2, scope: !15593)
!15604 = !DILocation(line: 845, column: 2, scope: !15593)
!15605 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2407, file: !2407, line: 888, type: !15606, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15608)
!15606 = !DISubroutineType(types: !15607)
!15607 = !{!125, !2411}
!15608 = !{!15609}
!15609 = !DILocalVariable(name: "thread", arg: 1, scope: !15605, file: !2407, line: 888, type: !2411)
!15610 = !DILocation(line: 0, scope: !15605)
!15611 = !DILocation(line: 893, column: 2, scope: !15605)
!15612 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2407, file: !2407, line: 897, type: !15613, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15615)
!15613 = !DISubroutineType(types: !15614)
!15614 = !{!125, !2411, !32}
!15615 = !{!15616, !15617}
!15616 = !DILocalVariable(name: "thread", arg: 1, scope: !15612, file: !2407, line: 897, type: !2411)
!15617 = !DILocalVariable(name: "options", arg: 2, scope: !15612, file: !2407, line: 897, type: !32)
!15618 = !DILocation(line: 0, scope: !15612)
!15619 = !DILocation(line: 902, column: 2, scope: !15612)
!15620 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2407, file: !2407, line: 1072, type: !15621, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15626)
!15621 = !DISubroutineType(types: !15622)
!15622 = !{!125, !2410, !15623}
!15623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15624, size: 32)
!15624 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !531, line: 234, baseType: !15625)
!15625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !531, line: 192, elements: !639)
!15626 = !{!15627, !15628}
!15627 = !DILocalVariable(name: "thread", arg: 1, scope: !15620, file: !2407, line: 1072, type: !2410)
!15628 = !DILocalVariable(name: "stats", arg: 2, scope: !15620, file: !2407, line: 1073, type: !15623)
!15629 = !DILocation(line: 0, scope: !15620)
!15630 = !DILocation(line: 1075, column: 14, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15620, file: !2407, line: 1075, column: 6)
!15632 = !DILocation(line: 1075, column: 23, scope: !15631)
!15633 = !DILocation(line: 1086, column: 1, scope: !15620)
!15634 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2407, file: !2407, line: 1088, type: !15635, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !15637)
!15635 = !DISubroutineType(types: !15636)
!15636 = !{!125, !15623}
!15637 = !{!15638}
!15638 = !DILocalVariable(name: "stats", arg: 1, scope: !15634, file: !2407, line: 1088, type: !15623)
!15639 = !DILocation(line: 0, scope: !15634)
!15640 = !DILocation(line: 1094, column: 12, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15634, file: !2407, line: 1094, column: 6)
!15642 = !DILocation(line: 1120, column: 1, scope: !15634)
!15643 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !15644, file: !15644, line: 20, type: !3297, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !639)
!15644 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15645 = !DILocation(line: 30, column: 2, scope: !15643)
!15646 = !DILocation(line: 31, column: 1, scope: !15643)
!15647 = distinct !DISubprogram(name: "idle", scope: !15644, file: !15644, line: 33, type: !5250, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15648)
!15648 = !{!15649, !15650, !15651}
!15649 = !DILocalVariable(name: "unused1", arg: 1, scope: !15647, file: !15644, line: 33, type: !124)
!15650 = !DILocalVariable(name: "unused2", arg: 2, scope: !15647, file: !15644, line: 33, type: !124)
!15651 = !DILocalVariable(name: "unused3", arg: 3, scope: !15647, file: !15644, line: 33, type: !124)
!15652 = !DILocation(line: 0, scope: !15647)
!15653 = !DILocation(line: 41, column: 2, scope: !15647)
!15654 = !DILocation(line: 55, column: 2, scope: !15655, inlinedAt: !15659)
!15655 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6843, file: !6843, line: 42, type: !6844, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !15656)
!15656 = !{!15657, !15658}
!15657 = !DILocalVariable(name: "key", scope: !15655, file: !6843, line: 44, type: !32)
!15658 = !DILocalVariable(name: "tmp", scope: !15655, file: !6843, line: 53, type: !32)
!15659 = distinct !DILocation(line: 62, column: 10, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15647, file: !15644, line: 41, column: 15)
!15661 = !{i64 2240877}
!15662 = !DILocation(line: 0, scope: !15655, inlinedAt: !15659)
!15663 = !DILocation(line: 86, column: 3, scope: !15660)
!15664 = distinct !{!15664, !15653, !15665}
!15665 = !DILocation(line: 105, column: 2, scope: !15647)
!15666 = distinct !DISubprogram(name: "k_cpu_idle", scope: !624, file: !624, line: 5627, type: !3297, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3278, retainedNodes: !639)
!15667 = !DILocation(line: 5629, column: 2, scope: !15666)
!15668 = !DILocation(line: 5630, column: 1, scope: !15666)
!15669 = !DISubprogram(name: "arch_cpu_idle", scope: !5248, file: !5248, line: 167, type: !3297, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!15670 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2639, file: !2639, line: 93, type: !15671, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15673)
!15671 = !DISubroutineType(types: !15672)
!15672 = !{!908, !2534, !2534}
!15673 = !{!15674, !15675, !15676, !15677}
!15674 = !DILocalVariable(name: "thread_1", arg: 1, scope: !15670, file: !2639, line: 93, type: !2534)
!15675 = !DILocalVariable(name: "thread_2", arg: 2, scope: !15670, file: !2639, line: 94, type: !2534)
!15676 = !DILocalVariable(name: "b1", scope: !15670, file: !2639, line: 97, type: !908)
!15677 = !DILocalVariable(name: "b2", scope: !15670, file: !2639, line: 98, type: !908)
!15678 = !DILocation(line: 0, scope: !15670)
!15679 = !DILocation(line: 97, column: 30, scope: !15670)
!15680 = !DILocation(line: 98, column: 30, scope: !15670)
!15681 = !DILocation(line: 100, column: 9, scope: !15682)
!15682 = distinct !DILexicalBlock(scope: !15670, file: !2639, line: 100, column: 6)
!15683 = !DILocation(line: 100, column: 6, scope: !15670)
!15684 = !DILocation(line: 125, column: 1, scope: !15670)
!15685 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2639, file: !2639, line: 428, type: !15686, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15688)
!15686 = !DISubroutineType(types: !15687)
!15687 = !{null, !2534}
!15688 = !{!15689}
!15689 = !DILocalVariable(name: "curr", arg: 1, scope: !15685, file: !2639, line: 428, type: !2534)
!15690 = !DILocation(line: 0, scope: !15685)
!15691 = !DILocation(line: 434, column: 6, scope: !15692)
!15692 = distinct !DILexicalBlock(scope: !15685, file: !2639, line: 434, column: 6)
!15693 = !DILocation(line: 434, column: 23, scope: !15692)
!15694 = !DILocation(line: 434, column: 6, scope: !15685)
!15695 = !DILocation(line: 435, column: 50, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15692, file: !2639, line: 434, column: 29)
!15697 = !DILocation(line: 435, column: 48, scope: !15696)
!15698 = !DILocation(line: 435, column: 29, scope: !15696)
!15699 = !DILocation(line: 436, column: 24, scope: !15696)
!15700 = !DILocation(line: 436, column: 3, scope: !15696)
!15701 = !DILocation(line: 437, column: 2, scope: !15696)
!15702 = !DILocation(line: 438, column: 1, scope: !15685)
!15703 = distinct !DISubprogram(name: "slice_time", scope: !2639, file: !2639, line: 407, type: !15704, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15706)
!15704 = !DISubroutineType(types: !15705)
!15705 = !{!125, !2534}
!15706 = !{!15707, !15708}
!15707 = !DILocalVariable(name: "curr", arg: 1, scope: !15703, file: !2639, line: 407, type: !2534)
!15708 = !DILocalVariable(name: "ret", scope: !15703, file: !2639, line: 409, type: !125)
!15709 = !DILocation(line: 0, scope: !15703)
!15710 = !DILocation(line: 409, column: 12, scope: !15703)
!15711 = !DILocation(line: 416, column: 2, scope: !15703)
!15712 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2639, file: !2639, line: 440, type: !15713, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15715)
!15713 = !DISubroutineType(types: !15714)
!15714 = !{null, !908, !125}
!15715 = !{!15716, !15717, !15718, !15724}
!15716 = !DILocalVariable(name: "slice", arg: 1, scope: !15712, file: !2639, line: 440, type: !908)
!15717 = !DILocalVariable(name: "prio", arg: 2, scope: !15712, file: !2639, line: 440, type: !125)
!15718 = !DILocalVariable(name: "__i", scope: !15719, file: !2639, line: 442, type: !15720)
!15719 = distinct !DILexicalBlock(scope: !15712, file: !2639, line: 442, column: 2)
!15720 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !15721)
!15721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !15722)
!15722 = !{!15723}
!15723 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !15721, file: !638, line: 33, baseType: !125, size: 32)
!15724 = !DILocalVariable(name: "__key", scope: !15719, file: !2639, line: 442, type: !15720)
!15725 = !DILocation(line: 0, scope: !15712)
!15726 = !DILocation(line: 0, scope: !15719)
!15727 = !DILocalVariable(name: "l", arg: 1, scope: !15728, file: !638, line: 136, type: !15731)
!15728 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !15729, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15732)
!15729 = !DISubroutineType(types: !15730)
!15730 = !{!15720, !15731}
!15731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!15732 = !{!15727, !15733}
!15733 = !DILocalVariable(name: "k", scope: !15728, file: !638, line: 139, type: !15720)
!15734 = !DILocation(line: 0, scope: !15728, inlinedAt: !15735)
!15735 = distinct !DILocation(line: 442, column: 2, scope: !15719)
!15736 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !15741)
!15737 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6843, file: !6843, line: 42, type: !6844, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15738)
!15738 = !{!15739, !15740}
!15739 = !DILocalVariable(name: "key", scope: !15737, file: !6843, line: 44, type: !32)
!15740 = !DILocalVariable(name: "tmp", scope: !15737, file: !6843, line: 53, type: !32)
!15741 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !15735)
!15742 = !{i64 2284848}
!15743 = !DILocation(line: 0, scope: !15737, inlinedAt: !15741)
!15744 = !DILocation(line: 443, column: 29, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !15746, file: !2639, line: 442, column: 26)
!15746 = distinct !DILexicalBlock(scope: !15719, file: !2639, line: 442, column: 2)
!15747 = !DILocation(line: 444, column: 17, scope: !15745)
!15748 = !DILocation(line: 445, column: 51, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15745, file: !2639, line: 445, column: 7)
!15750 = !DILocation(line: 445, column: 7, scope: !15745)
!15751 = !DILocation(line: 0, scope: !15745)
!15752 = !DILocation(line: 451, column: 18, scope: !15745)
!15753 = !DILocation(line: 452, column: 3, scope: !15745)
!15754 = !DILocalVariable(name: "key", arg: 2, scope: !15755, file: !638, line: 190, type: !15720)
!15755 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !15756, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15758)
!15756 = !DISubroutineType(types: !15757)
!15757 = !{null, !15731, !15720}
!15758 = !{!15759, !15754}
!15759 = !DILocalVariable(name: "l", arg: 1, scope: !15755, file: !638, line: 189, type: !15731)
!15760 = !DILocation(line: 0, scope: !15755, inlinedAt: !15761)
!15761 = distinct !DILocation(line: 442, column: 2, scope: !15746)
!15762 = !DILocalVariable(name: "key", arg: 1, scope: !15763, file: !6843, line: 84, type: !32)
!15763 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6843, file: !6843, line: 84, type: !6854, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15764)
!15764 = !{!15762}
!15765 = !DILocation(line: 0, scope: !15763, inlinedAt: !15766)
!15766 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !15761)
!15767 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !15766)
!15768 = !{i64 2285665}
!15769 = !DILocation(line: 454, column: 1, scope: !15712)
!15770 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !15561, file: !15561, line: 389, type: !9556, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15771)
!15771 = !{!15772}
!15772 = !DILocalVariable(name: "t", arg: 1, scope: !15770, file: !15561, line: 389, type: !208)
!15773 = !DILocation(line: 0, scope: !15770)
!15774 = !DILocalVariable(name: "t", arg: 1, scope: !15775, file: !15561, line: 102, type: !1796)
!15775 = distinct !DISubprogram(name: "z_tmcvt", scope: !15561, file: !15561, line: 102, type: !15569, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15776)
!15776 = !{!15774, !15777, !15778, !15779, !15780, !15781, !15782, !15783, !15784, !15785, !15786}
!15777 = !DILocalVariable(name: "from_hz", arg: 2, scope: !15775, file: !15561, line: 102, type: !208)
!15778 = !DILocalVariable(name: "to_hz", arg: 3, scope: !15775, file: !15561, line: 103, type: !208)
!15779 = !DILocalVariable(name: "const_hz", arg: 4, scope: !15775, file: !15561, line: 103, type: !153)
!15780 = !DILocalVariable(name: "result32", arg: 5, scope: !15775, file: !15561, line: 104, type: !153)
!15781 = !DILocalVariable(name: "round_up", arg: 6, scope: !15775, file: !15561, line: 104, type: !153)
!15782 = !DILocalVariable(name: "round_off", arg: 7, scope: !15775, file: !15561, line: 105, type: !153)
!15783 = !DILocalVariable(name: "mul_ratio", scope: !15775, file: !15561, line: 107, type: !153)
!15784 = !DILocalVariable(name: "div_ratio", scope: !15775, file: !15561, line: 109, type: !153)
!15785 = !DILocalVariable(name: "off", scope: !15775, file: !15561, line: 116, type: !1796)
!15786 = !DILocalVariable(name: "rdivisor", scope: !15787, file: !15561, line: 119, type: !208)
!15787 = distinct !DILexicalBlock(scope: !15788, file: !15561, line: 118, column: 18)
!15788 = distinct !DILexicalBlock(scope: !15775, file: !15561, line: 118, column: 6)
!15789 = !DILocation(line: 0, scope: !15775, inlinedAt: !15790)
!15790 = distinct !DILocation(line: 392, column: 9, scope: !15770)
!15791 = !DILocation(line: 143, column: 25, scope: !15792, inlinedAt: !15790)
!15792 = distinct !DILexicalBlock(scope: !15793, file: !15561, line: 142, column: 17)
!15793 = distinct !DILexicalBlock(scope: !15794, file: !15561, line: 142, column: 7)
!15794 = distinct !DILexicalBlock(scope: !15795, file: !15561, line: 141, column: 24)
!15795 = distinct !DILexicalBlock(scope: !15796, file: !15561, line: 141, column: 13)
!15796 = distinct !DILexicalBlock(scope: !15775, file: !15561, line: 134, column: 6)
!15797 = !DILocation(line: 392, column: 2, scope: !15770)
!15798 = distinct !DISubprogram(name: "z_time_slice", scope: !2639, file: !2639, line: 502, type: !10192, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15799)
!15799 = !{!15800, !15801}
!15800 = !DILocalVariable(name: "ticks", arg: 1, scope: !15798, file: !2639, line: 502, type: !125)
!15801 = !DILocalVariable(name: "key", scope: !15798, file: !2639, line: 511, type: !15720)
!15802 = !DILocation(line: 0, scope: !15798)
!15803 = !DILocation(line: 0, scope: !15728, inlinedAt: !15804)
!15804 = distinct !DILocation(line: 511, column: 25, scope: !15798)
!15805 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !15806)
!15806 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !15804)
!15807 = !DILocation(line: 0, scope: !15737, inlinedAt: !15806)
!15808 = !DILocation(line: 514, column: 6, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15798, file: !2639, line: 514, column: 6)
!15810 = !DILocation(line: 514, column: 25, scope: !15809)
!15811 = !DILocation(line: 514, column: 22, scope: !15809)
!15812 = !DILocation(line: 514, column: 6, scope: !15798)
!15813 = !DILocation(line: 515, column: 3, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15809, file: !2639, line: 514, column: 35)
!15815 = !DILocation(line: 0, scope: !15755, inlinedAt: !15816)
!15816 = distinct !DILocation(line: 516, column: 3, scope: !15814)
!15817 = !DILocation(line: 0, scope: !15763, inlinedAt: !15818)
!15818 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !15816)
!15819 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !15818)
!15820 = !DILocation(line: 517, column: 3, scope: !15814)
!15821 = !DILocation(line: 519, column: 18, scope: !15798)
!15822 = !DILocation(line: 522, column: 6, scope: !15823)
!15823 = distinct !DILexicalBlock(scope: !15798, file: !2639, line: 522, column: 6)
!15824 = !DILocation(line: 522, column: 27, scope: !15823)
!15825 = !DILocation(line: 522, column: 30, scope: !15823)
!15826 = !DILocation(line: 522, column: 6, scope: !15798)
!15827 = !DILocation(line: 523, column: 30, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15829, file: !2639, line: 523, column: 7)
!15829 = distinct !DILexicalBlock(scope: !15823, file: !2639, line: 522, column: 51)
!15830 = !DILocation(line: 523, column: 13, scope: !15828)
!15831 = !DILocation(line: 523, column: 7, scope: !15829)
!15832 = !DILocation(line: 530, column: 10, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15828, file: !2639, line: 523, column: 43)
!15834 = !DILocation(line: 531, column: 3, scope: !15833)
!15835 = !DILocation(line: 532, column: 30, scope: !15836)
!15836 = distinct !DILexicalBlock(scope: !15828, file: !2639, line: 531, column: 10)
!15837 = !DILocation(line: 535, column: 29, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15823, file: !2639, line: 534, column: 9)
!15839 = !DILocation(line: 0, scope: !15755, inlinedAt: !15840)
!15840 = distinct !DILocation(line: 537, column: 2, scope: !15798)
!15841 = !DILocation(line: 0, scope: !15763, inlinedAt: !15842)
!15842 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !15840)
!15843 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !15842)
!15844 = !DILocation(line: 538, column: 1, scope: !15798)
!15845 = distinct !DISubprogram(name: "sliceable", scope: !2639, file: !2639, line: 468, type: !15846, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15848)
!15846 = !DISubroutineType(types: !15847)
!15847 = !{!153, !2534}
!15848 = !{!15849, !15850}
!15849 = !DILocalVariable(name: "thread", arg: 1, scope: !15845, file: !2639, line: 468, type: !2534)
!15850 = !DILocalVariable(name: "ret", scope: !15845, file: !2639, line: 470, type: !153)
!15851 = !DILocation(line: 0, scope: !15845)
!15852 = !DILocation(line: 470, column: 13, scope: !15845)
!15853 = !DILocation(line: 471, column: 3, scope: !15845)
!15854 = !DILocation(line: 471, column: 7, scope: !15845)
!15855 = !DILocation(line: 472, column: 3, scope: !15845)
!15856 = !DILocation(line: 472, column: 37, scope: !15845)
!15857 = !DILocation(line: 472, column: 24, scope: !15845)
!15858 = !DILocation(line: 472, column: 43, scope: !15845)
!15859 = !DILocation(line: 472, column: 7, scope: !15845)
!15860 = !DILocation(line: 473, column: 3, scope: !15845)
!15861 = !DILocation(line: 473, column: 7, scope: !15845)
!15862 = !DILocation(line: 473, column: 6, scope: !15845)
!15863 = !DILocation(line: 479, column: 2, scope: !15845)
!15864 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2639, file: !2639, line: 482, type: !15865, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15867)
!15865 = !DISubroutineType(types: !15866)
!15866 = !{!15720, !15720}
!15867 = !{!15868, !15869}
!15868 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !15864, file: !2639, line: 482, type: !15720)
!15869 = !DILocalVariable(name: "curr", scope: !15864, file: !2639, line: 484, type: !2534)
!15870 = !DILocation(line: 0, scope: !15864)
!15871 = !DILocation(line: 484, column: 26, scope: !15864)
!15872 = !DILocation(line: 493, column: 7, scope: !15873)
!15873 = distinct !DILexicalBlock(scope: !15864, file: !2639, line: 493, column: 6)
!15874 = !DILocation(line: 493, column: 6, scope: !15864)
!15875 = !DILocation(line: 494, column: 3, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15873, file: !2639, line: 493, column: 49)
!15877 = !DILocation(line: 495, column: 2, scope: !15876)
!15878 = !DILocation(line: 496, column: 2, scope: !15864)
!15879 = !DILocation(line: 499, column: 1, scope: !15864)
!15880 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !15000, file: !15000, line: 106, type: !15846, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15881)
!15881 = !{!15882, !15883}
!15882 = !DILocalVariable(name: "thread", arg: 1, scope: !15880, file: !15000, line: 106, type: !2534)
!15883 = !DILocalVariable(name: "state", scope: !15880, file: !15000, line: 108, type: !150)
!15884 = !DILocation(line: 0, scope: !15880)
!15885 = !DILocation(line: 108, column: 31, scope: !15880)
!15886 = !DILocation(line: 110, column: 16, scope: !15880)
!15887 = !DILocation(line: 111, column: 41, scope: !15880)
!15888 = !DILocation(line: 110, column: 2, scope: !15880)
!15889 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2639, file: !2639, line: 393, type: !15686, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15890)
!15890 = !{!15891}
!15891 = !DILocalVariable(name: "thread", arg: 1, scope: !15889, file: !2639, line: 393, type: !2534)
!15892 = !DILocation(line: 0, scope: !15889)
!15893 = !DILocation(line: 395, column: 6, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15889, file: !2639, line: 395, column: 6)
!15895 = !DILocation(line: 395, column: 6, scope: !15889)
!15896 = !DILocalVariable(name: "thread", arg: 1, scope: !15897, file: !2639, line: 264, type: !2534)
!15897 = distinct !DISubprogram(name: "dequeue_thread", scope: !2639, file: !2639, line: 264, type: !15686, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15898)
!15898 = !{!15896}
!15899 = !DILocation(line: 0, scope: !15897, inlinedAt: !15900)
!15900 = distinct !DILocation(line: 396, column: 3, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15894, file: !2639, line: 395, column: 34)
!15902 = !DILocation(line: 266, column: 15, scope: !15897, inlinedAt: !15900)
!15903 = !DILocation(line: 266, column: 28, scope: !15897, inlinedAt: !15900)
!15904 = !DILocalVariable(name: "thread", arg: 1, scope: !15905, file: !2639, line: 232, type: !2534)
!15905 = distinct !DISubprogram(name: "runq_remove", scope: !2639, file: !2639, line: 232, type: !15686, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15906)
!15906 = !{!15904}
!15907 = !DILocation(line: 0, scope: !15905, inlinedAt: !15908)
!15908 = distinct !DILocation(line: 268, column: 3, scope: !15909, inlinedAt: !15900)
!15909 = distinct !DILexicalBlock(scope: !15910, file: !2639, line: 267, column: 35)
!15910 = distinct !DILexicalBlock(scope: !15897, file: !2639, line: 267, column: 6)
!15911 = !DILocation(line: 234, column: 2, scope: !15905, inlinedAt: !15908)
!15912 = !DILocation(line: 397, column: 2, scope: !15901)
!15913 = !DILocalVariable(name: "thread", arg: 1, scope: !15914, file: !2639, line: 250, type: !2534)
!15914 = distinct !DISubprogram(name: "queue_thread", scope: !2639, file: !2639, line: 250, type: !15686, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15915)
!15915 = !{!15913}
!15916 = !DILocation(line: 0, scope: !15914, inlinedAt: !15917)
!15917 = distinct !DILocation(line: 398, column: 2, scope: !15889)
!15918 = !DILocation(line: 252, column: 15, scope: !15914, inlinedAt: !15917)
!15919 = !DILocation(line: 252, column: 28, scope: !15914, inlinedAt: !15917)
!15920 = !DILocalVariable(name: "thread", arg: 1, scope: !15921, file: !2639, line: 227, type: !2534)
!15921 = distinct !DISubprogram(name: "runq_add", scope: !2639, file: !2639, line: 227, type: !15686, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15922)
!15922 = !{!15920}
!15923 = !DILocation(line: 0, scope: !15921, inlinedAt: !15924)
!15924 = distinct !DILocation(line: 254, column: 3, scope: !15925, inlinedAt: !15917)
!15925 = distinct !DILexicalBlock(scope: !15926, file: !2639, line: 253, column: 35)
!15926 = distinct !DILexicalBlock(scope: !15914, file: !2639, line: 253, column: 6)
!15927 = !DILocalVariable(name: "pq", arg: 1, scope: !15928, file: !2639, line: 181, type: !15931)
!15928 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2639, file: !2639, line: 181, type: !15929, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15932)
!15929 = !DISubroutineType(types: !15930)
!15930 = !{null, !15931, !2534}
!15931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 32)
!15932 = !{!15927, !15933, !15934}
!15933 = !DILocalVariable(name: "thread", arg: 2, scope: !15928, file: !2639, line: 182, type: !2534)
!15934 = !DILocalVariable(name: "t", scope: !15928, file: !2639, line: 184, type: !2534)
!15935 = !DILocation(line: 0, scope: !15928, inlinedAt: !15936)
!15936 = distinct !DILocation(line: 229, column: 2, scope: !15921, inlinedAt: !15924)
!15937 = !DILocation(line: 188, column: 2, scope: !15938, inlinedAt: !15936)
!15938 = distinct !DILexicalBlock(scope: !15928, file: !2639, line: 188, column: 2)
!15939 = !DILocation(line: 188, column: 2, scope: !15940, inlinedAt: !15936)
!15940 = distinct !DILexicalBlock(scope: !15938, file: !2639, line: 188, column: 2)
!15941 = !DILocation(line: 0, scope: !15938, inlinedAt: !15936)
!15942 = !DILocation(line: 189, column: 7, scope: !15943, inlinedAt: !15936)
!15943 = distinct !DILexicalBlock(scope: !15944, file: !2639, line: 189, column: 7)
!15944 = distinct !DILexicalBlock(scope: !15940, file: !2639, line: 188, column: 56)
!15945 = !DILocation(line: 189, column: 35, scope: !15943, inlinedAt: !15936)
!15946 = !DILocation(line: 189, column: 7, scope: !15944, inlinedAt: !15936)
!15947 = !DILocation(line: 191, column: 21, scope: !15948, inlinedAt: !15936)
!15948 = distinct !DILexicalBlock(scope: !15943, file: !2639, line: 189, column: 40)
!15949 = !DILocation(line: 190, column: 4, scope: !15948, inlinedAt: !15936)
!15950 = !DILocation(line: 192, column: 4, scope: !15948, inlinedAt: !15936)
!15951 = distinct !{!15951, !15937, !15952}
!15952 = !DILocation(line: 194, column: 2, scope: !15938, inlinedAt: !15936)
!15953 = !DILocation(line: 196, column: 37, scope: !15928, inlinedAt: !15936)
!15954 = !DILocation(line: 196, column: 2, scope: !15928, inlinedAt: !15936)
!15955 = !DILocation(line: 197, column: 1, scope: !15928, inlinedAt: !15936)
!15956 = !DILocation(line: 399, column: 25, scope: !15889)
!15957 = !DILocation(line: 399, column: 22, scope: !15889)
!15958 = !DILocation(line: 399, column: 2, scope: !15889)
!15959 = !DILocation(line: 400, column: 1, scope: !15889)
!15960 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !15000, file: !15000, line: 136, type: !15846, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15961)
!15961 = !{!15962}
!15962 = !DILocalVariable(name: "thread", arg: 1, scope: !15960, file: !15000, line: 136, type: !2534)
!15963 = !DILocation(line: 0, scope: !15960)
!15964 = !DILocation(line: 138, column: 9, scope: !15960)
!15965 = !DILocation(line: 138, column: 2, scope: !15960)
!15966 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2639, file: !2639, line: 1137, type: !15929, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15967)
!15967 = !{!15968, !15969}
!15968 = !DILocalVariable(name: "pq", arg: 1, scope: !15966, file: !2639, line: 1137, type: !15931)
!15969 = !DILocalVariable(name: "thread", arg: 2, scope: !15966, file: !2639, line: 1137, type: !2534)
!15970 = !DILocation(line: 0, scope: !15966)
!15971 = !DILocation(line: 1141, column: 33, scope: !15966)
!15972 = !DILocation(line: 1141, column: 2, scope: !15966)
!15973 = !DILocation(line: 1142, column: 1, scope: !15966)
!15974 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !15975, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15977)
!15975 = !DISubroutineType(types: !15976)
!15976 = !{!2635, !15931}
!15977 = !{!15978}
!15978 = !DILocalVariable(name: "list", arg: 1, scope: !15974, file: !541, line: 294, type: !15931)
!15979 = !DILocation(line: 0, scope: !15974)
!15980 = !DILocation(line: 296, column: 9, scope: !15974)
!15981 = !DILocation(line: 296, column: 49, scope: !15974)
!15982 = !DILocation(line: 296, column: 2, scope: !15974)
!15983 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !15984, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !15986)
!15984 = !DISubroutineType(types: !15985)
!15985 = !{null, !2635, !2635}
!15986 = !{!15987, !15988, !15989}
!15987 = !DILocalVariable(name: "successor", arg: 1, scope: !15983, file: !541, line: 443, type: !2635)
!15988 = !DILocalVariable(name: "node", arg: 2, scope: !15983, file: !541, line: 443, type: !2635)
!15989 = !DILocalVariable(name: "prev", scope: !15983, file: !541, line: 445, type: !15990)
!15990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2635)
!15991 = !DILocation(line: 0, scope: !15983)
!15992 = !DILocation(line: 445, column: 39, scope: !15983)
!15993 = !DILocation(line: 447, column: 8, scope: !15983)
!15994 = !DILocation(line: 447, column: 13, scope: !15983)
!15995 = !DILocation(line: 448, column: 8, scope: !15983)
!15996 = !DILocation(line: 448, column: 13, scope: !15983)
!15997 = !DILocation(line: 449, column: 8, scope: !15983)
!15998 = !DILocation(line: 449, column: 13, scope: !15983)
!15999 = !DILocation(line: 450, column: 18, scope: !15983)
!16000 = !DILocation(line: 451, column: 1, scope: !15983)
!16001 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !16002, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16004)
!16002 = !DISubroutineType(types: !16003)
!16003 = !{!2635, !15931, !2635}
!16004 = !{!16005, !16006}
!16005 = !DILocalVariable(name: "list", arg: 1, scope: !16001, file: !541, line: 341, type: !15931)
!16006 = !DILocalVariable(name: "node", arg: 2, scope: !16001, file: !541, line: 342, type: !2635)
!16007 = !DILocation(line: 0, scope: !16001)
!16008 = !DILocation(line: 344, column: 15, scope: !16001)
!16009 = !DILocation(line: 344, column: 9, scope: !16001)
!16010 = !DILocation(line: 344, column: 26, scope: !16001)
!16011 = !DILocation(line: 344, column: 2, scope: !16001)
!16012 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !16013, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16015)
!16013 = !DISubroutineType(types: !16014)
!16014 = !{null, !15931, !2635}
!16015 = !{!16016, !16017, !16018}
!16016 = !DILocalVariable(name: "list", arg: 1, scope: !16012, file: !541, line: 404, type: !15931)
!16017 = !DILocalVariable(name: "node", arg: 2, scope: !16012, file: !541, line: 404, type: !2635)
!16018 = !DILocalVariable(name: "tail", scope: !16012, file: !541, line: 406, type: !15990)
!16019 = !DILocation(line: 0, scope: !16012)
!16020 = !DILocation(line: 406, column: 34, scope: !16012)
!16021 = !DILocation(line: 408, column: 8, scope: !16012)
!16022 = !DILocation(line: 408, column: 13, scope: !16012)
!16023 = !DILocation(line: 409, column: 8, scope: !16012)
!16024 = !DILocation(line: 409, column: 13, scope: !16012)
!16025 = !DILocation(line: 411, column: 8, scope: !16012)
!16026 = !DILocation(line: 411, column: 13, scope: !16012)
!16027 = !DILocation(line: 412, column: 13, scope: !16012)
!16028 = !DILocation(line: 413, column: 1, scope: !16012)
!16029 = distinct !DISubprogram(name: "update_cache", scope: !2639, file: !2639, line: 559, type: !10192, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16030)
!16030 = !{!16031, !16032}
!16031 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !16029, file: !2639, line: 559, type: !125)
!16032 = !DILocalVariable(name: "thread", scope: !16029, file: !2639, line: 562, type: !2534)
!16033 = !DILocation(line: 0, scope: !16029)
!16034 = !DILocation(line: 239, column: 9, scope: !16035, inlinedAt: !16038)
!16035 = distinct !DISubprogram(name: "runq_best", scope: !2639, file: !2639, line: 237, type: !16036, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!16036 = !DISubroutineType(types: !16037)
!16037 = !{!2534}
!16038 = distinct !DILocation(line: 314, column: 28, scope: !16039, inlinedAt: !16042)
!16039 = distinct !DISubprogram(name: "next_up", scope: !2639, file: !2639, line: 312, type: !16036, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16040)
!16040 = !{!16041}
!16041 = !DILocalVariable(name: "thread", scope: !16039, file: !2639, line: 314, type: !2534)
!16042 = distinct !DILocation(line: 562, column: 28, scope: !16029)
!16043 = !DILocation(line: 0, scope: !16039, inlinedAt: !16042)
!16044 = !DILocation(line: 340, column: 17, scope: !16039, inlinedAt: !16042)
!16045 = !DILocation(line: 340, column: 9, scope: !16039, inlinedAt: !16042)
!16046 = !DILocalVariable(name: "thread", arg: 1, scope: !16047, file: !2639, line: 127, type: !2534)
!16047 = distinct !DISubprogram(name: "should_preempt", scope: !2639, file: !2639, line: 127, type: !16048, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16050)
!16048 = !DISubroutineType(types: !16049)
!16049 = !{!153, !2534, !125}
!16050 = !{!16046, !16051}
!16051 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !16047, file: !2639, line: 128, type: !125)
!16052 = !DILocation(line: 0, scope: !16047, inlinedAt: !16053)
!16053 = distinct !DILocation(line: 564, column: 6, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16029, file: !2639, line: 564, column: 6)
!16055 = !DILocation(line: 133, column: 17, scope: !16056, inlinedAt: !16053)
!16056 = distinct !DILexicalBlock(scope: !16047, file: !2639, line: 133, column: 6)
!16057 = !DILocation(line: 0, scope: !16054)
!16058 = !DILocation(line: 133, column: 6, scope: !16047, inlinedAt: !16053)
!16059 = !DILocation(line: 140, column: 6, scope: !16060, inlinedAt: !16053)
!16060 = distinct !DILexicalBlock(scope: !16047, file: !2639, line: 140, column: 6)
!16061 = !DILocation(line: 140, column: 6, scope: !16047, inlinedAt: !16053)
!16062 = !DILocation(line: 150, column: 9, scope: !16063, inlinedAt: !16053)
!16063 = distinct !DILexicalBlock(scope: !16047, file: !2639, line: 149, column: 6)
!16064 = !DILocation(line: 149, column: 6, scope: !16047, inlinedAt: !16053)
!16065 = !DILocation(line: 157, column: 6, scope: !16066, inlinedAt: !16053)
!16066 = distinct !DILexicalBlock(scope: !16047, file: !2639, line: 157, column: 6)
!16067 = !DILocation(line: 564, column: 6, scope: !16029)
!16068 = !DILocation(line: 566, column: 14, scope: !16069)
!16069 = distinct !DILexicalBlock(scope: !16070, file: !2639, line: 566, column: 7)
!16070 = distinct !DILexicalBlock(scope: !16054, file: !2639, line: 564, column: 42)
!16071 = !DILocation(line: 566, column: 7, scope: !16070)
!16072 = !DILocation(line: 567, column: 4, scope: !16073)
!16073 = distinct !DILexicalBlock(scope: !16069, file: !2639, line: 566, column: 27)
!16074 = !DILocation(line: 568, column: 3, scope: !16073)
!16075 = !DILocation(line: 585, column: 1, scope: !16029)
!16076 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2639, file: !2639, line: 1144, type: !16077, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16079)
!16077 = !DISubroutineType(types: !16078)
!16078 = !{!2534, !15931}
!16079 = !{!16080, !16081, !16082}
!16080 = !DILocalVariable(name: "pq", arg: 1, scope: !16076, file: !2639, line: 1144, type: !15931)
!16081 = !DILocalVariable(name: "thread", scope: !16076, file: !2639, line: 1146, type: !2534)
!16082 = !DILocalVariable(name: "n", scope: !16076, file: !2639, line: 1147, type: !2635)
!16083 = !DILocation(line: 0, scope: !16076)
!16084 = !DILocation(line: 1147, column: 19, scope: !16076)
!16085 = !DILocation(line: 1152, column: 2, scope: !16076)
!16086 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !15000, file: !15000, line: 115, type: !15846, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16087)
!16087 = !{!16088}
!16088 = !DILocalVariable(name: "thread", arg: 1, scope: !16086, file: !15000, line: 115, type: !2534)
!16089 = !DILocation(line: 0, scope: !16086)
!16090 = !DILocation(line: 117, column: 46, scope: !16086)
!16091 = !DILocation(line: 117, column: 10, scope: !16086)
!16092 = !DILocation(line: 117, column: 9, scope: !16086)
!16093 = !DILocation(line: 117, column: 2, scope: !16086)
!16094 = distinct !DISubprogram(name: "is_preempt", scope: !2639, file: !2639, line: 62, type: !15704, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16095)
!16095 = !{!16096}
!16096 = !DILocalVariable(name: "thread", arg: 1, scope: !16094, file: !2639, line: 62, type: !2534)
!16097 = !DILocation(line: 0, scope: !16094)
!16098 = !DILocation(line: 65, column: 22, scope: !16094)
!16099 = !DILocation(line: 65, column: 30, scope: !16094)
!16100 = !DILocation(line: 65, column: 2, scope: !16094)
!16101 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15394, file: !15394, line: 35, type: !16102, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16106)
!16102 = !DISubroutineType(types: !16103)
!16103 = !{!153, !16104}
!16104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16105, size: 32)
!16105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2585)
!16106 = !{!16107}
!16107 = !DILocalVariable(name: "to", arg: 1, scope: !16101, file: !15394, line: 35, type: !16104)
!16108 = !DILocation(line: 0, scope: !16101)
!16109 = !DILocation(line: 37, column: 35, scope: !16101)
!16110 = !DILocation(line: 37, column: 10, scope: !16101)
!16111 = !DILocation(line: 37, column: 9, scope: !16101)
!16112 = !DILocation(line: 37, column: 2, scope: !16101)
!16113 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !16114, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16118)
!16114 = !DISubroutineType(types: !16115)
!16115 = !{!153, !16116}
!16116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16117, size: 32)
!16117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2544)
!16118 = !{!16119}
!16119 = !DILocalVariable(name: "node", arg: 1, scope: !16113, file: !541, line: 225, type: !16116)
!16120 = !DILocation(line: 0, scope: !16113)
!16121 = !DILocation(line: 227, column: 15, scope: !16113)
!16122 = !DILocation(line: 227, column: 20, scope: !16113)
!16123 = !DILocation(line: 227, column: 2, scope: !16113)
!16124 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !16002, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16125)
!16125 = !{!16126, !16127}
!16126 = !DILocalVariable(name: "list", arg: 1, scope: !16124, file: !541, line: 325, type: !15931)
!16127 = !DILocalVariable(name: "node", arg: 2, scope: !16124, file: !541, line: 326, type: !2635)
!16128 = !DILocation(line: 0, scope: !16124)
!16129 = !DILocation(line: 328, column: 24, scope: !16124)
!16130 = !DILocation(line: 328, column: 15, scope: !16124)
!16131 = !DILocation(line: 328, column: 9, scope: !16124)
!16132 = !DILocation(line: 328, column: 45, scope: !16124)
!16133 = !DILocation(line: 328, column: 2, scope: !16124)
!16134 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !16135, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16137)
!16135 = !DISubroutineType(types: !16136)
!16136 = !{!153, !15931}
!16137 = !{!16138}
!16138 = !DILocalVariable(name: "list", arg: 1, scope: !16134, file: !541, line: 266, type: !15931)
!16139 = !DILocation(line: 0, scope: !16134)
!16140 = !DILocation(line: 268, column: 15, scope: !16134)
!16141 = !DILocation(line: 268, column: 20, scope: !16134)
!16142 = !DILocation(line: 268, column: 2, scope: !16134)
!16143 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !16144, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16146)
!16144 = !DISubroutineType(types: !16145)
!16145 = !{null, !2635}
!16146 = !{!16147, !16148, !16149}
!16147 = !DILocalVariable(name: "node", arg: 1, scope: !16143, file: !541, line: 496, type: !2635)
!16148 = !DILocalVariable(name: "prev", scope: !16143, file: !541, line: 498, type: !15990)
!16149 = !DILocalVariable(name: "next", scope: !16143, file: !541, line: 499, type: !15990)
!16150 = !DILocation(line: 0, scope: !16143)
!16151 = !DILocation(line: 498, column: 34, scope: !16143)
!16152 = !DILocation(line: 499, column: 34, scope: !16143)
!16153 = !DILocation(line: 501, column: 8, scope: !16143)
!16154 = !DILocation(line: 501, column: 13, scope: !16143)
!16155 = !DILocation(line: 502, column: 8, scope: !16143)
!16156 = !DILocation(line: 502, column: 13, scope: !16143)
!16157 = !DILocation(line: 503, column: 2, scope: !16143)
!16158 = !DILocation(line: 504, column: 1, scope: !16143)
!16159 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !16144, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16160)
!16160 = !{!16161}
!16161 = !DILocalVariable(name: "node", arg: 1, scope: !16159, file: !541, line: 211, type: !2635)
!16162 = !DILocation(line: 0, scope: !16159)
!16163 = !DILocation(line: 213, column: 8, scope: !16159)
!16164 = !DILocation(line: 213, column: 13, scope: !16159)
!16165 = !DILocation(line: 214, column: 8, scope: !16159)
!16166 = !DILocation(line: 214, column: 13, scope: !16159)
!16167 = !DILocation(line: 215, column: 1, scope: !16159)
!16168 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !15000, file: !15000, line: 131, type: !16169, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16171)
!16169 = !DISubroutineType(types: !16170)
!16170 = !{!153, !2534, !208}
!16171 = !{!16172, !16173}
!16172 = !DILocalVariable(name: "thread", arg: 1, scope: !16168, file: !15000, line: 131, type: !2534)
!16173 = !DILocalVariable(name: "state", arg: 2, scope: !16168, file: !15000, line: 131, type: !208)
!16174 = !DILocation(line: 0, scope: !16168)
!16175 = !DILocation(line: 133, column: 23, scope: !16168)
!16176 = !DILocation(line: 133, column: 45, scope: !16168)
!16177 = !DILocation(line: 133, column: 2, scope: !16168)
!16178 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !15000, file: !15000, line: 211, type: !16179, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16181)
!16179 = !DISubroutineType(types: !16180)
!16180 = !{!153, !125, !125}
!16181 = !{!16182, !16183}
!16182 = !DILocalVariable(name: "prio", arg: 1, scope: !16178, file: !15000, line: 211, type: !125)
!16183 = !DILocalVariable(name: "test_prio", arg: 2, scope: !16178, file: !15000, line: 211, type: !125)
!16184 = !DILocation(line: 0, scope: !16178)
!16185 = !DILocation(line: 213, column: 9, scope: !16178)
!16186 = !DILocation(line: 213, column: 2, scope: !16178)
!16187 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !15000, file: !15000, line: 83, type: !15846, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16188)
!16188 = !{!16189}
!16189 = !DILocalVariable(name: "thread", arg: 1, scope: !16187, file: !15000, line: 83, type: !2534)
!16190 = !DILocation(line: 0, scope: !16187)
!16191 = !DILocation(line: 89, column: 16, scope: !16187)
!16192 = !DILocation(line: 89, column: 2, scope: !16187)
!16193 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !15000, file: !15000, line: 206, type: !16179, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16194)
!16194 = !{!16195, !16196}
!16195 = !DILocalVariable(name: "prio1", arg: 1, scope: !16193, file: !15000, line: 206, type: !125)
!16196 = !DILocalVariable(name: "prio2", arg: 2, scope: !16193, file: !15000, line: 206, type: !125)
!16197 = !DILocation(line: 0, scope: !16193)
!16198 = !DILocation(line: 208, column: 15, scope: !16193)
!16199 = !DILocation(line: 208, column: 2, scope: !16193)
!16200 = distinct !DISubprogram(name: "z_ready_thread", scope: !2639, file: !2639, line: 635, type: !15686, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16201)
!16201 = !{!16202, !16203, !16205}
!16202 = !DILocalVariable(name: "thread", arg: 1, scope: !16200, file: !2639, line: 635, type: !2534)
!16203 = !DILocalVariable(name: "__i", scope: !16204, file: !2639, line: 637, type: !15720)
!16204 = distinct !DILexicalBlock(scope: !16200, file: !2639, line: 637, column: 2)
!16205 = !DILocalVariable(name: "__key", scope: !16204, file: !2639, line: 637, type: !15720)
!16206 = !DILocation(line: 0, scope: !16200)
!16207 = !DILocation(line: 0, scope: !16204)
!16208 = !DILocation(line: 0, scope: !15728, inlinedAt: !16209)
!16209 = distinct !DILocation(line: 637, column: 2, scope: !16204)
!16210 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16211)
!16211 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16209)
!16212 = !DILocation(line: 0, scope: !15737, inlinedAt: !16211)
!16213 = !DILocation(line: 639, column: 4, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16215, file: !2639, line: 638, column: 41)
!16215 = distinct !DILexicalBlock(scope: !16216, file: !2639, line: 638, column: 7)
!16216 = distinct !DILexicalBlock(scope: !16217, file: !2639, line: 637, column: 26)
!16217 = distinct !DILexicalBlock(scope: !16204, file: !2639, line: 637, column: 2)
!16218 = !DILocation(line: 0, scope: !15755, inlinedAt: !16219)
!16219 = distinct !DILocation(line: 637, column: 2, scope: !16217)
!16220 = !DILocation(line: 0, scope: !15763, inlinedAt: !16221)
!16221 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16219)
!16222 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16221)
!16223 = !DILocation(line: 642, column: 1, scope: !16200)
!16224 = distinct !DISubprogram(name: "ready_thread", scope: !2639, file: !2639, line: 617, type: !15686, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16225)
!16225 = !{!16226}
!16226 = !DILocalVariable(name: "thread", arg: 1, scope: !16224, file: !2639, line: 617, type: !2534)
!16227 = !DILocation(line: 0, scope: !16224)
!16228 = !DILocation(line: 626, column: 7, scope: !16229)
!16229 = distinct !DILexicalBlock(scope: !16224, file: !2639, line: 626, column: 6)
!16230 = !DILocation(line: 626, column: 34, scope: !16229)
!16231 = !DILocation(line: 626, column: 37, scope: !16229)
!16232 = !DILocation(line: 626, column: 6, scope: !16224)
!16233 = !DILocation(line: 0, scope: !15914, inlinedAt: !16234)
!16234 = distinct !DILocation(line: 629, column: 3, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16229, file: !2639, line: 626, column: 64)
!16236 = !DILocation(line: 252, column: 15, scope: !15914, inlinedAt: !16234)
!16237 = !DILocation(line: 252, column: 28, scope: !15914, inlinedAt: !16234)
!16238 = !DILocation(line: 0, scope: !15921, inlinedAt: !16239)
!16239 = distinct !DILocation(line: 254, column: 3, scope: !15925, inlinedAt: !16234)
!16240 = !DILocation(line: 0, scope: !15928, inlinedAt: !16241)
!16241 = distinct !DILocation(line: 229, column: 2, scope: !15921, inlinedAt: !16239)
!16242 = !DILocation(line: 188, column: 2, scope: !15938, inlinedAt: !16241)
!16243 = !DILocation(line: 188, column: 2, scope: !15940, inlinedAt: !16241)
!16244 = !DILocation(line: 0, scope: !15938, inlinedAt: !16241)
!16245 = !DILocation(line: 189, column: 7, scope: !15943, inlinedAt: !16241)
!16246 = !DILocation(line: 189, column: 35, scope: !15943, inlinedAt: !16241)
!16247 = !DILocation(line: 189, column: 7, scope: !15944, inlinedAt: !16241)
!16248 = !DILocation(line: 191, column: 21, scope: !15948, inlinedAt: !16241)
!16249 = !DILocation(line: 190, column: 4, scope: !15948, inlinedAt: !16241)
!16250 = !DILocation(line: 192, column: 4, scope: !15948, inlinedAt: !16241)
!16251 = distinct !{!16251, !16242, !16252}
!16252 = !DILocation(line: 194, column: 2, scope: !15938, inlinedAt: !16241)
!16253 = !DILocation(line: 196, column: 37, scope: !15928, inlinedAt: !16241)
!16254 = !DILocation(line: 196, column: 2, scope: !15928, inlinedAt: !16241)
!16255 = !DILocation(line: 197, column: 1, scope: !15928, inlinedAt: !16241)
!16256 = !DILocation(line: 630, column: 3, scope: !16235)
!16257 = !DILocation(line: 632, column: 2, scope: !16235)
!16258 = !DILocation(line: 633, column: 1, scope: !16224)
!16259 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !15000, file: !15000, line: 120, type: !15846, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16260)
!16260 = !{!16261}
!16261 = !DILocalVariable(name: "thread", arg: 1, scope: !16259, file: !15000, line: 120, type: !2534)
!16262 = !DILocation(line: 0, scope: !16259)
!16263 = !DILocation(line: 122, column: 12, scope: !16259)
!16264 = !DILocation(line: 122, column: 62, scope: !16259)
!16265 = !DILocation(line: 123, column: 4, scope: !16259)
!16266 = !DILocation(line: 122, column: 2, scope: !16259)
!16267 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2639, file: !2639, line: 644, type: !15686, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16268)
!16268 = !{!16269, !16270, !16272}
!16269 = !DILocalVariable(name: "thread", arg: 1, scope: !16267, file: !2639, line: 644, type: !2534)
!16270 = !DILocalVariable(name: "__i", scope: !16271, file: !2639, line: 646, type: !15720)
!16271 = distinct !DILexicalBlock(scope: !16267, file: !2639, line: 646, column: 2)
!16272 = !DILocalVariable(name: "__key", scope: !16271, file: !2639, line: 646, type: !15720)
!16273 = !DILocation(line: 0, scope: !16267)
!16274 = !DILocation(line: 0, scope: !16271)
!16275 = !DILocation(line: 0, scope: !15728, inlinedAt: !16276)
!16276 = distinct !DILocation(line: 646, column: 2, scope: !16271)
!16277 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16278)
!16278 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16276)
!16279 = !DILocation(line: 0, scope: !15737, inlinedAt: !16278)
!16280 = !DILocation(line: 647, column: 3, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16282, file: !2639, line: 646, column: 26)
!16282 = distinct !DILexicalBlock(scope: !16271, file: !2639, line: 646, column: 2)
!16283 = !DILocation(line: 0, scope: !15755, inlinedAt: !16284)
!16284 = distinct !DILocation(line: 646, column: 2, scope: !16282)
!16285 = !DILocation(line: 0, scope: !15763, inlinedAt: !16286)
!16286 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16284)
!16287 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16286)
!16288 = !DILocation(line: 649, column: 1, scope: !16267)
!16289 = distinct !DISubprogram(name: "z_sched_start", scope: !2639, file: !2639, line: 651, type: !15686, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16290)
!16290 = !{!16291, !16292}
!16291 = !DILocalVariable(name: "thread", arg: 1, scope: !16289, file: !2639, line: 651, type: !2534)
!16292 = !DILocalVariable(name: "key", scope: !16289, file: !2639, line: 653, type: !15720)
!16293 = !DILocation(line: 0, scope: !16289)
!16294 = !DILocation(line: 0, scope: !15728, inlinedAt: !16295)
!16295 = distinct !DILocation(line: 653, column: 25, scope: !16289)
!16296 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16297)
!16297 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16295)
!16298 = !DILocation(line: 0, scope: !15737, inlinedAt: !16297)
!16299 = !DILocation(line: 655, column: 6, scope: !16300)
!16300 = distinct !DILexicalBlock(scope: !16289, file: !2639, line: 655, column: 6)
!16301 = !DILocation(line: 655, column: 6, scope: !16289)
!16302 = !DILocation(line: 0, scope: !15755, inlinedAt: !16303)
!16303 = distinct !DILocation(line: 656, column: 3, scope: !16304)
!16304 = distinct !DILexicalBlock(scope: !16300, file: !2639, line: 655, column: 36)
!16305 = !DILocation(line: 0, scope: !15763, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16303)
!16307 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16306)
!16308 = !DILocation(line: 657, column: 3, scope: !16304)
!16309 = !DILocation(line: 660, column: 2, scope: !16289)
!16310 = !DILocation(line: 661, column: 2, scope: !16289)
!16311 = !DILocation(line: 662, column: 2, scope: !16289)
!16312 = !DILocation(line: 663, column: 1, scope: !16289)
!16313 = distinct !DISubprogram(name: "z_has_thread_started", scope: !15000, file: !15000, line: 126, type: !15846, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16314)
!16314 = !{!16315}
!16315 = !DILocalVariable(name: "thread", arg: 1, scope: !16313, file: !15000, line: 126, type: !2534)
!16316 = !DILocation(line: 0, scope: !16313)
!16317 = !DILocation(line: 128, column: 23, scope: !16313)
!16318 = !DILocation(line: 128, column: 36, scope: !16313)
!16319 = !DILocation(line: 128, column: 56, scope: !16313)
!16320 = !DILocation(line: 128, column: 2, scope: !16313)
!16321 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !15000, file: !15000, line: 155, type: !15686, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16322)
!16322 = !{!16323}
!16323 = !DILocalVariable(name: "thread", arg: 1, scope: !16321, file: !15000, line: 155, type: !2534)
!16324 = !DILocation(line: 0, scope: !16321)
!16325 = !DILocation(line: 157, column: 15, scope: !16321)
!16326 = !DILocation(line: 157, column: 28, scope: !16321)
!16327 = !DILocation(line: 158, column: 1, scope: !16321)
!16328 = distinct !DISubprogram(name: "z_reschedule", scope: !2639, file: !2639, line: 967, type: !15756, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16329)
!16329 = !{!16330, !16331}
!16330 = !DILocalVariable(name: "lock", arg: 1, scope: !16328, file: !2639, line: 967, type: !15731)
!16331 = !DILocalVariable(name: "key", arg: 2, scope: !16328, file: !2639, line: 967, type: !15720)
!16332 = !DILocation(line: 0, scope: !16328)
!16333 = !DILocation(line: 969, column: 6, scope: !16334)
!16334 = distinct !DILexicalBlock(scope: !16328, file: !2639, line: 969, column: 6)
!16335 = !DILocation(line: 969, column: 23, scope: !16334)
!16336 = !DILocation(line: 969, column: 26, scope: !16334)
!16337 = !DILocation(line: 969, column: 6, scope: !16328)
!16338 = !DILocalVariable(name: "key", arg: 2, scope: !16339, file: !15104, line: 193, type: !15720)
!16339 = distinct !DISubprogram(name: "z_swap", scope: !15104, file: !15104, line: 193, type: !16340, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16342)
!16340 = !DISubroutineType(types: !16341)
!16341 = !{!125, !15731, !15720}
!16342 = !{!16343, !16338}
!16343 = !DILocalVariable(name: "lock", arg: 1, scope: !16339, file: !15104, line: 193, type: !15731)
!16344 = !DILocation(line: 0, scope: !16339, inlinedAt: !16345)
!16345 = distinct !DILocation(line: 970, column: 3, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16334, file: !2639, line: 969, column: 39)
!16347 = !DILocation(line: 196, column: 9, scope: !16339, inlinedAt: !16345)
!16348 = !DILocation(line: 971, column: 2, scope: !16346)
!16349 = !DILocation(line: 0, scope: !15755, inlinedAt: !16350)
!16350 = distinct !DILocation(line: 972, column: 3, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16334, file: !2639, line: 971, column: 9)
!16352 = !DILocation(line: 0, scope: !15763, inlinedAt: !16353)
!16353 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16350)
!16354 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16353)
!16355 = !DILocation(line: 975, column: 1, scope: !16328)
!16356 = distinct !DISubprogram(name: "resched", scope: !2639, file: !2639, line: 940, type: !16357, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16359)
!16357 = !DISubroutineType(types: !16358)
!16358 = !{!153, !208}
!16359 = !{!16360}
!16360 = !DILocalVariable(name: "key", arg: 1, scope: !16356, file: !2639, line: 940, type: !208)
!16361 = !DILocation(line: 0, scope: !16356)
!16362 = !DILocalVariable(name: "key", arg: 1, scope: !16363, file: !6843, line: 112, type: !32)
!16363 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6843, file: !6843, line: 112, type: !16364, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16366)
!16364 = !DISubroutineType(types: !16365)
!16365 = !{!153, !32}
!16366 = !{!16362}
!16367 = !DILocation(line: 0, scope: !16363, inlinedAt: !16368)
!16368 = distinct !DILocation(line: 946, column: 9, scope: !16356)
!16369 = !DILocation(line: 115, column: 13, scope: !16363, inlinedAt: !16368)
!16370 = !DILocation(line: 946, column: 32, scope: !16356)
!16371 = !DILocation(line: 1031, column: 3, scope: !16372, inlinedAt: !16375)
!16372 = distinct !DISubprogram(name: "__get_IPSR", scope: !8310, file: !8310, line: 1027, type: !8391, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16373)
!16373 = !{!16374}
!16374 = !DILocalVariable(name: "result", scope: !16372, file: !8310, line: 1029, type: !208)
!16375 = distinct !DILocation(line: 48, column: 10, scope: !16376, inlinedAt: !16377)
!16376 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !9328, file: !9328, line: 46, type: !9329, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!16377 = distinct !DILocation(line: 946, column: 36, scope: !16356)
!16378 = !{i64 3539719}
!16379 = !DILocation(line: 0, scope: !16372, inlinedAt: !16375)
!16380 = !DILocation(line: 48, column: 9, scope: !16376, inlinedAt: !16377)
!16381 = !DILocation(line: 946, column: 2, scope: !16356)
!16382 = distinct !DISubprogram(name: "need_swap", scope: !2639, file: !2639, line: 953, type: !9329, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16383)
!16383 = !{!16384}
!16384 = !DILocalVariable(name: "new_thread", scope: !16382, file: !2639, line: 959, type: !2534)
!16385 = !DILocation(line: 962, column: 31, scope: !16382)
!16386 = !DILocation(line: 0, scope: !16382)
!16387 = !DILocation(line: 963, column: 23, scope: !16382)
!16388 = !DILocation(line: 963, column: 20, scope: !16382)
!16389 = !DILocation(line: 963, column: 2, scope: !16382)
!16390 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !15104, file: !15104, line: 181, type: !8320, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16391)
!16391 = !{!16392, !16393}
!16392 = !DILocalVariable(name: "key", arg: 1, scope: !16390, file: !15104, line: 181, type: !32)
!16393 = !DILocalVariable(name: "ret", scope: !16390, file: !15104, line: 183, type: !125)
!16394 = !DILocation(line: 0, scope: !16390)
!16395 = !DILocation(line: 185, column: 8, scope: !16390)
!16396 = !DILocation(line: 186, column: 2, scope: !16390)
!16397 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2639, file: !2639, line: 665, type: !15686, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16398)
!16398 = !{!16399, !16400, !16402}
!16399 = !DILocalVariable(name: "thread", arg: 1, scope: !16397, file: !2639, line: 665, type: !2534)
!16400 = !DILocalVariable(name: "__i", scope: !16401, file: !2639, line: 671, type: !15720)
!16401 = distinct !DILexicalBlock(scope: !16397, file: !2639, line: 671, column: 2)
!16402 = !DILocalVariable(name: "__key", scope: !16401, file: !2639, line: 671, type: !15720)
!16403 = !DILocation(line: 0, scope: !16397)
!16404 = !DILocation(line: 669, column: 8, scope: !16397)
!16405 = !DILocation(line: 0, scope: !16401)
!16406 = !DILocation(line: 0, scope: !15728, inlinedAt: !16407)
!16407 = distinct !DILocation(line: 671, column: 2, scope: !16401)
!16408 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16409)
!16409 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16407)
!16410 = !DILocation(line: 0, scope: !15737, inlinedAt: !16409)
!16411 = !DILocation(line: 672, column: 7, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16413, file: !2639, line: 672, column: 7)
!16413 = distinct !DILexicalBlock(scope: !16414, file: !2639, line: 671, column: 26)
!16414 = distinct !DILexicalBlock(scope: !16401, file: !2639, line: 671, column: 2)
!16415 = !DILocation(line: 672, column: 7, scope: !16413)
!16416 = !DILocation(line: 0, scope: !15897, inlinedAt: !16417)
!16417 = distinct !DILocation(line: 673, column: 4, scope: !16418)
!16418 = distinct !DILexicalBlock(scope: !16412, file: !2639, line: 672, column: 35)
!16419 = !DILocation(line: 266, column: 15, scope: !15897, inlinedAt: !16417)
!16420 = !DILocation(line: 266, column: 28, scope: !15897, inlinedAt: !16417)
!16421 = !DILocation(line: 0, scope: !15905, inlinedAt: !16422)
!16422 = distinct !DILocation(line: 268, column: 3, scope: !15909, inlinedAt: !16417)
!16423 = !DILocation(line: 234, column: 2, scope: !15905, inlinedAt: !16422)
!16424 = !DILocation(line: 674, column: 3, scope: !16418)
!16425 = !DILocation(line: 675, column: 3, scope: !16413)
!16426 = !DILocation(line: 676, column: 26, scope: !16413)
!16427 = !DILocation(line: 676, column: 23, scope: !16413)
!16428 = !DILocation(line: 676, column: 3, scope: !16413)
!16429 = !DILocation(line: 0, scope: !15755, inlinedAt: !16430)
!16430 = distinct !DILocation(line: 671, column: 2, scope: !16414)
!16431 = !DILocation(line: 0, scope: !15763, inlinedAt: !16432)
!16432 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16430)
!16433 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16432)
!16434 = !DILocation(line: 679, column: 16, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16397, file: !2639, line: 679, column: 6)
!16436 = !DILocation(line: 679, column: 13, scope: !16435)
!16437 = !DILocation(line: 679, column: 6, scope: !16397)
!16438 = !DILocation(line: 680, column: 3, scope: !16439)
!16439 = distinct !DILexicalBlock(scope: !16435, file: !2639, line: 679, column: 26)
!16440 = !DILocation(line: 681, column: 2, scope: !16439)
!16441 = !DILocation(line: 684, column: 1, scope: !16397)
!16442 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !15394, file: !15394, line: 52, type: !15704, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16443)
!16443 = !{!16444}
!16444 = !DILocalVariable(name: "thread", arg: 1, scope: !16442, file: !15394, line: 52, type: !2534)
!16445 = !DILocation(line: 0, scope: !16442)
!16446 = !DILocation(line: 54, column: 39, scope: !16442)
!16447 = !DILocation(line: 54, column: 9, scope: !16442)
!16448 = !DILocation(line: 54, column: 2, scope: !16442)
!16449 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !15000, file: !15000, line: 141, type: !15686, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16450)
!16450 = !{!16451}
!16451 = !DILocalVariable(name: "thread", arg: 1, scope: !16449, file: !15000, line: 141, type: !2534)
!16452 = !DILocation(line: 0, scope: !16449)
!16453 = !DILocation(line: 143, column: 15, scope: !16449)
!16454 = !DILocation(line: 143, column: 28, scope: !16449)
!16455 = !DILocation(line: 146, column: 1, scope: !16449)
!16456 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !15000, file: !15000, line: 73, type: !3297, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!16457 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16458)
!16458 = distinct !DILocation(line: 75, column: 30, scope: !16456)
!16459 = !DILocation(line: 0, scope: !15737, inlinedAt: !16458)
!16460 = !DILocation(line: 75, column: 9, scope: !16456)
!16461 = !DILocation(line: 76, column: 1, scope: !16456)
!16462 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2639, file: !2639, line: 977, type: !8401, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16463)
!16463 = !{!16464}
!16464 = !DILocalVariable(name: "key", arg: 1, scope: !16462, file: !2639, line: 977, type: !208)
!16465 = !DILocation(line: 0, scope: !16462)
!16466 = !DILocation(line: 979, column: 6, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !16462, file: !2639, line: 979, column: 6)
!16468 = !DILocation(line: 979, column: 6, scope: !16462)
!16469 = !DILocation(line: 980, column: 3, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16467, file: !2639, line: 979, column: 20)
!16471 = !DILocation(line: 981, column: 2, scope: !16470)
!16472 = !DILocation(line: 0, scope: !15763, inlinedAt: !16473)
!16473 = distinct !DILocation(line: 982, column: 3, scope: !16474)
!16474 = distinct !DILexicalBlock(scope: !16467, file: !2639, line: 981, column: 9)
!16475 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16473)
!16476 = !DILocation(line: 985, column: 1, scope: !16462)
!16477 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2639, file: !2639, line: 695, type: !15686, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16478)
!16478 = !{!16479, !16480}
!16479 = !DILocalVariable(name: "thread", arg: 1, scope: !16477, file: !2639, line: 695, type: !2534)
!16480 = !DILocalVariable(name: "key", scope: !16477, file: !2639, line: 699, type: !15720)
!16481 = !DILocation(line: 0, scope: !16477)
!16482 = !DILocation(line: 0, scope: !15728, inlinedAt: !16483)
!16483 = distinct !DILocation(line: 699, column: 25, scope: !16477)
!16484 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16485)
!16485 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16483)
!16486 = !DILocation(line: 0, scope: !15737, inlinedAt: !16485)
!16487 = !DILocation(line: 702, column: 7, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16477, file: !2639, line: 702, column: 6)
!16489 = !DILocation(line: 702, column: 6, scope: !16477)
!16490 = !DILocation(line: 0, scope: !15755, inlinedAt: !16491)
!16491 = distinct !DILocation(line: 703, column: 3, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16488, file: !2639, line: 702, column: 38)
!16493 = !DILocation(line: 0, scope: !15763, inlinedAt: !16494)
!16494 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16491)
!16495 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16494)
!16496 = !DILocation(line: 704, column: 3, scope: !16492)
!16497 = !DILocation(line: 707, column: 2, scope: !16477)
!16498 = !DILocation(line: 708, column: 2, scope: !16477)
!16499 = !DILocation(line: 710, column: 2, scope: !16477)
!16500 = !DILocation(line: 713, column: 1, scope: !16477)
!16501 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !15000, file: !15000, line: 96, type: !15846, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16502)
!16502 = !{!16503}
!16503 = !DILocalVariable(name: "thread", arg: 1, scope: !16501, file: !15000, line: 96, type: !2534)
!16504 = !DILocation(line: 0, scope: !16501)
!16505 = !DILocation(line: 98, column: 23, scope: !16501)
!16506 = !DILocation(line: 98, column: 36, scope: !16501)
!16507 = !DILocation(line: 98, column: 57, scope: !16501)
!16508 = !DILocation(line: 98, column: 2, scope: !16501)
!16509 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !15000, file: !15000, line: 148, type: !15686, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16510)
!16510 = !{!16511}
!16511 = !DILocalVariable(name: "thread", arg: 1, scope: !16509, file: !15000, line: 148, type: !2534)
!16512 = !DILocation(line: 0, scope: !16509)
!16513 = !DILocation(line: 150, column: 15, scope: !16509)
!16514 = !DILocation(line: 150, column: 28, scope: !16509)
!16515 = !DILocation(line: 153, column: 1, scope: !16509)
!16516 = distinct !DISubprogram(name: "z_pend_thread", scope: !2639, file: !2639, line: 770, type: !16517, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16523)
!16517 = !DISubroutineType(types: !16518)
!16518 = !{null, !2534, !2565, !16519}
!16519 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1890, line: 67, baseType: !16520)
!16520 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1890, line: 65, size: 64, elements: !16521)
!16521 = !{!16522}
!16522 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16520, file: !1890, line: 66, baseType: !1889, size: 64)
!16523 = !{!16524, !16525, !16526, !16527, !16529}
!16524 = !DILocalVariable(name: "thread", arg: 1, scope: !16516, file: !2639, line: 770, type: !2534)
!16525 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16516, file: !2639, line: 770, type: !2565)
!16526 = !DILocalVariable(name: "timeout", arg: 3, scope: !16516, file: !2639, line: 771, type: !16519)
!16527 = !DILocalVariable(name: "__i", scope: !16528, file: !2639, line: 774, type: !15720)
!16528 = distinct !DILexicalBlock(scope: !16516, file: !2639, line: 774, column: 2)
!16529 = !DILocalVariable(name: "__key", scope: !16528, file: !2639, line: 774, type: !15720)
!16530 = !DILocation(line: 0, scope: !16516)
!16531 = !DILocation(line: 0, scope: !16528)
!16532 = !DILocation(line: 0, scope: !15728, inlinedAt: !16533)
!16533 = distinct !DILocation(line: 774, column: 2, scope: !16528)
!16534 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16535)
!16535 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16533)
!16536 = !DILocation(line: 0, scope: !15737, inlinedAt: !16535)
!16537 = !DILocation(line: 775, column: 3, scope: !16538)
!16538 = distinct !DILexicalBlock(scope: !16539, file: !2639, line: 774, column: 26)
!16539 = distinct !DILexicalBlock(scope: !16528, file: !2639, line: 774, column: 2)
!16540 = !DILocation(line: 0, scope: !15755, inlinedAt: !16541)
!16541 = distinct !DILocation(line: 774, column: 2, scope: !16539)
!16542 = !DILocation(line: 0, scope: !15763, inlinedAt: !16543)
!16543 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16541)
!16544 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16543)
!16545 = !DILocation(line: 777, column: 1, scope: !16516)
!16546 = distinct !DISubprogram(name: "pend_locked", scope: !2639, file: !2639, line: 760, type: !16517, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16547)
!16547 = !{!16548, !16549, !16550}
!16548 = !DILocalVariable(name: "thread", arg: 1, scope: !16546, file: !2639, line: 760, type: !2534)
!16549 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16546, file: !2639, line: 760, type: !2565)
!16550 = !DILocalVariable(name: "timeout", arg: 3, scope: !16546, file: !2639, line: 761, type: !16519)
!16551 = !DILocation(line: 0, scope: !16546)
!16552 = !DILocation(line: 766, column: 2, scope: !16546)
!16553 = !DILocation(line: 767, column: 2, scope: !16546)
!16554 = !DILocation(line: 768, column: 1, scope: !16546)
!16555 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2639, file: !2639, line: 740, type: !16556, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16558)
!16556 = !DISubroutineType(types: !16557)
!16557 = !{null, !2534, !2565}
!16558 = !{!16559, !16560}
!16559 = !DILocalVariable(name: "thread", arg: 1, scope: !16555, file: !2639, line: 740, type: !2534)
!16560 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16555, file: !2639, line: 740, type: !2565)
!16561 = !DILocation(line: 0, scope: !16555)
!16562 = !DILocation(line: 742, column: 2, scope: !16555)
!16563 = !DILocation(line: 743, column: 2, scope: !16555)
!16564 = !DILocation(line: 747, column: 13, scope: !16565)
!16565 = distinct !DILexicalBlock(scope: !16555, file: !2639, line: 747, column: 6)
!16566 = !DILocation(line: 747, column: 6, scope: !16555)
!16567 = !DILocation(line: 748, column: 16, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16565, file: !2639, line: 747, column: 22)
!16569 = !DILocation(line: 748, column: 26, scope: !16568)
!16570 = !DILocation(line: 749, column: 28, scope: !16568)
!16571 = !DILocation(line: 0, scope: !15928, inlinedAt: !16572)
!16572 = distinct !DILocation(line: 749, column: 3, scope: !16568)
!16573 = !DILocation(line: 188, column: 2, scope: !15938, inlinedAt: !16572)
!16574 = !DILocation(line: 188, column: 2, scope: !15940, inlinedAt: !16572)
!16575 = !DILocation(line: 0, scope: !15938, inlinedAt: !16572)
!16576 = !DILocation(line: 189, column: 7, scope: !15943, inlinedAt: !16572)
!16577 = !DILocation(line: 189, column: 35, scope: !15943, inlinedAt: !16572)
!16578 = !DILocation(line: 189, column: 7, scope: !15944, inlinedAt: !16572)
!16579 = !DILocation(line: 191, column: 21, scope: !15948, inlinedAt: !16572)
!16580 = !DILocation(line: 190, column: 4, scope: !15948, inlinedAt: !16572)
!16581 = !DILocation(line: 192, column: 4, scope: !15948, inlinedAt: !16572)
!16582 = distinct !{!16582, !16573, !16583}
!16583 = !DILocation(line: 194, column: 2, scope: !15938, inlinedAt: !16572)
!16584 = !DILocation(line: 196, column: 37, scope: !15928, inlinedAt: !16572)
!16585 = !DILocation(line: 196, column: 2, scope: !15928, inlinedAt: !16572)
!16586 = !DILocation(line: 197, column: 1, scope: !15928, inlinedAt: !16572)
!16587 = !DILocation(line: 751, column: 1, scope: !16555)
!16588 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2639, file: !2639, line: 753, type: !16589, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16591)
!16589 = !DISubroutineType(types: !16590)
!16590 = !{null, !2534, !16519}
!16591 = !{!16592, !16593}
!16592 = !DILocalVariable(name: "thread", arg: 1, scope: !16588, file: !2639, line: 753, type: !2534)
!16593 = !DILocalVariable(name: "timeout", arg: 2, scope: !16588, file: !2639, line: 753, type: !16519)
!16594 = !DILocation(line: 0, scope: !16588)
!16595 = !DILocation(line: 755, column: 7, scope: !16596)
!16596 = distinct !DILexicalBlock(scope: !16588, file: !2639, line: 755, column: 6)
!16597 = !DILocation(line: 755, column: 6, scope: !16588)
!16598 = !DILocation(line: 756, column: 3, scope: !16599)
!16599 = distinct !DILexicalBlock(scope: !16596, file: !2639, line: 755, column: 41)
!16600 = !DILocation(line: 757, column: 2, scope: !16599)
!16601 = !DILocation(line: 758, column: 1, scope: !16588)
!16602 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !15394, file: !15394, line: 47, type: !16589, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16603)
!16603 = !{!16604, !16605}
!16604 = !DILocalVariable(name: "thread", arg: 1, scope: !16602, file: !15394, line: 47, type: !2534)
!16605 = !DILocalVariable(name: "ticks", arg: 2, scope: !16602, file: !15394, line: 47, type: !16519)
!16606 = !DILocation(line: 0, scope: !16602)
!16607 = !DILocation(line: 49, column: 30, scope: !16602)
!16608 = !DILocation(line: 49, column: 2, scope: !16602)
!16609 = !DILocation(line: 50, column: 1, scope: !16602)
!16610 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2639, file: !2639, line: 795, type: !2591, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16611)
!16611 = !{!16612, !16613, !16614, !16616, !16617}
!16612 = !DILocalVariable(name: "timeout", arg: 1, scope: !16610, file: !2639, line: 795, type: !2593)
!16613 = !DILocalVariable(name: "thread", scope: !16610, file: !2639, line: 797, type: !2534)
!16614 = !DILocalVariable(name: "__i", scope: !16615, file: !2639, line: 800, type: !15720)
!16615 = distinct !DILexicalBlock(scope: !16610, file: !2639, line: 800, column: 2)
!16616 = !DILocalVariable(name: "__key", scope: !16615, file: !2639, line: 800, type: !15720)
!16617 = !DILocalVariable(name: "killed", scope: !16618, file: !2639, line: 801, type: !153)
!16618 = distinct !DILexicalBlock(scope: !16619, file: !2639, line: 800, column: 26)
!16619 = distinct !DILexicalBlock(scope: !16615, file: !2639, line: 800, column: 2)
!16620 = !DILocation(line: 0, scope: !16610)
!16621 = !DILocation(line: 797, column: 28, scope: !16610)
!16622 = !DILocation(line: 0, scope: !16615)
!16623 = !DILocation(line: 0, scope: !15728, inlinedAt: !16624)
!16624 = distinct !DILocation(line: 800, column: 2, scope: !16615)
!16625 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16626)
!16626 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16624)
!16627 = !DILocation(line: 0, scope: !15737, inlinedAt: !16626)
!16628 = !DILocation(line: 801, column: 27, scope: !16618)
!16629 = !DILocation(line: 801, column: 32, scope: !16618)
!16630 = !DILocation(line: 801, column: 61, scope: !16618)
!16631 = !DILocation(line: 0, scope: !16618)
!16632 = !DILocation(line: 804, column: 7, scope: !16618)
!16633 = !DILocation(line: 805, column: 21, scope: !16634)
!16634 = distinct !DILexicalBlock(scope: !16635, file: !2639, line: 805, column: 8)
!16635 = distinct !DILexicalBlock(scope: !16636, file: !2639, line: 804, column: 16)
!16636 = distinct !DILexicalBlock(scope: !16618, file: !2639, line: 804, column: 7)
!16637 = !DILocation(line: 805, column: 31, scope: !16634)
!16638 = !DILocation(line: 805, column: 8, scope: !16635)
!16639 = !DILocation(line: 806, column: 5, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16634, file: !2639, line: 805, column: 40)
!16641 = !DILocation(line: 807, column: 4, scope: !16640)
!16642 = !DILocation(line: 808, column: 4, scope: !16635)
!16643 = !DILocation(line: 809, column: 4, scope: !16635)
!16644 = !DILocation(line: 810, column: 4, scope: !16635)
!16645 = !DILocation(line: 811, column: 3, scope: !16635)
!16646 = !DILocation(line: 0, scope: !15755, inlinedAt: !16647)
!16647 = distinct !DILocation(line: 800, column: 2, scope: !16619)
!16648 = !DILocation(line: 0, scope: !15763, inlinedAt: !16649)
!16649 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16647)
!16650 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16649)
!16651 = !DILocation(line: 813, column: 1, scope: !16610)
!16652 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2639, file: !2639, line: 779, type: !15686, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16653)
!16653 = !{!16654}
!16654 = !DILocalVariable(name: "thread", arg: 1, scope: !16652, file: !2639, line: 779, type: !2534)
!16655 = !DILocation(line: 0, scope: !16652)
!16656 = !DILocation(line: 781, column: 2, scope: !16652)
!16657 = !DILocation(line: 782, column: 2, scope: !16652)
!16658 = !DILocation(line: 783, column: 15, scope: !16652)
!16659 = !DILocation(line: 783, column: 25, scope: !16652)
!16660 = !DILocation(line: 784, column: 1, scope: !16652)
!16661 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !15000, file: !15000, line: 165, type: !15686, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16662)
!16662 = !{!16663}
!16663 = !DILocalVariable(name: "thread", arg: 1, scope: !16661, file: !15000, line: 165, type: !2534)
!16664 = !DILocation(line: 0, scope: !16661)
!16665 = !DILocation(line: 167, column: 15, scope: !16661)
!16666 = !DILocation(line: 167, column: 28, scope: !16661)
!16667 = !DILocation(line: 168, column: 1, scope: !16661)
!16668 = distinct !DISubprogram(name: "unready_thread", scope: !2639, file: !2639, line: 731, type: !15686, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16669)
!16669 = !{!16670}
!16670 = !DILocalVariable(name: "thread", arg: 1, scope: !16668, file: !2639, line: 731, type: !2534)
!16671 = !DILocation(line: 0, scope: !16668)
!16672 = !DILocation(line: 733, column: 6, scope: !16673)
!16673 = distinct !DILexicalBlock(scope: !16668, file: !2639, line: 733, column: 6)
!16674 = !DILocation(line: 733, column: 6, scope: !16668)
!16675 = !DILocation(line: 0, scope: !15897, inlinedAt: !16676)
!16676 = distinct !DILocation(line: 734, column: 3, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16673, file: !2639, line: 733, column: 34)
!16678 = !DILocation(line: 266, column: 15, scope: !15897, inlinedAt: !16676)
!16679 = !DILocation(line: 266, column: 28, scope: !15897, inlinedAt: !16676)
!16680 = !DILocation(line: 0, scope: !15905, inlinedAt: !16681)
!16681 = distinct !DILocation(line: 268, column: 3, scope: !15909, inlinedAt: !16676)
!16682 = !DILocation(line: 234, column: 2, scope: !15905, inlinedAt: !16681)
!16683 = !DILocation(line: 735, column: 2, scope: !16677)
!16684 = !DILocation(line: 736, column: 25, scope: !16668)
!16685 = !DILocation(line: 736, column: 22, scope: !16668)
!16686 = !DILocation(line: 736, column: 2, scope: !16668)
!16687 = !DILocation(line: 737, column: 1, scope: !16668)
!16688 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !15000, file: !15000, line: 160, type: !15686, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16689)
!16689 = !{!16690}
!16690 = !DILocalVariable(name: "thread", arg: 1, scope: !16688, file: !15000, line: 160, type: !2534)
!16691 = !DILocation(line: 0, scope: !16688)
!16692 = !DILocation(line: 162, column: 15, scope: !16688)
!16693 = !DILocation(line: 162, column: 28, scope: !16688)
!16694 = !DILocation(line: 163, column: 1, scope: !16688)
!16695 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2639, file: !2639, line: 786, type: !15686, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16696)
!16696 = !{!16697, !16698, !16700}
!16697 = !DILocalVariable(name: "thread", arg: 1, scope: !16695, file: !2639, line: 786, type: !2534)
!16698 = !DILocalVariable(name: "__i", scope: !16699, file: !2639, line: 788, type: !15720)
!16699 = distinct !DILexicalBlock(scope: !16695, file: !2639, line: 788, column: 2)
!16700 = !DILocalVariable(name: "__key", scope: !16699, file: !2639, line: 788, type: !15720)
!16701 = !DILocation(line: 0, scope: !16695)
!16702 = !DILocation(line: 0, scope: !16699)
!16703 = !DILocation(line: 0, scope: !15728, inlinedAt: !16704)
!16704 = distinct !DILocation(line: 788, column: 2, scope: !16699)
!16705 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16706)
!16706 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16704)
!16707 = !DILocation(line: 0, scope: !15737, inlinedAt: !16706)
!16708 = !DILocation(line: 789, column: 3, scope: !16709)
!16709 = distinct !DILexicalBlock(scope: !16710, file: !2639, line: 788, column: 26)
!16710 = distinct !DILexicalBlock(scope: !16699, file: !2639, line: 788, column: 2)
!16711 = !DILocation(line: 0, scope: !15755, inlinedAt: !16712)
!16712 = distinct !DILocation(line: 788, column: 2, scope: !16710)
!16713 = !DILocation(line: 0, scope: !15763, inlinedAt: !16714)
!16714 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16712)
!16715 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16714)
!16716 = !DILocation(line: 791, column: 1, scope: !16695)
!16717 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2639, file: !2639, line: 816, type: !16718, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16720)
!16718 = !DISubroutineType(types: !16719)
!16719 = !{!125, !208, !2565, !16519}
!16720 = !{!16721, !16722, !16723, !16724, !16725, !16727}
!16721 = !DILocalVariable(name: "key", arg: 1, scope: !16717, file: !2639, line: 816, type: !208)
!16722 = !DILocalVariable(name: "wait_q", arg: 2, scope: !16717, file: !2639, line: 816, type: !2565)
!16723 = !DILocalVariable(name: "timeout", arg: 3, scope: !16717, file: !2639, line: 816, type: !16519)
!16724 = !DILocalVariable(name: "ret", scope: !16717, file: !2639, line: 828, type: !125)
!16725 = !DILocalVariable(name: "__i", scope: !16726, file: !2639, line: 829, type: !15720)
!16726 = distinct !DILexicalBlock(scope: !16717, file: !2639, line: 829, column: 2)
!16727 = !DILocalVariable(name: "__key", scope: !16726, file: !2639, line: 829, type: !15720)
!16728 = !DILocation(line: 0, scope: !16717)
!16729 = !DILocation(line: 823, column: 14, scope: !16717)
!16730 = !DILocation(line: 823, column: 2, scope: !16717)
!16731 = !DILocation(line: 826, column: 20, scope: !16717)
!16732 = !DILocation(line: 826, column: 18, scope: !16717)
!16733 = !DILocation(line: 828, column: 12, scope: !16717)
!16734 = !DILocation(line: 0, scope: !16726)
!16735 = !DILocation(line: 0, scope: !15728, inlinedAt: !16736)
!16736 = distinct !DILocation(line: 829, column: 2, scope: !16726)
!16737 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16738)
!16738 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16736)
!16739 = !DILocation(line: 0, scope: !15737, inlinedAt: !16738)
!16740 = !DILocation(line: 830, column: 7, scope: !16741)
!16741 = distinct !DILexicalBlock(scope: !16742, file: !2639, line: 830, column: 7)
!16742 = distinct !DILexicalBlock(scope: !16743, file: !2639, line: 829, column: 26)
!16743 = distinct !DILexicalBlock(scope: !16726, file: !2639, line: 829, column: 2)
!16744 = !DILocation(line: 830, column: 26, scope: !16741)
!16745 = !DILocation(line: 830, column: 23, scope: !16741)
!16746 = !DILocation(line: 830, column: 7, scope: !16742)
!16747 = !DILocation(line: 831, column: 20, scope: !16748)
!16748 = distinct !DILexicalBlock(scope: !16741, file: !2639, line: 830, column: 36)
!16749 = !DILocation(line: 832, column: 3, scope: !16748)
!16750 = !DILocation(line: 0, scope: !15755, inlinedAt: !16751)
!16751 = distinct !DILocation(line: 829, column: 2, scope: !16743)
!16752 = !DILocation(line: 0, scope: !15763, inlinedAt: !16753)
!16753 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16751)
!16754 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16753)
!16755 = !DILocation(line: 834, column: 2, scope: !16717)
!16756 = distinct !DISubprogram(name: "z_pend_curr", scope: !2639, file: !2639, line: 840, type: !16757, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16759)
!16757 = !DISubroutineType(types: !16758)
!16758 = !{!125, !15731, !15720, !2565, !16519}
!16759 = !{!16760, !16761, !16762, !16763}
!16760 = !DILocalVariable(name: "lock", arg: 1, scope: !16756, file: !2639, line: 840, type: !15731)
!16761 = !DILocalVariable(name: "key", arg: 2, scope: !16756, file: !2639, line: 840, type: !15720)
!16762 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16756, file: !2639, line: 841, type: !2565)
!16763 = !DILocalVariable(name: "timeout", arg: 4, scope: !16756, file: !2639, line: 841, type: !16519)
!16764 = !DILocation(line: 0, scope: !16756)
!16765 = !DILocation(line: 844, column: 20, scope: !16756)
!16766 = !DILocation(line: 844, column: 18, scope: !16756)
!16767 = !DILocation(line: 0, scope: !15728, inlinedAt: !16768)
!16768 = distinct !DILocation(line: 856, column: 9, scope: !16756)
!16769 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16770)
!16770 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16768)
!16771 = !DILocation(line: 0, scope: !15737, inlinedAt: !16770)
!16772 = !DILocation(line: 857, column: 14, scope: !16756)
!16773 = !DILocation(line: 857, column: 2, scope: !16756)
!16774 = !DILocation(line: 0, scope: !16339, inlinedAt: !16775)
!16775 = distinct !DILocation(line: 859, column: 9, scope: !16756)
!16776 = !DILocation(line: 196, column: 9, scope: !16339, inlinedAt: !16775)
!16777 = !DILocation(line: 859, column: 2, scope: !16756)
!16778 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2639, file: !2639, line: 862, type: !16779, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16781)
!16779 = !DISubroutineType(types: !16780)
!16780 = !{!2534, !2565}
!16781 = !{!16782, !16783, !16784, !16786}
!16782 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16778, file: !2639, line: 862, type: !2565)
!16783 = !DILocalVariable(name: "thread", scope: !16778, file: !2639, line: 864, type: !2534)
!16784 = !DILocalVariable(name: "__i", scope: !16785, file: !2639, line: 866, type: !15720)
!16785 = distinct !DILexicalBlock(scope: !16778, file: !2639, line: 866, column: 2)
!16786 = !DILocalVariable(name: "__key", scope: !16785, file: !2639, line: 866, type: !15720)
!16787 = !DILocation(line: 0, scope: !16778)
!16788 = !DILocation(line: 0, scope: !16785)
!16789 = !DILocation(line: 0, scope: !15728, inlinedAt: !16790)
!16790 = distinct !DILocation(line: 866, column: 2, scope: !16785)
!16791 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16792)
!16792 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16790)
!16793 = !DILocation(line: 0, scope: !15737, inlinedAt: !16792)
!16794 = !DILocation(line: 867, column: 12, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16796, file: !2639, line: 866, column: 26)
!16796 = distinct !DILexicalBlock(scope: !16785, file: !2639, line: 866, column: 2)
!16797 = !DILocation(line: 869, column: 14, scope: !16798)
!16798 = distinct !DILexicalBlock(scope: !16795, file: !2639, line: 869, column: 7)
!16799 = !DILocation(line: 869, column: 7, scope: !16795)
!16800 = !DILocation(line: 870, column: 4, scope: !16801)
!16801 = distinct !DILexicalBlock(scope: !16798, file: !2639, line: 869, column: 23)
!16802 = !DILocation(line: 871, column: 3, scope: !16801)
!16803 = !DILocation(line: 0, scope: !15755, inlinedAt: !16804)
!16804 = distinct !DILocation(line: 866, column: 2, scope: !16796)
!16805 = !DILocation(line: 0, scope: !15763, inlinedAt: !16806)
!16806 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16804)
!16807 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16806)
!16808 = !DILocation(line: 874, column: 2, scope: !16778)
!16809 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2639, file: !2639, line: 877, type: !16779, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16810)
!16810 = !{!16811, !16812, !16813, !16815}
!16811 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16809, file: !2639, line: 877, type: !2565)
!16812 = !DILocalVariable(name: "thread", scope: !16809, file: !2639, line: 879, type: !2534)
!16813 = !DILocalVariable(name: "__i", scope: !16814, file: !2639, line: 881, type: !15720)
!16814 = distinct !DILexicalBlock(scope: !16809, file: !2639, line: 881, column: 2)
!16815 = !DILocalVariable(name: "__key", scope: !16814, file: !2639, line: 881, type: !15720)
!16816 = !DILocation(line: 0, scope: !16809)
!16817 = !DILocation(line: 0, scope: !16814)
!16818 = !DILocation(line: 0, scope: !15728, inlinedAt: !16819)
!16819 = distinct !DILocation(line: 881, column: 2, scope: !16814)
!16820 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16821)
!16821 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16819)
!16822 = !DILocation(line: 0, scope: !15737, inlinedAt: !16821)
!16823 = !DILocation(line: 882, column: 12, scope: !16824)
!16824 = distinct !DILexicalBlock(scope: !16825, file: !2639, line: 881, column: 26)
!16825 = distinct !DILexicalBlock(scope: !16814, file: !2639, line: 881, column: 2)
!16826 = !DILocation(line: 884, column: 14, scope: !16827)
!16827 = distinct !DILexicalBlock(scope: !16824, file: !2639, line: 884, column: 7)
!16828 = !DILocation(line: 884, column: 7, scope: !16824)
!16829 = !DILocation(line: 885, column: 4, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16827, file: !2639, line: 884, column: 23)
!16831 = !DILocation(line: 886, column: 10, scope: !16830)
!16832 = !DILocation(line: 887, column: 3, scope: !16830)
!16833 = !DILocation(line: 0, scope: !15755, inlinedAt: !16834)
!16834 = distinct !DILocation(line: 881, column: 2, scope: !16825)
!16835 = !DILocation(line: 0, scope: !15763, inlinedAt: !16836)
!16836 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16834)
!16837 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16836)
!16838 = !DILocation(line: 890, column: 2, scope: !16809)
!16839 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2639, file: !2639, line: 893, type: !15686, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16840)
!16840 = !{!16841}
!16841 = !DILocalVariable(name: "thread", arg: 1, scope: !16839, file: !2639, line: 893, type: !2534)
!16842 = !DILocation(line: 0, scope: !16839)
!16843 = !DILocation(line: 0, scope: !16695, inlinedAt: !16844)
!16844 = distinct !DILocation(line: 895, column: 2, scope: !16839)
!16845 = !DILocation(line: 0, scope: !16699, inlinedAt: !16844)
!16846 = !DILocation(line: 0, scope: !15728, inlinedAt: !16847)
!16847 = distinct !DILocation(line: 788, column: 2, scope: !16699, inlinedAt: !16844)
!16848 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16849)
!16849 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16847)
!16850 = !DILocation(line: 0, scope: !15737, inlinedAt: !16849)
!16851 = !DILocation(line: 789, column: 3, scope: !16709, inlinedAt: !16844)
!16852 = !DILocation(line: 0, scope: !15755, inlinedAt: !16853)
!16853 = distinct !DILocation(line: 788, column: 2, scope: !16710, inlinedAt: !16844)
!16854 = !DILocation(line: 0, scope: !15763, inlinedAt: !16855)
!16855 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16853)
!16856 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16855)
!16857 = !DILocation(line: 896, column: 8, scope: !16839)
!16858 = !DILocation(line: 897, column: 1, scope: !16839)
!16859 = distinct !DISubprogram(name: "z_set_prio", scope: !2639, file: !2639, line: 902, type: !16048, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16860)
!16860 = !{!16861, !16862, !16863, !16864, !16866}
!16861 = !DILocalVariable(name: "thread", arg: 1, scope: !16859, file: !2639, line: 902, type: !2534)
!16862 = !DILocalVariable(name: "prio", arg: 2, scope: !16859, file: !2639, line: 902, type: !125)
!16863 = !DILocalVariable(name: "need_sched", scope: !16859, file: !2639, line: 904, type: !153)
!16864 = !DILocalVariable(name: "__i", scope: !16865, file: !2639, line: 906, type: !15720)
!16865 = distinct !DILexicalBlock(scope: !16859, file: !2639, line: 906, column: 2)
!16866 = !DILocalVariable(name: "__key", scope: !16865, file: !2639, line: 906, type: !15720)
!16867 = !DILocation(line: 0, scope: !16859)
!16868 = !DILocation(line: 0, scope: !16865)
!16869 = !DILocation(line: 0, scope: !15728, inlinedAt: !16870)
!16870 = distinct !DILocation(line: 906, column: 2, scope: !16865)
!16871 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16872)
!16872 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16870)
!16873 = !DILocation(line: 0, scope: !15737, inlinedAt: !16872)
!16874 = !DILocation(line: 907, column: 16, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16876, file: !2639, line: 906, column: 26)
!16876 = distinct !DILexicalBlock(scope: !16865, file: !2639, line: 906, column: 2)
!16877 = !DILocation(line: 909, column: 7, scope: !16875)
!16878 = !DILocation(line: 0, scope: !15897, inlinedAt: !16879)
!16879 = distinct !DILocation(line: 912, column: 5, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16881, file: !2639, line: 911, column: 63)
!16881 = distinct !DILexicalBlock(scope: !16882, file: !2639, line: 911, column: 8)
!16882 = distinct !DILexicalBlock(scope: !16883, file: !2639, line: 909, column: 19)
!16883 = distinct !DILexicalBlock(scope: !16875, file: !2639, line: 909, column: 7)
!16884 = !DILocation(line: 266, column: 28, scope: !15897, inlinedAt: !16879)
!16885 = !DILocation(line: 0, scope: !15905, inlinedAt: !16886)
!16886 = distinct !DILocation(line: 268, column: 3, scope: !15909, inlinedAt: !16879)
!16887 = !DILocation(line: 234, column: 2, scope: !15905, inlinedAt: !16886)
!16888 = !DILocation(line: 913, column: 23, scope: !16880)
!16889 = !DILocation(line: 0, scope: !15914, inlinedAt: !16890)
!16890 = distinct !DILocation(line: 914, column: 5, scope: !16880)
!16891 = !DILocation(line: 252, column: 28, scope: !15914, inlinedAt: !16890)
!16892 = !DILocation(line: 0, scope: !15921, inlinedAt: !16893)
!16893 = distinct !DILocation(line: 254, column: 3, scope: !15925, inlinedAt: !16890)
!16894 = !DILocation(line: 0, scope: !15928, inlinedAt: !16895)
!16895 = distinct !DILocation(line: 229, column: 2, scope: !15921, inlinedAt: !16893)
!16896 = !DILocation(line: 188, column: 2, scope: !15938, inlinedAt: !16895)
!16897 = !DILocation(line: 188, column: 2, scope: !15940, inlinedAt: !16895)
!16898 = !DILocation(line: 0, scope: !15938, inlinedAt: !16895)
!16899 = !DILocation(line: 189, column: 7, scope: !15943, inlinedAt: !16895)
!16900 = !DILocation(line: 189, column: 35, scope: !15943, inlinedAt: !16895)
!16901 = !DILocation(line: 189, column: 7, scope: !15944, inlinedAt: !16895)
!16902 = !DILocation(line: 190, column: 4, scope: !15948, inlinedAt: !16895)
!16903 = !DILocation(line: 192, column: 4, scope: !15948, inlinedAt: !16895)
!16904 = distinct !{!16904, !16896, !16905}
!16905 = !DILocation(line: 194, column: 2, scope: !15938, inlinedAt: !16895)
!16906 = !DILocation(line: 196, column: 2, scope: !15928, inlinedAt: !16895)
!16907 = !DILocation(line: 197, column: 1, scope: !15928, inlinedAt: !16895)
!16908 = !DILocation(line: 918, column: 4, scope: !16882)
!16909 = !DILocation(line: 919, column: 3, scope: !16882)
!16910 = !DILocation(line: 920, column: 22, scope: !16911)
!16911 = distinct !DILexicalBlock(scope: !16883, file: !2639, line: 919, column: 10)
!16912 = !DILocation(line: 0, scope: !15755, inlinedAt: !16913)
!16913 = distinct !DILocation(line: 906, column: 2, scope: !16876)
!16914 = !DILocation(line: 0, scope: !15763, inlinedAt: !16915)
!16915 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16913)
!16916 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16915)
!16917 = !DILocation(line: 926, column: 2, scope: !16859)
!16918 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2639, file: !2639, line: 929, type: !16919, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16921)
!16919 = !DISubroutineType(types: !16920)
!16920 = !{null, !2534, !125}
!16921 = !{!16922, !16923, !16924}
!16922 = !DILocalVariable(name: "thread", arg: 1, scope: !16918, file: !2639, line: 929, type: !2534)
!16923 = !DILocalVariable(name: "prio", arg: 2, scope: !16918, file: !2639, line: 929, type: !125)
!16924 = !DILocalVariable(name: "need_sched", scope: !16918, file: !2639, line: 931, type: !153)
!16925 = !DILocation(line: 0, scope: !16918)
!16926 = !DILocation(line: 931, column: 20, scope: !16918)
!16927 = !DILocation(line: 935, column: 17, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16918, file: !2639, line: 935, column: 6)
!16929 = !DILocation(line: 935, column: 20, scope: !16928)
!16930 = !DILocation(line: 935, column: 35, scope: !16928)
!16931 = !DILocation(line: 935, column: 48, scope: !16928)
!16932 = !DILocation(line: 935, column: 6, scope: !16918)
!16933 = !DILocation(line: 936, column: 3, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16928, file: !2639, line: 935, column: 55)
!16935 = !DILocation(line: 937, column: 2, scope: !16934)
!16936 = !DILocation(line: 938, column: 1, scope: !16918)
!16937 = distinct !DISubprogram(name: "k_sched_lock", scope: !2639, file: !2639, line: 987, type: !3297, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16938)
!16938 = !{!16939, !16941}
!16939 = !DILocalVariable(name: "__i", scope: !16940, file: !2639, line: 989, type: !15720)
!16940 = distinct !DILexicalBlock(scope: !16937, file: !2639, line: 989, column: 2)
!16941 = !DILocalVariable(name: "__key", scope: !16940, file: !2639, line: 989, type: !15720)
!16942 = !DILocation(line: 0, scope: !16940)
!16943 = !DILocation(line: 0, scope: !15728, inlinedAt: !16944)
!16944 = distinct !DILocation(line: 989, column: 2, scope: !16940)
!16945 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16946)
!16946 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16944)
!16947 = !DILocation(line: 0, scope: !15737, inlinedAt: !16946)
!16948 = !DILocation(line: 992, column: 3, scope: !16949)
!16949 = distinct !DILexicalBlock(scope: !16950, file: !2639, line: 989, column: 26)
!16950 = distinct !DILexicalBlock(scope: !16940, file: !2639, line: 989, column: 2)
!16951 = !DILocation(line: 0, scope: !15755, inlinedAt: !16952)
!16952 = distinct !DILocation(line: 989, column: 2, scope: !16950)
!16953 = !DILocation(line: 0, scope: !15763, inlinedAt: !16954)
!16954 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16952)
!16955 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16954)
!16956 = !DILocation(line: 994, column: 1, scope: !16937)
!16957 = distinct !DISubprogram(name: "z_sched_lock", scope: !15000, file: !15000, line: 251, type: !3297, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!16958 = !DILocation(line: 256, column: 4, scope: !16957)
!16959 = !DILocation(line: 256, column: 19, scope: !16957)
!16960 = !DILocation(line: 256, column: 2, scope: !16957)
!16961 = !DILocation(line: 258, column: 2, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16957, file: !15000, line: 258, column: 2)
!16963 = !{i64 2154867714}
!16964 = !DILocation(line: 259, column: 1, scope: !16957)
!16965 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2639, file: !2639, line: 996, type: !3297, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16966)
!16966 = !{!16967, !16969}
!16967 = !DILocalVariable(name: "__i", scope: !16968, file: !2639, line: 998, type: !15720)
!16968 = distinct !DILexicalBlock(scope: !16965, file: !2639, line: 998, column: 2)
!16969 = !DILocalVariable(name: "__key", scope: !16968, file: !2639, line: 998, type: !15720)
!16970 = !DILocation(line: 0, scope: !16968)
!16971 = !DILocation(line: 0, scope: !15728, inlinedAt: !16972)
!16972 = distinct !DILocation(line: 998, column: 2, scope: !16968)
!16973 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !16974)
!16974 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !16972)
!16975 = !DILocation(line: 0, scope: !15737, inlinedAt: !16974)
!16976 = !DILocation(line: 1002, column: 5, scope: !16977)
!16977 = distinct !DILexicalBlock(scope: !16978, file: !2639, line: 998, column: 26)
!16978 = distinct !DILexicalBlock(scope: !16968, file: !2639, line: 998, column: 2)
!16979 = !DILocation(line: 1002, column: 20, scope: !16977)
!16980 = !DILocation(line: 1002, column: 3, scope: !16977)
!16981 = !DILocation(line: 1003, column: 3, scope: !16977)
!16982 = !DILocation(line: 0, scope: !15755, inlinedAt: !16983)
!16983 = distinct !DILocation(line: 998, column: 2, scope: !16978)
!16984 = !DILocation(line: 0, scope: !15763, inlinedAt: !16985)
!16985 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !16983)
!16986 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !16985)
!16987 = !DILocation(line: 1011, column: 2, scope: !16965)
!16988 = !DILocation(line: 1012, column: 1, scope: !16965)
!16989 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2639, file: !2639, line: 1014, type: !16036, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!16990 = !DILocation(line: 1028, column: 25, scope: !16989)
!16991 = !DILocation(line: 1028, column: 2, scope: !16989)
!16992 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2639, file: !2639, line: 1155, type: !16993, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !16995)
!16993 = !DISubroutineType(types: !16994)
!16994 = !{!153, !2563, !2563}
!16995 = !{!16996, !16997, !16998, !16999, !17000}
!16996 = !DILocalVariable(name: "a", arg: 1, scope: !16992, file: !2639, line: 1155, type: !2563)
!16997 = !DILocalVariable(name: "b", arg: 2, scope: !16992, file: !2639, line: 1155, type: !2563)
!16998 = !DILocalVariable(name: "thread_a", scope: !16992, file: !2639, line: 1157, type: !2534)
!16999 = !DILocalVariable(name: "thread_b", scope: !16992, file: !2639, line: 1157, type: !2534)
!17000 = !DILocalVariable(name: "cmp", scope: !16992, file: !2639, line: 1158, type: !908)
!17001 = !DILocation(line: 0, scope: !16992)
!17002 = !DILocation(line: 1160, column: 13, scope: !16992)
!17003 = !DILocation(line: 1161, column: 13, scope: !16992)
!17004 = !DILocation(line: 1163, column: 8, scope: !16992)
!17005 = !DILocation(line: 1165, column: 10, scope: !17006)
!17006 = distinct !DILexicalBlock(scope: !16992, file: !2639, line: 1165, column: 6)
!17007 = !DILocation(line: 1165, column: 6, scope: !16992)
!17008 = !DILocation(line: 1167, column: 17, scope: !17009)
!17009 = distinct !DILexicalBlock(scope: !17006, file: !2639, line: 1167, column: 13)
!17010 = !DILocation(line: 1167, column: 13, scope: !17006)
!17011 = !DILocation(line: 1170, column: 25, scope: !17012)
!17012 = distinct !DILexicalBlock(scope: !17009, file: !2639, line: 1169, column: 9)
!17013 = !DILocation(line: 1170, column: 52, scope: !17012)
!17014 = !DILocation(line: 1170, column: 35, scope: !17012)
!17015 = !DILocation(line: 1170, column: 3, scope: !17012)
!17016 = !DILocation(line: 0, scope: !17006)
!17017 = !DILocation(line: 1173, column: 1, scope: !16992)
!17018 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2639, file: !2639, line: 1175, type: !17019, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17034)
!17019 = !DISubroutineType(types: !17020)
!17020 = !{null, !17021, !2534}
!17021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17022, size: 32)
!17022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !17023, line: 37, size: 128, elements: !17024)
!17023 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17024 = !{!17025, !17033}
!17025 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !17022, file: !17023, line: 38, baseType: !17026, size: 96)
!17026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !557, line: 83, size: 96, elements: !17027)
!17027 = !{!17028, !17029, !17032}
!17028 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !17026, file: !557, line: 84, baseType: !2563, size: 32)
!17029 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !17026, file: !557, line: 85, baseType: !17030, size: 32, offset: 32)
!17030 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !557, line: 81, baseType: !17031)
!17031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16993, size: 32)
!17032 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !17026, file: !557, line: 86, baseType: !125, size: 32, offset: 64)
!17033 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !17022, file: !17023, line: 39, baseType: !125, size: 32, offset: 96)
!17034 = !{!17035, !17036, !17037, !17038, !17047}
!17035 = !DILocalVariable(name: "pq", arg: 1, scope: !17018, file: !2639, line: 1175, type: !17021)
!17036 = !DILocalVariable(name: "thread", arg: 2, scope: !17018, file: !2639, line: 1175, type: !2534)
!17037 = !DILocalVariable(name: "t", scope: !17018, file: !2639, line: 1177, type: !2534)
!17038 = !DILocalVariable(name: "__f", scope: !17039, file: !2639, line: 1190, type: !17042)
!17039 = distinct !DILexicalBlock(scope: !17040, file: !2639, line: 1190, column: 3)
!17040 = distinct !DILexicalBlock(scope: !17041, file: !2639, line: 1189, column: 27)
!17041 = distinct !DILexicalBlock(scope: !17018, file: !2639, line: 1189, column: 6)
!17042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !557, line: 155, size: 96, elements: !17043)
!17043 = !{!17044, !17045, !17046}
!17044 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !17042, file: !557, line: 156, baseType: !2634, size: 32)
!17045 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !17042, file: !557, line: 157, baseType: !184, size: 32, offset: 32)
!17046 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !17042, file: !557, line: 158, baseType: !908, size: 32, offset: 64)
!17047 = !DILocalVariable(name: "n", scope: !17048, file: !2639, line: 1190, type: !2563)
!17048 = distinct !DILexicalBlock(scope: !17049, file: !2639, line: 1190, column: 3)
!17049 = distinct !DILexicalBlock(scope: !17039, file: !2639, line: 1190, column: 3)
!17050 = !DILocation(line: 0, scope: !17018)
!17051 = !DILocation(line: 1181, column: 31, scope: !17018)
!17052 = !DILocation(line: 1181, column: 45, scope: !17018)
!17053 = !DILocation(line: 1181, column: 15, scope: !17018)
!17054 = !DILocation(line: 1181, column: 25, scope: !17018)
!17055 = !DILocation(line: 1189, column: 11, scope: !17041)
!17056 = !DILocation(line: 1189, column: 7, scope: !17041)
!17057 = !DILocation(line: 1189, column: 6, scope: !17018)
!17058 = !DILocation(line: 1190, column: 3, scope: !17039)
!17059 = !DILocation(line: 1190, column: 3, scope: !17048)
!17060 = !DILocation(line: 0, scope: !17048)
!17061 = !DILocation(line: 1190, column: 3, scope: !17049)
!17062 = !DILocation(line: 1193, column: 2, scope: !17040)
!17063 = !DILocation(line: 1191, column: 42, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17049, file: !2639, line: 1190, column: 54)
!17065 = !DILocation(line: 1191, column: 12, scope: !17064)
!17066 = !DILocation(line: 1191, column: 22, scope: !17064)
!17067 = distinct !{!17067, !17058, !17068}
!17068 = !DILocation(line: 1192, column: 3, scope: !17039)
!17069 = !DILocation(line: 1195, column: 17, scope: !17018)
!17070 = !DILocation(line: 1195, column: 37, scope: !17018)
!17071 = !DILocation(line: 1195, column: 2, scope: !17018)
!17072 = !DILocation(line: 1196, column: 1, scope: !17018)
!17073 = !DISubprogram(name: "z_rb_foreach_next", scope: !557, file: !557, line: 176, type: !17074, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17074 = !DISubroutineType(types: !17075)
!17075 = !{!2563, !17076, !17077}
!17076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17026, size: 32)
!17077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17042, size: 32)
!17078 = !DISubprogram(name: "rb_insert", scope: !557, file: !557, line: 105, type: !17079, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17079 = !DISubroutineType(types: !17080)
!17080 = !{null, !17076, !2563}
!17081 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2639, file: !2639, line: 1198, type: !17019, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17082)
!17082 = !{!17083, !17084}
!17083 = !DILocalVariable(name: "pq", arg: 1, scope: !17081, file: !2639, line: 1198, type: !17021)
!17084 = !DILocalVariable(name: "thread", arg: 2, scope: !17081, file: !2639, line: 1198, type: !2534)
!17085 = !DILocation(line: 0, scope: !17081)
!17086 = !DILocation(line: 1202, column: 17, scope: !17081)
!17087 = !DILocation(line: 1202, column: 37, scope: !17081)
!17088 = !DILocation(line: 1202, column: 2, scope: !17081)
!17089 = !DILocation(line: 1204, column: 16, scope: !17090)
!17090 = distinct !DILexicalBlock(scope: !17081, file: !2639, line: 1204, column: 6)
!17091 = !DILocation(line: 1204, column: 7, scope: !17090)
!17092 = !DILocation(line: 1204, column: 6, scope: !17081)
!17093 = !DILocation(line: 1205, column: 7, scope: !17094)
!17094 = distinct !DILexicalBlock(scope: !17090, file: !2639, line: 1204, column: 22)
!17095 = !DILocation(line: 1205, column: 22, scope: !17094)
!17096 = !DILocation(line: 1206, column: 2, scope: !17094)
!17097 = !DILocation(line: 1207, column: 1, scope: !17081)
!17098 = !DISubprogram(name: "rb_remove", scope: !557, file: !557, line: 110, type: !17079, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17099 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2639, file: !2639, line: 1209, type: !17100, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17102)
!17100 = !DISubroutineType(types: !17101)
!17101 = !{!2534, !17021}
!17102 = !{!17103, !17104, !17105}
!17103 = !DILocalVariable(name: "pq", arg: 1, scope: !17099, file: !2639, line: 1209, type: !17021)
!17104 = !DILocalVariable(name: "thread", scope: !17099, file: !2639, line: 1211, type: !2534)
!17105 = !DILocalVariable(name: "n", scope: !17099, file: !2639, line: 1212, type: !2563)
!17106 = !DILocation(line: 0, scope: !17099)
!17107 = !DILocation(line: 1212, column: 37, scope: !17099)
!17108 = !DILocation(line: 1212, column: 21, scope: !17099)
!17109 = !DILocation(line: 1217, column: 2, scope: !17099)
!17110 = distinct !DISubprogram(name: "rb_get_min", scope: !557, file: !557, line: 115, type: !17111, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17113)
!17111 = !DISubroutineType(types: !17112)
!17112 = !{!2563, !17076}
!17113 = !{!17114}
!17114 = !DILocalVariable(name: "tree", arg: 1, scope: !17110, file: !557, line: 115, type: !17076)
!17115 = !DILocation(line: 0, scope: !17110)
!17116 = !DILocation(line: 117, column: 9, scope: !17110)
!17117 = !DILocation(line: 117, column: 2, scope: !17110)
!17118 = !DISubprogram(name: "z_rb_get_minmax", scope: !557, file: !557, line: 100, type: !17119, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !639)
!17119 = !DISubroutineType(types: !17120)
!17120 = !{!2563, !17076, !150}
!17121 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2639, file: !2639, line: 1246, type: !17122, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17132)
!17122 = !DISubroutineType(types: !17123)
!17123 = !{!2534, !17124}
!17124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17125, size: 32)
!17125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !17023, line: 53, size: 2080, elements: !17126)
!17126 = !{!17127, !17131}
!17127 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !17125, file: !17023, line: 54, baseType: !17128, size: 2048)
!17128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2570, size: 2048, elements: !17129)
!17129 = !{!17130}
!17130 = !DISubrange(count: 32)
!17131 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !17125, file: !17023, line: 55, baseType: !32, size: 32, offset: 2048)
!17132 = !{!17133, !17134, !17135, !17136}
!17133 = !DILocalVariable(name: "pq", arg: 1, scope: !17121, file: !2639, line: 1246, type: !17124)
!17134 = !DILocalVariable(name: "thread", scope: !17121, file: !2639, line: 1252, type: !2534)
!17135 = !DILocalVariable(name: "l", scope: !17121, file: !2639, line: 1253, type: !15931)
!17136 = !DILocalVariable(name: "n", scope: !17121, file: !2639, line: 1254, type: !2635)
!17137 = !DILocation(line: 0, scope: !17121)
!17138 = !DILocation(line: 1248, column: 11, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17121, file: !2639, line: 1248, column: 6)
!17140 = !DILocation(line: 1248, column: 7, scope: !17139)
!17141 = !DILocation(line: 1248, column: 6, scope: !17121)
!17142 = !DILocation(line: 1253, column: 31, scope: !17121)
!17143 = !DILocation(line: 1253, column: 20, scope: !17121)
!17144 = !DILocation(line: 1254, column: 19, scope: !17121)
!17145 = !DILocation(line: 1260, column: 1, scope: !17121)
!17146 = distinct !DISubprogram(name: "z_unpend_all", scope: !2639, file: !2639, line: 1262, type: !17147, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17149)
!17147 = !DISubroutineType(types: !17148)
!17148 = !{!125, !2565}
!17149 = !{!17150, !17151, !17152}
!17150 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17146, file: !2639, line: 1262, type: !2565)
!17151 = !DILocalVariable(name: "need_sched", scope: !17146, file: !2639, line: 1264, type: !125)
!17152 = !DILocalVariable(name: "thread", scope: !17146, file: !2639, line: 1265, type: !2534)
!17153 = !DILocation(line: 0, scope: !17146)
!17154 = !DILocation(line: 1267, column: 19, scope: !17146)
!17155 = !DILocation(line: 1267, column: 41, scope: !17146)
!17156 = !DILocation(line: 1267, column: 2, scope: !17146)
!17157 = !DILocation(line: 1268, column: 3, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17146, file: !2639, line: 1267, column: 50)
!17159 = !DILocation(line: 1269, column: 3, scope: !17158)
!17160 = distinct !{!17160, !17156, !17161}
!17161 = !DILocation(line: 1271, column: 2, scope: !17146)
!17162 = !DILocation(line: 1273, column: 2, scope: !17146)
!17163 = distinct !DISubprogram(name: "z_waitq_head", scope: !15326, file: !15326, line: 52, type: !16779, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17164)
!17164 = !{!17165}
!17165 = !DILocalVariable(name: "w", arg: 1, scope: !17163, file: !15326, line: 52, type: !2565)
!17166 = !DILocation(line: 0, scope: !17163)
!17167 = !DILocation(line: 54, column: 52, scope: !17163)
!17168 = !DILocation(line: 54, column: 28, scope: !17163)
!17169 = !DILocation(line: 54, column: 9, scope: !17163)
!17170 = !DILocation(line: 54, column: 2, scope: !17163)
!17171 = distinct !DISubprogram(name: "init_ready_q", scope: !2639, file: !2639, line: 1276, type: !17172, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17179)
!17172 = !DISubroutineType(types: !17173)
!17173 = !{null, !17174}
!17174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17175, size: 32)
!17175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !567, line: 83, size: 96, elements: !17176)
!17176 = !{!17177, !17178}
!17177 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !17175, file: !567, line: 86, baseType: !2534, size: 32)
!17178 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !17175, file: !567, line: 90, baseType: !2570, size: 64, offset: 32)
!17179 = !{!17180}
!17180 = !DILocalVariable(name: "rq", arg: 1, scope: !17171, file: !2639, line: 1276, type: !17174)
!17181 = !DILocation(line: 0, scope: !17171)
!17182 = !DILocation(line: 1289, column: 22, scope: !17171)
!17183 = !DILocation(line: 1289, column: 2, scope: !17171)
!17184 = !DILocation(line: 1291, column: 1, scope: !17171)
!17185 = distinct !DISubprogram(name: "sys_dlist_init", scope: !541, file: !541, line: 197, type: !17186, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17188)
!17186 = !DISubroutineType(types: !17187)
!17187 = !{null, !15931}
!17188 = !{!17189}
!17189 = !DILocalVariable(name: "list", arg: 1, scope: !17185, file: !541, line: 197, type: !15931)
!17190 = !DILocation(line: 0, scope: !17185)
!17191 = !DILocation(line: 199, column: 8, scope: !17185)
!17192 = !DILocation(line: 199, column: 13, scope: !17185)
!17193 = !DILocation(line: 200, column: 8, scope: !17185)
!17194 = !DILocation(line: 200, column: 13, scope: !17185)
!17195 = !DILocation(line: 201, column: 1, scope: !17185)
!17196 = distinct !DISubprogram(name: "z_sched_init", scope: !2639, file: !2639, line: 1293, type: !3297, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!17197 = !DILocation(line: 1302, column: 2, scope: !17196)
!17198 = !DILocation(line: 1306, column: 2, scope: !17196)
!17199 = !DILocation(line: 1309, column: 1, scope: !17196)
!17200 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2639, file: !2639, line: 1311, type: !17201, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17204)
!17201 = !DISubroutineType(types: !17202)
!17202 = !{!125, !17203}
!17203 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !531, line: 347, baseType: !2534)
!17204 = !{!17205}
!17205 = !DILocalVariable(name: "thread", arg: 1, scope: !17200, file: !2639, line: 1311, type: !17203)
!17206 = !DILocation(line: 0, scope: !17200)
!17207 = !DILocation(line: 1313, column: 22, scope: !17200)
!17208 = !DILocation(line: 1313, column: 9, scope: !17200)
!17209 = !DILocation(line: 1313, column: 2, scope: !17200)
!17210 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2639, file: !2639, line: 1325, type: !17211, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17213)
!17211 = !DISubroutineType(types: !17212)
!17212 = !{null, !17203, !125}
!17213 = !{!17214, !17215, !17216}
!17214 = !DILocalVariable(name: "thread", arg: 1, scope: !17210, file: !2639, line: 1325, type: !17203)
!17215 = !DILocalVariable(name: "prio", arg: 2, scope: !17210, file: !2639, line: 1325, type: !125)
!17216 = !DILocalVariable(name: "th", scope: !17210, file: !2639, line: 1334, type: !2534)
!17217 = !DILocation(line: 0, scope: !17210)
!17218 = !DILocation(line: 1336, column: 2, scope: !17210)
!17219 = !DILocation(line: 1337, column: 1, scope: !17210)
!17220 = distinct !DISubprogram(name: "k_can_yield", scope: !2639, file: !2639, line: 1384, type: !9329, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!17221 = !DILocation(line: 1386, column: 11, scope: !17220)
!17222 = !DILocation(line: 1386, column: 29, scope: !17220)
!17223 = !DILocation(line: 1386, column: 32, scope: !17220)
!17224 = !DILocation(line: 1386, column: 46, scope: !17220)
!17225 = !DILocation(line: 1387, column: 28, scope: !17220)
!17226 = !DILocation(line: 1387, column: 4, scope: !17220)
!17227 = !DILocation(line: 1386, column: 2, scope: !17220)
!17228 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !624, file: !624, line: 989, type: !9329, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!17229 = !DILocation(line: 993, column: 10, scope: !17228)
!17230 = !DILocation(line: 993, column: 2, scope: !17228)
!17231 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2639, file: !2639, line: 1390, type: !3297, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17232)
!17232 = !{!17233}
!17233 = !DILocalVariable(name: "key", scope: !17231, file: !2639, line: 1396, type: !15720)
!17234 = !DILocation(line: 0, scope: !15728, inlinedAt: !17235)
!17235 = distinct !DILocation(line: 1396, column: 25, scope: !17231)
!17236 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !17237)
!17237 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !17235)
!17238 = !DILocation(line: 0, scope: !15737, inlinedAt: !17237)
!17239 = !DILocation(line: 0, scope: !17231)
!17240 = !DILocation(line: 1400, column: 18, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17242, file: !2639, line: 1399, column: 36)
!17242 = distinct !DILexicalBlock(scope: !17231, file: !2639, line: 1398, column: 6)
!17243 = !DILocation(line: 0, scope: !15897, inlinedAt: !17244)
!17244 = distinct !DILocation(line: 1400, column: 3, scope: !17241)
!17245 = !DILocation(line: 266, column: 15, scope: !15897, inlinedAt: !17244)
!17246 = !DILocation(line: 266, column: 28, scope: !15897, inlinedAt: !17244)
!17247 = !DILocation(line: 0, scope: !15905, inlinedAt: !17248)
!17248 = distinct !DILocation(line: 268, column: 3, scope: !15909, inlinedAt: !17244)
!17249 = !DILocation(line: 234, column: 2, scope: !15905, inlinedAt: !17248)
!17250 = !DILocation(line: 1402, column: 15, scope: !17231)
!17251 = !DILocation(line: 0, scope: !15914, inlinedAt: !17252)
!17252 = distinct !DILocation(line: 1402, column: 2, scope: !17231)
!17253 = !DILocation(line: 252, column: 15, scope: !15914, inlinedAt: !17252)
!17254 = !DILocation(line: 252, column: 28, scope: !15914, inlinedAt: !17252)
!17255 = !DILocation(line: 0, scope: !15921, inlinedAt: !17256)
!17256 = distinct !DILocation(line: 254, column: 3, scope: !15925, inlinedAt: !17252)
!17257 = !DILocation(line: 0, scope: !15928, inlinedAt: !17258)
!17258 = distinct !DILocation(line: 229, column: 2, scope: !15921, inlinedAt: !17256)
!17259 = !DILocation(line: 188, column: 2, scope: !15938, inlinedAt: !17258)
!17260 = !DILocation(line: 188, column: 2, scope: !15940, inlinedAt: !17258)
!17261 = !DILocation(line: 0, scope: !15938, inlinedAt: !17258)
!17262 = !DILocation(line: 189, column: 7, scope: !15943, inlinedAt: !17258)
!17263 = !DILocation(line: 189, column: 35, scope: !15943, inlinedAt: !17258)
!17264 = !DILocation(line: 189, column: 7, scope: !15944, inlinedAt: !17258)
!17265 = !DILocation(line: 191, column: 21, scope: !15948, inlinedAt: !17258)
!17266 = !DILocation(line: 190, column: 4, scope: !15948, inlinedAt: !17258)
!17267 = !DILocation(line: 192, column: 4, scope: !15948, inlinedAt: !17258)
!17268 = distinct !{!17268, !17259, !17269}
!17269 = !DILocation(line: 194, column: 2, scope: !15938, inlinedAt: !17258)
!17270 = !DILocation(line: 196, column: 37, scope: !15928, inlinedAt: !17258)
!17271 = !DILocation(line: 196, column: 2, scope: !15928, inlinedAt: !17258)
!17272 = !DILocation(line: 197, column: 1, scope: !15928, inlinedAt: !17258)
!17273 = !DILocation(line: 1403, column: 2, scope: !17231)
!17274 = !DILocation(line: 0, scope: !16339, inlinedAt: !17275)
!17275 = distinct !DILocation(line: 1404, column: 2, scope: !17231)
!17276 = !DILocation(line: 196, column: 9, scope: !16339, inlinedAt: !17275)
!17277 = !DILocation(line: 1405, column: 1, scope: !17231)
!17278 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2639, file: !2639, line: 1459, type: !17279, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17281)
!17279 = !DISubroutineType(types: !17280)
!17280 = !{!908, !16519}
!17281 = !{!17282, !17283, !17284}
!17282 = !DILocalVariable(name: "timeout", arg: 1, scope: !17278, file: !2639, line: 1459, type: !16519)
!17283 = !DILocalVariable(name: "ticks", scope: !17278, file: !2639, line: 1461, type: !1889)
!17284 = !DILocalVariable(name: "ret", scope: !17278, file: !2639, line: 1480, type: !908)
!17285 = !DILocation(line: 0, scope: !17278)
!17286 = !DILocation(line: 1468, column: 6, scope: !17287)
!17287 = distinct !DILexicalBlock(scope: !17278, file: !2639, line: 1468, column: 6)
!17288 = !DILocation(line: 1468, column: 6, scope: !17278)
!17289 = !DILocation(line: 1469, column: 20, scope: !17290)
!17290 = distinct !DILexicalBlock(scope: !17287, file: !2639, line: 1468, column: 40)
!17291 = !DILocation(line: 1469, column: 3, scope: !17290)
!17292 = !DILocation(line: 1473, column: 3, scope: !17290)
!17293 = !DILocation(line: 1478, column: 10, scope: !17278)
!17294 = !DILocation(line: 1480, column: 16, scope: !17278)
!17295 = !DILocation(line: 1485, column: 1, scope: !17278)
!17296 = distinct !DISubprogram(name: "k_thread_suspend", scope: !5369, file: !5369, line: 310, type: !17297, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17299)
!17297 = !DISubroutineType(types: !17298)
!17298 = !{null, !17203}
!17299 = !{!17300}
!17300 = !DILocalVariable(name: "thread", arg: 1, scope: !17296, file: !5369, line: 310, type: !17203)
!17301 = !DILocation(line: 0, scope: !17296)
!17302 = !DILocation(line: 319, column: 2, scope: !17303)
!17303 = distinct !DILexicalBlock(scope: !17296, file: !5369, line: 319, column: 2)
!17304 = !{i64 2154786103}
!17305 = !DILocation(line: 320, column: 2, scope: !17296)
!17306 = !DILocation(line: 321, column: 1, scope: !17296)
!17307 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2639, file: !2639, line: 1415, type: !17308, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17310)
!17308 = !DISubroutineType(types: !17309)
!17309 = !{!908, !1889}
!17310 = !{!17311, !17312, !17313, !17314}
!17311 = !DILocalVariable(name: "ticks", arg: 1, scope: !17307, file: !2639, line: 1415, type: !1889)
!17312 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !17307, file: !2639, line: 1418, type: !208)
!17313 = !DILocalVariable(name: "timeout", scope: !17307, file: !2639, line: 1430, type: !16519)
!17314 = !DILocalVariable(name: "key", scope: !17307, file: !2639, line: 1437, type: !15720)
!17315 = !DILocation(line: 0, scope: !17307)
!17316 = !DILocation(line: 1425, column: 12, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17307, file: !2639, line: 1425, column: 6)
!17318 = !DILocation(line: 1425, column: 6, scope: !17307)
!17319 = !DILocation(line: 1426, column: 3, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17317, file: !2639, line: 1425, column: 18)
!17321 = !DILocation(line: 1427, column: 3, scope: !17320)
!17322 = !DILocation(line: 1431, column: 24, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17307, file: !2639, line: 1431, column: 6)
!17324 = !DILocation(line: 1431, column: 6, scope: !17307)
!17325 = !DILocation(line: 1432, column: 35, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17323, file: !2639, line: 1431, column: 30)
!17327 = !DILocation(line: 1432, column: 27, scope: !17326)
!17328 = !DILocation(line: 1433, column: 2, scope: !17326)
!17329 = !DILocation(line: 1434, column: 27, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17323, file: !2639, line: 1433, column: 9)
!17331 = !DILocation(line: 0, scope: !17323)
!17332 = !DILocation(line: 0, scope: !15728, inlinedAt: !17333)
!17333 = distinct !DILocation(line: 1437, column: 25, scope: !17307)
!17334 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !17335)
!17335 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !17333)
!17336 = !DILocation(line: 0, scope: !15737, inlinedAt: !17335)
!17337 = !DILocation(line: 1440, column: 20, scope: !17307)
!17338 = !DILocation(line: 1440, column: 18, scope: !17307)
!17339 = !DILocation(line: 1442, column: 2, scope: !17307)
!17340 = !DILocation(line: 1443, column: 23, scope: !17307)
!17341 = !DILocation(line: 1443, column: 2, scope: !17307)
!17342 = !DILocation(line: 1444, column: 29, scope: !17307)
!17343 = !DILocation(line: 1444, column: 2, scope: !17307)
!17344 = !DILocation(line: 0, scope: !16339, inlinedAt: !17345)
!17345 = distinct !DILocation(line: 1446, column: 8, scope: !17307)
!17346 = !DILocation(line: 196, column: 9, scope: !16339, inlinedAt: !17345)
!17347 = !DILocation(line: 1450, column: 10, scope: !17307)
!17348 = !DILocation(line: 1450, column: 45, scope: !17307)
!17349 = !DILocation(line: 1450, column: 43, scope: !17307)
!17350 = !DILocation(line: 1451, column: 6, scope: !17307)
!17351 = !DILocation(line: 1457, column: 1, scope: !17307)
!17352 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !15561, file: !15561, line: 1103, type: !15562, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17353)
!17353 = !{!17354}
!17354 = !DILocalVariable(name: "t", arg: 1, scope: !17352, file: !15561, line: 1103, type: !1796)
!17355 = !DILocation(line: 0, scope: !17352)
!17356 = !DILocation(line: 0, scope: !15775, inlinedAt: !17357)
!17357 = distinct !DILocation(line: 1106, column: 9, scope: !17352)
!17358 = !DILocation(line: 139, column: 13, scope: !17359, inlinedAt: !17357)
!17359 = distinct !DILexicalBlock(scope: !17360, file: !15561, line: 138, column: 10)
!17360 = distinct !DILexicalBlock(scope: !17361, file: !15561, line: 136, column: 7)
!17361 = distinct !DILexicalBlock(scope: !15796, file: !15561, line: 134, column: 17)
!17362 = !DILocation(line: 1106, column: 2, scope: !17352)
!17363 = distinct !DISubprogram(name: "k_yield", scope: !5369, file: !5369, line: 140, type: !3297, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!17364 = !DILocation(line: 148, column: 2, scope: !17365)
!17365 = distinct !DILexicalBlock(scope: !17363, file: !5369, line: 148, column: 2)
!17366 = !{i64 2154785423}
!17367 = !DILocation(line: 149, column: 2, scope: !17363)
!17368 = !DILocation(line: 150, column: 1, scope: !17363)
!17369 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2639, file: !2639, line: 1495, type: !17370, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17372)
!17370 = !DISubroutineType(types: !17371)
!17371 = !{!908, !125}
!17372 = !{!17373, !17374}
!17373 = !DILocalVariable(name: "us", arg: 1, scope: !17369, file: !2639, line: 1495, type: !125)
!17374 = !DILocalVariable(name: "ticks", scope: !17369, file: !2639, line: 1497, type: !908)
!17375 = !DILocation(line: 0, scope: !17369)
!17376 = !DILocation(line: 1501, column: 31, scope: !17369)
!17377 = !DILocation(line: 1501, column: 10, scope: !17369)
!17378 = !DILocation(line: 1502, column: 23, scope: !17369)
!17379 = !DILocation(line: 1502, column: 10, scope: !17369)
!17380 = !DILocation(line: 1506, column: 31, scope: !17369)
!17381 = !DILocation(line: 1506, column: 9, scope: !17369)
!17382 = !DILocation(line: 1506, column: 2, scope: !17369)
!17383 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !15561, file: !15561, line: 571, type: !15562, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17384)
!17384 = !{!17385}
!17385 = !DILocalVariable(name: "t", arg: 1, scope: !17383, file: !15561, line: 571, type: !1796)
!17386 = !DILocation(line: 0, scope: !17383)
!17387 = !DILocation(line: 0, scope: !15775, inlinedAt: !17388)
!17388 = distinct !DILocation(line: 574, column: 9, scope: !17383)
!17389 = !DILocation(line: 135, column: 5, scope: !17361, inlinedAt: !17388)
!17390 = !DILocation(line: 139, column: 13, scope: !17359, inlinedAt: !17388)
!17391 = !DILocation(line: 574, column: 2, scope: !17383)
!17392 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !15561, file: !15561, line: 1187, type: !15562, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17393)
!17393 = !{!17394}
!17394 = !DILocalVariable(name: "t", arg: 1, scope: !17392, file: !15561, line: 1187, type: !1796)
!17395 = !DILocation(line: 0, scope: !17392)
!17396 = !DILocation(line: 0, scope: !15775, inlinedAt: !17397)
!17397 = distinct !DILocation(line: 1190, column: 9, scope: !17392)
!17398 = !DILocation(line: 145, column: 13, scope: !17399, inlinedAt: !17397)
!17399 = distinct !DILexicalBlock(scope: !15793, file: !15561, line: 144, column: 10)
!17400 = !DILocation(line: 1190, column: 2, scope: !17392)
!17401 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2639, file: !2639, line: 1517, type: !17297, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17402)
!17402 = !{!17403}
!17403 = !DILocalVariable(name: "thread", arg: 1, scope: !17401, file: !2639, line: 1517, type: !17203)
!17404 = !DILocation(line: 0, scope: !17401)
!17405 = !DILocation(line: 1521, column: 6, scope: !17406)
!17406 = distinct !DILexicalBlock(scope: !17401, file: !2639, line: 1521, column: 6)
!17407 = !DILocation(line: 1521, column: 6, scope: !17401)
!17408 = !DILocation(line: 1525, column: 6, scope: !17409)
!17409 = distinct !DILexicalBlock(scope: !17401, file: !2639, line: 1525, column: 6)
!17410 = !DILocation(line: 1525, column: 37, scope: !17409)
!17411 = !DILocation(line: 1525, column: 6, scope: !17401)
!17412 = !DILocation(line: 1527, column: 20, scope: !17413)
!17413 = distinct !DILexicalBlock(scope: !17414, file: !2639, line: 1527, column: 7)
!17414 = distinct !DILexicalBlock(scope: !17409, file: !2639, line: 1525, column: 42)
!17415 = !DILocation(line: 1527, column: 33, scope: !17413)
!17416 = !DILocation(line: 1527, column: 7, scope: !17414)
!17417 = !DILocation(line: 1532, column: 2, scope: !17401)
!17418 = !DILocation(line: 1533, column: 2, scope: !17401)
!17419 = !DILocation(line: 1031, column: 3, scope: !16372, inlinedAt: !17420)
!17420 = distinct !DILocation(line: 48, column: 10, scope: !16376, inlinedAt: !17421)
!17421 = distinct !DILocation(line: 1537, column: 7, scope: !17422)
!17422 = distinct !DILexicalBlock(scope: !17401, file: !2639, line: 1537, column: 6)
!17423 = !DILocation(line: 0, scope: !16372, inlinedAt: !17420)
!17424 = !DILocation(line: 48, column: 9, scope: !16376, inlinedAt: !17421)
!17425 = !DILocation(line: 1537, column: 6, scope: !17401)
!17426 = !DILocation(line: 1538, column: 3, scope: !17427)
!17427 = distinct !DILexicalBlock(scope: !17422, file: !2639, line: 1537, column: 25)
!17428 = !DILocation(line: 1539, column: 2, scope: !17427)
!17429 = !DILocation(line: 1540, column: 1, scope: !17401)
!17430 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !15000, file: !15000, line: 101, type: !15846, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17431)
!17431 = !{!17432}
!17432 = !DILocalVariable(name: "thread", arg: 1, scope: !17430, file: !15000, line: 101, type: !2534)
!17433 = !DILocation(line: 0, scope: !17430)
!17434 = !DILocation(line: 103, column: 23, scope: !17430)
!17435 = !DILocation(line: 103, column: 36, scope: !17430)
!17436 = !DILocation(line: 103, column: 55, scope: !17430)
!17437 = !DILocation(line: 103, column: 2, scope: !17430)
!17438 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2639, file: !2639, line: 1567, type: !17439, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17441)
!17439 = !DISubroutineType(types: !17440)
!17440 = !{!17203}
!17441 = !{!17442}
!17442 = !DILocalVariable(name: "ret", scope: !17438, file: !2639, line: 1577, type: !17203)
!17443 = !DILocation(line: 1577, column: 30, scope: !17438)
!17444 = !DILocation(line: 0, scope: !17438)
!17445 = !DILocation(line: 1582, column: 2, scope: !17438)
!17446 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2639, file: !2639, line: 1593, type: !9618, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !639)
!17447 = !DILocation(line: 1031, column: 3, scope: !16372, inlinedAt: !17448)
!17448 = distinct !DILocation(line: 48, column: 10, scope: !16376, inlinedAt: !17449)
!17449 = distinct !DILocation(line: 1595, column: 10, scope: !17446)
!17450 = !DILocation(line: 0, scope: !16372, inlinedAt: !17448)
!17451 = !DILocation(line: 48, column: 9, scope: !16376, inlinedAt: !17449)
!17452 = !DILocation(line: 1595, column: 27, scope: !17446)
!17453 = !DILocation(line: 1595, column: 41, scope: !17446)
!17454 = !DILocation(line: 1595, column: 30, scope: !17446)
!17455 = !DILocation(line: 1595, column: 2, scope: !17446)
!17456 = distinct !DISubprogram(name: "z_thread_abort", scope: !2639, file: !2639, line: 1725, type: !15686, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17457)
!17457 = !{!17458, !17459}
!17458 = !DILocalVariable(name: "thread", arg: 1, scope: !17456, file: !2639, line: 1725, type: !2534)
!17459 = !DILocalVariable(name: "key", scope: !17456, file: !2639, line: 1727, type: !15720)
!17460 = !DILocation(line: 0, scope: !17456)
!17461 = !DILocation(line: 0, scope: !15728, inlinedAt: !17462)
!17462 = distinct !DILocation(line: 1727, column: 25, scope: !17456)
!17463 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !17464)
!17464 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !17462)
!17465 = !DILocation(line: 0, scope: !15737, inlinedAt: !17464)
!17466 = !DILocation(line: 1729, column: 20, scope: !17467)
!17467 = distinct !DILexicalBlock(scope: !17456, file: !2639, line: 1729, column: 6)
!17468 = !DILocation(line: 1729, column: 33, scope: !17467)
!17469 = !DILocation(line: 1729, column: 48, scope: !17467)
!17470 = !DILocation(line: 1729, column: 6, scope: !17456)
!17471 = !DILocation(line: 0, scope: !15755, inlinedAt: !17472)
!17472 = distinct !DILocation(line: 1730, column: 3, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17467, file: !2639, line: 1729, column: 54)
!17474 = !DILocation(line: 0, scope: !15763, inlinedAt: !17475)
!17475 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !17472)
!17476 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !17475)
!17477 = !DILocation(line: 1732, column: 3, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17473, file: !2639, line: 1732, column: 3)
!17479 = !{i64 2155521428, i64 2155521444, i64 2155521470, i64 2155521498, i64 2155521518}
!17480 = !DILocation(line: 1733, column: 3, scope: !17473)
!17481 = !DILocation(line: 1736, column: 20, scope: !17482)
!17482 = distinct !DILexicalBlock(scope: !17456, file: !2639, line: 1736, column: 6)
!17483 = !DILocation(line: 1736, column: 33, scope: !17482)
!17484 = !DILocation(line: 1736, column: 49, scope: !17482)
!17485 = !DILocation(line: 1736, column: 6, scope: !17456)
!17486 = !DILocation(line: 0, scope: !15755, inlinedAt: !17487)
!17487 = distinct !DILocation(line: 1737, column: 3, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17482, file: !2639, line: 1736, column: 56)
!17489 = !DILocation(line: 0, scope: !15763, inlinedAt: !17490)
!17490 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !17487)
!17491 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !17490)
!17492 = !DILocation(line: 1738, column: 3, scope: !17488)
!17493 = !DILocation(line: 1775, column: 2, scope: !17456)
!17494 = !DILocation(line: 1776, column: 16, scope: !17495)
!17495 = distinct !DILexicalBlock(scope: !17456, file: !2639, line: 1776, column: 6)
!17496 = !DILocation(line: 1776, column: 13, scope: !17495)
!17497 = !DILocation(line: 1776, column: 25, scope: !17495)
!17498 = !DILocation(line: 1031, column: 3, scope: !16372, inlinedAt: !17499)
!17499 = distinct !DILocation(line: 48, column: 10, scope: !16376, inlinedAt: !17500)
!17500 = distinct !DILocation(line: 1776, column: 29, scope: !17495)
!17501 = !DILocation(line: 0, scope: !16372, inlinedAt: !17499)
!17502 = !DILocation(line: 48, column: 9, scope: !16376, inlinedAt: !17500)
!17503 = !DILocation(line: 1776, column: 6, scope: !17456)
!17504 = !DILocation(line: 0, scope: !16339, inlinedAt: !17505)
!17505 = distinct !DILocation(line: 1777, column: 3, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17495, file: !2639, line: 1776, column: 47)
!17507 = !DILocation(line: 196, column: 9, scope: !16339, inlinedAt: !17505)
!17508 = !DILocation(line: 1779, column: 2, scope: !17506)
!17509 = !DILocation(line: 0, scope: !15755, inlinedAt: !17510)
!17510 = distinct !DILocation(line: 1780, column: 2, scope: !17456)
!17511 = !DILocation(line: 0, scope: !15763, inlinedAt: !17512)
!17512 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !17510)
!17513 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !17512)
!17514 = !DILocation(line: 1781, column: 1, scope: !17456)
!17515 = distinct !DISubprogram(name: "end_thread", scope: !2639, file: !2639, line: 1690, type: !15686, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17516)
!17516 = !{!17517}
!17517 = !DILocalVariable(name: "thread", arg: 1, scope: !17515, file: !2639, line: 1690, type: !2534)
!17518 = !DILocation(line: 0, scope: !17515)
!17519 = !DILocation(line: 1695, column: 20, scope: !17520)
!17520 = distinct !DILexicalBlock(scope: !17515, file: !2639, line: 1695, column: 6)
!17521 = !DILocation(line: 1695, column: 33, scope: !17520)
!17522 = !DILocation(line: 1695, column: 49, scope: !17520)
!17523 = !DILocation(line: 1695, column: 6, scope: !17515)
!17524 = !DILocation(line: 1697, column: 29, scope: !17525)
!17525 = distinct !DILexicalBlock(scope: !17520, file: !2639, line: 1695, column: 56)
!17526 = !DILocation(line: 1698, column: 7, scope: !17527)
!17527 = distinct !DILexicalBlock(scope: !17525, file: !2639, line: 1698, column: 7)
!17528 = !DILocation(line: 1698, column: 7, scope: !17525)
!17529 = !DILocation(line: 0, scope: !15897, inlinedAt: !17530)
!17530 = distinct !DILocation(line: 1699, column: 4, scope: !17531)
!17531 = distinct !DILexicalBlock(scope: !17527, file: !2639, line: 1698, column: 35)
!17532 = !DILocation(line: 266, column: 28, scope: !15897, inlinedAt: !17530)
!17533 = !DILocation(line: 0, scope: !15905, inlinedAt: !17534)
!17534 = distinct !DILocation(line: 268, column: 3, scope: !15909, inlinedAt: !17530)
!17535 = !DILocation(line: 234, column: 2, scope: !15905, inlinedAt: !17534)
!17536 = !DILocation(line: 1700, column: 3, scope: !17531)
!17537 = !DILocation(line: 1701, column: 20, scope: !17538)
!17538 = distinct !DILexicalBlock(scope: !17525, file: !2639, line: 1701, column: 7)
!17539 = !DILocation(line: 1701, column: 30, scope: !17538)
!17540 = !DILocation(line: 1701, column: 7, scope: !17525)
!17541 = !DILocation(line: 1702, column: 4, scope: !17542)
!17542 = distinct !DILexicalBlock(scope: !17538, file: !2639, line: 1701, column: 39)
!17543 = !DILocation(line: 1703, column: 3, scope: !17542)
!17544 = !DILocation(line: 1704, column: 9, scope: !17525)
!17545 = !DILocation(line: 1705, column: 23, scope: !17525)
!17546 = !DILocation(line: 1705, column: 3, scope: !17525)
!17547 = !DILocation(line: 1706, column: 3, scope: !17525)
!17548 = !DILocation(line: 1722, column: 2, scope: !17525)
!17549 = !DILocation(line: 1723, column: 1, scope: !17515)
!17550 = distinct !DISubprogram(name: "unpend_all", scope: !2639, file: !2639, line: 1674, type: !17551, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17553)
!17551 = !DISubroutineType(types: !17552)
!17552 = !{null, !2565}
!17553 = !{!17554, !17555}
!17554 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17550, file: !2639, line: 1674, type: !2565)
!17555 = !DILocalVariable(name: "thread", scope: !17550, file: !2639, line: 1676, type: !2534)
!17556 = !DILocation(line: 0, scope: !17550)
!17557 = !DILocation(line: 1678, column: 19, scope: !17550)
!17558 = !DILocation(line: 1678, column: 41, scope: !17550)
!17559 = !DILocation(line: 1678, column: 2, scope: !17550)
!17560 = !DILocation(line: 1679, column: 3, scope: !17561)
!17561 = distinct !DILexicalBlock(scope: !17550, file: !2639, line: 1678, column: 50)
!17562 = !DILocation(line: 1680, column: 9, scope: !17561)
!17563 = !DILocalVariable(name: "thread", arg: 1, scope: !17564, file: !15020, line: 65, type: !2534)
!17564 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !15020, file: !15020, line: 65, type: !17565, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17567)
!17565 = !DISubroutineType(types: !17566)
!17566 = !{null, !2534, !32}
!17567 = !{!17563, !17568}
!17568 = !DILocalVariable(name: "value", arg: 2, scope: !17564, file: !15020, line: 65, type: !32)
!17569 = !DILocation(line: 0, scope: !17564, inlinedAt: !17570)
!17570 = distinct !DILocation(line: 1681, column: 3, scope: !17561)
!17571 = !DILocation(line: 67, column: 15, scope: !17564, inlinedAt: !17570)
!17572 = !DILocation(line: 67, column: 33, scope: !17564, inlinedAt: !17570)
!17573 = !DILocation(line: 1682, column: 3, scope: !17561)
!17574 = distinct !{!17574, !17559, !17575}
!17575 = !DILocation(line: 1683, column: 2, scope: !17550)
!17576 = !DILocation(line: 1684, column: 1, scope: !17550)
!17577 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2639, file: !2639, line: 1794, type: !17578, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17580)
!17578 = !DISubroutineType(types: !17579)
!17579 = !{!125, !2534, !16519}
!17580 = !{!17581, !17582, !17583, !17584}
!17581 = !DILocalVariable(name: "thread", arg: 1, scope: !17577, file: !2639, line: 1794, type: !2534)
!17582 = !DILocalVariable(name: "timeout", arg: 2, scope: !17577, file: !2639, line: 1794, type: !16519)
!17583 = !DILocalVariable(name: "key", scope: !17577, file: !2639, line: 1796, type: !15720)
!17584 = !DILocalVariable(name: "ret", scope: !17577, file: !2639, line: 1797, type: !125)
!17585 = !DILocation(line: 0, scope: !17577)
!17586 = !DILocation(line: 0, scope: !15728, inlinedAt: !17587)
!17587 = distinct !DILocation(line: 1796, column: 25, scope: !17577)
!17588 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !17589)
!17589 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !17587)
!17590 = !DILocation(line: 0, scope: !15737, inlinedAt: !17589)
!17591 = !DILocation(line: 1801, column: 20, scope: !17592)
!17592 = distinct !DILexicalBlock(scope: !17577, file: !2639, line: 1801, column: 6)
!17593 = !DILocation(line: 1801, column: 33, scope: !17592)
!17594 = !DILocation(line: 1801, column: 49, scope: !17592)
!17595 = !DILocation(line: 1801, column: 6, scope: !17577)
!17596 = !DILocation(line: 1803, column: 13, scope: !17597)
!17597 = distinct !DILexicalBlock(scope: !17592, file: !2639, line: 1803, column: 13)
!17598 = !DILocation(line: 1803, column: 13, scope: !17592)
!17599 = !DILocation(line: 1805, column: 24, scope: !17600)
!17600 = distinct !DILexicalBlock(scope: !17597, file: !2639, line: 1805, column: 13)
!17601 = !DILocation(line: 1805, column: 21, scope: !17600)
!17602 = !DILocation(line: 1805, column: 34, scope: !17600)
!17603 = !DILocation(line: 1806, column: 20, scope: !17600)
!17604 = !DILocation(line: 1806, column: 44, scope: !17600)
!17605 = !DILocation(line: 1806, column: 30, scope: !17600)
!17606 = !DILocation(line: 1805, column: 13, scope: !17597)
!17607 = !DILocation(line: 1810, column: 42, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17600, file: !2639, line: 1808, column: 9)
!17609 = !DILocation(line: 1810, column: 3, scope: !17608)
!17610 = !DILocation(line: 1811, column: 22, scope: !17608)
!17611 = !DILocation(line: 1811, column: 3, scope: !17608)
!17612 = !DILocation(line: 0, scope: !16339, inlinedAt: !17613)
!17613 = distinct !DILocation(line: 1814, column: 9, scope: !17608)
!17614 = !DILocation(line: 196, column: 9, scope: !16339, inlinedAt: !17613)
!17615 = !DILocation(line: 1817, column: 3, scope: !17608)
!17616 = !DILocation(line: 0, scope: !17592)
!17617 = !DILocation(line: 0, scope: !15755, inlinedAt: !17618)
!17618 = distinct !DILocation(line: 1822, column: 2, scope: !17577)
!17619 = !DILocation(line: 0, scope: !15763, inlinedAt: !17620)
!17620 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !17618)
!17621 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !17620)
!17622 = !DILocation(line: 1823, column: 2, scope: !17577)
!17623 = !DILocation(line: 1824, column: 1, scope: !17577)
!17624 = distinct !DISubprogram(name: "z_sched_wake", scope: !2639, file: !2639, line: 1882, type: !17625, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17627)
!17625 = !DISubroutineType(types: !17626)
!17626 = !{!153, !2565, !125, !124}
!17627 = !{!17628, !17629, !17630, !17631, !17632, !17633, !17635}
!17628 = !DILocalVariable(name: "wait_q", arg: 1, scope: !17624, file: !2639, line: 1882, type: !2565)
!17629 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !17624, file: !2639, line: 1882, type: !125)
!17630 = !DILocalVariable(name: "swap_data", arg: 3, scope: !17624, file: !2639, line: 1882, type: !124)
!17631 = !DILocalVariable(name: "thread", scope: !17624, file: !2639, line: 1884, type: !2534)
!17632 = !DILocalVariable(name: "ret", scope: !17624, file: !2639, line: 1885, type: !153)
!17633 = !DILocalVariable(name: "__i", scope: !17634, file: !2639, line: 1887, type: !15720)
!17634 = distinct !DILexicalBlock(scope: !17624, file: !2639, line: 1887, column: 2)
!17635 = !DILocalVariable(name: "__key", scope: !17634, file: !2639, line: 1887, type: !15720)
!17636 = !DILocation(line: 0, scope: !17624)
!17637 = !DILocation(line: 0, scope: !17634)
!17638 = !DILocation(line: 0, scope: !15728, inlinedAt: !17639)
!17639 = distinct !DILocation(line: 1887, column: 2, scope: !17634)
!17640 = !DILocation(line: 55, column: 2, scope: !15737, inlinedAt: !17641)
!17641 = distinct !DILocation(line: 145, column: 10, scope: !15728, inlinedAt: !17639)
!17642 = !DILocation(line: 0, scope: !15737, inlinedAt: !17641)
!17643 = !DILocation(line: 1888, column: 12, scope: !17644)
!17644 = distinct !DILexicalBlock(scope: !17645, file: !2639, line: 1887, column: 26)
!17645 = distinct !DILexicalBlock(scope: !17634, file: !2639, line: 1887, column: 2)
!17646 = !DILocation(line: 1890, column: 14, scope: !17647)
!17647 = distinct !DILexicalBlock(scope: !17644, file: !2639, line: 1890, column: 7)
!17648 = !DILocation(line: 1890, column: 7, scope: !17644)
!17649 = !DILocalVariable(name: "thread", arg: 1, scope: !17650, file: !17651, line: 134, type: !2534)
!17650 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !17651, file: !17651, line: 134, type: !17652, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17654)
!17651 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17652 = !DISubroutineType(types: !17653)
!17653 = !{null, !2534, !32, !124}
!17654 = !{!17649, !17655, !17656}
!17655 = !DILocalVariable(name: "value", arg: 2, scope: !17650, file: !17651, line: 135, type: !32)
!17656 = !DILocalVariable(name: "data", arg: 3, scope: !17650, file: !17651, line: 136, type: !124)
!17657 = !DILocation(line: 0, scope: !17650, inlinedAt: !17658)
!17658 = distinct !DILocation(line: 1891, column: 4, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17647, file: !2639, line: 1890, column: 23)
!17660 = !DILocation(line: 0, scope: !17564, inlinedAt: !17661)
!17661 = distinct !DILocation(line: 138, column: 2, scope: !17650, inlinedAt: !17658)
!17662 = !DILocation(line: 67, column: 15, scope: !17564, inlinedAt: !17661)
!17663 = !DILocation(line: 67, column: 33, scope: !17564, inlinedAt: !17661)
!17664 = !DILocation(line: 139, column: 15, scope: !17650, inlinedAt: !17658)
!17665 = !DILocation(line: 139, column: 25, scope: !17650, inlinedAt: !17658)
!17666 = !DILocation(line: 1894, column: 4, scope: !17659)
!17667 = !DILocation(line: 1895, column: 10, scope: !17659)
!17668 = !DILocation(line: 1896, column: 4, scope: !17659)
!17669 = !DILocation(line: 1898, column: 3, scope: !17659)
!17670 = !DILocation(line: 0, scope: !15755, inlinedAt: !17671)
!17671 = distinct !DILocation(line: 1887, column: 2, scope: !17645)
!17672 = !DILocation(line: 0, scope: !15763, inlinedAt: !17673)
!17673 = distinct !DILocation(line: 215, column: 2, scope: !15755, inlinedAt: !17671)
!17674 = !DILocation(line: 95, column: 2, scope: !15763, inlinedAt: !17673)
!17675 = !DILocation(line: 1901, column: 2, scope: !17624)
!17676 = distinct !DISubprogram(name: "z_sched_wait", scope: !2639, file: !2639, line: 1904, type: !17677, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2531, retainedNodes: !17680)
!17677 = !DISubroutineType(types: !17678)
!17678 = !{!125, !15731, !15720, !2565, !16519, !17679}
!17679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !124, size: 32)
!17680 = !{!17681, !17682, !17683, !17684, !17685, !17686}
!17681 = !DILocalVariable(name: "lock", arg: 1, scope: !17676, file: !2639, line: 1904, type: !15731)
!17682 = !DILocalVariable(name: "key", arg: 2, scope: !17676, file: !2639, line: 1904, type: !15720)
!17683 = !DILocalVariable(name: "wait_q", arg: 3, scope: !17676, file: !2639, line: 1905, type: !2565)
!17684 = !DILocalVariable(name: "timeout", arg: 4, scope: !17676, file: !2639, line: 1905, type: !16519)
!17685 = !DILocalVariable(name: "data", arg: 5, scope: !17676, file: !2639, line: 1905, type: !17679)
!17686 = !DILocalVariable(name: "ret", scope: !17676, file: !2639, line: 1907, type: !125)
!17687 = !DILocation(line: 0, scope: !17676)
!17688 = !DILocation(line: 1907, column: 12, scope: !17676)
!17689 = !DILocation(line: 1909, column: 11, scope: !17690)
!17690 = distinct !DILexicalBlock(scope: !17676, file: !2639, line: 1909, column: 6)
!17691 = !DILocation(line: 1909, column: 6, scope: !17676)
!17692 = !DILocation(line: 1910, column: 11, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17690, file: !2639, line: 1909, column: 20)
!17694 = !DILocation(line: 1910, column: 26, scope: !17693)
!17695 = !DILocation(line: 1910, column: 9, scope: !17693)
!17696 = !DILocation(line: 1911, column: 2, scope: !17693)
!17697 = !DILocation(line: 1912, column: 2, scope: !17676)
!17698 = distinct !DISubprogram(name: "z_data_copy", scope: !17699, file: !17699, line: 22, type: !3297, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3280, retainedNodes: !639)
!17699 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17700 = !DILocation(line: 24, column: 2, scope: !17698)
!17701 = !DILocation(line: 27, column: 2, scope: !17698)
!17702 = !DILocation(line: 71, column: 1, scope: !17698)
!17703 = distinct !DISubprogram(name: "z_add_timeout", scope: !2676, file: !2676, line: 88, type: !17704, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17710)
!17704 = !DISubroutineType(types: !17705)
!17705 = !{null, !2649, !2668, !17706}
!17706 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !1890, line: 67, baseType: !17707)
!17707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1890, line: 65, size: 64, elements: !17708)
!17708 = !{!17709}
!17709 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !17707, file: !1890, line: 66, baseType: !1889, size: 64)
!17710 = !{!17711, !17712, !17713, !17714, !17720, !17721, !17724, !17727}
!17711 = !DILocalVariable(name: "to", arg: 1, scope: !17703, file: !2676, line: 88, type: !2649)
!17712 = !DILocalVariable(name: "fn", arg: 2, scope: !17703, file: !2676, line: 88, type: !2668)
!17713 = !DILocalVariable(name: "timeout", arg: 3, scope: !17703, file: !2676, line: 89, type: !17706)
!17714 = !DILocalVariable(name: "__i", scope: !17715, file: !2676, line: 102, type: !17716)
!17715 = distinct !DILexicalBlock(scope: !17703, file: !2676, line: 102, column: 2)
!17716 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !638, line: 106, baseType: !17717)
!17717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !638, line: 32, size: 32, elements: !17718)
!17718 = !{!17719}
!17719 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !17717, file: !638, line: 33, baseType: !125, size: 32)
!17720 = !DILocalVariable(name: "__key", scope: !17715, file: !2676, line: 102, type: !17716)
!17721 = !DILocalVariable(name: "t", scope: !17722, file: !2676, line: 103, type: !2649)
!17722 = distinct !DILexicalBlock(scope: !17723, file: !2676, line: 102, column: 24)
!17723 = distinct !DILexicalBlock(scope: !17715, file: !2676, line: 102, column: 2)
!17724 = !DILocalVariable(name: "ticks", scope: !17725, file: !2676, line: 107, type: !1889)
!17725 = distinct !DILexicalBlock(scope: !17726, file: !2676, line: 106, column: 39)
!17726 = distinct !DILexicalBlock(scope: !17722, file: !2676, line: 105, column: 7)
!17727 = !DILocalVariable(name: "next_time", scope: !17728, file: !2676, line: 137, type: !908)
!17728 = distinct !DILexicalBlock(scope: !17729, file: !2676, line: 127, column: 22)
!17729 = distinct !DILexicalBlock(scope: !17722, file: !2676, line: 127, column: 7)
!17730 = !DILocation(line: 0, scope: !17703)
!17731 = !DILocation(line: 91, column: 6, scope: !17732)
!17732 = distinct !DILexicalBlock(scope: !17703, file: !2676, line: 91, column: 6)
!17733 = !DILocation(line: 91, column: 6, scope: !17703)
!17734 = !DILocation(line: 100, column: 6, scope: !17703)
!17735 = !DILocation(line: 100, column: 9, scope: !17703)
!17736 = !DILocation(line: 0, scope: !17715)
!17737 = !DILocalVariable(name: "l", arg: 1, scope: !17738, file: !638, line: 136, type: !17741)
!17738 = distinct !DISubprogram(name: "k_spin_lock", scope: !638, file: !638, line: 136, type: !17739, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17742)
!17739 = !DISubroutineType(types: !17740)
!17740 = !{!17716, !17741}
!17741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 32)
!17742 = !{!17737, !17743}
!17743 = !DILocalVariable(name: "k", scope: !17738, file: !638, line: 139, type: !17716)
!17744 = !DILocation(line: 0, scope: !17738, inlinedAt: !17745)
!17745 = distinct !DILocation(line: 102, column: 2, scope: !17715)
!17746 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !17751)
!17747 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6843, file: !6843, line: 42, type: !6844, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17748)
!17748 = !{!17749, !17750}
!17749 = !DILocalVariable(name: "key", scope: !17747, file: !6843, line: 44, type: !32)
!17750 = !DILocalVariable(name: "tmp", scope: !17747, file: !6843, line: 53, type: !32)
!17751 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !17745)
!17752 = !{i64 2246390}
!17753 = !DILocation(line: 0, scope: !17747, inlinedAt: !17751)
!17754 = !DILocation(line: 106, column: 33, scope: !17726)
!17755 = !DILocation(line: 105, column: 7, scope: !17722)
!17756 = !DILocation(line: 107, column: 50, scope: !17725)
!17757 = !DILocation(line: 107, column: 48, scope: !17725)
!17758 = !DILocation(line: 0, scope: !17725)
!17759 = !DILocation(line: 109, column: 17, scope: !17725)
!17760 = !DILocation(line: 110, column: 3, scope: !17725)
!17761 = !DILocation(line: 111, column: 31, scope: !17762)
!17762 = distinct !DILexicalBlock(scope: !17726, file: !2676, line: 110, column: 10)
!17763 = !DILocation(line: 111, column: 37, scope: !17762)
!17764 = !DILocation(line: 111, column: 35, scope: !17762)
!17765 = !DILocation(line: 0, scope: !17726)
!17766 = !DILocation(line: 109, column: 8, scope: !17725)
!17767 = !DILocation(line: 109, column: 15, scope: !17725)
!17768 = !DILocation(line: 114, column: 12, scope: !17769)
!17769 = distinct !DILexicalBlock(scope: !17722, file: !2676, line: 114, column: 3)
!17770 = !DILocation(line: 0, scope: !17722)
!17771 = !DILocation(line: 114, column: 3, scope: !17769)
!17772 = !DILocation(line: 115, column: 24, scope: !17773)
!17773 = distinct !DILexicalBlock(scope: !17774, file: !2676, line: 115, column: 8)
!17774 = distinct !DILexicalBlock(scope: !17775, file: !2676, line: 114, column: 45)
!17775 = distinct !DILexicalBlock(scope: !17769, file: !2676, line: 114, column: 3)
!17776 = !DILocation(line: 115, column: 11, scope: !17773)
!17777 = !DILocation(line: 115, column: 18, scope: !17773)
!17778 = !DILocation(line: 115, column: 8, scope: !17774)
!17779 = !DILocation(line: 116, column: 15, scope: !17780)
!17780 = distinct !DILexicalBlock(scope: !17773, file: !2676, line: 115, column: 32)
!17781 = !DILocation(line: 117, column: 26, scope: !17780)
!17782 = !DILocation(line: 117, column: 37, scope: !17780)
!17783 = !DILocation(line: 117, column: 5, scope: !17780)
!17784 = !DILocation(line: 123, column: 7, scope: !17722)
!17785 = !DILocation(line: 120, column: 15, scope: !17774)
!17786 = !DILocation(line: 114, column: 36, scope: !17775)
!17787 = distinct !{!17787, !17771, !17788}
!17788 = !DILocation(line: 121, column: 3, scope: !17769)
!17789 = !DILocation(line: 124, column: 41, scope: !17790)
!17790 = distinct !DILexicalBlock(scope: !17791, file: !2676, line: 123, column: 18)
!17791 = distinct !DILexicalBlock(scope: !17722, file: !2676, line: 123, column: 7)
!17792 = !DILocation(line: 124, column: 4, scope: !17790)
!17793 = !DILocation(line: 125, column: 3, scope: !17790)
!17794 = !DILocation(line: 127, column: 13, scope: !17729)
!17795 = !DILocation(line: 127, column: 10, scope: !17729)
!17796 = !DILocation(line: 127, column: 7, scope: !17722)
!17797 = !DILocation(line: 137, column: 24, scope: !17728)
!17798 = !DILocation(line: 0, scope: !17728)
!17799 = !DILocation(line: 139, column: 18, scope: !17800)
!17800 = distinct !DILexicalBlock(scope: !17728, file: !2676, line: 139, column: 8)
!17801 = !DILocation(line: 139, column: 23, scope: !17800)
!17802 = !DILocation(line: 141, column: 5, scope: !17803)
!17803 = distinct !DILexicalBlock(scope: !17800, file: !2676, line: 140, column: 48)
!17804 = !DILocation(line: 142, column: 4, scope: !17803)
!17805 = !DILocalVariable(name: "key", arg: 2, scope: !17806, file: !638, line: 190, type: !17716)
!17806 = distinct !DISubprogram(name: "k_spin_unlock", scope: !638, file: !638, line: 189, type: !17807, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17809)
!17807 = !DISubroutineType(types: !17808)
!17808 = !{null, !17741, !17716}
!17809 = !{!17810, !17805}
!17810 = !DILocalVariable(name: "l", arg: 1, scope: !17806, file: !638, line: 189, type: !17741)
!17811 = !DILocation(line: 0, scope: !17806, inlinedAt: !17812)
!17812 = distinct !DILocation(line: 102, column: 2, scope: !17723)
!17813 = !DILocalVariable(name: "key", arg: 1, scope: !17814, file: !6843, line: 84, type: !32)
!17814 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6843, file: !6843, line: 84, type: !6854, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17815)
!17815 = !{!17813}
!17816 = !DILocation(line: 0, scope: !17814, inlinedAt: !17817)
!17817 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !17812)
!17818 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !17817)
!17819 = !{i64 2247207}
!17820 = !DILocation(line: 148, column: 1, scope: !17703)
!17821 = distinct !DISubprogram(name: "elapsed", scope: !2676, file: !2676, line: 62, type: !17822, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !639)
!17822 = !DISubroutineType(types: !17823)
!17823 = !{!908}
!17824 = !DILocation(line: 64, column: 9, scope: !17821)
!17825 = !DILocation(line: 64, column: 28, scope: !17821)
!17826 = !DILocation(line: 64, column: 35, scope: !17821)
!17827 = !DILocation(line: 64, column: 2, scope: !17821)
!17828 = distinct !DISubprogram(name: "first", scope: !2676, file: !2676, line: 39, type: !17829, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17831)
!17829 = !DISubroutineType(types: !17830)
!17830 = !{!2649}
!17831 = !{!17832}
!17832 = !DILocalVariable(name: "t", scope: !17828, file: !2676, line: 41, type: !17833)
!17833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 32)
!17834 = !DILocation(line: 41, column: 19, scope: !17828)
!17835 = !DILocation(line: 0, scope: !17828)
!17836 = !DILocation(line: 43, column: 9, scope: !17828)
!17837 = !DILocation(line: 43, column: 2, scope: !17828)
!17838 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !541, file: !541, line: 443, type: !17839, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17841)
!17839 = !DISubroutineType(types: !17840)
!17840 = !{null, !17833, !17833}
!17841 = !{!17842, !17843, !17844}
!17842 = !DILocalVariable(name: "successor", arg: 1, scope: !17838, file: !541, line: 443, type: !17833)
!17843 = !DILocalVariable(name: "node", arg: 2, scope: !17838, file: !541, line: 443, type: !17833)
!17844 = !DILocalVariable(name: "prev", scope: !17838, file: !541, line: 445, type: !17845)
!17845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !17833)
!17846 = !DILocation(line: 0, scope: !17838)
!17847 = !DILocation(line: 445, column: 39, scope: !17838)
!17848 = !DILocation(line: 447, column: 8, scope: !17838)
!17849 = !DILocation(line: 447, column: 13, scope: !17838)
!17850 = !DILocation(line: 448, column: 8, scope: !17838)
!17851 = !DILocation(line: 448, column: 13, scope: !17838)
!17852 = !DILocation(line: 449, column: 8, scope: !17838)
!17853 = !DILocation(line: 449, column: 13, scope: !17838)
!17854 = !DILocation(line: 450, column: 18, scope: !17838)
!17855 = !DILocation(line: 451, column: 1, scope: !17838)
!17856 = distinct !DISubprogram(name: "next", scope: !2676, file: !2676, line: 46, type: !17857, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17859)
!17857 = !DISubroutineType(types: !17858)
!17858 = !{!2649, !2649}
!17859 = !{!17860, !17861}
!17860 = !DILocalVariable(name: "t", arg: 1, scope: !17856, file: !2676, line: 46, type: !2649)
!17861 = !DILocalVariable(name: "n", scope: !17856, file: !2676, line: 48, type: !17833)
!17862 = !DILocation(line: 0, scope: !17856)
!17863 = !DILocation(line: 48, column: 58, scope: !17856)
!17864 = !DILocation(line: 48, column: 19, scope: !17856)
!17865 = !DILocation(line: 50, column: 9, scope: !17856)
!17866 = !DILocation(line: 50, column: 2, scope: !17856)
!17867 = distinct !DISubprogram(name: "sys_dlist_append", scope: !541, file: !541, line: 404, type: !17868, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17871)
!17868 = !DISubroutineType(types: !17869)
!17869 = !{null, !17870, !17833}
!17870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 32)
!17871 = !{!17872, !17873, !17874}
!17872 = !DILocalVariable(name: "list", arg: 1, scope: !17867, file: !541, line: 404, type: !17870)
!17873 = !DILocalVariable(name: "node", arg: 2, scope: !17867, file: !541, line: 404, type: !17833)
!17874 = !DILocalVariable(name: "tail", scope: !17867, file: !541, line: 406, type: !17845)
!17875 = !DILocation(line: 0, scope: !17867)
!17876 = !DILocation(line: 406, column: 34, scope: !17867)
!17877 = !DILocation(line: 408, column: 8, scope: !17867)
!17878 = !DILocation(line: 408, column: 13, scope: !17867)
!17879 = !DILocation(line: 409, column: 8, scope: !17867)
!17880 = !DILocation(line: 409, column: 13, scope: !17867)
!17881 = !DILocation(line: 411, column: 8, scope: !17867)
!17882 = !DILocation(line: 411, column: 13, scope: !17867)
!17883 = !DILocation(line: 412, column: 13, scope: !17867)
!17884 = !DILocation(line: 413, column: 1, scope: !17867)
!17885 = distinct !DISubprogram(name: "next_timeout", scope: !2676, file: !2676, line: 67, type: !17822, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17886)
!17886 = !{!17887, !17888, !17889}
!17887 = !DILocalVariable(name: "to", scope: !17885, file: !2676, line: 69, type: !2649)
!17888 = !DILocalVariable(name: "ticks_elapsed", scope: !17885, file: !2676, line: 70, type: !908)
!17889 = !DILocalVariable(name: "ret", scope: !17885, file: !2676, line: 71, type: !908)
!17890 = !DILocation(line: 69, column: 24, scope: !17885)
!17891 = !DILocation(line: 0, scope: !17885)
!17892 = !DILocation(line: 70, column: 26, scope: !17885)
!17893 = !DILocation(line: 73, column: 10, scope: !17894)
!17894 = distinct !DILexicalBlock(scope: !17885, file: !2676, line: 73, column: 6)
!17895 = !DILocation(line: 73, column: 19, scope: !17894)
!17896 = !DILocation(line: 74, column: 21, scope: !17894)
!17897 = !DILocation(line: 74, column: 30, scope: !17894)
!17898 = !DILocation(line: 74, column: 28, scope: !17894)
!17899 = !DILocation(line: 74, column: 45, scope: !17894)
!17900 = !DILocation(line: 73, column: 6, scope: !17885)
!17901 = !DILocation(line: 77, column: 9, scope: !17902)
!17902 = distinct !DILexicalBlock(scope: !17894, file: !2676, line: 76, column: 9)
!17903 = !DILocation(line: 0, scope: !17894)
!17904 = !DILocation(line: 81, column: 20, scope: !17905)
!17905 = distinct !DILexicalBlock(scope: !17885, file: !2676, line: 81, column: 6)
!17906 = !DILocation(line: 81, column: 6, scope: !17905)
!17907 = !DILocation(line: 81, column: 32, scope: !17905)
!17908 = !DILocation(line: 85, column: 2, scope: !17885)
!17909 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !541, file: !541, line: 341, type: !17910, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17912)
!17910 = !DISubroutineType(types: !17911)
!17911 = !{!17833, !17870, !17833}
!17912 = !{!17913, !17914}
!17913 = !DILocalVariable(name: "list", arg: 1, scope: !17909, file: !541, line: 341, type: !17870)
!17914 = !DILocalVariable(name: "node", arg: 2, scope: !17909, file: !541, line: 342, type: !17833)
!17915 = !DILocation(line: 0, scope: !17909)
!17916 = !DILocation(line: 344, column: 15, scope: !17909)
!17917 = !DILocation(line: 344, column: 9, scope: !17909)
!17918 = !DILocation(line: 344, column: 26, scope: !17909)
!17919 = !DILocation(line: 344, column: 2, scope: !17909)
!17920 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !541, file: !541, line: 325, type: !17910, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17921)
!17921 = !{!17922, !17923}
!17922 = !DILocalVariable(name: "list", arg: 1, scope: !17920, file: !541, line: 325, type: !17870)
!17923 = !DILocalVariable(name: "node", arg: 2, scope: !17920, file: !541, line: 326, type: !17833)
!17924 = !DILocation(line: 0, scope: !17920)
!17925 = !DILocation(line: 328, column: 24, scope: !17920)
!17926 = !DILocation(line: 328, column: 15, scope: !17920)
!17927 = !DILocation(line: 328, column: 9, scope: !17920)
!17928 = !DILocation(line: 328, column: 45, scope: !17920)
!17929 = !DILocation(line: 328, column: 2, scope: !17920)
!17930 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !541, file: !541, line: 294, type: !17931, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17933)
!17931 = !DISubroutineType(types: !17932)
!17932 = !{!17833, !17870}
!17933 = !{!17934}
!17934 = !DILocalVariable(name: "list", arg: 1, scope: !17930, file: !541, line: 294, type: !17870)
!17935 = !DILocation(line: 0, scope: !17930)
!17936 = !DILocation(line: 296, column: 9, scope: !17930)
!17937 = !DILocation(line: 296, column: 2, scope: !17930)
!17938 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !541, file: !541, line: 266, type: !17939, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17941)
!17939 = !DISubroutineType(types: !17940)
!17940 = !{!153, !17870}
!17941 = !{!17942}
!17942 = !DILocalVariable(name: "list", arg: 1, scope: !17938, file: !541, line: 266, type: !17870)
!17943 = !DILocation(line: 0, scope: !17938)
!17944 = !DILocation(line: 268, column: 15, scope: !17938)
!17945 = !DILocation(line: 268, column: 20, scope: !17938)
!17946 = !DILocation(line: 268, column: 2, scope: !17938)
!17947 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2676, file: !2676, line: 150, type: !17948, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17950)
!17948 = !DISubroutineType(types: !17949)
!17949 = !{!125, !2649}
!17950 = !{!17951, !17952, !17953, !17955}
!17951 = !DILocalVariable(name: "to", arg: 1, scope: !17947, file: !2676, line: 150, type: !2649)
!17952 = !DILocalVariable(name: "ret", scope: !17947, file: !2676, line: 152, type: !125)
!17953 = !DILocalVariable(name: "__i", scope: !17954, file: !2676, line: 154, type: !17716)
!17954 = distinct !DILexicalBlock(scope: !17947, file: !2676, line: 154, column: 2)
!17955 = !DILocalVariable(name: "__key", scope: !17954, file: !2676, line: 154, type: !17716)
!17956 = !DILocation(line: 0, scope: !17947)
!17957 = !DILocation(line: 0, scope: !17954)
!17958 = !DILocation(line: 0, scope: !17738, inlinedAt: !17959)
!17959 = distinct !DILocation(line: 154, column: 2, scope: !17954)
!17960 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !17961)
!17961 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !17959)
!17962 = !DILocation(line: 0, scope: !17747, inlinedAt: !17961)
!17963 = !DILocation(line: 155, column: 7, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17965, file: !2676, line: 155, column: 7)
!17965 = distinct !DILexicalBlock(scope: !17966, file: !2676, line: 154, column: 24)
!17966 = distinct !DILexicalBlock(scope: !17954, file: !2676, line: 154, column: 2)
!17967 = !DILocation(line: 155, column: 7, scope: !17965)
!17968 = !DILocation(line: 156, column: 4, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17964, file: !2676, line: 155, column: 39)
!17970 = !DILocation(line: 158, column: 3, scope: !17969)
!17971 = !DILocation(line: 0, scope: !17806, inlinedAt: !17972)
!17972 = distinct !DILocation(line: 154, column: 2, scope: !17966)
!17973 = !DILocation(line: 0, scope: !17814, inlinedAt: !17974)
!17974 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !17972)
!17975 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !17974)
!17976 = !DILocation(line: 161, column: 2, scope: !17947)
!17977 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !541, file: !541, line: 225, type: !17978, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17982)
!17978 = !DISubroutineType(types: !17979)
!17979 = !{!153, !17980}
!17980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17981, size: 32)
!17981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2653)
!17982 = !{!17983}
!17983 = !DILocalVariable(name: "node", arg: 1, scope: !17977, file: !541, line: 225, type: !17980)
!17984 = !DILocation(line: 0, scope: !17977)
!17985 = !DILocation(line: 227, column: 15, scope: !17977)
!17986 = !DILocation(line: 227, column: 20, scope: !17977)
!17987 = !DILocation(line: 227, column: 2, scope: !17977)
!17988 = distinct !DISubprogram(name: "remove_timeout", scope: !2676, file: !2676, line: 53, type: !2670, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !17989)
!17989 = !{!17990}
!17990 = !DILocalVariable(name: "t", arg: 1, scope: !17988, file: !2676, line: 53, type: !2649)
!17991 = !DILocation(line: 0, scope: !17988)
!17992 = !DILocation(line: 55, column: 6, scope: !17993)
!17993 = distinct !DILexicalBlock(scope: !17988, file: !2676, line: 55, column: 6)
!17994 = !DILocation(line: 55, column: 14, scope: !17993)
!17995 = !DILocation(line: 55, column: 6, scope: !17988)
!17996 = !DILocation(line: 56, column: 25, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17993, file: !2676, line: 55, column: 23)
!17998 = !DILocation(line: 56, column: 12, scope: !17997)
!17999 = !DILocation(line: 56, column: 19, scope: !17997)
!18000 = !DILocation(line: 57, column: 2, scope: !17997)
!18001 = !DILocation(line: 59, column: 23, scope: !17988)
!18002 = !DILocation(line: 59, column: 2, scope: !17988)
!18003 = !DILocation(line: 60, column: 1, scope: !17988)
!18004 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !541, file: !541, line: 496, type: !18005, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18007)
!18005 = !DISubroutineType(types: !18006)
!18006 = !{null, !17833}
!18007 = !{!18008, !18009, !18010}
!18008 = !DILocalVariable(name: "node", arg: 1, scope: !18004, file: !541, line: 496, type: !17833)
!18009 = !DILocalVariable(name: "prev", scope: !18004, file: !541, line: 498, type: !17845)
!18010 = !DILocalVariable(name: "next", scope: !18004, file: !541, line: 499, type: !17845)
!18011 = !DILocation(line: 0, scope: !18004)
!18012 = !DILocation(line: 498, column: 34, scope: !18004)
!18013 = !DILocation(line: 499, column: 34, scope: !18004)
!18014 = !DILocation(line: 501, column: 8, scope: !18004)
!18015 = !DILocation(line: 501, column: 13, scope: !18004)
!18016 = !DILocation(line: 502, column: 8, scope: !18004)
!18017 = !DILocation(line: 502, column: 13, scope: !18004)
!18018 = !DILocation(line: 503, column: 2, scope: !18004)
!18019 = !DILocation(line: 504, column: 1, scope: !18004)
!18020 = distinct !DISubprogram(name: "sys_dnode_init", scope: !541, file: !541, line: 211, type: !18005, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18021)
!18021 = !{!18022}
!18022 = !DILocalVariable(name: "node", arg: 1, scope: !18020, file: !541, line: 211, type: !17833)
!18023 = !DILocation(line: 0, scope: !18020)
!18024 = !DILocation(line: 213, column: 8, scope: !18020)
!18025 = !DILocation(line: 213, column: 13, scope: !18020)
!18026 = !DILocation(line: 214, column: 8, scope: !18020)
!18027 = !DILocation(line: 214, column: 13, scope: !18020)
!18028 = !DILocation(line: 215, column: 1, scope: !18020)
!18029 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2676, file: !2676, line: 183, type: !18030, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18034)
!18030 = !DISubroutineType(types: !18031)
!18031 = !{!1889, !18032}
!18032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18033, size: 32)
!18033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2650)
!18034 = !{!18035, !18036, !18037, !18039}
!18035 = !DILocalVariable(name: "timeout", arg: 1, scope: !18029, file: !2676, line: 183, type: !18032)
!18036 = !DILocalVariable(name: "ticks", scope: !18029, file: !2676, line: 185, type: !1889)
!18037 = !DILocalVariable(name: "__i", scope: !18038, file: !2676, line: 187, type: !17716)
!18038 = distinct !DILexicalBlock(scope: !18029, file: !2676, line: 187, column: 2)
!18039 = !DILocalVariable(name: "__key", scope: !18038, file: !2676, line: 187, type: !17716)
!18040 = !DILocation(line: 0, scope: !18029)
!18041 = !DILocation(line: 0, scope: !18038)
!18042 = !DILocation(line: 0, scope: !17738, inlinedAt: !18043)
!18043 = distinct !DILocation(line: 187, column: 2, scope: !18038)
!18044 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !18045)
!18045 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !18043)
!18046 = !DILocation(line: 0, scope: !17747, inlinedAt: !18045)
!18047 = !DILocation(line: 188, column: 11, scope: !18048)
!18048 = distinct !DILexicalBlock(scope: !18049, file: !2676, line: 187, column: 24)
!18049 = distinct !DILexicalBlock(scope: !18038, file: !2676, line: 187, column: 2)
!18050 = !DILocation(line: 0, scope: !17806, inlinedAt: !18051)
!18051 = distinct !DILocation(line: 187, column: 2, scope: !18049)
!18052 = !DILocation(line: 0, scope: !17814, inlinedAt: !18053)
!18053 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !18051)
!18054 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !18053)
!18055 = !DILocation(line: 191, column: 2, scope: !18029)
!18056 = distinct !DISubprogram(name: "timeout_rem", scope: !2676, file: !2676, line: 165, type: !18030, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18057)
!18057 = !{!18058, !18059, !18060}
!18058 = !DILocalVariable(name: "timeout", arg: 1, scope: !18056, file: !2676, line: 165, type: !18032)
!18059 = !DILocalVariable(name: "ticks", scope: !18056, file: !2676, line: 167, type: !1889)
!18060 = !DILocalVariable(name: "t", scope: !18061, file: !2676, line: 173, type: !2649)
!18061 = distinct !DILexicalBlock(scope: !18056, file: !2676, line: 173, column: 2)
!18062 = !DILocation(line: 0, scope: !18056)
!18063 = !DILocation(line: 169, column: 6, scope: !18064)
!18064 = distinct !DILexicalBlock(scope: !18056, file: !2676, line: 169, column: 6)
!18065 = !DILocation(line: 169, column: 6, scope: !18056)
!18066 = !DILocation(line: 173, column: 28, scope: !18061)
!18067 = !DILocation(line: 0, scope: !18061)
!18068 = !DILocation(line: 173, column: 39, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18061, file: !2676, line: 173, column: 2)
!18070 = !DILocation(line: 173, column: 2, scope: !18061)
!18071 = !DILocation(line: 174, column: 15, scope: !18072)
!18072 = distinct !DILexicalBlock(scope: !18069, file: !2676, line: 173, column: 61)
!18073 = !DILocation(line: 174, column: 9, scope: !18072)
!18074 = !DILocation(line: 175, column: 15, scope: !18075)
!18075 = distinct !DILexicalBlock(scope: !18072, file: !2676, line: 175, column: 7)
!18076 = !DILocation(line: 175, column: 7, scope: !18072)
!18077 = !DILocation(line: 173, column: 52, scope: !18069)
!18078 = distinct !{!18078, !18070, !18079}
!18079 = !DILocation(line: 178, column: 2, scope: !18061)
!18080 = !DILocation(line: 180, column: 17, scope: !18056)
!18081 = !DILocation(line: 180, column: 15, scope: !18056)
!18082 = !DILocation(line: 180, column: 2, scope: !18056)
!18083 = !DILocation(line: 181, column: 1, scope: !18056)
!18084 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !15394, file: !15394, line: 35, type: !18085, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18087)
!18085 = !DISubroutineType(types: !18086)
!18086 = !{!153, !18032}
!18087 = !{!18088}
!18088 = !DILocalVariable(name: "to", arg: 1, scope: !18084, file: !15394, line: 35, type: !18032)
!18089 = !DILocation(line: 0, scope: !18084)
!18090 = !DILocation(line: 37, column: 35, scope: !18084)
!18091 = !DILocation(line: 37, column: 10, scope: !18084)
!18092 = !DILocation(line: 37, column: 9, scope: !18084)
!18093 = !DILocation(line: 37, column: 2, scope: !18084)
!18094 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2676, file: !2676, line: 194, type: !18030, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18095)
!18095 = !{!18096, !18097, !18098, !18100}
!18096 = !DILocalVariable(name: "timeout", arg: 1, scope: !18094, file: !2676, line: 194, type: !18032)
!18097 = !DILocalVariable(name: "ticks", scope: !18094, file: !2676, line: 196, type: !1889)
!18098 = !DILocalVariable(name: "__i", scope: !18099, file: !2676, line: 198, type: !17716)
!18099 = distinct !DILexicalBlock(scope: !18094, file: !2676, line: 198, column: 2)
!18100 = !DILocalVariable(name: "__key", scope: !18099, file: !2676, line: 198, type: !17716)
!18101 = !DILocation(line: 0, scope: !18094)
!18102 = !DILocation(line: 0, scope: !18099)
!18103 = !DILocation(line: 0, scope: !17738, inlinedAt: !18104)
!18104 = distinct !DILocation(line: 198, column: 2, scope: !18099)
!18105 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !18106)
!18106 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !18104)
!18107 = !DILocation(line: 0, scope: !17747, inlinedAt: !18106)
!18108 = !DILocation(line: 199, column: 11, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18110, file: !2676, line: 198, column: 24)
!18110 = distinct !DILexicalBlock(scope: !18099, file: !2676, line: 198, column: 2)
!18111 = !DILocation(line: 199, column: 23, scope: !18109)
!18112 = !DILocation(line: 0, scope: !17806, inlinedAt: !18113)
!18113 = distinct !DILocation(line: 198, column: 2, scope: !18110)
!18114 = !DILocation(line: 0, scope: !17814, inlinedAt: !18115)
!18115 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !18113)
!18116 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !18115)
!18117 = !DILocation(line: 199, column: 21, scope: !18109)
!18118 = !DILocation(line: 202, column: 2, scope: !18094)
!18119 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2676, file: !2676, line: 205, type: !17822, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18120)
!18120 = !{!18121, !18122, !18124}
!18121 = !DILocalVariable(name: "ret", scope: !18119, file: !2676, line: 207, type: !908)
!18122 = !DILocalVariable(name: "__i", scope: !18123, file: !2676, line: 209, type: !17716)
!18123 = distinct !DILexicalBlock(scope: !18119, file: !2676, line: 209, column: 2)
!18124 = !DILocalVariable(name: "__key", scope: !18123, file: !2676, line: 209, type: !17716)
!18125 = !DILocation(line: 0, scope: !18119)
!18126 = !DILocation(line: 0, scope: !18123)
!18127 = !DILocation(line: 0, scope: !17738, inlinedAt: !18128)
!18128 = distinct !DILocation(line: 209, column: 2, scope: !18123)
!18129 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !18130)
!18130 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !18128)
!18131 = !DILocation(line: 0, scope: !17747, inlinedAt: !18130)
!18132 = !DILocation(line: 210, column: 9, scope: !18133)
!18133 = distinct !DILexicalBlock(scope: !18134, file: !2676, line: 209, column: 24)
!18134 = distinct !DILexicalBlock(scope: !18123, file: !2676, line: 209, column: 2)
!18135 = !DILocation(line: 0, scope: !17806, inlinedAt: !18136)
!18136 = distinct !DILocation(line: 209, column: 2, scope: !18134)
!18137 = !DILocation(line: 0, scope: !17814, inlinedAt: !18138)
!18138 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !18136)
!18139 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !18138)
!18140 = !DILocation(line: 212, column: 2, scope: !18119)
!18141 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2676, file: !2676, line: 215, type: !12968, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18142)
!18142 = !{!18143, !18144, !18145, !18147, !18148, !18151, !18152}
!18143 = !DILocalVariable(name: "ticks", arg: 1, scope: !18141, file: !2676, line: 215, type: !908)
!18144 = !DILocalVariable(name: "is_idle", arg: 2, scope: !18141, file: !2676, line: 215, type: !153)
!18145 = !DILocalVariable(name: "__i", scope: !18146, file: !2676, line: 217, type: !17716)
!18146 = distinct !DILexicalBlock(scope: !18141, file: !2676, line: 217, column: 2)
!18147 = !DILocalVariable(name: "__key", scope: !18146, file: !2676, line: 217, type: !17716)
!18148 = !DILocalVariable(name: "next_to", scope: !18149, file: !2676, line: 218, type: !125)
!18149 = distinct !DILexicalBlock(scope: !18150, file: !2676, line: 217, column: 24)
!18150 = distinct !DILexicalBlock(scope: !18146, file: !2676, line: 217, column: 2)
!18151 = !DILocalVariable(name: "sooner", scope: !18149, file: !2676, line: 219, type: !153)
!18152 = !DILocalVariable(name: "imminent", scope: !18149, file: !2676, line: 221, type: !153)
!18153 = !DILocation(line: 0, scope: !18141)
!18154 = !DILocation(line: 0, scope: !18146)
!18155 = !DILocation(line: 0, scope: !17738, inlinedAt: !18156)
!18156 = distinct !DILocation(line: 217, column: 2, scope: !18146)
!18157 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !18158)
!18158 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !18156)
!18159 = !DILocation(line: 0, scope: !17747, inlinedAt: !18158)
!18160 = !DILocation(line: 218, column: 17, scope: !18149)
!18161 = !DILocation(line: 0, scope: !18149)
!18162 = !DILocation(line: 221, column: 27, scope: !18149)
!18163 = !DILocation(line: 233, column: 17, scope: !18164)
!18164 = distinct !DILexicalBlock(scope: !18149, file: !2676, line: 233, column: 7)
!18165 = !DILocation(line: 234, column: 26, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !18164, file: !2676, line: 233, column: 56)
!18167 = !DILocation(line: 234, column: 4, scope: !18166)
!18168 = !DILocation(line: 235, column: 3, scope: !18166)
!18169 = !DILocation(line: 0, scope: !17806, inlinedAt: !18170)
!18170 = distinct !DILocation(line: 217, column: 2, scope: !18150)
!18171 = !DILocation(line: 0, scope: !17814, inlinedAt: !18172)
!18172 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !18170)
!18173 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !18172)
!18174 = !DILocation(line: 237, column: 1, scope: !18141)
!18175 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2676, file: !2676, line: 239, type: !18176, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18178)
!18176 = !DISubroutineType(types: !18177)
!18177 = !{null, !908}
!18178 = !{!18179, !18180, !18181, !18183}
!18179 = !DILocalVariable(name: "ticks", arg: 1, scope: !18175, file: !2676, line: 239, type: !908)
!18180 = !DILocalVariable(name: "key", scope: !18175, file: !2676, line: 245, type: !17716)
!18181 = !DILocalVariable(name: "t", scope: !18182, file: !2676, line: 262, type: !2649)
!18182 = distinct !DILexicalBlock(scope: !18175, file: !2676, line: 261, column: 67)
!18183 = !DILocalVariable(name: "dt", scope: !18182, file: !2676, line: 263, type: !125)
!18184 = !DILocation(line: 0, scope: !18175)
!18185 = !DILocation(line: 242, column: 2, scope: !18175)
!18186 = !DILocation(line: 0, scope: !17738, inlinedAt: !18187)
!18187 = distinct !DILocation(line: 245, column: 25, scope: !18175)
!18188 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !18189)
!18189 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !18187)
!18190 = !DILocation(line: 0, scope: !17747, inlinedAt: !18189)
!18191 = !DILocation(line: 261, column: 9, scope: !18175)
!18192 = !DILocation(line: 261, column: 17, scope: !18175)
!18193 = !DILocation(line: 261, column: 25, scope: !18175)
!18194 = !DILocation(line: 261, column: 37, scope: !18175)
!18195 = !DILocation(line: 261, column: 47, scope: !18175)
!18196 = !DILocation(line: 261, column: 44, scope: !18175)
!18197 = !DILocation(line: 261, column: 2, scope: !18175)
!18198 = !DILocation(line: 0, scope: !18182)
!18199 = !DILocation(line: 263, column: 12, scope: !18182)
!18200 = !DILocation(line: 265, column: 16, scope: !18182)
!18201 = !DILocation(line: 265, column: 13, scope: !18182)
!18202 = !DILocation(line: 266, column: 13, scope: !18182)
!18203 = !DILocation(line: 267, column: 3, scope: !18182)
!18204 = !DILocation(line: 0, scope: !17806, inlinedAt: !18205)
!18205 = distinct !DILocation(line: 269, column: 3, scope: !18182)
!18206 = !DILocation(line: 0, scope: !17814, inlinedAt: !18207)
!18207 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !18205)
!18208 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !18207)
!18209 = !DILocation(line: 270, column: 6, scope: !18182)
!18210 = !DILocation(line: 270, column: 3, scope: !18182)
!18211 = !DILocation(line: 0, scope: !17738, inlinedAt: !18212)
!18212 = distinct !DILocation(line: 271, column: 9, scope: !18182)
!18213 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !18214)
!18214 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !18212)
!18215 = !DILocation(line: 0, scope: !17747, inlinedAt: !18214)
!18216 = !DILocation(line: 272, column: 22, scope: !18182)
!18217 = distinct !{!18217, !18197, !18218}
!18218 = !DILocation(line: 273, column: 2, scope: !18175)
!18219 = !DILocation(line: 276, column: 19, scope: !18220)
!18220 = distinct !DILexicalBlock(scope: !18221, file: !2676, line: 275, column: 23)
!18221 = distinct !DILexicalBlock(scope: !18175, file: !2676, line: 275, column: 6)
!18222 = !DILocation(line: 277, column: 2, scope: !18220)
!18223 = !DILocation(line: 279, column: 15, scope: !18175)
!18224 = !DILocation(line: 279, column: 12, scope: !18175)
!18225 = !DILocation(line: 280, column: 21, scope: !18175)
!18226 = !DILocation(line: 282, column: 24, scope: !18175)
!18227 = !DILocation(line: 282, column: 2, scope: !18175)
!18228 = !DILocation(line: 0, scope: !17806, inlinedAt: !18229)
!18229 = distinct !DILocation(line: 284, column: 2, scope: !18175)
!18230 = !DILocation(line: 0, scope: !17814, inlinedAt: !18231)
!18231 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !18229)
!18232 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !18231)
!18233 = !DILocation(line: 285, column: 1, scope: !18175)
!18234 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2676, file: !2676, line: 287, type: !18235, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18237)
!18235 = !DISubroutineType(types: !18236)
!18236 = !{!598}
!18237 = !{!18238, !18239, !18241}
!18238 = !DILocalVariable(name: "t", scope: !18234, file: !2676, line: 289, type: !1796)
!18239 = !DILocalVariable(name: "__i", scope: !18240, file: !2676, line: 291, type: !17716)
!18240 = distinct !DILexicalBlock(scope: !18234, file: !2676, line: 291, column: 2)
!18241 = !DILocalVariable(name: "__key", scope: !18240, file: !2676, line: 291, type: !17716)
!18242 = !DILocation(line: 0, scope: !18234)
!18243 = !DILocation(line: 0, scope: !18240)
!18244 = !DILocation(line: 0, scope: !17738, inlinedAt: !18245)
!18245 = distinct !DILocation(line: 291, column: 2, scope: !18240)
!18246 = !DILocation(line: 55, column: 2, scope: !17747, inlinedAt: !18247)
!18247 = distinct !DILocation(line: 145, column: 10, scope: !17738, inlinedAt: !18245)
!18248 = !DILocation(line: 0, scope: !17747, inlinedAt: !18247)
!18249 = !DILocation(line: 292, column: 7, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18251, file: !2676, line: 291, column: 24)
!18251 = distinct !DILexicalBlock(scope: !18240, file: !2676, line: 291, column: 2)
!18252 = !DILocation(line: 292, column: 19, scope: !18250)
!18253 = !DILocation(line: 0, scope: !17806, inlinedAt: !18254)
!18254 = distinct !DILocation(line: 291, column: 2, scope: !18251)
!18255 = !DILocation(line: 0, scope: !17814, inlinedAt: !18256)
!18256 = distinct !DILocation(line: 215, column: 2, scope: !17806, inlinedAt: !18254)
!18257 = !DILocation(line: 95, column: 2, scope: !17814, inlinedAt: !18256)
!18258 = !DILocation(line: 292, column: 17, scope: !18250)
!18259 = !DILocation(line: 294, column: 2, scope: !18234)
!18260 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2676, file: !2676, line: 297, type: !8391, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !639)
!18261 = !DILocation(line: 300, column: 19, scope: !18260)
!18262 = !DILocation(line: 300, column: 9, scope: !18260)
!18263 = !DILocation(line: 300, column: 2, scope: !18260)
!18264 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2676, file: !2676, line: 306, type: !18235, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !639)
!18265 = !DILocation(line: 308, column: 9, scope: !18264)
!18266 = !DILocation(line: 308, column: 2, scope: !18264)
!18267 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2676, file: !2676, line: 319, type: !8401, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18268)
!18268 = !{!18269, !18270, !18271, !18272}
!18269 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !18267, file: !2676, line: 319, type: !208)
!18270 = !DILocalVariable(name: "start_cycles", scope: !18267, file: !2676, line: 328, type: !208)
!18271 = !DILocalVariable(name: "cycles_to_wait", scope: !18267, file: !2676, line: 331, type: !208)
!18272 = !DILocalVariable(name: "current_cycles", scope: !18273, file: !2676, line: 338, type: !208)
!18273 = distinct !DILexicalBlock(scope: !18274, file: !2676, line: 337, column: 11)
!18274 = distinct !DILexicalBlock(scope: !18275, file: !2676, line: 337, column: 2)
!18275 = distinct !DILexicalBlock(scope: !18267, file: !2676, line: 337, column: 2)
!18276 = !DILocation(line: 0, scope: !18267)
!18277 = !DILocation(line: 322, column: 19, scope: !18278)
!18278 = distinct !DILexicalBlock(scope: !18267, file: !2676, line: 322, column: 6)
!18279 = !DILocation(line: 322, column: 6, scope: !18267)
!18280 = !DILocation(line: 328, column: 26, scope: !18267)
!18281 = !DILocation(line: 333, column: 43, scope: !18267)
!18282 = !DILocation(line: 337, column: 2, scope: !18267)
!18283 = !DILocation(line: 338, column: 29, scope: !18273)
!18284 = !DILocation(line: 0, scope: !18273)
!18285 = !DILocation(line: 341, column: 23, scope: !18286)
!18286 = distinct !DILexicalBlock(scope: !18273, file: !2676, line: 341, column: 7)
!18287 = !DILocation(line: 341, column: 39, scope: !18286)
!18288 = !DILocation(line: 349, column: 1, scope: !18267)
!18289 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !624, file: !624, line: 1675, type: !8391, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !639)
!18290 = !DILocation(line: 1677, column: 9, scope: !18289)
!18291 = !DILocation(line: 1677, column: 2, scope: !18289)
!18292 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !18293, file: !18293, line: 24, type: !8391, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !639)
!18293 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18294 = !DILocation(line: 26, column: 9, scope: !18292)
!18295 = !DILocation(line: 26, column: 2, scope: !18292)
!18296 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2676, file: !2676, line: 364, type: !18297, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2646, retainedNodes: !18299)
!18297 = !DISubroutineType(types: !18298)
!18298 = !{!1796, !17706}
!18299 = !{!18300, !18301}
!18300 = !DILocalVariable(name: "timeout", arg: 1, scope: !18296, file: !2676, line: 364, type: !17706)
!18301 = !DILocalVariable(name: "dt", scope: !18296, file: !2676, line: 366, type: !1889)
!18302 = !DILocation(line: 0, scope: !18296)
!18303 = !DILocation(line: 368, column: 6, scope: !18296)
!18304 = !DILocation(line: 371, column: 10, scope: !18305)
!18305 = distinct !DILexicalBlock(scope: !18306, file: !2676, line: 370, column: 47)
!18306 = distinct !DILexicalBlock(scope: !18307, file: !2676, line: 370, column: 13)
!18307 = distinct !DILexicalBlock(scope: !18296, file: !2676, line: 368, column: 6)
!18308 = !DILocation(line: 371, column: 3, scope: !18305)
!18309 = !DILocation(line: 376, column: 58, scope: !18310)
!18310 = distinct !DILexicalBlock(scope: !18311, file: !2676, line: 376, column: 7)
!18311 = distinct !DILexicalBlock(scope: !18306, file: !2676, line: 372, column: 9)
!18312 = !DILocation(line: 376, column: 7, scope: !18311)
!18313 = !DILocation(line: 376, column: 43, scope: !18310)
!18314 = !DILocation(line: 377, column: 4, scope: !18315)
!18315 = distinct !DILexicalBlock(scope: !18310, file: !2676, line: 376, column: 64)
!18316 = !DILocation(line: 379, column: 10, scope: !18311)
!18317 = !DILocation(line: 379, column: 33, scope: !18311)
!18318 = !DILocation(line: 379, column: 31, scope: !18311)
!18319 = !DILocation(line: 379, column: 3, scope: !18311)
!18320 = !DILocation(line: 0, scope: !18307)
!18321 = !DILocation(line: 381, column: 1, scope: !18296)
!18322 = distinct !DISubprogram(name: "boot_banner", scope: !18323, file: !18323, line: 26, type: !3297, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3283, retainedNodes: !639)
!18323 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!18324 = !DILocation(line: 34, column: 2, scope: !18322)
!18325 = !DILocation(line: 36, column: 1, scope: !18322)
