; ModuleID = 'build/96b_argonkey/simple/zephyr/zephyr.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct._isr_table_entry = type { i8*, void (i8*)* }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread*, i32, i32 }
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_thread = type { %struct._thread_base, %struct._callee_saved, i8*, %struct._wait_q_t, [32 x i8], i32, %struct._thread_stack_info, %struct.k_heap*, %struct._thread_arch }
%struct._thread_base = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2, i32, i8*, %struct._timeout }
%union.anon.2 = type { i16 }
%struct._timeout = type { %struct._dnode, void (%struct._timeout*)*, i64 }
%struct._callee_saved = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct._thread_stack_info = type { i32, i32, i32 }
%struct.k_heap = type { %struct.sys_heap, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap = type { %struct.z_heap*, i8*, i32 }
%struct.z_heap = type opaque
%struct.k_spinlock = type { i32 }
%struct._thread_arch = type { i32, i32 }
%struct.k_condvar = type { %struct._wait_q_t }
%struct.z_thread_stack_element = type { i8 }
%struct.log_source_const_data = type { i8*, i8 }
%struct.init_entry = type { i32 (%struct.device*)*, %struct.device* }
%struct.device = type { i8*, i8*, i8*, %struct.device_state*, i8*, i16* }
%struct.device_state = type { i8, i8 }
%struct.z_arm_mpu_partition = type { i32, i32, %struct.k_spinlock }
%struct.arm_mpu_region = type { i32, i8*, %struct.k_spinlock }
%struct.arm_mpu_config = type { i32, %struct.arm_mpu_region* }
%struct.stm32_exti_data = type { [23 x %struct.__exti_cb] }
%struct.__exti_cb = type { void (i32, i8*)*, i8* }
%struct._isr_list = type { i32, i32, i8*, i8* }
%struct.clock_control_driver_api = type { i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)*, i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i32 (%struct.device*, i8*, i8*)* }
%struct.gpio_stm32_config = type { %struct.k_spinlock, i32*, i32, %struct._thread_arch }
%struct.gpio_driver_api = type { i32 (%struct.device*, i8, i32)*, i32 (%struct.device*, i32*)*, i32 (%struct.device*, i32, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i8, i32, i32)*, i32 (%struct.device*, %struct.gpio_callback*, i1)*, i32 (%struct.device*)* }
%struct.gpio_callback = type { %struct._snode, void (%struct.device*, %struct.gpio_callback*, i32)*, i32 }
%struct._snode = type { %struct._snode* }
%struct.gpio_stm32_data = type { %struct.k_spinlock, %struct.device*, %struct._slist }
%struct._slist = type { %struct._snode*, %struct._snode* }
%struct.uart_stm32_config = type { %struct.USART_TypeDef*, %struct._thread_arch*, i32, i8, i32, i8, i8, i8, i8, %struct.pinctrl_dev_config* }
%struct.USART_TypeDef = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.pinctrl_dev_config = type { %struct.pinctrl_state*, i8 }
%struct.pinctrl_state = type { %struct._thread_arch*, i8, i8 }
%struct.uart_driver_api = type { i32 (%struct.device*, i8*)*, void (%struct.device*, i8)*, i32 (%struct.device*)*, i32 (%struct.device*, %struct.uart_config*)*, i32 (%struct.device*, %struct.uart_config*)* }
%struct.uart_config = type { i32, i8, i8, i8, i8 }
%struct.uart_stm32_data = type { i32, %struct.device* }
%struct._static_thread_data = type { %struct.k_thread*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.z_kernel = type { [1 x %struct._cpu], %struct._ready_q }
%struct._cpu = type { i32, i8*, %struct.k_thread*, %struct.k_thread*, i32, i8, %struct._cpu_arch }
%struct._cpu_arch = type {}
%struct._ready_q = type { %struct.k_thread*, %struct._dnode }
%struct.__va_list = type { i8* }
%struct.cbprintf_package_desc = type { i8, i8, i8, i8 }
%struct.str_context = type { i8*, i32, i32 }
%struct.anon = type { %union.argument_value, %struct.conversion }
%union.argument_value = type { i64 }
%struct.conversion = type { [3 x i8], i8, %struct.k_spinlock, %struct.k_spinlock }
%struct.__esf = type { %struct.__basic_sf }
%struct.__basic_sf = type { %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, %struct.k_spinlock, i32 }
%struct.k_fifo = type { %struct.k_queue }
%struct.k_queue = type { %struct._sflist, %struct.k_spinlock, %struct._wait_q_t }
%struct._sflist = type { %struct.k_spinlock*, %struct.k_spinlock* }
%struct.GPIO_TypeDef = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.RCC_OscInitTypeDef = type { i32, i32, i32, i32, i32, i32, %struct.USART_TypeDef }
%struct.RCC_ClkInitTypeDef = type { i32, i32, i32, i32, i32 }
%struct.rbnode = type { [2 x %struct.rbnode*] }
%struct._priq_rb = type { %struct.rbtree, i32 }
%struct.rbtree = type { %struct.rbnode*, i1 (%struct.rbnode*, %struct.rbnode*)*, i32 }
%struct._rb_foreach = type { %struct.rbnode**, i8*, i32 }
%struct._priq_mq = type { [32 x %struct._dnode], i32 }

@_irq_vector_table = dso_local local_unnamed_addr global [97 x i32] [i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32), i32 ptrtoint (void ()* @_isr_wrapper to i32)], section ".gnu.linkonce.irq_vector_table", align 4, !dbg !0
@_sw_isr_table = dso_local local_unnamed_addr global [97 x %struct._isr_table_entry] [%struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236021 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236001 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134235991 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236091 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236081 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236071 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236061 to void (i8*)*) }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236051 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236041 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236031 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* inttoptr (i32 134237364 to i8*), void (i8*)* inttoptr (i32 134236011 to void (i8*)*) }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }, %struct._isr_table_entry { i8* null, void (i8*)* @z_irq_spurious }], section ".gnu.linkonce.sw_isr_table", align 4, !dbg !5
@llvm.compiler.used = appending global [43 x i8*] [i8* bitcast (%struct.k_condvar* @condvar to i8*), i8* bitcast (%struct.k_mutex* @mutex to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_cbprintf_package to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32f4_init to i8*), i8* bitcast (%struct.init_entry* @__init_st_stm32_common_config to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_mpu to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_35 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 to i8*), i8* bitcast (%struct._isr_list* @__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_8 to i8*), i8* bitcast (%struct.init_entry* @__init_uart_console_init to i8*), i8* bitcast (%struct.device* @__device_dts_ord_19 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_24 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_75 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_76 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_77 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_78 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_79 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_19 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_22 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_24 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_75 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_76 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_77 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_78 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_79 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_44 to i8*), i8* bitcast (%struct.init_entry* @__init___device_dts_ord_44 to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_uart_stm32 to i8*), i8* bitcast (%struct.init_entry* @__init_sys_clock_driver_init to i8*), i8* bitcast (%struct.log_source_const_data* @log_const_os to i8*)], section "llvm.metadata"
@mutex = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @mutex, i32 0, i32 0, i32 0) } } }, %struct.k_thread* null, i32 0, i32 14 }, section "._k_mutex.static.mutex", align 4, !dbg !25
@condvar = dso_local global %struct.k_condvar { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_condvar, %struct.k_condvar* @condvar, i32 0, i32 0, i32 0) } } } }, section "._k_condvar.static.condvar", align 4, !dbg !114
@.str = private unnamed_addr constant [29 x i8] c"[thread %d] working (%d/%d)\0A\00", align 1
@done = internal unnamed_addr global i32 0, align 4, !dbg !260
@.str.1 = private unnamed_addr constant [46 x i8] c"[thread %d] done is now %d. Signalling cond.\0A\00", align 1
@t = internal global [20 x %struct.k_thread] zeroinitializer, align 8, !dbg !152
@tstacks = dso_local global [20 x [1088 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22CMAKE_SOURCE_DIR/src/main.c\22.0", align 64, !dbg !141
@.str.2 = private unnamed_addr constant [57 x i8] c"[thread %s] done is %d which is < %d so waiting on cond\0A\00", align 1
@__func__.main = private unnamed_addr constant [5 x i8] c"main\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"[thread %s] wake - cond was signalled.\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"[thread %s] done == %d so everyone is done\0A\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"cbprintf_package\00", align 1
@log_const_cbprintf_package = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i32 0, i32 0), i8 3 }, section ".log_const_cbprintf_package", align 4, !dbg !269
@.str.1.7 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.2.8 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3.9 = private unnamed_addr constant [39 x i8] c"ZEPHYR_BASE/lib/os/cbprintf_packaged.c\00", align 1
@.str.4.10 = private unnamed_addr constant [33 x i8] c"\09String with too many arguments\0A\00", align 1
@.str.5.11 = private unnamed_addr constant [26 x i8] c"\09str_ptr_pos[] too small\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\09unexpected size %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"\09too many format args\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"in_packaged != ((void *)0)\00", align 1
@.str.9 = private unnamed_addr constant [168 x i8] c"%c: (unsigned) char * used for %%p argument. It's recommended to cast it to void * because it may cause misbehavior in certain configurations. String:\22%s\22 argument:%d\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"scpy_cnt < sizeof(cpy_str_pos)\00", align 1
@.str.11 = private unnamed_addr constant [32 x i8] c"keep_cnt < sizeof(keep_str_pos)\00", align 1
@__rodata_region_start = external dso_local global [0 x i8], align 1
@__rodata_region_end = external dso_local global [0 x i8], align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"packaged != ((void *)0)\00", align 1
@_char_out = dso_local local_unnamed_addr global i32 (i32)* @arch_printk_char_out, align 4, !dbg !295
@.str.16 = private unnamed_addr constant [6 x i8] c"(nil)\00", align 1
@__init_st_stm32f4_init = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32f4_init, %struct.device* null }, section ".z_init_PRE_KERNEL_10_", align 4, !dbg !305
@__init_st_stm32_common_config = internal constant %struct.init_entry { i32 (%struct.device*)* @st_stm32_common_config, %struct.device* null }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !356
@.str.25 = private unnamed_addr constant [5 x i8] c"%c: \00", align 1
@.str.1.27 = private unnamed_addr constant [6 x i8] c"%02x \00", align 1
@.str.2.28 = private unnamed_addr constant [4 x i8] c"   \00", align 1
@.str.3.26 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.4.30 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.5.31 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.6.29 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.32 = private unnamed_addr constant [52 x i8] c"%c: r0/a1:  0x%08x  r1/a2:  0x%08x  r2/a3:  0x%08x\0A\00", align 1
@.str.1.33 = private unnamed_addr constant [52 x i8] c"%c: r3/a4:  0x%08x r12/ip:  0x%08x r14/lr:  0x%08x\0A\00", align 1
@.str.2.34 = private unnamed_addr constant [20 x i8] c"%c:  xpsr:  0x%08x\0A\00", align 1
@.str.3.35 = private unnamed_addr constant [51 x i8] c"%c: Faulting instruction address (r15/pc): 0x%08x\0A\00", align 1
@.str.36 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.37 = private unnamed_addr constant [27 x i8] c"prio <= ((1UL << (4)) - 1)\00", align 1
@.str.2.38 = private unnamed_addr constant [47 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/irq_manage.c\00", align 1
@.str.3.39 = private unnamed_addr constant [64 x i8] c"\09invalid priority %d for %d irq! values must be less than %lu\0A\0A\00", align 1
@_vector_start = external dso_local global [0 x i8], align 1
@.str.42 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.43 = private unnamed_addr constant [19 x i8] c"esf != ((void *)0)\00", align 1
@.str.2.44 = private unnamed_addr constant [51 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/cortex_m/fault.c\00", align 1
@.str.3.45 = private unnamed_addr constant [62 x i8] c"\09ESF could not be retrieved successfully. Shall never occur.\0A\00", align 1
@.str.4.58 = private unnamed_addr constant [48 x i8] c"%c: SPSEL in thread mode does not indicate PSP\0A\00", align 1
@.str.5.50 = private unnamed_addr constant [28 x i8] c"%c: ***** HARD FAULT *****\0A\00", align 1
@.str.6.51 = private unnamed_addr constant [38 x i8] c"%c:   Bus fault on vector table read\0A\00", align 1
@.str.7.52 = private unnamed_addr constant [19 x i8] c"%c:   Debug event\0A\00", align 1
@.str.8.53 = private unnamed_addr constant [36 x i8] c"%c:   Fault escalation (see below)\0A\00", align 1
@.str.9.54 = private unnamed_addr constant [33 x i8] c"%c: ARCH_EXCEPT with reason %x\0A\0A\00", align 1
@.str.10.55 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.56 = private unnamed_addr constant [36 x i8] c"\09Fault escalation without FSR info\0A\00", align 1
@.str.12.57 = private unnamed_addr constant [48 x i8] c"\09HardFault without HFSR info Shall never occur\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"%c: ***** MPU FAULT *****\0A\00", align 1
@.str.14 = private unnamed_addr constant [56 x i8] c"%c:   Stacking error (context area might be not valid)\0A\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"%c:   Unstacking error\0A\00", align 1
@.str.16.49 = private unnamed_addr constant [29 x i8] c"%c:   Data Access Violation\0A\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"%c:   MMFAR Address: 0x%x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"%c:   Instruction Access Violation\0A\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"%c:   Floating-point lazy state preservation error\0A\00", align 1
@.str.20 = private unnamed_addr constant [74 x i8] c"!(((SCB_Type *) ((0xE000E000UL) + 0x0D00UL) )->CFSR & (1UL << (0U + 4U)))\00", align 1
@.str.21 = private unnamed_addr constant [35 x i8] c"\09Stacking error not a stack fail\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"%c: ***** BUS FAULT *****\0A\00", align 1
@.str.23 = private unnamed_addr constant [22 x i8] c"%c:   Stacking error\0A\00", align 1
@.str.24 = private unnamed_addr constant [30 x i8] c"%c:   Precise data bus error\0A\00", align 1
@.str.25.48 = private unnamed_addr constant [26 x i8] c"%c:   BFAR Address: 0x%x\0A\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"%c:   Imprecise data bus error\0A\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"%c:   Instruction bus error\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"%c: ***** USAGE FAULT *****\0A\00", align 1
@.str.29 = private unnamed_addr constant [24 x i8] c"%c:   Division by zero\0A\00", align 1
@.str.30 = private unnamed_addr constant [31 x i8] c"%c:   Unaligned memory access\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%c:   No coprocessor instructions\0A\00", align 1
@.str.32.47 = private unnamed_addr constant [42 x i8] c"%c:   Illegal load of EXC_RETURN into PC\0A\00", align 1
@.str.33 = private unnamed_addr constant [31 x i8] c"%c:   Illegal use of the EPSR\0A\00", align 1
@.str.34 = private unnamed_addr constant [48 x i8] c"%c:   Attempt to execute undefined instruction\0A\00", align 1
@.str.35 = private unnamed_addr constant [41 x i8] c"%c: ***** Debug monitor exception *****\0A\00", align 1
@.str.36.46 = private unnamed_addr constant [24 x i8] c"%c: ***** %s %d) *****\0A\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"Reserved Exception (\00", align 1
@.str.38 = private unnamed_addr constant [25 x i8] c"Spurious interrupt (IRQ \00", align 1
@.str.64 = private unnamed_addr constant [4 x i8] c"mpu\00", align 1
@log_const_mpu = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.64, i32 0, i32 0), i8 3 }, section ".log_const_mpu", align 4, !dbg !385
@static_regions = internal constant [1 x %struct.z_arm_mpu_partition] [%struct.z_arm_mpu_partition { i32 ptrtoint ([0 x i8]* @__ramfunc_start to i32), i32 ptrtoint ([0 x i8]* @__ramfunc_size to i32), %struct.k_spinlock { i32 101384192 } }], align 4, !dbg !519
@_image_ram_start = external dso_local global [0 x i8], align 1
@__kernel_ram_end = external dso_local global [0 x i8], align 1
@z_arm_configure_dynamic_mpu_regions.dynamic_regions = internal global [1 x %struct.z_arm_mpu_partition] zeroinitializer, align 4, !dbg !391
@.str.70 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.71 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.2.72 = private unnamed_addr constant [48 x i8] c"ZEPHYR_BASE/arch/arm/core/aarch32/mpu/arm_mpu.c\00", align 1
@.str.3.73 = private unnamed_addr constant [44 x i8] c"\09Configuring %u static MPU regions failed\0A\0A\00", align 1
@.str.4.78 = private unnamed_addr constant [45 x i8] c"\09Configuring %u dynamic MPU regions failed\0A\0A\00", align 1
@.str.5.79 = private unnamed_addr constant [52 x i8] c"\09Request to configure: %u regions (supported: %u)\0A\0A\00", align 1
@static_regions_num = internal unnamed_addr global i8 0, align 1, !dbg !528
@.str.6.80 = private unnamed_addr constant [80 x i8] c"(((MPU_Type *) ((0xE000E000UL) + 0x0D90UL) )->TYPE & (0xFFUL << 8U)) >> 8U == 8\00", align 1
@.str.7.81 = private unnamed_addr constant [33 x i8] c"\09Invalid number of MPU regions\0A\0A\00", align 1
@.str.8.74 = private unnamed_addr constant [40 x i8] c"%c: Partition %u: sanity check failed.\0A\00", align 1
@.str.9.75 = private unnamed_addr constant [43 x i8] c"%c: Failed to allocate new MPU region %u\0A\0A\00", align 1
@_stdout_hook = internal unnamed_addr global i32 (i32)* @_stdout_hook_default, align 4, !dbg !564
@mpu_regions = internal constant [2 x %struct.arm_mpu_region] [%struct.arm_mpu_region { i32 134217728, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i32 0, i32 0), %struct.k_spinlock { i32 117571622 } }, %struct.arm_mpu_region { i32 536870912, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.91, i32 0, i32 0), %struct.k_spinlock { i32 285933602 } }], align 4, !dbg !574
@mpu_config = dso_local local_unnamed_addr constant %struct.arm_mpu_config { i32 2, %struct.arm_mpu_region* getelementptr inbounds ([2 x %struct.arm_mpu_region], [2 x %struct.arm_mpu_region]* @mpu_regions, i32 0, i32 0) }, align 4, !dbg !579
@.str.90 = private unnamed_addr constant [8 x i8] c"FLASH_0\00", align 1
@.str.1.91 = private unnamed_addr constant [7 x i8] c"SRAM_0\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.95 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.2.96 = private unnamed_addr constant [59 x i8] c"ZEPHYR_BASE/drivers/interrupt_controller/intc_exti_stm32.c\00", align 1
@exti_irq_table = internal unnamed_addr constant [23 x i32] [i32 6, i32 7, i32 8, i32 9, i32 10, i32 23, i32 23, i32 23, i32 23, i32 23, i32 40, i32 40, i32 40, i32 40, i32 40, i32 40, i32 1, i32 255, i32 42, i32 255, i32 255, i32 2, i32 3], align 4, !dbg !599
@__devicehdl_dts_ord_35 = dso_local constant [3 x i16] [i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !792
@.str.4.92 = private unnamed_addr constant [30 x i8] c"interrupt-controller@40013c00\00", align 1
@__devstate_dts_ord_35 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !753
@exti_data = internal global %struct.stm32_exti_data zeroinitializer, align 4, !dbg !736
@__device_dts_ord_35 = dso_local constant %struct.device { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.92, i32 0, i32 0), i8* null, i8* null, %struct.device_state* @__devstate_dts_ord_35, i8* bitcast (%struct.stm32_exti_data* @exti_data to i8*), i16* getelementptr inbounds ([3 x i16], [3 x i16]* @__devicehdl_dts_ord_35, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !709
@__init___device_dts_ord_35 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_exti_init, %struct.device* @__device_dts_ord_35 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !725
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_0_irq_0 = internal global %struct._isr_list { i32 6, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_0 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !755
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_1_irq_1 = internal global %struct._isr_list { i32 7, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_1 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !769
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_2_irq_2 = internal global %struct._isr_list { i32 8, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_2 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !771
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_3_irq_3 = internal global %struct._isr_list { i32 9, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_3 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !773
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_4_irq_4 = internal global %struct._isr_list { i32 10, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_4 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !775
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_9_5_irq_5 = internal global %struct._isr_list { i32 23, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_9_5 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !777
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_15_10_irq_6 = internal global %struct._isr_list { i32 40, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_15_10 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !779
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_16_irq_7 = internal global %struct._isr_list { i32 1, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_16 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !781
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_18_irq_8 = internal global %struct._isr_list { i32 42, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_18 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !783
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_21_irq_9 = internal global %struct._isr_list { i32 2, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_21 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !785
@__stm32_exti_connect_irqs.__isr___stm32_exti_isr_22_irq_10 = internal global %struct._isr_list { i32 3, i32 0, i8* bitcast (void (%struct.device*)* @__stm32_exti_isr_22 to i8*), i8* bitcast (%struct.device* @__device_dts_ord_35 to i8*) }, section ".intList", align 4, !dbg !787
@__devicehdl_dts_ord_8 = dso_local constant [12 x i16] [i16 -32768, i16 -32768, i16 3, i16 4, i16 5, i16 6, i16 7, i16 8, i16 9, i16 10, i16 11, i16 32767], section ".__device_handles_pass2", align 2, !dbg !797
@.str.97 = private unnamed_addr constant [13 x i8] c"rcc@40023800\00", align 1
@stm32_clock_control_api = internal global %struct.clock_control_driver_api { i32 (%struct.device*, i8*)* @stm32_clock_control_on, i32 (%struct.device*, i8*)* @stm32_clock_control_off, i32 (%struct.device*, i8*, void (%struct.device*, i8*, i8*)*, i8*)* null, i32 (%struct.device*, i8*, i32*)* @stm32_clock_control_get_subsys_rate, i32 (%struct.device*, i8*)* null, i32 (%struct.device*, i8*, i8*)* null, i32 (%struct.device*, i8*, i8*)* @stm32_clock_control_configure }, align 4, !dbg !824
@__devstate_dts_ord_8 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !919
@__init___device_dts_ord_8 = internal constant %struct.init_entry { i32 (%struct.device*)* @stm32_clock_control_init, %struct.device* @__device_dts_ord_8 }, section ".z_init_PRE_KERNEL_11_", align 4, !dbg !908
@switch.table.enabled_clock = private unnamed_addr constant [6 x i32] [i32 0, i32 0, i32 -134, i32 -134, i32 0, i32 0], align 4
@__init_uart_console_init = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_console_init, %struct.device* null }, section ".z_init_PRE_KERNEL_160_", align 4, !dbg !960
@__devicehdl_dts_ord_19 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !817
@.str.106 = private unnamed_addr constant [14 x i8] c"gpio@40020000\00", align 1
@gpio_stm32_cfg_a = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073872896 to i32*), i32 0, %struct._thread_arch { i32 48, i32 1 } }, align 4, !dbg !1026
@gpio_stm32_driver = internal constant %struct.gpio_driver_api { i32 (%struct.device*, i8, i32)* @gpio_stm32_config, i32 (%struct.device*, i32*)* @gpio_stm32_port_get_raw, i32 (%struct.device*, i32, i32)* @gpio_stm32_port_set_masked_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_set_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_clear_bits_raw, i32 (%struct.device*, i32)* @gpio_stm32_port_toggle_bits, i32 (%struct.device*, i8, i32, i32)* @gpio_stm32_pin_interrupt_configure, i32 (%struct.device*, %struct.gpio_callback*, i1)* @gpio_stm32_manage_callback, i32 (%struct.device*)* null }, align 4, !dbg !1307
@__devstate_dts_ord_19 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1277
@gpio_stm32_data_a = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1263
@__init___device_dts_ord_19 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_19 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1205
@__devicehdl_dts_ord_24 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !815
@.str.1.114 = private unnamed_addr constant [14 x i8] c"gpio@40020400\00", align 1
@gpio_stm32_cfg_b = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073873920 to i32*), i32 1, %struct._thread_arch { i32 48, i32 2 } }, align 4, !dbg !1309
@__devstate_dts_ord_24 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1281
@gpio_stm32_data_b = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1279
@__init___device_dts_ord_24 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_24 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1219
@__devicehdl_dts_ord_22 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !813
@.str.2.115 = private unnamed_addr constant [14 x i8] c"gpio@40020800\00", align 1
@gpio_stm32_cfg_c = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073874944 to i32*), i32 2, %struct._thread_arch { i32 48, i32 4 } }, align 4, !dbg !1322
@__devstate_dts_ord_22 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1285
@gpio_stm32_data_c = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1283
@__init___device_dts_ord_22 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_22 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1228
@__devicehdl_dts_ord_75 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !811
@.str.3.116 = private unnamed_addr constant [14 x i8] c"gpio@40020c00\00", align 1
@gpio_stm32_cfg_d = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073875968 to i32*), i32 3, %struct._thread_arch { i32 48, i32 8 } }, align 4, !dbg !1324
@__devstate_dts_ord_75 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1289
@gpio_stm32_data_d = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1287
@__init___device_dts_ord_75 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_75 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1237
@__devicehdl_dts_ord_76 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !809
@.str.4.117 = private unnamed_addr constant [14 x i8] c"gpio@40021000\00", align 1
@gpio_stm32_cfg_e = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073876992 to i32*), i32 4, %struct._thread_arch { i32 48, i32 16 } }, align 4, !dbg !1326
@__devstate_dts_ord_76 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1293
@gpio_stm32_data_e = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1291
@__init___device_dts_ord_76 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_76 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1243
@__devicehdl_dts_ord_77 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !807
@.str.5.118 = private unnamed_addr constant [14 x i8] c"gpio@40021400\00", align 1
@gpio_stm32_cfg_f = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073878016 to i32*), i32 5, %struct._thread_arch { i32 48, i32 32 } }, align 4, !dbg !1328
@__devstate_dts_ord_77 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1297
@gpio_stm32_data_f = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1295
@__init___device_dts_ord_77 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_77 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1249
@__devicehdl_dts_ord_78 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !805
@.str.6.119 = private unnamed_addr constant [14 x i8] c"gpio@40021800\00", align 1
@gpio_stm32_cfg_g = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073879040 to i32*), i32 6, %struct._thread_arch { i32 48, i32 64 } }, align 4, !dbg !1330
@__devstate_dts_ord_78 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1301
@gpio_stm32_data_g = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1299
@__init___device_dts_ord_78 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_78 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1255
@__devicehdl_dts_ord_79 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !803
@.str.7.120 = private unnamed_addr constant [14 x i8] c"gpio@40021c00\00", align 1
@gpio_stm32_cfg_h = internal constant %struct.gpio_stm32_config { %struct.k_spinlock { i32 65535 }, i32* inttoptr (i32 1073880064 to i32*), i32 7, %struct._thread_arch { i32 48, i32 128 } }, align 4, !dbg !1332
@__devstate_dts_ord_79 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1305
@gpio_stm32_data_h = internal global %struct.gpio_stm32_data zeroinitializer, align 4, !dbg !1303
@__init___device_dts_ord_79 = internal constant %struct.init_entry { i32 (%struct.device*)* @gpio_stm32_init, %struct.device* @__device_dts_ord_79 }, section ".z_init_PRE_KERNEL_140_", align 4, !dbg !1261
@.str.8.107 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.31.113 = private unnamed_addr constant [12 x i8] c"cb->handler\00", align 1
@.str.32.109 = private unnamed_addr constant [53 x i8] c"ZEPHYR_BASE/include/zephyr/drivers/gpio/gpio_utils.h\00", align 1
@.str.33.112 = private unnamed_addr constant [23 x i8] c"\09No callback handler!\0A\00", align 1
@.str.34.108 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.35.110 = private unnamed_addr constant [15 x i8] c"\09No callback!\0A\00", align 1
@.str.36.111 = private unnamed_addr constant [18 x i8] c"callback->handler\00", align 1
@.str.124 = private unnamed_addr constant [11 x i8] c"uart_stm32\00", align 1
@log_const_uart_stm32 = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.124, i32 0, i32 0), i8 3 }, section ".log_const_uart_stm32", align 4, !dbg !1334
@__devicehdl_dts_ord_44 = dso_local constant [4 x i16] [i16 1, i16 -32768, i16 -32768, i16 32767], section ".__device_handles_pass2", align 2, !dbg !819
@.str.1.127 = private unnamed_addr constant [16 x i8] c"serial@40011000\00", align 1
@uart_stm32_cfg_0 = internal constant %struct.uart_stm32_config { %struct.USART_TypeDef* inttoptr (i32 1073811456 to %struct.USART_TypeDef*), %struct._thread_arch* getelementptr inbounds ([1 x %struct._thread_arch], [1 x %struct._thread_arch]* @pclken_0, i32 0, i32 0), i32 1, i8 0, i32 0, i8 0, i8 0, i8 0, i8 0, %struct.pinctrl_dev_config* @__pinctrl_dev_config__device_dts_ord_44 }, align 4, !dbg !1490
@uart_stm32_driver_api = internal constant %struct.uart_driver_api { i32 (%struct.device*, i8*)* @uart_stm32_poll_in, void (%struct.device*, i8)* @uart_stm32_poll_out, i32 (%struct.device*)* @uart_stm32_err_check, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_configure, i32 (%struct.device*, %struct.uart_config*)* @uart_stm32_config_get }, align 4, !dbg !1545
@__devstate_dts_ord_44 = internal global %struct.device_state zeroinitializer, section ".z_devstate", align 1, !dbg !1488
@uart_stm32_data_0 = internal global %struct.uart_stm32_data { i32 115200, %struct.device* null }, align 4, !dbg !1547
@__device_dts_ord_44 = dso_local constant %struct.device { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.127, i32 0, i32 0), i8* bitcast (%struct.uart_stm32_config* @uart_stm32_cfg_0 to i8*), i8* bitcast (%struct.uart_driver_api* @uart_stm32_driver_api to i8*), %struct.device_state* @__devstate_dts_ord_44, i8* bitcast (%struct.uart_stm32_data* @uart_stm32_data_0 to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_44, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_155_", align 4, !dbg !1479
@__init___device_dts_ord_44 = internal constant %struct.init_entry { i32 (%struct.device*)* @uart_stm32_init, %struct.device* @__device_dts_ord_44 }, section ".z_init_PRE_KERNEL_155_", align 4, !dbg !1481
@pclken_0 = internal constant [1 x %struct._thread_arch] [%struct._thread_arch { i32 68, i32 16 }], align 4, !dbg !1534
@__pinctrl_dev_config__device_dts_ord_44 = internal constant %struct.pinctrl_dev_config { %struct.pinctrl_state* getelementptr inbounds ([1 x %struct.pinctrl_state], [1 x %struct.pinctrl_state]* @__pinctrl_states__device_dts_ord_44, i32 0, i32 0), i8 1 }, align 4, !dbg !1537
@__pinctrl_states__device_dts_ord_44 = internal constant [1 x %struct.pinctrl_state] [%struct.pinctrl_state { %struct._thread_arch* getelementptr inbounds ([2 x %struct._thread_arch], [2 x %struct._thread_arch]* @__pinctrl_state_pins_0__device_dts_ord_44, i32 0, i32 0), i8 2, i8 0 }], align 4, !dbg !1539
@__pinctrl_state_pins_0__device_dts_ord_44 = internal constant [2 x %struct._thread_arch] [%struct._thread_arch { i32 295, i32 512 }, %struct._thread_arch { i32 327, i32 0 }], align 4, !dbg !1542
@.str.2.129 = private unnamed_addr constant [51 x i8] c"%c: Failed call clock_control_get_rate(pclken[0])\0A\00", align 1
@.str.3.130 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.4.131 = private unnamed_addr constant [28 x i8] c"((config->usart->BRR)) > 16\00", align 1
@.str.5.132 = private unnamed_addr constant [40 x i8] c"ZEPHYR_BASE/drivers/serial/uart_stm32.c\00", align 1
@.str.6.133 = private unnamed_addr constant [20 x i8] c"\09BaudRateReg >= 16\0A\00", align 1
@.str.7.136 = private unnamed_addr constant [36 x i8] c"%c: clock control device not ready\0A\00", align 1
@.str.8.138 = private unnamed_addr constant [37 x i8] c"%c: Could not enable (LP)UART clock\0A\00", align 1
@.str.9.139 = private unnamed_addr constant [55 x i8] c"%c: Invalid parity setting '%d'.Defaulting to 'none'.\0A\00", align 1
@__device_dts_ord_8 = dso_local constant %struct.device { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i32 0, i32 0), i8* null, i8* bitcast (%struct.clock_control_driver_api* @stm32_clock_control_api to i8*), %struct.device_state* @__devstate_dts_ord_8, i8* null, i16* getelementptr inbounds ([12 x i16], [12 x i16]* @__devicehdl_dts_ord_8, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_11_", align 4, !dbg !892
@switch.table.uart_stm32_init = private unnamed_addr constant [3 x i32] [i32 0, i32 1536, i32 1024], align 4
@switch.table.uart_stm32_init.10 = private unnamed_addr constant [3 x i32] [i32 0, i32 4096, i32 4096], align 4
@switch.table.uart_stm32_cfg2ll_stopbits = private unnamed_addr constant [3 x i32] [i32 4096, i32 0, i32 12288], align 4
@switch.table.uart_stm32_ll2cfg_stopbits = private unnamed_addr constant [4 x i32] [i32 1, i32 0, i32 3, i32 2], align 4
@overflow_cyc = internal global i32 0, align 4, !dbg !1558
@cycle_count = internal unnamed_addr global i32 0, align 4, !dbg !1667
@announced_cycles = internal unnamed_addr global i32 0, align 4, !dbg !1669
@last_load = internal unnamed_addr global i32 0, align 4, !dbg !1665
@lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !1660
@__init_sys_clock_driver_init = internal constant %struct.init_entry { i32 (%struct.device*)* @sys_clock_driver_init, %struct.device* null }, section ".z_init_PRE_KERNEL_20_", align 4, !dbg !1634
@.str.143 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.144 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.145 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.146 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.147 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.148 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@gpio_ports = internal unnamed_addr constant [11 x %struct.device*] [%struct.device* @__device_dts_ord_19, %struct.device* @__device_dts_ord_24, %struct.device* @__device_dts_ord_22, %struct.device* @__device_dts_ord_75, %struct.device* @__device_dts_ord_76, %struct.device* @__device_dts_ord_77, %struct.device* @__device_dts_ord_78, %struct.device* @__device_dts_ord_79, %struct.device* null, %struct.device* null, %struct.device* null], align 4, !dbg !1671
@__device_dts_ord_19 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.106, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_a to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_19, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_a to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_19, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1203
@__device_dts_ord_24 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1.114, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_b to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_24, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_b to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_24, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1217
@__device_dts_ord_22 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2.115, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_c to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_22, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_c to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_22, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1226
@__device_dts_ord_75 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.116, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_d to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_75, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_d to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_75, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1235
@__device_dts_ord_76 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.117, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_e to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_76, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_e to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_76, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1241
@__device_dts_ord_77 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5.118, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_f to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_77, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_f to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_77, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1247
@__device_dts_ord_78 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.119, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_g to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_78, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_g to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_78, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1253
@__device_dts_ord_79 = dso_local constant %struct.device { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7.120, i32 0, i32 0), i8* bitcast (%struct.gpio_stm32_config* @gpio_stm32_cfg_h to i8*), i8* bitcast (%struct.gpio_driver_api* @gpio_stm32_driver to i8*), %struct.device_state* @__devstate_dts_ord_79, i8* bitcast (%struct.gpio_stm32_data* @gpio_stm32_data_h to i8*), i16* getelementptr inbounds ([4 x i16], [4 x i16]* @__devicehdl_dts_ord_79, i32 0, i32 0) }, section ".z_device_PRE_KERNEL_140_", align 4, !dbg !1259
@uwTickPrio = external dso_local local_unnamed_addr global i32, align 4
@APBPrescTable = dso_local local_unnamed_addr constant [8 x i8] c"\00\00\00\00\01\02\03\04", align 1, !dbg !1761
@SystemCoreClock = dso_local local_unnamed_addr global i32 16000000, align 4, !dbg !1802
@AHBPrescTable = dso_local local_unnamed_addr constant [16 x i8] c"\00\00\00\00\00\00\00\00\01\02\03\04\06\07\08\09", align 1, !dbg !1805
@__device_start = external dso_local constant [0 x %struct.device], align 4
@__device_end = external dso_local constant [0 x %struct.device], align 4
@_k_neg_eagain = dso_local local_unnamed_addr constant i32 -11, align 4, !dbg !1812
@.str.180 = private unnamed_addr constant [20 x i8] c"%c: Halting system\0A\00", align 1
@.str.1.184 = private unnamed_addr constant [45 x i8] c"%c: >>> ZEPHYR FATAL ERROR %d: %s on CPU %d\0A\00", align 1
@.str.2.185 = private unnamed_addr constant [38 x i8] c"%c: Fault during interrupt handling\0A\0A\00", align 1
@.str.3.186 = private unnamed_addr constant [29 x i8] c"%c: Current thread: %p (%s)\0A\00", align 1
@.str.4.190 = private unnamed_addr constant [14 x i8] c"CPU exception\00", align 1
@.str.5.191 = private unnamed_addr constant [20 x i8] c"Unhandled interrupt\00", align 1
@.str.6.192 = private unnamed_addr constant [15 x i8] c"Stack overflow\00", align 1
@.str.7.193 = private unnamed_addr constant [12 x i8] c"Kernel oops\00", align 1
@.str.8.194 = private unnamed_addr constant [13 x i8] c"Kernel panic\00", align 1
@.str.9.189 = private unnamed_addr constant [14 x i8] c"Unknown error\00", align 1
@.str.10.188 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@switch.table.reason_to_str = private unnamed_addr constant [5 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.190, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5.191, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6.192, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7.193, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.194, i32 0, i32 0)], align 4
@.str.196 = private unnamed_addr constant [3 x i8] c"os\00", align 1
@log_const_os = dso_local constant %struct.log_source_const_data { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.196, i32 0, i32 0), i8 3 }, section ".log_const_os", align 4, !dbg !1819
@__bss_start = external dso_local global [0 x i8], align 1
@__bss_end = external dso_local global [0 x i8], align 1
@z_interrupt_stacks = dso_local global [1 x [2112 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.2", align 64, !dbg !2044
@z_main_stack = dso_local global [1088 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.0", align 64, !dbg !2032
@z_main_thread = dso_local global %struct.k_thread zeroinitializer, align 8, !dbg !2039
@z_idle_stacks = internal global [1 x [384 x %struct.z_thread_stack_element]] zeroinitializer, section ".noinit.\22ZEPHYR_BASE/kernel/init.c\22.1", align 64, !dbg !2051
@.str.5.202 = private unnamed_addr constant [5 x i8] c"idle\00", align 1
@z_sys_init_run_level.levels = internal unnamed_addr constant [6 x %struct.init_entry*] [%struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_EARLY_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_1_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_PRE_KERNEL_2_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_POST_KERNEL_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_APPLICATION_start, i32 0, i32 0), %struct.init_entry* getelementptr inbounds ([0 x %struct.init_entry], [0 x %struct.init_entry]* @__init_end, i32 0, i32 0)], align 4, !dbg !2056
@__init_EARLY_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_1_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_PRE_KERNEL_2_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_POST_KERNEL_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_APPLICATION_start = external dso_local constant [0 x %struct.init_entry], align 4
@__init_end = external dso_local constant [0 x %struct.init_entry], align 4
@.str.6.206 = private unnamed_addr constant [5 x i8] c"main\00", align 1
@k_thread_state_str.states_str = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.212, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2.213, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.214, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4.215, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5.216, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.210, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.217, i32 0, i32 0)], align 4, !dbg !2084
@.str.211 = private unnamed_addr constant [6 x i8] c"dummy\00", align 1
@.str.1.212 = private unnamed_addr constant [8 x i8] c"pending\00", align 1
@.str.2.213 = private unnamed_addr constant [9 x i8] c"prestart\00", align 1
@.str.3.214 = private unnamed_addr constant [5 x i8] c"dead\00", align 1
@.str.4.215 = private unnamed_addr constant [10 x i8] c"suspended\00", align 1
@.str.5.216 = private unnamed_addr constant [9 x i8] c"aborting\00", align 1
@.str.6.210 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7.217 = private unnamed_addr constant [7 x i8] c"queued\00", align 1
@k_thread_state_str.states_sz = internal unnamed_addr constant [8 x i32] [i32 5, i32 7, i32 8, i32 4, i32 9, i32 8, i32 0, i32 6], align 4, !dbg !2199
@.str.8.209 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.9.220 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.10.221 = private unnamed_addr constant [128 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((entry))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.11.222 = private unnamed_addr constant [28 x i8] c"ZEPHYR_BASE/kernel/thread.c\00", align 1
@.str.12.223 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.13.227 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.14.228 = private unnamed_addr constant [37 x i8] c"\09Threads may not be created in ISRs\0A\00", align 1
@__static_thread_data_list_start = external dso_local global [0 x %struct._static_thread_data], align 4
@__static_thread_data_list_end = external dso_local global [0 x %struct._static_thread_data], align 4
@.str.15.231 = private unnamed_addr constant [45 x i8] c"thread_data <= __static_thread_data_list_end\00", align 1
@.str.16.232 = private unnamed_addr constant [31 x i8] c"\09unexpected list end location\0A\00", align 1
@.str.242 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.243 = private unnamed_addr constant [40 x i8] c"_kernel.cpus[0].current->base.prio >= 0\00", align 1
@.str.2.244 = private unnamed_addr constant [26 x i8] c"ZEPHYR_BASE/kernel/idle.c\00", align 1
@.str.249 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.250 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.2.251 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/mutex.c\00", align 1
@.str.3.252 = private unnamed_addr constant [37 x i8] c"\09mutexes cannot be used inside ISRs\0A\00", align 1
@lock.253 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2212
@.str.4.261 = private unnamed_addr constant [23 x i8] c"mutex->lock_count > 0U\00", align 1
@.str.5.254 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.6.255 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.7.256 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.8.257 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.9.258 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@sched_spinlock = dso_local global %struct.k_spinlock zeroinitializer, align 4, !dbg !2323
@slice_ticks = internal unnamed_addr global i32 0, align 4, !dbg !2434
@slice_max_prio = internal unnamed_addr global i32 0, align 4, !dbg !2437
@pending_current = internal unnamed_addr global %struct.k_thread* null, align 4, !dbg !2439
@.str.262 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.284 = private unnamed_addr constant [61 x i8] c"thread == _kernel.cpus[0].current || is_thread_dummy(thread)\00", align 1
@.str.2.269 = private unnamed_addr constant [27 x i8] c"ZEPHYR_BASE/kernel/sched.c\00", align 1
@.str.3.291 = private unnamed_addr constant [55 x i8] c"sizeof(sched_spinlock) == 0 || lock != &sched_spinlock\00", align 1
@.str.4.303 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 0U\00", align 1
@.str.5.272 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@.str.6.298 = private unnamed_addr constant [18 x i8] c"!arch_is_in_isr()\00", align 1
@.str.7.268 = private unnamed_addr constant [33 x i8] c"!z_is_idle_thread_object(thread)\00", align 1
@.str.8.308 = private unnamed_addr constant [134 x i8] c"((((prio)) == 15 && z_is_idle_thread_entry((((void *)0)))) || (((15 - 1) >= ((-16))) && ((prio)) >= ((-16)) && ((prio)) <= (15 - 1)))\00", align 1
@.str.9.309 = private unnamed_addr constant [49 x i8] c"\09invalid priority (%d); allowed range: %d to %d\0A\00", align 1
@.str.10.317 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.11.318 = private unnamed_addr constant [31 x i8] c"\09aborting essential thread %p\0A\00", align 1
@.str.12.319 = private unnamed_addr constant [34 x i8] c"\09aborted _current back from dead\0A\00", align 1
@.str.13.320 = private unnamed_addr constant [21 x i8] c"\09cannot join in ISR\0A\00", align 1
@.str.14.263 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.15.264 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.16.265 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.17.266 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.18.267 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.19.271 = private unnamed_addr constant [39 x i8] c"_kernel.cpus[0].current != ((void *)0)\00", align 1
@.str.20.288 = private unnamed_addr constant [23 x i8] c"thread->base.pended_on\00", align 1
@.str.21.299 = private unnamed_addr constant [36 x i8] c"ZEPHYR_BASE/kernel/include/ksched.h\00", align 1
@.str.22.300 = private unnamed_addr constant [49 x i8] c"_kernel.cpus[0].current->base.sched_locked != 1U\00", align 1
@z_idle_threads = dso_local global [1 x %struct.k_thread] zeroinitializer, align 8, !dbg !2041
@z_sys_post_kernel = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2049
@.str.23.312 = private unnamed_addr constant [64 x i8] c"!z_is_thread_state_set(_kernel.cpus[0].current, ((1UL << (4))))\00", align 1
@lock.325 = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2441
@.str.326 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.327 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.2.328 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.3.329 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.4.330 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.5.331 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@__data_region_start = external dso_local global [0 x i8], align 1
@__data_region_load_start = external dso_local global [0 x i8], align 1
@__data_region_end = external dso_local global [0 x i8], align 1
@__ramfunc_start = external dso_local global [0 x i8], align 1
@__ramfunc_load_start = external dso_local global [0 x i8], align 1
@__ramfunc_size = external dso_local global [0 x i8], align 1
@.str.341 = private unnamed_addr constant [29 x i8] c"ASSERTION FAIL [%s] @ %s:%d\0A\00", align 1
@.str.1.342 = private unnamed_addr constant [32 x i8] c"!sys_dnode_is_linked(&to->node)\00", align 1
@.str.2.343 = private unnamed_addr constant [29 x i8] c"ZEPHYR_BASE/kernel/timeout.c\00", align 1
@.str.3.344 = private unnamed_addr constant [3 x i8] c"\09\0A\00", align 1
@timeout_lock = internal global %struct.k_spinlock zeroinitializer, align 4, !dbg !2466
@curr_tick = internal unnamed_addr global i64 0, align 8, !dbg !2496
@timeout_list = internal global %struct._dnode { %union.anon.0 { %struct._dnode* @timeout_list }, %union.anon.0 { %struct._dnode* @timeout_list } }, align 4, !dbg !2501
@_kernel = dso_local global %struct.z_kernel zeroinitializer, align 4, !dbg !1906
@announce_remaining = internal unnamed_addr global i32 0, align 4, !dbg !2499
@.str.4.345 = private unnamed_addr constant [21 x i8] c"z_spin_lock_valid(l)\00", align 1
@.str.5.346 = private unnamed_addr constant [38 x i8] c"ZEPHYR_BASE/include/zephyr/spinlock.h\00", align 1
@.str.6.347 = private unnamed_addr constant [24 x i8] c"\09Recursive spinlock %p\0A\00", align 1
@.str.7.351 = private unnamed_addr constant [23 x i8] c"z_spin_unlock_valid(l)\00", align 1
@.str.8.352 = private unnamed_addr constant [21 x i8] c"\09Not my spinlock %p\0A\00", align 1
@.str.370 = private unnamed_addr constant [66 x i8] c"*** Booting Zephyr OS build zephyr-v3.2.0-2126-gffed8388e7cb ***\0A\00", align 1

; Function Attrs: optsize
declare dso_local void @_isr_wrapper() #0

; Function Attrs: noinline nounwind optsize
define dso_local void @_OffsetAbsSyms() local_unnamed_addr #1 !dbg !3087 {
  tail call void asm sideeffect ".globl\09___cpu_t_current_OFFSET\0A\09.equ\09___cpu_t_current_OFFSET,${0:B}\0A\09.type\09___cpu_t_current_OFFSET,%object", "n"(i32 -9) #23, !dbg !3091, !srcloc !3092
  tail call void asm sideeffect ".globl\09___cpu_t_nested_OFFSET\0A\09.equ\09___cpu_t_nested_OFFSET,${0:B}\0A\09.type\09___cpu_t_nested_OFFSET,%object", "n"(i32 -1) #23, !dbg !3093, !srcloc !3094
  tail call void asm sideeffect ".globl\09___cpu_t_irq_stack_OFFSET\0A\09.equ\09___cpu_t_irq_stack_OFFSET,${0:B}\0A\09.type\09___cpu_t_irq_stack_OFFSET,%object", "n"(i32 -5) #23, !dbg !3095, !srcloc !3096
  tail call void asm sideeffect ".globl\09___cpu_t_arch_OFFSET\0A\09.equ\09___cpu_t_arch_OFFSET,${0:B}\0A\09.type\09___cpu_t_arch_OFFSET,%object", "n"(i32 -22) #23, !dbg !3097, !srcloc !3098
  tail call void asm sideeffect ".globl\09___cpu_t_SIZEOF\0A\09.equ\09___cpu_t_SIZEOF,${0:B}\0A\09.type\09___cpu_t_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3099, !srcloc !3100
  tail call void asm sideeffect ".globl\09___kernel_t_cpus_OFFSET\0A\09.equ\09___kernel_t_cpus_OFFSET,${0:B}\0A\09.type\09___kernel_t_cpus_OFFSET,%object", "n"(i32 -1) #23, !dbg !3101, !srcloc !3102
  tail call void asm sideeffect ".globl\09___kernel_t_ready_q_OFFSET\0A\09.equ\09___kernel_t_ready_q_OFFSET,${0:B}\0A\09.type\09___kernel_t_ready_q_OFFSET,%object", "n"(i32 -25) #23, !dbg !3103, !srcloc !3104
  tail call void asm sideeffect ".globl\09___ready_q_t_cache_OFFSET\0A\09.equ\09___ready_q_t_cache_OFFSET,${0:B}\0A\09.type\09___ready_q_t_cache_OFFSET,%object", "n"(i32 -1) #23, !dbg !3105, !srcloc !3106
  tail call void asm sideeffect ".globl\09_STRUCT_KERNEL_SIZE\0A\09.equ\09_STRUCT_KERNEL_SIZE,${0:B}\0A\09.type\09_STRUCT_KERNEL_SIZE,%object", "n"(i32 -37) #23, !dbg !3107, !srcloc !3108
  tail call void asm sideeffect ".globl\09___thread_base_t_user_options_OFFSET\0A\09.equ\09___thread_base_t_user_options_OFFSET,${0:B}\0A\09.type\09___thread_base_t_user_options_OFFSET,%object", "n"(i32 -13) #23, !dbg !3109, !srcloc !3110
  tail call void asm sideeffect ".globl\09___thread_base_t_thread_state_OFFSET\0A\09.equ\09___thread_base_t_thread_state_OFFSET,${0:B}\0A\09.type\09___thread_base_t_thread_state_OFFSET,%object", "n"(i32 -14) #23, !dbg !3111, !srcloc !3112
  tail call void asm sideeffect ".globl\09___thread_base_t_prio_OFFSET\0A\09.equ\09___thread_base_t_prio_OFFSET,${0:B}\0A\09.type\09___thread_base_t_prio_OFFSET,%object", "n"(i32 -15) #23, !dbg !3113, !srcloc !3114
  tail call void asm sideeffect ".globl\09___thread_base_t_sched_locked_OFFSET\0A\09.equ\09___thread_base_t_sched_locked_OFFSET,${0:B}\0A\09.type\09___thread_base_t_sched_locked_OFFSET,%object", "n"(i32 -16) #23, !dbg !3115, !srcloc !3116
  tail call void asm sideeffect ".globl\09___thread_base_t_preempt_OFFSET\0A\09.equ\09___thread_base_t_preempt_OFFSET,${0:B}\0A\09.type\09___thread_base_t_preempt_OFFSET,%object", "n"(i32 -15) #23, !dbg !3117, !srcloc !3118
  tail call void asm sideeffect ".globl\09___thread_base_t_swap_data_OFFSET\0A\09.equ\09___thread_base_t_swap_data_OFFSET,${0:B}\0A\09.type\09___thread_base_t_swap_data_OFFSET,%object", "n"(i32 -21) #23, !dbg !3119, !srcloc !3120
  tail call void asm sideeffect ".globl\09___thread_t_base_OFFSET\0A\09.equ\09___thread_t_base_OFFSET,${0:B}\0A\09.type\09___thread_t_base_OFFSET,%object", "n"(i32 -1) #23, !dbg !3121, !srcloc !3122
  tail call void asm sideeffect ".globl\09___thread_t_callee_saved_OFFSET\0A\09.equ\09___thread_t_callee_saved_OFFSET,${0:B}\0A\09.type\09___thread_t_callee_saved_OFFSET,%object", "n"(i32 -49) #23, !dbg !3123, !srcloc !3124
  tail call void asm sideeffect ".globl\09___thread_t_arch_OFFSET\0A\09.equ\09___thread_t_arch_OFFSET,${0:B}\0A\09.type\09___thread_t_arch_OFFSET,%object", "n"(i32 -149) #23, !dbg !3125, !srcloc !3126
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3127, !srcloc !3128
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_size_OFFSET\0A\09.equ\09___thread_stack_info_t_size_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_size_OFFSET,%object", "n"(i32 -5) #23, !dbg !3129, !srcloc !3130
  tail call void asm sideeffect ".globl\09___thread_t_stack_info_OFFSET\0A\09.equ\09___thread_t_stack_info_OFFSET,${0:B}\0A\09.type\09___thread_t_stack_info_OFFSET,%object", "n"(i32 -133) #23, !dbg !3131, !srcloc !3132
  tail call void asm sideeffect ".globl\09K_THREAD_SIZEOF\0A\09.equ\09K_THREAD_SIZEOF,${0:B}\0A\09.type\09K_THREAD_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3133, !srcloc !3134
  tail call void asm sideeffect ".globl\09__z_interrupt_stack_SIZEOF\0A\09.equ\09__z_interrupt_stack_SIZEOF,${0:B}\0A\09.type\09__z_interrupt_stack_SIZEOF,%object", "n"(i32 -2113) #23, !dbg !3135, !srcloc !3136
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_SIZEOF\0A\09.equ\09_DEVICE_STRUCT_SIZEOF,${0:B}\0A\09.type\09_DEVICE_STRUCT_SIZEOF,%object", "n"(i32 -25) #23, !dbg !3137, !srcloc !3138
  tail call void asm sideeffect ".globl\09_DEVICE_STRUCT_HANDLES_OFFSET\0A\09.equ\09_DEVICE_STRUCT_HANDLES_OFFSET,${0:B}\0A\09.type\09_DEVICE_STRUCT_HANDLES_OFFSET,%object", "n"(i32 -21) #23, !dbg !3139, !srcloc !3140
  tail call void asm sideeffect ".globl\09_PM_DEVICE_STRUCT_FLAGS_OFFSET\0A\09.equ\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,${0:B}\0A\09.type\09_PM_DEVICE_STRUCT_FLAGS_OFFSET,%object", "n"(i32 -1) #23, !dbg !3141, !srcloc !3142
  tail call void asm sideeffect ".globl\09_PM_DEVICE_FLAG_PD\0A\09.equ\09_PM_DEVICE_FLAG_PD,${0:B}\0A\09.type\09_PM_DEVICE_FLAG_PD,%object", "n"(i32 -7) #23, !dbg !3143, !srcloc !3144
  tail call void asm sideeffect ".globl\09___thread_arch_t_basepri_OFFSET\0A\09.equ\09___thread_arch_t_basepri_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_basepri_OFFSET,%object", "n"(i32 -1) #23, !dbg !3145, !srcloc !3148
  tail call void asm sideeffect ".globl\09___thread_arch_t_swap_return_value_OFFSET\0A\09.equ\09___thread_arch_t_swap_return_value_OFFSET,${0:B}\0A\09.type\09___thread_arch_t_swap_return_value_OFFSET,%object", "n"(i32 -5) #23, !dbg !3149, !srcloc !3150
  tail call void asm sideeffect ".globl\09___basic_sf_t_a1_OFFSET\0A\09.equ\09___basic_sf_t_a1_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3151, !srcloc !3152
  tail call void asm sideeffect ".globl\09___basic_sf_t_a2_OFFSET\0A\09.equ\09___basic_sf_t_a2_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3153, !srcloc !3154
  tail call void asm sideeffect ".globl\09___basic_sf_t_a3_OFFSET\0A\09.equ\09___basic_sf_t_a3_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3155, !srcloc !3156
  tail call void asm sideeffect ".globl\09___basic_sf_t_a4_OFFSET\0A\09.equ\09___basic_sf_t_a4_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_a4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3157, !srcloc !3158
  tail call void asm sideeffect ".globl\09___basic_sf_t_ip_OFFSET\0A\09.equ\09___basic_sf_t_ip_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_ip_OFFSET,%object", "n"(i32 -17) #23, !dbg !3159, !srcloc !3160
  tail call void asm sideeffect ".globl\09___basic_sf_t_lr_OFFSET\0A\09.equ\09___basic_sf_t_lr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_lr_OFFSET,%object", "n"(i32 -21) #23, !dbg !3161, !srcloc !3162
  tail call void asm sideeffect ".globl\09___basic_sf_t_pc_OFFSET\0A\09.equ\09___basic_sf_t_pc_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_pc_OFFSET,%object", "n"(i32 -25) #23, !dbg !3163, !srcloc !3164
  tail call void asm sideeffect ".globl\09___basic_sf_t_xpsr_OFFSET\0A\09.equ\09___basic_sf_t_xpsr_OFFSET,${0:B}\0A\09.type\09___basic_sf_t_xpsr_OFFSET,%object", "n"(i32 -29) #23, !dbg !3165, !srcloc !3166
  tail call void asm sideeffect ".globl\09___basic_sf_t_SIZEOF\0A\09.equ\09___basic_sf_t_SIZEOF,${0:B}\0A\09.type\09___basic_sf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3167, !srcloc !3168
  tail call void asm sideeffect ".globl\09___esf_t_SIZEOF\0A\09.equ\09___esf_t_SIZEOF,${0:B}\0A\09.type\09___esf_t_SIZEOF,%object", "n"(i32 -33) #23, !dbg !3169, !srcloc !3170
  tail call void asm sideeffect ".globl\09___callee_saved_t_v1_OFFSET\0A\09.equ\09___callee_saved_t_v1_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v1_OFFSET,%object", "n"(i32 -1) #23, !dbg !3171, !srcloc !3172
  tail call void asm sideeffect ".globl\09___callee_saved_t_v2_OFFSET\0A\09.equ\09___callee_saved_t_v2_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v2_OFFSET,%object", "n"(i32 -5) #23, !dbg !3173, !srcloc !3174
  tail call void asm sideeffect ".globl\09___callee_saved_t_v3_OFFSET\0A\09.equ\09___callee_saved_t_v3_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v3_OFFSET,%object", "n"(i32 -9) #23, !dbg !3175, !srcloc !3176
  tail call void asm sideeffect ".globl\09___callee_saved_t_v4_OFFSET\0A\09.equ\09___callee_saved_t_v4_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v4_OFFSET,%object", "n"(i32 -13) #23, !dbg !3177, !srcloc !3178
  tail call void asm sideeffect ".globl\09___callee_saved_t_v5_OFFSET\0A\09.equ\09___callee_saved_t_v5_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v5_OFFSET,%object", "n"(i32 -17) #23, !dbg !3179, !srcloc !3180
  tail call void asm sideeffect ".globl\09___callee_saved_t_v6_OFFSET\0A\09.equ\09___callee_saved_t_v6_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v6_OFFSET,%object", "n"(i32 -21) #23, !dbg !3181, !srcloc !3182
  tail call void asm sideeffect ".globl\09___callee_saved_t_v7_OFFSET\0A\09.equ\09___callee_saved_t_v7_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v7_OFFSET,%object", "n"(i32 -25) #23, !dbg !3183, !srcloc !3184
  tail call void asm sideeffect ".globl\09___callee_saved_t_v8_OFFSET\0A\09.equ\09___callee_saved_t_v8_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_v8_OFFSET,%object", "n"(i32 -29) #23, !dbg !3185, !srcloc !3186
  tail call void asm sideeffect ".globl\09___callee_saved_t_psp_OFFSET\0A\09.equ\09___callee_saved_t_psp_OFFSET,${0:B}\0A\09.type\09___callee_saved_t_psp_OFFSET,%object", "n"(i32 -33) #23, !dbg !3187, !srcloc !3188
  tail call void asm sideeffect ".globl\09___callee_saved_t_SIZEOF\0A\09.equ\09___callee_saved_t_SIZEOF,${0:B}\0A\09.type\09___callee_saved_t_SIZEOF,%object", "n"(i32 -37) #23, !dbg !3189, !srcloc !3190
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_start_OFFSET\0A\09.equ\09___thread_stack_info_t_start_OFFSET,${0:B}\0A\09.type\09___thread_stack_info_t_start_OFFSET,%object", "n"(i32 -1) #23, !dbg !3191, !srcloc !3192
  tail call void asm sideeffect ".globl\09___thread_stack_info_t_SIZEOF\0A\09.equ\09___thread_stack_info_t_SIZEOF,${0:B}\0A\09.type\09___thread_stack_info_t_SIZEOF,%object", "n"(i32 -13) #23, !dbg !3193, !srcloc !3194
  tail call void asm sideeffect ".globl\09_K_THREAD_NO_FLOAT_SIZEOF\0A\09.equ\09_K_THREAD_NO_FLOAT_SIZEOF,${0:B}\0A\09.type\09_K_THREAD_NO_FLOAT_SIZEOF,%object", "n"(i32 -161) #23, !dbg !3195, !srcloc !3196
  ret void, !dbg !3197
}

; Function Attrs: noinline nounwind optsize
define dso_local void @worker_thread(i8* noundef %0, i8* nocapture readnone %1, i8* nocapture readnone %2) #1 !dbg !3200 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3204, metadata !DIExpression()), !dbg !3211
  call void @llvm.dbg.value(metadata i8* undef, metadata !3205, metadata !DIExpression()), !dbg !3211
  call void @llvm.dbg.value(metadata i8* undef, metadata !3206, metadata !DIExpression()), !dbg !3211
  %4 = ptrtoint i8* %0 to i32, !dbg !3212
  call void @llvm.dbg.value(metadata i32 %4, metadata !3207, metadata !DIExpression()), !dbg !3211
  call void @llvm.dbg.value(metadata i32 5, metadata !3208, metadata !DIExpression()), !dbg !3211
  call void @llvm.dbg.value(metadata i32 0, metadata !3209, metadata !DIExpression()), !dbg !3213
  br label %8, !dbg !3214

5:                                                ; preds = %8
  tail call fastcc void @k_mutex_lock() #24, !dbg !3215
  %6 = load i32, i32* @done, align 4, !dbg !3216
  %7 = add nsw i32 %6, 1, !dbg !3216
  store i32 %7, i32* @done, align 4, !dbg !3216
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i32 0, i32 0), i32 noundef %4, i32 noundef %7) #25, !dbg !3217
  tail call fastcc void @k_condvar_signal() #24, !dbg !3218
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3219
  ret void, !dbg !3220

8:                                                ; preds = %3, %8
  %9 = phi i32 [ 0, %3 ], [ %12, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3209, metadata !DIExpression()), !dbg !3213
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i32 0, i32 0), i32 noundef %4, i32 noundef %9, i32 noundef 5) #25, !dbg !3221
  %10 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 500) #24, !dbg !3224
  %11 = insertvalue [1 x i64] poison, i64 %10, 0, !dbg !3225
  tail call fastcc void @k_sleep([1 x i64] %11) #24, !dbg !3225
  %12 = add nuw nsw i32 %9, 1, !dbg !3226
  call void @llvm.dbg.value(metadata i32 %12, metadata !3209, metadata !DIExpression()), !dbg !3213
  %13 = icmp eq i32 %12, 5, !dbg !3227
  br i1 %13, label %5, label %8, !dbg !3214, !llvm.loop !3228
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #2

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock() unnamed_addr #1 !dbg !3230 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3241, metadata !DIExpression()), !dbg !3242
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3240, metadata !DIExpression()), !dbg !3242
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3243, !srcloc !3245
  %1 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3246
  ret void, !dbg !3247
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_signal() unnamed_addr #1 !dbg !3248 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3253, metadata !DIExpression()), !dbg !3254
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3255, !srcloc !3257
  %1 = tail call i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef nonnull @condvar) #25, !dbg !3258
  ret void, !dbg !3259
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock() unnamed_addr #1 !dbg !3260 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3264, metadata !DIExpression()), !dbg !3265
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3266, !srcloc !3268
  %1 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef nonnull @mutex) #25, !dbg !3269
  ret void, !dbg !3270
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !3271 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !3276, metadata !DIExpression()), !dbg !3277
  call void @llvm.dbg.value(metadata i64 %0, metadata !3278, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i32 1000, metadata !3283, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i32 10000, metadata !3284, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i8 1, metadata !3285, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i8 0, metadata !3286, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i8 1, metadata !3287, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i8 0, metadata !3288, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i8 1, metadata !3289, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i8 0, metadata !3290, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i64 0, metadata !3291, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.value(metadata i64 0, metadata !3291, metadata !DIExpression()), !dbg !3295
  %2 = mul i64 %0, 10, !dbg !3297
  ret i64 %2, !dbg !3303
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_sleep([1 x i64] %0) unnamed_addr #1 !dbg !3304 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3308, metadata !DIExpression()), !dbg !3309
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3310, !srcloc !3312
  %2 = tail call i32 @z_impl_k_sleep([1 x i64] %0) #25, !dbg !3313
  ret void, !dbg !3314
}

; Function Attrs: noinline nounwind optsize
define dso_local void @main() local_unnamed_addr #1 !dbg !3315 {
  store i32 0, i32* @done, align 4, !dbg !3322
  call void @llvm.dbg.value(metadata i32 0, metadata !3320, metadata !DIExpression()), !dbg !3323
  br label %6, !dbg !3324

1:                                                ; preds = %6
  %2 = tail call fastcc i64 @k_ms_to_ticks_ceil64(i64 noundef 1000) #24, !dbg !3325
  %3 = insertvalue [1 x i64] poison, i64 %2, 0, !dbg !3326
  tail call fastcc void @k_sleep([1 x i64] %3) #24, !dbg !3326
  tail call fastcc void @k_mutex_lock() #24, !dbg !3327
  %4 = load i32, i32* @done, align 4, !dbg !3328
  %5 = icmp slt i32 %4, 20, !dbg !3329
  br i1 %5, label %14, label %18, !dbg !3330

6:                                                ; preds = %0, %6
  %7 = phi i32 [ 0, %0 ], [ %12, %6 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !3320, metadata !DIExpression()), !dbg !3323
  %8 = getelementptr inbounds [20 x %struct.k_thread], [20 x %struct.k_thread]* @t, i32 0, i32 %7, !dbg !3331
  %9 = getelementptr inbounds [20 x [1088 x %struct.z_thread_stack_element]], [20 x [1088 x %struct.z_thread_stack_element]]* @tstacks, i32 0, i32 %7, i32 0, !dbg !3334
  %10 = inttoptr i32 %7 to i8*, !dbg !3335
  %11 = tail call fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef nonnull %8, %struct.z_thread_stack_element* noundef nonnull %9, i8* noundef %10) #24, !dbg !3336
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !3317, metadata !DIExpression()), !dbg !3337
  %12 = add nuw nsw i32 %7, 1, !dbg !3338
  call void @llvm.dbg.value(metadata i32 %12, metadata !3320, metadata !DIExpression()), !dbg !3323
  %13 = icmp eq i32 %12, 20, !dbg !3339
  br i1 %13, label %1, label %6, !dbg !3324, !llvm.loop !3340

14:                                               ; preds = %1, %14
  %15 = phi i32 [ %16, %14 ], [ %4, %1 ]
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef %15, i32 noundef 20) #25, !dbg !3342
  tail call fastcc void @k_condvar_wait() #24, !dbg !3344
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0)) #25, !dbg !3345
  %16 = load i32, i32* @done, align 4, !dbg !3328
  %17 = icmp slt i32 %16, 20, !dbg !3329
  br i1 %17, label %14, label %18, !dbg !3330, !llvm.loop !3346

18:                                               ; preds = %14, %1
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @__func__.main, i32 0, i32 0), i32 noundef 20) #25, !dbg !3348
  tail call fastcc void @k_mutex_unlock() #24, !dbg !3349
  ret void, !dbg !3350
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.k_thread* @k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %2) unnamed_addr #1 !dbg !3351 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3369, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !3360, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !3361, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata i32 1024, metadata !3362, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* @worker_thread, metadata !3363, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata i8* %2, metadata !3364, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata i8* null, metadata !3365, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata i8* null, metadata !3366, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata i32 10, metadata !3367, metadata !DIExpression()), !dbg !3370
  call void @llvm.dbg.value(metadata i32 0, metadata !3368, metadata !DIExpression()), !dbg !3370
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3371, !srcloc !3373
  %4 = tail call %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @worker_thread, i8* noundef %2, i8* noundef null, i8* noundef null, i32 noundef 10, i32 noundef 0, [1 x i64] zeroinitializer) #25, !dbg !3374
  ret %struct.k_thread* %4, !dbg !3375
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_condvar_wait() unnamed_addr #1 !dbg !3376 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !3382, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.value(metadata %struct.k_condvar* @condvar, metadata !3380, metadata !DIExpression()), !dbg !3383
  call void @llvm.dbg.value(metadata %struct.k_mutex* @mutex, metadata !3381, metadata !DIExpression()), !dbg !3383
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !3384, !srcloc !3386
  %1 = tail call i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef nonnull @condvar, %struct.k_mutex* noundef nonnull @mutex, [1 x i64] [i64 -1]) #25, !dbg !3387
  ret void, !dbg !3388
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %4) local_unnamed_addr #1 !dbg !3389 {
  %6 = alloca [16 x i8], align 1
  %7 = alloca [16 x i8], align 1
  %8 = extractvalue [1 x i32] %4, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %0, metadata !3400, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %1, metadata !3401, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %2, metadata !3402, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %3, metadata !3403, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %0, metadata !3405, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %0, metadata !3406, metadata !DIExpression()), !dbg !3467
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 0, !dbg !3468
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3468
  call void @llvm.dbg.declare(metadata [16 x i8]* %6, metadata !3409, metadata !DIExpression()), !dbg !3469
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !3470
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3470
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !3411, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 0, metadata !3412, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 0, metadata !3413, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 0, metadata !3414, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 -1, metadata !3415, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 0, metadata !3418, metadata !DIExpression()), !dbg !3467
  %12 = and i32 %2, 4, !dbg !3472
  %13 = icmp eq i32 %12, 0, !dbg !3473
  call void @llvm.dbg.value(metadata i1 %13, metadata !3419, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3467
  %14 = lshr i32 %2, 3, !dbg !3474
  %15 = and i32 %14, 7, !dbg !3474
  %16 = add nuw nsw i32 %15, 1, !dbg !3475
  call void @llvm.dbg.value(metadata i32 %16, metadata !3420, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 0, metadata !3421, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %0, metadata !3422, metadata !DIExpression()), !dbg !3467
  %17 = ptrtoint i8* %0 to i32, !dbg !3476
  %18 = and i32 %17, 3, !dbg !3478
  %19 = icmp eq i32 %18, 0, !dbg !3478
  br i1 %19, label %20, label %320, !dbg !3479

20:                                               ; preds = %5
  %21 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !3480
  call void @llvm.dbg.value(metadata i8* %21, metadata !3406, metadata !DIExpression()), !dbg !3467
  %22 = icmp eq i8* %0, null, !dbg !3481
  %23 = and i32 %1, 7, !dbg !3483
  %24 = sub nuw nsw i32 8, %23, !dbg !3483
  %25 = select i1 %22, i32 %23, i32 0, !dbg !3483
  %26 = getelementptr i8, i8* %21, i32 %25, !dbg !3483
  %27 = select i1 %22, i32 %24, i32 %1, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %27, metadata !3401, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %26, metadata !3406, metadata !DIExpression()), !dbg !3467
  br i1 %22, label %33, label %28, !dbg !3484

28:                                               ; preds = %20
  %29 = ptrtoint i8* %26 to i32, !dbg !3486
  %30 = sub i32 4, %17, !dbg !3486
  %31 = add i32 %30, %29, !dbg !3487
  %32 = icmp ugt i32 %31, %27, !dbg !3488
  br i1 %32, label %320, label %33, !dbg !3489

33:                                               ; preds = %28, %20
  %34 = getelementptr inbounds i8, i8* %3, i32 -1, !dbg !3490
  call void @llvm.dbg.value(metadata i8* %34, metadata !3403, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %3, metadata !3417, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 4, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 4, metadata !3407, metadata !DIExpression()), !dbg !3467
  %35 = and i32 %2, 2
  %36 = icmp ne i32 %35, 0
  %37 = sub i32 8, %17
  br label %130, !dbg !3491

38:                                               ; preds = %63, %219
  %39 = phi i8 [ %224, %219 ], [ %64, %63 ]
  %40 = phi i8* [ %223, %219 ], [ %65, %63 ]
  %41 = phi i8* [ %221, %219 ], [ %66, %63 ]
  %42 = phi i8* [ %40, %219 ], [ %67, %63 ]
  %43 = phi i8* [ %222, %219 ], [ %68, %63 ]
  %44 = phi i32 [ %113, %219 ], [ %69, %63 ]
  %45 = phi i32 [ %112, %219 ], [ %70, %63 ]
  %46 = phi i1 [ %110, %219 ], [ %71, %63 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %42, metadata !3403, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %43, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %44, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %45, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %72, metadata !3415, metadata !DIExpression()), !dbg !3467
  br i1 %46, label %73, label %47, !dbg !3492

47:                                               ; preds = %38
  %48 = icmp eq i8 %39, 37, !dbg !3493
  %49 = zext i1 %48 to i32, !dbg !3497
  %50 = add nsw i32 %72, %49, !dbg !3497
  %51 = select i1 %48, i32 4, i32 %45, !dbg !3497
  %52 = select i1 %48, i32 4, i32 %44, !dbg !3497
  call void @llvm.dbg.value(metadata i32 %52, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %51, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3418, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %50, metadata !3415, metadata !DIExpression()), !dbg !3467
  br label %53, !dbg !3498

53:                                               ; preds = %73, %47, %74, %76, %77, %78, %106, %104
  %54 = phi i32 [ %72, %106 ], [ %72, %104 ], [ %72, %78 ], [ %72, %77 ], [ %72, %76 ], [ %75, %74 ], [ %50, %47 ], [ %72, %73 ]
  %55 = phi i1 [ false, %106 ], [ false, %104 ], [ true, %78 ], [ true, %77 ], [ true, %76 ], [ false, %74 ], [ %48, %47 ], [ true, %73 ]
  %56 = phi i32 [ %45, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %45, %76 ], [ %45, %74 ], [ %51, %47 ], [ 8, %73 ]
  %57 = phi i32 [ %44, %106 ], [ 8, %104 ], [ 4, %78 ], [ 4, %77 ], [ %44, %76 ], [ %44, %74 ], [ %52, %47 ], [ 8, %73 ]
  %58 = phi i8* [ %43, %106 ], [ %105, %104 ], [ %43, %78 ], [ %43, %77 ], [ %43, %76 ], [ %43, %74 ], [ %43, %47 ], [ %43, %73 ]
  %59 = phi i8* [ %41, %106 ], [ %93, %104 ], [ %41, %78 ], [ %41, %77 ], [ %41, %76 ], [ %41, %74 ], [ %41, %47 ], [ %41, %73 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %40, metadata !3403, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %58, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %57, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %56, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3418, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %54, metadata !3415, metadata !DIExpression()), !dbg !3467
  %60 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3499
  call void @llvm.dbg.value(metadata i8* %60, metadata !3403, metadata !DIExpression()), !dbg !3467
  %61 = load i8, i8* %60, align 1, !dbg !3501
  %62 = icmp eq i8 %61, 0, !dbg !3502
  br i1 %62, label %226, label %63, !dbg !3503, !llvm.loop !3504

63:                                               ; preds = %192, %53
  %64 = phi i8 [ %61, %53 ], [ %199, %192 ]
  %65 = phi i8* [ %60, %53 ], [ %198, %192 ]
  %66 = phi i8* [ %59, %53 ], [ %143, %192 ]
  %67 = phi i8* [ %40, %53 ], [ %141, %192 ]
  %68 = phi i8* [ %58, %53 ], [ %197, %192 ]
  %69 = phi i32 [ %57, %53 ], [ %139, %192 ]
  %70 = phi i32 [ %56, %53 ], [ %138, %192 ]
  %71 = phi i1 [ %55, %53 ], [ %134, %192 ]
  %72 = phi i32 [ %54, %53 ], [ %132, %192 ]
  br label %38, !dbg !3492

73:                                               ; preds = %38
  switch i8 %39, label %106 [
    i8 37, label %74
    i8 35, label %76
    i8 45, label %76
    i8 43, label %76
    i8 32, label %76
    i8 48, label %76
    i8 49, label %76
    i8 50, label %76
    i8 51, label %76
    i8 52, label %76
    i8 53, label %76
    i8 54, label %76
    i8 55, label %76
    i8 56, label %76
    i8 57, label %76
    i8 46, label %76
    i8 104, label %76
    i8 108, label %76
    i8 76, label %76
    i8 42, label %108
    i8 106, label %53
    i8 122, label %77
    i8 116, label %78
    i8 99, label %79
    i8 100, label %79
    i8 105, label %79
    i8 111, label %79
    i8 117, label %79
    i8 120, label %79
    i8 88, label %79
    i8 115, label %109
    i8 112, label %107
    i8 110, label %107
    i8 97, label %87
    i8 65, label %87
    i8 101, label %87
    i8 69, label %87
    i8 102, label %87
    i8 70, label %87
    i8 103, label %87
    i8 71, label %87
  ], !dbg !3507

74:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3418, metadata !DIExpression()), !dbg !3467
  %75 = add nsw i32 %72, -1, !dbg !3508
  call void @llvm.dbg.value(metadata i32 %75, metadata !3415, metadata !DIExpression()), !dbg !3467
  br label %53, !dbg !3509

76:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73, %73
  br label %53, !dbg !3510

77:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 4, metadata !3407, metadata !DIExpression()), !dbg !3467
  br label %53, !dbg !3511

78:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 4, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 4, metadata !3407, metadata !DIExpression()), !dbg !3467
  br label %53, !dbg !3512

79:                                               ; preds = %73, %73, %73, %73, %73, %73, %73
  %80 = load i8, i8* %42, align 1, !dbg !3513
  %81 = icmp eq i8 %80, 108, !dbg !3515
  br i1 %81, label %82, label %109, !dbg !3516

82:                                               ; preds = %79
  %83 = getelementptr inbounds i8, i8* %42, i32 -1, !dbg !3517
  %84 = load i8, i8* %83, align 1, !dbg !3517
  %85 = icmp eq i8 %84, 108, !dbg !3520
  %86 = select i1 %85, i32 8, i32 4
  br label %109

87:                                               ; preds = %73, %73, %73, %73, %73, %73, %73, %73
  %88 = ptrtoint i8* %41 to i32, !dbg !3521
  %89 = add i32 %88, 7, !dbg !3521
  %90 = and i32 %89, -8, !dbg !3521
  %91 = inttoptr i32 %90 to i8*, !dbg !3521
  %92 = inttoptr i32 %90 to double*, !dbg !3521
  %93 = getelementptr inbounds i8, i8* %91, i32 8, !dbg !3521
  %94 = load double, double* %92, align 8, !dbg !3521
  call void @llvm.dbg.value(metadata i8* %93, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 8, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 8, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata double %94, metadata !3435, metadata !DIExpression()), !dbg !3523
  %95 = ptrtoint i8* %43 to i32, !dbg !3524
  %96 = add i32 %95, 7, !dbg !3524
  %97 = and i32 %96, -8, !dbg !3524
  %98 = inttoptr i32 %97 to i8*, !dbg !3525
  call void @llvm.dbg.value(metadata i8* %98, metadata !3406, metadata !DIExpression()), !dbg !3467
  br i1 %22, label %104, label %99, !dbg !3526

99:                                               ; preds = %87
  %100 = add i32 %37, %97, !dbg !3527
  %101 = icmp ugt i32 %100, %196, !dbg !3531
  br i1 %101, label %320, label %102, !dbg !3532

102:                                              ; preds = %99
  %103 = inttoptr i32 %97 to double*, !dbg !3533
  store double %94, double* %103, align 8, !dbg !3533
  br label %104

104:                                              ; preds = %102, %87
  %105 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !3536
  call void @llvm.dbg.value(metadata i8* %105, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3418, metadata !DIExpression()), !dbg !3467
  br label %53

106:                                              ; preds = %73
  call void @llvm.dbg.value(metadata i8 0, metadata !3418, metadata !DIExpression()), !dbg !3467
  br label %53, !dbg !3537

107:                                              ; preds = %73, %73
  br label %109, !dbg !3538

108:                                              ; preds = %73
  br label %109, !dbg !3538

109:                                              ; preds = %73, %108, %107, %79, %82
  %110 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ true, %108 ], [ false, %73 ]
  %111 = phi i1 [ false, %82 ], [ false, %79 ], [ false, %107 ], [ false, %108 ], [ true, %73 ]
  %112 = phi i32 [ %86, %82 ], [ %45, %79 ], [ 4, %107 ], [ %45, %108 ], [ 4, %73 ], !dbg !3467
  %113 = phi i32 [ %86, %82 ], [ %44, %79 ], [ 4, %107 ], [ %44, %108 ], [ 4, %73 ], !dbg !3467
  call void @llvm.dbg.value(metadata i32 %113, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %112, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3418, metadata !DIExpression()), !dbg !3467
  %114 = ptrtoint i8* %43 to i32, !dbg !3538
  %115 = add i32 %114, -1, !dbg !3538
  %116 = add i32 %115, %112, !dbg !3538
  %117 = sub i32 0, %112, !dbg !3538
  %118 = and i32 %116, %117, !dbg !3538
  %119 = inttoptr i32 %118 to i8*, !dbg !3539
  call void @llvm.dbg.value(metadata i8* %119, metadata !3406, metadata !DIExpression()), !dbg !3467
  br i1 %22, label %124, label %120, !dbg !3540

120:                                              ; preds = %109
  %121 = sub i32 %113, %17, !dbg !3542
  %122 = add i32 %121, %118, !dbg !3543
  %123 = icmp ugt i32 %122, %196, !dbg !3544
  br i1 %123, label %320, label %124, !dbg !3545

124:                                              ; preds = %120, %109
  br i1 %111, label %125, label %201, !dbg !3546

125:                                              ; preds = %124
  %126 = inttoptr i32 %118 to i8*, !dbg !3539
  %127 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3547
  call void @llvm.dbg.value(metadata i8* %127, metadata !3404, metadata !DIExpression()), !dbg !3467
  %128 = bitcast i8* %41 to i8**, !dbg !3547
  %129 = load i8*, i8** %128, align 4, !dbg !3547
  call void @llvm.dbg.value(metadata i8* %129, metadata !3417, metadata !DIExpression()), !dbg !3467
  br label %130, !dbg !3548

130:                                              ; preds = %125, %33
  %131 = phi i32 [ 0, %33 ], [ %193, %125 ], !dbg !3467
  %132 = phi i32 [ -1, %33 ], [ %72, %125 ], !dbg !3549
  %133 = phi i8* [ %3, %33 ], [ %129, %125 ], !dbg !3467
  %134 = phi i1 [ false, %33 ], [ %110, %125 ]
  %135 = phi i32 [ 0, %33 ], [ %194, %125 ], !dbg !3550
  %136 = phi i32 [ %16, %33 ], [ %147, %125 ], !dbg !3467
  %137 = phi i32 [ 0, %33 ], [ %195, %125 ], !dbg !3467
  %138 = phi i32 [ 4, %33 ], [ %112, %125 ], !dbg !3467
  %139 = phi i32 [ 4, %33 ], [ %113, %125 ], !dbg !3467
  %140 = phi i8* [ %26, %33 ], [ %126, %125 ], !dbg !3467
  %141 = phi i8* [ %34, %33 ], [ %40, %125 ], !dbg !3467
  %142 = phi i32 [ %27, %33 ], [ %196, %125 ], !dbg !3551
  %143 = phi i8* [ %9, %33 ], [ %127, %125 ]
  call void @llvm.dbg.value(metadata i8* %143, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %142, metadata !3401, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %141, metadata !3403, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %140, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %139, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %138, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %137, metadata !3412, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %136, metadata !3420, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %135, metadata !3413, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3418, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %133, metadata !3417, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %132, metadata !3415, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %131, metadata !3414, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.label(metadata !3466), !dbg !3553
  br i1 %22, label %146, label %144, !dbg !3554

144:                                              ; preds = %130
  %145 = bitcast i8* %140 to i8**, !dbg !3555
  store i8* %133, i8** %145, align 4, !dbg !3558
  br label %146, !dbg !3559

146:                                              ; preds = %144, %130
  %147 = add nsw i32 %136, -1, !dbg !3560
  call void @llvm.dbg.value(metadata i32 %147, metadata !3420, metadata !DIExpression()), !dbg !3467
  %148 = icmp sgt i32 %136, 0, !dbg !3561
  br i1 %148, label %152, label %149, !dbg !3562

149:                                              ; preds = %146
  %150 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %133) #24, !dbg !3563
  %151 = zext i1 %150 to i32, !dbg !3563
  br label %152, !dbg !3562

152:                                              ; preds = %146, %149
  %153 = phi i32 [ %151, %149 ], [ 1, %146 ], !dbg !3562
  %154 = icmp eq i32 %153, 0, !dbg !3562
  call void @llvm.dbg.value(metadata i1 %154, metadata !3444, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3564
  call void @llvm.dbg.value(metadata i1 %36, metadata !3447, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3564
  %155 = or i1 %36, %154, !dbg !3565
  br i1 %155, label %156, label %192, !dbg !3565

156:                                              ; preds = %152
  %157 = ptrtoint i8* %140 to i32, !dbg !3566
  %158 = sub i32 %157, %17, !dbg !3566
  %159 = lshr i32 %158, 2, !dbg !3567
  call void @llvm.dbg.value(metadata i32 %159, metadata !3448, metadata !DIExpression()), !dbg !3568
  %160 = icmp ugt i32 %158, 511
  %161 = select i1 %36, i1 %160, i1 false, !dbg !3569
  br i1 %161, label %162, label %163, !dbg !3569

162:                                              ; preds = %156
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3571
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4.10, i32 0, i32 0)) #25, !dbg !3571
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 635) #25, !dbg !3571
  unreachable, !dbg !3571

163:                                              ; preds = %156
  %164 = icmp ugt i32 %137, 15, !dbg !3576
  br i1 %164, label %165, label %166, !dbg !3578

165:                                              ; preds = %163
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3579
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5.11, i32 0, i32 0)) #25, !dbg !3579
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 640) #25, !dbg !3579
  unreachable, !dbg !3579

166:                                              ; preds = %163
  br i1 %22, label %177, label %167, !dbg !3584

167:                                              ; preds = %166
  %168 = trunc i32 %159 to i8, !dbg !3585
  %169 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %137, !dbg !3588
  store i8 %168, i8* %169, align 1, !dbg !3589
  %170 = trunc i32 %132 to i8, !dbg !3590
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %137, !dbg !3591
  store i8 %170, i8* %171, align 1, !dbg !3592
  br i1 %154, label %175, label %172, !dbg !3593

172:                                              ; preds = %167
  %173 = or i8 %168, -128, !dbg !3594
  store i8 %173, i8* %169, align 1, !dbg !3594
  %174 = add i32 %131, 1, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %174, metadata !3414, metadata !DIExpression()), !dbg !3467
  br label %187, !dbg !3598

175:                                              ; preds = %167
  %176 = add i32 %135, 1, !dbg !3599
  call void @llvm.dbg.value(metadata i32 %176, metadata !3413, metadata !DIExpression()), !dbg !3467
  br label %187

177:                                              ; preds = %166
  br i1 %154, label %180, label %178, !dbg !3601

178:                                              ; preds = %177
  %179 = add i32 %142, 1, !dbg !3602
  call void @llvm.dbg.value(metadata i32 %179, metadata !3401, metadata !DIExpression()), !dbg !3467
  br label %187, !dbg !3605

180:                                              ; preds = %177
  br i1 %13, label %183, label %181, !dbg !3606

181:                                              ; preds = %180
  %182 = add i32 %142, 2, !dbg !3607
  call void @llvm.dbg.value(metadata i32 %182, metadata !3401, metadata !DIExpression()), !dbg !3467
  br label %187, !dbg !3610

183:                                              ; preds = %180
  %184 = tail call i32 @strlen(i8* noundef %133) #25, !dbg !3611
  %185 = add i32 %142, 2, !dbg !3613
  %186 = add i32 %185, %184, !dbg !3614
  call void @llvm.dbg.value(metadata i32 %186, metadata !3401, metadata !DIExpression()), !dbg !3467
  br label %187

187:                                              ; preds = %178, %183, %181, %172, %175
  %188 = phi i32 [ %174, %172 ], [ %131, %175 ], [ %131, %178 ], [ %131, %181 ], [ %131, %183 ], !dbg !3467
  %189 = phi i32 [ %135, %172 ], [ %176, %175 ], [ %135, %178 ], [ %135, %181 ], [ %135, %183 ], !dbg !3467
  %190 = phi i32 [ %142, %172 ], [ %142, %175 ], [ %179, %178 ], [ %182, %181 ], [ %186, %183 ], !dbg !3467
  call void @llvm.dbg.value(metadata i32 %190, metadata !3401, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %189, metadata !3413, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %188, metadata !3414, metadata !DIExpression()), !dbg !3467
  %191 = add nuw nsw i32 %137, 1, !dbg !3615
  call void @llvm.dbg.value(metadata i32 %191, metadata !3412, metadata !DIExpression()), !dbg !3467
  br label %192

192:                                              ; preds = %152, %187
  %193 = phi i32 [ %188, %187 ], [ %131, %152 ], !dbg !3467
  %194 = phi i32 [ %189, %187 ], [ %135, %152 ], !dbg !3550
  %195 = phi i32 [ %191, %187 ], [ %137, %152 ], !dbg !3467
  %196 = phi i32 [ %190, %187 ], [ %142, %152 ], !dbg !3551
  call void @llvm.dbg.value(metadata i32 %196, metadata !3401, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %195, metadata !3412, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %194, metadata !3413, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %193, metadata !3414, metadata !DIExpression()), !dbg !3467
  %197 = getelementptr inbounds i8, i8* %140, i32 4, !dbg !3616
  call void @llvm.dbg.value(metadata i8* %197, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %143, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %141, metadata !3403, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %139, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %138, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3418, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %132, metadata !3415, metadata !DIExpression()), !dbg !3467
  %198 = getelementptr inbounds i8, i8* %141, i32 1, !dbg !3499
  call void @llvm.dbg.value(metadata i8* %198, metadata !3403, metadata !DIExpression()), !dbg !3467
  %199 = load i8, i8* %198, align 1, !dbg !3501
  %200 = icmp eq i8 %199, 0, !dbg !3502
  br i1 %200, label %226, label %63, !dbg !3503

201:                                              ; preds = %124
  switch i32 %113, label %218 [
    i32 4, label %202
    i32 8, label %208
  ], !dbg !3617

202:                                              ; preds = %201
  %203 = getelementptr inbounds i8, i8* %41, i32 4, !dbg !3618
  call void @llvm.dbg.value(metadata i8* %203, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 undef, metadata !3451, metadata !DIExpression()), !dbg !3619
  br i1 %22, label %219, label %204, !dbg !3620

204:                                              ; preds = %202
  %205 = bitcast i8* %41 to i32*, !dbg !3618
  %206 = load i32, i32* %205, align 4, !dbg !3618
  call void @llvm.dbg.value(metadata i32 %206, metadata !3451, metadata !DIExpression()), !dbg !3619
  %207 = inttoptr i32 %118 to i32*, !dbg !3621
  store i32 %206, i32* %207, align 4, !dbg !3624
  br label %219, !dbg !3625

208:                                              ; preds = %201
  %209 = ptrtoint i8* %41 to i32, !dbg !3626
  %210 = add i32 %209, 7, !dbg !3626
  %211 = and i32 %210, -8, !dbg !3626
  %212 = inttoptr i32 %211 to i8*, !dbg !3626
  %213 = getelementptr inbounds i8, i8* %212, i32 8, !dbg !3626
  call void @llvm.dbg.value(metadata i8* %213, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i64 undef, metadata !3457, metadata !DIExpression()), !dbg !3627
  br i1 %22, label %219, label %214, !dbg !3628

214:                                              ; preds = %208
  %215 = inttoptr i32 %211 to i64*, !dbg !3626
  %216 = load i64, i64* %215, align 8, !dbg !3626
  call void @llvm.dbg.value(metadata i64 %216, metadata !3457, metadata !DIExpression()), !dbg !3627
  %217 = inttoptr i32 %118 to i64*, !dbg !3629
  store i64 %216, i64* %217, align 8, !dbg !3634
  br label %219, !dbg !3635

218:                                              ; preds = %201
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3636
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %113) #25, !dbg !3636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 709) #25, !dbg !3636
  unreachable, !dbg !3636

219:                                              ; preds = %208, %214, %202, %204
  %220 = phi i32 [ 4, %204 ], [ 4, %202 ], [ 8, %214 ], [ 8, %208 ]
  %221 = phi i8* [ %203, %204 ], [ %203, %202 ], [ %213, %214 ], [ %213, %208 ], !dbg !3641
  %222 = getelementptr inbounds i8, i8* %119, i32 %220, !dbg !3641
  call void @llvm.dbg.value(metadata i8* %221, metadata !3404, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %40, metadata !3403, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %222, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %113, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %112, metadata !3408, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3421, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8 poison, metadata !3418, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %72, metadata !3415, metadata !DIExpression()), !dbg !3467
  %223 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !3499
  call void @llvm.dbg.value(metadata i8* %223, metadata !3403, metadata !DIExpression()), !dbg !3467
  %224 = load i8, i8* %223, align 1, !dbg !3501
  %225 = icmp eq i8 %224, 0, !dbg !3502
  br i1 %225, label %226, label %38, !dbg !3503

226:                                              ; preds = %192, %219, %53
  %227 = phi i8* [ %222, %219 ], [ %58, %53 ], [ %197, %192 ], !dbg !3642
  %228 = ptrtoint i8* %227 to i32, !dbg !3643
  %229 = sub i32 %228, %17, !dbg !3643
  %230 = lshr i32 %229, 2, !dbg !3645
  %231 = icmp ugt i32 %229, 1023, !dbg !3646
  br i1 %231, label %232, label %233, !dbg !3647

232:                                              ; preds = %226
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3648
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #25, !dbg !3648
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 721) #25, !dbg !3648
  unreachable, !dbg !3648

233:                                              ; preds = %226
  br i1 %22, label %234, label %237, !dbg !3653

234:                                              ; preds = %233
  %235 = add i32 %196, -8, !dbg !3654
  %236 = add i32 %235, %229, !dbg !3657
  br label %320, !dbg !3658

237:                                              ; preds = %233
  %238 = trunc i32 %230 to i8, !dbg !3659
  store i8 %238, i8* %0, align 1, !dbg !3660
  %239 = trunc i32 %194 to i8, !dbg !3661
  %240 = select i1 %13, i8 %239, i8 0
  %241 = select i1 %13, i8 0, i8 %239
  %242 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !3663
  store i8 %240, i8* %242, align 1, !dbg !3665
  %243 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3666
  store i8 %241, i8* %243, align 1, !dbg !3667
  %244 = trunc i32 %193 to i8, !dbg !3668
  %245 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3669
  store i8 %244, i8* %245, align 1, !dbg !3670
  %246 = icmp eq i32 %193, 0, !dbg !3671
  %247 = xor i1 %246, true, !dbg !3672
  %248 = icmp ne i32 %195, 0
  %249 = select i1 %247, i1 %248, i1 false, !dbg !3672
  call void @llvm.dbg.value(metadata i8* %227, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 0, metadata !3416, metadata !DIExpression()), !dbg !3467
  br i1 %249, label %250, label %269, !dbg !3672

250:                                              ; preds = %237
  %251 = sub i32 1, %17
  br label %252, !dbg !3673

252:                                              ; preds = %250, %265
  %253 = phi i8* [ %227, %250 ], [ %266, %265 ]
  %254 = phi i32 [ 0, %250 ], [ %267, %265 ]
  call void @llvm.dbg.value(metadata i8* %253, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %254, metadata !3416, metadata !DIExpression()), !dbg !3467
  %255 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %254, !dbg !3674
  %256 = load i8, i8* %255, align 1, !dbg !3674
  %257 = icmp sgt i8 %256, -1, !dbg !3676
  br i1 %257, label %265, label %258, !dbg !3677

258:                                              ; preds = %252
  call void @llvm.dbg.value(metadata i8 %256, metadata !3460, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 127, DW_OP_and, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3678
  %259 = ptrtoint i8* %253 to i32, !dbg !3679
  %260 = add i32 %251, %259, !dbg !3681
  %261 = icmp ugt i32 %260, %196, !dbg !3682
  br i1 %261, label %320, label %262, !dbg !3683

262:                                              ; preds = %258
  %263 = and i8 %256, 127, !dbg !3684
  call void @llvm.dbg.value(metadata i8 %263, metadata !3460, metadata !DIExpression()), !dbg !3678
  %264 = getelementptr inbounds i8, i8* %253, i32 1, !dbg !3685
  call void @llvm.dbg.value(metadata i8* %264, metadata !3406, metadata !DIExpression()), !dbg !3467
  store i8 %263, i8* %253, align 1, !dbg !3686
  br label %265

265:                                              ; preds = %262, %252
  %266 = phi i8* [ %264, %262 ], [ %253, %252 ], !dbg !3616
  call void @llvm.dbg.value(metadata i8* %266, metadata !3406, metadata !DIExpression()), !dbg !3467
  %267 = add nuw i32 %254, 1, !dbg !3687
  call void @llvm.dbg.value(metadata i32 %267, metadata !3416, metadata !DIExpression()), !dbg !3467
  %268 = icmp eq i32 %267, %195, !dbg !3688
  br i1 %268, label %269, label %252, !dbg !3673, !llvm.loop !3689

269:                                              ; preds = %265, %237
  %270 = phi i8* [ %227, %237 ], [ %266, %265 ], !dbg !3616
  call void @llvm.dbg.value(metadata i8* %270, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 0, metadata !3416, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %133, metadata !3417, metadata !DIExpression()), !dbg !3467
  %271 = icmp eq i32 %195, 0, !dbg !3691
  br i1 %271, label %316, label %272, !dbg !3694

272:                                              ; preds = %269
  %273 = sub i32 1, %17
  br label %274, !dbg !3694

274:                                              ; preds = %272, %311
  %275 = phi i8* [ %270, %272 ], [ %313, %311 ]
  %276 = phi i8* [ %133, %272 ], [ %312, %311 ]
  %277 = phi i32 [ 0, %272 ], [ %314, %311 ]
  call void @llvm.dbg.value(metadata i8* %275, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %276, metadata !3417, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %277, metadata !3416, metadata !DIExpression()), !dbg !3467
  br i1 %246, label %282, label %278, !dbg !3695

278:                                              ; preds = %274
  %279 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3698
  %280 = load i8, i8* %279, align 1, !dbg !3698
  %281 = icmp sgt i8 %280, -1, !dbg !3699
  br i1 %281, label %282, label %311, !dbg !3700

282:                                              ; preds = %278, %274
  br i1 %13, label %287, label %283, !dbg !3701

283:                                              ; preds = %282
  call void @llvm.dbg.value(metadata i32 0, metadata !3407, metadata !DIExpression()), !dbg !3467
  %284 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %277, !dbg !3702
  %285 = load i8, i8* %284, align 1, !dbg !3702
  %286 = getelementptr inbounds i8, i8* %275, i32 1, !dbg !3705
  call void @llvm.dbg.value(metadata i8* %286, metadata !3406, metadata !DIExpression()), !dbg !3467
  store i8 %285, i8* %275, align 1, !dbg !3706
  br label %297, !dbg !3707

287:                                              ; preds = %282
  %288 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3708
  %289 = load i8, i8* %288, align 1, !dbg !3708
  %290 = zext i8 %289 to i32, !dbg !3708
  %291 = shl nuw nsw i32 %290, 2, !dbg !3710
  %292 = getelementptr inbounds i8, i8* %0, i32 %291, !dbg !3711
  %293 = bitcast i8* %292 to i8**, !dbg !3712
  %294 = load i8*, i8** %293, align 4, !dbg !3712
  call void @llvm.dbg.value(metadata i8* %294, metadata !3417, metadata !DIExpression()), !dbg !3467
  store i8* null, i8** %293, align 4, !dbg !3713
  %295 = tail call i32 @strlen(i8* noundef %294) #25, !dbg !3714
  %296 = add i32 %295, 1, !dbg !3715
  call void @llvm.dbg.value(metadata i32 %296, metadata !3407, metadata !DIExpression()), !dbg !3467
  br label %297

297:                                              ; preds = %287, %283
  %298 = phi i8* [ %276, %283 ], [ %294, %287 ], !dbg !3467
  %299 = phi i32 [ 0, %283 ], [ %296, %287 ], !dbg !3716
  %300 = phi i8* [ %286, %283 ], [ %275, %287 ], !dbg !3467
  call void @llvm.dbg.value(metadata i8* %300, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i32 %299, metadata !3407, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %298, metadata !3417, metadata !DIExpression()), !dbg !3467
  %301 = ptrtoint i8* %300 to i32, !dbg !3717
  %302 = add i32 %273, %299, !dbg !3719
  %303 = add i32 %302, %301, !dbg !3720
  %304 = icmp ugt i32 %303, %196, !dbg !3721
  br i1 %304, label %320, label %305, !dbg !3722

305:                                              ; preds = %297
  %306 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i32 0, i32 %277, !dbg !3723
  %307 = load i8, i8* %306, align 1, !dbg !3723
  %308 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3724
  call void @llvm.dbg.value(metadata i8* %308, metadata !3406, metadata !DIExpression()), !dbg !3467
  store i8 %307, i8* %300, align 1, !dbg !3725
  %309 = tail call i8* @memcpy(i8* noundef nonnull %308, i8* noundef %298, i32 noundef %299) #25, !dbg !3726
  %310 = getelementptr inbounds i8, i8* %308, i32 %299, !dbg !3727
  call void @llvm.dbg.value(metadata i8* %310, metadata !3406, metadata !DIExpression()), !dbg !3467
  br label %311, !dbg !3728

311:                                              ; preds = %278, %305
  %312 = phi i8* [ %276, %278 ], [ %298, %305 ], !dbg !3729
  %313 = phi i8* [ %275, %278 ], [ %310, %305 ], !dbg !3467
  call void @llvm.dbg.value(metadata i8* %313, metadata !3406, metadata !DIExpression()), !dbg !3467
  call void @llvm.dbg.value(metadata i8* %312, metadata !3417, metadata !DIExpression()), !dbg !3467
  %314 = add nuw i32 %277, 1, !dbg !3730
  call void @llvm.dbg.value(metadata i32 %314, metadata !3416, metadata !DIExpression()), !dbg !3467
  %315 = icmp eq i32 %314, %195, !dbg !3691
  br i1 %315, label %316, label %274, !dbg !3694, !llvm.loop !3731

316:                                              ; preds = %311, %269
  %317 = phi i8* [ %270, %269 ], [ %313, %311 ], !dbg !3616
  %318 = ptrtoint i8* %317 to i32, !dbg !3733
  %319 = sub i32 %318, %17, !dbg !3733
  br label %320, !dbg !3734

320:                                              ; preds = %120, %99, %258, %297, %28, %5, %316, %234
  %321 = phi i32 [ %236, %234 ], [ %319, %316 ], [ -14, %5 ], [ -28, %28 ], [ -28, %297 ], [ -28, %258 ], [ -28, %99 ], [ -28, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !3735
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !3735
  ret i32 %321, !dbg !3735
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @ptr_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3736 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3740, metadata !DIExpression()), !dbg !3741
  %2 = tail call fastcc zeroext i1 @linker_is_in_rodata(i8* noundef %0) #24, !dbg !3742
  ret i1 %2, !dbg !3743
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @linker_is_in_rodata(i8* noundef readnone %0) unnamed_addr #3 !dbg !3744 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3749, metadata !DIExpression()), !dbg !3750
  %2 = icmp uge i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_start, i32 0, i32 0), !dbg !3751
  %3 = icmp ult i8* %0, getelementptr inbounds ([0 x i8], [0 x i8]* @__rodata_region_end, i32 0, i32 0), !dbg !3752
  %4 = and i1 %2, %3, !dbg !3752
  ret i1 %4, !dbg !3753
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, ...) local_unnamed_addr #1 !dbg !3754 {
  %5 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3758, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %1, metadata !3759, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 %2, metadata !3760, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i8* %3, metadata !3761, metadata !DIExpression()), !dbg !3764
  %6 = bitcast %struct.__va_list* %5 to i8*, !dbg !3765
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3765
  call void @llvm.dbg.declare(metadata %struct.__va_list* %5, metadata !3762, metadata !DIExpression()), !dbg !3766
  call void @llvm.va_start(i8* nonnull %6), !dbg !3767
  %7 = bitcast %struct.__va_list* %5 to i32*, !dbg !3768
  %8 = load i32, i32* %7, align 4, !dbg !3768
  %9 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !3768
  %10 = call i32 @cbvprintf_package(i8* noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef %3, [1 x i32] %9) #24, !dbg !3768
  call void @llvm.dbg.value(metadata i32 %10, metadata !3763, metadata !DIExpression()), !dbg !3764
  call void @llvm.va_end(i8* nonnull %6), !dbg !3769
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !3770
  ret i32 %10, !dbg !3771
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbpprintf_external(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #1 !dbg !3772 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3784, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3785, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i8* %2, metadata !3786, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i8* %3, metadata !3787, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i8* %3, metadata !3788, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i8* %3, metadata !3789, metadata !DIExpression()), !dbg !3803
  %5 = icmp eq i8* %3, null, !dbg !3804
  br i1 %5, label %45, label %6, !dbg !3806

6:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i8 undef, metadata !3798, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3803
  %7 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !3807
  %8 = load i8, i8* %7, align 1, !dbg !3807
  %9 = zext i8 %8 to i32, !dbg !3808
  call void @llvm.dbg.value(metadata i32 %9, metadata !3799, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i8 undef, metadata !3800, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3803
  call void @llvm.dbg.value(metadata i8 undef, metadata !3801, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 undef), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  call void @llvm.dbg.value(metadata i32 0, metadata !3797, metadata !DIExpression()), !dbg !3803
  %10 = icmp eq i8 %8, 0, !dbg !3809
  br i1 %10, label %39, label %11, !dbg !3812

11:                                               ; preds = %6
  %12 = load i8, i8* %3, align 1, !dbg !3813
  call void @llvm.dbg.value(metadata i8 %12, metadata !3798, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i8 %12), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %13 = zext i8 %12 to i32, !dbg !3814
  call void @llvm.dbg.value(metadata i32 %13, metadata !3798, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shl, DW_OP_stack_value)), !dbg !3803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %13), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %14 = shl nuw nsw i32 %13, 2, !dbg !3815
  call void @llvm.dbg.value(metadata i32 %14, metadata !3798, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 undef, i32 %14), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %15 = getelementptr inbounds i8, i8* %3, i32 %14, !dbg !3816
  call void @llvm.dbg.value(metadata !DIArgList(i8* %15, i8 undef, i8 undef), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %16 = getelementptr inbounds i8, i8* %3, i32 2, !dbg !3817
  %17 = load i8, i8* %16, align 1, !dbg !3817
  call void @llvm.dbg.value(metadata i8 %17, metadata !3800, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i8 %17, i8 undef), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %18 = zext i8 %17 to i32, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %18, metadata !3800, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 undef, i32 %18, i8 undef), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %19 = getelementptr inbounds i8, i8* %15, i32 %18, !dbg !3819
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i8 undef), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %20 = getelementptr inbounds i8, i8* %3, i32 3, !dbg !3820
  %21 = load i8, i8* %20, align 1, !dbg !3820
  call void @llvm.dbg.value(metadata i8 %21, metadata !3801, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i8 %21, i8 undef, i8 undef), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %22 = zext i8 %21 to i32, !dbg !3821
  call void @llvm.dbg.value(metadata i32 %22, metadata !3801, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %22, i8 undef, i8 undef), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %23 = shl nuw nsw i32 %22, 1, !dbg !3822
  call void @llvm.dbg.value(metadata !DIArgList(i8* %3, i32 %23, i8 undef, i8 undef), metadata !3795, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 2, DW_OP_shl, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3803
  %24 = getelementptr inbounds i8, i8* %19, i32 %23, !dbg !3823
  call void @llvm.dbg.value(metadata i8* %24, metadata !3795, metadata !DIExpression()), !dbg !3803
  br label %25, !dbg !3812

25:                                               ; preds = %11, %25
  %26 = phi i8* [ %36, %25 ], [ %24, %11 ]
  %27 = phi i32 [ %37, %25 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i8* %26, metadata !3795, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i32 %27, metadata !3797, metadata !DIExpression()), !dbg !3803
  %28 = getelementptr inbounds i8, i8* %26, i32 1, !dbg !3824
  call void @llvm.dbg.value(metadata i8* %28, metadata !3795, metadata !DIExpression()), !dbg !3803
  %29 = load i8, i8* %26, align 1, !dbg !3826
  %30 = zext i8 %29 to i32, !dbg !3826
  call void @llvm.dbg.value(metadata i32 %30, metadata !3802, metadata !DIExpression()), !dbg !3803
  %31 = shl nuw nsw i32 %30, 2, !dbg !3827
  %32 = getelementptr inbounds i8, i8* %3, i32 %31, !dbg !3828
  %33 = bitcast i8* %32 to i8**, !dbg !3829
  call void @llvm.dbg.value(metadata i8** %33, metadata !3796, metadata !DIExpression()), !dbg !3803
  store i8* %28, i8** %33, align 4, !dbg !3830
  %34 = tail call i32 @strlen(i8* noundef nonnull %28) #25, !dbg !3831
  %35 = add i32 %34, 1, !dbg !3832
  %36 = getelementptr inbounds i8, i8* %28, i32 %35, !dbg !3833
  call void @llvm.dbg.value(metadata i8* %36, metadata !3795, metadata !DIExpression()), !dbg !3803
  %37 = add nuw nsw i32 %27, 1, !dbg !3834
  call void @llvm.dbg.value(metadata i32 %37, metadata !3797, metadata !DIExpression()), !dbg !3803
  %38 = icmp eq i32 %37, %9, !dbg !3809
  br i1 %38, label %39, label %25, !dbg !3812, !llvm.loop !3835

39:                                               ; preds = %25, %6
  %40 = getelementptr inbounds i8, i8* %3, i32 8, !dbg !3837
  call void @llvm.dbg.value(metadata i8* %40, metadata !3788, metadata !DIExpression()), !dbg !3803
  %41 = getelementptr inbounds i8, i8* %3, i32 4, !dbg !3838
  %42 = bitcast i8* %41 to i8**, !dbg !3838
  %43 = load i8*, i8** %42, align 1, !dbg !3838
  %44 = tail call fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* noundef %1, i8* noundef %2, i8* noundef %43, i8* noundef nonnull %40) #24, !dbg !3839
  br label %45, !dbg !3840

45:                                               ; preds = %4, %39
  %46 = phi i32 [ %44, %39 ], [ -22, %4 ], !dbg !3803
  ret i32 %46, !dbg !3841
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @cbprintf_via_va_list(i32 (...)* noundef %0, i32 (i32 (...)*, i8*, i8*, [1 x i32])* nocapture noundef readonly %1, i8* noundef %2, i8* noundef %3, i8* noundef %4) unnamed_addr #1 !dbg !3842 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !3846, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata i32 (i32 (...)*, i8*, i8*, [1 x i32])* %1, metadata !3847, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata i8* %2, metadata !3848, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata i8* %3, metadata !3849, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata i8* %4, metadata !3850, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.value(metadata i8* %4, metadata !3851, metadata !DIExpression()), !dbg !3856
  %6 = ptrtoint i8* %4 to i32, !dbg !3857
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !3857
  %8 = tail call i32 %1(i32 (...)* noundef %0, i8* noundef %2, i8* noundef %3, [1 x i32] %7) #25, !dbg !3857
  ret i32 %8, !dbg !3858
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @is_ptr(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !3859 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !3863, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i32 %1, metadata !3864, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8 0, metadata !3866, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i32 0, metadata !3867, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8 poison, metadata !3866, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8* %0, metadata !3863, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3868
  %3 = load i8, i8* %0, align 1, !dbg !3869
  call void @llvm.dbg.value(metadata i8 %3, metadata !3865, metadata !DIExpression()), !dbg !3868
  %4 = icmp eq i8 %3, 0, !dbg !3870
  br i1 %4, label %29, label %5, !dbg !3871

5:                                                ; preds = %2, %22
  %6 = phi i8 [ %27, %22 ], [ %3, %2 ]
  %7 = phi i8* [ %10, %22 ], [ %0, %2 ]
  %8 = phi i32 [ %24, %22 ], [ 0, %2 ]
  %9 = phi i1 [ %26, %22 ], [ false, %2 ]
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !3872
  call void @llvm.dbg.value(metadata i32 %8, metadata !3867, metadata !DIExpression()), !dbg !3868
  br i1 %9, label %11, label %22, !dbg !3873

11:                                               ; preds = %5
  %12 = icmp eq i32 %8, %1, !dbg !3875
  br i1 %12, label %13, label %17, !dbg !3879

13:                                               ; preds = %11
  %14 = icmp eq i8 %6, 112, !dbg !3880
  br i1 %14, label %29, label %15, !dbg !3883

15:                                               ; preds = %13
  %16 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3884
  br i1 %16, label %29, label %22, !dbg !3886

17:                                               ; preds = %11
  %18 = tail call fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %6) #24, !dbg !3887
  %19 = xor i1 %18, true, !dbg !3889
  %20 = zext i1 %18 to i32, !dbg !3889
  %21 = add nsw i32 %8, %20, !dbg !3889
  br label %22, !dbg !3889

22:                                               ; preds = %17, %15, %5
  %23 = phi i1 [ true, %15 ], [ false, %5 ], [ %19, %17 ]
  %24 = phi i32 [ %1, %15 ], [ %8, %5 ], [ %21, %17 ], !dbg !3868
  call void @llvm.dbg.value(metadata i32 %24, metadata !3867, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8 poison, metadata !3866, metadata !DIExpression()), !dbg !3868
  %25 = icmp eq i8 %6, 37, !dbg !3890
  %26 = xor i1 %25, %23, !dbg !3892
  call void @llvm.dbg.value(metadata i8* %10, metadata !3863, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata i8* %10, metadata !3863, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3868
  %27 = load i8, i8* %10, align 1, !dbg !3869
  call void @llvm.dbg.value(metadata i8 %27, metadata !3865, metadata !DIExpression()), !dbg !3868
  %28 = icmp eq i8 %27, 0, !dbg !3870
  br i1 %28, label %29, label %5, !dbg !3871, !llvm.loop !3893

29:                                               ; preds = %13, %15, %22, %2
  %30 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ true, %13 ], !dbg !3868
  ret i1 %30, !dbg !3895
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_fmt_spec(i8 noundef zeroext %0) unnamed_addr #3 !dbg !3896 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !3900, metadata !DIExpression()), !dbg !3901
  %2 = add i8 %0, -64, !dbg !3902
  %3 = icmp ult i8 %2, 59, !dbg !3902
  ret i1 %3, !dbg !3903
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @cbprintf_package_convert(i8* noundef %0, i32 noundef %1, i32 (i8*, i32, i8*)* noundef %2, i8* noundef %3, i32 noundef %4, i16* noundef %5, i32 noundef %6) local_unnamed_addr #1 !dbg !3904 {
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  %10 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !3912, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %1, metadata !3913, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %2, metadata !3914, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8* %3, metadata !3915, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %4, metadata !3916, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i16* %5, metadata !3917, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %6, metadata !3918, metadata !DIExpression()), !dbg !3981
  %11 = icmp eq i8* %0, null, !dbg !3982
  br i1 %11, label %12, label %13, !dbg !3985

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !3986
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 916) #25, !dbg !3986
  unreachable, !dbg !3986

13:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i8* %0, metadata !3919, metadata !DIExpression()), !dbg !3981
  %14 = bitcast i8* %0 to i32*, !dbg !3988
  call void @llvm.dbg.value(metadata i32* %14, metadata !3920, metadata !DIExpression()), !dbg !3981
  %15 = and i32 %4, 8, !dbg !3989
  %16 = icmp eq i32 %15, 0, !dbg !3990
  call void @llvm.dbg.value(metadata i1 %16, metadata !3924, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3981
  call void @llvm.dbg.value(metadata i8* %0, metadata !3927, metadata !DIExpression()), !dbg !3981
  %17 = icmp eq i32 %1, 0, !dbg !3991
  br i1 %17, label %18, label %20, !dbg !3992

18:                                               ; preds = %13
  %19 = tail call fastcc i32 @get_package_len(i8* noundef nonnull %0) #24, !dbg !3993
  br label %20, !dbg !3992

20:                                               ; preds = %13, %18
  %21 = phi i32 [ %19, %18 ], [ %1, %13 ], !dbg !3992
  call void @llvm.dbg.value(metadata i32 %21, metadata !3913, metadata !DIExpression()), !dbg !3981
  %22 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !3994
  %23 = load i8, i8* %22, align 1, !dbg !3994
  %24 = zext i8 %23 to i32, !dbg !3995
  call void @llvm.dbg.value(metadata i32 %24, metadata !3922, metadata !DIExpression()), !dbg !3981
  %25 = icmp ne i8 %23, 0, !dbg !3996
  %26 = and i32 %4, 1, !dbg !3997
  %27 = icmp ne i32 %26, 0, !dbg !3997
  %28 = and i1 %27, %25, !dbg !3997
  call void @llvm.dbg.value(metadata i1 %28, metadata !3926, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3981
  %29 = getelementptr inbounds i8, i8* %0, i32 3, !dbg !3998
  %30 = load i8, i8* %29, align 1, !dbg !3998
  %31 = zext i8 %30 to i32, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %31, metadata !3923, metadata !DIExpression()), !dbg !3981
  %32 = icmp ne i8 %30, 0, !dbg !4000
  %33 = and i32 %4, 2, !dbg !4001
  %34 = icmp ne i32 %33, 0, !dbg !4001
  %35 = and i1 %34, %32, !dbg !4001
  call void @llvm.dbg.value(metadata i1 %35, metadata !3925, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !3981
  %36 = select i1 %35, i1 true, i1 %28, !dbg !4002
  br i1 %36, label %41, label %37, !dbg !4002

37:                                               ; preds = %20
  %38 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4004
  br i1 %38, label %287, label %39, !dbg !4007

39:                                               ; preds = %37
  %40 = tail call i32 %2(i8* noundef nonnull %0, i32 noundef %21, i8* noundef %3) #25, !dbg !4008
  br label %287, !dbg !4010

41:                                               ; preds = %20
  %42 = load i8, i8* %0, align 1, !dbg !4011
  %43 = zext i8 %42 to i32, !dbg !4012
  %44 = shl nuw nsw i32 %43, 2, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %44, metadata !3921, metadata !DIExpression()), !dbg !3981
  %45 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !4014
  %46 = bitcast i8* %45 to i8**, !dbg !4015
  %47 = load i8*, i8** %46, align 4, !dbg !4015
  call void @llvm.dbg.value(metadata i8* %47, metadata !3930, metadata !DIExpression()), !dbg !3981
  %48 = getelementptr inbounds i8, i8* %0, i32 %44, !dbg !4016
  call void @llvm.dbg.value(metadata i8* %48, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 0, metadata !3932, metadata !DIExpression()), !dbg !3981
  %49 = icmp eq i32 (i8*, i32, i8*)* %2, null, !dbg !4017
  br i1 %49, label %50, label %135, !dbg !4018

50:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %21, metadata !3929, metadata !DIExpression()), !dbg !3981
  br i1 %28, label %51, label %76, !dbg !4019

51:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %21, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8* %48, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 0, metadata !3932, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 0, metadata !3933, metadata !DIExpression()), !dbg !4020
  %52 = icmp ne i16* %5, null
  br label %53, !dbg !4021

53:                                               ; preds = %51, %70
  %54 = phi i32 [ %21, %51 ], [ %72, %70 ]
  %55 = phi i8* [ %48, %51 ], [ %73, %70 ]
  %56 = phi i32 [ 0, %51 ], [ %71, %70 ]
  %57 = phi i32 [ 0, %51 ], [ %74, %70 ]
  call void @llvm.dbg.value(metadata i32 %54, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8* %55, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %56, metadata !3932, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %57, metadata !3933, metadata !DIExpression()), !dbg !4020
  %58 = load i8, i8* %55, align 1, !dbg !4022
  %59 = zext i8 %58 to i32, !dbg !4023
  %60 = getelementptr inbounds i32, i32* %14, i32 %59, !dbg !4023
  %61 = bitcast i32* %60 to i8**, !dbg !4024
  %62 = load i8*, i8** %61, align 4, !dbg !4024
  call void @llvm.dbg.value(metadata i8* %62, metadata !3939, metadata !DIExpression()), !dbg !4025
  %63 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %62, i16 noundef zeroext 0) #24, !dbg !4026
  call void @llvm.dbg.value(metadata i32 %63, metadata !3942, metadata !DIExpression()), !dbg !4025
  %64 = icmp ult i32 %56, %6
  %65 = select i1 %52, i1 %64, i1 false, !dbg !4027
  br i1 %65, label %66, label %70, !dbg !4027

66:                                               ; preds = %53
  %67 = trunc i32 %63 to i16, !dbg !4029
  %68 = add nuw i32 %56, 1, !dbg !4031
  call void @llvm.dbg.value(metadata i32 %68, metadata !3932, metadata !DIExpression()), !dbg !3981
  %69 = getelementptr inbounds i16, i16* %5, i32 %56, !dbg !4032
  store i16 %67, i16* %69, align 2, !dbg !4033
  br label %70, !dbg !4034

70:                                               ; preds = %66, %53
  %71 = phi i32 [ %68, %66 ], [ %56, %53 ], !dbg !3981
  call void @llvm.dbg.value(metadata i32 %71, metadata !3932, metadata !DIExpression()), !dbg !3981
  %72 = add nsw i32 %63, %54, !dbg !4035
  call void @llvm.dbg.value(metadata i32 %72, metadata !3929, metadata !DIExpression()), !dbg !3981
  %73 = getelementptr inbounds i8, i8* %55, i32 1, !dbg !4036
  call void @llvm.dbg.value(metadata i8* %73, metadata !3931, metadata !DIExpression()), !dbg !3981
  %74 = add nuw nsw i32 %57, 1, !dbg !4037
  call void @llvm.dbg.value(metadata i32 %74, metadata !3933, metadata !DIExpression()), !dbg !4020
  %75 = icmp eq i32 %74, %24, !dbg !4038
  br i1 %75, label %82, label %53, !dbg !4021, !llvm.loop !4039

76:                                               ; preds = %50
  %77 = and i32 %4, 4
  %78 = icmp ne i32 %77, 0
  %79 = and i1 %78, %25, !dbg !4041
  %80 = select i1 %79, i32 %24, i32 0, !dbg !4041
  %81 = getelementptr i8, i8* %48, i32 %80, !dbg !4041
  br label %82, !dbg !4041

82:                                               ; preds = %70, %76
  %83 = phi i32 [ 0, %76 ], [ %71, %70 ], !dbg !4044
  %84 = phi i8* [ %81, %76 ], [ %73, %70 ], !dbg !3981
  %85 = phi i32 [ %21, %76 ], [ %72, %70 ], !dbg !4045
  call void @llvm.dbg.value(metadata i1 undef, metadata !3943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4046
  call void @llvm.dbg.value(metadata i32 0, metadata !3944, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.value(metadata i32 %85, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8* %84, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %83, metadata !3932, metadata !DIExpression()), !dbg !3981
  %86 = icmp eq i8 %30, 0, !dbg !4048
  br i1 %86, label %287, label %87, !dbg !4049

87:                                               ; preds = %82
  %88 = and i32 %4, 5, !dbg !4050
  %89 = icmp eq i32 %88, 0, !dbg !4051
  call void @llvm.dbg.value(metadata i1 %89, metadata !3943, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4046
  %90 = icmp eq i32 %33, 0
  %91 = icmp eq i32 %26, 0
  %92 = icmp ne i16* %5, null
  %93 = select i1 %89, i32 -2, i32 -1
  br label %94, !dbg !4049

94:                                               ; preds = %87, %130
  %95 = phi i32 [ %85, %87 ], [ %132, %130 ]
  %96 = phi i8* [ %84, %87 ], [ %100, %130 ]
  %97 = phi i32 [ %83, %87 ], [ %131, %130 ]
  %98 = phi i32 [ 0, %87 ], [ %133, %130 ]
  call void @llvm.dbg.value(metadata i32 %95, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8* %96, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %97, metadata !3932, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %98, metadata !3944, metadata !DIExpression()), !dbg !4047
  %99 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !4052
  call void @llvm.dbg.value(metadata i8* %99, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8 undef, metadata !3946, metadata !DIExpression()), !dbg !4053
  %100 = getelementptr inbounds i8, i8* %96, i32 2, !dbg !4054
  call void @llvm.dbg.value(metadata i8* %100, metadata !3931, metadata !DIExpression()), !dbg !3981
  %101 = load i8, i8* %99, align 1, !dbg !4055
  call void @llvm.dbg.value(metadata i8 %101, metadata !3949, metadata !DIExpression()), !dbg !4053
  %102 = zext i8 %101 to i32, !dbg !4056
  %103 = getelementptr inbounds i32, i32* %14, i32 %102, !dbg !4056
  %104 = bitcast i32* %103 to i8**, !dbg !4057
  %105 = load i8*, i8** %104, align 4, !dbg !4057
  call void @llvm.dbg.value(metadata i8* %105, metadata !3950, metadata !DIExpression()), !dbg !4053
  %106 = tail call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %105) #24, !dbg !4058
  call void @llvm.dbg.value(metadata i1 %106, metadata !3951, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4053
  br i1 %16, label %113, label %107, !dbg !4059

107:                                              ; preds = %94
  %108 = load i8, i8* %96, align 1, !dbg !4061
  call void @llvm.dbg.value(metadata i8 %108, metadata !3946, metadata !DIExpression()), !dbg !4053
  %109 = zext i8 %108 to i32, !dbg !4062
  %110 = tail call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %109) #24, !dbg !4063
  br i1 %110, label %111, label %113, !dbg !4064

111:                                              ; preds = %107
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([168 x i8], [168 x i8]* @.str.9, i32 0, i32 0), i32 noundef 87, i8* noundef %47, i32 noundef %109) #25, !dbg !4065
  %112 = add nsw i32 %95, -2, !dbg !4071
  call void @llvm.dbg.value(metadata i32 %112, metadata !3929, metadata !DIExpression()), !dbg !3981
  br label %130, !dbg !4072

113:                                              ; preds = %107, %94
  br i1 %106, label %114, label %117, !dbg !4073

114:                                              ; preds = %113
  br i1 %91, label %115, label %118, !dbg !4074

115:                                              ; preds = %114
  %116 = add i32 %95, %93, !dbg !4076
  call void @llvm.dbg.value(metadata i32 %116, metadata !3929, metadata !DIExpression()), !dbg !3981
  br label %130, !dbg !4079

117:                                              ; preds = %113
  br i1 %90, label %130, label %118, !dbg !4080

118:                                              ; preds = %117, %114
  call void @llvm.dbg.label(metadata !3977), !dbg !4081
  %119 = tail call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef null, i8* noundef null, i8* noundef %105, i16 noundef zeroext 0) #24, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %119, metadata !3952, metadata !DIExpression()), !dbg !4053
  %120 = icmp ult i32 %97, %6
  %121 = select i1 %92, i1 %120, i1 false, !dbg !4083
  br i1 %121, label %122, label %126, !dbg !4083

122:                                              ; preds = %118
  %123 = trunc i32 %119 to i16, !dbg !4085
  %124 = add nuw i32 %97, 1, !dbg !4087
  call void @llvm.dbg.value(metadata i32 %124, metadata !3932, metadata !DIExpression()), !dbg !3981
  %125 = getelementptr inbounds i16, i16* %5, i32 %97, !dbg !4088
  store i16 %123, i16* %125, align 2, !dbg !4089
  br label %126, !dbg !4090

126:                                              ; preds = %122, %118
  %127 = phi i32 [ %124, %122 ], [ %97, %118 ], !dbg !3981
  call void @llvm.dbg.value(metadata i32 %127, metadata !3932, metadata !DIExpression()), !dbg !3981
  %128 = add i32 %95, -1, !dbg !4091
  %129 = add i32 %128, %119, !dbg !4092
  call void @llvm.dbg.value(metadata i32 %129, metadata !3929, metadata !DIExpression()), !dbg !3981
  br label %130, !dbg !4093

130:                                              ; preds = %115, %126, %117, %111
  %131 = phi i32 [ %97, %111 ], [ %127, %126 ], [ %97, %115 ], [ %97, %117 ], !dbg !3981
  %132 = phi i32 [ %112, %111 ], [ %129, %126 ], [ %116, %115 ], [ %95, %117 ], !dbg !4053
  call void @llvm.dbg.value(metadata i32 %132, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %131, metadata !3932, metadata !DIExpression()), !dbg !3981
  %133 = add nuw nsw i32 %98, 1, !dbg !4094
  call void @llvm.dbg.value(metadata i8* %100, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %133, metadata !3944, metadata !DIExpression()), !dbg !4047
  %134 = icmp eq i32 %133, %31, !dbg !4048
  br i1 %134, label %287, label %94, !dbg !4049, !llvm.loop !4095

135:                                              ; preds = %41
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !3954, metadata !DIExpression()), !dbg !4097
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !3955, metadata !DIExpression()), !dbg !4098
  br i1 %28, label %136, label %138, !dbg !4099

136:                                              ; preds = %135
  call void @llvm.dbg.value(metadata i8 %23, metadata !3956, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8 0, metadata !3957, metadata !DIExpression()), !dbg !3981
  %137 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !4100
  call void @llvm.dbg.value(metadata i8* %137, metadata !3958, metadata !DIExpression()), !dbg !3981
  br label %143, !dbg !4103

138:                                              ; preds = %135
  %139 = and i32 %4, 4
  %140 = icmp ne i32 %139, 0
  %141 = and i1 %140, %25, !dbg !4104
  %142 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0
  br i1 %141, label %143, label %148, !dbg !4104

143:                                              ; preds = %136, %138
  %144 = phi i8 [ 0, %138 ], [ %23, %136 ]
  %145 = phi i8 [ %23, %138 ], [ 0, %136 ]
  %146 = phi i8* [ %142, %138 ], [ %137, %136 ]
  call void @llvm.dbg.value(metadata i8* null, metadata !3958, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8 undef, metadata !3957, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8 0, metadata !3956, metadata !DIExpression()), !dbg !3981
  %147 = call i8* @memcpy(i8* noundef nonnull %146, i8* noundef nonnull %48, i32 noundef %24) #25, !dbg !4106
  br label %148, !dbg !4109

148:                                              ; preds = %138, %143
  %149 = phi i8 [ %145, %143 ], [ 0, %138 ]
  %150 = phi i8 [ %144, %143 ], [ 0, %138 ]
  %151 = getelementptr inbounds i8, i8* %48, i32 %24, !dbg !4110
  call void @llvm.dbg.value(metadata i8* %151, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 0, metadata !3960, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i8 %149, metadata !3957, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8 %150, metadata !3956, metadata !DIExpression()), !dbg !3981
  %152 = icmp eq i8 %30, 0, !dbg !4112
  br i1 %152, label %153, label %155, !dbg !4113

153:                                              ; preds = %148
  %154 = and i32 %4, 4, !dbg !4114
  br label %160, !dbg !4113

155:                                              ; preds = %148
  %156 = icmp eq i32 %33, 0
  %157 = icmp eq i32 %26, 0
  %158 = and i32 %4, 4
  %159 = icmp eq i32 %158, 0
  br label %179, !dbg !4113

160:                                              ; preds = %235, %153
  %161 = phi i32 [ %154, %153 ], [ %158, %235 ], !dbg !4114
  %162 = phi i8 [ %150, %153 ], [ %236, %235 ], !dbg !4115
  %163 = phi i8 [ %149, %153 ], [ %237, %235 ], !dbg !4116
  %164 = phi i8* [ %151, %153 ], [ %186, %235 ], !dbg !3981
  call void @llvm.dbg.value(metadata i8 undef, metadata !3953, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 8)), !dbg !3981
  %165 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4117
  %166 = load i8, i8* %165, align 1, !dbg !4117
  %167 = zext i8 %162 to i32, !dbg !4118
  %168 = add i8 %166, %162, !dbg !4119
  call void @llvm.dbg.value(metadata i8 %168, metadata !3953, metadata !DIExpression(DW_OP_LLVM_fragment, 8, 8)), !dbg !3981
  %169 = icmp eq i32 %33, 0, !dbg !4120
  %170 = lshr i8 %163, 1, !dbg !4121
  %171 = select i1 %169, i8 %170, i8 0, !dbg !4121
  call void @llvm.dbg.value(metadata i8 %171, metadata !3953, metadata !DIExpression(DW_OP_LLVM_fragment, 24, 8)), !dbg !3981
  %172 = icmp eq i32 %26, 0, !dbg !4122
  %173 = icmp eq i32 %161, 0, !dbg !4114
  %174 = select i1 %173, i8 0, i8 %163, !dbg !4114
  %175 = select i1 %172, i8 %174, i8 0, !dbg !4114
  call void @llvm.dbg.value(metadata i8 %175, metadata !3953, metadata !DIExpression(DW_OP_LLVM_fragment, 16, 8)), !dbg !3981
  call void @llvm.dbg.declare(metadata %struct.cbprintf_package_desc* undef, metadata !3968, metadata !DIExpression()), !dbg !4123
  %176 = load i32, i32* %14, align 1, !dbg !4124
  store i8 %168, i8* %165, align 1, !dbg !4125
  store i8 %175, i8* %22, align 1, !dbg !4125
  store i8 %171, i8* %29, align 1, !dbg !4125
  %177 = call i32 %2(i8* noundef nonnull %0, i32 noundef %44, i8* noundef %3) #25, !dbg !4126
  call void @llvm.dbg.value(metadata i32 %177, metadata !3959, metadata !DIExpression()), !dbg !3981
  %178 = icmp slt i32 %177, 0, !dbg !4127
  br i1 %178, label %287, label %240, !dbg !4129

179:                                              ; preds = %155, %235
  %180 = phi i8* [ %151, %155 ], [ %186, %235 ]
  %181 = phi i32 [ 0, %155 ], [ %238, %235 ]
  %182 = phi i8 [ %149, %155 ], [ %237, %235 ]
  %183 = phi i8 [ %150, %155 ], [ %236, %235 ]
  call void @llvm.dbg.value(metadata i8* %180, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %181, metadata !3960, metadata !DIExpression()), !dbg !4111
  call void @llvm.dbg.value(metadata i8 %182, metadata !3957, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8 %183, metadata !3956, metadata !DIExpression()), !dbg !3981
  %184 = getelementptr inbounds i8, i8* %180, i32 1, !dbg !4130
  call void @llvm.dbg.value(metadata i8* %184, metadata !3931, metadata !DIExpression()), !dbg !3981
  %185 = load i8, i8* %180, align 1, !dbg !4131
  call void @llvm.dbg.value(metadata i8 %185, metadata !3962, metadata !DIExpression()), !dbg !4132
  %186 = getelementptr inbounds i8, i8* %180, i32 2, !dbg !4133
  call void @llvm.dbg.value(metadata i8* %186, metadata !3931, metadata !DIExpression()), !dbg !3981
  %187 = load i8, i8* %184, align 1, !dbg !4134
  call void @llvm.dbg.value(metadata i8 %187, metadata !3965, metadata !DIExpression()), !dbg !4132
  %188 = zext i8 %187 to i32, !dbg !4135
  %189 = getelementptr inbounds i32, i32* %14, i32 %188, !dbg !4135
  %190 = bitcast i32* %189 to i8**, !dbg !4136
  %191 = load i8*, i8** %190, align 4, !dbg !4136
  call void @llvm.dbg.value(metadata i8* %191, metadata !3966, metadata !DIExpression()), !dbg !4132
  %192 = call fastcc zeroext i1 @ptr_in_rodata(i8* noundef %191) #24, !dbg !4137
  call void @llvm.dbg.value(metadata i1 %192, metadata !3967, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4132
  br i1 %16, label %196, label %193, !dbg !4138

193:                                              ; preds = %179
  %194 = zext i8 %185 to i32, !dbg !4140
  %195 = call zeroext i1 @is_ptr(i8* noundef %47, i32 noundef %194) #24, !dbg !4141
  br i1 %195, label %235, label %196, !dbg !4142

196:                                              ; preds = %193, %179
  br i1 %192, label %197, label %213, !dbg !4143

197:                                              ; preds = %196
  br i1 %157, label %205, label %198, !dbg !4144

198:                                              ; preds = %197
  %199 = icmp ult i8 %183, 16, !dbg !4147
  br i1 %199, label %201, label %200, !dbg !4152

200:                                              ; preds = %198
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4153
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1086) #25, !dbg !4153
  unreachable, !dbg !4153

201:                                              ; preds = %198
  %202 = zext i8 %183 to i32, !dbg !4147
  %203 = add nuw nsw i8 %183, 1, !dbg !4155
  call void @llvm.dbg.value(metadata i8 %203, metadata !3956, metadata !DIExpression()), !dbg !3981
  %204 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %202, !dbg !4156
  br label %231, !dbg !4157

205:                                              ; preds = %197
  br i1 %159, label %235, label %206, !dbg !4158

206:                                              ; preds = %205
  %207 = icmp ult i8 %182, 16, !dbg !4159
  br i1 %207, label %209, label %208, !dbg !4164

208:                                              ; preds = %206
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4165
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1089) #25, !dbg !4165
  unreachable, !dbg !4165

209:                                              ; preds = %206
  %210 = zext i8 %182 to i32, !dbg !4159
  %211 = add nuw nsw i8 %182, 1, !dbg !4167
  call void @llvm.dbg.value(metadata i8 %211, metadata !3957, metadata !DIExpression()), !dbg !3981
  %212 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %210, !dbg !4168
  br label %231, !dbg !4169

213:                                              ; preds = %196
  br i1 %156, label %221, label %214, !dbg !4170

214:                                              ; preds = %213
  %215 = icmp ult i8 %183, 16, !dbg !4172
  br i1 %215, label %217, label %216, !dbg !4177

216:                                              ; preds = %214
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4178
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1096) #25, !dbg !4178
  unreachable, !dbg !4178

217:                                              ; preds = %214
  %218 = zext i8 %183 to i32, !dbg !4172
  %219 = add nuw nsw i8 %183, 1, !dbg !4180
  call void @llvm.dbg.value(metadata i8 %219, metadata !3956, metadata !DIExpression()), !dbg !3981
  %220 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %218, !dbg !4181
  br label %231, !dbg !4182

221:                                              ; preds = %213
  %222 = icmp ult i8 %182, 16, !dbg !4183
  br i1 %222, label %224, label %223, !dbg !4187

223:                                              ; preds = %221
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4188
  call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 1099) #25, !dbg !4188
  unreachable, !dbg !4188

224:                                              ; preds = %221
  %225 = zext i8 %182 to i32, !dbg !4183
  %226 = add nuw nsw i8 %182, 1, !dbg !4190
  call void @llvm.dbg.value(metadata i8 %226, metadata !3957, metadata !DIExpression()), !dbg !3981
  %227 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %225, !dbg !4191
  store i8 %185, i8* %227, align 1, !dbg !4192
  %228 = add nuw nsw i8 %182, 2, !dbg !4193
  call void @llvm.dbg.value(metadata i8 %228, metadata !3957, metadata !DIExpression()), !dbg !3981
  %229 = zext i8 %226 to i32, !dbg !4194
  %230 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %229, !dbg !4194
  br label %231

231:                                              ; preds = %217, %224, %201, %209
  %232 = phi i8* [ %212, %209 ], [ %204, %201 ], [ %230, %224 ], [ %220, %217 ]
  %233 = phi i8 [ %183, %209 ], [ %203, %201 ], [ %183, %224 ], [ %219, %217 ]
  %234 = phi i8 [ %211, %209 ], [ %182, %201 ], [ %228, %224 ], [ %182, %217 ]
  store i8 %187, i8* %232, align 1, !dbg !4195
  br label %235, !dbg !4196

235:                                              ; preds = %231, %205, %193
  %236 = phi i8 [ %183, %193 ], [ %183, %205 ], [ %233, %231 ], !dbg !3981
  %237 = phi i8 [ %182, %193 ], [ %182, %205 ], [ %234, %231 ], !dbg !4116
  call void @llvm.dbg.value(metadata i8 %237, metadata !3957, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i8 %236, metadata !3956, metadata !DIExpression()), !dbg !3981
  %238 = add nuw nsw i32 %181, 1, !dbg !4196
  call void @llvm.dbg.value(metadata i8* %186, metadata !3931, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 %238, metadata !3960, metadata !DIExpression()), !dbg !4111
  %239 = icmp eq i32 %238, %31, !dbg !4112
  br i1 %239, label %160, label %179, !dbg !4113, !llvm.loop !4197

240:                                              ; preds = %160
  %241 = zext i8 %163 to i32, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %177, metadata !3929, metadata !DIExpression()), !dbg !3981
  store i32 %176, i32* %14, align 1, !dbg !4199
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !4200
  %243 = call i32 %2(i8* noundef nonnull %242, i32 noundef %241, i8* noundef %3) #25, !dbg !4201
  call void @llvm.dbg.value(metadata i32 %243, metadata !3959, metadata !DIExpression()), !dbg !3981
  %244 = icmp slt i32 %243, 0, !dbg !4202
  br i1 %244, label %287, label %245, !dbg !4204

245:                                              ; preds = %240
  call void @llvm.dbg.value(metadata !DIArgList(i32 %177, i32 %243), metadata !3929, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3981
  %246 = mul nsw i32 %31, -2
  %247 = add i32 %21, %246, !dbg !4205
  %248 = add nuw nsw i32 %44, %24, !dbg !4205
  %249 = sub i32 %247, %248, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %249, metadata !3969, metadata !DIExpression()), !dbg !3981
  %250 = call i32 %2(i8* noundef %164, i32 noundef %249, i8* noundef %3) #25, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %250, metadata !3959, metadata !DIExpression()), !dbg !3981
  %251 = icmp slt i32 %250, 0, !dbg !4207
  br i1 %251, label %287, label %252, !dbg !4209

252:                                              ; preds = %245
  %253 = add nuw nsw i32 %243, %177, !dbg !4210
  call void @llvm.dbg.value(metadata i32 %253, metadata !3929, metadata !DIExpression()), !dbg !3981
  %254 = add nuw nsw i32 %253, %250, !dbg !4211
  call void @llvm.dbg.value(metadata i32 %254, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.value(metadata i32 0, metadata !3970, metadata !DIExpression()), !dbg !4212
  %255 = icmp eq i8 %162, 0, !dbg !4213
  br i1 %255, label %284, label %256, !dbg !4214

256:                                              ; preds = %252
  %257 = icmp eq i16* %5, null
  br label %258, !dbg !4214

258:                                              ; preds = %256, %279
  %259 = phi i32 [ 0, %256 ], [ %282, %279 ]
  %260 = phi i32 [ %254, %256 ], [ %281, %279 ]
  call void @llvm.dbg.value(metadata i32 %259, metadata !3970, metadata !DIExpression()), !dbg !4212
  call void @llvm.dbg.value(metadata i32 %260, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4215
  %261 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %259, !dbg !4216
  %262 = load i8, i8* %261, align 1, !dbg !4216
  call void @llvm.dbg.value(metadata i8 %262, metadata !3972, metadata !DIExpression()), !dbg !4217
  store i8 %262, i8* %10, align 1, !dbg !4218
  %263 = zext i8 %262 to i32, !dbg !4219
  %264 = getelementptr inbounds i32, i32* %14, i32 %263, !dbg !4219
  %265 = bitcast i32* %264 to i8**, !dbg !4220
  %266 = load i8*, i8** %265, align 4, !dbg !4220
  call void @llvm.dbg.value(metadata i8* %266, metadata !3975, metadata !DIExpression()), !dbg !4217
  br i1 %257, label %270, label %267, !dbg !4221

267:                                              ; preds = %258
  %268 = getelementptr inbounds i16, i16* %5, i32 %259, !dbg !4222
  %269 = load i16, i16* %268, align 2, !dbg !4222
  br label %270, !dbg !4221

270:                                              ; preds = %258, %267
  %271 = phi i16 [ %269, %267 ], [ 0, %258 ], !dbg !4221
  call void @llvm.dbg.value(metadata i32 undef, metadata !3976, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4217
  call void @llvm.dbg.value(metadata i8* %10, metadata !3972, metadata !DIExpression(DW_OP_deref)), !dbg !4217
  %272 = call i32 %2(i8* noundef nonnull %10, i32 noundef 1, i8* noundef %3) #25, !dbg !4223
  call void @llvm.dbg.value(metadata i32 %272, metadata !3959, metadata !DIExpression()), !dbg !3981
  %273 = icmp slt i32 %272, 0, !dbg !4224
  br i1 %273, label %277, label %274, !dbg !4226

274:                                              ; preds = %270
  call void @llvm.dbg.value(metadata i16 %271, metadata !3976, metadata !DIExpression()), !dbg !4217
  call void @llvm.dbg.value(metadata !DIArgList(i32 %260, i32 %272), metadata !3929, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3981
  %275 = call fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef nonnull %2, i8* noundef %3, i8* noundef %266, i16 noundef zeroext %271) #24, !dbg !4227
  call void @llvm.dbg.value(metadata i32 %275, metadata !3959, metadata !DIExpression()), !dbg !3981
  %276 = icmp slt i32 %275, 0, !dbg !4228
  br i1 %276, label %277, label %279, !dbg !4230

277:                                              ; preds = %274, %270
  %278 = phi i32 [ %275, %274 ], [ %272, %270 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4231
  call void @llvm.dbg.value(metadata i32 undef, metadata !3929, metadata !DIExpression()), !dbg !3981
  br label %287

279:                                              ; preds = %274
  %280 = add nsw i32 %272, %260, !dbg !4232
  call void @llvm.dbg.value(metadata i32 %280, metadata !3929, metadata !DIExpression()), !dbg !3981
  %281 = add nsw i32 %280, %275, !dbg !4233
  call void @llvm.dbg.value(metadata i32 %281, metadata !3929, metadata !DIExpression()), !dbg !3981
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !4231
  %282 = add nuw nsw i32 %259, 1, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %282, metadata !3970, metadata !DIExpression()), !dbg !4212
  %283 = icmp eq i32 %282, %167, !dbg !4213
  br i1 %283, label %284, label %258, !dbg !4214, !llvm.loop !4235

284:                                              ; preds = %279, %252
  %285 = phi i32 [ %254, %252 ], [ %281, %279 ], !dbg !4211
  call void @llvm.dbg.value(metadata i32 %285, metadata !3929, metadata !DIExpression()), !dbg !3981
  %286 = call i32 %2(i8* noundef null, i32 noundef 0, i8* noundef %3) #25, !dbg !4237
  br label %287, !dbg !4238

287:                                              ; preds = %130, %82, %277, %284, %160, %240, %245, %37, %39
  %288 = phi i32 [ %21, %39 ], [ %21, %37 ], [ %285, %284 ], [ %177, %160 ], [ %243, %240 ], [ %250, %245 ], [ %278, %277 ], [ %85, %82 ], [ %132, %130 ], !dbg !3981
  ret i32 %288, !dbg !4239
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @get_package_len(i8* noundef %0) unnamed_addr #1 !dbg !4240 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4244, metadata !DIExpression()), !dbg !4252
  %2 = icmp eq i8* %0, null, !dbg !4253
  br i1 %2, label %3, label %4, !dbg !4256

3:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.7, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4257
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.9, i32 0, i32 0), i32 noundef 198) #25, !dbg !4257
  unreachable, !dbg !4257

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i8* %0, metadata !4245, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.value(metadata i8* %0, metadata !4246, metadata !DIExpression()), !dbg !4252
  %5 = load i8, i8* %0, align 1, !dbg !4259
  %6 = zext i8 %5 to i32, !dbg !4259
  %7 = shl nuw nsw i32 %6, 2, !dbg !4260
  call void @llvm.dbg.value(metadata i32 %7, metadata !4247, metadata !DIExpression()), !dbg !4252
  %8 = getelementptr inbounds i8, i8* %0, i32 1, !dbg !4261
  %9 = load i8, i8* %8, align 1, !dbg !4261
  %10 = zext i8 %9 to i32, !dbg !4261
  call void @llvm.dbg.value(metadata i32 %10, metadata !4248, metadata !DIExpression()), !dbg !4252
  %11 = getelementptr inbounds i8, i8* %0, i32 2, !dbg !4262
  %12 = load i8, i8* %11, align 1, !dbg !4262
  %13 = zext i8 %12 to i32, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %13, metadata !4249, metadata !DIExpression()), !dbg !4252
  %14 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !4263
  call void @llvm.dbg.value(metadata i8* %14, metadata !4245, metadata !DIExpression()), !dbg !4252
  %15 = getelementptr inbounds i8, i8* %14, i32 %13, !dbg !4264
  call void @llvm.dbg.value(metadata i8* %15, metadata !4245, metadata !DIExpression()), !dbg !4252
  call void @llvm.dbg.value(metadata i32 0, metadata !4250, metadata !DIExpression()), !dbg !4265
  %16 = icmp eq i8 %9, 0, !dbg !4266
  br i1 %16, label %17, label %22, !dbg !4268

17:                                               ; preds = %22, %4
  %18 = phi i8* [ %15, %4 ], [ %28, %22 ], !dbg !4252
  %19 = ptrtoint i8* %18 to i32, !dbg !4269
  %20 = ptrtoint i8* %0 to i32, !dbg !4269
  %21 = sub i32 %19, %20, !dbg !4269
  ret i32 %21, !dbg !4270

22:                                               ; preds = %4, %22
  %23 = phi i32 [ %29, %22 ], [ 0, %4 ]
  %24 = phi i8* [ %28, %22 ], [ %15, %4 ]
  call void @llvm.dbg.value(metadata i32 %23, metadata !4250, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.value(metadata i8* %24, metadata !4245, metadata !DIExpression()), !dbg !4252
  %25 = getelementptr inbounds i8, i8* %24, i32 1, !dbg !4271
  call void @llvm.dbg.value(metadata i8* %25, metadata !4245, metadata !DIExpression()), !dbg !4252
  %26 = tail call i32 @strlen(i8* noundef nonnull %25) #25, !dbg !4273
  %27 = add i32 %26, 1, !dbg !4274
  %28 = getelementptr inbounds i8, i8* %25, i32 %27, !dbg !4275
  call void @llvm.dbg.value(metadata i8* %28, metadata !4245, metadata !DIExpression()), !dbg !4252
  %29 = add nuw nsw i32 %23, 1, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %29, metadata !4250, metadata !DIExpression()), !dbg !4265
  %30 = icmp eq i32 %29, %10, !dbg !4266
  br i1 %30, label %17, label %22, !dbg !4268, !llvm.loop !4277
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @append_string(i32 (i8*, i32, i8*)* noundef readonly %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3) unnamed_addr #1 !dbg !4279 {
  call void @llvm.dbg.value(metadata i32 (i8*, i32, i8*)* %0, metadata !4283, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8* %1, metadata !4284, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i8* %2, metadata !4285, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.value(metadata i16 %3, metadata !4286, metadata !DIExpression()), !dbg !4287
  %5 = icmp eq i32 (i8*, i32, i8*)* %0, null, !dbg !4288
  br i1 %5, label %6, label %9, !dbg !4290

6:                                                ; preds = %4
  %7 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4291
  %8 = add i32 %7, 1, !dbg !4293
  br label %20, !dbg !4294

9:                                                ; preds = %4
  %10 = icmp eq i16 %3, 0, !dbg !4295
  br i1 %10, label %13, label %11, !dbg !4296

11:                                               ; preds = %9
  %12 = zext i16 %3 to i32, !dbg !4296
  br label %16, !dbg !4296

13:                                               ; preds = %9
  %14 = tail call i32 @strlen(i8* noundef %2) #25, !dbg !4297
  %15 = add i32 %14, 1, !dbg !4298
  br label %16, !dbg !4296

16:                                               ; preds = %13, %11
  %17 = phi i32 [ %12, %11 ], [ %15, %13 ], !dbg !4296
  %18 = and i32 %17, 65535, !dbg !4299
  call void @llvm.dbg.value(metadata i32 %17, metadata !4286, metadata !DIExpression()), !dbg !4287
  %19 = tail call i32 %0(i8* noundef %2, i32 noundef %18, i8* noundef %1) #25, !dbg !4300
  br label %20, !dbg !4301

20:                                               ; preds = %16, %6
  %21 = phi i32 [ %8, %6 ], [ %19, %16 ], !dbg !4287
  ret i32 %21, !dbg !4302
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @arch_printk_char_out(i32 noundef %0) #1 !dbg !4303 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4305, metadata !DIExpression()), !dbg !4306
  ret i32 0, !dbg !4307
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__printk_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !4308 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !4312, metadata !DIExpression()), !dbg !4313
  store i32 (i32)* %0, i32 (i32)** @_char_out, align 4, !dbg !4314
  ret void, !dbg !4315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i8* @__printk_get_hook() local_unnamed_addr #8 !dbg !4316 {
  %1 = load i8*, i8** bitcast (i32 (i32)** @_char_out to i8**), align 4, !dbg !4319
  ret i8* %1, !dbg !4320
}

; Function Attrs: noinline nounwind optsize
define dso_local void @vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !4321 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4332, metadata !DIExpression()), !dbg !4343
  call void @llvm.dbg.value(metadata i8* %0, metadata !4331, metadata !DIExpression()), !dbg !4343
  tail call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, i8*)* @char_out to i32 (...)*), i8* noundef null, i8* noundef %0, [1 x i32] %1) #24, !dbg !4344
  ret void, !dbg !4346
}

; Function Attrs: noinline nounwind optsize
define internal i32 @char_out(i32 noundef %0, i8* nocapture noundef readnone %1) #1 !dbg !4347 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4351, metadata !DIExpression()), !dbg !4353
  call void @llvm.dbg.value(metadata i8* %1, metadata !4352, metadata !DIExpression()), !dbg !4353
  %3 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4354
  %4 = tail call i32 %3(i32 noundef %0) #25, !dbg !4354
  ret i32 %4, !dbg !4355
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @cbvprintf(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3) unnamed_addr #1 !dbg !4356 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !4363, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4360, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i8* %1, metadata !4361, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.value(metadata i8* %2, metadata !4362, metadata !DIExpression()), !dbg !4364
  %5 = tail call i32 @z_cbvprintf_impl(i32 (...)* noundef %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef 0) #25, !dbg !4365
  ret void, !dbg !4366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_str_out(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !4367 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !4371, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i32 %1, metadata !4372, metadata !DIExpression()), !dbg !4374
  call void @llvm.dbg.value(metadata i32 0, metadata !4373, metadata !DIExpression()), !dbg !4374
  %3 = icmp eq i32 %1, 0, !dbg !4375
  br i1 %3, label %13, label %4, !dbg !4378

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %11, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !4373, metadata !DIExpression()), !dbg !4374
  %6 = load i32 (i32)*, i32 (i32)** @_char_out, align 4, !dbg !4379
  %7 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !4381
  %8 = load i8, i8* %7, align 1, !dbg !4381
  %9 = zext i8 %8 to i32, !dbg !4381
  %10 = tail call i32 %6(i32 noundef %9) #25, !dbg !4379
  %11 = add nuw i32 %5, 1, !dbg !4382
  call void @llvm.dbg.value(metadata i32 %11, metadata !4373, metadata !DIExpression()), !dbg !4374
  %12 = icmp eq i32 %11, %1, !dbg !4375
  br i1 %12, label %13, label %4, !dbg !4378, !llvm.loop !4383

13:                                               ; preds = %4, %2
  ret void, !dbg !4385
}

; Function Attrs: noinline nounwind optsize
define dso_local void @printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !4386 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4390, metadata !DIExpression()), !dbg !4392
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !4393
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4393
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !4391, metadata !DIExpression()), !dbg !4394
  call void @llvm.va_start(i8* nonnull %3), !dbg !4395
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !4396
  %5 = load i32, i32* %4, align 4, !dbg !4396
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !4396
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #24, !dbg !4396
  call void @llvm.va_end(i8* nonnull %3), !dbg !4397
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4398
  ret void, !dbg !4398
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @snprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #1 !dbg !4399 {
  %4 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4403, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i32 %1, metadata !4404, metadata !DIExpression()), !dbg !4408
  call void @llvm.dbg.value(metadata i8* %2, metadata !4405, metadata !DIExpression()), !dbg !4408
  %5 = bitcast %struct.__va_list* %4 to i8*, !dbg !4409
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4409
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !4406, metadata !DIExpression()), !dbg !4410
  call void @llvm.va_start(i8* nonnull %5), !dbg !4411
  %6 = bitcast %struct.__va_list* %4 to i32*, !dbg !4412
  %7 = load i32, i32* %6, align 4, !dbg !4412
  %8 = insertvalue [1 x i32] poison, i32 %7, 0, !dbg !4412
  %9 = call i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %8) #24, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %9, metadata !4407, metadata !DIExpression()), !dbg !4408
  call void @llvm.va_end(i8* nonnull %5), !dbg !4413
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4414
  ret i32 %9, !dbg !4415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vsnprintk(i8* noundef %0, i32 noundef %1, i8* noundef %2, [1 x i32] %3) local_unnamed_addr #1 !dbg !4416 {
  %5 = alloca %struct.str_context, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4423, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.value(metadata i8* %0, metadata !4420, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.value(metadata i32 %1, metadata !4421, metadata !DIExpression()), !dbg !4430
  call void @llvm.dbg.value(metadata i8* %2, metadata !4422, metadata !DIExpression()), !dbg !4430
  %6 = bitcast %struct.str_context* %5 to i8*, !dbg !4431
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4431
  call void @llvm.dbg.declare(metadata %struct.str_context* %5, metadata !4424, metadata !DIExpression()), !dbg !4432
  %7 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 0, !dbg !4433
  store i8* %0, i8** %7, align 4, !dbg !4433
  %8 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 1, !dbg !4433
  store i32 %1, i32* %8, align 4, !dbg !4433
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %5, i32 0, i32 2, !dbg !4433
  store i32 0, i32* %9, align 4, !dbg !4433
  call fastcc void @cbvprintf(i32 (...)* noundef bitcast (i32 (i32, %struct.str_context*)* @str_out to i32 (...)*), i8* noundef nonnull %6, i8* noundef %2, [1 x i32] %3) #24, !dbg !4434
  %10 = load i32, i32* %9, align 4, !dbg !4435
  %11 = load i32, i32* %8, align 4, !dbg !4437
  %12 = icmp slt i32 %10, %11, !dbg !4438
  br i1 %12, label %13, label %15, !dbg !4439

13:                                               ; preds = %4
  %14 = getelementptr inbounds i8, i8* %0, i32 %10, !dbg !4440
  store i8 0, i8* %14, align 1, !dbg !4442
  br label %15, !dbg !4443

15:                                               ; preds = %13, %4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %6) #23, !dbg !4444
  ret i32 %10, !dbg !4445
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal i32 @str_out(i32 noundef returned %0, %struct.str_context* nocapture noundef %1) #9 !dbg !4446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4451, metadata !DIExpression()), !dbg !4453
  call void @llvm.dbg.value(metadata %struct.str_context* %1, metadata !4452, metadata !DIExpression()), !dbg !4453
  %3 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 0, !dbg !4454
  %4 = load i8*, i8** %3, align 4, !dbg !4454
  %5 = icmp eq i8* %4, null, !dbg !4456
  %6 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2
  %7 = load i32, i32* %6, align 4, !dbg !4457
  br i1 %5, label %12, label %8, !dbg !4458

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 1, !dbg !4459
  %10 = load i32, i32* %9, align 4, !dbg !4459
  %11 = icmp slt i32 %7, %10, !dbg !4460
  br i1 %11, label %15, label %12, !dbg !4461

12:                                               ; preds = %2, %8
  %13 = getelementptr inbounds %struct.str_context, %struct.str_context* %1, i32 0, i32 2, !dbg !4462
  %14 = add nsw i32 %7, 1, !dbg !4464
  store i32 %14, i32* %13, align 4, !dbg !4464
  br label %25, !dbg !4465

15:                                               ; preds = %8
  %16 = add nsw i32 %10, -1, !dbg !4466
  %17 = icmp eq i32 %7, %16, !dbg !4468
  br i1 %17, label %18, label %21, !dbg !4469

18:                                               ; preds = %15
  %19 = add nsw i32 %7, 1, !dbg !4470
  store i32 %19, i32* %6, align 4, !dbg !4470
  %20 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4472
  store i8 0, i8* %20, align 1, !dbg !4473
  br label %25, !dbg !4474

21:                                               ; preds = %15
  %22 = trunc i32 %0 to i8, !dbg !4475
  %23 = add nsw i32 %7, 1, !dbg !4477
  store i32 %23, i32* %6, align 4, !dbg !4477
  %24 = getelementptr inbounds i8, i8* %4, i32 %7, !dbg !4478
  store i8 %22, i8* %24, align 1, !dbg !4479
  br label %25

25:                                               ; preds = %18, %21, %12
  ret i32 %0, !dbg !4480
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_thread_entry(void (i8*, i8*, i8*)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #10 !dbg !4481 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !4486, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %1, metadata !4487, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %2, metadata !4488, metadata !DIExpression()), !dbg !4490
  call void @llvm.dbg.value(metadata i8* %3, metadata !4489, metadata !DIExpression()), !dbg !4490
  tail call void %0(i8* noundef %1, i8* noundef %2, i8* noundef %3) #25, !dbg !4491
  %5 = tail call fastcc %struct.k_thread* @k_current_get() #26, !dbg !4492
  tail call fastcc void @k_thread_abort(%struct.k_thread* noundef %5) #24, !dbg !4493
  unreachable, !dbg !4494
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get() unnamed_addr #11 !dbg !4495 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get() #26, !dbg !4602
  ret %struct.k_thread* %1, !dbg !4603
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !4604 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !4608, metadata !DIExpression()), !dbg !4609
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4610, !srcloc !4612
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !4613
  ret void, !dbg !4614
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get() unnamed_addr #11 !dbg !4615 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !4616, !srcloc !4618
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !4619
  ret %struct.k_thread* %1, !dbg !4620
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_cbvprintf_impl(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef %2, [1 x i32] %3, i32 noundef %4) local_unnamed_addr #1 !dbg !4621 {
  %6 = alloca [22 x i8], align 1
  %7 = alloca %struct.anon, align 8
  %8 = extractvalue [1 x i32] %3, 0
  %9 = inttoptr i32 %8 to i8*
  call void @llvm.dbg.value(metadata i8* %9, metadata !4634, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !4631, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %1, metadata !4632, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %2, metadata !4633, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %4, metadata !4635, metadata !DIExpression()), !dbg !4760
  %10 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 0, !dbg !4761
  call void @llvm.lifetime.start.p0i8(i64 22, i8* nonnull %10) #23, !dbg !4761
  call void @llvm.dbg.declare(metadata [22 x i8]* %6, metadata !4636, metadata !DIExpression()), !dbg !4762
  call void @llvm.dbg.value(metadata i32 0, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i1 undef, metadata !4642, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4760
  %11 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  %12 = bitcast %struct.anon* %7 to i8*
  %13 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1
  %14 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 22
  %15 = bitcast %struct.conversion* %13 to i24*
  %16 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 2, i32 0
  %17 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 3, i32 0
  %18 = bitcast %struct.anon* %7 to i8**
  %19 = bitcast %struct.anon* %7 to double*
  %20 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 1, i32 1
  %22 = ptrtoint i8* %14 to i32
  %23 = getelementptr inbounds [22 x i8], [22 x i8]* %6, i32 0, i32 1
  br label %24, !dbg !4763

24:                                               ; preds = %363, %5
  %25 = phi i32 [ %364, %363 ], [ 0, %5 ]
  %26 = phi i8* [ %39, %363 ], [ %2, %5 ]
  %27 = phi i8* [ %178, %363 ], [ %9, %5 ]
  br label %28, !dbg !4763

28:                                               ; preds = %24, %32
  %29 = phi i32 [ %37, %32 ], [ %25, %24 ], !dbg !4764
  %30 = phi i8* [ %34, %32 ], [ %26, %24 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !4634, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %30, metadata !4633, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %29, metadata !4640, metadata !DIExpression()), !dbg !4760
  %31 = load i8, i8* %30, align 1, !dbg !4765
  switch i8 %31, label %32 [
    i8 0, label %365
    i8 37, label %38
  ], !dbg !4763

32:                                               ; preds = %28
  %33 = zext i8 %31 to i32, !dbg !4765
  %34 = getelementptr inbounds i8, i8* %30, i32 1, !dbg !4766
  call void @llvm.dbg.value(metadata i8* %34, metadata !4633, metadata !DIExpression()), !dbg !4760
  %35 = call i32 %11(i32 noundef %33, i8* noundef %1) #25, !dbg !4766
  call void @llvm.dbg.value(metadata i32 %35, metadata !4644, metadata !DIExpression()), !dbg !4767
  %36 = icmp slt i32 %35, 0, !dbg !4768
  %37 = add i32 %29, 1, !dbg !4766
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %36, label %365, label %28, !llvm.loop !4770

38:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4772
  call void @llvm.dbg.declare(metadata %struct.anon* %7, metadata !4649, metadata !DIExpression()), !dbg !4773
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 8 dereferenceable(24) %12, i8 0, i32 24, i1 false), !dbg !4773
  call void @llvm.dbg.value(metadata %struct.conversion* %13, metadata !4692, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata %struct.anon* %7, metadata !4695, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %30, metadata !4698, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 -1, metadata !4699, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 -1, metadata !4700, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* null, metadata !4701, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %14, metadata !4702, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 0, metadata !4703, metadata !DIExpression()), !dbg !4774
  %39 = call fastcc i8* @extract_conversion(%struct.conversion* noundef nonnull %13, i8* noundef nonnull %30) #24, !dbg !4775
  call void @llvm.dbg.value(metadata i8* %39, metadata !4633, metadata !DIExpression()), !dbg !4760
  %40 = load i24, i24* %15, align 8, !dbg !4776
  %41 = and i24 %40, 256, !dbg !4776
  %42 = icmp eq i24 %41, 0, !dbg !4776
  br i1 %42, label %51, label %43, !dbg !4778

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !4779
  call void @llvm.dbg.value(metadata i8* %44, metadata !4634, metadata !DIExpression()), !dbg !4760
  %45 = bitcast i8* %27 to i32*, !dbg !4779
  %46 = load i32, i32* %45, align 4, !dbg !4779
  call void @llvm.dbg.value(metadata i32 %46, metadata !4699, metadata !DIExpression()), !dbg !4774
  %47 = icmp slt i32 %46, 0, !dbg !4781
  br i1 %47, label %48, label %56, !dbg !4783

48:                                               ; preds = %43
  %49 = or i24 %40, 4, !dbg !4784
  store i24 %49, i24* %15, align 8, !dbg !4784
  %50 = sub nsw i32 0, %46, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %50, metadata !4699, metadata !DIExpression()), !dbg !4774
  br label %56, !dbg !4787

51:                                               ; preds = %38
  %52 = and i24 %40, 128, !dbg !4788
  %53 = icmp eq i24 %52, 0, !dbg !4788
  %54 = load i32, i32* %16, align 4
  %55 = select i1 %53, i32 -1, i32 %54, !dbg !4790
  br label %56, !dbg !4790

56:                                               ; preds = %51, %43, %48
  %57 = phi i24 [ %49, %48 ], [ %40, %43 ], [ %40, %51 ], !dbg !4791
  %58 = phi i32 [ %50, %48 ], [ %46, %43 ], [ %55, %51 ], !dbg !4774
  %59 = phi i8* [ %44, %48 ], [ %44, %43 ], [ %27, %51 ]
  call void @llvm.dbg.value(metadata i8* %59, metadata !4634, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %58, metadata !4699, metadata !DIExpression()), !dbg !4774
  %60 = and i24 %57, 1024, !dbg !4791
  %61 = icmp eq i24 %60, 0, !dbg !4791
  br i1 %61, label %69, label %62, !dbg !4792

62:                                               ; preds = %56
  %63 = getelementptr inbounds i8, i8* %59, i32 4, !dbg !4793
  call void @llvm.dbg.value(metadata i8* %63, metadata !4634, metadata !DIExpression()), !dbg !4760
  %64 = bitcast i8* %59 to i32*, !dbg !4793
  %65 = load i32, i32* %64, align 4, !dbg !4793
  call void @llvm.dbg.value(metadata i32 %65, metadata !4704, metadata !DIExpression()), !dbg !4794
  %66 = icmp slt i32 %65, 0, !dbg !4795
  br i1 %66, label %67, label %74, !dbg !4797

67:                                               ; preds = %62
  %68 = and i24 %57, -513, !dbg !4798
  store i24 %68, i24* %15, align 8, !dbg !4798
  br label %74, !dbg !4800

69:                                               ; preds = %56
  %70 = and i24 %57, 512, !dbg !4801
  %71 = icmp eq i24 %70, 0, !dbg !4801
  %72 = load i32, i32* %17, align 8
  %73 = select i1 %71, i32 -1, i32 %72, !dbg !4803
  br label %74, !dbg !4803

74:                                               ; preds = %69, %67, %62
  %75 = phi i24 [ %68, %67 ], [ %57, %62 ], [ %57, %69 ], !dbg !4804
  %76 = phi i32 [ -1, %67 ], [ %65, %62 ], [ %73, %69 ], !dbg !4774
  %77 = phi i8* [ %63, %67 ], [ %63, %62 ], [ %59, %69 ], !dbg !4774
  call void @llvm.dbg.value(metadata i8* %77, metadata !4634, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %76, metadata !4700, metadata !DIExpression()), !dbg !4774
  store i32 0, i32* %16, align 4, !dbg !4805
  store i32 0, i32* %17, align 8, !dbg !4806
  %78 = lshr i24 %75, 16, !dbg !4804
  call void @llvm.dbg.value(metadata i24 %78, metadata !4707, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_LLVM_convert, 24, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4774
  %79 = lshr i24 %75, 11, !dbg !4807
  %80 = and i24 %79, 15, !dbg !4807
  %81 = zext i24 %80 to i32, !dbg !4807
  call void @llvm.dbg.value(metadata i32 %81, metadata !4708, metadata !DIExpression()), !dbg !4774
  %82 = trunc i24 %78 to i3, !dbg !4808
  switch i3 %82, label %177 [
    i3 1, label %83
    i3 2, label %125
    i3 -4, label %165
    i3 3, label %173
  ], !dbg !4808

83:                                               ; preds = %74
  switch i32 %81, label %84 [
    i32 7, label %110
    i32 6, label %110
    i32 5, label %102
    i32 3, label %89
    i32 4, label %94
  ], !dbg !4809

84:                                               ; preds = %83
  %85 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4812
  call void @llvm.dbg.value(metadata i8* %85, metadata !4634, metadata !DIExpression()), !dbg !4760
  %86 = bitcast i8* %77 to i32*, !dbg !4812
  %87 = load i32, i32* %86, align 4, !dbg !4812
  %88 = sext i32 %87 to i64, !dbg !4812
  store i64 %88, i64* %20, align 8, !dbg !4814
  br label %115, !dbg !4815

89:                                               ; preds = %83
  %90 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4816
  call void @llvm.dbg.value(metadata i8* %90, metadata !4634, metadata !DIExpression()), !dbg !4760
  %91 = bitcast i8* %77 to i32*, !dbg !4816
  %92 = load i32, i32* %91, align 4, !dbg !4816
  %93 = sext i32 %92 to i64, !dbg !4816
  store i64 %93, i64* %20, align 8, !dbg !4819
  br label %115, !dbg !4820

94:                                               ; preds = %83
  %95 = ptrtoint i8* %77 to i32, !dbg !4821
  %96 = add i32 %95, 7, !dbg !4821
  %97 = and i32 %96, -8, !dbg !4821
  %98 = inttoptr i32 %97 to i8*, !dbg !4821
  %99 = getelementptr inbounds i8, i8* %98, i32 8, !dbg !4821
  call void @llvm.dbg.value(metadata i8* %99, metadata !4634, metadata !DIExpression()), !dbg !4760
  %100 = inttoptr i32 %97 to i64*, !dbg !4821
  %101 = load i64, i64* %100, align 8, !dbg !4821
  store i64 %101, i64* %20, align 8, !dbg !4822
  br label %115, !dbg !4823

102:                                              ; preds = %83
  %103 = ptrtoint i8* %77 to i32, !dbg !4824
  %104 = add i32 %103, 7, !dbg !4824
  %105 = and i32 %104, -8, !dbg !4824
  %106 = inttoptr i32 %105 to i8*, !dbg !4824
  %107 = getelementptr inbounds i8, i8* %106, i32 8, !dbg !4824
  call void @llvm.dbg.value(metadata i8* %107, metadata !4634, metadata !DIExpression()), !dbg !4760
  %108 = inttoptr i32 %105 to i64*, !dbg !4824
  %109 = load i64, i64* %108, align 8, !dbg !4824
  store i64 %109, i64* %20, align 8, !dbg !4825
  br label %115, !dbg !4826

110:                                              ; preds = %83, %83
  %111 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4827
  call void @llvm.dbg.value(metadata i8* %111, metadata !4634, metadata !DIExpression()), !dbg !4760
  %112 = bitcast i8* %77 to i32*, !dbg !4827
  %113 = load i32, i32* %112, align 4, !dbg !4827
  %114 = sext i32 %113 to i64, !dbg !4828
  store i64 %114, i64* %20, align 8, !dbg !4829
  br label %115, !dbg !4830

115:                                              ; preds = %110, %102, %94, %89, %84
  %116 = phi i64 [ %88, %84 ], [ %101, %94 ], [ %93, %89 ], [ %109, %102 ], [ %114, %110 ]
  %117 = phi i8* [ %85, %84 ], [ %99, %94 ], [ %90, %89 ], [ %107, %102 ], [ %111, %110 ], !dbg !4831
  call void @llvm.dbg.value(metadata i8* %117, metadata !4634, metadata !DIExpression()), !dbg !4760
  %118 = trunc i24 %79 to i4, !dbg !4832
  switch i4 %118, label %177 [
    i4 1, label %119
    i4 2, label %122
  ], !dbg !4832

119:                                              ; preds = %115
  %120 = shl i64 %116, 56, !dbg !4833
  %121 = ashr exact i64 %120, 56, !dbg !4833
  store i64 %121, i64* %20, align 8, !dbg !4836
  br label %177, !dbg !4837

122:                                              ; preds = %115
  %123 = shl i64 %116, 48, !dbg !4838
  %124 = ashr exact i64 %123, 48, !dbg !4838
  store i64 %124, i64* %20, align 8, !dbg !4841
  br label %177, !dbg !4842

125:                                              ; preds = %74
  switch i32 %81, label %126 [
    i32 7, label %152
    i32 6, label %152
    i32 5, label %144
    i32 3, label %131
    i32 4, label %136
  ], !dbg !4843

126:                                              ; preds = %125
  %127 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4846
  call void @llvm.dbg.value(metadata i8* %127, metadata !4634, metadata !DIExpression()), !dbg !4760
  %128 = bitcast i8* %77 to i32*, !dbg !4846
  %129 = load i32, i32* %128, align 4, !dbg !4846
  %130 = zext i32 %129 to i64, !dbg !4846
  store i64 %130, i64* %20, align 8, !dbg !4848
  br label %157, !dbg !4849

131:                                              ; preds = %125
  %132 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4850
  call void @llvm.dbg.value(metadata i8* %132, metadata !4634, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %132, metadata !4634, metadata !DIExpression()), !dbg !4760
  %133 = bitcast i8* %77 to i32*, !dbg !4850
  %134 = load i32, i32* %133, align 4, !dbg !4850
  %135 = zext i32 %134 to i64, !dbg !4850
  store i64 %135, i64* %20, align 8, !dbg !4850
  br label %157

136:                                              ; preds = %125
  %137 = ptrtoint i8* %77 to i32, !dbg !4852
  %138 = add i32 %137, 7, !dbg !4852
  %139 = and i32 %138, -8, !dbg !4852
  %140 = inttoptr i32 %139 to i8*, !dbg !4852
  %141 = getelementptr inbounds i8, i8* %140, i32 8, !dbg !4852
  call void @llvm.dbg.value(metadata i8* %141, metadata !4634, metadata !DIExpression()), !dbg !4760
  %142 = inttoptr i32 %139 to i64*, !dbg !4852
  %143 = load i64, i64* %142, align 8, !dbg !4852
  store i64 %143, i64* %20, align 8, !dbg !4853
  br label %157, !dbg !4854

144:                                              ; preds = %125
  %145 = ptrtoint i8* %77 to i32, !dbg !4855
  %146 = add i32 %145, 7, !dbg !4855
  %147 = and i32 %146, -8, !dbg !4855
  %148 = inttoptr i32 %147 to i8*, !dbg !4855
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4855
  call void @llvm.dbg.value(metadata i8* %149, metadata !4634, metadata !DIExpression()), !dbg !4760
  %150 = inttoptr i32 %147 to i64*, !dbg !4855
  %151 = load i64, i64* %150, align 8, !dbg !4855
  store i64 %151, i64* %20, align 8, !dbg !4856
  br label %157, !dbg !4857

152:                                              ; preds = %125, %125
  %153 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4858
  call void @llvm.dbg.value(metadata i8* %153, metadata !4634, metadata !DIExpression()), !dbg !4760
  %154 = bitcast i8* %77 to i32*, !dbg !4858
  %155 = load i32, i32* %154, align 4, !dbg !4858
  %156 = zext i32 %155 to i64, !dbg !4859
  store i64 %156, i64* %20, align 8, !dbg !4860
  br label %157, !dbg !4861

157:                                              ; preds = %131, %152, %144, %136, %126
  %158 = phi i64 [ %130, %126 ], [ %143, %136 ], [ %151, %144 ], [ %156, %152 ], [ %135, %131 ]
  %159 = phi i8* [ %127, %126 ], [ %141, %136 ], [ %149, %144 ], [ %153, %152 ], [ %132, %131 ], !dbg !4862
  call void @llvm.dbg.value(metadata i8* %159, metadata !4634, metadata !DIExpression()), !dbg !4760
  %160 = trunc i24 %79 to i4, !dbg !4863
  switch i4 %160, label %177 [
    i4 1, label %161
    i4 2, label %163
  ], !dbg !4863

161:                                              ; preds = %157
  %162 = and i64 %158, 255, !dbg !4864
  store i64 %162, i64* %20, align 8, !dbg !4867
  br label %177, !dbg !4868

163:                                              ; preds = %157
  %164 = and i64 %158, 65535, !dbg !4869
  store i64 %164, i64* %20, align 8, !dbg !4872
  br label %177, !dbg !4873

165:                                              ; preds = %74
  %166 = ptrtoint i8* %77 to i32, !dbg !4874
  %167 = add i32 %166, 7, !dbg !4874
  %168 = and i32 %167, -8, !dbg !4874
  %169 = inttoptr i32 %168 to i8*, !dbg !4874
  %170 = getelementptr inbounds i8, i8* %169, i32 8, !dbg !4874
  call void @llvm.dbg.value(metadata i8* %170, metadata !4634, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %170, metadata !4634, metadata !DIExpression()), !dbg !4760
  %171 = inttoptr i32 %168 to double*, !dbg !4874
  %172 = load double, double* %171, align 8, !dbg !4874
  store double %172, double* %19, align 8, !dbg !4874
  br label %177

173:                                              ; preds = %74
  %174 = getelementptr inbounds i8, i8* %77, i32 4, !dbg !4878
  call void @llvm.dbg.value(metadata i8* %174, metadata !4634, metadata !DIExpression()), !dbg !4760
  %175 = bitcast i8* %77 to i8**, !dbg !4878
  %176 = load i8*, i8** %175, align 4, !dbg !4878
  store i8* %176, i8** %18, align 8, !dbg !4881
  br label %177, !dbg !4882

177:                                              ; preds = %165, %74, %157, %115, %163, %161, %173, %119, %122
  %178 = phi i8* [ %117, %119 ], [ %117, %122 ], [ %159, %161 ], [ %159, %163 ], [ %174, %173 ], [ %117, %115 ], [ %159, %157 ], [ %77, %74 ], [ %170, %165 ], !dbg !4774
  call void @llvm.dbg.value(metadata i8* %178, metadata !4634, metadata !DIExpression()), !dbg !4760
  %179 = and i24 %75, 3, !dbg !4883
  %180 = icmp eq i24 %179, 0, !dbg !4883
  br i1 %180, label %185, label %181, !dbg !4883

181:                                              ; preds = %177
  %182 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %30, i8* noundef nonnull %39) #24, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %182, metadata !4709, metadata !DIExpression()), !dbg !4885
  %183 = icmp slt i32 %182, 0, !dbg !4886
  %184 = add i32 %182, %29, !dbg !4884
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %183, label %361, label %363

185:                                              ; preds = %177
  %186 = load i8, i8* %21, align 1, !dbg !4888
  switch i8 %186, label %363 [
    i8 37, label %187
    i8 115, label %191
    i8 99, label %198
    i8 100, label %201
    i8 105, label %201
    i8 111, label %212
    i8 117, label %212
    i8 120, label %212
    i8 88, label %212
    i8 112, label %230
    i8 110, label %239
  ], !dbg !4889

187:                                              ; preds = %185
  %188 = call i32 %11(i32 noundef 37, i8* noundef %1) #25, !dbg !4890
  call void @llvm.dbg.value(metadata i32 %188, metadata !4713, metadata !DIExpression()), !dbg !4891
  %189 = icmp slt i32 %188, 0, !dbg !4892
  %190 = add i32 %29, 1, !dbg !4890
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %189, label %361, label %363

191:                                              ; preds = %185
  %192 = load i8*, i8** %18, align 8, !dbg !4894
  call void @llvm.dbg.value(metadata i8* %192, metadata !4701, metadata !DIExpression()), !dbg !4774
  %193 = icmp sgt i32 %76, -1, !dbg !4895
  br i1 %193, label %194, label %196, !dbg !4897

194:                                              ; preds = %191
  %195 = call i32 @strnlen(i8* noundef %192, i32 noundef %76) #25, !dbg !4898
  call void @llvm.dbg.value(metadata i32 %195, metadata !4716, metadata !DIExpression()), !dbg !4900
  br label %241, !dbg !4901

196:                                              ; preds = %191
  %197 = call i32 @strlen(i8* noundef %192) #25, !dbg !4902
  call void @llvm.dbg.value(metadata i32 %197, metadata !4716, metadata !DIExpression()), !dbg !4900
  br label %241

198:                                              ; preds = %185
  call void @llvm.dbg.value(metadata i8* %10, metadata !4701, metadata !DIExpression()), !dbg !4774
  %199 = load i64, i64* %20, align 8, !dbg !4904
  %200 = trunc i64 %199 to i8, !dbg !4905
  store i8 %200, i8* %10, align 1, !dbg !4906
  call void @llvm.dbg.value(metadata i8* %23, metadata !4702, metadata !DIExpression()), !dbg !4774
  br label %245, !dbg !4907

201:                                              ; preds = %185, %185
  %202 = and i24 %75, 8, !dbg !4908
  %203 = icmp eq i24 %202, 0, !dbg !4908
  %204 = trunc i24 %75 to i8, !dbg !4910
  %205 = shl i8 %204, 1, !dbg !4910
  %206 = and i8 %205, 32, !dbg !4910
  %207 = select i1 %203, i8 %206, i8 43, !dbg !4910
  call void @llvm.dbg.value(metadata i8 %207, metadata !4703, metadata !DIExpression()), !dbg !4774
  %208 = load i64, i64* %20, align 8, !dbg !4911
  call void @llvm.dbg.value(metadata i64 %208, metadata !4641, metadata !DIExpression()), !dbg !4760
  %209 = icmp slt i64 %208, 0, !dbg !4912
  br i1 %209, label %210, label %212, !dbg !4914

210:                                              ; preds = %201
  call void @llvm.dbg.value(metadata i8 45, metadata !4703, metadata !DIExpression()), !dbg !4774
  %211 = sub nsw i64 0, %208, !dbg !4915
  store i64 %211, i64* %20, align 8, !dbg !4917
  br label %212, !dbg !4918

212:                                              ; preds = %201, %210, %185, %185, %185, %185
  %213 = phi i8 [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 0, %185 ], [ 45, %210 ], [ %207, %201 ], !dbg !4774
  call void @llvm.dbg.value(metadata i8 %213, metadata !4703, metadata !DIExpression()), !dbg !4774
  %214 = load i64, i64* %20, align 8, !dbg !4919
  %215 = call fastcc i8* @encode_uint(i64 noundef %214, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4920
  call void @llvm.dbg.value(metadata i8* %215, metadata !4701, metadata !DIExpression()), !dbg !4774
  br label %216, !dbg !4921

216:                                              ; preds = %233, %212
  %217 = phi i8 [ 0, %233 ], [ %213, %212 ], !dbg !4922
  %218 = phi i8* [ %236, %233 ], [ %215, %212 ], !dbg !4923
  call void @llvm.dbg.value(metadata i8* %218, metadata !4701, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 %217, metadata !4703, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.label(metadata !4759), !dbg !4924
  %219 = icmp sgt i32 %76, -1, !dbg !4925
  br i1 %219, label %222, label %220, !dbg !4926

220:                                              ; preds = %216
  %221 = load i24, i24* %15, align 8, !dbg !4927
  br label %245, !dbg !4926

222:                                              ; preds = %216
  %223 = ptrtoint i8* %218 to i32, !dbg !4929
  %224 = sub i32 %22, %223, !dbg !4929
  call void @llvm.dbg.value(metadata i32 %224, metadata !4718, metadata !DIExpression()), !dbg !4930
  %225 = load i24, i24* %15, align 8, !dbg !4931
  %226 = and i24 %225, -65, !dbg !4931
  store i24 %226, i24* %15, align 8, !dbg !4931
  %227 = icmp ugt i32 %76, %224, !dbg !4932
  br i1 %227, label %228, label %245, !dbg !4934

228:                                              ; preds = %222
  %229 = sub nsw i32 %76, %224, !dbg !4935
  store i32 %229, i32* %16, align 4, !dbg !4937
  br label %245, !dbg !4938

230:                                              ; preds = %185
  %231 = load i8*, i8** %18, align 8, !dbg !4939
  %232 = icmp eq i8* %231, null, !dbg !4941
  br i1 %232, label %245, label %233, !dbg !4942

233:                                              ; preds = %230
  %234 = ptrtoint i8* %231 to i32, !dbg !4943
  %235 = zext i32 %234 to i64, !dbg !4943
  %236 = call fastcc i8* @encode_uint(i64 noundef %235, %struct.conversion* noundef nonnull %13, i8* noundef nonnull %10, i8* noundef nonnull %14) #24, !dbg !4945
  call void @llvm.dbg.value(metadata i8* %236, metadata !4701, metadata !DIExpression()), !dbg !4774
  %237 = load i24, i24* %15, align 8, !dbg !4946
  %238 = or i24 %237, 1048576, !dbg !4946
  store i24 %238, i24* %15, align 8, !dbg !4946
  store i8 120, i8* %21, align 1, !dbg !4947
  br label %216, !dbg !4948

239:                                              ; preds = %185
  %240 = load i8*, i8** %18, align 8, !dbg !4949
  call fastcc void @store_count(%struct.conversion* noundef nonnull %13, i8* noundef %240, i32 noundef %29) #24, !dbg !4952
  br label %363, !dbg !4953

241:                                              ; preds = %194, %196
  %242 = phi i32 [ %195, %194 ], [ %197, %196 ], !dbg !4954
  call void @llvm.dbg.value(metadata i32 %242, metadata !4716, metadata !DIExpression()), !dbg !4900
  %243 = getelementptr inbounds i8, i8* %192, i32 %242, !dbg !4955
  call void @llvm.dbg.value(metadata i32 -1, metadata !4700, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %29, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8* %192, metadata !4701, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8* %243, metadata !4702, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 0, metadata !4703, metadata !DIExpression()), !dbg !4774
  %244 = icmp eq i8* %192, null, !dbg !4956
  br i1 %244, label %363, label %245, !dbg !4958, !llvm.loop !4770

245:                                              ; preds = %220, %230, %222, %228, %198, %241
  %246 = phi i24 [ %75, %241 ], [ %75, %230 ], [ %226, %222 ], [ %226, %228 ], [ %75, %198 ], [ %221, %220 ], !dbg !4927
  %247 = phi i8* [ %192, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 0), %230 ], [ %218, %222 ], [ %218, %228 ], [ %10, %198 ], [ %218, %220 ]
  %248 = phi i8* [ %243, %241 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i32 0, i32 5), %230 ], [ %14, %222 ], [ %14, %228 ], [ %23, %198 ], [ %14, %220 ]
  %249 = phi i8 [ 0, %241 ], [ 0, %230 ], [ %217, %222 ], [ %217, %228 ], [ 0, %198 ], [ %217, %220 ]
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i8* %247), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4774
  call void @llvm.dbg.value(metadata i32 0, metadata !4722, metadata !DIExpression()), !dbg !4774
  %250 = zext i8 %249 to i32, !dbg !4959
  %251 = icmp eq i8 %249, 0, !dbg !4961
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i8* %247), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  call void @llvm.dbg.value(metadata i32 undef, metadata !4721, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 undef), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  call void @llvm.dbg.value(metadata i32 undef, metadata !4721, metadata !DIExpression()), !dbg !4774
  %252 = icmp sgt i32 %58, 0, !dbg !4962
  br i1 %252, label %253, label %302, !dbg !4963

253:                                              ; preds = %245
  %254 = and i24 %246, 1048576, !dbg !4927
  %255 = icmp eq i24 %254, 0, !dbg !4927
  %256 = ptrtoint i8* %248 to i32, !dbg !4964
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i8* %247), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  %257 = ptrtoint i8* %247 to i32, !dbg !4964
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %251, i32 %257), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %251, i32 %257), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  %258 = xor i1 %251, true, !dbg !4965
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  %259 = sext i1 %258 to i32, !dbg !4965
  call void @llvm.dbg.value(metadata !DIArgList(i8* %248, i1 %258, i8* %247), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i1 %258, i32 %257), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  %260 = lshr i24 %246, 19, !dbg !4966
  %261 = and i24 %260, 1, !dbg !4966
  %262 = select i1 %255, i24 %261, i24 2, !dbg !4966
  %263 = zext i24 %262 to i32, !dbg !4966
  %264 = add i32 %257, %259, !dbg !4966
  %265 = add i32 %256, %263, !dbg !4966
  call void @llvm.dbg.value(metadata !DIArgList(i32 %256, i32 undef, i32 %263, i1 %258, i32 %257), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 4, DW_OP_minus, DW_OP_LLVM_arg, 3, DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_plus, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  %266 = and i24 %246, 4194304, !dbg !4967
  %267 = icmp eq i24 %266, 0, !dbg !4967
  %268 = load i32, i32* %16, align 4, !dbg !4969
  call void @llvm.dbg.value(metadata !DIArgList(i32 undef, i32 %268), metadata !4721, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !4774
  call void @llvm.dbg.value(metadata i32 undef, metadata !4721, metadata !DIExpression()), !dbg !4774
  %269 = load i32, i32* %17, align 8, !dbg !4970
  %270 = select i1 %267, i32 0, i32 %269, !dbg !4970
  call void @llvm.dbg.value(metadata i32 undef, metadata !4721, metadata !DIExpression()), !dbg !4774
  %271 = add i32 %264, %58, !dbg !4970
  %272 = add i32 %265, %268, !dbg !4970
  %273 = add i32 %272, %270, !dbg !4971
  %274 = sub i32 %271, %273, !dbg !4971
  call void @llvm.dbg.value(metadata i32 %274, metadata !4699, metadata !DIExpression()), !dbg !4774
  %275 = and i24 %246, 4, !dbg !4972
  %276 = icmp eq i24 %275, 0, !dbg !4972
  br i1 %276, label %277, label %302, !dbg !4973

277:                                              ; preds = %253
  call void @llvm.dbg.value(metadata i8 32, metadata !4723, metadata !DIExpression()), !dbg !4974
  %278 = and i24 %246, 64, !dbg !4975
  %279 = icmp eq i24 %278, 0, !dbg !4975
  %280 = select i1 %279, i1 true, i1 %251, !dbg !4976
  %281 = select i1 %279, i8 %249, i8 0, !dbg !4976
  %282 = select i1 %279, i32 32, i32 48, !dbg !4976
  br i1 %280, label %287, label %283, !dbg !4976

283:                                              ; preds = %277
  %284 = call i32 %11(i32 noundef %250, i8* noundef %1) #25, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %284, metadata !4728, metadata !DIExpression()), !dbg !4978
  %285 = icmp slt i32 %284, 0, !dbg !4979
  %286 = add i32 %29, 1, !dbg !4977
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %285, label %361, label %287

287:                                              ; preds = %277, %283
  %288 = phi i8 [ %281, %277 ], [ 0, %283 ], !dbg !4774
  %289 = phi i32 [ %282, %277 ], [ 48, %283 ]
  %290 = phi i32 [ %29, %277 ], [ %286, %283 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %290, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i8 undef, metadata !4723, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.value(metadata i8 %288, metadata !4703, metadata !DIExpression()), !dbg !4774
  %291 = call i32 @llvm.smin.i32(i32 %274, i32 0), !dbg !4981
  %292 = add i32 %291, -1, !dbg !4981
  br label %293, !dbg !4981

293:                                              ; preds = %297, %287
  %294 = phi i32 [ %274, %287 ], [ %298, %297 ], !dbg !4982
  %295 = phi i32 [ %290, %287 ], [ %301, %297 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %295, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %294, metadata !4699, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i32 %294, metadata !4699, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4774
  %296 = icmp sgt i32 %294, 0, !dbg !4983
  br i1 %296, label %297, label %302, !dbg !4981

297:                                              ; preds = %293
  %298 = add nsw i32 %294, -1, !dbg !4984
  call void @llvm.dbg.value(metadata i32 %298, metadata !4699, metadata !DIExpression()), !dbg !4774
  %299 = call i32 %11(i32 noundef %289, i8* noundef %1) #25, !dbg !4985
  call void @llvm.dbg.value(metadata i32 %299, metadata !4734, metadata !DIExpression()), !dbg !4986
  %300 = icmp slt i32 %299, 0, !dbg !4987
  %301 = add i32 %295, 1, !dbg !4985
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %300, label %361, label %293, !llvm.loop !4989

302:                                              ; preds = %293, %253, %245
  %303 = phi i8 [ %249, %253 ], [ %249, %245 ], [ %288, %293 ], !dbg !4774
  %304 = phi i32 [ %274, %253 ], [ %58, %245 ], [ %292, %293 ], !dbg !4774
  %305 = phi i32 [ %29, %253 ], [ %29, %245 ], [ %295, %293 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %305, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %304, metadata !4699, metadata !DIExpression()), !dbg !4774
  call void @llvm.dbg.value(metadata i8 %303, metadata !4703, metadata !DIExpression()), !dbg !4774
  %306 = icmp eq i8 %303, 0, !dbg !4991
  br i1 %306, label %312, label %307, !dbg !4992

307:                                              ; preds = %302
  %308 = zext i8 %303 to i32, !dbg !4993
  %309 = call i32 %11(i32 noundef %308, i8* noundef %1) #25, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %309, metadata !4737, metadata !DIExpression()), !dbg !4995
  %310 = icmp slt i32 %309, 0, !dbg !4996
  %311 = add i32 %305, 1, !dbg !4994
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %310, label %361, label %312

312:                                              ; preds = %307, %302
  %313 = phi i32 [ %311, %307 ], [ %305, %302 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %313, metadata !4640, metadata !DIExpression()), !dbg !4760
  %314 = lshr i24 %246, 20, !dbg !4998
  %315 = lshr i24 %246, 19, !dbg !4999
  %316 = or i24 %314, %315, !dbg !5000
  %317 = and i24 %316, 1, !dbg !5000
  %318 = icmp eq i24 %317, 0, !dbg !5000
  br i1 %318, label %323, label %319, !dbg !5001

319:                                              ; preds = %312
  %320 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %320, metadata !4741, metadata !DIExpression()), !dbg !5003
  %321 = icmp slt i32 %320, 0, !dbg !5004
  %322 = add i32 %313, 1, !dbg !5002
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %321, label %361, label %323

323:                                              ; preds = %319, %312
  %324 = phi i32 [ %322, %319 ], [ %313, %312 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %324, metadata !4640, metadata !DIExpression()), !dbg !4760
  %325 = and i24 %246, 1048576, !dbg !5006
  %326 = icmp eq i24 %325, 0, !dbg !5006
  br i1 %326, label %333, label %327, !dbg !5007

327:                                              ; preds = %323
  %328 = load i8, i8* %21, align 1, !dbg !5008
  %329 = zext i8 %328 to i32, !dbg !5008
  %330 = call i32 %11(i32 noundef %329, i8* noundef %1) #25, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %330, metadata !4747, metadata !DIExpression()), !dbg !5009
  %331 = icmp slt i32 %330, 0, !dbg !5010
  %332 = add i32 %324, 1, !dbg !5008
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %331, label %361, label %333

333:                                              ; preds = %327, %323
  %334 = phi i32 [ %332, %327 ], [ %324, %323 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %334, metadata !4640, metadata !DIExpression()), !dbg !4760
  %335 = load i32, i32* %16, align 4, !dbg !5012
  call void @llvm.dbg.value(metadata i32 %335, metadata !4722, metadata !DIExpression()), !dbg !4774
  br label %336, !dbg !5013

336:                                              ; preds = %340, %333
  %337 = phi i32 [ %335, %333 ], [ %341, %340 ], !dbg !5014
  %338 = phi i32 [ %334, %333 ], [ %344, %340 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %338, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %337, metadata !4722, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4774
  %339 = icmp sgt i32 %337, 0, !dbg !5015
  br i1 %339, label %340, label %345, !dbg !5013

340:                                              ; preds = %336
  %341 = add nsw i32 %337, -1, !dbg !5016
  call void @llvm.dbg.value(metadata i32 %341, metadata !4722, metadata !DIExpression()), !dbg !4774
  %342 = call i32 %11(i32 noundef 48, i8* noundef %1) #25, !dbg !5017
  call void @llvm.dbg.value(metadata i32 %342, metadata !4751, metadata !DIExpression()), !dbg !5018
  %343 = icmp slt i32 %342, 0, !dbg !5019
  %344 = add i32 %338, 1, !dbg !5017
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %343, label %361, label %336, !llvm.loop !5021

345:                                              ; preds = %336
  %346 = call fastcc i32 @outs(i32 (...)* noundef %0, i8* noundef %1, i8* noundef nonnull %247, i8* noundef %248) #24, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %346, metadata !4754, metadata !DIExpression()), !dbg !5024
  %347 = icmp slt i32 %346, 0, !dbg !5025
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = add i32 %346, %338, !dbg !5023
  call void @llvm.dbg.value(metadata i32 %349, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %304, metadata !4699, metadata !DIExpression()), !dbg !4774
  %350 = icmp sgt i32 %304, 0, !dbg !5027
  br i1 %350, label %351, label %363, !dbg !5028

351:                                              ; preds = %348
  %352 = add nuw i32 %346, %304, !dbg !5028
  %353 = add i32 %352, %338, !dbg !5028
  br label %354, !dbg !5028

354:                                              ; preds = %351, %358
  %355 = phi i32 [ %359, %358 ], [ %304, %351 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %355, metadata !4699, metadata !DIExpression()), !dbg !4774
  %356 = call i32 %11(i32 noundef 32, i8* noundef %1) #25, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %356, metadata !4756, metadata !DIExpression()), !dbg !5030
  %357 = icmp slt i32 %356, 0, !dbg !5031
  br i1 %357, label %361, label %358

358:                                              ; preds = %354
  %359 = add nsw i32 %355, -1, !dbg !5033
  call void @llvm.dbg.value(metadata i32 undef, metadata !4640, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4760
  call void @llvm.dbg.value(metadata i32 %359, metadata !4699, metadata !DIExpression()), !dbg !4774
  %360 = icmp sgt i32 %355, 1, !dbg !5027
  br i1 %360, label %354, label %363, !dbg !5028, !llvm.loop !5034

361:                                              ; preds = %345, %327, %319, %307, %187, %283, %181, %297, %340, %354
  %362 = phi i32 [ %356, %354 ], [ %342, %340 ], [ %299, %297 ], [ %188, %187 ], [ %309, %307 ], [ %320, %319 ], [ %330, %327 ], [ %346, %345 ], [ %284, %283 ], [ %182, %181 ]
  call void @llvm.dbg.value(metadata i32 %364, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4771
  br label %365

363:                                              ; preds = %358, %348, %187, %239, %185, %181, %241
  %364 = phi i32 [ %29, %241 ], [ %184, %181 ], [ %190, %187 ], [ %29, %239 ], [ %29, %185 ], [ %349, %348 ], [ %353, %358 ], !dbg !4764
  call void @llvm.dbg.value(metadata i32 %364, metadata !4640, metadata !DIExpression()), !dbg !4760
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #23, !dbg !4771
  br label %24

365:                                              ; preds = %28, %32, %361
  %366 = phi i32 [ %362, %361 ], [ %29, %28 ], [ %35, %32 ], !dbg !4760
  call void @llvm.lifetime.end.p0i8(i64 22, i8* nonnull %10) #23, !dbg !5036
  ret i32 %366, !dbg !5036
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #12

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @extract_conversion(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5037 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5041, metadata !DIExpression()), !dbg !5043
  call void @llvm.dbg.value(metadata i8* %1, metadata !5042, metadata !DIExpression()), !dbg !5043
  %3 = bitcast %struct.conversion* %0 to i24*, !dbg !5044
  store i24 0, i24* %3, align 4, !dbg !5044
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5044
  store i8 0, i8* %4, align 1, !dbg !5044
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5044
  store i32 0, i32* %5, align 4, !dbg !5044
  %6 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5044
  store i32 0, i32* %6, align 4, !dbg !5044
  %7 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5045
  call void @llvm.dbg.value(metadata i8* %7, metadata !5042, metadata !DIExpression()), !dbg !5043
  %8 = load i8, i8* %7, align 1, !dbg !5046
  %9 = icmp eq i8 %8, 37, !dbg !5048
  br i1 %9, label %10, label %12, !dbg !5049

10:                                               ; preds = %2
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5050
  call void @llvm.dbg.value(metadata i8* %11, metadata !5042, metadata !DIExpression()), !dbg !5043
  store i8 37, i8* %4, align 1, !dbg !5052
  br label %18, !dbg !5053

12:                                               ; preds = %2
  %13 = tail call fastcc i8* @extract_flags(%struct.conversion* noundef nonnull %0, i8* noundef nonnull %7) #24, !dbg !5054
  call void @llvm.dbg.value(metadata i8* %13, metadata !5042, metadata !DIExpression()), !dbg !5043
  %14 = tail call fastcc i8* @extract_width(%struct.conversion* noundef nonnull %0, i8* noundef %13) #24, !dbg !5055
  call void @llvm.dbg.value(metadata i8* %14, metadata !5042, metadata !DIExpression()), !dbg !5043
  %15 = tail call fastcc i8* @extract_prec(%struct.conversion* noundef nonnull %0, i8* noundef %14) #24, !dbg !5056
  call void @llvm.dbg.value(metadata i8* %15, metadata !5042, metadata !DIExpression()), !dbg !5043
  %16 = tail call fastcc i8* @extract_length(%struct.conversion* noundef nonnull %0, i8* noundef %15) #24, !dbg !5057
  call void @llvm.dbg.value(metadata i8* %16, metadata !5042, metadata !DIExpression()), !dbg !5043
  %17 = tail call fastcc i8* @extract_specifier(%struct.conversion* noundef nonnull %0, i8* noundef %16) #24, !dbg !5058
  call void @llvm.dbg.value(metadata i8* %17, metadata !5042, metadata !DIExpression()), !dbg !5043
  br label %18, !dbg !5059

18:                                               ; preds = %12, %10
  %19 = phi i8* [ %11, %10 ], [ %17, %12 ], !dbg !5043
  ret i8* %19, !dbg !5060
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @outs(i32 (...)* nocapture noundef readonly %0, i8* noundef %1, i8* noundef readonly %2, i8* noundef readnone %3) unnamed_addr #1 !dbg !5061 {
  call void @llvm.dbg.value(metadata i32 (...)* %0, metadata !5065, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i8* %1, metadata !5066, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i8* %2, metadata !5067, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i8* %3, metadata !5068, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i32 0, metadata !5069, metadata !DIExpression()), !dbg !5072
  %5 = icmp eq i8* %3, null
  %6 = bitcast i32 (...)* %0 to i32 (i32, i8*)*
  br label %7, !dbg !5073

7:                                                ; preds = %17, %4
  %8 = phi i8* [ %2, %4 ], [ %19, %17 ]
  %9 = phi i32 [ 0, %4 ], [ %23, %17 ], !dbg !5074
  call void @llvm.dbg.value(metadata i32 %9, metadata !5069, metadata !DIExpression()), !dbg !5072
  call void @llvm.dbg.value(metadata i8* %8, metadata !5067, metadata !DIExpression()), !dbg !5072
  %10 = icmp ult i8* %8, %3, !dbg !5075
  br i1 %10, label %11, label %13, !dbg !5076

11:                                               ; preds = %7
  %12 = load i8, i8* %8, align 1, !dbg !5077
  br label %17, !dbg !5076

13:                                               ; preds = %7
  br i1 %5, label %14, label %24, !dbg !5078

14:                                               ; preds = %13
  %15 = load i8, i8* %8, align 1, !dbg !5079
  %16 = icmp eq i8 %15, 0, !dbg !5078
  br i1 %16, label %24, label %17, !dbg !5073

17:                                               ; preds = %11, %14
  %18 = phi i8 [ %12, %11 ], [ %15, %14 ], !dbg !5077
  %19 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !5080
  call void @llvm.dbg.value(metadata i8* %19, metadata !5067, metadata !DIExpression()), !dbg !5072
  %20 = zext i8 %18 to i32, !dbg !5081
  %21 = tail call i32 %6(i32 noundef %20, i8* noundef %1) #25, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %21, metadata !5070, metadata !DIExpression()), !dbg !5083
  %22 = icmp slt i32 %21, 0, !dbg !5084
  %23 = add i32 %9, 1, !dbg !5086
  call void @llvm.dbg.value(metadata i32 undef, metadata !5069, metadata !DIExpression()), !dbg !5072
  br i1 %22, label %24, label %7, !llvm.loop !5087

24:                                               ; preds = %14, %13, %17
  %25 = phi i32 [ %21, %17 ], [ %9, %13 ], [ %9, %14 ], !dbg !5072
  ret i32 %25, !dbg !5089
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc nonnull i8* @encode_uint(i64 noundef %0, %struct.conversion* nocapture noundef %1, i8* noundef %2, i8* noundef %3) unnamed_addr #13 !dbg !5090 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !5094, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata %struct.conversion* %1, metadata !5095, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i8* %2, metadata !5096, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i8* %3, metadata !5097, metadata !DIExpression()), !dbg !5104
  %5 = getelementptr inbounds %struct.conversion, %struct.conversion* %1, i32 0, i32 1, !dbg !5105
  %6 = load i8, i8* %5, align 1, !dbg !5105
  %7 = zext i8 %6 to i32, !dbg !5106
  %8 = tail call fastcc i32 @isupper(i32 noundef %7) #24, !dbg !5107
  %9 = icmp eq i32 %8, 0, !dbg !5107
  call void @llvm.dbg.value(metadata i1 %9, metadata !5098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5104
  %10 = tail call fastcc i32 @conversion_radix(i8 noundef zeroext %6) #24, !dbg !5108
  call void @llvm.dbg.value(metadata i32 %10, metadata !5099, metadata !DIExpression()), !dbg !5104
  %11 = ptrtoint i8* %3 to i32, !dbg !5109
  %12 = ptrtoint i8* %2 to i32, !dbg !5109
  %13 = sub i32 %11, %12, !dbg !5109
  %14 = getelementptr inbounds i8, i8* %2, i32 %13, !dbg !5110
  call void @llvm.dbg.value(metadata i8* %14, metadata !5101, metadata !DIExpression()), !dbg !5104
  %15 = zext i32 %10 to i64
  %16 = select i1 %9, i32 87, i32 55
  br label %17, !dbg !5111

17:                                               ; preds = %17, %4
  %18 = phi i8* [ %14, %4 ], [ %30, %17 ], !dbg !5104
  %19 = phi i64 [ %0, %4 ], [ %22, %17 ]
  call void @llvm.dbg.value(metadata i64 %19, metadata !5094, metadata !DIExpression()), !dbg !5104
  call void @llvm.dbg.value(metadata i8* %18, metadata !5101, metadata !DIExpression()), !dbg !5104
  %20 = freeze i64 %19
  %21 = freeze i64 %15
  %22 = udiv i64 %20, %21, !dbg !5112
  %23 = mul i64 %22, %21
  %24 = sub i64 %20, %23
  %25 = trunc i64 %24 to i32, !dbg !5113
  call void @llvm.dbg.value(metadata i32 %25, metadata !5102, metadata !DIExpression()), !dbg !5114
  %26 = icmp ult i32 %25, 10, !dbg !5115
  %27 = select i1 %26, i32 48, i32 %16, !dbg !5116
  %28 = add i32 %27, %25, !dbg !5114
  %29 = trunc i32 %28 to i8, !dbg !5116
  %30 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !5117
  call void @llvm.dbg.value(metadata i8* %30, metadata !5101, metadata !DIExpression()), !dbg !5104
  store i8 %29, i8* %30, align 1, !dbg !5118
  call void @llvm.dbg.value(metadata i64 %22, metadata !5094, metadata !DIExpression()), !dbg !5104
  %31 = icmp uge i64 %19, %15, !dbg !5119
  %32 = icmp ugt i8* %30, %2, !dbg !5120
  %33 = and i1 %31, %32, !dbg !5120
  br i1 %33, label %17, label %34, !dbg !5121, !llvm.loop !5122

34:                                               ; preds = %17
  %35 = bitcast %struct.conversion* %1 to i24*, !dbg !5124
  %36 = load i24, i24* %35, align 4, !dbg !5124
  %37 = and i24 %36, 32, !dbg !5124
  %38 = icmp eq i24 %37, 0, !dbg !5124
  br i1 %38, label %44, label %39, !dbg !5126

39:                                               ; preds = %34
  switch i32 %10, label %44 [
    i32 8, label %41
    i32 16, label %40
  ], !dbg !5127

40:                                               ; preds = %39
  br label %41, !dbg !5129

41:                                               ; preds = %39, %40
  %42 = phi i24 [ 1048576, %40 ], [ 524288, %39 ]
  %43 = or i24 %36, %42, !dbg !5133
  store i24 %43, i24* %35, align 4, !dbg !5133
  br label %44, !dbg !5134

44:                                               ; preds = %41, %39, %34
  ret i8* %30, !dbg !5134
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @store_count(%struct.conversion* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1, i32 noundef %2) unnamed_addr #9 !dbg !5135 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5141, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.value(metadata i8* %1, metadata !5142, metadata !DIExpression()), !dbg !5144
  call void @llvm.dbg.value(metadata i32 %2, metadata !5143, metadata !DIExpression()), !dbg !5144
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5145
  %5 = load i24, i24* %4, align 4, !dbg !5145
  %6 = lshr i24 %5, 11, !dbg !5145
  %7 = and i24 %6, 15, !dbg !5145
  %8 = zext i24 %7 to i32, !dbg !5145
  switch i32 %8, label %28 [
    i32 0, label %9
    i32 1, label %11
    i32 2, label %13
    i32 3, label %16
    i32 4, label %18
    i32 5, label %21
    i32 6, label %24
    i32 7, label %26
  ], !dbg !5146

9:                                                ; preds = %3
  %10 = bitcast i8* %1 to i32*, !dbg !5147
  store i32 %2, i32* %10, align 4, !dbg !5149
  br label %28, !dbg !5150

11:                                               ; preds = %3
  %12 = trunc i32 %2 to i8, !dbg !5151
  store i8 %12, i8* %1, align 1, !dbg !5152
  br label %28, !dbg !5153

13:                                               ; preds = %3
  %14 = trunc i32 %2 to i16, !dbg !5154
  %15 = bitcast i8* %1 to i16*, !dbg !5155
  store i16 %14, i16* %15, align 2, !dbg !5156
  br label %28, !dbg !5157

16:                                               ; preds = %3
  %17 = bitcast i8* %1 to i32*, !dbg !5158
  store i32 %2, i32* %17, align 4, !dbg !5159
  br label %28, !dbg !5160

18:                                               ; preds = %3
  %19 = sext i32 %2 to i64, !dbg !5161
  %20 = bitcast i8* %1 to i64*, !dbg !5162
  store i64 %19, i64* %20, align 8, !dbg !5163
  br label %28, !dbg !5164

21:                                               ; preds = %3
  %22 = sext i32 %2 to i64, !dbg !5165
  %23 = bitcast i8* %1 to i64*, !dbg !5166
  store i64 %22, i64* %23, align 8, !dbg !5167
  br label %28, !dbg !5168

24:                                               ; preds = %3
  %25 = bitcast i8* %1 to i32*, !dbg !5169
  store i32 %2, i32* %25, align 4, !dbg !5170
  br label %28, !dbg !5171

26:                                               ; preds = %3
  %27 = bitcast i8* %1 to i32*, !dbg !5172
  store i32 %2, i32* %27, align 4, !dbg !5173
  br label %28, !dbg !5174

28:                                               ; preds = %3, %26, %24, %21, %18, %16, %13, %11, %9
  ret void, !dbg !5175
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isupper(i32 noundef %0) unnamed_addr #3 !dbg !5176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5179, metadata !DIExpression()), !dbg !5180
  %2 = add i32 %0, -65, !dbg !5181
  %3 = icmp ult i32 %2, 26, !dbg !5182
  %4 = zext i1 %3 to i32, !dbg !5182
  ret i32 %4, !dbg !5183
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @conversion_radix(i8 noundef zeroext %0) unnamed_addr #3 !dbg !5184 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5188, metadata !DIExpression()), !dbg !5189
  switch i8 %0, label %4 [
    i8 88, label %3
    i8 120, label %3
    i8 112, label %3
    i8 111, label %2
  ], !dbg !5190

2:                                                ; preds = %1
  br label %4, !dbg !5191

3:                                                ; preds = %1, %1, %1
  br label %4, !dbg !5193

4:                                                ; preds = %1, %3, %2
  %5 = phi i32 [ 8, %2 ], [ 16, %3 ], [ 10, %1 ], !dbg !5194
  ret i32 %5, !dbg !5195
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_flags(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #13 !dbg !5196 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5198, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8* %1, metadata !5199, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8 1, metadata !5200, metadata !DIExpression()), !dbg !5201
  %3 = bitcast %struct.conversion* %0 to i24*
  br label %4, !dbg !5202

4:                                                ; preds = %11, %2
  %5 = phi i8* [ %1, %2 ], [ %15, %11 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !5200, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8* %5, metadata !5199, metadata !DIExpression()), !dbg !5201
  %6 = load i8, i8* %5, align 1, !dbg !5203
  switch i8 %6, label %16 [
    i8 45, label %11
    i8 43, label %7
    i8 32, label %8
    i8 35, label %9
    i8 48, label %10
  ], !dbg !5205

7:                                                ; preds = %4
  br label %11, !dbg !5206

8:                                                ; preds = %4
  br label %11, !dbg !5208

9:                                                ; preds = %4
  br label %11, !dbg !5209

10:                                               ; preds = %4
  br label %11, !dbg !5210

11:                                               ; preds = %4, %7, %8, %9, %10
  %12 = phi i24 [ 8, %7 ], [ 16, %8 ], [ 32, %9 ], [ 64, %10 ], [ 4, %4 ]
  %13 = load i24, i24* %3, align 4, !dbg !5211
  %14 = or i24 %13, %12, !dbg !5211
  store i24 %14, i24* %3, align 4, !dbg !5211
  call void @llvm.dbg.value(metadata i8 poison, metadata !5200, metadata !DIExpression()), !dbg !5201
  %15 = getelementptr inbounds i8, i8* %5, i32 1
  call void @llvm.dbg.value(metadata i8* %15, metadata !5199, metadata !DIExpression()), !dbg !5201
  br label %4

16:                                               ; preds = %4
  call void @llvm.dbg.value(metadata i8 poison, metadata !5200, metadata !DIExpression()), !dbg !5201
  call void @llvm.dbg.value(metadata i8* %15, metadata !5199, metadata !DIExpression()), !dbg !5201
  %17 = load i24, i24* %3, align 4, !dbg !5212
  %18 = and i24 %17, 68, !dbg !5214
  %19 = icmp eq i24 %18, 68, !dbg !5214
  br i1 %19, label %20, label %22, !dbg !5214

20:                                               ; preds = %16
  %21 = and i24 %17, -65, !dbg !5215
  store i24 %21, i24* %3, align 4, !dbg !5215
  br label %22, !dbg !5217

22:                                               ; preds = %20, %16
  ret i8* %5, !dbg !5218
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_width(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5219 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5221, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8* %1, metadata !5222, metadata !DIExpression()), !dbg !5225
  store i8* %1, i8** %3, align 4
  %4 = bitcast %struct.conversion* %0 to i24*, !dbg !5226
  %5 = load i24, i24* %4, align 4, !dbg !5227
  %6 = or i24 %5, 128, !dbg !5227
  store i24 %6, i24* %4, align 4, !dbg !5227
  call void @llvm.dbg.value(metadata i8* %1, metadata !5222, metadata !DIExpression()), !dbg !5225
  %7 = load i8, i8* %1, align 1, !dbg !5228
  %8 = icmp eq i8 %7, 42, !dbg !5230
  br i1 %8, label %9, label %12, !dbg !5231

9:                                                ; preds = %2
  %10 = or i24 %5, 384, !dbg !5232
  store i24 %10, i24* %4, align 4, !dbg !5232
  call void @llvm.dbg.value(metadata i8* %1, metadata !5222, metadata !DIExpression()), !dbg !5225
  %11 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5234
  call void @llvm.dbg.value(metadata i8* %11, metadata !5222, metadata !DIExpression()), !dbg !5225
  store i8* %11, i8** %3, align 4, !dbg !5234
  br label %29, !dbg !5235

12:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5223, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.value(metadata i8** %3, metadata !5222, metadata !DIExpression(DW_OP_deref)), !dbg !5225
  %13 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %13, metadata !5224, metadata !DIExpression()), !dbg !5225
  %14 = load i8*, i8** %3, align 4, !dbg !5237
  call void @llvm.dbg.value(metadata i8* %14, metadata !5222, metadata !DIExpression()), !dbg !5225
  %15 = icmp eq i8* %14, %1, !dbg !5239
  br i1 %15, label %29, label %16, !dbg !5240

16:                                               ; preds = %12
  %17 = load i24, i24* %4, align 4, !dbg !5241
  %18 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 2, i32 0, !dbg !5243
  store i32 %13, i32* %18, align 4, !dbg !5244
  %19 = lshr i32 %13, 31, !dbg !5245
  %20 = lshr i24 %17, 1, !dbg !5246
  %21 = and i24 %20, 1, !dbg !5246
  %22 = zext i24 %21 to i32, !dbg !5246
  %23 = or i32 %19, %22, !dbg !5246
  %24 = trunc i32 %23 to i24, !dbg !5246
  %25 = shl nuw nsw i24 %24, 1, !dbg !5246
  %26 = and i24 %17, -131, !dbg !5246
  %27 = or i24 %26, 128, !dbg !5246
  %28 = or i24 %25, %27, !dbg !5246
  store i24 %28, i24* %4, align 4, !dbg !5246
  br label %29, !dbg !5247

29:                                               ; preds = %12, %16, %9
  %30 = phi i8* [ %11, %9 ], [ %14, %16 ], [ %1, %12 ], !dbg !5225
  ret i8* %30, !dbg !5248
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i8* @extract_prec(%struct.conversion* nocapture noundef %0, i8* noundef %1) unnamed_addr #13 !dbg !5249 {
  %3 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5251, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.value(metadata i8* %1, metadata !5252, metadata !DIExpression()), !dbg !5254
  %4 = load i8, i8* %1, align 1, !dbg !5255
  %5 = icmp eq i8 %4, 46, !dbg !5256
  %6 = bitcast %struct.conversion* %0 to i24*, !dbg !5257
  %7 = load i24, i24* %6, align 4, !dbg !5258
  %8 = select i1 %5, i24 512, i24 0, !dbg !5258
  %9 = and i24 %7, -513, !dbg !5258
  %10 = or i24 %9, %8, !dbg !5258
  store i24 %10, i24* %6, align 4, !dbg !5258
  br i1 %5, label %11, label %32, !dbg !5259

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5252, metadata !DIExpression()), !dbg !5254
  %12 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5260
  call void @llvm.dbg.value(metadata i8* %12, metadata !5252, metadata !DIExpression()), !dbg !5254
  store i8* %12, i8** %3, align 4, !dbg !5260
  %13 = load i8, i8* %12, align 1, !dbg !5261
  %14 = icmp eq i8 %13, 42, !dbg !5263
  br i1 %14, label %15, label %18, !dbg !5264

15:                                               ; preds = %11
  %16 = or i24 %10, 1024, !dbg !5265
  store i24 %16, i24* %6, align 4, !dbg !5265
  call void @llvm.dbg.value(metadata i8* %12, metadata !5252, metadata !DIExpression()), !dbg !5254
  %17 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5267
  call void @llvm.dbg.value(metadata i8* %17, metadata !5252, metadata !DIExpression()), !dbg !5254
  store i8* %17, i8** %3, align 4, !dbg !5267
  br label %32, !dbg !5268

18:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i8** %3, metadata !5252, metadata !DIExpression(DW_OP_deref)), !dbg !5254
  %19 = call fastcc i32 @extract_decimal(i8** noundef nonnull %3) #24, !dbg !5269
  call void @llvm.dbg.value(metadata i32 %19, metadata !5253, metadata !DIExpression()), !dbg !5254
  %20 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 3, i32 0, !dbg !5270
  store i32 %19, i32* %20, align 4, !dbg !5271
  %21 = lshr i32 %19, 31, !dbg !5272
  %22 = load i24, i24* %6, align 4, !dbg !5273
  %23 = lshr i24 %22, 1, !dbg !5273
  %24 = and i24 %23, 1, !dbg !5273
  %25 = zext i24 %24 to i32, !dbg !5273
  %26 = or i32 %21, %25, !dbg !5273
  %27 = trunc i32 %26 to i24, !dbg !5273
  %28 = shl nuw nsw i24 %27, 1, !dbg !5273
  %29 = and i24 %22, -3, !dbg !5273
  %30 = or i24 %28, %29, !dbg !5273
  store i24 %30, i24* %6, align 4, !dbg !5273
  %31 = load i8*, i8** %3, align 4, !dbg !5274
  call void @llvm.dbg.value(metadata i8* %31, metadata !5252, metadata !DIExpression()), !dbg !5254
  br label %32

32:                                               ; preds = %2, %18, %15
  %33 = phi i8* [ %17, %15 ], [ %31, %18 ], [ %1, %2 ], !dbg !5254
  ret i8* %33, !dbg !5275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i8* @extract_length(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5276 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5278, metadata !DIExpression()), !dbg !5280
  call void @llvm.dbg.value(metadata i8* %1, metadata !5279, metadata !DIExpression()), !dbg !5280
  %3 = load i8, i8* %1, align 1, !dbg !5281
  switch i8 %3, label %52 [
    i8 104, label %4
    i8 108, label %16
    i8 106, label %28
    i8 122, label %34
    i8 116, label %40
    i8 76, label %46
  ], !dbg !5282

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5283
  call void @llvm.dbg.value(metadata i8* %5, metadata !5279, metadata !DIExpression()), !dbg !5280
  %6 = load i8, i8* %5, align 1, !dbg !5286
  %7 = icmp eq i8 %6, 104, !dbg !5287
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5288
  %9 = load i24, i24* %8, align 4, !dbg !5288
  %10 = and i24 %9, -30721, !dbg !5288
  br i1 %7, label %11, label %14, !dbg !5289

11:                                               ; preds = %4
  %12 = or i24 %10, 2048, !dbg !5290
  store i24 %12, i24* %8, align 4, !dbg !5290
  %13 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5292
  call void @llvm.dbg.value(metadata i8* %13, metadata !5279, metadata !DIExpression()), !dbg !5280
  br label %56, !dbg !5293

14:                                               ; preds = %4
  %15 = or i24 %10, 4096, !dbg !5294
  store i24 %15, i24* %8, align 4, !dbg !5294
  br label %56

16:                                               ; preds = %2
  %17 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5296
  call void @llvm.dbg.value(metadata i8* %17, metadata !5279, metadata !DIExpression()), !dbg !5280
  %18 = load i8, i8* %17, align 1, !dbg !5298
  %19 = icmp eq i8 %18, 108, !dbg !5299
  %20 = bitcast %struct.conversion* %0 to i24*, !dbg !5300
  %21 = load i24, i24* %20, align 4, !dbg !5300
  %22 = and i24 %21, -30721, !dbg !5300
  br i1 %19, label %23, label %26, !dbg !5301

23:                                               ; preds = %16
  %24 = or i24 %22, 8192, !dbg !5302
  store i24 %24, i24* %20, align 4, !dbg !5302
  %25 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !5304
  call void @llvm.dbg.value(metadata i8* %25, metadata !5279, metadata !DIExpression()), !dbg !5280
  br label %56, !dbg !5305

26:                                               ; preds = %16
  %27 = or i24 %22, 6144, !dbg !5306
  store i24 %27, i24* %20, align 4, !dbg !5306
  br label %56

28:                                               ; preds = %2
  %29 = bitcast %struct.conversion* %0 to i24*, !dbg !5308
  %30 = load i24, i24* %29, align 4, !dbg !5309
  %31 = and i24 %30, -30721, !dbg !5309
  %32 = or i24 %31, 10240, !dbg !5309
  store i24 %32, i24* %29, align 4, !dbg !5309
  %33 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5310
  call void @llvm.dbg.value(metadata i8* %33, metadata !5279, metadata !DIExpression()), !dbg !5280
  br label %56, !dbg !5311

34:                                               ; preds = %2
  %35 = bitcast %struct.conversion* %0 to i24*, !dbg !5312
  %36 = load i24, i24* %35, align 4, !dbg !5313
  %37 = and i24 %36, -30721, !dbg !5313
  %38 = or i24 %37, 12288, !dbg !5313
  store i24 %38, i24* %35, align 4, !dbg !5313
  %39 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5314
  call void @llvm.dbg.value(metadata i8* %39, metadata !5279, metadata !DIExpression()), !dbg !5280
  br label %56, !dbg !5315

40:                                               ; preds = %2
  %41 = bitcast %struct.conversion* %0 to i24*, !dbg !5316
  %42 = load i24, i24* %41, align 4, !dbg !5317
  %43 = and i24 %42, -30721, !dbg !5317
  %44 = or i24 %43, 14336, !dbg !5317
  store i24 %44, i24* %41, align 4, !dbg !5317
  %45 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5318
  call void @llvm.dbg.value(metadata i8* %45, metadata !5279, metadata !DIExpression()), !dbg !5280
  br label %56, !dbg !5319

46:                                               ; preds = %2
  %47 = bitcast %struct.conversion* %0 to i24*, !dbg !5320
  %48 = load i24, i24* %47, align 4, !dbg !5321
  %49 = and i24 %48, -30723, !dbg !5321
  %50 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5322
  call void @llvm.dbg.value(metadata i8* %50, metadata !5279, metadata !DIExpression()), !dbg !5280
  %51 = or i24 %49, 16386, !dbg !5323
  store i24 %51, i24* %47, align 4, !dbg !5323
  br label %56, !dbg !5324

52:                                               ; preds = %2
  %53 = bitcast %struct.conversion* %0 to i24*, !dbg !5325
  %54 = load i24, i24* %53, align 4, !dbg !5326
  %55 = and i24 %54, -30721, !dbg !5326
  store i24 %55, i24* %53, align 4, !dbg !5326
  br label %56, !dbg !5327

56:                                               ; preds = %23, %26, %11, %14, %52, %46, %40, %34, %28
  %57 = phi i8* [ %1, %52 ], [ %50, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %28 ], [ %25, %23 ], [ %17, %26 ], [ %13, %11 ], [ %5, %14 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !5279, metadata !DIExpression()), !dbg !5280
  ret i8* %57, !dbg !5328
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc nonnull i8* @extract_specifier(%struct.conversion* nocapture noundef %0, i8* noundef readonly %1) unnamed_addr #9 !dbg !5329 {
  call void @llvm.dbg.value(metadata %struct.conversion* %0, metadata !5331, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i8* %1, metadata !5332, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i8 0, metadata !5333, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i8* %1, metadata !5332, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5336
  %3 = load i8, i8* %1, align 1, !dbg !5337
  %4 = getelementptr inbounds %struct.conversion, %struct.conversion* %0, i32 0, i32 1, !dbg !5338
  store i8 %3, i8* %4, align 1, !dbg !5339
  switch i8 %3, label %39 [
    i8 100, label %6
    i8 105, label %6
    i8 111, label %5
    i8 99, label %5
    i8 117, label %5
    i8 120, label %5
    i8 88, label %5
    i8 97, label %20
    i8 65, label %20
    i8 101, label %20
    i8 69, label %20
    i8 102, label %20
    i8 70, label %20
    i8 103, label %20
    i8 71, label %20
    i8 110, label %25
    i8 115, label %32
    i8 112, label %32
  ], !dbg !5340

5:                                                ; preds = %2, %2, %2, %2, %2
  br label %6, !dbg !5341

6:                                                ; preds = %2, %2, %5
  %7 = phi i24 [ 131072, %5 ], [ 65536, %2 ], [ 65536, %2 ]
  %8 = bitcast %struct.conversion* %0 to i24*, !dbg !5342
  %9 = load i24, i24* %8, align 4, !dbg !5342
  %10 = and i24 %9, -458753, !dbg !5342
  %11 = or i24 %10, %7, !dbg !5342
  call void @llvm.dbg.label(metadata !5334), !dbg !5343
  %12 = and i24 %9, 30720, !dbg !5344
  %13 = icmp eq i24 %12, 16384, !dbg !5344
  %14 = zext i1 %13 to i24, !dbg !5346
  %15 = or i24 %11, %14, !dbg !5346
  %16 = icmp eq i8 %3, 99, !dbg !5347
  br i1 %16, label %17, label %43, !dbg !5349

17:                                               ; preds = %6
  %18 = and i24 %9, 30720, !dbg !5350
  %19 = icmp ne i24 %18, 0, !dbg !5350
  call void @llvm.dbg.value(metadata i1 %19, metadata !5333, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5336
  br label %43, !dbg !5352

20:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %21 = bitcast %struct.conversion* %0 to i24*, !dbg !5353
  %22 = load i24, i24* %21, align 4, !dbg !5354
  %23 = and i24 %22, -458753, !dbg !5354
  %24 = or i24 %23, 262144, !dbg !5354
  call void @llvm.dbg.value(metadata i8 1, metadata !5333, metadata !DIExpression()), !dbg !5336
  br label %43, !dbg !5355

25:                                               ; preds = %2
  %26 = bitcast %struct.conversion* %0 to i24*, !dbg !5358
  %27 = load i24, i24* %26, align 4, !dbg !5359
  %28 = and i24 %27, -458753, !dbg !5359
  %29 = or i24 %28, 196608, !dbg !5359
  %30 = and i24 %27, 30720, !dbg !5360
  %31 = icmp eq i24 %30, 16384, !dbg !5360
  br label %43, !dbg !5362

32:                                               ; preds = %2, %2
  %33 = bitcast %struct.conversion* %0 to i24*, !dbg !5363
  %34 = load i24, i24* %33, align 4, !dbg !5364
  %35 = and i24 %34, -458753, !dbg !5364
  %36 = or i24 %35, 196608, !dbg !5364
  %37 = and i24 %34, 30720, !dbg !5365
  %38 = icmp ne i24 %37, 0, !dbg !5365
  br label %43, !dbg !5367

39:                                               ; preds = %2
  %40 = bitcast %struct.conversion* %0 to i24*, !dbg !5368
  %41 = load i24, i24* %40, align 4, !dbg !5369
  %42 = or i24 %41, 1, !dbg !5369
  br label %43, !dbg !5370

43:                                               ; preds = %32, %25, %17, %6, %39, %20
  %44 = phi i24 [ %36, %32 ], [ %29, %25 ], [ %15, %17 ], [ %15, %6 ], [ %42, %39 ], [ %24, %20 ], !dbg !5371
  %45 = phi i1 [ %38, %32 ], [ %31, %25 ], [ %19, %17 ], [ false, %6 ], [ false, %39 ], [ true, %20 ]
  %46 = bitcast %struct.conversion* %0 to i24*, !dbg !5372
  %47 = zext i1 %45 to i32
  %48 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !5373
  call void @llvm.dbg.value(metadata i8* %48, metadata !5332, metadata !DIExpression()), !dbg !5336
  call void @llvm.dbg.value(metadata i8 poison, metadata !5333, metadata !DIExpression()), !dbg !5336
  %49 = lshr i24 %44, 1, !dbg !5371
  %50 = and i24 %49, 1, !dbg !5371
  %51 = zext i24 %50 to i32, !dbg !5371
  %52 = or i32 %51, %47, !dbg !5371
  %53 = trunc i32 %52 to i24, !dbg !5371
  %54 = shl nuw nsw i24 %53, 1, !dbg !5371
  %55 = and i24 %44, -3, !dbg !5371
  %56 = or i24 %54, %55, !dbg !5371
  store i24 %56, i24* %46, align 4, !dbg !5371
  ret i8* %48, !dbg !5374
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @extract_decimal(i8** nocapture noundef %0) unnamed_addr #13 !dbg !5375 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !5379, metadata !DIExpression()), !dbg !5382
  %2 = load i8*, i8** %0, align 4, !dbg !5383
  call void @llvm.dbg.value(metadata i8* %2, metadata !5380, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i32 0, metadata !5381, metadata !DIExpression()), !dbg !5382
  %3 = load i8, i8* %2, align 1, !dbg !5384
  %4 = zext i8 %3 to i32, !dbg !5385
  %5 = tail call fastcc i32 @isdigit(i32 noundef %4) #24, !dbg !5386
  %6 = icmp eq i32 %5, 0, !dbg !5387
  br i1 %6, label %19, label %7, !dbg !5387

7:                                                ; preds = %1, %7
  %8 = phi i32 [ %16, %7 ], [ %4, %1 ]
  %9 = phi i32 [ %14, %7 ], [ 0, %1 ]
  %10 = phi i8* [ %12, %7 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !5381, metadata !DIExpression()), !dbg !5382
  call void @llvm.dbg.value(metadata i8* %10, metadata !5380, metadata !DIExpression()), !dbg !5382
  %11 = mul i32 %9, 10, !dbg !5388
  %12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !5390
  call void @llvm.dbg.value(metadata i8* %12, metadata !5380, metadata !DIExpression()), !dbg !5382
  %13 = add i32 %11, -48, !dbg !5391
  %14 = add i32 %13, %8, !dbg !5392
  call void @llvm.dbg.value(metadata i32 %14, metadata !5381, metadata !DIExpression()), !dbg !5382
  %15 = load i8, i8* %12, align 1, !dbg !5384
  %16 = zext i8 %15 to i32, !dbg !5385
  %17 = tail call fastcc i32 @isdigit(i32 noundef %16) #24, !dbg !5386
  %18 = icmp eq i32 %17, 0, !dbg !5387
  br i1 %18, label %19, label %7, !dbg !5387, !llvm.loop !5393

19:                                               ; preds = %7, %1
  %20 = phi i8* [ %2, %1 ], [ %12, %7 ], !dbg !5382
  %21 = phi i32 [ 0, %1 ], [ %14, %7 ], !dbg !5382
  store i8* %20, i8** %0, align 4, !dbg !5395
  ret i32 %21, !dbg !5396
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isdigit(i32 noundef %0) unnamed_addr #3 !dbg !5397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5399, metadata !DIExpression()), !dbg !5400
  %2 = add i32 %0, -48, !dbg !5401
  %3 = icmp ult i32 %2, 10, !dbg !5402
  %4 = zext i1 %3 to i32, !dbg !5402
  ret i32 %4, !dbg !5403
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @assert_post_action(i8* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !5404 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !5409, metadata !DIExpression()), !dbg !5411
  call void @llvm.dbg.value(metadata i32 %1, metadata !5410, metadata !DIExpression()), !dbg !5411
  tail call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #23, !dbg !5412, !srcloc !5414
  ret void, !dbg !5415
}

; Function Attrs: noinline nounwind optsize
define dso_local void @assert_print(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !5416 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !5418, metadata !DIExpression()), !dbg !5426
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !5427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5427
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !5419, metadata !DIExpression()), !dbg !5428
  call void @llvm.va_start(i8* nonnull %3), !dbg !5429
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !5430
  %5 = load i32, i32* %4, align 4, !dbg !5430
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !5430
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !5430
  call void @llvm.va_end(i8* nonnull %3), !dbg !5431
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5432
  ret void, !dbg !5432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @_ConfigAbsSyms() local_unnamed_addr #1 !dbg !5433 {
  tail call void asm sideeffect ".globl\09CONFIG_GPIO\0A\09.equ\09CONFIG_GPIO,1\0A\09.type\09CONFIG_GPIO,%object", ""() #23, !dbg !5435, !srcloc !5436
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_INIT_PRIORITY\0A\09.equ\09CONFIG_GPIO_INIT_PRIORITY,40\0A\09.type\09CONFIG_GPIO_INIT_PRIORITY,%object", ""() #23, !dbg !5437, !srcloc !5438
  tail call void asm sideeffect ".globl\09CONFIG_BOARD\0A\09.equ\09CONFIG_BOARD,1\0A\09.type\09CONFIG_BOARD,%object", ""() #23, !dbg !5439, !srcloc !5440
  tail call void asm sideeffect ".globl\09CONFIG_SOC\0A\09.equ\09CONFIG_SOC,1\0A\09.type\09CONFIG_SOC,%object", ""() #23, !dbg !5441, !srcloc !5442
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES\0A\09.equ\09CONFIG_SOC_SERIES,1\0A\09.type\09CONFIG_SOC_SERIES,%object", ""() #23, !dbg !5443, !srcloc !5444
  tail call void asm sideeffect ".globl\09CONFIG_NUM_IRQS\0A\09.equ\09CONFIG_NUM_IRQS,97\0A\09.type\09CONFIG_NUM_IRQS,%object", ""() #23, !dbg !5445, !srcloc !5446
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,84000000\0A\09.type\09CONFIG_SYS_CLOCK_HW_CYCLES_PER_SEC,%object", ""() #23, !dbg !5447, !srcloc !5448
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY\0A\09.equ\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,1\0A\09.type\09CONFIG_CLOCK_CONTROL_INIT_PRIORITY,%object", ""() #23, !dbg !5449, !srcloc !5450
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_SIZE\0A\09.equ\09CONFIG_FLASH_SIZE,1024\0A\09.type\09CONFIG_FLASH_SIZE,%object", ""() #23, !dbg !5451, !srcloc !5452
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_BASE_ADDRESS\0A\09.equ\09CONFIG_FLASH_BASE_ADDRESS,0x8000000\0A\09.type\09CONFIG_FLASH_BASE_ADDRESS,%object", ""() #23, !dbg !5453, !srcloc !5454
  tail call void asm sideeffect ".globl\09CONFIG_ICACHE_LINE_SIZE\0A\09.equ\09CONFIG_ICACHE_LINE_SIZE,32\0A\09.type\09CONFIG_ICACHE_LINE_SIZE,%object", ""() #23, !dbg !5455, !srcloc !5456
  tail call void asm sideeffect ".globl\09CONFIG_DCACHE_LINE_SIZE\0A\09.equ\09CONFIG_DCACHE_LINE_SIZE,32\0A\09.type\09CONFIG_DCACHE_LINE_SIZE,%object", ""() #23, !dbg !5457, !srcloc !5458
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL\0A\09.equ\09CONFIG_PINCTRL,1\0A\09.type\09CONFIG_PINCTRL,%object", ""() #23, !dbg !5459, !srcloc !5460
  tail call void asm sideeffect ".globl\09CONFIG_HEAP_MEM_POOL_SIZE\0A\09.equ\09CONFIG_HEAP_MEM_POOL_SIZE,0\0A\09.type\09CONFIG_HEAP_MEM_POOL_SIZE,%object", ""() #23, !dbg !5461, !srcloc !5462
  tail call void asm sideeffect ".globl\09CONFIG_ROM_START_OFFSET\0A\09.equ\09CONFIG_ROM_START_OFFSET,0x0\0A\09.type\09CONFIG_ROM_START_OFFSET,%object", ""() #23, !dbg !5463, !srcloc !5464
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL\0A\09.equ\09CONFIG_CLOCK_CONTROL,1\0A\09.type\09CONFIG_CLOCK_CONTROL,%object", ""() #23, !dbg !5465, !srcloc !5466
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK,%object", ""() #23, !dbg !5467, !srcloc !5468
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DOMAIN_NAME\0A\09.equ\09CONFIG_LOG_DOMAIN_NAME,1\0A\09.type\09CONFIG_LOG_DOMAIN_NAME,%object", ""() #23, !dbg !5469, !srcloc !5470
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_TICKS_PER_SEC\0A\09.equ\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,10000\0A\09.type\09CONFIG_SYS_CLOCK_TICKS_PER_SEC,%object", ""() #23, !dbg !5471, !srcloc !5472
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_HEX\0A\09.equ\09CONFIG_BUILD_OUTPUT_HEX,1\0A\09.type\09CONFIG_BUILD_OUTPUT_HEX,%object", ""() #23, !dbg !5473, !srcloc !5474
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_INIT_PRIORITY\0A\09.equ\09CONFIG_SERIAL_INIT_PRIORITY,55\0A\09.type\09CONFIG_SERIAL_INIT_PRIORITY,%object", ""() #23, !dbg !5475, !srcloc !5476
  tail call void asm sideeffect ".globl\09CONFIG_TEST_EXTRA_STACK_SIZE\0A\09.equ\09CONFIG_TEST_EXTRA_STACK_SIZE,0\0A\09.type\09CONFIG_TEST_EXTRA_STACK_SIZE,%object", ""() #23, !dbg !5477, !srcloc !5478
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL\0A\09.equ\09CONFIG_SERIAL,1\0A\09.type\09CONFIG_SERIAL,%object", ""() #23, !dbg !5479, !srcloc !5480
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_STACK_SIZE\0A\09.equ\09CONFIG_MAIN_STACK_SIZE,1024\0A\09.type\09CONFIG_MAIN_STACK_SIZE,%object", ""() #23, !dbg !5481, !srcloc !5482
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_STM32_CUBE\0A\09.equ\09CONFIG_CLOCK_CONTROL_STM32_CUBE,1\0A\09.type\09CONFIG_CLOCK_CONTROL_STM32_CUBE,%object", ""() #23, !dbg !5483, !srcloc !5484
  tail call void asm sideeffect ".globl\09CONFIG_MP_MAX_NUM_CPUS\0A\09.equ\09CONFIG_MP_MAX_NUM_CPUS,1\0A\09.type\09CONFIG_MP_MAX_NUM_CPUS,%object", ""() #23, !dbg !5485, !srcloc !5486
  tail call void asm sideeffect ".globl\09CONFIG_HAS_DTS\0A\09.equ\09CONFIG_HAS_DTS,1\0A\09.type\09CONFIG_HAS_DTS,%object", ""() #23, !dbg !5487, !srcloc !5488
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_ARMV7M_SYSTICK_ENABLED,%object", ""() #23, !dbg !5489, !srcloc !5490
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_CORTEX_M4F_ENABLED,%object", ""() #23, !dbg !5491, !srcloc !5492
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ARM_V7M_NVIC_ENABLED,%object", ""() #23, !dbg !5493, !srcloc !5494
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_FIXED_CLOCK_ENABLED,%object", ""() #23, !dbg !5495, !srcloc !5496
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_KEYS_ENABLED,%object", ""() #23, !dbg !5497, !srcloc !5498
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_GPIO_LEDS_ENABLED,%object", ""() #23, !dbg !5499, !srcloc !5500
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED\0A\09.equ\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_MMIO_SRAM_ENABLED,%object", ""() #23, !dbg !5501, !srcloc !5502
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_SOC_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5503, !srcloc !5504
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_HTS221_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_HTS221_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_HTS221_ENABLED,%object", ""() #23, !dbg !5505, !srcloc !5506
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LPS22HB_PRESS_ENABLED,%object", ""() #23, !dbg !5507, !srcloc !5508
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_LSM6DSL_ENABLED,%object", ""() #23, !dbg !5509, !srcloc !5510
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_MPXXDTYY_ENABLED,%object", ""() #23, !dbg !5511, !srcloc !5512
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_DMA_V1_ENABLED,%object", ""() #23, !dbg !5513, !srcloc !5514
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_EXTI_ENABLED,%object", ""() #23, !dbg !5515, !srcloc !5516
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5517, !srcloc !5518
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_GPIO_ENABLED,%object", ""() #23, !dbg !5519, !srcloc !5520
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_HSE_CLOCK_ENABLED,%object", ""() #23, !dbg !5521, !srcloc !5522
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2C_V1_ENABLED,%object", ""() #23, !dbg !5523, !srcloc !5524
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_I2S_ENABLED,%object", ""() #23, !dbg !5525, !srcloc !5526
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_NV_FLASH_ENABLED,%object", ""() #23, !dbg !5527, !srcloc !5528
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_PINCTRL_ENABLED,%object", ""() #23, !dbg !5529, !srcloc !5530
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RCC_ENABLED,%object", ""() #23, !dbg !5531, !srcloc !5532
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_RTC_ENABLED,%object", ""() #23, !dbg !5533, !srcloc !5534
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_SPI_ENABLED,%object", ""() #23, !dbg !5535, !srcloc !5536
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_UART_ENABLED,%object", ""() #23, !dbg !5537, !srcloc !5538
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32_USART_ENABLED,%object", ""() #23, !dbg !5539, !srcloc !5540
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_FLASH_CONTROLLER_ENABLED,%object", ""() #23, !dbg !5541, !srcloc !5542
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_STM32F4_PLL_CLOCK_ENABLED,%object", ""() #23, !dbg !5543, !srcloc !5544
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED\0A\09.equ\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_ST_VL53L0X_ENABLED,%object", ""() #23, !dbg !5545, !srcloc !5546
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_TI_LP3943_ENABLED\0A\09.equ\09CONFIG_DT_HAS_TI_LP3943_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_TI_LP3943_ENABLED,%object", ""() #23, !dbg !5547, !srcloc !5548
  tail call void asm sideeffect ".globl\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED\0A\09.equ\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,1\0A\09.type\09CONFIG_DT_HAS_USB_NOP_XCEIV_ENABLED,%object", ""() #23, !dbg !5549, !srcloc !5550
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CANOPENNODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CANOPENNODE_MODULE,%object", ""() #23, !dbg !5551, !srcloc !5552
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_CHRE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_CHRE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_CHRE_MODULE,%object", ""() #23, !dbg !5553, !srcloc !5554
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_FATFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_FATFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_FATFS_MODULE,%object", ""() #23, !dbg !5555, !srcloc !5556
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ESPRESSIF_MODULE,%object", ""() #23, !dbg !5557, !srcloc !5558
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL_INF,%object", ""() #23, !dbg !5559, !srcloc !5560
  tail call void asm sideeffect ".globl\09CONFIG_ARM_ETHOS_U_LOG_LEVEL\0A\09.equ\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,3\0A\09.type\09CONFIG_ARM_ETHOS_U_LOG_LEVEL,%object", ""() #23, !dbg !5561, !srcloc !5562
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_ETHOS_U_MODULE,%object", ""() #23, !dbg !5563, !srcloc !5564
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_GIGADEVICE_MODULE,%object", ""() #23, !dbg !5565, !srcloc !5566
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_INFINEON_MODULE,%object", ""() #23, !dbg !5567, !srcloc !5568
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NORDIC_MODULE,%object", ""() #23, !dbg !5569, !srcloc !5570
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_NXP_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_NXP_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_NXP_MODULE,%object", ""() #23, !dbg !5571, !srcloc !5572
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_RPI_PICO_MODULE,%object", ""() #23, !dbg !5573, !srcloc !5574
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_HAL_TELINK_MODULE\0A\09.equ\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_HAL_TELINK_MODULE,%object", ""() #23, !dbg !5575, !srcloc !5576
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LIBLC3_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LIBLC3_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LIBLC3_MODULE,%object", ""() #23, !dbg !5577, !srcloc !5578
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LITTLEFS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LITTLEFS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LITTLEFS_MODULE,%object", ""() #23, !dbg !5579, !srcloc !5580
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LORAMAC_NODE_MODULE,%object", ""() #23, !dbg !5581, !srcloc !5582
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LVGL_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LVGL_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LVGL_MODULE,%object", ""() #23, !dbg !5583, !srcloc !5584
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_LZ4_MODULE\0A\09.equ\09CONFIG_ZEPHYR_LZ4_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_LZ4_MODULE,%object", ""() #23, !dbg !5585, !srcloc !5586
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_MBEDTLS_MODULE\0A\09.equ\09CONFIG_ZEPHYR_MBEDTLS_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_MBEDTLS_MODULE,%object", ""() #23, !dbg !5587, !srcloc !5588
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_NANOPB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_NANOPB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_NANOPB_MODULE,%object", ""() #23, !dbg !5589, !srcloc !5590
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_OPENTHREAD_MODULE\0A\09.equ\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_OPENTHREAD_MODULE,%object", ""() #23, !dbg !5591, !srcloc !5592
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_PICOLIBC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_PICOLIBC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_PICOLIBC_MODULE,%object", ""() #23, !dbg !5593, !srcloc !5594
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_SOF_MODULE\0A\09.equ\09CONFIG_ZEPHYR_SOF_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_SOF_MODULE,%object", ""() #23, !dbg !5595, !srcloc !5596
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TFLITE_MICRO_MODULE,%object", ""() #23, !dbg !5597, !srcloc !5598
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRACERECORDER_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRACERECORDER_MODULE,%object", ""() #23, !dbg !5599, !srcloc !5600
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_M_MODULE,%object", ""() #23, !dbg !5601, !srcloc !5602
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE\0A\09.equ\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_TRUSTED_FIRMWARE_A_MODULE,%object", ""() #23, !dbg !5603, !srcloc !5604
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE\0A\09.equ\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_UOSCORE_UEDHOC_MODULE,%object", ""() #23, !dbg !5605, !srcloc !5606
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZCBOR_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZCBOR_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZCBOR_MODULE,%object", ""() #23, !dbg !5607, !srcloc !5608
  tail call void asm sideeffect ".globl\09CONFIG_ZEPHYR_ZSCILIB_MODULE\0A\09.equ\09CONFIG_ZEPHYR_ZSCILIB_MODULE,1\0A\09.type\09CONFIG_ZEPHYR_ZSCILIB_MODULE,%object", ""() #23, !dbg !5609, !srcloc !5610
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE\0A\09.equ\09CONFIG_HAS_CMSIS_CORE,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE,%object", ""() #23, !dbg !5611, !srcloc !5612
  tail call void asm sideeffect ".globl\09CONFIG_HAS_CMSIS_CORE_M\0A\09.equ\09CONFIG_HAS_CMSIS_CORE_M,1\0A\09.type\09CONFIG_HAS_CMSIS_CORE_M,%object", ""() #23, !dbg !5613, !srcloc !5614
  tail call void asm sideeffect ".globl\09CONFIG_HAS_STM32CUBE\0A\09.equ\09CONFIG_HAS_STM32CUBE,1\0A\09.type\09CONFIG_HAS_STM32CUBE,%object", ""() #23, !dbg !5615, !srcloc !5616
  tail call void asm sideeffect ".globl\09CONFIG_USE_STM32_LL_UTILS\0A\09.equ\09CONFIG_USE_STM32_LL_UTILS,1\0A\09.type\09CONFIG_USE_STM32_LL_UTILS,%object", ""() #23, !dbg !5617, !srcloc !5618
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_REVISION\0A\09.equ\09CONFIG_BOARD_REVISION,1\0A\09.type\09CONFIG_BOARD_REVISION,%object", ""() #23, !dbg !5619, !srcloc !5620
  tail call void asm sideeffect ".globl\09CONFIG_BOARD_96B_ARGONKEY\0A\09.equ\09CONFIG_BOARD_96B_ARGONKEY,1\0A\09.type\09CONFIG_BOARD_96B_ARGONKEY,%object", ""() #23, !dbg !5621, !srcloc !5622
  tail call void asm sideeffect ".globl\09CONFIG_SOC_SERIES_STM32F4X\0A\09.equ\09CONFIG_SOC_SERIES_STM32F4X,1\0A\09.type\09CONFIG_SOC_SERIES_STM32F4X,%object", ""() #23, !dbg !5623, !srcloc !5624
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_ARM_MPU\0A\09.equ\09CONFIG_CPU_HAS_ARM_MPU,1\0A\09.type\09CONFIG_CPU_HAS_ARM_MPU,%object", ""() #23, !dbg !5625, !srcloc !5626
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SWO\0A\09.equ\09CONFIG_HAS_SWO,1\0A\09.type\09CONFIG_HAS_SWO,%object", ""() #23, !dbg !5627, !srcloc !5628
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY\0A\09.equ\09CONFIG_SOC_FAMILY,1\0A\09.type\09CONFIG_SOC_FAMILY,%object", ""() #23, !dbg !5629, !srcloc !5630
  tail call void asm sideeffect ".globl\09CONFIG_SOC_FAMILY_STM32\0A\09.equ\09CONFIG_SOC_FAMILY_STM32,1\0A\09.type\09CONFIG_SOC_FAMILY_STM32,%object", ""() #23, !dbg !5631, !srcloc !5632
  tail call void asm sideeffect ".globl\09CONFIG_SOC_STM32F412CX\0A\09.equ\09CONFIG_SOC_STM32F412CX,1\0A\09.type\09CONFIG_SOC_STM32F412CX,%object", ""() #23, !dbg !5633, !srcloc !5634
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_SOC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_SOC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5635, !srcloc !5636
  tail call void asm sideeffect ".globl\09CONFIG_SOC_LOG_LEVEL\0A\09.equ\09CONFIG_SOC_LOG_LEVEL,3\0A\09.type\09CONFIG_SOC_LOG_LEVEL,%object", ""() #23, !dbg !5637, !srcloc !5638
  tail call void asm sideeffect ".globl\09CONFIG_ARCH\0A\09.equ\09CONFIG_ARCH,1\0A\09.type\09CONFIG_ARCH,%object", ""() #23, !dbg !5639, !srcloc !5640
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX\0A\09.equ\09CONFIG_CPU_CORTEX,1\0A\09.type\09CONFIG_CPU_CORTEX,%object", ""() #23, !dbg !5641, !srcloc !5642
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M\0A\09.equ\09CONFIG_CPU_CORTEX_M,1\0A\09.type\09CONFIG_CPU_CORTEX_M,%object", ""() #23, !dbg !5643, !srcloc !5644
  tail call void asm sideeffect ".globl\09CONFIG_ISA_THUMB2\0A\09.equ\09CONFIG_ISA_THUMB2,1\0A\09.type\09CONFIG_ISA_THUMB2,%object", ""() #23, !dbg !5645, !srcloc !5646
  tail call void asm sideeffect ".globl\09CONFIG_ASSEMBLER_ISA_THUMB2\0A\09.equ\09CONFIG_ASSEMBLER_ISA_THUMB2,1\0A\09.type\09CONFIG_ASSEMBLER_ISA_THUMB2,%object", ""() #23, !dbg !5647, !srcloc !5648
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_ISA_THUMB2\0A\09.equ\09CONFIG_COMPILER_ISA_THUMB2,1\0A\09.type\09CONFIG_COMPILER_ISA_THUMB2,%object", ""() #23, !dbg !5649, !srcloc !5650
  tail call void asm sideeffect ".globl\09CONFIG_STACK_ALIGN_DOUBLE_WORD\0A\09.equ\09CONFIG_STACK_ALIGN_DOUBLE_WORD,1\0A\09.type\09CONFIG_STACK_ALIGN_DOUBLE_WORD,%object", ""() #23, !dbg !5651, !srcloc !5652
  tail call void asm sideeffect ".globl\09CONFIG_FAULT_DUMP\0A\09.equ\09CONFIG_FAULT_DUMP,2\0A\09.type\09CONFIG_FAULT_DUMP,%object", ""() #23, !dbg !5653, !srcloc !5654
  tail call void asm sideeffect ".globl\09CONFIG_ARM_STACK_PROTECTION\0A\09.equ\09CONFIG_ARM_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARM_STACK_PROTECTION,%object", ""() #23, !dbg !5655, !srcloc !5656
  tail call void asm sideeffect ".globl\09CONFIG_FP16\0A\09.equ\09CONFIG_FP16,1\0A\09.type\09CONFIG_FP16,%object", ""() #23, !dbg !5657, !srcloc !5658
  tail call void asm sideeffect ".globl\09CONFIG_FP16_IEEE\0A\09.equ\09CONFIG_FP16_IEEE,1\0A\09.type\09CONFIG_FP16_IEEE,%object", ""() #23, !dbg !5659, !srcloc !5660
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M4\0A\09.equ\09CONFIG_CPU_CORTEX_M4,1\0A\09.type\09CONFIG_CPU_CORTEX_M4,%object", ""() #23, !dbg !5661, !srcloc !5662
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_SYSTICK,%object", ""() #23, !dbg !5663, !srcloc !5664
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_DWT\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_DWT,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_DWT,%object", ""() #23, !dbg !5665, !srcloc !5666
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_BASEPRI,%object", ""() #23, !dbg !5667, !srcloc !5668
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_VTOR\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_VTOR,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_VTOR,%object", ""() #23, !dbg !5669, !srcloc !5670
  tail call void asm sideeffect ".globl\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS\0A\09.equ\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,1\0A\09.type\09CONFIG_CPU_CORTEX_M_HAS_PROGRAMMABLE_FAULT_PRIOS,%object", ""() #23, !dbg !5671, !srcloc !5672
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_MAINLINE,%object", ""() #23, !dbg !5673, !srcloc !5674
  tail call void asm sideeffect ".globl\09CONFIG_ARMV7_M_ARMV8_M_FP\0A\09.equ\09CONFIG_ARMV7_M_ARMV8_M_FP,1\0A\09.type\09CONFIG_ARMV7_M_ARMV8_M_FP,%object", ""() #23, !dbg !5675, !srcloc !5676
  tail call void asm sideeffect ".globl\09CONFIG_GEN_ISR_TABLES\0A\09.equ\09CONFIG_GEN_ISR_TABLES,1\0A\09.type\09CONFIG_GEN_ISR_TABLES,%object", ""() #23, !dbg !5677, !srcloc !5678
  tail call void asm sideeffect ".globl\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE\0A\09.equ\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,1\0A\09.type\09CONFIG_NULL_POINTER_EXCEPTION_DETECTION_NONE,%object", ""() #23, !dbg !5679, !srcloc !5680
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_VECTOR_TABLE\0A\09.equ\09CONFIG_GEN_IRQ_VECTOR_TABLE,1\0A\09.type\09CONFIG_GEN_IRQ_VECTOR_TABLE,%object", ""() #23, !dbg !5681, !srcloc !5682
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU\0A\09.equ\09CONFIG_ARM_MPU,1\0A\09.type\09CONFIG_ARM_MPU,%object", ""() #23, !dbg !5683, !srcloc !5684
  tail call void asm sideeffect ".globl\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE\0A\09.equ\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,32\0A\09.type\09CONFIG_ARM_MPU_REGION_MIN_ALIGN_AND_SIZE,%object", ""() #23, !dbg !5685, !srcloc !5686
  tail call void asm sideeffect ".globl\09CONFIG_MPU_STACK_GUARD\0A\09.equ\09CONFIG_MPU_STACK_GUARD,1\0A\09.type\09CONFIG_MPU_STACK_GUARD,%object", ""() #23, !dbg !5687, !srcloc !5688
  tail call void asm sideeffect ".globl\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE\0A\09.equ\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,32\0A\09.type\09CONFIG_CUSTOM_SECTION_MIN_ALIGN_SIZE,%object", ""() #23, !dbg !5689, !srcloc !5690
  tail call void asm sideeffect ".globl\09CONFIG_ARM\0A\09.equ\09CONFIG_ARM,1\0A\09.type\09CONFIG_ARM,%object", ""() #23, !dbg !5691, !srcloc !5692
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IS_SET\0A\09.equ\09CONFIG_ARCH_IS_SET,1\0A\09.type\09CONFIG_ARCH_IS_SET,%object", ""() #23, !dbg !5693, !srcloc !5694
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL_INF\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_ARCH_LOG_LEVEL_INF,%object", ""() #23, !dbg !5695, !srcloc !5696
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_LOG_LEVEL\0A\09.equ\09CONFIG_ARCH_LOG_LEVEL,3\0A\09.type\09CONFIG_ARCH_LOG_LEVEL,%object", ""() #23, !dbg !5697, !srcloc !5698
  tail call void asm sideeffect ".globl\09CONFIG_LITTLE_ENDIAN\0A\09.equ\09CONFIG_LITTLE_ENDIAN,1\0A\09.type\09CONFIG_LITTLE_ENDIAN,%object", ""() #23, !dbg !5699, !srcloc !5700
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_SIZE\0A\09.equ\09CONFIG_SRAM_SIZE,256\0A\09.type\09CONFIG_SRAM_SIZE,%object", ""() #23, !dbg !5701, !srcloc !5702
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_BASE_ADDRESS\0A\09.equ\09CONFIG_SRAM_BASE_ADDRESS,0x20000000\0A\09.type\09CONFIG_SRAM_BASE_ADDRESS,%object", ""() #23, !dbg !5703, !srcloc !5704
  tail call void asm sideeffect ".globl\09CONFIG_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_HW_STACK_PROTECTION,%object", ""() #23, !dbg !5705, !srcloc !5706
  tail call void asm sideeffect ".globl\09CONFIG_PRIVILEGED_STACK_SIZE\0A\09.equ\09CONFIG_PRIVILEGED_STACK_SIZE,1024\0A\09.type\09CONFIG_PRIVILEGED_STACK_SIZE,%object", ""() #23, !dbg !5707, !srcloc !5708
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_TEXT_AREA\0A\09.equ\09CONFIG_KOBJECT_TEXT_AREA,256\0A\09.type\09CONFIG_KOBJECT_TEXT_AREA,%object", ""() #23, !dbg !5709, !srcloc !5710
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT\0A\09.equ\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,100\0A\09.type\09CONFIG_KOBJECT_DATA_AREA_RESERVE_EXTRA_PERCENT,%object", ""() #23, !dbg !5711, !srcloc !5712
  tail call void asm sideeffect ".globl\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES\0A\09.equ\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,16\0A\09.type\09CONFIG_KOBJECT_RODATA_AREA_EXTRA_BYTES,%object", ""() #23, !dbg !5713, !srcloc !5714
  tail call void asm sideeffect ".globl\09CONFIG_GEN_PRIV_STACKS\0A\09.equ\09CONFIG_GEN_PRIV_STACKS,1\0A\09.type\09CONFIG_GEN_PRIV_STACKS,%object", ""() #23, !dbg !5715, !srcloc !5716
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_IRQ_VECTOR_TABLE_ALIGN,%object", ""() #23, !dbg !5717, !srcloc !5718
  tail call void asm sideeffect ".globl\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS\0A\09.equ\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,1\0A\09.type\09CONFIG_IRQ_VECTOR_TABLE_JUMP_BY_ADDRESS,%object", ""() #23, !dbg !5719, !srcloc !5720
  tail call void asm sideeffect ".globl\09CONFIG_GEN_SW_ISR_TABLE\0A\09.equ\09CONFIG_GEN_SW_ISR_TABLE,1\0A\09.type\09CONFIG_GEN_SW_ISR_TABLE,%object", ""() #23, !dbg !5721, !srcloc !5722
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN\0A\09.equ\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,4\0A\09.type\09CONFIG_ARCH_SW_ISR_TABLE_ALIGN,%object", ""() #23, !dbg !5723, !srcloc !5724
  tail call void asm sideeffect ".globl\09CONFIG_GEN_IRQ_START_VECTOR\0A\09.equ\09CONFIG_GEN_IRQ_START_VECTOR,0\0A\09.type\09CONFIG_GEN_IRQ_START_VECTOR,%object", ""() #23, !dbg !5725, !srcloc !5726
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_SINGLE_THREAD_SUPPORT,%object", ""() #23, !dbg !5727, !srcloc !5728
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS\0A\09.equ\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,1\0A\09.type\09CONFIG_ARCH_HAS_TIMING_FUNCTIONS,%object", ""() #23, !dbg !5729, !srcloc !5730
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_STACK_PROTECTION\0A\09.equ\09CONFIG_ARCH_HAS_STACK_PROTECTION,1\0A\09.type\09CONFIG_ARCH_HAS_STACK_PROTECTION,%object", ""() #23, !dbg !5731, !srcloc !5732
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_USERSPACE\0A\09.equ\09CONFIG_ARCH_HAS_USERSPACE,1\0A\09.type\09CONFIG_ARCH_HAS_USERSPACE,%object", ""() #23, !dbg !5733, !srcloc !5734
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT\0A\09.equ\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,1\0A\09.type\09CONFIG_ARCH_HAS_EXECUTABLE_PAGE_BIT,%object", ""() #23, !dbg !5735, !srcloc !5736
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT\0A\09.equ\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,1\0A\09.type\09CONFIG_ARCH_HAS_RAMFUNC_SUPPORT,%object", ""() #23, !dbg !5737, !srcloc !5738
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION\0A\09.equ\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,1\0A\09.type\09CONFIG_ARCH_HAS_NESTED_EXCEPTION_DETECTION,%object", ""() #23, !dbg !5739, !srcloc !5740
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_COREDUMP\0A\09.equ\09CONFIG_ARCH_SUPPORTS_COREDUMP,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_COREDUMP,%object", ""() #23, !dbg !5741, !srcloc !5742
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT\0A\09.equ\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,1\0A\09.type\09CONFIG_ARCH_SUPPORTS_ARCH_HW_INIT,%object", ""() #23, !dbg !5743, !srcloc !5744
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO\0A\09.equ\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,1\0A\09.type\09CONFIG_ARCH_HAS_EXTRA_EXCEPTION_INFO,%object", ""() #23, !dbg !5745, !srcloc !5746
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5747, !srcloc !5748
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM\0A\09.equ\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,1\0A\09.type\09CONFIG_ARCH_HAS_SUSPEND_TO_RAM,%object", ""() #23, !dbg !5749, !srcloc !5750
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_THREAD_ABORT\0A\09.equ\09CONFIG_ARCH_HAS_THREAD_ABORT,1\0A\09.type\09CONFIG_ARCH_HAS_THREAD_ABORT,%object", ""() #23, !dbg !5751, !srcloc !5752
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION\0A\09.equ\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,1\0A\09.type\09CONFIG_ARCH_HAS_CODE_DATA_RELOCATION,%object", ""() #23, !dbg !5753, !srcloc !5754
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_FPU\0A\09.equ\09CONFIG_CPU_HAS_FPU,1\0A\09.type\09CONFIG_CPU_HAS_FPU,%object", ""() #23, !dbg !5755, !srcloc !5756
  tail call void asm sideeffect ".globl\09CONFIG_CPU_HAS_MPU\0A\09.equ\09CONFIG_CPU_HAS_MPU,1\0A\09.type\09CONFIG_CPU_HAS_MPU,%object", ""() #23, !dbg !5757, !srcloc !5758
  tail call void asm sideeffect ".globl\09CONFIG_MPU\0A\09.equ\09CONFIG_MPU,1\0A\09.type\09CONFIG_MPU,%object", ""() #23, !dbg !5759, !srcloc !5760
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL_INF\0A\09.equ\09CONFIG_MPU_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_MPU_LOG_LEVEL_INF,%object", ""() #23, !dbg !5761, !srcloc !5762
  tail call void asm sideeffect ".globl\09CONFIG_MPU_LOG_LEVEL\0A\09.equ\09CONFIG_MPU_LOG_LEVEL,3\0A\09.type\09CONFIG_MPU_LOG_LEVEL,%object", ""() #23, !dbg !5763, !srcloc !5764
  tail call void asm sideeffect ".globl\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT\0A\09.equ\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,1\0A\09.type\09CONFIG_MPU_REQUIRES_POWER_OF_TWO_ALIGNMENT,%object", ""() #23, !dbg !5765, !srcloc !5766
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_REGION_PERMISSIONS\0A\09.equ\09CONFIG_SRAM_REGION_PERMISSIONS,1\0A\09.type\09CONFIG_SRAM_REGION_PERMISSIONS,%object", ""() #23, !dbg !5767, !srcloc !5768
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS\0A\09.equ\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,1\0A\09.type\09CONFIG_TOOLCHAIN_HAS_BUILTIN_FFS,%object", ""() #23, !dbg !5769, !srcloc !5770
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5771, !srcloc !5772
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_LOG_LEVEL\0A\09.equ\09CONFIG_KERNEL_LOG_LEVEL,3\0A\09.type\09CONFIG_KERNEL_LOG_LEVEL,%object", ""() #23, !dbg !5773, !srcloc !5774
  tail call void asm sideeffect ".globl\09CONFIG_MULTITHREADING\0A\09.equ\09CONFIG_MULTITHREADING,1\0A\09.type\09CONFIG_MULTITHREADING,%object", ""() #23, !dbg !5775, !srcloc !5776
  tail call void asm sideeffect ".globl\09CONFIG_NUM_COOP_PRIORITIES\0A\09.equ\09CONFIG_NUM_COOP_PRIORITIES,16\0A\09.type\09CONFIG_NUM_COOP_PRIORITIES,%object", ""() #23, !dbg !5777, !srcloc !5778
  tail call void asm sideeffect ".globl\09CONFIG_NUM_PREEMPT_PRIORITIES\0A\09.equ\09CONFIG_NUM_PREEMPT_PRIORITIES,15\0A\09.type\09CONFIG_NUM_PREEMPT_PRIORITIES,%object", ""() #23, !dbg !5779, !srcloc !5780
  tail call void asm sideeffect ".globl\09CONFIG_MAIN_THREAD_PRIORITY\0A\09.equ\09CONFIG_MAIN_THREAD_PRIORITY,0\0A\09.type\09CONFIG_MAIN_THREAD_PRIORITY,%object", ""() #23, !dbg !5781, !srcloc !5782
  tail call void asm sideeffect ".globl\09CONFIG_COOP_ENABLED\0A\09.equ\09CONFIG_COOP_ENABLED,1\0A\09.type\09CONFIG_COOP_ENABLED,%object", ""() #23, !dbg !5783, !srcloc !5784
  tail call void asm sideeffect ".globl\09CONFIG_PREEMPT_ENABLED\0A\09.equ\09CONFIG_PREEMPT_ENABLED,1\0A\09.type\09CONFIG_PREEMPT_ENABLED,%object", ""() #23, !dbg !5785, !srcloc !5786
  tail call void asm sideeffect ".globl\09CONFIG_PRIORITY_CEILING\0A\09.equ\09CONFIG_PRIORITY_CEILING,-127\0A\09.type\09CONFIG_PRIORITY_CEILING,%object", ""() #23, !dbg !5787, !srcloc !5788
  tail call void asm sideeffect ".globl\09CONFIG_NUM_METAIRQ_PRIORITIES\0A\09.equ\09CONFIG_NUM_METAIRQ_PRIORITIES,0\0A\09.type\09CONFIG_NUM_METAIRQ_PRIORITIES,%object", ""() #23, !dbg !5789, !srcloc !5790
  tail call void asm sideeffect ".globl\09CONFIG_IDLE_STACK_SIZE\0A\09.equ\09CONFIG_IDLE_STACK_SIZE,320\0A\09.type\09CONFIG_IDLE_STACK_SIZE,%object", ""() #23, !dbg !5791, !srcloc !5792
  tail call void asm sideeffect ".globl\09CONFIG_ISR_STACK_SIZE\0A\09.equ\09CONFIG_ISR_STACK_SIZE,2048\0A\09.type\09CONFIG_ISR_STACK_SIZE,%object", ""() #23, !dbg !5793, !srcloc !5794
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_STACK_INFO\0A\09.equ\09CONFIG_THREAD_STACK_INFO,1\0A\09.type\09CONFIG_THREAD_STACK_INFO,%object", ""() #23, !dbg !5795, !srcloc !5796
  tail call void asm sideeffect ".globl\09CONFIG_ERRNO\0A\09.equ\09CONFIG_ERRNO,1\0A\09.type\09CONFIG_ERRNO,%object", ""() #23, !dbg !5797, !srcloc !5798
  tail call void asm sideeffect ".globl\09CONFIG_SCHED_DUMB\0A\09.equ\09CONFIG_SCHED_DUMB,1\0A\09.type\09CONFIG_SCHED_DUMB,%object", ""() #23, !dbg !5799, !srcloc !5800
  tail call void asm sideeffect ".globl\09CONFIG_WAITQ_DUMB\0A\09.equ\09CONFIG_WAITQ_DUMB,1\0A\09.type\09CONFIG_WAITQ_DUMB,%object", ""() #23, !dbg !5801, !srcloc !5802
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_BANNER\0A\09.equ\09CONFIG_BOOT_BANNER,1\0A\09.type\09CONFIG_BOOT_BANNER,%object", ""() #23, !dbg !5803, !srcloc !5804
  tail call void asm sideeffect ".globl\09CONFIG_BOOT_DELAY\0A\09.equ\09CONFIG_BOOT_DELAY,0\0A\09.type\09CONFIG_BOOT_DELAY,%object", ""() #23, !dbg !5805, !srcloc !5806
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_NAME\0A\09.equ\09CONFIG_THREAD_NAME,1\0A\09.type\09CONFIG_THREAD_NAME,%object", ""() #23, !dbg !5807, !srcloc !5808
  tail call void asm sideeffect ".globl\09CONFIG_THREAD_MAX_NAME_LEN\0A\09.equ\09CONFIG_THREAD_MAX_NAME_LEN,32\0A\09.type\09CONFIG_THREAD_MAX_NAME_LEN,%object", ""() #23, !dbg !5809, !srcloc !5810
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,1024\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE,%object", ""() #23, !dbg !5811, !srcloc !5812
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,-1\0A\09.type\09CONFIG_SYSTEM_WORKQUEUE_PRIORITY,%object", ""() #23, !dbg !5813, !srcloc !5814
  tail call void asm sideeffect ".globl\09CONFIG_ATOMIC_OPERATIONS_BUILTIN\0A\09.equ\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,1\0A\09.type\09CONFIG_ATOMIC_OPERATIONS_BUILTIN,%object", ""() #23, !dbg !5815, !srcloc !5816
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICING\0A\09.equ\09CONFIG_TIMESLICING,1\0A\09.type\09CONFIG_TIMESLICING,%object", ""() #23, !dbg !5817, !srcloc !5818
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_SIZE\0A\09.equ\09CONFIG_TIMESLICE_SIZE,0\0A\09.type\09CONFIG_TIMESLICE_SIZE,%object", ""() #23, !dbg !5819, !srcloc !5820
  tail call void asm sideeffect ".globl\09CONFIG_TIMESLICE_PRIORITY\0A\09.equ\09CONFIG_TIMESLICE_PRIORITY,0\0A\09.type\09CONFIG_TIMESLICE_PRIORITY,%object", ""() #23, !dbg !5821, !srcloc !5822
  tail call void asm sideeffect ".globl\09CONFIG_NUM_MBOX_ASYNC_MSGS\0A\09.equ\09CONFIG_NUM_MBOX_ASYNC_MSGS,10\0A\09.type\09CONFIG_NUM_MBOX_ASYNC_MSGS,%object", ""() #23, !dbg !5823, !srcloc !5824
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_MEM_POOL\0A\09.equ\09CONFIG_KERNEL_MEM_POOL,1\0A\09.type\09CONFIG_KERNEL_MEM_POOL,%object", ""() #23, !dbg !5825, !srcloc !5826
  tail call void asm sideeffect ".globl\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN\0A\09.equ\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,1\0A\09.type\09CONFIG_ARCH_HAS_CUSTOM_SWAP_TO_MAIN,%object", ""() #23, !dbg !5827, !srcloc !5828
  tail call void asm sideeffect ".globl\09CONFIG_SWAP_NONATOMIC\0A\09.equ\09CONFIG_SWAP_NONATOMIC,1\0A\09.type\09CONFIG_SWAP_NONATOMIC,%object", ""() #23, !dbg !5829, !srcloc !5830
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_EXISTS\0A\09.equ\09CONFIG_SYS_CLOCK_EXISTS,1\0A\09.type\09CONFIG_SYS_CLOCK_EXISTS,%object", ""() #23, !dbg !5831, !srcloc !5832
  tail call void asm sideeffect ".globl\09CONFIG_TIMEOUT_64BIT\0A\09.equ\09CONFIG_TIMEOUT_64BIT,1\0A\09.type\09CONFIG_TIMEOUT_64BIT,%object", ""() #23, !dbg !5833, !srcloc !5834
  tail call void asm sideeffect ".globl\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS\0A\09.equ\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,365\0A\09.type\09CONFIG_SYS_CLOCK_MAX_TIMEOUT_DAYS,%object", ""() #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect ".globl\09CONFIG_XIP\0A\09.equ\09CONFIG_XIP,1\0A\09.type\09CONFIG_XIP,%object", ""() #23, !dbg !5837, !srcloc !5838
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,30\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_OBJECTS,%object", ""() #23, !dbg !5839, !srcloc !5840
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,40\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEFAULT,%object", ""() #23, !dbg !5841, !srcloc !5842
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE\0A\09.equ\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,50\0A\09.type\09CONFIG_KERNEL_INIT_PRIORITY_DEVICE,%object", ""() #23, !dbg !5843, !srcloc !5844
  tail call void asm sideeffect ".globl\09CONFIG_APPLICATION_INIT_PRIORITY\0A\09.equ\09CONFIG_APPLICATION_INIT_PRIORITY,90\0A\09.type\09CONFIG_APPLICATION_INIT_PRIORITY,%object", ""() #23, !dbg !5845, !srcloc !5846
  tail call void asm sideeffect ".globl\09CONFIG_MP_NUM_CPUS\0A\09.equ\09CONFIG_MP_NUM_CPUS,1\0A\09.type\09CONFIG_MP_NUM_CPUS,%object", ""() #23, !dbg !5847, !srcloc !5848
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_KERNEL\0A\09.equ\09CONFIG_TICKLESS_KERNEL,1\0A\09.type\09CONFIG_TICKLESS_KERNEL,%object", ""() #23, !dbg !5849, !srcloc !5850
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !5851, !srcloc !5852
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE\0A\09.equ\09CONFIG_CONSOLE,1\0A\09.type\09CONFIG_CONSOLE,%object", ""() #23, !dbg !5853, !srcloc !5854
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN\0A\09.equ\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,128\0A\09.type\09CONFIG_CONSOLE_INPUT_MAX_LINE_LEN,%object", ""() #23, !dbg !5855, !srcloc !5856
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_HAS_DRIVER\0A\09.equ\09CONFIG_CONSOLE_HAS_DRIVER,1\0A\09.type\09CONFIG_CONSOLE_HAS_DRIVER,%object", ""() #23, !dbg !5857, !srcloc !5858
  tail call void asm sideeffect ".globl\09CONFIG_CONSOLE_INIT_PRIORITY\0A\09.equ\09CONFIG_CONSOLE_INIT_PRIORITY,60\0A\09.type\09CONFIG_CONSOLE_INIT_PRIORITY,%object", ""() #23, !dbg !5859, !srcloc !5860
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE\0A\09.equ\09CONFIG_UART_CONSOLE,1\0A\09.type\09CONFIG_UART_CONSOLE,%object", ""() #23, !dbg !5861, !srcloc !5862
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5863, !srcloc !5864
  tail call void asm sideeffect ".globl\09CONFIG_UART_CONSOLE_LOG_LEVEL\0A\09.equ\09CONFIG_UART_CONSOLE_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_CONSOLE_LOG_LEVEL,%object", ""() #23, !dbg !5865, !srcloc !5866
  tail call void asm sideeffect ".globl\09CONFIG_HAS_SEGGER_RTT\0A\09.equ\09CONFIG_HAS_SEGGER_RTT,1\0A\09.type\09CONFIG_HAS_SEGGER_RTT,%object", ""() #23, !dbg !5867, !srcloc !5868
  tail call void asm sideeffect ".globl\09CONFIG_ETH_INIT_PRIORITY\0A\09.equ\09CONFIG_ETH_INIT_PRIORITY,80\0A\09.type\09CONFIG_ETH_INIT_PRIORITY,%object", ""() #23, !dbg !5869, !srcloc !5870
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_HAS_DRIVER\0A\09.equ\09CONFIG_SERIAL_HAS_DRIVER,1\0A\09.type\09CONFIG_SERIAL_HAS_DRIVER,%object", ""() #23, !dbg !5871, !srcloc !5872
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_ASYNC\0A\09.equ\09CONFIG_SERIAL_SUPPORT_ASYNC,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_ASYNC,%object", ""() #23, !dbg !5873, !srcloc !5874
  tail call void asm sideeffect ".globl\09CONFIG_SERIAL_SUPPORT_INTERRUPT\0A\09.equ\09CONFIG_SERIAL_SUPPORT_INTERRUPT,1\0A\09.type\09CONFIG_SERIAL_SUPPORT_INTERRUPT,%object", ""() #23, !dbg !5875, !srcloc !5876
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL_INF\0A\09.equ\09CONFIG_UART_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_UART_LOG_LEVEL_INF,%object", ""() #23, !dbg !5877, !srcloc !5878
  tail call void asm sideeffect ".globl\09CONFIG_UART_LOG_LEVEL\0A\09.equ\09CONFIG_UART_LOG_LEVEL,3\0A\09.type\09CONFIG_UART_LOG_LEVEL,%object", ""() #23, !dbg !5879, !srcloc !5880
  tail call void asm sideeffect ".globl\09CONFIG_UART_USE_RUNTIME_CONFIGURE\0A\09.equ\09CONFIG_UART_USE_RUNTIME_CONFIGURE,1\0A\09.type\09CONFIG_UART_USE_RUNTIME_CONFIGURE,%object", ""() #23, !dbg !5881, !srcloc !5882
  tail call void asm sideeffect ".globl\09CONFIG_UART_STM32\0A\09.equ\09CONFIG_UART_STM32,1\0A\09.type\09CONFIG_UART_STM32,%object", ""() #23, !dbg !5883, !srcloc !5884
  tail call void asm sideeffect ".globl\09CONFIG_INTC_INIT_PRIORITY\0A\09.equ\09CONFIG_INTC_INIT_PRIORITY,40\0A\09.type\09CONFIG_INTC_INIT_PRIORITY,%object", ""() #23, !dbg !5885, !srcloc !5886
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_INTC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_INTC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5887, !srcloc !5888
  tail call void asm sideeffect ".globl\09CONFIG_INTC_LOG_LEVEL\0A\09.equ\09CONFIG_INTC_LOG_LEVEL,3\0A\09.type\09CONFIG_INTC_LOG_LEVEL,%object", ""() #23, !dbg !5889, !srcloc !5890
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32\0A\09.equ\09CONFIG_EXTI_STM32,1\0A\09.type\09CONFIG_EXTI_STM32,%object", ""() #23, !dbg !5891, !srcloc !5892
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI0_IRQ_PRI,%object", ""() #23, !dbg !5893, !srcloc !5894
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI1_IRQ_PRI,%object", ""() #23, !dbg !5895, !srcloc !5896
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI2_IRQ_PRI,%object", ""() #23, !dbg !5897, !srcloc !5898
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI3_IRQ_PRI,%object", ""() #23, !dbg !5899, !srcloc !5900
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI4_IRQ_PRI,%object", ""() #23, !dbg !5901, !srcloc !5902
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI9_5_IRQ_PRI,%object", ""() #23, !dbg !5903, !srcloc !5904
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_EXTI15_10_IRQ_PRI,%object", ""() #23, !dbg !5905, !srcloc !5906
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_PVD_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_PVD_IRQ_PRI,%object", ""() #23, !dbg !5907, !srcloc !5908
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_OTG_FS_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5909, !srcloc !5910
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_TAMP_STAMP_IRQ_PRI,%object", ""() #23, !dbg !5911, !srcloc !5912
  tail call void asm sideeffect ".globl\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI\0A\09.equ\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,0\0A\09.type\09CONFIG_EXTI_STM32_RTC_WKUP_IRQ_PRI,%object", ""() #23, !dbg !5913, !srcloc !5914
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY\0A\09.equ\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,0\0A\09.type\09CONFIG_SYSTEM_CLOCK_INIT_PRIORITY,%object", ""() #23, !dbg !5915, !srcloc !5916
  tail call void asm sideeffect ".globl\09CONFIG_TICKLESS_CAPABLE\0A\09.equ\09CONFIG_TICKLESS_CAPABLE,1\0A\09.type\09CONFIG_TICKLESS_CAPABLE,%object", ""() #23, !dbg !5917, !srcloc !5918
  tail call void asm sideeffect ".globl\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT\0A\09.equ\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,1\0A\09.type\09CONFIG_SYSTEM_TIMER_HAS_DISABLE_SUPPORT,%object", ""() #23, !dbg !5919, !srcloc !5920
  tail call void asm sideeffect ".globl\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR\0A\09.equ\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,1\0A\09.type\09CONFIG_CORTEX_M_SYSTICK_INSTALL_ISR,%object", ""() #23, !dbg !5921, !srcloc !5922
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL_INF\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_GPIO_LOG_LEVEL_INF,%object", ""() #23, !dbg !5923, !srcloc !5924
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_LOG_LEVEL\0A\09.equ\09CONFIG_GPIO_LOG_LEVEL,3\0A\09.type\09CONFIG_GPIO_LOG_LEVEL,%object", ""() #23, !dbg !5925, !srcloc !5926
  tail call void asm sideeffect ".globl\09CONFIG_GPIO_STM32\0A\09.equ\09CONFIG_GPIO_STM32,1\0A\09.type\09CONFIG_GPIO_STM32,%object", ""() #23, !dbg !5927, !srcloc !5928
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL_INF\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL_INF,%object", ""() #23, !dbg !5929, !srcloc !5930
  tail call void asm sideeffect ".globl\09CONFIG_FXL6408_LOG_LEVEL\0A\09.equ\09CONFIG_FXL6408_LOG_LEVEL,3\0A\09.type\09CONFIG_FXL6408_LOG_LEVEL,%object", ""() #23, !dbg !5931, !srcloc !5932
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5933, !srcloc !5934
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_CONTROL_LOG_LEVEL\0A\09.equ\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,3\0A\09.type\09CONFIG_CLOCK_CONTROL_LOG_LEVEL,%object", ""() #23, !dbg !5935, !srcloc !5936
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_HSE_CLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_HSE_CLOCK,16000000\0A\09.type\09CONFIG_CLOCK_STM32_HSE_CLOCK,%object", ""() #23, !dbg !5937, !srcloc !5938
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO1_SRC_NOCLOCK,%object", ""() #23, !dbg !5939, !srcloc !5940
  tail call void asm sideeffect ".globl\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK\0A\09.equ\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,1\0A\09.type\09CONFIG_CLOCK_STM32_MCO2_SRC_NOCLOCK,%object", ""() #23, !dbg !5941, !srcloc !5942
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL_INF\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL_INF,%object", ""() #23, !dbg !5943, !srcloc !5944
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_LOG_LEVEL\0A\09.equ\09CONFIG_PINCTRL_LOG_LEVEL,3\0A\09.type\09CONFIG_PINCTRL_LOG_LEVEL,%object", ""() #23, !dbg !5945, !srcloc !5946
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32\0A\09.equ\09CONFIG_PINCTRL_STM32,1\0A\09.type\09CONFIG_PINCTRL_STM32,%object", ""() #23, !dbg !5947, !srcloc !5948
  tail call void asm sideeffect ".globl\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY\0A\09.equ\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,2\0A\09.type\09CONFIG_PINCTRL_STM32_REMAP_INIT_PRIORITY,%object", ""() #23, !dbg !5949, !srcloc !5950
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL_INF\0A\09.equ\09CONFIG_USBC_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_USBC_LOG_LEVEL_INF,%object", ""() #23, !dbg !5951, !srcloc !5952
  tail call void asm sideeffect ".globl\09CONFIG_USBC_LOG_LEVEL\0A\09.equ\09CONFIG_USBC_LOG_LEVEL,3\0A\09.type\09CONFIG_USBC_LOG_LEVEL,%object", ""() #23, !dbg !5953, !srcloc !5954
  tail call void asm sideeffect ".globl\09CONFIG_SUPPORT_MINIMAL_LIBC\0A\09.equ\09CONFIG_SUPPORT_MINIMAL_LIBC,1\0A\09.type\09CONFIG_SUPPORT_MINIMAL_LIBC,%object", ""() #23, !dbg !5955, !srcloc !5956
  tail call void asm sideeffect ".globl\09CONFIG_PICOLIBC_SUPPORTED\0A\09.equ\09CONFIG_PICOLIBC_SUPPORTED,1\0A\09.type\09CONFIG_PICOLIBC_SUPPORTED,%object", ""() #23, !dbg !5957, !srcloc !5958
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC\0A\09.equ\09CONFIG_MINIMAL_LIBC,1\0A\09.type\09CONFIG_MINIMAL_LIBC,%object", ""() #23, !dbg !5959, !srcloc !5960
  tail call void asm sideeffect ".globl\09CONFIG_HAS_NEWLIB_LIBC_NANO\0A\09.equ\09CONFIG_HAS_NEWLIB_LIBC_NANO,1\0A\09.type\09CONFIG_HAS_NEWLIB_LIBC_NANO,%object", ""() #23, !dbg !5961, !srcloc !5962
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS\0A\09.equ\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,1\0A\09.type\09CONFIG_MINIMAL_LIBC_NON_REENTRANT_FUNCTIONS,%object", ""() #23, !dbg !5963, !srcloc !5964
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC,%object", ""() #23, !dbg !5965, !srcloc !5966
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,0\0A\09.type\09CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE,%object", ""() #23, !dbg !5967, !srcloc !5968
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_CALLOC\0A\09.equ\09CONFIG_MINIMAL_LIBC_CALLOC,1\0A\09.type\09CONFIG_MINIMAL_LIBC_CALLOC,%object", ""() #23, !dbg !5969, !srcloc !5970
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_REALLOCARRAY\0A\09.equ\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,1\0A\09.type\09CONFIG_MINIMAL_LIBC_REALLOCARRAY,%object", ""() #23, !dbg !5971, !srcloc !5972
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE\0A\09.equ\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,1\0A\09.type\09CONFIG_MINIMAL_LIBC_OPTIMIZE_STRING_FOR_SIZE,%object", ""() #23, !dbg !5973, !srcloc !5974
  tail call void asm sideeffect ".globl\09CONFIG_MINIMAL_LIBC_TIME\0A\09.equ\09CONFIG_MINIMAL_LIBC_TIME,1\0A\09.type\09CONFIG_MINIMAL_LIBC_TIME,%object", ""() #23, !dbg !5975, !srcloc !5976
  tail call void asm sideeffect ".globl\09CONFIG_STDOUT_CONSOLE\0A\09.equ\09CONFIG_STDOUT_CONSOLE,1\0A\09.type\09CONFIG_STDOUT_CONSOLE,%object", ""() #23, !dbg !5977, !srcloc !5978
  tail call void asm sideeffect ".globl\09CONFIG_NEED_LIBC_MEM_PARTITION\0A\09.equ\09CONFIG_NEED_LIBC_MEM_PARTITION,1\0A\09.type\09CONFIG_NEED_LIBC_MEM_PARTITION,%object", ""() #23, !dbg !5979, !srcloc !5980
  tail call void asm sideeffect ".globl\09CONFIG_CRC\0A\09.equ\09CONFIG_CRC,1\0A\09.type\09CONFIG_CRC,%object", ""() #23, !dbg !5981, !srcloc !5982
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_COMPLETE\0A\09.equ\09CONFIG_CBPRINTF_COMPLETE,1\0A\09.type\09CONFIG_CBPRINTF_COMPLETE,%object", ""() #23, !dbg !5983, !srcloc !5984
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_FULL_INTEGRAL\0A\09.equ\09CONFIG_CBPRINTF_FULL_INTEGRAL,1\0A\09.type\09CONFIG_CBPRINTF_FULL_INTEGRAL,%object", ""() #23, !dbg !5985, !srcloc !5986
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_N_SPECIFIER\0A\09.equ\09CONFIG_CBPRINTF_N_SPECIFIER,1\0A\09.type\09CONFIG_CBPRINTF_N_SPECIFIER,%object", ""() #23, !dbg !5987, !srcloc !5988
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,1\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL_INF,%object", ""() #23, !dbg !5989, !srcloc !5990
  tail call void asm sideeffect ".globl\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL\0A\09.equ\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,3\0A\09.type\09CONFIG_CBPRINTF_PACKAGE_LOG_LEVEL,%object", ""() #23, !dbg !5991, !srcloc !5992
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_ALLOC_LOOPS\0A\09.equ\09CONFIG_SYS_HEAP_ALLOC_LOOPS,3\0A\09.type\09CONFIG_SYS_HEAP_ALLOC_LOOPS,%object", ""() #23, !dbg !5993, !srcloc !5994
  tail call void asm sideeffect ".globl\09CONFIG_SYS_HEAP_SMALL_ONLY\0A\09.equ\09CONFIG_SYS_HEAP_SMALL_ONLY,1\0A\09.type\09CONFIG_SYS_HEAP_SMALL_ONLY,%object", ""() #23, !dbg !5995, !srcloc !5996
  tail call void asm sideeffect ".globl\09CONFIG_POSIX_MAX_FDS\0A\09.equ\09CONFIG_POSIX_MAX_FDS,4\0A\09.type\09CONFIG_POSIX_MAX_FDS,%object", ""() #23, !dbg !5997, !srcloc !5998
  tail call void asm sideeffect ".globl\09CONFIG_MAX_TIMER_COUNT\0A\09.equ\09CONFIG_MAX_TIMER_COUNT,5\0A\09.type\09CONFIG_MAX_TIMER_COUNT,%object", ""() #23, !dbg !5999, !srcloc !6000
  tail call void asm sideeffect ".globl\09CONFIG_PRINTK\0A\09.equ\09CONFIG_PRINTK,1\0A\09.type\09CONFIG_PRINTK,%object", ""() #23, !dbg !6001, !srcloc !6002
  tail call void asm sideeffect ".globl\09CONFIG_EARLY_CONSOLE\0A\09.equ\09CONFIG_EARLY_CONSOLE,1\0A\09.type\09CONFIG_EARLY_CONSOLE,%object", ""() #23, !dbg !6003, !srcloc !6004
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT\0A\09.equ\09CONFIG_ASSERT,1\0A\09.type\09CONFIG_ASSERT,%object", ""() #23, !dbg !6005, !srcloc !6006
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_LEVEL\0A\09.equ\09CONFIG_ASSERT_LEVEL,2\0A\09.type\09CONFIG_ASSERT_LEVEL,%object", ""() #23, !dbg !6007, !srcloc !6008
  tail call void asm sideeffect ".globl\09CONFIG_SPIN_VALIDATE\0A\09.equ\09CONFIG_SPIN_VALIDATE,1\0A\09.type\09CONFIG_SPIN_VALIDATE,%object", ""() #23, !dbg !6009, !srcloc !6010
  tail call void asm sideeffect ".globl\09CONFIG_ASSERT_VERBOSE\0A\09.equ\09CONFIG_ASSERT_VERBOSE,1\0A\09.type\09CONFIG_ASSERT_VERBOSE,%object", ""() #23, !dbg !6011, !srcloc !6012
  tail call void asm sideeffect ".globl\09CONFIG_LOG\0A\09.equ\09CONFIG_LOG,1\0A\09.type\09CONFIG_LOG,%object", ""() #23, !dbg !6013, !srcloc !6014
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MODE_MINIMAL\0A\09.equ\09CONFIG_LOG_MODE_MINIMAL,1\0A\09.type\09CONFIG_LOG_MODE_MINIMAL,%object", ""() #23, !dbg !6015, !srcloc !6016
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_MINIMAL\0A\09.equ\09CONFIG_LOG_DEFAULT_MINIMAL,1\0A\09.type\09CONFIG_LOG_DEFAULT_MINIMAL,%object", ""() #23, !dbg !6017, !srcloc !6018
  tail call void asm sideeffect ".globl\09CONFIG_LOG_DEFAULT_LEVEL\0A\09.equ\09CONFIG_LOG_DEFAULT_LEVEL,3\0A\09.type\09CONFIG_LOG_DEFAULT_LEVEL,%object", ""() #23, !dbg !6019, !srcloc !6020
  tail call void asm sideeffect ".globl\09CONFIG_LOG_OVERRIDE_LEVEL\0A\09.equ\09CONFIG_LOG_OVERRIDE_LEVEL,0\0A\09.type\09CONFIG_LOG_OVERRIDE_LEVEL,%object", ""() #23, !dbg !6021, !srcloc !6022
  tail call void asm sideeffect ".globl\09CONFIG_LOG_MAX_LEVEL\0A\09.equ\09CONFIG_LOG_MAX_LEVEL,4\0A\09.type\09CONFIG_LOG_MAX_LEVEL,%object", ""() #23, !dbg !6023, !srcloc !6024
  tail call void asm sideeffect ".globl\09CONFIG_LOG_USE_VLA\0A\09.equ\09CONFIG_LOG_USE_VLA,1\0A\09.type\09CONFIG_LOG_USE_VLA,%object", ""() #23, !dbg !6025, !srcloc !6026
  tail call void asm sideeffect ".globl\09CONFIG_TEST\0A\09.equ\09CONFIG_TEST,1\0A\09.type\09CONFIG_TEST,%object", ""() #23, !dbg !6027, !srcloc !6028
  tail call void asm sideeffect ".globl\09CONFIG_COVERAGE_GCOV_HEAP_SIZE\0A\09.equ\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,16384\0A\09.type\09CONFIG_COVERAGE_GCOV_HEAP_SIZE,%object", ""() #23, !dbg !6029, !srcloc !6030
  tail call void asm sideeffect ".globl\09CONFIG_TEST_LOGGING_DEFAULTS\0A\09.equ\09CONFIG_TEST_LOGGING_DEFAULTS,1\0A\09.type\09CONFIG_TEST_LOGGING_DEFAULTS,%object", ""() #23, !dbg !6031, !srcloc !6032
  tail call void asm sideeffect ".globl\09CONFIG_TEST_HW_STACK_PROTECTION\0A\09.equ\09CONFIG_TEST_HW_STACK_PROTECTION,1\0A\09.type\09CONFIG_TEST_HW_STACK_PROTECTION,%object", ""() #23, !dbg !6033, !srcloc !6034
  tail call void asm sideeffect ".globl\09CONFIG_TEST_ARM_CORTEX_M\0A\09.equ\09CONFIG_TEST_ARM_CORTEX_M,1\0A\09.type\09CONFIG_TEST_ARM_CORTEX_M,%object", ""() #23, !dbg !6035, !srcloc !6036
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_0_15\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_0_15,%object", ""() #23, !dbg !6037, !srcloc !6038
  tail call void asm sideeffect ".globl\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE\0A\09.equ\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,1\0A\09.type\09CONFIG_TOOLCHAIN_ZEPHYR_SUPPORTS_THREAD_LOCAL_STORAGE,%object", ""() #23, !dbg !6039, !srcloc !6040
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_ORPHAN_SECTION_WARN\0A\09.equ\09CONFIG_LINKER_ORPHAN_SECTION_WARN,1\0A\09.type\09CONFIG_LINKER_ORPHAN_SECTION_WARN,%object", ""() #23, !dbg !6041, !srcloc !6042
  tail call void asm sideeffect ".globl\09CONFIG_HAS_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_HAS_FLASH_LOAD_OFFSET,1\0A\09.type\09CONFIG_HAS_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6043, !srcloc !6044
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_OFFSET\0A\09.equ\09CONFIG_FLASH_LOAD_OFFSET,0x0\0A\09.type\09CONFIG_FLASH_LOAD_OFFSET,%object", ""() #23, !dbg !6045, !srcloc !6046
  tail call void asm sideeffect ".globl\09CONFIG_FLASH_LOAD_SIZE\0A\09.equ\09CONFIG_FLASH_LOAD_SIZE,0x0\0A\09.type\09CONFIG_FLASH_LOAD_SIZE,%object", ""() #23, !dbg !6047, !srcloc !6048
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED\0A\09.equ\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,1\0A\09.type\09CONFIG_LD_LINKER_SCRIPT_SUPPORTED,%object", ""() #23, !dbg !6049, !srcloc !6050
  tail call void asm sideeffect ".globl\09CONFIG_LD_LINKER_TEMPLATE\0A\09.equ\09CONFIG_LD_LINKER_TEMPLATE,1\0A\09.type\09CONFIG_LD_LINKER_TEMPLATE,%object", ""() #23, !dbg !6051, !srcloc !6052
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_ENTRY\0A\09.equ\09CONFIG_KERNEL_ENTRY,1\0A\09.type\09CONFIG_KERNEL_ENTRY,%object", ""() #23, !dbg !6053, !srcloc !6054
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_SORT_BY_ALIGNMENT\0A\09.equ\09CONFIG_LINKER_SORT_BY_ALIGNMENT,1\0A\09.type\09CONFIG_LINKER_SORT_BY_ALIGNMENT,%object", ""() #23, !dbg !6055, !srcloc !6056
  tail call void asm sideeffect ".globl\09CONFIG_SRAM_OFFSET\0A\09.equ\09CONFIG_SRAM_OFFSET,0x0\0A\09.type\09CONFIG_SRAM_OFFSET,%object", ""() #23, !dbg !6057, !srcloc !6058
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT\0A\09.equ\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,1\0A\09.type\09CONFIG_LINKER_GENERIC_SECTIONS_PRESENT_AT_BOOT,%object", ""() #23, !dbg !6059, !srcloc !6060
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID,1\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID,%object", ""() #23, !dbg !6061, !srcloc !6062
  tail call void asm sideeffect ".globl\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN\0A\09.equ\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,0xE015E015\0A\09.type\09CONFIG_LINKER_LAST_SECTION_ID_PATTERN,%object", ""() #23, !dbg !6063, !srcloc !6064
  tail call void asm sideeffect ".globl\09CONFIG_SIZE_OPTIMIZATIONS\0A\09.equ\09CONFIG_SIZE_OPTIMIZATIONS,1\0A\09.type\09CONFIG_SIZE_OPTIMIZATIONS,%object", ""() #23, !dbg !6065, !srcloc !6066
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_COLOR_DIAGNOSTICS\0A\09.equ\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,1\0A\09.type\09CONFIG_COMPILER_COLOR_DIAGNOSTICS,%object", ""() #23, !dbg !6067, !srcloc !6068
  tail call void asm sideeffect ".globl\09CONFIG_FORTIFY_SOURCE_NONE\0A\09.equ\09CONFIG_FORTIFY_SOURCE_NONE,1\0A\09.type\09CONFIG_FORTIFY_SOURCE_NONE,%object", ""() #23, !dbg !6069, !srcloc !6070
  tail call void asm sideeffect ".globl\09CONFIG_COMPILER_OPT\0A\09.equ\09CONFIG_COMPILER_OPT,1\0A\09.type\09CONFIG_COMPILER_OPT,%object", ""() #23, !dbg !6071, !srcloc !6072
  tail call void asm sideeffect ".globl\09CONFIG_RUNTIME_ERROR_CHECKS\0A\09.equ\09CONFIG_RUNTIME_ERROR_CHECKS,1\0A\09.type\09CONFIG_RUNTIME_ERROR_CHECKS,%object", ""() #23, !dbg !6073, !srcloc !6074
  tail call void asm sideeffect ".globl\09CONFIG_KERNEL_BIN_NAME\0A\09.equ\09CONFIG_KERNEL_BIN_NAME,1\0A\09.type\09CONFIG_KERNEL_BIN_NAME,%object", ""() #23, !dbg !6075, !srcloc !6076
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_STAT\0A\09.equ\09CONFIG_OUTPUT_STAT,1\0A\09.type\09CONFIG_OUTPUT_STAT,%object", ""() #23, !dbg !6077, !srcloc !6078
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_DISASSEMBLY\0A\09.equ\09CONFIG_OUTPUT_DISASSEMBLY,1\0A\09.type\09CONFIG_OUTPUT_DISASSEMBLY,%object", ""() #23, !dbg !6079, !srcloc !6080
  tail call void asm sideeffect ".globl\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE\0A\09.equ\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,1\0A\09.type\09CONFIG_OUTPUT_PRINT_MEMORY_USAGE,%object", ""() #23, !dbg !6081, !srcloc !6082
  tail call void asm sideeffect ".globl\09CONFIG_BUILD_OUTPUT_BIN\0A\09.equ\09CONFIG_BUILD_OUTPUT_BIN,1\0A\09.type\09CONFIG_BUILD_OUTPUT_BIN,%object", ""() #23, !dbg !6083, !srcloc !6084
  tail call void asm sideeffect ".globl\09CONFIG_WARN_DEPRECATED\0A\09.equ\09CONFIG_WARN_DEPRECATED,1\0A\09.type\09CONFIG_WARN_DEPRECATED,%object", ""() #23, !dbg !6085, !srcloc !6086
  tail call void asm sideeffect ".globl\09CONFIG_ENFORCE_ZEPHYR_STDINT\0A\09.equ\09CONFIG_ENFORCE_ZEPHYR_STDINT,1\0A\09.type\09CONFIG_ENFORCE_ZEPHYR_STDINT,%object", ""() #23, !dbg !6087, !srcloc !6088
  tail call void asm sideeffect ".globl\09CONFIG_COMPAT_INCLUDES\0A\09.equ\09CONFIG_COMPAT_INCLUDES,1\0A\09.type\09CONFIG_COMPAT_INCLUDES,%object", ""() #23, !dbg !6089, !srcloc !6090
  ret void, !dbg !6091
}

; Function Attrs: noinline nounwind optsize
define internal i32 @st_stm32f4_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !6092 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6094, metadata !DIExpression()), !dbg !6096
  tail call fastcc void @LL_FLASH_EnableInstCache() #24, !dbg !6097
  tail call fastcc void @LL_FLASH_EnableDataCache() #24, !dbg !6098
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !6099, !srcloc !6108
  %3 = extractvalue { i32, i32 } %2, 0, !dbg !6099
  call void @llvm.dbg.value(metadata i32 %3, metadata !6105, metadata !DIExpression()) #23, !dbg !6109
  call void @llvm.dbg.value(metadata i32 undef, metadata !6106, metadata !DIExpression()) #23, !dbg !6109
  call void @llvm.dbg.value(metadata i32 %3, metadata !6095, metadata !DIExpression()), !dbg !6096
  call void @llvm.dbg.value(metadata i32 %3, metadata !6110, metadata !DIExpression()) #23, !dbg !6115
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !6117, !srcloc !6118
  store i32 16000000, i32* @SystemCoreClock, align 4, !dbg !6119
  ret i32 0, !dbg !6120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableInstCache() unnamed_addr #14 !dbg !6121 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6123
  %2 = or i32 %1, 512, !dbg !6123
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6123
  ret void, !dbg !6124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_EnableDataCache() unnamed_addr #14 !dbg !6125 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6126
  %2 = or i32 %1, 1024, !dbg !6126
  store volatile i32 %2, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !6126
  ret void, !dbg !6127
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @st_stm32_common_config(%struct.device* nocapture noundef readnone %0) #3 !dbg !6128 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !6130, metadata !DIExpression()), !dbg !6131
  ret i32 0, !dbg !6132
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_printk(i8* noundef %0, ...) local_unnamed_addr #1 !dbg !6133 {
  %2 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6136, metadata !DIExpression()), !dbg !6144
  %3 = bitcast %struct.__va_list* %2 to i8*, !dbg !6145
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6145
  call void @llvm.dbg.declare(metadata %struct.__va_list* %2, metadata !6137, metadata !DIExpression()), !dbg !6146
  call void @llvm.va_start(i8* nonnull %3), !dbg !6147
  %4 = bitcast %struct.__va_list* %2 to i32*, !dbg !6148
  %5 = load i32, i32* %4, align 4, !dbg !6148
  %6 = insertvalue [1 x i32] poison, i32 %5, 0, !dbg !6148
  call void @vprintk(i8* noundef %0, [1 x i32] %6) #25, !dbg !6148
  call void @llvm.va_end(i8* nonnull %3), !dbg !6149
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !6150
  ret void, !dbg !6150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_vprintk(i8* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !6151 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.value(metadata i8* %0, metadata !6155, metadata !DIExpression()), !dbg !6157
  tail call void @vprintk(i8* noundef %0, [1 x i32] %1) #25, !dbg !6158
  ret void, !dbg !6159
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_log_minimal_hexdump_print(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6160 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6164, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.value(metadata i8* %1, metadata !6165, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.value(metadata i32 %2, metadata !6166, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.value(metadata i8* %1, metadata !6167, metadata !DIExpression()), !dbg !6168
  %4 = icmp eq i32 %2, 0, !dbg !6169
  br i1 %4, label %14, label %5, !dbg !6170

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) #24, !dbg !6168
  %7 = zext i8 %6 to i32
  br label %8, !dbg !6170

8:                                                ; preds = %8, %5
  %9 = phi i8* [ %1, %5 ], [ %12, %8 ]
  %10 = phi i32 [ %2, %5 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !6167, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.value(metadata i32 %10, metadata !6166, metadata !DIExpression()), !dbg !6168
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i32 0, i32 0), i32 noundef %7) #25, !dbg !6171
  tail call fastcc void @minimal_hexdump_line_print(i8* noundef %9, i32 noundef %10) #24, !dbg !6173
  %11 = add i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i32 8
  %13 = icmp ult i32 %10, 9, !dbg !6174
  call void @llvm.dbg.value(metadata i32 %11, metadata !6166, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.value(metadata i8* %12, metadata !6167, metadata !DIExpression()), !dbg !6168
  br i1 %13, label %14, label %8, !dbg !6174, !llvm.loop !6175

14:                                               ; preds = %8, %3
  ret void, !dbg !6177
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char(i32 noundef %0) unnamed_addr #3 !dbg !6178 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6183, metadata !DIExpression()), !dbg !6184
  %2 = add i32 %0, -1, !dbg !6185
  %3 = icmp ult i32 %2, 4, !dbg !6185
  %4 = shl i32 %2, 3, !dbg !6185
  %5 = lshr i32 1145657157, %4, !dbg !6185
  %6 = trunc i32 %5 to i8, !dbg !6185
  %7 = select i1 %3, i8 %6, i8 63, !dbg !6185
  ret i8 %7, !dbg !6186
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @minimal_hexdump_line_print(i8* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !6187 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6191, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i32 %1, metadata !6192, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.value(metadata i32 0, metadata !6193, metadata !DIExpression()), !dbg !6203
  br label %4, !dbg !6204

3:                                                ; preds = %12
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.26, i32 0, i32 0)) #25, !dbg !6205
  call void @llvm.dbg.value(metadata i32 0, metadata !6195, metadata !DIExpression()), !dbg !6206
  br label %16, !dbg !6207

4:                                                ; preds = %2, %12
  %5 = phi i32 [ 0, %2 ], [ %13, %12 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6193, metadata !DIExpression()), !dbg !6203
  %6 = icmp ult i32 %5, %1, !dbg !6208
  br i1 %6, label %7, label %11, !dbg !6212

7:                                                ; preds = %4
  %8 = getelementptr inbounds i8, i8* %0, i32 %5, !dbg !6213
  %9 = load i8, i8* %8, align 1, !dbg !6213
  %10 = zext i8 %9 to i32, !dbg !6215
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.27, i32 0, i32 0), i32 noundef %10) #25, !dbg !6216
  br label %12, !dbg !6217

11:                                               ; preds = %4
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.28, i32 0, i32 0)) #25, !dbg !6218
  br label %12

12:                                               ; preds = %7, %11
  %13 = add nuw nsw i32 %5, 1, !dbg !6220
  call void @llvm.dbg.value(metadata i32 %13, metadata !6193, metadata !DIExpression()), !dbg !6203
  %14 = icmp eq i32 %13, 8, !dbg !6221
  br i1 %14, label %3, label %4, !dbg !6204, !llvm.loop !6222

15:                                               ; preds = %27
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.29, i32 0, i32 0)) #25, !dbg !6224
  ret void, !dbg !6225

16:                                               ; preds = %3, %27
  %17 = phi i32 [ 0, %3 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !6195, metadata !DIExpression()), !dbg !6206
  %18 = icmp ult i32 %17, %1, !dbg !6226
  br i1 %18, label %19, label %26, !dbg !6227

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %0, i32 %17, !dbg !6228
  %21 = load i8, i8* %20, align 1, !dbg !6228
  call void @llvm.dbg.value(metadata i8 %21, metadata !6197, metadata !DIExpression()), !dbg !6229
  %22 = zext i8 %21 to i32, !dbg !6230
  %23 = tail call fastcc i32 @isprint(i32 noundef %22) #24, !dbg !6231
  %24 = icmp eq i32 %23, 0, !dbg !6232
  %25 = select i1 %24, i32 46, i32 %22, !dbg !6231
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4.30, i32 0, i32 0), i32 noundef %25) #25, !dbg !6233
  br label %27, !dbg !6234

26:                                               ; preds = %16
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.31, i32 0, i32 0)) #25, !dbg !6235
  br label %27

27:                                               ; preds = %19, %26
  %28 = add nuw nsw i32 %17, 1, !dbg !6237
  call void @llvm.dbg.value(metadata i32 %28, metadata !6195, metadata !DIExpression()), !dbg !6206
  %29 = icmp eq i32 %28, 8, !dbg !6238
  br i1 %29, label %15, label %16, !dbg !6207, !llvm.loop !6239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @isprint(i32 noundef %0) unnamed_addr #3 !dbg !6241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6243, metadata !DIExpression()), !dbg !6244
  %2 = add i32 %0, -32, !dbg !6245
  %3 = icmp ult i32 %2, 95, !dbg !6245
  %4 = zext i1 %3 to i32, !dbg !6245
  ret i32 %4, !dbg !6246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !6247 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6296, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !6297, metadata !DIExpression()), !dbg !6298
  %3 = icmp eq %struct.__esf* %1, null, !dbg !6299
  br i1 %3, label %5, label %4, !dbg !6301

4:                                                ; preds = %2
  tail call fastcc void @esf_dump(%struct.__esf* noundef nonnull %1) #24, !dbg !6302
  br label %5, !dbg !6304

5:                                                ; preds = %4, %2
  tail call void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) #25, !dbg !6305
  ret void, !dbg !6306
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @esf_dump(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !6307 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6311, metadata !DIExpression()), !dbg !6312
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6313
  %3 = load i32, i32* %2, align 4, !dbg !6313
  %4 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 1, i32 0, !dbg !6313
  %5 = load i32, i32* %4, align 4, !dbg !6313
  %6 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 2, i32 0, !dbg !6313
  %7 = load i32, i32* %6, align 4, !dbg !6313
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.32, i32 0, i32 0), i32 noundef 69, i32 noundef %3, i32 noundef %5, i32 noundef %7) #25, !dbg !6313
  %8 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 3, i32 0, !dbg !6318
  %9 = load i32, i32* %8, align 4, !dbg !6318
  %10 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 4, i32 0, !dbg !6318
  %11 = load i32, i32* %10, align 4, !dbg !6318
  %12 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 5, i32 0, !dbg !6318
  %13 = load i32, i32* %12, align 4, !dbg !6318
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.33, i32 0, i32 0), i32 noundef 69, i32 noundef %9, i32 noundef %11, i32 noundef %13) #25, !dbg !6318
  %14 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 7, !dbg !6323
  %15 = load i32, i32* %14, align 4, !dbg !6323
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.34, i32 0, i32 0), i32 noundef 69, i32 noundef %15) #25, !dbg !6323
  %16 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !6328
  %17 = load i32, i32* %16, align 4, !dbg !6328
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.35, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !6328
  ret void, !dbg !6333
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_do_kernel_oops(%struct.__esf* noundef %0, %struct._callee_saved* nocapture noundef readnone %1) local_unnamed_addr #1 !dbg !6334 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6351, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata %struct._callee_saved* %1, metadata !6352, metadata !DIExpression()), !dbg !6354
  %3 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6355
  %4 = load i32, i32* %3, align 4, !dbg !6355
  call void @llvm.dbg.value(metadata i32 %4, metadata !6353, metadata !DIExpression()), !dbg !6354
  tail call void @z_arm_fatal_error(i32 noundef %4, %struct.__esf* noundef %0) #24, !dbg !6356
  ret void, !dbg !6357
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_syscall_oops(i8* nocapture noundef readonly %0) local_unnamed_addr #10 !dbg !6358 {
  %2 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !6362, metadata !DIExpression()), !dbg !6365
  call void @llvm.dbg.value(metadata i8* %0, metadata !6363, metadata !DIExpression()), !dbg !6365
  %3 = bitcast %struct.__esf* %2 to i8*, !dbg !6366
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #23, !dbg !6366
  call void @llvm.dbg.declare(metadata %struct.__esf* %2, metadata !6364, metadata !DIExpression()), !dbg !6367
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(32) %3, i8 0, i32 32, i1 false), !dbg !6367
  %4 = getelementptr inbounds i8, i8* %0, i32 12, !dbg !6368
  %5 = bitcast i8* %4 to i32*, !dbg !6368
  %6 = load i32, i32* %5, align 4, !dbg !6368
  %7 = getelementptr inbounds %struct.__esf, %struct.__esf* %2, i32 0, i32 0, i32 6, i32 0, !dbg !6369
  store i32 %6, i32* %7, align 4, !dbg !6370
  call void @z_arm_fatal_error(i32 noundef 3, %struct.__esf* noundef nonnull %2) #24, !dbg !6371
  unreachable, !dbg !6372
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !6373 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6376, metadata !DIExpression()), !dbg !6377
  tail call fastcc void @__NVIC_EnableIRQ(i32 noundef %0) #24, !dbg !6378
  ret void, !dbg !6379
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6380 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6384, metadata !DIExpression()), !dbg !6385
  %2 = icmp sgt i32 %0, -1, !dbg !6386
  br i1 %2, label %3, label %8, !dbg !6388

3:                                                ; preds = %1
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6389, !srcloc !6391
  %4 = and i32 %0, 31, !dbg !6392
  %5 = shl nuw i32 1, %4, !dbg !6393
  %6 = lshr i32 %0, 5, !dbg !6394
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %6, !dbg !6395
  store volatile i32 %5, i32* %7, align 4, !dbg !6396
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !6397, !srcloc !6398
  br label %8, !dbg !6399

8:                                                ; preds = %3, %1
  ret void, !dbg !6400
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arch_irq_disable(i32 noundef %0) local_unnamed_addr #1 !dbg !6401 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6403, metadata !DIExpression()), !dbg !6404
  tail call fastcc void @__NVIC_DisableIRQ(i32 noundef %0) #24, !dbg !6405
  ret void, !dbg !6406
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #1 !dbg !6407 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6409, metadata !DIExpression()), !dbg !6410
  %2 = icmp sgt i32 %0, -1, !dbg !6411
  br i1 %2, label %3, label %8, !dbg !6413

3:                                                ; preds = %1
  %4 = and i32 %0, 31, !dbg !6414
  %5 = shl nuw i32 1, %4, !dbg !6416
  %6 = lshr i32 %0, 5, !dbg !6417
  %7 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %6, !dbg !6418
  store volatile i32 %5, i32* %7, align 4, !dbg !6419
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6420, !srcloc !6424
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6425, !srcloc !6428
  br label %8, !dbg !6429

8:                                                ; preds = %3, %1
  ret void, !dbg !6430
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @arch_irq_is_enabled(i32 noundef %0) local_unnamed_addr #15 !dbg !6431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6435, metadata !DIExpression()), !dbg !6436
  %2 = lshr i32 %0, 5, !dbg !6437
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %2, !dbg !6438
  %4 = load volatile i32, i32* %3, align 4, !dbg !6438
  %5 = and i32 %0, 31, !dbg !6439
  %6 = shl nuw i32 1, %5, !dbg !6439
  %7 = and i32 %4, %6, !dbg !6440
  ret i32 %7, !dbg !6441
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_irq_priority_set(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !6442 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6446, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i32 %1, metadata !6447, metadata !DIExpression()), !dbg !6449
  call void @llvm.dbg.value(metadata i32 %2, metadata !6448, metadata !DIExpression()), !dbg !6449
  %4 = add i32 %1, 1, !dbg !6450
  call void @llvm.dbg.value(metadata i32 %4, metadata !6447, metadata !DIExpression()), !dbg !6449
  %5 = icmp ult i32 %4, 16, !dbg !6453
  br i1 %5, label %7, label %6, !dbg !6456

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.37, i32 0, i32 0), i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6457
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3.39, i32 0, i32 0), i32 noundef %1, i32 noundef %0, i32 noundef 15) #25, !dbg !6457
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.38, i32 0, i32 0), i32 noundef 94) #25, !dbg !6457
  unreachable, !dbg !6457

7:                                                ; preds = %3
  tail call fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %4) #24, !dbg !6459
  ret void, !dbg !6460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !6461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6465, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.value(metadata i32 %1, metadata !6466, metadata !DIExpression()), !dbg !6467
  %3 = trunc i32 %1 to i8, !dbg !6468
  %4 = shl i8 %3, 4, !dbg !6468
  %5 = and i32 %0, 15, !dbg !6470
  %6 = add nsw i32 %5, -4, !dbg !6470
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !6470
  %8 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6470
  %9 = icmp slt i32 %0, 0, !dbg !6470
  %10 = select i1 %9, i8* %7, i8* %8, !dbg !6470
  store volatile i8 %4, i8* %10, align 1, !dbg !6468
  ret void, !dbg !6471
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_irq_spurious(i8* nocapture noundef readnone %0) #1 !dbg !6472 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6474, metadata !DIExpression()), !dbg !6475
  tail call void @z_arm_fatal_error(i32 noundef 1, %struct.__esf* noundef null) #25, !dbg !6476
  ret void, !dbg !6477
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_nmi() local_unnamed_addr #1 !dbg !6478 {
  tail call void @z_SysNmiOnReset() #25, !dbg !6480
  tail call void @z_arm_int_exit() #25, !dbg !6481
  ret void, !dbg !6482
}

; Function Attrs: optsize
declare !dbg !6483 dso_local void @z_SysNmiOnReset() local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !6484 dso_local void @z_arm_int_exit() local_unnamed_addr #0

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_arm_prep_c() local_unnamed_addr #10 !dbg !6486 {
  tail call fastcc void @relocate_vector_table() #24, !dbg !6488
  tail call fastcc void @z_arm_floating_point_init() #24, !dbg !6489
  tail call void @z_bss_zero() #25, !dbg !6490
  tail call void @z_data_copy() #25, !dbg !6491
  tail call void @z_arm_interrupt_init() #25, !dbg !6492
  tail call void @z_cstart() #27, !dbg !6493
  unreachable, !dbg !6493
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @relocate_vector_table() unnamed_addr #1 !dbg !6494 {
  store volatile i32 and (i32 ptrtoint ([0 x i8]* @_vector_start to i32), i32 -128), i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !6495
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !6496, !srcloc !6499
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6500, !srcloc !6503
  ret void, !dbg !6504
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_arm_floating_point_init() unnamed_addr #1 !dbg !6505 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6506
  %2 = and i32 %1, -15728641, !dbg !6506
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !6506
  %3 = tail call i32 asm sideeffect "MRS $0, control", "=r"() #23, !dbg !6507, !srcloc !6514
  call void @llvm.dbg.value(metadata i32 %3, metadata !6512, metadata !DIExpression()) #23, !dbg !6515
  %4 = and i32 %3, -5, !dbg !6516
  call void @llvm.dbg.value(metadata i32 %4, metadata !6517, metadata !DIExpression()) #23, !dbg !6522
  tail call void asm sideeffect "MSR control, $0", "r,~{memory}"(i32 %4) #23, !dbg !6524, !srcloc !6525
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !6526, !srcloc !6503
  ret void, !dbg !6528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @arch_swap(i32 noundef %0) local_unnamed_addr #1 !dbg !6529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6532, metadata !DIExpression()), !dbg !6533
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6534
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 0, !dbg !6535
  store i32 %0, i32* %3, align 4, !dbg !6536
  %4 = load i32, i32* @_k_neg_eagain, align 4, !dbg !6537
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %2, i32 0, i32 8, i32 1, !dbg !6538
  store i32 %4, i32* %5, align 4, !dbg !6539
  %6 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6540
  %7 = or i32 %6, 268435456, !dbg !6540
  store volatile i32 %7, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6540
  call void @llvm.dbg.value(metadata i32 0, metadata !6541, metadata !DIExpression()) #23, !dbg !6544
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6546, !srcloc !6547
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6548
  %9 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !6549
  %10 = load i32, i32* %9, align 4, !dbg !6549
  ret i32 %10, !dbg !6550
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @arch_new_thread(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* nocapture noundef readnone %1, i8* noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) local_unnamed_addr #7 !dbg !6551 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6664, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !6665, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata i8* %2, metadata !6666, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !6667, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata i8* %4, metadata !6668, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata i8* %5, metadata !6669, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.value(metadata i8* %6, metadata !6670, metadata !DIExpression()), !dbg !6672
  %8 = getelementptr inbounds i8, i8* %2, i32 -32, !dbg !6673
  call void @llvm.dbg.value(metadata i8* %8, metadata !6671, metadata !DIExpression()), !dbg !6672
  %9 = getelementptr inbounds i8, i8* %2, i32 -8, !dbg !6674
  %10 = bitcast i8* %9 to i32*, !dbg !6674
  store i32 and (i32 ptrtoint (void (void (i8*, i8*, i8*)*, i8*, i8*, i8*)* @z_thread_entry to i32), i32 -2), i32* %10, align 4, !dbg !6675
  %11 = ptrtoint void (i8*, i8*, i8*)* %3 to i32, !dbg !6676
  %12 = bitcast i8* %8 to i32*, !dbg !6677
  store i32 %11, i32* %12, align 4, !dbg !6678
  %13 = ptrtoint i8* %4 to i32, !dbg !6679
  %14 = getelementptr inbounds i8, i8* %2, i32 -28, !dbg !6680
  %15 = bitcast i8* %14 to i32*, !dbg !6680
  store i32 %13, i32* %15, align 4, !dbg !6681
  %16 = ptrtoint i8* %5 to i32, !dbg !6682
  %17 = getelementptr inbounds i8, i8* %2, i32 -24, !dbg !6683
  %18 = bitcast i8* %17 to i32*, !dbg !6683
  store i32 %16, i32* %18, align 4, !dbg !6684
  %19 = ptrtoint i8* %6 to i32, !dbg !6685
  %20 = getelementptr inbounds i8, i8* %2, i32 -20, !dbg !6686
  %21 = bitcast i8* %20 to i32*, !dbg !6686
  store i32 %19, i32* %21, align 4, !dbg !6687
  %22 = getelementptr inbounds i8, i8* %2, i32 -4, !dbg !6688
  %23 = bitcast i8* %22 to i32*, !dbg !6688
  store i32 16777216, i32* %23, align 4, !dbg !6689
  %24 = ptrtoint i8* %8 to i32, !dbg !6690
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 1, i32 8, !dbg !6691
  store i32 %24, i32* %25, align 8, !dbg !6692
  %26 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 8, i32 0, !dbg !6693
  store i32 0, i32* %26, align 4, !dbg !6694
  ret void, !dbg !6695
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_check_thread_stack_fail(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !6696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6701, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.value(metadata i32 %1, metadata !6702, metadata !DIExpression()), !dbg !6707
  %3 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6708
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !6703, metadata !DIExpression()), !dbg !6707
  %4 = icmp eq %struct.k_thread* %3, null, !dbg !6709
  br i1 %4, label %19, label %5, !dbg !6711

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 64, metadata !6706, metadata !DIExpression()), !dbg !6707
  %6 = icmp eq i32 %0, -22, !dbg !6712
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %3, i32 0, i32 6, i32 0, !dbg !6712
  %8 = load i32, i32* %7, align 4, !dbg !6712
  br i1 %6, label %16, label %9, !dbg !6714

9:                                                ; preds = %5
  %10 = add i32 %8, -64, !dbg !6712
  %11 = icmp ule i32 %10, %0, !dbg !6712
  %12 = icmp ugt i32 %8, %0, !dbg !6712
  %13 = and i1 %12, %11, !dbg !6712
  %14 = icmp ugt i32 %8, %1, !dbg !6712
  %15 = and i1 %14, %13, !dbg !6712
  br i1 %15, label %18, label %19, !dbg !6712

16:                                               ; preds = %5
  %17 = icmp ugt i32 %8, %1, !dbg !6712
  br i1 %17, label %18, label %19, !dbg !6714

18:                                               ; preds = %9, %16
  br label %19, !dbg !6715

19:                                               ; preds = %18, %16, %9, %2
  %20 = phi i32 [ 0, %2 ], [ %8, %18 ], [ 0, %16 ], [ 0, %9 ], !dbg !6707
  ret i32 %20, !dbg !6717
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @arch_switch_to_main_thread(%struct.k_thread* noundef %0, i8* noundef %1, void (i8*, i8*, i8*)* noundef %2) local_unnamed_addr #10 !dbg !6718 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !6722, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.value(metadata i8* %1, metadata !6723, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %2, metadata !6724, metadata !DIExpression()), !dbg !6725
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !6726
  tail call void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* noundef %0) #25, !dbg !6727
  tail call void asm sideeffect "mov   r0,  $0\0A\09msr   PSP, $1\0A\09movs r1, #0\0A\09cpsie if\0A\09msr   BASEPRI, r1\0A\09isb\0A\09movs r2, #0\0A\09movs r3, #0\0A\09bl z_thread_entry\0A\09", "r,r,~{r0}"(void (i8*, i8*, i8*)* %2, i8* %1) #23, !dbg !6728, !srcloc !6729
  unreachable, !dbg !6730
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_fault(i32 noundef %0, i32 noundef %1, i32 noundef %2, %struct._callee_saved* nocapture noundef readnone %3) local_unnamed_addr #1 !dbg !6731 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca %struct.__esf, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6749, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 %1, metadata !6750, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 %2, metadata !6751, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata %struct._callee_saved* %3, metadata !6752, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i32 0, metadata !6753, metadata !DIExpression()), !dbg !6759
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6760
  call void @llvm.dbg.value(metadata i32 %8, metadata !6754, metadata !DIExpression(DW_OP_constu, 511, DW_OP_and, DW_OP_stack_value)), !dbg !6759
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6761
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6761
  %9 = bitcast %struct.__esf* %7 to i8*, !dbg !6762
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6762
  call void @llvm.dbg.declare(metadata %struct.__esf* %7, metadata !6758, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.value(metadata i32 0, metadata !6764, metadata !DIExpression()) #23, !dbg !6767
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 0) #23, !dbg !6769, !srcloc !6770
  call void @llvm.dbg.value(metadata i8* %6, metadata !6756, metadata !DIExpression(DW_OP_deref)), !dbg !6759
  %10 = call fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* noundef nonnull %6) #24, !dbg !6771
  call void @llvm.dbg.value(metadata %struct.__esf* %10, metadata !6757, metadata !DIExpression()), !dbg !6759
  %11 = icmp eq %struct.__esf* %10, null, !dbg !6772
  br i1 %11, label %12, label %13, !dbg !6775

12:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1.43, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6776
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3.45, i32 0, i32 0)) #25, !dbg !6776
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 1057) #25, !dbg !6776
  unreachable, !dbg !6776

13:                                               ; preds = %4
  %14 = and i32 %8, 511, !dbg !6778
  call void @llvm.dbg.value(metadata i32 %14, metadata !6754, metadata !DIExpression()), !dbg !6759
  call void @llvm.dbg.value(metadata i8* %5, metadata !6755, metadata !DIExpression(DW_OP_deref)), !dbg !6759
  %15 = call fastcc i32 @fault_handle(%struct.__esf* noundef nonnull %10, i32 noundef %14, i8* noundef nonnull %5) #24, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %15, metadata !6753, metadata !DIExpression()), !dbg !6759
  %16 = load i8, i8* %5, align 1, !dbg !6780, !range !6782
  call void @llvm.dbg.value(metadata i8 %16, metadata !6755, metadata !DIExpression()), !dbg !6759
  %17 = icmp eq i8 %16, 0, !dbg !6780
  br i1 %17, label %18, label %35, !dbg !6783

18:                                               ; preds = %13
  %19 = bitcast %struct.__esf* %10 to i8*, !dbg !6784
  %20 = call i8* @memcpy(i8* noundef nonnull %9, i8* noundef nonnull %19, i32 noundef 32) #25, !dbg !6785
  %21 = load i8, i8* %6, align 1, !dbg !6786, !range !6782
  call void @llvm.dbg.value(metadata i8 %21, metadata !6756, metadata !DIExpression()), !dbg !6759
  %22 = icmp eq i8 %21, 0, !dbg !6786
  %23 = getelementptr inbounds %struct.__esf, %struct.__esf* %7, i32 0, i32 0, i32 7, !dbg !6788
  %24 = load i32, i32* %23, align 4, !dbg !6788
  br i1 %22, label %30, label %25, !dbg !6789

25:                                               ; preds = %18
  %26 = and i32 %24, 511, !dbg !6790
  %27 = icmp eq i32 %26, 0, !dbg !6793
  br i1 %27, label %28, label %34, !dbg !6794

28:                                               ; preds = %25
  %29 = or i32 %24, 511, !dbg !6795
  br label %32, !dbg !6797

30:                                               ; preds = %18
  %31 = and i32 %24, -512, !dbg !6798
  br label %32

32:                                               ; preds = %30, %28
  %33 = phi i32 [ %29, %28 ], [ %31, %30 ]
  store i32 %33, i32* %23, align 4, !dbg !6788
  br label %34, !dbg !6800

34:                                               ; preds = %32, %25
  call void @z_arm_fatal_error(i32 noundef %15, %struct.__esf* noundef nonnull %7) #25, !dbg !6800
  br label %35, !dbg !6801

35:                                               ; preds = %13, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #23, !dbg !6801
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #23, !dbg !6801
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #23, !dbg !6801
  ret void, !dbg !6801
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.__esf* @get_esf(i32 noundef %0, i32 noundef %1, i32 noundef %2, i8* nocapture noundef writeonly %3) unnamed_addr #1 !dbg !6802 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6807, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %1, metadata !6808, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i32 %2, metadata !6809, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i8* %3, metadata !6810, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata i8 0, metadata !6811, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.value(metadata %struct.__esf* null, metadata !6812, metadata !DIExpression()), !dbg !6813
  store i8 0, i8* %3, align 1, !dbg !6814
  %5 = icmp ugt i32 %2, -16777217, !dbg !6815
  br i1 %5, label %6, label %17, !dbg !6817

6:                                                ; preds = %4
  %7 = and i32 %2, 12, !dbg !6818
  %8 = icmp eq i32 %7, 8, !dbg !6818
  br i1 %8, label %9, label %10, !dbg !6818

9:                                                ; preds = %6
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4.58, i32 0, i32 0), i32 noundef 69) #25, !dbg !6820
  br label %17, !dbg !6826

10:                                               ; preds = %6
  %11 = and i32 %2, 8, !dbg !6827
  %12 = icmp eq i32 %11, 0, !dbg !6827
  br i1 %12, label %13, label %14, !dbg !6828

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %0, metadata !6812, metadata !DIExpression()), !dbg !6813
  store i8 1, i8* %3, align 1, !dbg !6831
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i32 [ %0, %13 ], [ %1, %10 ]
  %16 = inttoptr i32 %15 to %struct.__esf*, !dbg !6813
  call void @llvm.dbg.value(metadata %struct.__esf* %16, metadata !6812, metadata !DIExpression()), !dbg !6813
  br label %17, !dbg !6834

17:                                               ; preds = %4, %14, %9
  %18 = phi %struct.__esf* [ %16, %14 ], [ null, %9 ], [ null, %4 ], !dbg !6813
  ret %struct.__esf* %18, !dbg !6835
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @fault_handle(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef %2) unnamed_addr #1 !dbg !6836 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6840, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 %1, metadata !6841, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i8* %2, metadata !6842, metadata !DIExpression()), !dbg !6844
  call void @llvm.dbg.value(metadata i32 0, metadata !6843, metadata !DIExpression()), !dbg !6844
  store i8 0, i8* %2, align 1, !dbg !6845
  switch i32 %1, label %11 [
    i32 3, label %4
    i32 4, label %6
    i32 5, label %8
    i32 6, label %9
    i32 12, label %10
  ], !dbg !6846

4:                                                ; preds = %3
  %5 = tail call fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* noundef nonnull %2) #24, !dbg !6847
  call void @llvm.dbg.value(metadata i32 %5, metadata !6843, metadata !DIExpression()), !dbg !6844
  br label %12, !dbg !6849

6:                                                ; preds = %3
  %7 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6850
  call void @llvm.dbg.value(metadata i32 %7, metadata !6843, metadata !DIExpression()), !dbg !6844
  br label %12, !dbg !6851

8:                                                ; preds = %3
  tail call fastcc void @bus_fault(i32 noundef 0, i8* noundef nonnull %2) #24, !dbg !6852
  call void @llvm.dbg.value(metadata i32 0, metadata !6843, metadata !DIExpression()), !dbg !6844
  br label %12, !dbg !6853

9:                                                ; preds = %3
  tail call fastcc void @usage_fault() #24, !dbg !6854
  call void @llvm.dbg.value(metadata i32 0, metadata !6843, metadata !DIExpression()), !dbg !6844
  br label %12, !dbg !6855

10:                                               ; preds = %3
  tail call fastcc void @debug_monitor(i8* noundef nonnull %2) #24, !dbg !6856
  br label %12, !dbg !6857

11:                                               ; preds = %3
  tail call fastcc void @reserved_exception(i32 noundef %1) #24, !dbg !6858
  br label %12, !dbg !6859

12:                                               ; preds = %4, %6, %8, %9, %10, %11
  %13 = phi i32 [ 0, %11 ], [ 0, %10 ], [ 0, %9 ], [ 0, %8 ], [ %7, %6 ], [ %5, %4 ], !dbg !6844
  call void @llvm.dbg.value(metadata i32 %13, metadata !6843, metadata !DIExpression()), !dbg !6844
  ret i32 %13, !dbg !6860
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @hard_fault(%struct.__esf* noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !6861 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6865, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i8* %1, metadata !6866, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.value(metadata i32 0, metadata !6867, metadata !DIExpression()), !dbg !6868
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5.50, i32 0, i32 0), i32 noundef 69) #25, !dbg !6869
  store i8 0, i8* %1, align 1, !dbg !6874
  %3 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6875
  %4 = and i32 %3, 2, !dbg !6877
  %5 = icmp eq i32 %4, 0, !dbg !6878
  br i1 %5, label %7, label %6, !dbg !6879

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.51, i32 0, i32 0), i32 noundef 69) #25, !dbg !6880
  br label %38, !dbg !6886

7:                                                ; preds = %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6887
  %9 = icmp sgt i32 %8, -1, !dbg !6889
  br i1 %9, label %11, label %10, !dbg !6890

10:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.52, i32 0, i32 0), i32 noundef 69) #25, !dbg !6891
  br label %38, !dbg !6897

11:                                               ; preds = %7
  %12 = load volatile i32, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !6898
  %13 = and i32 %12, 1073741824, !dbg !6900
  %14 = icmp eq i32 %13, 0, !dbg !6901
  br i1 %14, label %37, label %15, !dbg !6902

15:                                               ; preds = %11
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.53, i32 0, i32 0), i32 noundef 69) #25, !dbg !6903
  %16 = tail call fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* noundef %0) #24, !dbg !6909
  br i1 %16, label %17, label %21, !dbg !6911

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 0, i32 0, !dbg !6912
  %19 = load i32, i32* %18, align 4, !dbg !6912
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.54, i32 0, i32 0), i32 noundef 69, i32 noundef %19) #25, !dbg !6912
  %20 = load i32, i32* %18, align 4, !dbg !6918
  call void @llvm.dbg.value(metadata i32 %20, metadata !6867, metadata !DIExpression()), !dbg !6868
  br label %38, !dbg !6919

21:                                               ; preds = %15
  %22 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6920
  %23 = and i32 %22, 255, !dbg !6922
  %24 = icmp eq i32 %23, 0, !dbg !6923
  br i1 %24, label %27, label %25, !dbg !6924

25:                                               ; preds = %21
  %26 = tail call fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6925
  call void @llvm.dbg.value(metadata i32 %26, metadata !6867, metadata !DIExpression()), !dbg !6868
  br label %38, !dbg !6927

27:                                               ; preds = %21
  %28 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6928
  %29 = and i32 %28, 65280, !dbg !6930
  %30 = icmp eq i32 %29, 0, !dbg !6931
  br i1 %30, label %32, label %31, !dbg !6932

31:                                               ; preds = %27
  tail call fastcc void @bus_fault(i32 noundef 1, i8* noundef nonnull %1) #24, !dbg !6933
  call void @llvm.dbg.value(metadata i32 0, metadata !6867, metadata !DIExpression()), !dbg !6868
  br label %38, !dbg !6935

32:                                               ; preds = %27
  %33 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6936
  %34 = icmp ult i32 %33, 65536, !dbg !6938
  br i1 %34, label %36, label %35, !dbg !6939

35:                                               ; preds = %32
  tail call fastcc void @usage_fault() #24, !dbg !6940
  call void @llvm.dbg.value(metadata i32 0, metadata !6867, metadata !DIExpression()), !dbg !6868
  br label %38

36:                                               ; preds = %32
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !6942
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11.56, i32 0, i32 0)) #25, !dbg !6942
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 755) #25, !dbg !6942
  unreachable, !dbg !6942

37:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.55, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !6947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12.57, i32 0, i32 0)) #25, !dbg !6947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 760) #25, !dbg !6947
  unreachable, !dbg !6947

38:                                               ; preds = %10, %17, %31, %35, %25, %6
  %39 = phi i32 [ 0, %6 ], [ 0, %10 ], [ %20, %17 ], [ %26, %25 ], [ 0, %31 ], [ 0, %35 ], !dbg !6868
  call void @llvm.dbg.value(metadata i32 %39, metadata !6867, metadata !DIExpression()), !dbg !6868
  ret i32 %39, !dbg !6952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mem_manage_fault(%struct.__esf* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) unnamed_addr #1 !dbg !6953 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !6955, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32 %1, metadata !6956, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i8* %2, metadata !6957, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32 0, metadata !6958, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32 -22, metadata !6959, metadata !DIExpression()), !dbg !6968
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i32 0, i32 0), i32 noundef 69) #25, !dbg !6969
  %4 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6974
  %5 = and i32 %4, 16, !dbg !6976
  %6 = icmp eq i32 %5, 0, !dbg !6977
  br i1 %6, label %8, label %7, !dbg !6978

7:                                                ; preds = %3
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14, i32 0, i32 0), i32 noundef 69) #25, !dbg !6979
  br label %8, !dbg !6985

8:                                                ; preds = %7, %3
  %9 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6986
  %10 = and i32 %9, 8, !dbg !6988
  %11 = icmp eq i32 %10, 0, !dbg !6989
  br i1 %11, label %13, label %12, !dbg !6990

12:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !6991
  br label %13, !dbg !6997

13:                                               ; preds = %12, %8
  %14 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !6998
  %15 = and i32 %14, 2, !dbg !6999
  %16 = icmp eq i32 %15, 0, !dbg !7000
  br i1 %16, label %27, label %17, !dbg !7001

17:                                               ; preds = %13
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.16.49, i32 0, i32 0), i32 noundef 69) #25, !dbg !7002
  %18 = load volatile i32, i32* inttoptr (i32 -536810188 to i32*), align 4, !dbg !7007
  call void @llvm.dbg.value(metadata i32 %18, metadata !6960, metadata !DIExpression()), !dbg !7008
  %19 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7009
  %20 = and i32 %19, 128, !dbg !7011
  %21 = icmp eq i32 %20, 0, !dbg !7012
  br i1 %21, label %27, label %22, !dbg !7013

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %18, metadata !6959, metadata !DIExpression()), !dbg !6968
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i32 0, i32 0), i32 noundef 69, i32 noundef %18) #25, !dbg !7014
  %23 = icmp eq i32 %1, 0, !dbg !7020
  br i1 %23, label %27, label %24, !dbg !7022

24:                                               ; preds = %22
  %25 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7023
  %26 = and i32 %25, -129, !dbg !7023
  store volatile i32 %26, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7023
  br label %27, !dbg !7025

27:                                               ; preds = %17, %24, %22, %13
  %28 = phi i32 [ -22, %13 ], [ %18, %24 ], [ %18, %22 ], [ -22, %17 ], !dbg !6968
  call void @llvm.dbg.value(metadata i32 %28, metadata !6959, metadata !DIExpression()), !dbg !6968
  %29 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7026
  %30 = and i32 %29, 1, !dbg !7028
  %31 = icmp eq i32 %30, 0, !dbg !7029
  br i1 %31, label %33, label %32, !dbg !7030

32:                                               ; preds = %27
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i32 0, i32 0), i32 noundef 69) #25, !dbg !7031
  br label %33, !dbg !7037

33:                                               ; preds = %32, %27
  %34 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7038
  %35 = and i32 %34, 32, !dbg !7040
  %36 = icmp eq i32 %35, 0, !dbg !7041
  br i1 %36, label %38, label %37, !dbg !7042

37:                                               ; preds = %33
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), i32 noundef 69) #25, !dbg !7043
  br label %38, !dbg !7049

38:                                               ; preds = %37, %33
  %39 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7050
  %40 = and i32 %39, 16, !dbg !7051
  %41 = icmp eq i32 %40, 0, !dbg !7051
  br i1 %41, label %42, label %46, !dbg !7052

42:                                               ; preds = %38
  %43 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7053
  %44 = and i32 %43, 2, !dbg !7054
  %45 = icmp eq i32 %44, 0, !dbg !7054
  br i1 %45, label %60, label %46, !dbg !7055

46:                                               ; preds = %42, %38
  %47 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7056
  %48 = and i32 %47, 2048, !dbg !7057
  %49 = icmp eq i32 %48, 0, !dbg !7057
  br i1 %49, label %60, label %50, !dbg !7058

50:                                               ; preds = %46
  %51 = ptrtoint %struct.__esf* %0 to i32, !dbg !7059
  %52 = tail call i32 @z_check_thread_stack_fail(i32 noundef %28, i32 noundef %51) #25, !dbg !7060
  call void @llvm.dbg.value(metadata i32 %52, metadata !6963, metadata !DIExpression()), !dbg !7061
  %53 = icmp eq i32 %52, 0, !dbg !7062
  br i1 %53, label %55, label %54, !dbg !7064

54:                                               ; preds = %50
  call void @llvm.dbg.value(metadata i32 %52, metadata !7065, metadata !DIExpression()) #23, !dbg !7068
  tail call void asm sideeffect "MSR psp, $0", "r"(i32 %52) #23, !dbg !7071, !srcloc !7072
  call void @llvm.dbg.value(metadata i32 2, metadata !6958, metadata !DIExpression()), !dbg !6968
  br label %60, !dbg !7073

55:                                               ; preds = %50
  %56 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7074
  %57 = and i32 %56, 16, !dbg !7074
  %58 = icmp eq i32 %57, 0, !dbg !7074
  br i1 %58, label %60, label %59, !dbg !7078

59:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.42, i32 0, i32 0), i8* noundef getelementptr inbounds ([74 x i8], [74 x i8]* @.str.20, i32 0, i32 0), i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7079
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21, i32 0, i32 0)) #25, !dbg !7079
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.44, i32 0, i32 0), i32 noundef 343) #25, !dbg !7079
  unreachable, !dbg !7079

60:                                               ; preds = %54, %55, %46, %42
  %61 = phi i32 [ 0, %46 ], [ 0, %42 ], [ 2, %54 ], [ 0, %55 ], !dbg !6968
  call void @llvm.dbg.value(metadata i32 %61, metadata !6958, metadata !DIExpression()), !dbg !6968
  %62 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7081
  %63 = and i32 %62, 32, !dbg !7083
  %64 = icmp eq i32 %63, 0, !dbg !7084
  br i1 %64, label %68, label %65, !dbg !7085

65:                                               ; preds = %60
  %66 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7086
  %67 = and i32 %66, -8193, !dbg !7086
  store volatile i32 %67, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7086
  br label %68, !dbg !7088

68:                                               ; preds = %65, %60
  %69 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7089
  %70 = or i32 %69, 255, !dbg !7089
  store volatile i32 %70, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7089
  store i8 0, i8* %2, align 1, !dbg !7090
  ret i32 %61, !dbg !7091
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @bus_fault(i32 noundef %0, i8* nocapture noundef writeonly %1) unnamed_addr #1 !dbg !7092 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7096, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i32 %0, metadata !7097, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i8* %1, metadata !7098, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.value(metadata i32 0, metadata !7099, metadata !DIExpression()), !dbg !7103
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i32 noundef 69) #25, !dbg !7104
  %3 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7109
  %4 = and i32 %3, 4096, !dbg !7111
  %5 = icmp eq i32 %4, 0, !dbg !7111
  br i1 %5, label %7, label %6, !dbg !7112

6:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i32 0, i32 0), i32 noundef 69) #25, !dbg !7113
  br label %7, !dbg !7119

7:                                                ; preds = %6, %2
  %8 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7120
  %9 = and i32 %8, 2048, !dbg !7122
  %10 = icmp eq i32 %9, 0, !dbg !7122
  br i1 %10, label %12, label %11, !dbg !7123

11:                                               ; preds = %7
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i32 noundef 69) #25, !dbg !7124
  br label %12, !dbg !7130

12:                                               ; preds = %11, %7
  %13 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7131
  %14 = and i32 %13, 512, !dbg !7132
  %15 = icmp eq i32 %14, 0, !dbg !7132
  br i1 %15, label %26, label %16, !dbg !7133

16:                                               ; preds = %12
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.24, i32 0, i32 0), i32 noundef 69) #25, !dbg !7134
  %17 = load volatile i32, i32* inttoptr (i32 -536810184 to i32*), align 8, !dbg !7139
  call void @llvm.dbg.value(metadata i32 %17, metadata !7100, metadata !DIExpression()), !dbg !7140
  %18 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7141
  %19 = and i32 %18, 32768, !dbg !7143
  %20 = icmp eq i32 %19, 0, !dbg !7144
  br i1 %20, label %26, label %21, !dbg !7145

21:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25.48, i32 0, i32 0), i32 noundef 69, i32 noundef %17) #25, !dbg !7146
  %22 = icmp eq i32 %0, 0, !dbg !7152
  br i1 %22, label %26, label %23, !dbg !7154

23:                                               ; preds = %21
  %24 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7155
  %25 = and i32 %24, -32769, !dbg !7155
  store volatile i32 %25, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7155
  br label %26, !dbg !7157

26:                                               ; preds = %16, %23, %21, %12
  %27 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7158
  %28 = and i32 %27, 1024, !dbg !7160
  %29 = icmp eq i32 %28, 0, !dbg !7160
  br i1 %29, label %31, label %30, !dbg !7161

30:                                               ; preds = %26
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i32 noundef 69) #25, !dbg !7162
  br label %31, !dbg !7168

31:                                               ; preds = %30, %26
  %32 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7169
  %33 = and i32 %32, 256, !dbg !7171
  %34 = icmp eq i32 %33, 0, !dbg !7172
  br i1 %34, label %35, label %39, !dbg !7173

35:                                               ; preds = %31
  %36 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7174
  %37 = and i32 %36, 8192, !dbg !7176
  %38 = icmp eq i32 %37, 0, !dbg !7176
  br i1 %38, label %41, label %39, !dbg !7177

39:                                               ; preds = %35, %31
  %40 = phi i8* [ getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i32 0, i32 0), %31 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i32 0, i32 0), %35 ]
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef %40, i32 noundef 69) #25, !dbg !7178
  br label %41, !dbg !7179

41:                                               ; preds = %39, %35
  %42 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7179
  %43 = or i32 %42, 65280, !dbg !7179
  store volatile i32 %43, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7179
  store i8 0, i8* %1, align 1, !dbg !7180
  ret void, !dbg !7181
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @usage_fault() unnamed_addr #1 !dbg !7182 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7188, metadata !DIExpression()), !dbg !7190
  call void @llvm.dbg.value(metadata i32 0, metadata !7189, metadata !DIExpression()), !dbg !7190
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i32 0, i32 0), i32 noundef 69) #25, !dbg !7191
  %1 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7196
  %2 = and i32 %1, 33554432, !dbg !7198
  %3 = icmp eq i32 %2, 0, !dbg !7199
  br i1 %3, label %5, label %4, !dbg !7200

4:                                                ; preds = %0
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i32 0, i32 0), i32 noundef 69) #25, !dbg !7201
  br label %5, !dbg !7207

5:                                                ; preds = %4, %0
  %6 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7208
  %7 = and i32 %6, 16777216, !dbg !7210
  %8 = icmp eq i32 %7, 0, !dbg !7211
  br i1 %8, label %10, label %9, !dbg !7212

9:                                                ; preds = %5
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30, i32 0, i32 0), i32 noundef 69) #25, !dbg !7213
  br label %10, !dbg !7219

10:                                               ; preds = %9, %5
  %11 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7220
  %12 = and i32 %11, 524288, !dbg !7222
  %13 = icmp eq i32 %12, 0, !dbg !7223
  br i1 %13, label %15, label %14, !dbg !7224

14:                                               ; preds = %10
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i32 0, i32 0), i32 noundef 69) #25, !dbg !7225
  br label %15, !dbg !7231

15:                                               ; preds = %14, %10
  %16 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7232
  %17 = and i32 %16, 262144, !dbg !7234
  %18 = icmp eq i32 %17, 0, !dbg !7235
  br i1 %18, label %20, label %19, !dbg !7236

19:                                               ; preds = %15
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.32.47, i32 0, i32 0), i32 noundef 69) #25, !dbg !7237
  br label %20, !dbg !7243

20:                                               ; preds = %19, %15
  %21 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7244
  %22 = and i32 %21, 131072, !dbg !7246
  %23 = icmp eq i32 %22, 0, !dbg !7247
  br i1 %23, label %25, label %24, !dbg !7248

24:                                               ; preds = %20
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33, i32 0, i32 0), i32 noundef 69) #25, !dbg !7249
  br label %25, !dbg !7255

25:                                               ; preds = %24, %20
  %26 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7256
  %27 = and i32 %26, 65536, !dbg !7258
  %28 = icmp eq i32 %27, 0, !dbg !7259
  br i1 %28, label %30, label %29, !dbg !7260

29:                                               ; preds = %25
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.34, i32 0, i32 0), i32 noundef 69) #25, !dbg !7261
  br label %30, !dbg !7267

30:                                               ; preds = %29, %25
  %31 = load volatile i32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7268
  %32 = or i32 %31, -65536, !dbg !7268
  store volatile i32 %32, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !7268
  ret void, !dbg !7269
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @debug_monitor(i8* nocapture noundef writeonly %0) unnamed_addr #1 !dbg !7270 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7274, metadata !DIExpression()), !dbg !7276
  call void @llvm.dbg.value(metadata i8* %0, metadata !7275, metadata !DIExpression()), !dbg !7276
  store i8 0, i8* %0, align 1, !dbg !7277
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35, i32 0, i32 0), i32 noundef 69) #25, !dbg !7278
  ret void, !dbg !7283
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @reserved_exception(i32 noundef %0) unnamed_addr #1 !dbg !7284 {
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !7288, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i32 %0, metadata !7289, metadata !DIExpression()), !dbg !7290
  %2 = icmp slt i32 %0, 16, !dbg !7291
  %3 = select i1 %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.38, i32 0, i32 0), !dbg !7291
  %4 = add nsw i32 %0, -16, !dbg !7291
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36.46, i32 0, i32 0), i32 noundef 69, i8* noundef %3, i32 noundef %4) #25, !dbg !7291
  ret void, !dbg !7296
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_arm_is_synchronous_svc(%struct.__esf* nocapture noundef readonly %0) unnamed_addr #1 !dbg !7297 {
  call void @llvm.dbg.value(metadata %struct.__esf* %0, metadata !7301, metadata !DIExpression()), !dbg !7304
  %2 = getelementptr inbounds %struct.__esf, %struct.__esf* %0, i32 0, i32 0, i32 6, i32 0, !dbg !7305
  %3 = load i32, i32* %2, align 4, !dbg !7305
  %4 = inttoptr i32 %3 to i16*, !dbg !7306
  call void @llvm.dbg.value(metadata i16* %4, metadata !7302, metadata !DIExpression()), !dbg !7304
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7307
  %6 = or i32 %5, 256, !dbg !7307
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7307
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7308, !srcloc !7311
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7312, !srcloc !7315
  %7 = getelementptr inbounds i16, i16* %4, i32 -1, !dbg !7316
  %8 = load i16, i16* %7, align 2, !dbg !7317
  call void @llvm.dbg.value(metadata i16 %8, metadata !7303, metadata !DIExpression()), !dbg !7304
  %9 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7318
  %10 = and i32 %9, -257, !dbg !7318
  store volatile i32 %10, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7318
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7319, !srcloc !7311
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7321, !srcloc !7315
  %11 = icmp eq i16 %8, -8446, !dbg !7323
  ret i1 %11, !dbg !7325
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_fault_init() local_unnamed_addr #14 !dbg !7326 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7327
  %2 = or i32 %1, 16, !dbg !7327
  store volatile i32 %2, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !7327
  ret void, !dbg !7328
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @z_arm_interrupt_init() local_unnamed_addr #14 !dbg !7329 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7332, metadata !DIExpression()), !dbg !7333
  br label %1, !dbg !7334

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7332, metadata !DIExpression()), !dbg !7333
  tail call fastcc void @__NVIC_SetPriority.61(i32 noundef %2) #24, !dbg !7336
  %3 = add nuw nsw i32 %2, 1, !dbg !7339
  call void @llvm.dbg.value(metadata i32 %3, metadata !7332, metadata !DIExpression()), !dbg !7333
  %4 = icmp eq i32 %3, 97, !dbg !7340
  br i1 %4, label %5, label %1, !dbg !7334, !llvm.loop !7341

5:                                                ; preds = %1
  ret void, !dbg !7343
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.61(i32 noundef %0) unnamed_addr #14 !dbg !7344 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7346, metadata !DIExpression()), !dbg !7348
  call void @llvm.dbg.value(metadata i32 1, metadata !7347, metadata !DIExpression()), !dbg !7348
  %2 = and i32 %0, 15, !dbg !7349
  %3 = add nsw i32 %2, -4, !dbg !7349
  %4 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %3, !dbg !7349
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7349
  %6 = icmp slt i32 %0, 0, !dbg !7349
  %7 = select i1 %6, i8* %4, i8* %5, !dbg !7349
  store volatile i8 16, i8* %7, align 1, !dbg !7350
  ret void, !dbg !7352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !7353 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !7462, metadata !DIExpression()), !dbg !7463
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !7464
  %3 = icmp eq %struct.k_thread* %2, %0, !dbg !7466
  br i1 %3, label %4, label %12, !dbg !7467

4:                                                ; preds = %1
  %5 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !7468, !srcloc !7480
  call void @llvm.dbg.value(metadata i32 %5, metadata !7471, metadata !DIExpression()) #23, !dbg !7481
  %6 = icmp eq i32 %5, 0, !dbg !7482
  br i1 %6, label %12, label %7, !dbg !7483

7:                                                ; preds = %4
  %8 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7484
  %9 = or i32 %8, 268435456, !dbg !7484
  store volatile i32 %9, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7484
  %10 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7486
  %11 = and i32 %10, -32769, !dbg !7486
  store volatile i32 %11, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !7486
  br label %12, !dbg !7487

12:                                               ; preds = %4, %7, %1
  tail call void @z_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !7488
  ret void, !dbg !7489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_static_mpu_regions() local_unnamed_addr #1 !dbg !7490 {
  tail call void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @static_regions, i32 0, i32 0), i8 noundef zeroext 1, i32 noundef ptrtoint ([0 x i8]* @_image_ram_start to i32), i32 noundef ptrtoint ([0 x i8]* @__kernel_ram_end to i32)) #25, !dbg !7491
  ret void, !dbg !7492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_arm_configure_dynamic_mpu_regions(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #1 !dbg !393 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !501, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i8 0, metadata !502, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i32 64, metadata !504, metadata !DIExpression()), !dbg !7493
  call void @llvm.dbg.value(metadata i32 undef, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7493
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !7494
  %3 = load i32, i32* %2, align 4, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %3, metadata !503, metadata !DIExpression(DW_OP_constu, 64, DW_OP_minus, DW_OP_stack_value)), !dbg !7493
  %4 = add i32 %3, -64, !dbg !7496
  call void @llvm.dbg.value(metadata i32 %4, metadata !503, metadata !DIExpression()), !dbg !7493
  store i32 %4, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 0), align 4, !dbg !7497
  store i32 64, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 1), align 4, !dbg !7498
  store i32 353042432, i32* getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0, i32 2, i32 0), align 4, !dbg !7499
  call void @llvm.dbg.value(metadata i8 1, metadata !502, metadata !DIExpression()), !dbg !7493
  tail call void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef getelementptr inbounds ([1 x %struct.z_arm_mpu_partition], [1 x %struct.z_arm_mpu_partition]* @z_arm_configure_dynamic_mpu_regions.dynamic_regions, i32 0, i32 0), i8 noundef zeroext 1) #25, !dbg !7500
  ret void, !dbg !7501
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_enable() local_unnamed_addr #1 !dbg !7502 {
  store volatile i32 5, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7503
  tail call void asm sideeffect "dsb 0xF", "~{memory}"() #23, !dbg !7504, !srcloc !7507
  tail call void asm sideeffect "isb 0xF", "~{memory}"() #23, !dbg !7508, !srcloc !7511
  ret void, !dbg !7512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_disable() local_unnamed_addr #1 !dbg !7513 {
  tail call void asm sideeffect "dmb 0xF", "~{memory}"() #23, !dbg !7514, !srcloc !7517
  store volatile i32 0, i32* inttoptr (i32 -536810092 to i32*), align 4, !dbg !7518
  ret void, !dbg !7519
}

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !7520 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7535, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i8 %1, metadata !7536, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i32 %2, metadata !7537, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.value(metadata i32 %3, metadata !7538, metadata !DIExpression()), !dbg !7539
  %5 = tail call fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7540
  %6 = icmp eq i32 %5, -22, !dbg !7542
  br i1 %6, label %7, label %9, !dbg !7543

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7544
  %8 = zext i8 %1 to i32, !dbg !7544
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3.73, i32 0, i32 0), i32 noundef %8) #25, !dbg !7544
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 283) #25, !dbg !7544
  unreachable, !dbg !7544

9:                                                ; preds = %4
  ret void, !dbg !7549
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_static_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7550 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7555, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i8 %1, metadata !7556, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i32 undef, metadata !7557, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.value(metadata i32 undef, metadata !7558, metadata !DIExpression()), !dbg !7560
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7561
  call void @llvm.dbg.value(metadata i8 %3, metadata !7559, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7560
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext true) #24, !dbg !7562
  call void @llvm.dbg.value(metadata i32 %4, metadata !7559, metadata !DIExpression()), !dbg !7560
  %5 = trunc i32 %4 to i8, !dbg !7563
  store i8 %5, i8* @static_regions_num, align 1, !dbg !7564
  ret i32 %4, !dbg !7565
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i1 noundef zeroext %3) unnamed_addr #1 !dbg !7566 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7570, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata i8 %1, metadata !7571, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata i8 %2, metadata !7572, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata i1 %3, metadata !7573, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7576
  %5 = zext i8 %2 to i32, !dbg !7577
  call void @llvm.dbg.value(metadata i32 %5, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata i32 0, metadata !7574, metadata !DIExpression()), !dbg !7576
  %6 = zext i8 %1 to i32
  call void @llvm.dbg.value(metadata i32 %5, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata i32 0, metadata !7574, metadata !DIExpression()), !dbg !7576
  %7 = icmp eq i8 %1, 0, !dbg !7578
  br i1 %7, label %30, label %8, !dbg !7581

8:                                                ; preds = %4, %26
  %9 = phi i32 [ %27, %26 ], [ %5, %4 ]
  %10 = phi i32 [ %28, %26 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7575, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata i32 %10, metadata !7574, metadata !DIExpression()), !dbg !7576
  %11 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, !dbg !7582
  %12 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 %10, i32 1, !dbg !7585
  %13 = load i32, i32* %12, align 4, !dbg !7585
  %14 = icmp eq i32 %13, 0, !dbg !7586
  br i1 %14, label %26, label %15, !dbg !7587

15:                                               ; preds = %8
  br i1 %3, label %16, label %20, !dbg !7588

16:                                               ; preds = %15
  %17 = tail call fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7590
  %18 = icmp eq i32 %17, 0, !dbg !7590
  br i1 %18, label %19, label %20, !dbg !7591

19:                                               ; preds = %16
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8.74, i32 0, i32 0), i32 noundef 69, i32 noundef %10) #25, !dbg !7592
  br label %30, !dbg !7598

20:                                               ; preds = %16, %15
  %21 = trunc i32 %9 to i8, !dbg !7599
  %22 = tail call fastcc i32 @mpu_configure_region(i8 noundef zeroext %21, %struct.z_arm_mpu_partition* noundef nonnull %11) #24, !dbg !7600
  call void @llvm.dbg.value(metadata i32 %22, metadata !7575, metadata !DIExpression()), !dbg !7576
  %23 = icmp eq i32 %22, -22, !dbg !7601
  br i1 %23, label %30, label %24, !dbg !7603

24:                                               ; preds = %20
  %25 = add nsw i32 %22, 1, !dbg !7604
  call void @llvm.dbg.value(metadata i32 %25, metadata !7575, metadata !DIExpression()), !dbg !7576
  br label %26, !dbg !7605

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %9, %8 ], [ %25, %24 ], !dbg !7576
  call void @llvm.dbg.value(metadata i32 %27, metadata !7575, metadata !DIExpression()), !dbg !7576
  %28 = add nuw nsw i32 %10, 1, !dbg !7606
  call void @llvm.dbg.value(metadata i32 %28, metadata !7574, metadata !DIExpression()), !dbg !7576
  %29 = icmp eq i32 %28, %6, !dbg !7578
  br i1 %29, label %30, label %8, !dbg !7581, !llvm.loop !7607

30:                                               ; preds = %20, %26, %4, %19
  %31 = phi i32 [ -22, %19 ], [ %5, %4 ], [ -22, %20 ], [ %27, %26 ], !dbg !7576
  ret i32 %31, !dbg !7609
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define internal fastcc i32 @mpu_partition_is_valid(%struct.z_arm_mpu_partition* nocapture noundef readonly %0) unnamed_addr #16 !dbg !7610 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7614, metadata !DIExpression()), !dbg !7616
  %2 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 1, !dbg !7617
  %3 = load i32, i32* %2, align 4, !dbg !7617
  %4 = tail call i32 @llvm.ctpop.i32(i32 %3), !dbg !7618, !range !7619
  %5 = icmp ult i32 %4, 2, !dbg !7618
  %6 = icmp ugt i32 %3, 31
  %7 = and i1 %6, %5, !dbg !7620
  br i1 %7, label %8, label %15, !dbg !7620

8:                                                ; preds = %1
  %9 = add i32 %3, -1, !dbg !7621
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %0, i32 0, i32 0, !dbg !7622
  %11 = load i32, i32* %10, align 4, !dbg !7622
  %12 = and i32 %11, %9, !dbg !7623
  %13 = icmp eq i32 %12, 0, !dbg !7624
  %14 = zext i1 %13 to i32
  br label %15

15:                                               ; preds = %8, %1
  %16 = phi i32 [ 0, %1 ], [ %14, %8 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7615, metadata !DIExpression()), !dbg !7616
  ret i32 %16, !dbg !7625
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_region(i8 noundef zeroext %0, %struct.z_arm_mpu_partition* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7626 {
  %3 = alloca %struct.arm_mpu_region, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !7630, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %1, metadata !7631, metadata !DIExpression()), !dbg !7633
  %4 = bitcast %struct.arm_mpu_region* %3 to i8*, !dbg !7634
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7634
  call void @llvm.dbg.declare(metadata %struct.arm_mpu_region* %3, metadata !7632, metadata !DIExpression()), !dbg !7635
  %5 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 0, !dbg !7636
  %6 = load i32, i32* %5, align 4, !dbg !7636
  %7 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 0, !dbg !7637
  store i32 %6, i32* %7, align 4, !dbg !7638
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %3, i32 0, i32 2, !dbg !7639
  %9 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 2, !dbg !7640
  %10 = getelementptr inbounds %struct.z_arm_mpu_partition, %struct.z_arm_mpu_partition* %1, i32 0, i32 1, !dbg !7641
  %11 = load i32, i32* %10, align 4, !dbg !7641
  call fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* noundef nonnull %8, %struct.k_spinlock* noundef nonnull %9, i32 noundef %11) #24, !dbg !7642
  %12 = call fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* noundef nonnull %3) #24, !dbg !7643
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %4) #23, !dbg !7644
  ret i32 %12, !dbg !7645
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define internal fastcc void @get_region_attr_from_mpu_partition_info(%struct.k_spinlock* nocapture noundef writeonly %0, %struct.k_spinlock* nocapture noundef readonly %1, i32 noundef %2) unnamed_addr #17 !dbg !7646 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !7653, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %1, metadata !7654, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 undef, metadata !7655, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.value(metadata i32 %2, metadata !7656, metadata !DIExpression()), !dbg !7657
  %4 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %1, i32 0, i32 0, !dbg !7658
  %5 = load i32, i32* %4, align 4, !dbg !7658
  %6 = tail call fastcc i32 @size_to_mpu_rasr_size(i32 noundef %2) #24, !dbg !7659
  %7 = or i32 %6, %5, !dbg !7660
  %8 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !7661
  store i32 %7, i32* %8, align 4, !dbg !7662
  ret void, !dbg !7663
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @region_allocate_and_init(i8 noundef zeroext %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #1 !dbg !7664 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !7668, metadata !DIExpression()), !dbg !7670
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7669, metadata !DIExpression()), !dbg !7670
  %3 = zext i8 %0 to i32, !dbg !7671
  %4 = icmp ugt i8 %0, 7, !dbg !7673
  br i1 %4, label %5, label %6, !dbg !7674

5:                                                ; preds = %2
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9.75, i32 0, i32 0), i32 noundef 69, i32 noundef %3) #25, !dbg !7675
  br label %7, !dbg !7681

6:                                                ; preds = %2
  tail call fastcc void @region_init(i32 noundef %3, %struct.arm_mpu_region* noundef %1) #24, !dbg !7682
  br label %7, !dbg !7683

7:                                                ; preds = %6, %5
  %8 = phi i32 [ -22, %5 ], [ %3, %6 ], !dbg !7670
  ret i32 %8, !dbg !7684
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @region_init(i32 noundef %0, %struct.arm_mpu_region* nocapture noundef readonly %1) unnamed_addr #14 !dbg !7685 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7689, metadata !DIExpression()), !dbg !7691
  call void @llvm.dbg.value(metadata %struct.arm_mpu_region* %1, metadata !7690, metadata !DIExpression()), !dbg !7691
  tail call fastcc void @set_region_number(i32 noundef %0) #24, !dbg !7692
  %3 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 0, !dbg !7693
  %4 = load i32, i32* %3, align 4, !dbg !7693
  %5 = and i32 %4, -32, !dbg !7694
  %6 = or i32 %5, %0, !dbg !7695
  %7 = or i32 %6, 16, !dbg !7695
  store volatile i32 %7, i32* inttoptr (i32 -536810084 to i32*), align 4, !dbg !7696
  %8 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %1, i32 0, i32 2, i32 0, !dbg !7697
  %9 = load i32, i32* %8, align 4, !dbg !7697
  %10 = or i32 %9, 1, !dbg !7698
  store volatile i32 %10, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7699
  ret void, !dbg !7700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_region_number(i32 noundef %0) unnamed_addr #14 !dbg !7701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7704, metadata !DIExpression()), !dbg !7705
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7706
  ret void, !dbg !7707
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @size_to_mpu_rasr_size(i32 noundef %0) unnamed_addr #11 !dbg !7708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7712, metadata !DIExpression()), !dbg !7713
  %2 = icmp ult i32 %0, 33, !dbg !7714
  br i1 %2, label %11, label %3, !dbg !7716

3:                                                ; preds = %1
  %4 = icmp ugt i32 %0, -2147483648, !dbg !7717
  br i1 %4, label %11, label %5, !dbg !7719

5:                                                ; preds = %3
  %6 = add i32 %0, -1, !dbg !7720
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false), !dbg !7721, !range !7619
  %8 = mul nsw i32 %7, -2, !dbg !7722
  %9 = add nsw i32 %8, 62, !dbg !7722
  %10 = and i32 %9, 62, !dbg !7723
  br label %11, !dbg !7724

11:                                               ; preds = %3, %1, %5
  %12 = phi i32 [ %10, %5 ], [ 8, %1 ], [ 62, %3 ], !dbg !7713
  ret i32 %12, !dbg !7725
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #2

; Function Attrs: noinline nounwind optsize
define dso_local void @arm_core_mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #1 !dbg !7726 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7730, metadata !DIExpression()), !dbg !7732
  call void @llvm.dbg.value(metadata i8 %1, metadata !7731, metadata !DIExpression()), !dbg !7732
  %3 = tail call fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1) #24, !dbg !7733
  %4 = icmp eq i32 %3, -22, !dbg !7735
  br i1 %4, label %5, label %7, !dbg !7736

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7737
  %6 = zext i8 %1 to i32, !dbg !7737
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.78, i32 0, i32 0), i32 noundef %6) #25, !dbg !7737
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 314) #25, !dbg !7737
  unreachable, !dbg !7737

7:                                                ; preds = %2
  ret void, !dbg !7742
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @mpu_configure_dynamic_mpu_regions(%struct.z_arm_mpu_partition* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #1 !dbg !7743 {
  call void @llvm.dbg.value(metadata %struct.z_arm_mpu_partition* %0, metadata !7747, metadata !DIExpression()), !dbg !7754
  call void @llvm.dbg.value(metadata i8 %1, metadata !7748, metadata !DIExpression()), !dbg !7754
  %3 = load i8, i8* @static_regions_num, align 1, !dbg !7755
  call void @llvm.dbg.value(metadata i8 %3, metadata !7749, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7754
  %4 = tail call fastcc i32 @mpu_configure_regions(%struct.z_arm_mpu_partition* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %3, i1 noundef zeroext false) #24, !dbg !7756
  call void @llvm.dbg.value(metadata i32 %4, metadata !7749, metadata !DIExpression()), !dbg !7754
  %5 = icmp ne i32 %4, -22, !dbg !7757
  %6 = icmp slt i32 %4, 8
  %7 = and i1 %5, %6, !dbg !7758
  call void @llvm.dbg.value(metadata i32 %4, metadata !7750, metadata !DIExpression()), !dbg !7759
  br i1 %7, label %8, label %12, !dbg !7758

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %10, %8 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7750, metadata !DIExpression()), !dbg !7759
  tail call fastcc void @ARM_MPU_ClrRegion(i32 noundef %9) #24, !dbg !7760
  %10 = add i32 %9, 1, !dbg !7763
  call void @llvm.dbg.value(metadata i32 %10, metadata !7750, metadata !DIExpression()), !dbg !7759
  %11 = icmp eq i32 %10, 8, !dbg !7764
  br i1 %11, label %12, label %8, !dbg !7765, !llvm.loop !7766

12:                                               ; preds = %8, %2
  ret i32 %4, !dbg !7768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @ARM_MPU_ClrRegion(i32 noundef %0) unnamed_addr #14 !dbg !7769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7772, metadata !DIExpression()), !dbg !7773
  store volatile i32 %0, i32* inttoptr (i32 -536810088 to i32*), align 8, !dbg !7774
  store volatile i32 0, i32* inttoptr (i32 -536810080 to i32*), align 32, !dbg !7775
  ret void, !dbg !7776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_arm_mpu_init() local_unnamed_addr #1 !dbg !7777 {
  %1 = load i32, i32* getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 0), align 4, !dbg !7782
  %2 = icmp ugt i32 %1, 8, !dbg !7784
  br i1 %2, label %3, label %4, !dbg !7785

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.71, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.79, i32 0, i32 0), i32 noundef %1, i32 noundef 8) #25, !dbg !7786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 341) #25, !dbg !7786
  unreachable, !dbg !7786

4:                                                ; preds = %0
  tail call void @arm_core_mpu_disable() #24, !dbg !7791
  call void @llvm.dbg.value(metadata i32 0, metadata !7781, metadata !DIExpression()), !dbg !7792
  %5 = icmp eq i32 %1, 0, !dbg !7793
  br i1 %5, label %13, label %6, !dbg !7796

6:                                                ; preds = %4
  %7 = load %struct.arm_mpu_region*, %struct.arm_mpu_region** getelementptr inbounds (%struct.arm_mpu_config, %struct.arm_mpu_config* @mpu_config, i32 0, i32 1), align 4
  br label %8, !dbg !7796

8:                                                ; preds = %6, %8
  %9 = phi i32 [ 0, %6 ], [ %11, %8 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !7781, metadata !DIExpression()), !dbg !7792
  %10 = getelementptr inbounds %struct.arm_mpu_region, %struct.arm_mpu_region* %7, i32 %9, !dbg !7797
  tail call fastcc void @region_init(i32 noundef %9, %struct.arm_mpu_region* noundef %10) #24, !dbg !7799
  %11 = add nuw i32 %9, 1, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %11, metadata !7781, metadata !DIExpression()), !dbg !7792
  %12 = icmp eq i32 %11, %1, !dbg !7793
  br i1 %12, label %13, label %8, !dbg !7796, !llvm.loop !7801

13:                                               ; preds = %8, %4
  %14 = trunc i32 %1 to i8, !dbg !7803
  store i8 %14, i8* @static_regions_num, align 1, !dbg !7804
  tail call void @arm_core_mpu_enable() #24, !dbg !7805
  %15 = load volatile i32, i32* inttoptr (i32 -536810096 to i32*), align 16, !dbg !7806
  %16 = and i32 %15, 65280, !dbg !7806
  %17 = icmp eq i32 %16, 2048, !dbg !7806
  br i1 %17, label %19, label %18, !dbg !7809

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i32 0, i32 0), i8* noundef getelementptr inbounds ([80 x i8], [80 x i8]* @.str.6.80, i32 0, i32 0), i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7810
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.81, i32 0, i32 0)) #25, !dbg !7810
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2.72, i32 0, i32 0), i32 noundef 435) #25, !dbg !7810
  unreachable, !dbg !7810

19:                                               ; preds = %13
  ret i32 0, !dbg !7812
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !7813 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7820, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i8* %1, metadata !7821, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i8* %0, metadata !7822, metadata !DIExpression()), !dbg !7823
  %3 = load i8, i8* %1, align 1, !dbg !7824
  %4 = icmp eq i8 %3, 0, !dbg !7825
  br i1 %4, label %13, label %5, !dbg !7826

5:                                                ; preds = %2, %5
  %6 = phi i8 [ %11, %5 ], [ %3, %2 ]
  %7 = phi i8* [ %9, %5 ], [ %0, %2 ]
  %8 = phi i8* [ %10, %5 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8* %7, metadata !7820, metadata !DIExpression()), !dbg !7823
  call void @llvm.dbg.value(metadata i8* %8, metadata !7821, metadata !DIExpression()), !dbg !7823
  store i8 %6, i8* %7, align 1, !dbg !7827
  %9 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7829
  call void @llvm.dbg.value(metadata i8* %9, metadata !7820, metadata !DIExpression()), !dbg !7823
  %10 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7830
  call void @llvm.dbg.value(metadata i8* %10, metadata !7821, metadata !DIExpression()), !dbg !7823
  %11 = load i8, i8* %10, align 1, !dbg !7824
  %12 = icmp eq i8 %11, 0, !dbg !7825
  br i1 %12, label %13, label %5, !dbg !7826, !llvm.loop !7831

13:                                               ; preds = %5, %2
  %14 = phi i8* [ %0, %2 ], [ %9, %5 ]
  store i8 0, i8* %14, align 1, !dbg !7833
  ret i8* %0, !dbg !7834
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !7835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7839, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i8* %1, metadata !7840, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i32 %2, metadata !7841, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i8* %0, metadata !7842, metadata !DIExpression()), !dbg !7843
  %4 = icmp eq i32 %2, 0, !dbg !7844
  br i1 %4, label %22, label %5, !dbg !7845

5:                                                ; preds = %3, %11
  %6 = phi i8* [ %13, %11 ], [ %0, %3 ]
  %7 = phi i32 [ %14, %11 ], [ %2, %3 ]
  %8 = phi i8* [ %12, %11 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !7839, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i32 %7, metadata !7841, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i8* %8, metadata !7840, metadata !DIExpression()), !dbg !7843
  %9 = load i8, i8* %8, align 1, !dbg !7846
  %10 = icmp eq i8 %9, 0, !dbg !7847
  br i1 %10, label %16, label %11, !dbg !7848

11:                                               ; preds = %5
  store i8 %9, i8* %6, align 1, !dbg !7849
  %12 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7851
  call void @llvm.dbg.value(metadata i8* %12, metadata !7840, metadata !DIExpression()), !dbg !7843
  %13 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7852
  call void @llvm.dbg.value(metadata i8* %13, metadata !7839, metadata !DIExpression()), !dbg !7843
  %14 = add i32 %7, -1, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %14, metadata !7841, metadata !DIExpression()), !dbg !7843
  %15 = icmp eq i32 %14, 0, !dbg !7844
  br i1 %15, label %22, label %5, !dbg !7845, !llvm.loop !7854

16:                                               ; preds = %5, %16
  %17 = phi i8* [ %19, %16 ], [ %6, %5 ]
  %18 = phi i32 [ %20, %16 ], [ %7, %5 ]
  call void @llvm.dbg.value(metadata i8* %17, metadata !7839, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata i32 %18, metadata !7841, metadata !DIExpression()), !dbg !7843
  store i8 0, i8* %17, align 1, !dbg !7856
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !7858
  call void @llvm.dbg.value(metadata i8* %19, metadata !7839, metadata !DIExpression()), !dbg !7843
  %20 = add i32 %18, -1, !dbg !7859
  call void @llvm.dbg.value(metadata i32 %20, metadata !7841, metadata !DIExpression()), !dbg !7843
  %21 = icmp eq i32 %20, 0, !dbg !7860
  br i1 %21, label %22, label %16, !dbg !7861, !llvm.loop !7862

22:                                               ; preds = %11, %16, %3
  ret i8* %0, !dbg !7864
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7865 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7869, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.value(metadata i32 %1, metadata !7870, metadata !DIExpression()), !dbg !7872
  call void @llvm.dbg.value(metadata i32 %1, metadata !7871, metadata !DIExpression()), !dbg !7872
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7873

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  call void @llvm.dbg.value(metadata i8* %5, metadata !7869, metadata !DIExpression()), !dbg !7872
  %6 = load i8, i8* %5, align 1, !dbg !7874
  %7 = icmp eq i8 %6, %3, !dbg !7875
  %8 = icmp eq i8 %6, 0
  %9 = or i1 %7, %8, !dbg !7876
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7877
  call void @llvm.dbg.value(metadata i8* %10, metadata !7869, metadata !DIExpression()), !dbg !7872
  br i1 %9, label %11, label %4, !dbg !7876, !llvm.loop !7879

11:                                               ; preds = %4
  %12 = select i1 %7, i8* %5, i8* null, !dbg !7881
  ret i8* %12, !dbg !7882
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @strrchr(i8* noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7883 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7885, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i32 %1, metadata !7886, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* null, metadata !7887, metadata !DIExpression()), !dbg !7888
  %3 = trunc i32 %1 to i8
  br label %4, !dbg !7889

4:                                                ; preds = %4, %2
  %5 = phi i8* [ %0, %2 ], [ %10, %4 ]
  %6 = phi i8* [ null, %2 ], [ %9, %4 ], !dbg !7888
  call void @llvm.dbg.value(metadata i8* %6, metadata !7887, metadata !DIExpression()), !dbg !7888
  call void @llvm.dbg.value(metadata i8* %5, metadata !7885, metadata !DIExpression()), !dbg !7888
  %7 = load i8, i8* %5, align 1, !dbg !7890
  %8 = icmp eq i8 %7, %3, !dbg !7893
  %9 = select i1 %8, i8* %5, i8* %6, !dbg !7894
  call void @llvm.dbg.value(metadata i8* %9, metadata !7887, metadata !DIExpression()), !dbg !7888
  %10 = getelementptr inbounds i8, i8* %5, i32 1, !dbg !7895
  call void @llvm.dbg.value(metadata i8* %10, metadata !7885, metadata !DIExpression()), !dbg !7888
  %11 = icmp eq i8 %7, 0, !dbg !7896
  br i1 %11, label %12, label %4, !dbg !7896, !llvm.loop !7897

12:                                               ; preds = %4
  ret i8* %9, !dbg !7899
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strlen(i8* nocapture noundef readonly %0) local_unnamed_addr #6 !dbg !7900 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7904, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i32 0, metadata !7905, metadata !DIExpression()), !dbg !7906
  %2 = load i8, i8* %0, align 1, !dbg !7907
  %3 = icmp eq i8 %2, 0, !dbg !7908
  br i1 %3, label %11, label %4, !dbg !7909

4:                                                ; preds = %1, %4
  %5 = phi i32 [ %8, %4 ], [ 0, %1 ]
  %6 = phi i8* [ %7, %4 ], [ %0, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7905, metadata !DIExpression()), !dbg !7906
  call void @llvm.dbg.value(metadata i8* %6, metadata !7904, metadata !DIExpression()), !dbg !7906
  %7 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !7910
  call void @llvm.dbg.value(metadata i8* %7, metadata !7904, metadata !DIExpression()), !dbg !7906
  %8 = add i32 %5, 1, !dbg !7912
  call void @llvm.dbg.value(metadata i32 %8, metadata !7905, metadata !DIExpression()), !dbg !7906
  %9 = load i8, i8* %7, align 1, !dbg !7907
  %10 = icmp eq i8 %9, 0, !dbg !7908
  br i1 %10, label %11, label %4, !dbg !7909, !llvm.loop !7913

11:                                               ; preds = %4, %1
  %12 = phi i32 [ 0, %1 ], [ %8, %4 ], !dbg !7906
  ret i32 %12, !dbg !7915
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strnlen(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #6 !dbg !7916 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7920, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 %1, metadata !7921, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i32 0, metadata !7922, metadata !DIExpression()), !dbg !7923
  %3 = load i8, i8* %0, align 1, !dbg !7924
  %4 = icmp ne i8 %3, 0, !dbg !7925
  %5 = icmp ne i32 %1, 0, !dbg !7926
  %6 = and i1 %4, %5, !dbg !7926
  br i1 %6, label %7, label %16, !dbg !7927

7:                                                ; preds = %2, %7
  %8 = phi i32 [ %11, %7 ], [ 0, %2 ]
  %9 = phi i8* [ %10, %7 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !7922, metadata !DIExpression()), !dbg !7923
  call void @llvm.dbg.value(metadata i8* %9, metadata !7920, metadata !DIExpression()), !dbg !7923
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7928
  call void @llvm.dbg.value(metadata i8* %10, metadata !7920, metadata !DIExpression()), !dbg !7923
  %11 = add nuw i32 %8, 1, !dbg !7930
  call void @llvm.dbg.value(metadata i32 %11, metadata !7922, metadata !DIExpression()), !dbg !7923
  %12 = load i8, i8* %10, align 1, !dbg !7924
  %13 = icmp ne i8 %12, 0, !dbg !7925
  %14 = icmp ult i32 %11, %1, !dbg !7926
  %15 = select i1 %13, i1 %14, i1 false, !dbg !7926
  br i1 %15, label %7, label %16, !dbg !7927, !llvm.loop !7931

16:                                               ; preds = %7, %2
  %17 = phi i32 [ 0, %2 ], [ %11, %7 ], !dbg !7923
  ret i32 %17, !dbg !7933
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1) local_unnamed_addr #6 !dbg !7934 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7938, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i8* %1, metadata !7939, metadata !DIExpression()), !dbg !7940
  %3 = load i8, i8* %0, align 1, !dbg !7941
  %4 = load i8, i8* %1, align 1, !dbg !7942
  %5 = icmp ne i8 %3, %4, !dbg !7943
  %6 = icmp eq i8 %3, 0
  %7 = or i1 %6, %5, !dbg !7944
  br i1 %7, label %18, label %8, !dbg !7944

8:                                                ; preds = %2, %8
  %9 = phi i8* [ %12, %8 ], [ %1, %2 ]
  %10 = phi i8* [ %11, %8 ], [ %0, %2 ]
  call void @llvm.dbg.value(metadata i8* %9, metadata !7939, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.value(metadata i8* %10, metadata !7938, metadata !DIExpression()), !dbg !7940
  %11 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !7945
  call void @llvm.dbg.value(metadata i8* %11, metadata !7938, metadata !DIExpression()), !dbg !7940
  %12 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !7947
  call void @llvm.dbg.value(metadata i8* %12, metadata !7939, metadata !DIExpression()), !dbg !7940
  %13 = load i8, i8* %11, align 1, !dbg !7941
  %14 = load i8, i8* %12, align 1, !dbg !7942
  %15 = icmp ne i8 %13, %14, !dbg !7943
  %16 = icmp eq i8 %13, 0
  %17 = or i1 %16, %15, !dbg !7944
  br i1 %17, label %18, label %8, !dbg !7944, !llvm.loop !7948

18:                                               ; preds = %8, %2
  %19 = phi i8 [ %3, %2 ], [ %13, %8 ], !dbg !7941
  %20 = phi i8 [ %4, %2 ], [ %14, %8 ], !dbg !7942
  %21 = zext i8 %19 to i32, !dbg !7951
  %22 = zext i8 %20 to i32, !dbg !7952
  %23 = sub nsw i32 %21, %22, !dbg !7953
  ret i32 %23, !dbg !7954
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @strncmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !7955 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7959, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i8* %1, metadata !7960, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i32 %2, metadata !7961, metadata !DIExpression()), !dbg !7962
  %4 = icmp eq i32 %2, 0, !dbg !7963
  br i1 %4, label %23, label %5, !dbg !7963

5:                                                ; preds = %3, %14
  %6 = phi i32 [ %17, %14 ], [ %2, %3 ]
  %7 = phi i8* [ %16, %14 ], [ %1, %3 ]
  %8 = phi i8* [ %15, %14 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !7961, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i8* %7, metadata !7960, metadata !DIExpression()), !dbg !7962
  call void @llvm.dbg.value(metadata i8* %8, metadata !7959, metadata !DIExpression()), !dbg !7962
  %9 = load i8, i8* %8, align 1, !dbg !7964
  %10 = load i8, i8* %7, align 1, !dbg !7965
  %11 = icmp ne i8 %9, %10, !dbg !7966
  %12 = icmp eq i8 %9, 0
  %13 = or i1 %12, %11, !dbg !7967
  br i1 %13, label %19, label %14, !dbg !7967

14:                                               ; preds = %5
  %15 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !7968
  call void @llvm.dbg.value(metadata i8* %15, metadata !7959, metadata !DIExpression()), !dbg !7962
  %16 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !7970
  call void @llvm.dbg.value(metadata i8* %16, metadata !7960, metadata !DIExpression()), !dbg !7962
  %17 = add i32 %6, -1, !dbg !7971
  call void @llvm.dbg.value(metadata i32 %17, metadata !7961, metadata !DIExpression()), !dbg !7962
  %18 = icmp eq i32 %17, 0, !dbg !7963
  br i1 %18, label %23, label %5, !dbg !7963, !llvm.loop !7972

19:                                               ; preds = %5
  %20 = zext i8 %9 to i32, !dbg !7975
  %21 = zext i8 %10 to i32, !dbg !7976
  %22 = sub nsw i32 %20, %21, !dbg !7977
  br label %23, !dbg !7978

23:                                               ; preds = %14, %3, %19
  %24 = phi i32 [ %22, %19 ], [ 0, %3 ], [ 0, %14 ], !dbg !7978
  ret i32 %24, !dbg !7979
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strtok_r(i8* noundef %0, i8* noundef readonly %1, i8** nocapture noundef %2) local_unnamed_addr #13 !dbg !7980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7984, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i8* %1, metadata !7985, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i8** %2, metadata !7986, metadata !DIExpression()), !dbg !7989
  %4 = icmp eq i8* %0, null, !dbg !7990
  br i1 %4, label %5, label %7, !dbg !7990

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 4, !dbg !7991
  br label %7, !dbg !7990

7:                                                ; preds = %3, %5
  %8 = phi i8* [ %6, %5 ], [ %0, %3 ], !dbg !7990
  call void @llvm.dbg.value(metadata i8* %8, metadata !7987, metadata !DIExpression()), !dbg !7989
  %9 = load i8, i8* %8, align 1, !dbg !7992
  %10 = icmp eq i8 %9, 0, !dbg !7992
  br i1 %10, label %33, label %11, !dbg !7993

11:                                               ; preds = %7, %17
  %12 = phi i8 [ %19, %17 ], [ %9, %7 ]
  %13 = phi i8* [ %18, %17 ], [ %8, %7 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7987, metadata !DIExpression()), !dbg !7989
  %14 = zext i8 %12 to i32, !dbg !7992
  %15 = tail call i8* @strchr(i8* noundef %1, i32 noundef %14) #24, !dbg !7994
  %16 = icmp eq i8* %15, null, !dbg !7993
  br i1 %16, label %21, label %17, !dbg !7995

17:                                               ; preds = %11
  %18 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7996
  call void @llvm.dbg.value(metadata i8* %18, metadata !7987, metadata !DIExpression()), !dbg !7989
  %19 = load i8, i8* %18, align 1, !dbg !7992
  %20 = icmp eq i8 %19, 0, !dbg !7992
  br i1 %20, label %33, label %11, !dbg !7993, !llvm.loop !7998

21:                                               ; preds = %11, %27
  %22 = phi i8 [ %29, %27 ], [ %12, %11 ]
  %23 = phi i8* [ %28, %27 ], [ %13, %11 ]
  call void @llvm.dbg.value(metadata i8* %23, metadata !7988, metadata !DIExpression()), !dbg !7989
  %24 = zext i8 %22 to i32, !dbg !8000
  %25 = tail call i8* @strchr(i8* noundef %1, i32 noundef %24) #24, !dbg !8001
  %26 = icmp eq i8* %25, null, !dbg !8002
  br i1 %26, label %27, label %31, !dbg !8003

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8004
  call void @llvm.dbg.value(metadata i8* %28, metadata !7988, metadata !DIExpression()), !dbg !7989
  %29 = load i8, i8* %28, align 1, !dbg !8000
  %30 = icmp eq i8 %29, 0, !dbg !8000
  br i1 %30, label %33, label %21, !dbg !8006, !llvm.loop !8007

31:                                               ; preds = %21
  store i8 0, i8* %23, align 1, !dbg !8009
  %32 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !8012
  br label %33, !dbg !8013

33:                                               ; preds = %17, %27, %7, %31
  %34 = phi i8* [ %32, %31 ], [ %8, %7 ], [ %28, %27 ], [ %18, %17 ], !dbg !7989
  %35 = phi i8* [ %13, %31 ], [ null, %7 ], [ %13, %27 ], [ null, %17 ], !dbg !7989
  store i8* %34, i8** %2, align 4, !dbg !7989
  ret i8* %35, !dbg !8014
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strcat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1) local_unnamed_addr #13 !dbg !8015 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8017, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata i8* %1, metadata !8018, metadata !DIExpression()), !dbg !8019
  %3 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8020
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8021
  %5 = tail call i8* @strcpy(i8* noundef %4, i8* noundef %1) #24, !dbg !8022
  ret i8* %0, !dbg !8023
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @strncat(i8* noalias noundef returned %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8024 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8026, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %1, metadata !8027, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %2, metadata !8028, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %0, metadata !8029, metadata !DIExpression()), !dbg !8031
  %4 = tail call i32 @strlen(i8* noundef %0) #24, !dbg !8032
  call void @llvm.dbg.value(metadata i32 %4, metadata !8030, metadata !DIExpression()), !dbg !8031
  %5 = getelementptr inbounds i8, i8* %0, i32 %4, !dbg !8033
  call void @llvm.dbg.value(metadata i8* %5, metadata !8026, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %1, metadata !8027, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %2, metadata !8028, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %2, metadata !8028, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8031
  %6 = icmp eq i32 %2, 0, !dbg !8034
  br i1 %6, label %18, label %7, !dbg !8035

7:                                                ; preds = %3, %14
  %8 = phi i32 [ %11, %14 ], [ %2, %3 ]
  %9 = phi i8* [ %16, %14 ], [ %5, %3 ]
  %10 = phi i8* [ %15, %14 ], [ %1, %3 ]
  %11 = add i32 %8, -1, !dbg !8036
  call void @llvm.dbg.value(metadata i8* %9, metadata !8026, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i8* %10, metadata !8027, metadata !DIExpression()), !dbg !8031
  %12 = load i8, i8* %10, align 1, !dbg !8037
  %13 = icmp eq i8 %12, 0, !dbg !8038
  br i1 %13, label %18, label %14, !dbg !8039

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !8040
  call void @llvm.dbg.value(metadata i8* %15, metadata !8027, metadata !DIExpression()), !dbg !8031
  %16 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !8042
  call void @llvm.dbg.value(metadata i8* %16, metadata !8026, metadata !DIExpression()), !dbg !8031
  store i8 %12, i8* %9, align 1, !dbg !8043
  call void @llvm.dbg.value(metadata i32 %11, metadata !8028, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.value(metadata i32 %11, metadata !8028, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !8031
  %17 = icmp eq i32 %11, 0, !dbg !8034
  br i1 %17, label %18, label %7, !dbg !8035, !llvm.loop !8044

18:                                               ; preds = %7, %14, %3
  %19 = phi i8* [ %5, %3 ], [ %16, %14 ], [ %9, %7 ], !dbg !8031
  store i8 0, i8* %19, align 1, !dbg !8046
  ret i8* %0, !dbg !8047
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @memcmp(i8* nocapture noundef readonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8048 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8052, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i8* %1, metadata !8053, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i32 %2, metadata !8054, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i8* %0, metadata !8055, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i8* %1, metadata !8056, metadata !DIExpression()), !dbg !8057
  %4 = icmp eq i32 %2, 0, !dbg !8058
  br i1 %4, label %31, label %5, !dbg !8060

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8056, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i8* %0, metadata !8055, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i32 %2, metadata !8054, metadata !DIExpression()), !dbg !8057
  %6 = add i32 %2, -1, !dbg !8061
  call void @llvm.dbg.value(metadata i32 %6, metadata !8054, metadata !DIExpression()), !dbg !8057
  %7 = icmp eq i32 %6, 0, !dbg !8062
  br i1 %7, label %23, label %8, !dbg !8063

8:                                                ; preds = %5
  %9 = getelementptr i8, i8* %0, i32 %6, !dbg !8064
  %10 = getelementptr i8, i8* %1, i32 %6, !dbg !8064
  br label %11, !dbg !8064

11:                                               ; preds = %8, %18
  %12 = phi i32 [ %21, %18 ], [ %6, %8 ]
  %13 = phi i8* [ %20, %18 ], [ %1, %8 ]
  %14 = phi i8* [ %19, %18 ], [ %0, %8 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8056, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i8* %14, metadata !8055, metadata !DIExpression()), !dbg !8057
  %15 = load i8, i8* %14, align 1, !dbg !8065
  %16 = load i8, i8* %13, align 1, !dbg !8066
  %17 = icmp eq i8 %15, %16, !dbg !8067
  br i1 %17, label %18, label %23, !dbg !8064

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %14, i32 1, !dbg !8068
  call void @llvm.dbg.value(metadata i8* %19, metadata !8055, metadata !DIExpression()), !dbg !8057
  %20 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8070
  call void @llvm.dbg.value(metadata i8* %20, metadata !8056, metadata !DIExpression()), !dbg !8057
  call void @llvm.dbg.value(metadata i32 %12, metadata !8054, metadata !DIExpression()), !dbg !8057
  %21 = add i32 %12, -1, !dbg !8061
  call void @llvm.dbg.value(metadata i32 %21, metadata !8054, metadata !DIExpression()), !dbg !8057
  %22 = icmp eq i32 %21, 0, !dbg !8062
  br i1 %22, label %23, label %11, !dbg !8063, !llvm.loop !8071

23:                                               ; preds = %11, %18, %5
  %24 = phi i8* [ %0, %5 ], [ %9, %18 ], [ %14, %11 ], !dbg !8057
  %25 = phi i8* [ %1, %5 ], [ %10, %18 ], [ %13, %11 ], !dbg !8057
  %26 = load i8, i8* %24, align 1, !dbg !8073
  %27 = zext i8 %26 to i32, !dbg !8073
  %28 = load i8, i8* %25, align 1, !dbg !8074
  %29 = zext i8 %28 to i32, !dbg !8074
  %30 = sub nsw i32 %27, %29, !dbg !8075
  br label %31, !dbg !8076

31:                                               ; preds = %3, %23
  %32 = phi i32 [ %30, %23 ], [ 0, %3 ], !dbg !8057
  ret i32 %32, !dbg !8077
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memmove(i8* noundef returned %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8078 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8082, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i8* %1, metadata !8083, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i32 %2, metadata !8084, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i8* %0, metadata !8085, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i8* %1, metadata !8086, metadata !DIExpression()), !dbg !8087
  %4 = ptrtoint i8* %0 to i32, !dbg !8088
  %5 = ptrtoint i8* %1 to i32, !dbg !8088
  %6 = sub i32 %4, %5, !dbg !8088
  %7 = icmp ult i32 %6, %2, !dbg !8090
  br i1 %7, label %10, label %8, !dbg !8091

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8086, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i8* %0, metadata !8085, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i32 %2, metadata !8084, metadata !DIExpression()), !dbg !8087
  %9 = icmp eq i32 %2, 0, !dbg !8092
  br i1 %9, label %26, label %17, !dbg !8094

10:                                               ; preds = %3, %10
  %11 = phi i32 [ %12, %10 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !8084, metadata !DIExpression()), !dbg !8087
  %12 = add i32 %11, -1, !dbg !8095
  call void @llvm.dbg.value(metadata i32 %12, metadata !8084, metadata !DIExpression()), !dbg !8087
  %13 = getelementptr inbounds i8, i8* %1, i32 %12, !dbg !8098
  %14 = load i8, i8* %13, align 1, !dbg !8098
  %15 = getelementptr inbounds i8, i8* %0, i32 %12, !dbg !8099
  store i8 %14, i8* %15, align 1, !dbg !8100
  %16 = icmp eq i32 %12, 0, !dbg !8101
  br i1 %16, label %26, label %10, !dbg !8102, !llvm.loop !8103

17:                                               ; preds = %8, %17
  %18 = phi i8* [ %23, %17 ], [ %1, %8 ]
  %19 = phi i8* [ %22, %17 ], [ %0, %8 ]
  %20 = phi i32 [ %24, %17 ], [ %2, %8 ]
  call void @llvm.dbg.value(metadata i8* %18, metadata !8086, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i8* %19, metadata !8085, metadata !DIExpression()), !dbg !8087
  call void @llvm.dbg.value(metadata i32 %20, metadata !8084, metadata !DIExpression()), !dbg !8087
  %21 = load i8, i8* %18, align 1, !dbg !8105
  store i8 %21, i8* %19, align 1, !dbg !8107
  %22 = getelementptr inbounds i8, i8* %19, i32 1, !dbg !8108
  call void @llvm.dbg.value(metadata i8* %22, metadata !8085, metadata !DIExpression()), !dbg !8087
  %23 = getelementptr inbounds i8, i8* %18, i32 1, !dbg !8109
  call void @llvm.dbg.value(metadata i8* %23, metadata !8086, metadata !DIExpression()), !dbg !8087
  %24 = add i32 %20, -1, !dbg !8110
  call void @llvm.dbg.value(metadata i32 %24, metadata !8084, metadata !DIExpression()), !dbg !8087
  %25 = icmp eq i32 %24, 0, !dbg !8092
  br i1 %25, label %26, label %17, !dbg !8094, !llvm.loop !8111

26:                                               ; preds = %17, %10, %8
  ret i8* %0, !dbg !8113
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @memcpy(i8* noalias noundef returned writeonly %0, i8* noalias nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #13 !dbg !8114 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8120, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i8* %1, metadata !8121, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 %2, metadata !8122, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i8* %0, metadata !8123, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i8* %1, metadata !8124, metadata !DIExpression()), !dbg !8125
  %4 = icmp eq i32 %2, 0, !dbg !8126
  br i1 %4, label %14, label %5, !dbg !8127

5:                                                ; preds = %3, %5
  %6 = phi i8* [ %9, %5 ], [ %1, %3 ]
  %7 = phi i8* [ %11, %5 ], [ %0, %3 ]
  %8 = phi i32 [ %12, %5 ], [ %2, %3 ]
  call void @llvm.dbg.value(metadata i8* %6, metadata !8124, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i8* %7, metadata !8123, metadata !DIExpression()), !dbg !8125
  call void @llvm.dbg.value(metadata i32 %8, metadata !8122, metadata !DIExpression()), !dbg !8125
  %9 = getelementptr inbounds i8, i8* %6, i32 1, !dbg !8128
  call void @llvm.dbg.value(metadata i8* %9, metadata !8124, metadata !DIExpression()), !dbg !8125
  %10 = load i8, i8* %6, align 1, !dbg !8130
  %11 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !8131
  call void @llvm.dbg.value(metadata i8* %11, metadata !8123, metadata !DIExpression()), !dbg !8125
  store i8 %10, i8* %7, align 1, !dbg !8132
  %12 = add i32 %8, -1, !dbg !8133
  call void @llvm.dbg.value(metadata i32 %12, metadata !8122, metadata !DIExpression()), !dbg !8125
  %13 = icmp eq i32 %12, 0, !dbg !8126
  br i1 %13, label %14, label %5, !dbg !8127, !llvm.loop !8134

14:                                               ; preds = %5, %3
  ret i8* %0, !dbg !8136
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local i8* @memset(i8* noundef returned writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #18 !dbg !8137 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8141, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %1, metadata !8142, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %2, metadata !8143, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %0, metadata !8144, metadata !DIExpression()), !dbg !8146
  %4 = trunc i32 %1 to i8, !dbg !8147
  call void @llvm.dbg.value(metadata i8 %4, metadata !8145, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i32 %2, metadata !8143, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %0, metadata !8144, metadata !DIExpression()), !dbg !8146
  %5 = icmp eq i32 %2, 0, !dbg !8148
  br i1 %5, label %12, label %6, !dbg !8149

6:                                                ; preds = %3, %6
  %7 = phi i32 [ %10, %6 ], [ %2, %3 ]
  %8 = phi i8* [ %9, %6 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !8143, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata i8* %8, metadata !8144, metadata !DIExpression()), !dbg !8146
  %9 = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8150
  call void @llvm.dbg.value(metadata i8* %9, metadata !8144, metadata !DIExpression()), !dbg !8146
  store i8 %4, i8* %8, align 1, !dbg !8152
  %10 = add i32 %7, -1, !dbg !8153
  call void @llvm.dbg.value(metadata i32 %10, metadata !8143, metadata !DIExpression()), !dbg !8146
  %11 = icmp eq i32 %10, 0, !dbg !8148
  br i1 %11, label %12, label %6, !dbg !8149, !llvm.loop !8154

12:                                               ; preds = %6, %3
  ret i8* %0, !dbg !8156
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @memchr(i8* noundef readonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #6 !dbg !8157 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8161, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata i32 %1, metadata !8162, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata i32 %2, metadata !8163, metadata !DIExpression()), !dbg !8167
  %4 = icmp eq i32 %2, 0, !dbg !8168
  br i1 %4, label %17, label %5, !dbg !8169

5:                                                ; preds = %3
  %6 = trunc i32 %1 to i8
  br label %7, !dbg !8170

7:                                                ; preds = %5, %7
  %8 = phi i32 [ %13, %7 ], [ %2, %5 ]
  %9 = phi i8* [ %12, %7 ], [ %0, %5 ], !dbg !8171
  call void @llvm.dbg.value(metadata i8* %9, metadata !8164, metadata !DIExpression()), !dbg !8171
  call void @llvm.dbg.value(metadata i32 %8, metadata !8163, metadata !DIExpression()), !dbg !8167
  call void @llvm.dbg.value(metadata i8* %9, metadata !8164, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8171
  %10 = load i8, i8* %9, align 1, !dbg !8172
  %11 = icmp eq i8 %10, %6, !dbg !8175
  %12 = getelementptr inbounds i8, i8* %9, i32 1
  %13 = add i32 %8, -1
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %11, i1 true, i1 %14, !dbg !8176
  call void @llvm.dbg.value(metadata i8* %12, metadata !8164, metadata !DIExpression()), !dbg !8171
  call void @llvm.dbg.value(metadata i32 %13, metadata !8163, metadata !DIExpression()), !dbg !8167
  br i1 %15, label %16, label %7, !dbg !8176, !llvm.loop !8177

16:                                               ; preds = %7
  br i1 %11, label %18, label %17

17:                                               ; preds = %16, %3
  br label %18, !dbg !8179

18:                                               ; preds = %16, %17
  %19 = phi i8* [ %9, %16 ], [ null, %17 ], !dbg !8167
  ret i8* %19, !dbg !8180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @__stdout_hook_install(i32 (i32)* noundef %0) local_unnamed_addr #7 !dbg !8181 {
  call void @llvm.dbg.value(metadata i32 (i32)* %0, metadata !8183, metadata !DIExpression()), !dbg !8184
  store i32 (i32)* %0, i32 (i32)** @_stdout_hook, align 4, !dbg !8185
  ret void, !dbg !8186
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal i32 @_stdout_hook_default(i32 noundef %0) #3 !dbg !8187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8189, metadata !DIExpression()), !dbg !8190
  ret i32 -1, !dbg !8191
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8192 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.value(metadata i32* %1, metadata !8197, metadata !DIExpression()), !dbg !8198
  %3 = ptrtoint i32* %1 to i32, !dbg !8199
  %4 = and i32 %3, -2, !dbg !8199
  %5 = icmp eq i32 %4, 2, !dbg !8199
  br i1 %5, label %6, label %9, !dbg !8199

6:                                                ; preds = %2
  %7 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8200
  %8 = tail call i32 %7(i32 noundef %0) #25, !dbg !8200
  br label %9, !dbg !8201

9:                                                ; preds = %2, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %2 ], !dbg !8201
  ret i32 %10, !dbg !8202
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputc(i32 noundef %0, i32* noundef %1) local_unnamed_addr #1 !dbg !8203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8205, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i32* %1, metadata !8206, metadata !DIExpression()), !dbg !8207
  %3 = tail call fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8208
  ret i32 %3, !dbg !8209
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fputc(i32 noundef %0, i32* noundef %1) unnamed_addr #1 !dbg !8210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8213, metadata !DIExpression()), !dbg !8215
  call void @llvm.dbg.value(metadata i32* %1, metadata !8214, metadata !DIExpression()), !dbg !8215
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8216, !srcloc !8218
  %3 = tail call i32 @z_impl_zephyr_fputc(i32 noundef %0, i32* noundef %1) #24, !dbg !8219
  ret i32 %3, !dbg !8220
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fputs(i8* noalias noundef %0, i32* noalias noundef %1) local_unnamed_addr #1 !dbg !8221 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8226, metadata !DIExpression()), !dbg !8230
  call void @llvm.dbg.value(metadata i32* %1, metadata !8227, metadata !DIExpression()), !dbg !8230
  %3 = tail call i32 @strlen(i8* noundef %0) #25, !dbg !8231
  call void @llvm.dbg.value(metadata i32 %3, metadata !8228, metadata !DIExpression()), !dbg !8230
  %4 = tail call i32 @fwrite(i8* noundef %0, i32 noundef 1, i32 noundef %3, i32* noundef %1) #24, !dbg !8232
  call void @llvm.dbg.value(metadata i32 %4, metadata !8229, metadata !DIExpression()), !dbg !8230
  %5 = icmp ne i32 %3, %4, !dbg !8233
  %6 = sext i1 %5 to i32, !dbg !8234
  ret i32 %6, !dbg !8235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) local_unnamed_addr #1 !dbg !8236 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8240, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32 %1, metadata !8241, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32 %2, metadata !8242, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.value(metadata i32* %3, metadata !8243, metadata !DIExpression()), !dbg !8244
  %5 = tail call fastcc i32 @zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8245
  ret i32 %5, !dbg !8246
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef %3) unnamed_addr #1 !dbg !8247 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8249, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32 %1, metadata !8250, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32 %2, metadata !8251, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.value(metadata i32* %3, metadata !8252, metadata !DIExpression()), !dbg !8253
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8254, !srcloc !8256
  %5 = tail call i32 @z_impl_zephyr_fwrite(i8* noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3) #24, !dbg !8257
  ret i32 %5, !dbg !8258
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_zephyr_fwrite(i8* noalias nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32* noalias noundef readnone %3) local_unnamed_addr #1 !dbg !8259 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8261, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %1, metadata !8262, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %2, metadata !8263, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32* %3, metadata !8264, metadata !DIExpression()), !dbg !8269
  %5 = icmp ne i32* %3, inttoptr (i32 2 to i32*), !dbg !8270
  %6 = icmp ne i32* %3, inttoptr (i32 3 to i32*)
  %7 = and i1 %5, %6, !dbg !8272
  %8 = icmp eq i32 %2, 0
  %9 = or i1 %8, %7, !dbg !8272
  %10 = icmp eq i32 %1, 0
  %11 = or i1 %10, %9, !dbg !8272
  br i1 %11, label %33, label %12, !dbg !8272

12:                                               ; preds = %4, %27
  %13 = phi i32 [ %28, %27 ], [ %2, %4 ], !dbg !8269
  %14 = phi i8* [ %19, %27 ], [ %0, %4 ], !dbg !8269
  call void @llvm.dbg.value(metadata i8* %14, metadata !8267, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %13, metadata !8265, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %1, metadata !8266, metadata !DIExpression()), !dbg !8269
  br label %15, !dbg !8273

15:                                               ; preds = %24, %12
  %16 = phi i32 [ %1, %12 ], [ %25, %24 ], !dbg !8275
  %17 = phi i8* [ %14, %12 ], [ %19, %24 ], !dbg !8269
  call void @llvm.dbg.value(metadata i8* %17, metadata !8267, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.value(metadata i32 %16, metadata !8266, metadata !DIExpression()), !dbg !8269
  %18 = load i32 (i32)*, i32 (i32)** @_stdout_hook, align 4, !dbg !8276
  %19 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !8279
  call void @llvm.dbg.value(metadata i8* %19, metadata !8267, metadata !DIExpression()), !dbg !8269
  %20 = load i8, i8* %17, align 1, !dbg !8280
  %21 = zext i8 %20 to i32, !dbg !8281
  %22 = tail call i32 %18(i32 noundef %21) #25, !dbg !8276
  %23 = icmp eq i32 %22, -1, !dbg !8282
  br i1 %23, label %30, label %24, !dbg !8283

24:                                               ; preds = %15
  %25 = add i32 %16, -1, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %25, metadata !8266, metadata !DIExpression()), !dbg !8269
  %26 = icmp eq i32 %25, 0, !dbg !8285
  br i1 %26, label %27, label %15, !dbg !8286, !llvm.loop !8287

27:                                               ; preds = %24
  %28 = add i32 %13, -1, !dbg !8289
  call void @llvm.dbg.value(metadata i32 %28, metadata !8265, metadata !DIExpression()), !dbg !8269
  %29 = icmp eq i32 %28, 0, !dbg !8290
  br i1 %29, label %30, label %12, !dbg !8291, !llvm.loop !8292

30:                                               ; preds = %27, %15
  %31 = phi i32 [ %13, %15 ], [ 0, %27 ], !dbg !8269
  call void @llvm.dbg.value(metadata i32 %31, metadata !8265, metadata !DIExpression()), !dbg !8269
  call void @llvm.dbg.label(metadata !8268), !dbg !8295
  %32 = sub i32 %2, %31, !dbg !8296
  br label %33, !dbg !8297

33:                                               ; preds = %4, %30
  %34 = phi i32 [ %32, %30 ], [ 0, %4 ], !dbg !8269
  ret i32 %34, !dbg !8298
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @puts(i8* noundef %0) local_unnamed_addr #1 !dbg !8299 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8303, metadata !DIExpression()), !dbg !8304
  %2 = tail call i32 @fputs(i8* noundef %0, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8305
  %3 = icmp eq i32 %2, -1, !dbg !8307
  br i1 %3, label %8, label %4, !dbg !8308

4:                                                ; preds = %1
  %5 = tail call i32 @fputc(i32 noundef 10, i32* noundef nonnull inttoptr (i32 2 to i32*)) #24, !dbg !8309
  %6 = icmp eq i32 %5, -1, !dbg !8310
  %7 = sext i1 %6 to i32, !dbg !8309
  br label %8, !dbg !8311

8:                                                ; preds = %1, %4
  %9 = phi i32 [ %7, %4 ], [ -1, %1 ], !dbg !8304
  ret i32 %9, !dbg !8312
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_9_5(%struct.device* nocapture noundef readonly %0) #1 !dbg !8313 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8315, metadata !DIExpression()), !dbg !8316
  tail call fastcc void @__stm32_exti_isr(i32 noundef 5, i32 noundef 10, %struct.device* noundef %0) #24, !dbg !8317
  ret void, !dbg !8318
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_isr(i32 noundef %0, i32 noundef %1, %struct.device* nocapture noundef readonly %2) unnamed_addr #1 !dbg !8319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8323, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %1, metadata !8324, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata %struct.device* %2, metadata !8325, metadata !DIExpression()), !dbg !8329
  %4 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 4, !dbg !8330
  %5 = bitcast i8** %4 to %struct.stm32_exti_data**, !dbg !8330
  %6 = load %struct.stm32_exti_data*, %struct.stm32_exti_data** %5, align 4, !dbg !8330
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* %6, metadata !8326, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 %0, metadata !8328, metadata !DIExpression()), !dbg !8329
  %7 = icmp slt i32 %0, %1, !dbg !8331
  br i1 %7, label %8, label %22, !dbg !8334

8:                                                ; preds = %3, %19
  %9 = phi i32 [ %20, %19 ], [ %0, %3 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !8328, metadata !DIExpression()), !dbg !8329
  %10 = tail call fastcc i32 @stm32_exti_is_pending(i32 noundef %9) #24, !dbg !8335
  %11 = icmp eq i32 %10, 0, !dbg !8335
  br i1 %11, label %19, label %12, !dbg !8338

12:                                               ; preds = %8
  tail call fastcc void @stm32_exti_clear_pending(i32 noundef %9) #24, !dbg !8339
  %13 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 0, !dbg !8341
  %14 = load void (i32, i8*)*, void (i32, i8*)** %13, align 4, !dbg !8341
  %15 = icmp eq void (i32, i8*)* %14, null, !dbg !8343
  br i1 %15, label %19, label %16, !dbg !8344

16:                                               ; preds = %12
  %17 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* %6, i32 0, i32 0, i32 %9, i32 1, !dbg !8345
  %18 = load i8*, i8** %17, align 4, !dbg !8345
  tail call void %14(i32 noundef %9, i8* noundef %18) #25, !dbg !8346
  br label %19, !dbg !8347

19:                                               ; preds = %8, %16, %12
  %20 = add i32 %9, 1, !dbg !8348
  call void @llvm.dbg.value(metadata i32 %20, metadata !8328, metadata !DIExpression()), !dbg !8329
  %21 = icmp eq i32 %20, %1, !dbg !8331
  br i1 %21, label %22, label %8, !dbg !8334, !llvm.loop !8349

22:                                               ; preds = %19, %3
  ret void, !dbg !8351
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @stm32_exti_is_pending(i32 noundef %0) unnamed_addr #15 !dbg !8352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8354, metadata !DIExpression()), !dbg !8355
  %2 = shl nuw i32 1, %0, !dbg !8356
  %3 = tail call fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %2) #24, !dbg !8359
  ret i32 %3, !dbg !8360
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_exti_clear_pending(i32 noundef %0) unnamed_addr #14 !dbg !8361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8365, metadata !DIExpression()), !dbg !8366
  %2 = shl nuw i32 1, %0, !dbg !8367
  tail call fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %2) #24, !dbg !8370
  ret void, !dbg !8371
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_ClearFlag_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8375, metadata !DIExpression()), !dbg !8376
  store volatile i32 %0, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8377
  ret void, !dbg !8378
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_EXTI_IsActiveFlag_0_31(i32 noundef %0) unnamed_addr #15 !dbg !8379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8381, metadata !DIExpression()), !dbg !8382
  %2 = load volatile i32, i32* inttoptr (i32 1073822740 to i32*), align 4, !dbg !8383
  %3 = and i32 %2, %0, !dbg !8383
  %4 = icmp eq i32 %3, %0, !dbg !8384
  %5 = zext i1 %4 to i32, !dbg !8384
  ret i32 %5, !dbg !8385
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_4(%struct.device* nocapture noundef readonly %0) #1 !dbg !8386 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8388, metadata !DIExpression()), !dbg !8389
  tail call fastcc void @__stm32_exti_isr(i32 noundef 4, i32 noundef 5, %struct.device* noundef %0) #24, !dbg !8390
  ret void, !dbg !8391
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_3(%struct.device* nocapture noundef readonly %0) #1 !dbg !8392 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8394, metadata !DIExpression()), !dbg !8395
  tail call fastcc void @__stm32_exti_isr(i32 noundef 3, i32 noundef 4, %struct.device* noundef %0) #24, !dbg !8396
  ret void, !dbg !8397
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_2(%struct.device* nocapture noundef readonly %0) #1 !dbg !8398 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8400, metadata !DIExpression()), !dbg !8401
  tail call fastcc void @__stm32_exti_isr(i32 noundef 2, i32 noundef 3, %struct.device* noundef %0) #24, !dbg !8402
  ret void, !dbg !8403
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_22(%struct.device* nocapture noundef readonly %0) #1 !dbg !8404 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8406, metadata !DIExpression()), !dbg !8407
  tail call fastcc void @__stm32_exti_isr(i32 noundef 22, i32 noundef 23, %struct.device* noundef %0) #24, !dbg !8408
  ret void, !dbg !8409
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_21(%struct.device* nocapture noundef readonly %0) #1 !dbg !8410 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8412, metadata !DIExpression()), !dbg !8413
  tail call fastcc void @__stm32_exti_isr(i32 noundef 21, i32 noundef 22, %struct.device* noundef %0) #24, !dbg !8414
  ret void, !dbg !8415
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_1(%struct.device* nocapture noundef readonly %0) #1 !dbg !8416 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8418, metadata !DIExpression()), !dbg !8419
  tail call fastcc void @__stm32_exti_isr(i32 noundef 1, i32 noundef 2, %struct.device* noundef %0) #24, !dbg !8420
  ret void, !dbg !8421
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_18(%struct.device* nocapture noundef readonly %0) #1 !dbg !8422 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8424, metadata !DIExpression()), !dbg !8425
  tail call fastcc void @__stm32_exti_isr(i32 noundef 18, i32 noundef 19, %struct.device* noundef %0) #24, !dbg !8426
  ret void, !dbg !8427
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_16(%struct.device* nocapture noundef readonly %0) #1 !dbg !8428 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8430, metadata !DIExpression()), !dbg !8431
  tail call fastcc void @__stm32_exti_isr(i32 noundef 16, i32 noundef 17, %struct.device* noundef %0) #24, !dbg !8432
  ret void, !dbg !8433
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_15_10(%struct.device* nocapture noundef readonly %0) #1 !dbg !8434 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8436, metadata !DIExpression()), !dbg !8437
  tail call fastcc void @__stm32_exti_isr(i32 noundef 10, i32 noundef 16, %struct.device* noundef %0) #24, !dbg !8438
  ret void, !dbg !8439
}

; Function Attrs: noinline nounwind optsize
define internal void @__stm32_exti_isr_0(%struct.device* nocapture noundef readonly %0) #1 !dbg !8440 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8442, metadata !DIExpression()), !dbg !8443
  tail call fastcc void @__stm32_exti_isr(i32 noundef 0, i32 noundef 1, %struct.device* noundef %0) #24, !dbg !8444
  ret void, !dbg !8445
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_exti_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8446 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8448, metadata !DIExpression()), !dbg !8449
  tail call fastcc void @__stm32_exti_connect_irqs() #24, !dbg !8450
  ret i32 0, !dbg !8451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @__stm32_exti_connect_irqs() unnamed_addr #1 !dbg !757 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !761, metadata !DIExpression()), !dbg !8452
  tail call void @z_arm_irq_priority_set(i32 noundef 6, i32 noundef 0, i32 noundef 0) #25, !dbg !8453
  tail call void @z_arm_irq_priority_set(i32 noundef 7, i32 noundef 0, i32 noundef 0) #25, !dbg !8455
  tail call void @z_arm_irq_priority_set(i32 noundef 8, i32 noundef 0, i32 noundef 0) #25, !dbg !8457
  tail call void @z_arm_irq_priority_set(i32 noundef 9, i32 noundef 0, i32 noundef 0) #25, !dbg !8459
  tail call void @z_arm_irq_priority_set(i32 noundef 10, i32 noundef 0, i32 noundef 0) #25, !dbg !8461
  tail call void @z_arm_irq_priority_set(i32 noundef 23, i32 noundef 0, i32 noundef 0) #25, !dbg !8463
  tail call void @z_arm_irq_priority_set(i32 noundef 40, i32 noundef 0, i32 noundef 0) #25, !dbg !8465
  tail call void @z_arm_irq_priority_set(i32 noundef 1, i32 noundef 0, i32 noundef 0) #25, !dbg !8467
  tail call void @z_arm_irq_priority_set(i32 noundef 42, i32 noundef 0, i32 noundef 0) #25, !dbg !8469
  tail call void @z_arm_irq_priority_set(i32 noundef 2, i32 noundef 0, i32 noundef 0) #25, !dbg !8471
  tail call void @z_arm_irq_priority_set(i32 noundef 3, i32 noundef 0, i32 noundef 0) #25, !dbg !8473
  ret void, !dbg !8475
}

; Function Attrs: noinline nounwind optsize
define dso_local void @stm32_exti_enable(i32 noundef %0) local_unnamed_addr #1 !dbg !8476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8478, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.value(metadata i32 0, metadata !8479, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.value(metadata i32 undef, metadata !8479, metadata !DIExpression()), !dbg !8480
  %2 = lshr i32 6684671, %0, !dbg !8481
  %3 = and i32 %2, 1, !dbg !8481
  %4 = or i32 %3, %0, !dbg !8483
  %5 = icmp eq i32 %4, 0, !dbg !8483
  br i1 %5, label %6, label %7, !dbg !8483

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i32 0, i32 0), i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.95, i32 0, i32 0), i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #25, !dbg !8484
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2.96, i32 0, i32 0), i32 noundef 123) #25, !dbg !8484
  unreachable, !dbg !8484

7:                                                ; preds = %1
  %8 = getelementptr inbounds [23 x i32], [23 x i32]* @exti_irq_table, i32 0, i32 %0, !dbg !8489
  %9 = load i32, i32* %8, align 4, !dbg !8489
  call void @llvm.dbg.value(metadata i32 %9, metadata !8479, metadata !DIExpression()), !dbg !8480
  %10 = shl nuw i32 1, %0, !dbg !8490
  tail call fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %10) #24, !dbg !8491
  tail call void @arch_irq_enable(i32 noundef %9) #25, !dbg !8492
  ret void, !dbg !8493
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8494 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8496, metadata !DIExpression()), !dbg !8497
  %2 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8498
  %3 = or i32 %2, %0, !dbg !8498
  store volatile i32 %3, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8498
  ret void, !dbg !8499
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_disable(i32 noundef %0) local_unnamed_addr #14 !dbg !8500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8502, metadata !DIExpression()), !dbg !8503
  %2 = icmp slt i32 %0, 32, !dbg !8504
  br i1 %2, label %3, label %5, !dbg !8506

3:                                                ; preds = %1
  %4 = shl nuw i32 1, %0, !dbg !8507
  tail call fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %4) #24, !dbg !8509
  br label %5, !dbg !8510

5:                                                ; preds = %1, %3
  ret void, !dbg !8511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableIT_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8514, metadata !DIExpression()), !dbg !8515
  %2 = xor i32 %0, -1, !dbg !8516
  %3 = load volatile i32, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8516
  %4 = and i32 %3, %2, !dbg !8516
  store volatile i32 %4, i32* inttoptr (i32 1073822720 to i32*), align 1024, !dbg !8516
  ret void, !dbg !8517
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @stm32_exti_trigger(i32 noundef %0, i32 noundef %1) local_unnamed_addr #14 !dbg !8518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8522, metadata !DIExpression()), !dbg !8524
  call void @llvm.dbg.value(metadata i32 %1, metadata !8523, metadata !DIExpression()), !dbg !8524
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
  ], !dbg !8525

3:                                                ; preds = %2
  %4 = shl nuw i32 1, %0, !dbg !8526
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %4) #24, !dbg !8528
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %4) #24, !dbg !8529
  br label %11, !dbg !8530

5:                                                ; preds = %2
  %6 = shl nuw i32 1, %0, !dbg !8531
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %6) #24, !dbg !8532
  tail call fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %6) #24, !dbg !8533
  br label %11, !dbg !8534

7:                                                ; preds = %2
  %8 = shl nuw i32 1, %0, !dbg !8535
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %8) #24, !dbg !8536
  tail call fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %8) #24, !dbg !8537
  br label %11, !dbg !8538

9:                                                ; preds = %2
  %10 = shl nuw i32 1, %0, !dbg !8539
  tail call fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %10) #24, !dbg !8540
  tail call fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %10) #24, !dbg !8541
  br label %11, !dbg !8542

11:                                               ; preds = %2, %9, %7, %5, %3
  ret void, !dbg !8543
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8546, metadata !DIExpression()), !dbg !8547
  %2 = xor i32 %0, -1, !dbg !8548
  %3 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8548
  %4 = and i32 %3, %2, !dbg !8548
  store volatile i32 %4, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8548
  ret void, !dbg !8549
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_DisableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8550 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8552, metadata !DIExpression()), !dbg !8553
  %2 = xor i32 %0, -1, !dbg !8554
  %3 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8554
  %4 = and i32 %3, %2, !dbg !8554
  store volatile i32 %4, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8554
  ret void, !dbg !8555
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableRisingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8556 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8558, metadata !DIExpression()), !dbg !8559
  %2 = load volatile i32, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8560
  %3 = or i32 %2, %0, !dbg !8560
  store volatile i32 %3, i32* inttoptr (i32 1073822728 to i32*), align 8, !dbg !8560
  ret void, !dbg !8561
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_EXTI_EnableFallingTrig_0_31(i32 noundef %0) unnamed_addr #14 !dbg !8562 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8564, metadata !DIExpression()), !dbg !8565
  %2 = load volatile i32, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8566
  %3 = or i32 %2, %0, !dbg !8566
  store volatile i32 %3, i32* inttoptr (i32 1073822732 to i32*), align 4, !dbg !8566
  ret void, !dbg !8567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @stm32_exti_set_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #9 !dbg !8568 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8572, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !8573, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata i8* %2, metadata !8574, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8575, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8577, metadata !DIExpression()), !dbg !8578
  %4 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8579
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !8579
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !8581
  br i1 %6, label %7, label %9, !dbg !8582

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !8583
  %8 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8584
  store i8* %2, i8** %8, align 4, !dbg !8585
  br label %9, !dbg !8586

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -16, %3 ], !dbg !8578
  ret i32 %10, !dbg !8587
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @stm32_exti_unset_callback(i32 noundef %0) local_unnamed_addr #7 !dbg !8588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8590, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_35, metadata !8591, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.value(metadata %struct.stm32_exti_data* @exti_data, metadata !8592, metadata !DIExpression()), !dbg !8593
  %2 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 0, !dbg !8594
  store void (i32, i8*)* null, void (i32, i8*)** %2, align 4, !dbg !8595
  %3 = getelementptr inbounds %struct.stm32_exti_data, %struct.stm32_exti_data* @exti_data, i32 0, i32 0, i32 %0, i32 1, !dbg !8596
  store i8* null, i8** %3, align 4, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_on(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8599 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8601, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %1, metadata !8602, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.value(metadata i8* %1, metadata !8603, metadata !DIExpression()), !dbg !8606
  %3 = bitcast i8* %1 to i32*, !dbg !8607
  %4 = load i32, i32* %3, align 4, !dbg !8607
  %5 = add i32 %4, -169, !dbg !8607
  %6 = icmp ult i32 %5, -121, !dbg !8607
  br i1 %6, label %15, label %7, !dbg !8609

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8610
  %9 = inttoptr i32 %8 to i32*, !dbg !8611
  call void @llvm.dbg.value(metadata i32* %9, metadata !8604, metadata !DIExpression()), !dbg !8606
  %10 = load volatile i32, i32* %9, align 4, !dbg !8612
  call void @llvm.dbg.value(metadata i32 %10, metadata !8605, metadata !DIExpression()), !dbg !8606
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8613
  %12 = bitcast i8* %11 to i32*, !dbg !8613
  %13 = load i32, i32* %12, align 4, !dbg !8613
  %14 = or i32 %13, %10, !dbg !8614
  call void @llvm.dbg.value(metadata i32 %14, metadata !8605, metadata !DIExpression()), !dbg !8606
  store volatile i32 %14, i32* %9, align 4, !dbg !8615
  br label %15, !dbg !8616

15:                                               ; preds = %2, %7
  %16 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8606
  ret i32 %16, !dbg !8617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_off(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1) #14 !dbg !8618 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8620, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i8* %1, metadata !8621, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata i8* %1, metadata !8622, metadata !DIExpression()), !dbg !8625
  %3 = bitcast i8* %1 to i32*, !dbg !8626
  %4 = load i32, i32* %3, align 4, !dbg !8626
  %5 = add i32 %4, -169, !dbg !8626
  %6 = icmp ult i32 %5, -121, !dbg !8626
  br i1 %6, label %16, label %7, !dbg !8628

7:                                                ; preds = %2
  %8 = add nuw nsw i32 %4, 1073887232, !dbg !8629
  %9 = inttoptr i32 %8 to i32*, !dbg !8630
  call void @llvm.dbg.value(metadata i32* %9, metadata !8623, metadata !DIExpression()), !dbg !8625
  %10 = load volatile i32, i32* %9, align 4, !dbg !8631
  call void @llvm.dbg.value(metadata i32 %10, metadata !8624, metadata !DIExpression()), !dbg !8625
  %11 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8632
  %12 = bitcast i8* %11 to i32*, !dbg !8632
  %13 = load i32, i32* %12, align 4, !dbg !8632
  %14 = xor i32 %13, -1, !dbg !8633
  %15 = and i32 %10, %14, !dbg !8634
  call void @llvm.dbg.value(metadata i32 %15, metadata !8624, metadata !DIExpression()), !dbg !8625
  store volatile i32 %15, i32* %9, align 4, !dbg !8635
  br label %16, !dbg !8636

16:                                               ; preds = %2, %7
  %17 = phi i32 [ 0, %7 ], [ -134, %2 ], !dbg !8625
  ret i32 %17, !dbg !8637
}

; Function Attrs: noinline nounwind optsize
define internal i32 @stm32_clock_control_get_subsys_rate(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i32* nocapture noundef writeonly %2) #1 !dbg !8638 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8640, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i8* %1, metadata !8641, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i32* %2, metadata !8642, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i8* %1, metadata !8643, metadata !DIExpression()), !dbg !8648
  %4 = load i32, i32* @SystemCoreClock, align 4, !dbg !8649
  call void @llvm.dbg.value(metadata i32 %4, metadata !8644, metadata !DIExpression()), !dbg !8648
  %5 = tail call fastcc i32 @get_bus_clock(i32 noundef %4) #24, !dbg !8650
  call void @llvm.dbg.value(metadata i32 %5, metadata !8645, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i32 %5, metadata !8646, metadata !DIExpression()), !dbg !8648
  call void @llvm.dbg.value(metadata i32 %4, metadata !8647, metadata !DIExpression()), !dbg !8648
  %6 = bitcast i8* %1 to i32*, !dbg !8651
  %7 = load i32, i32* %6, align 4, !dbg !8651
  switch i32 %7, label %20 [
    i32 48, label %18
    i32 52, label %18
    i32 56, label %18
    i32 64, label %8
    i32 68, label %9
    i32 168, label %18
    i32 6, label %18
    i32 1, label %10
    i32 2, label %13
    i32 4, label %16
    i32 5, label %17
  ], !dbg !8652

8:                                                ; preds = %3
  br label %18, !dbg !8653

9:                                                ; preds = %3
  br label %18, !dbg !8655

10:                                               ; preds = %3
  %11 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8656
  %12 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %11, i32 noundef 2) #24, !dbg !8657
  br label %18, !dbg !8658

13:                                               ; preds = %3
  %14 = tail call i32 @get_pllsrc_frequency() #25, !dbg !8659
  %15 = tail call fastcc i32 @get_pll_div_frequency(i32 noundef %14, i32 noundef 8) #24, !dbg !8660
  br label %18, !dbg !8661

16:                                               ; preds = %3
  br label %18, !dbg !8662

17:                                               ; preds = %3
  br label %18, !dbg !8663

18:                                               ; preds = %3, %3, %3, %3, %3, %17, %16, %13, %10, %9, %8
  %19 = phi i32 [ %5, %8 ], [ %5, %9 ], [ %12, %10 ], [ %15, %13 ], [ 0, %16 ], [ 32000, %17 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ], [ %4, %3 ]
  store i32 %19, i32* %2, align 4, !dbg !8664
  br label %20, !dbg !8665

20:                                               ; preds = %18, %3
  %21 = phi i32 [ -134, %3 ], [ 0, %18 ], !dbg !8648
  ret i32 %21, !dbg !8665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @stm32_clock_control_configure(%struct.device* nocapture noundef readnone %0, i8* nocapture noundef readonly %1, i8* nocapture noundef readnone %2) #14 !dbg !8666 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8668, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %1, metadata !8669, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %2, metadata !8670, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.value(metadata i8* %1, metadata !8671, metadata !DIExpression()), !dbg !8676
  %4 = bitcast i8* %1 to i32*, !dbg !8677
  %5 = load i32, i32* %4, align 4, !dbg !8677
  %6 = tail call fastcc i32 @enabled_clock(i32 noundef %5) #24, !dbg !8678
  call void @llvm.dbg.value(metadata i32 %6, metadata !8675, metadata !DIExpression()), !dbg !8676
  %7 = icmp slt i32 %6, 0, !dbg !8679
  br i1 %7, label %22, label %8, !dbg !8681

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8671, metadata !DIExpression()), !dbg !8676
  %9 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !8682
  %10 = bitcast i8* %9 to i32*, !dbg !8682
  %11 = load i32, i32* %10, align 4, !dbg !8682
  %12 = lshr i32 %11, 16, !dbg !8682
  %13 = and i32 %12, 7, !dbg !8682
  %14 = lshr i32 %11, 8, !dbg !8683
  %15 = and i32 %14, 31, !dbg !8683
  %16 = shl i32 %13, %15, !dbg !8684
  call void @llvm.dbg.value(metadata i32 %16, metadata !8674, metadata !DIExpression()), !dbg !8676
  %17 = and i32 %11, 255, !dbg !8685
  %18 = or i32 %17, 1073887232, !dbg !8686
  %19 = inttoptr i32 %18 to i32*, !dbg !8687
  call void @llvm.dbg.value(metadata i32* %19, metadata !8672, metadata !DIExpression()), !dbg !8676
  %20 = load volatile i32, i32* %19, align 4, !dbg !8688
  call void @llvm.dbg.value(metadata i32 %20, metadata !8673, metadata !DIExpression()), !dbg !8676
  %21 = or i32 %16, %20, !dbg !8689
  call void @llvm.dbg.value(metadata i32 %21, metadata !8673, metadata !DIExpression()), !dbg !8676
  store volatile i32 %21, i32* %19, align 4, !dbg !8690
  br label %22, !dbg !8691

22:                                               ; preds = %3, %8
  %23 = phi i32 [ 0, %8 ], [ %6, %3 ], !dbg !8676
  ret i32 %23, !dbg !8692
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @enabled_clock(i32 noundef %0) unnamed_addr #3 !dbg !8693 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8697, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.value(metadata i32 0, metadata !8698, metadata !DIExpression()), !dbg !8699
  %2 = add i32 %0, -1, !dbg !8700
  %3 = icmp ult i32 %2, 6, !dbg !8700
  br i1 %3, label %4, label %7, !dbg !8700

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.enabled_clock, i32 0, i32 %2, !dbg !8700
  %6 = load i32, i32* %5, align 4, !dbg !8700
  call void @llvm.dbg.value(metadata i32 %6, metadata !8698, metadata !DIExpression()), !dbg !8699
  br label %7, !dbg !8701

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ -134, %1 ], !dbg !8699
  ret i32 %8, !dbg !8702
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_bus_clock(i32 noundef %0) unnamed_addr #3 !dbg !8703 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8707, metadata !DIExpression()), !dbg !8709
  call void @llvm.dbg.value(metadata i32 2, metadata !8708, metadata !DIExpression()), !dbg !8709
  %2 = lshr i32 %0, 1, !dbg !8710
  ret i32 %2, !dbg !8711
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @get_pll_div_frequency(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !8712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8716, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 8, metadata !8717, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 84, metadata !8718, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.value(metadata i32 %1, metadata !8719, metadata !DIExpression()), !dbg !8720
  %3 = mul i32 %0, 84, !dbg !8721
  %4 = shl nsw i32 %1, 3, !dbg !8722
  %5 = udiv i32 %3, %4, !dbg !8723
  ret i32 %5, !dbg !8724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @stm32_clock_control_init(%struct.device* nocapture readnone %0) #1 !dbg !8725 {
  call void @llvm.dbg.value(metadata %struct.device* undef, metadata !8727, metadata !DIExpression()), !dbg !8730
  tail call void @config_enable_default_clocks() #25, !dbg !8731
  %2 = tail call i32 @HAL_RCC_GetSysClockFreq() #25, !dbg !8732
  %3 = tail call fastcc i32 @LL_RCC_GetAHBPrescaler() #24, !dbg !8732
  %4 = lshr i32 %3, 4, !dbg !8732
  %5 = and i32 %4, 15, !dbg !8732
  %6 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %5, !dbg !8732
  %7 = load i8, i8* %6, align 1, !dbg !8732
  %8 = zext i8 %7 to i32, !dbg !8732
  %9 = lshr i32 %2, %8, !dbg !8732
  call void @llvm.dbg.value(metadata i32 %9, metadata !8728, metadata !DIExpression()), !dbg !8730
  call void @llvm.dbg.value(metadata !DIArgList(i32 84000000, i8 undef), metadata !8729, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_shra, DW_OP_stack_value)), !dbg !8730
  %10 = icmp ult i32 %9, 84000000, !dbg !8733
  br i1 %10, label %11, label %13, !dbg !8735

11:                                               ; preds = %1
  %12 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8736
  br label %13, !dbg !8738

13:                                               ; preds = %11, %1
  tail call fastcc void @set_up_fixed_clock_sources() #24, !dbg !8739
  tail call fastcc void @set_up_plls() #24, !dbg !8740
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8741
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 2) #24, !dbg !8744
  br label %14, !dbg !8745

14:                                               ; preds = %14, %13
  %15 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8746
  %16 = icmp eq i32 %15, 8, !dbg !8747
  br i1 %16, label %17, label %14, !dbg !8745, !llvm.loop !8748

17:                                               ; preds = %14
  %18 = icmp ugt i32 %9, 83999999, !dbg !8750
  br i1 %18, label %19, label %21, !dbg !8752

19:                                               ; preds = %17
  %20 = tail call i32 @LL_SetFlashLatency(i32 noundef 84000000) #25, !dbg !8753
  br label %21, !dbg !8755

21:                                               ; preds = %19, %17
  store i32 84000000, i32* @SystemCoreClock, align 4, !dbg !8756
  tail call fastcc void @LL_RCC_SetAPB1Prescaler() #24, !dbg !8757
  tail call fastcc void @LL_RCC_SetAPB2Prescaler() #24, !dbg !8758
  ret i32 0, !dbg !8759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetAHBPrescaler() unnamed_addr #15 !dbg !8760 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8762
  %2 = and i32 %1, 240, !dbg !8762
  ret i32 %2, !dbg !8763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @set_up_fixed_clock_sources() unnamed_addr #14 !dbg !8764 {
  tail call fastcc void @LL_RCC_HSE_DisableBypass() #24, !dbg !8765
  tail call fastcc void @LL_RCC_HSE_Enable() #24, !dbg !8770
  br label %1, !dbg !8771

1:                                                ; preds = %1, %0
  %2 = tail call fastcc i32 @LL_RCC_HSE_IsReady() #24, !dbg !8772
  %3 = icmp eq i32 %2, 1, !dbg !8773
  br i1 %3, label %4, label %1, !dbg !8771, !llvm.loop !8774

4:                                                ; preds = %1
  tail call fastcc void @LL_RCC_LSI_Enable() #24, !dbg !8776
  br label %5, !dbg !8779

5:                                                ; preds = %5, %4
  %6 = tail call fastcc i32 @LL_RCC_LSI_IsReady() #24, !dbg !8780
  %7 = icmp eq i32 %6, 1, !dbg !8781
  br i1 %7, label %8, label %5, !dbg !8779, !llvm.loop !8782

8:                                                ; preds = %5
  ret void, !dbg !8784
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @set_up_plls() unnamed_addr #1 !dbg !8785 {
  %1 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8786
  %2 = icmp eq i32 %1, 8, !dbg !8788
  br i1 %2, label %3, label %4, !dbg !8789

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_SetAHBPrescaler() #24, !dbg !8790
  tail call fastcc void @stm32_clock_switch_to_hsi() #24, !dbg !8792
  br label %4, !dbg !8793

4:                                                ; preds = %3, %0
  tail call fastcc void @LL_RCC_PLL_Disable() #24, !dbg !8794
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8795
  %6 = and i32 %5, -196609, !dbg !8795
  store volatile i32 %6, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8795
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8796
  %8 = and i32 %7, -251658241, !dbg !8796
  %9 = or i32 %8, 134217728, !dbg !8796
  store volatile i32 %9, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8796
  tail call void @config_pll_sysclock() #25, !dbg !8797
  tail call fastcc void @LL_RCC_PLL_Enable() #24, !dbg !8798
  br label %10, !dbg !8799

10:                                               ; preds = %10, %4
  %11 = tail call fastcc i32 @LL_RCC_PLL_IsReady() #24, !dbg !8800
  %12 = icmp eq i32 %11, 1, !dbg !8801
  br i1 %12, label %13, label %10, !dbg !8799, !llvm.loop !8802

13:                                               ; preds = %10
  ret void, !dbg !8804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler() unnamed_addr #14 !dbg !8805 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8807, metadata !DIExpression()), !dbg !8808
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8809
  %2 = and i32 %1, -241, !dbg !8809
  store volatile i32 %2, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8809
  ret void, !dbg !8810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource(i32 noundef %0) unnamed_addr #14 !dbg !8811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8813, metadata !DIExpression()), !dbg !8814
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8815
  %3 = and i32 %2, -4, !dbg !8815
  %4 = or i32 %3, %0, !dbg !8815
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8815
  ret void, !dbg !8816
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource() unnamed_addr #15 !dbg !8817 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8818
  %2 = and i32 %1, 12, !dbg !8818
  ret i32 %2, !dbg !8819
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler() unnamed_addr #14 !dbg !8820 {
  call void @llvm.dbg.value(metadata i32 4096, metadata !8822, metadata !DIExpression()), !dbg !8823
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8824
  %2 = and i32 %1, -7169, !dbg !8824
  %3 = or i32 %2, 4096, !dbg !8824
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8824
  ret void, !dbg !8825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler() unnamed_addr #14 !dbg !8826 {
  call void @llvm.dbg.value(metadata i32 32768, metadata !8828, metadata !DIExpression()), !dbg !8829
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8830
  %2 = and i32 %1, -57345, !dbg !8830
  %3 = or i32 %2, 32768, !dbg !8830
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !8830
  ret void, !dbg !8831
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @stm32_clock_switch_to_hsi() unnamed_addr #14 !dbg !8832 {
  %1 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8833
  %2 = icmp eq i32 %1, 1, !dbg !8835
  br i1 %2, label %7, label %3, !dbg !8836

3:                                                ; preds = %0
  tail call fastcc void @LL_RCC_HSI_Enable() #24, !dbg !8837
  br label %4, !dbg !8839

4:                                                ; preds = %4, %3
  %5 = tail call fastcc i32 @LL_RCC_HSI_IsReady() #24, !dbg !8840
  %6 = icmp eq i32 %5, 1, !dbg !8841
  br i1 %6, label %7, label %4, !dbg !8839, !llvm.loop !8842

7:                                                ; preds = %4, %0
  tail call fastcc void @LL_RCC_SetSysClkSource(i32 noundef 0) #24, !dbg !8844
  br label %8, !dbg !8845

8:                                                ; preds = %8, %7
  %9 = tail call fastcc i32 @LL_RCC_GetSysClkSource() #24, !dbg !8846
  %10 = icmp eq i32 %9, 0, !dbg !8847
  br i1 %10, label %11, label %8, !dbg !8845, !llvm.loop !8848

11:                                               ; preds = %8
  ret void, !dbg !8850
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Disable() unnamed_addr #14 !dbg !8851 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8852
  %2 = and i32 %1, -16777217, !dbg !8852
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8852
  ret void, !dbg !8853
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable() unnamed_addr #14 !dbg !8854 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8855
  %2 = or i32 %1, 16777216, !dbg !8855
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8855
  ret void, !dbg !8856
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady() unnamed_addr #15 !dbg !8857 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8858
  %2 = lshr i32 %1, 25, !dbg !8859
  %3 = and i32 %2, 1, !dbg !8859
  ret i32 %3, !dbg !8860
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady() unnamed_addr #15 !dbg !8861 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8862
  %2 = lshr i32 %1, 1, !dbg !8863
  %3 = and i32 %2, 1, !dbg !8863
  ret i32 %3, !dbg !8864
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable() unnamed_addr #14 !dbg !8865 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8866
  %2 = or i32 %1, 1, !dbg !8866
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8866
  ret void, !dbg !8867
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass() unnamed_addr #14 !dbg !8868 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8869
  %2 = and i32 %1, -262145, !dbg !8869
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8869
  ret void, !dbg !8870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable() unnamed_addr #14 !dbg !8871 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8872
  %2 = or i32 %1, 65536, !dbg !8872
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8872
  ret void, !dbg !8873
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady() unnamed_addr #15 !dbg !8874 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !8875
  %2 = lshr i32 %1, 17, !dbg !8876
  %3 = and i32 %2, 1, !dbg !8876
  ret i32 %3, !dbg !8877
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_LSI_Enable() unnamed_addr #14 !dbg !8878 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8879
  %2 = or i32 %1, 1, !dbg !8879
  store volatile i32 %2, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8879
  ret void, !dbg !8880
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_LSI_IsReady() unnamed_addr #15 !dbg !8881 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !8882
  %2 = lshr i32 %1, 1, !dbg !8883
  %3 = and i32 %2, 1, !dbg !8883
  ret i32 %3, !dbg !8884
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_pllsrc_frequency() local_unnamed_addr #3 !dbg !8885 {
  ret i32 16000000, !dbg !8887
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @config_pll_sysclock() local_unnamed_addr #14 !dbg !8891 {
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS() #24, !dbg !8892
  ret void, !dbg !8893
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS() unnamed_addr #14 !dbg !8894 {
  call void @llvm.dbg.value(metadata i32 4194304, metadata !8898, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 8, metadata !8899, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 84, metadata !8900, metadata !DIExpression()), !dbg !8902
  call void @llvm.dbg.value(metadata i32 0, metadata !8901, metadata !DIExpression()), !dbg !8902
  %1 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8903
  %2 = and i32 %1, -4227072, !dbg !8903
  %3 = or i32 %2, 4199688, !dbg !8903
  store volatile i32 %3, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8903
  %4 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8904
  %5 = and i32 %4, -196609, !dbg !8904
  store volatile i32 %5, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !8904
  ret void, !dbg !8905
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @config_enable_default_clocks() local_unnamed_addr #19 !dbg !8906 {
  tail call fastcc void @LL_APB1_GRP1_EnableClock() #24, !dbg !8907
  ret void, !dbg !8908
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_APB1_GRP1_EnableClock() unnamed_addr #19 !dbg !8909 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 268435456, metadata !8912, metadata !DIExpression()), !dbg !8914
  %2 = bitcast i32* %1 to i8*, !dbg !8915
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !8915
  call void @llvm.dbg.declare(metadata i32* %1, metadata !8913, metadata !DIExpression()), !dbg !8916
  %3 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8917
  %4 = or i32 %3, 268435456, !dbg !8917
  store volatile i32 %4, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8917
  %5 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !8918
  %6 = and i32 %5, 268435456, !dbg !8918
  store volatile i32 %6, i32* %1, align 4, !dbg !8919
  %7 = load volatile i32, i32* %1, align 4, !dbg !8920
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !8921
  ret void, !dbg !8921
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_console_init(%struct.device* nocapture noundef readnone %0) #1 !dbg !8922 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !8924, metadata !DIExpression()), !dbg !8925
  %2 = tail call fastcc zeroext i1 @device_is_ready() #24, !dbg !8926
  br i1 %2, label %3, label %4, !dbg !8928

3:                                                ; preds = %1
  tail call fastcc void @uart_console_hook_install() #24, !dbg !8929
  br label %4, !dbg !8930

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -19, %1 ], !dbg !8925
  ret i32 %5, !dbg !8931
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready() unnamed_addr #1 !dbg !8932 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8937, metadata !DIExpression()), !dbg !8938
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8939, !srcloc !8941
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready() #24, !dbg !8942
  ret i1 %1, !dbg !8943
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_console_hook_install() unnamed_addr #1 !dbg !8944 {
  tail call void @__stdout_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8945
  tail call void @__printk_hook_install(i32 (i32)* noundef nonnull @console_out) #25, !dbg !8946
  ret void, !dbg !8947
}

; Function Attrs: noinline nounwind optsize
define internal i32 @console_out(i32 noundef returned %0) #1 !dbg !8948 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8950, metadata !DIExpression()), !dbg !8951
  %2 = icmp eq i32 %0, 10, !dbg !8952
  br i1 %2, label %3, label %4, !dbg !8954

3:                                                ; preds = %1
  tail call fastcc void @uart_poll_out(i8 noundef zeroext 13) #24, !dbg !8955
  br label %4, !dbg !8957

4:                                                ; preds = %3, %1
  %5 = trunc i32 %0 to i8, !dbg !8958
  tail call fastcc void @uart_poll_out(i8 noundef zeroext %5) #24, !dbg !8959
  ret i32 %0, !dbg !8960
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8961 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8964, metadata !DIExpression()), !dbg !8966
  call void @llvm.dbg.value(metadata i8 %0, metadata !8965, metadata !DIExpression()), !dbg !8966
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !8967, !srcloc !8969
  tail call fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) #24, !dbg !8970
  ret void, !dbg !8971
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_impl_uart_poll_out(i8 noundef zeroext %0) unnamed_addr #1 !dbg !8972 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8974, metadata !DIExpression()), !dbg !8977
  call void @llvm.dbg.value(metadata i8 %0, metadata !8975, metadata !DIExpression()), !dbg !8977
  %2 = load %struct.uart_driver_api*, %struct.uart_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_44, i32 0, i32 2) to %struct.uart_driver_api**), align 4, !dbg !8978
  call void @llvm.dbg.value(metadata %struct.uart_driver_api* %2, metadata !8976, metadata !DIExpression()), !dbg !8977
  %3 = getelementptr inbounds %struct.uart_driver_api, %struct.uart_driver_api* %2, i32 0, i32 1, !dbg !8979
  %4 = load void (%struct.device*, i8)*, void (%struct.device*, i8)** %3, align 4, !dbg !8979
  tail call void %4(%struct.device* noundef nonnull @__device_dts_ord_44, i8 noundef zeroext %0) #25, !dbg !8980
  ret void, !dbg !8981
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready() unnamed_addr #1 !dbg !8982 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_44, metadata !8984, metadata !DIExpression()), !dbg !8985
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_44) #25, !dbg !8986
  ret i1 %1, !dbg !8987
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @uart_register_input(%struct.k_fifo* nocapture noundef %0, %struct.k_fifo* nocapture noundef %1, i8 (i8*, i8)* nocapture noundef %2) local_unnamed_addr #3 !dbg !8988 {
  call void @llvm.dbg.value(metadata %struct.k_fifo* %0, metadata !9037, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata %struct.k_fifo* %1, metadata !9038, metadata !DIExpression()), !dbg !9040
  call void @llvm.dbg.value(metadata i8 (i8*, i8)* %2, metadata !9039, metadata !DIExpression()), !dbg !9040
  ret void, !dbg !9041
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_config(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) #1 !dbg !9042 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9044, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata i8 %1, metadata !9045, metadata !DIExpression()), !dbg !9049
  call void @llvm.dbg.value(metadata i32 %2, metadata !9046, metadata !DIExpression()), !dbg !9049
  %5 = bitcast i32* %4 to i8*, !dbg !9050
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9050
  call void @llvm.dbg.value(metadata i32* %4, metadata !9048, metadata !DIExpression(DW_OP_deref)), !dbg !9049
  %6 = call fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %2, i32* noundef nonnull %4) #24, !dbg !9051
  call void @llvm.dbg.value(metadata i32 %6, metadata !9047, metadata !DIExpression()), !dbg !9049
  %7 = icmp eq i32 %6, 0, !dbg !9052
  br i1 %7, label %8, label %31, !dbg !9054

8:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 0, metadata !9047, metadata !DIExpression()), !dbg !9049
  %9 = and i32 %2, 131072, !dbg !9055
  %10 = icmp eq i32 %9, 0, !dbg !9057
  br i1 %10, label %28, label %11, !dbg !9058

11:                                               ; preds = %8
  %12 = and i32 %2, 524288, !dbg !9059
  %13 = icmp eq i32 %12, 0, !dbg !9062
  br i1 %13, label %18, label %14, !dbg !9063

14:                                               ; preds = %11
  %15 = zext i8 %1 to i32, !dbg !9064
  %16 = shl nuw i32 1, %15, !dbg !9064
  %17 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %16) #24, !dbg !9066
  br label %25, !dbg !9067

18:                                               ; preds = %11
  %19 = and i32 %2, 262144, !dbg !9068
  %20 = icmp eq i32 %19, 0, !dbg !9070
  %21 = zext i8 %1 to i32, !dbg !9049
  br i1 %20, label %25, label %22, !dbg !9071

22:                                               ; preds = %18
  %23 = shl nuw i32 1, %21, !dbg !9072
  %24 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %23) #24, !dbg !9074
  br label %25, !dbg !9075

25:                                               ; preds = %18, %14, %22
  %26 = phi i32 [ %15, %14 ], [ %21, %22 ], [ %21, %18 ], !dbg !9076
  %27 = load i32, i32* %4, align 4, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %30, metadata !9048, metadata !DIExpression()), !dbg !9049
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %26, i32 noundef %27, i32 noundef 0) #24, !dbg !9078
  br label %31, !dbg !9079

28:                                               ; preds = %8
  %29 = zext i8 %1 to i32, !dbg !9076
  %30 = load i32, i32* %4, align 4, !dbg !9077
  call void @llvm.dbg.value(metadata i32 %30, metadata !9048, metadata !DIExpression()), !dbg !9049
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %29, i32 noundef %30, i32 noundef 0) #24, !dbg !9078
  call void @llvm.dbg.value(metadata i32 0, metadata !9047, metadata !DIExpression()), !dbg !9049
  br label %31

31:                                               ; preds = %25, %28, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !9080
  ret i32 %6, !dbg !9080
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal i32 @gpio_stm32_port_get_raw(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) #15 !dbg !9081 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9085, metadata !DIExpression()), !dbg !9090
  call void @llvm.dbg.value(metadata i32* %1, metadata !9086, metadata !DIExpression()), !dbg !9090
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9091
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9091
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9091
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9087, metadata !DIExpression()), !dbg !9090
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9092
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9092
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9092
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9089, metadata !DIExpression()), !dbg !9090
  %9 = tail call fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %8) #24, !dbg !9093
  store i32 %9, i32* %1, align 4, !dbg !9094
  ret i32 0, !dbg !9095
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_masked_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2) #14 !dbg !9096 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9098, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %1, metadata !9099, metadata !DIExpression()), !dbg !9104
  call void @llvm.dbg.value(metadata i32 %2, metadata !9100, metadata !DIExpression()), !dbg !9104
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9105
  %5 = bitcast i8** %4 to %struct.gpio_stm32_config**, !dbg !9105
  %6 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %5, align 4, !dbg !9105
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %6, metadata !9101, metadata !DIExpression()), !dbg !9104
  %7 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %6, i32 0, i32 1, !dbg !9106
  %8 = bitcast i32** %7 to %struct.GPIO_TypeDef**, !dbg !9106
  %9 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %8, align 4, !dbg !9106
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %9, metadata !9102, metadata !DIExpression()), !dbg !9104
  %10 = tail call fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %9) #24, !dbg !9107
  call void @llvm.dbg.value(metadata i32 %10, metadata !9103, metadata !DIExpression()), !dbg !9104
  %11 = xor i32 %1, -1, !dbg !9108
  %12 = and i32 %10, %11, !dbg !9109
  %13 = and i32 %2, %1, !dbg !9110
  %14 = or i32 %12, %13, !dbg !9111
  tail call fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %9, i32 noundef %14) #24, !dbg !9112
  ret i32 0, !dbg !9113
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_set_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9114 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9116, metadata !DIExpression()), !dbg !9120
  call void @llvm.dbg.value(metadata i32 %1, metadata !9117, metadata !DIExpression()), !dbg !9120
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9121
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9121
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9121
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9118, metadata !DIExpression()), !dbg !9120
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9122
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9122
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9122
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9119, metadata !DIExpression()), !dbg !9120
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 6, !dbg !9123
  store volatile i32 %1, i32* %9, align 4, !dbg !9123
  ret i32 0, !dbg !9124
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_clear_bits_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9125 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9127, metadata !DIExpression()), !dbg !9131
  call void @llvm.dbg.value(metadata i32 %1, metadata !9128, metadata !DIExpression()), !dbg !9131
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9132
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9132
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9132
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9129, metadata !DIExpression()), !dbg !9131
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9133
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9133
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9133
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9130, metadata !DIExpression()), !dbg !9131
  tail call fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %8, i32 noundef %1) #24, !dbg !9134
  ret i32 0, !dbg !9135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @gpio_stm32_port_toggle_bits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) #14 !dbg !9136 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9138, metadata !DIExpression()), !dbg !9142
  call void @llvm.dbg.value(metadata i32 %1, metadata !9139, metadata !DIExpression()), !dbg !9142
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9143
  %4 = bitcast i8** %3 to %struct.gpio_stm32_config**, !dbg !9143
  %5 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %4, align 4, !dbg !9143
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %5, metadata !9140, metadata !DIExpression()), !dbg !9142
  %6 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %5, i32 0, i32 1, !dbg !9144
  %7 = bitcast i32** %6 to %struct.GPIO_TypeDef**, !dbg !9144
  %8 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %7, align 4, !dbg !9144
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %8, metadata !9141, metadata !DIExpression()), !dbg !9142
  %9 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %8, i32 0, i32 5, !dbg !9145
  %10 = load volatile i32, i32* %9, align 4, !dbg !9145
  %11 = xor i32 %10, %1, !dbg !9145
  store volatile i32 %11, i32* %9, align 4, !dbg !9145
  ret i32 0, !dbg !9146
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_pin_interrupt_configure(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) #1 !dbg !9147 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9149, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i8 %1, metadata !9150, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i32 %2, metadata !9151, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i32 %3, metadata !9152, metadata !DIExpression()), !dbg !9159
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9160
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9160
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9160
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9153, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i8* undef, metadata !9154, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i32 0, metadata !9156, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.value(metadata i32 0, metadata !9157, metadata !DIExpression()), !dbg !9159
  switch i32 %2, label %15 [
    i32 2097152, label %8
    i32 4194304, label %29
  ], !dbg !9161

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !9162
  %10 = tail call fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %9) #24, !dbg !9166
  %11 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9167
  %12 = load i32, i32* %11, align 4, !dbg !9167
  %13 = icmp eq i32 %10, %12, !dbg !9168
  br i1 %13, label %14, label %29, !dbg !9169

14:                                               ; preds = %8
  tail call void @stm32_exti_disable(i32 noundef %9) #25, !dbg !9170
  tail call void @stm32_exti_unset_callback(i32 noundef %9) #25, !dbg !9172
  tail call void @stm32_exti_trigger(i32 noundef %9, i32 noundef 0) #25, !dbg !9173
  br label %29, !dbg !9174

15:                                               ; preds = %4
  %16 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9175
  %17 = load i8*, i8** %16, align 4, !dbg !9175
  call void @llvm.dbg.value(metadata i8* %17, metadata !9154, metadata !DIExpression()), !dbg !9159
  %18 = zext i8 %1 to i32, !dbg !9176
  %19 = tail call i32 @stm32_exti_set_callback(i32 noundef %18, void (i32, i8*)* noundef nonnull @gpio_stm32_isr, i8* noundef %17) #25, !dbg !9178
  %20 = icmp eq i32 %19, 0, !dbg !9179
  br i1 %20, label %21, label %29, !dbg !9180

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 2, !dbg !9181
  %23 = load i32, i32* %22, align 4, !dbg !9181
  tail call fastcc void @gpio_stm32_enable_int(i32 noundef %23, i32 noundef %18) #24, !dbg !9182
  switch i32 %3, label %27 [
    i32 33554432, label %24
    i32 67108864, label %25
    i32 100663296, label %26
  ], !dbg !9183

24:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 2, metadata !9156, metadata !DIExpression()), !dbg !9159
  br label %27, !dbg !9184

25:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 1, metadata !9156, metadata !DIExpression()), !dbg !9159
  br label %27, !dbg !9186

26:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 3, metadata !9156, metadata !DIExpression()), !dbg !9159
  br label %27, !dbg !9187

27:                                               ; preds = %21, %26, %25, %24
  %28 = phi i32 [ 0, %21 ], [ 3, %26 ], [ 1, %25 ], [ 2, %24 ], !dbg !9159
  call void @llvm.dbg.value(metadata i32 %28, metadata !9156, metadata !DIExpression()), !dbg !9159
  tail call void @stm32_exti_trigger(i32 noundef %18, i32 noundef %28) #25, !dbg !9188
  tail call void @stm32_exti_enable(i32 noundef %18) #25, !dbg !9189
  br label %29, !dbg !9189

29:                                               ; preds = %15, %4, %8, %14, %27
  %30 = phi i32 [ 0, %14 ], [ 0, %8 ], [ 0, %27 ], [ -134, %4 ], [ -16, %15 ], !dbg !9159
  call void @llvm.dbg.value(metadata i32 %30, metadata !9157, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.label(metadata !9158), !dbg !9190
  ret i32 %30, !dbg !9191
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_manage_callback(%struct.device* nocapture noundef readonly %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #1 !dbg !9192 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9194, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9195, metadata !DIExpression()), !dbg !9198
  call void @llvm.dbg.value(metadata i1 %2, metadata !9196, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9198
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9199
  %5 = bitcast i8** %4 to %struct.gpio_stm32_data**, !dbg !9199
  %6 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %5, align 4, !dbg !9199
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %6, metadata !9197, metadata !DIExpression()), !dbg !9198
  %7 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %6, i32 0, i32 2, !dbg !9200
  %8 = tail call fastcc i32 @gpio_manage_callback(%struct._slist* noundef nonnull %7, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) #24, !dbg !9201
  ret i32 %8, !dbg !9202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_manage_callback(%struct._slist* nocapture noundef %0, %struct.gpio_callback* noundef %1, i1 noundef zeroext %2) unnamed_addr #1 !dbg !9203 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9209, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %1, metadata !9210, metadata !DIExpression()), !dbg !9212
  call void @llvm.dbg.value(metadata i1 %2, metadata !9211, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9212
  %4 = icmp eq %struct.gpio_callback* %1, null, !dbg !9213
  br i1 %4, label %5, label %6, !dbg !9216

5:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34.108, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #25, !dbg !9217
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35.110, i32 0, i32 0)) #25, !dbg !9217
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 42) #25, !dbg !9217
  unreachable, !dbg !9217

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 1, !dbg !9219
  %8 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %7, align 4, !dbg !9219
  %9 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %8, null, !dbg !9219
  br i1 %9, label %10, label %11, !dbg !9222

10:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36.111, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #25, !dbg !9223
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #25, !dbg !9223
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 43) #25, !dbg !9223
  unreachable, !dbg !9223

11:                                               ; preds = %6
  %12 = tail call fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* noundef %0) #24, !dbg !9225
  br i1 %12, label %18, label %13, !dbg !9227

13:                                               ; preds = %11
  %14 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9228
  %15 = tail call fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* noundef %0, %struct._snode* noundef nonnull %14) #24, !dbg !9231
  %16 = or i1 %15, %2, !dbg !9232
  %17 = select i1 %16, i32 0, i32 -22, !dbg !9232
  br i1 %2, label %19, label %21, !dbg !9232

18:                                               ; preds = %11
  br i1 %2, label %19, label %21, !dbg !9233

19:                                               ; preds = %18, %13
  %20 = getelementptr inbounds %struct.gpio_callback, %struct.gpio_callback* %1, i32 0, i32 0, !dbg !9234
  tail call fastcc void @sys_slist_prepend(%struct._slist* noundef %0, %struct._snode* noundef nonnull %20) #24, !dbg !9237
  br label %21, !dbg !9238

21:                                               ; preds = %13, %19, %18
  %22 = phi i32 [ %17, %13 ], [ -22, %18 ], [ 0, %19 ], !dbg !9212
  ret i32 %22, !dbg !9239
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_slist_is_empty(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9240 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9244, metadata !DIExpression()), !dbg !9245
  %2 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9246
  %3 = icmp eq %struct._snode* %2, null, !dbg !9246
  ret i1 %3, !dbg !9246
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc zeroext i1 @sys_slist_find_and_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #13 !dbg !9247 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9251, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9252, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9253, metadata !DIExpression()), !dbg !9255
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9256
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9253, metadata !DIExpression()), !dbg !9255
  %4 = icmp eq %struct._snode* %3, null, !dbg !9258
  br i1 %4, label %15, label %5, !dbg !9256

5:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct._snode* %3, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* null, metadata !9253, metadata !DIExpression()), !dbg !9255
  %6 = icmp eq %struct._snode* %3, %1, !dbg !9260
  br i1 %6, label %9, label %11, !dbg !9263

7:                                                ; preds = %11
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9253, metadata !DIExpression()), !dbg !9255
  %8 = icmp eq %struct._snode* %13, %1, !dbg !9260
  br i1 %8, label %9, label %11, !dbg !9263, !llvm.loop !9264

9:                                                ; preds = %7, %5
  %10 = phi %struct._snode* [ null, %5 ], [ %12, %7 ]
  tail call fastcc void @sys_slist_remove(%struct._slist* noundef %0, %struct._snode* noundef %10, %struct._snode* noundef %1) #24, !dbg !9265
  br label %15, !dbg !9265

11:                                               ; preds = %5, %7
  %12 = phi %struct._snode* [ %13, %7 ], [ %3, %5 ]
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9254, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata %struct._snode* %12, metadata !9253, metadata !DIExpression()), !dbg !9255
  %13 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %12) #24, !dbg !9258
  call void @llvm.dbg.value(metadata %struct._snode* %13, metadata !9254, metadata !DIExpression()), !dbg !9255
  %14 = icmp eq %struct._snode* %13, null, !dbg !9258
  br i1 %14, label %15, label %7, !dbg !9256, !llvm.loop !9264

15:                                               ; preds = %11, %2, %9
  %16 = phi i1 [ true, %9 ], [ false, %2 ], [ false, %11 ]
  ret i1 %16, !dbg !9267
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_prepend(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1) unnamed_addr #9 !dbg !9268 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9272, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9273, metadata !DIExpression()), !dbg !9274
  %3 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9275
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %1, %struct._snode* noundef %3) #24, !dbg !9275
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %1) #24, !dbg !9275
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9276
  %5 = icmp eq %struct._snode* %4, null, !dbg !9276
  br i1 %5, label %6, label %8, !dbg !9275

6:                                                ; preds = %2
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9278
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %7) #24, !dbg !9278
  br label %8, !dbg !9278

8:                                                ; preds = %6, %2
  ret void, !dbg !9275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9280 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9284, metadata !DIExpression()), !dbg !9285
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9286
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9286
  ret %struct._snode* %3, !dbg !9287
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_snode_next_set(%struct._snode* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9288 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9292, metadata !DIExpression()), !dbg !9294
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9293, metadata !DIExpression()), !dbg !9294
  %3 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9295
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9296
  ret void, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_head_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9300, metadata !DIExpression()), !dbg !9302
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9301, metadata !DIExpression()), !dbg !9302
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 0, !dbg !9303
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9304
  ret void, !dbg !9305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9306 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9308, metadata !DIExpression()), !dbg !9309
  %2 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9310
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9310
  ret %struct._snode* %3, !dbg !9311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_slist_tail_set(%struct._slist* nocapture noundef writeonly %0, %struct._snode* noundef %1) unnamed_addr #7 !dbg !9312 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9314, metadata !DIExpression()), !dbg !9316
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9315, metadata !DIExpression()), !dbg !9316
  %3 = getelementptr inbounds %struct._slist, %struct._slist* %0, i32 0, i32 1, !dbg !9317
  store %struct._snode* %1, %struct._snode** %3, align 4, !dbg !9318
  ret void, !dbg !9319
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_slist_remove(%struct._slist* nocapture noundef %0, %struct._snode* noundef %1, %struct._snode* noundef %2) unnamed_addr #9 !dbg !9320 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9324, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata %struct._snode* %1, metadata !9325, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.value(metadata %struct._snode* %2, metadata !9326, metadata !DIExpression()), !dbg !9327
  %4 = icmp eq %struct._snode* %1, null, !dbg !9328
  %5 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %2) #24, !dbg !9330
  br i1 %4, label %6, label %11, !dbg !9331

6:                                                ; preds = %3
  tail call fastcc void @z_slist_head_set(%struct._slist* noundef %0, %struct._snode* noundef %5) #24, !dbg !9332
  %7 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9334
  %8 = icmp eq %struct._snode* %7, %2, !dbg !9334
  br i1 %8, label %9, label %15, !dbg !9332

9:                                                ; preds = %6
  %10 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9336
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef %10) #24, !dbg !9336
  br label %15, !dbg !9336

11:                                               ; preds = %3
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef nonnull %1, %struct._snode* noundef %5) #24, !dbg !9338
  %12 = tail call fastcc %struct._snode* @sys_slist_peek_tail(%struct._slist* noundef %0) #24, !dbg !9340
  %13 = icmp eq %struct._snode* %12, %2, !dbg !9340
  br i1 %13, label %14, label %15, !dbg !9338

14:                                               ; preds = %11
  tail call fastcc void @z_slist_tail_set(%struct._slist* noundef %0, %struct._snode* noundef nonnull %1) #24, !dbg !9342
  br label %15, !dbg !9342

15:                                               ; preds = %11, %14, %6, %9
  tail call fastcc void @z_snode_next_set(%struct._snode* noundef %2, %struct._snode* noundef null) #24, !dbg !9331
  ret void, !dbg !9331
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef readonly %0) unnamed_addr #8 !dbg !9344 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9348, metadata !DIExpression()), !dbg !9349
  %2 = icmp eq %struct._snode* %0, null, !dbg !9350
  br i1 %2, label %5, label %3, !dbg !9350

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* noundef nonnull %0) #24, !dbg !9350
  br label %5, !dbg !9350

5:                                                ; preds = %1, %3
  %6 = phi %struct._snode* [ %4, %3 ], [ null, %1 ], !dbg !9350
  ret %struct._snode* %6, !dbg !9350
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @sys_slist_peek_next_no_check(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9351 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9353, metadata !DIExpression()), !dbg !9354
  %2 = tail call fastcc %struct._snode* @z_snode_next_peek(%struct._snode* noundef %0) #24, !dbg !9355
  ret %struct._snode* %2, !dbg !9355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._snode* @z_snode_next_peek(%struct._snode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !9356 {
  call void @llvm.dbg.value(metadata %struct._snode* %0, metadata !9358, metadata !DIExpression()), !dbg !9359
  %2 = getelementptr inbounds %struct._snode, %struct._snode* %0, i32 0, i32 0, !dbg !9360
  %3 = load %struct._snode*, %struct._snode** %2, align 4, !dbg !9360
  ret %struct._snode* %3, !dbg !9361
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_get_exti_source(i32 noundef %0) unnamed_addr #1 !dbg !9362 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9364, metadata !DIExpression()), !dbg !9367
  %2 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) #24, !dbg !9368, !range !9369
  call void @llvm.dbg.value(metadata i32 %2, metadata !9365, metadata !DIExpression()), !dbg !9367
  %3 = tail call fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %2) #24, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %3, metadata !9366, metadata !DIExpression()), !dbg !9367
  ret i32 %3, !dbg !9371
}

; Function Attrs: noinline nounwind optsize
define internal void @gpio_stm32_isr(i32 noundef %0, i8* nocapture noundef readonly %1) #1 !dbg !9372 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9374, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %1, metadata !9375, metadata !DIExpression()), !dbg !9377
  call void @llvm.dbg.value(metadata i8* %1, metadata !9376, metadata !DIExpression()), !dbg !9377
  %3 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !9378
  %4 = bitcast i8* %3 to %struct._slist*, !dbg !9378
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !9379
  %6 = bitcast i8* %5 to %struct.device**, !dbg !9379
  %7 = load %struct.device*, %struct.device** %6, align 4, !dbg !9379
  %8 = shl nuw i32 1, %0, !dbg !9380
  tail call fastcc void @gpio_fire_callbacks(%struct._slist* noundef nonnull %4, %struct.device* noundef %7, i32 noundef %8) #24, !dbg !9381
  ret void, !dbg !9382
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_enable_int(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9383 {
  %3 = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %0, metadata !9387, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata i32 %1, metadata !9388, metadata !DIExpression()), !dbg !9393
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9389, metadata !DIExpression()), !dbg !9393
  %4 = bitcast i64* %3 to i8*, !dbg !9394
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9394
  call void @llvm.dbg.value(metadata i64 70368744177732, metadata !9391, metadata !DIExpression()), !dbg !9393
  store i64 70368744177732, i64* %3, align 8, !dbg !9395
  call void @llvm.dbg.value(metadata i64* %3, metadata !9391, metadata !DIExpression(DW_OP_deref)), !dbg !9393
  %5 = call fastcc i32 @clock_control_on(i8* noundef nonnull %4) #24, !dbg !9396
  call void @llvm.dbg.value(metadata i32 %5, metadata !9392, metadata !DIExpression()), !dbg !9393
  %6 = icmp eq i32 %5, 0, !dbg !9397
  br i1 %6, label %7, label %8, !dbg !9399

7:                                                ; preds = %2
  call fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) #24, !dbg !9400
  br label %8, !dbg !9401

8:                                                ; preds = %2, %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !9402
  ret void, !dbg !9402
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on(i8* noundef %0) unnamed_addr #1 !dbg !9403 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9405, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i8* %0, metadata !9406, metadata !DIExpression()), !dbg !9408
  %2 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** bitcast (i8** getelementptr inbounds (%struct.device, %struct.device* @__device_dts_ord_8, i32 0, i32 2) to %struct.clock_control_driver_api**), align 4, !dbg !9409
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %2, metadata !9407, metadata !DIExpression()), !dbg !9408
  %3 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %2, i32 0, i32 0, !dbg !9410
  %4 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %3, align 4, !dbg !9410
  %5 = tail call i32 %4(%struct.device* noundef nonnull @__device_dts_ord_8, i8* noundef %0) #25, !dbg !9411
  ret i32 %5, !dbg !9412
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_set_exti_source(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9413 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9415, metadata !DIExpression()), !dbg !9418
  call void @llvm.dbg.value(metadata i32 %1, metadata !9416, metadata !DIExpression()), !dbg !9418
  %3 = tail call fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %1) #24, !dbg !9419
  call void @llvm.dbg.value(metadata i32 %3, metadata !9417, metadata !DIExpression()), !dbg !9418
  tail call fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %3) #24, !dbg !9420
  ret void, !dbg !9421
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @gpio_stm32_pin_to_exti_line(i32 noundef %0) unnamed_addr #3 !dbg !9422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9426, metadata !DIExpression()), !dbg !9427
  %2 = sdiv i32 %0, 4, !dbg !9428
  %3 = mul i32 %2, 4
  %4 = sub i32 %0, %3
  %5 = shl nsw i32 %4, 2, !dbg !9429
  %6 = add nsw i32 %5, 16, !dbg !9430
  %7 = shl i32 15, %6, !dbg !9431
  %8 = or i32 %7, %2, !dbg !9432
  ret i32 %8, !dbg !9433
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_SYSCFG_SetEXTISource(i32 noundef %0, i32 noundef %1) unnamed_addr #1 !dbg !9434 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9438, metadata !DIExpression()), !dbg !9440
  call void @llvm.dbg.value(metadata i32 %1, metadata !9439, metadata !DIExpression()), !dbg !9440
  %3 = and i32 %1, 255, !dbg !9441
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %3, !dbg !9441
  %5 = load volatile i32, i32* %4, align 4, !dbg !9441
  %6 = lshr i32 %1, 16, !dbg !9441
  %7 = xor i32 %6, -1, !dbg !9441
  %8 = and i32 %5, %7, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %6, metadata !9442, metadata !DIExpression()) #23, !dbg !9446
  %9 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9448, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %9, metadata !9445, metadata !DIExpression()) #23, !dbg !9446
  call void @llvm.dbg.value(metadata i32 %9, metadata !9450, metadata !DIExpression()) #23, !dbg !9455
  %10 = tail call i32 @llvm.ctlz.i32(i32 %9, i1 false) #23, !dbg !9457, !range !7619
  %11 = shl i32 %0, %10, !dbg !9441
  %12 = or i32 %11, %8, !dbg !9441
  store volatile i32 %12, i32* %4, align 4, !dbg !9441
  ret void, !dbg !9458
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_fire_callbacks(%struct._slist* nocapture noundef readonly %0, %struct.device* noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9459 {
  call void @llvm.dbg.value(metadata %struct._slist* %0, metadata !9463, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.device* %1, metadata !9464, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata i32 %2, metadata !9465, metadata !DIExpression()), !dbg !9468
  %4 = tail call fastcc %struct._snode* @sys_slist_peek_head(%struct._slist* noundef %0) #24, !dbg !9469
  %5 = icmp eq %struct._snode* %4, null, !dbg !9469
  br i1 %5, label %24, label %6, !dbg !9469

6:                                                ; preds = %3, %22
  %7 = phi %struct._snode* [ %8, %22 ], [ %4, %3 ]
  %8 = tail call fastcc %struct._snode* @sys_slist_peek_next(%struct._snode* noundef nonnull %7) #24, !dbg !9471
  %9 = bitcast %struct._snode* %7 to %struct.gpio_callback*
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9467, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata %struct.gpio_callback* %9, metadata !9466, metadata !DIExpression()), !dbg !9468
  %10 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 2, !dbg !9472
  %11 = bitcast %struct._snode* %10 to i32*, !dbg !9472
  %12 = load i32, i32* %11, align 4, !dbg !9472
  %13 = and i32 %12, %2, !dbg !9476
  %14 = icmp eq i32 %13, 0, !dbg !9476
  br i1 %14, label %22, label %15, !dbg !9477

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct._snode, %struct._snode* %7, i32 1, !dbg !9478
  %17 = bitcast %struct._snode* %16 to void (%struct.device*, %struct.gpio_callback*, i32)**, !dbg !9478
  %18 = load void (%struct.device*, %struct.gpio_callback*, i32)*, void (%struct.device*, %struct.gpio_callback*, i32)** %17, align 4, !dbg !9478
  %19 = icmp eq void (%struct.device*, %struct.gpio_callback*, i32)* %18, null, !dbg !9478
  br i1 %19, label %20, label %21, !dbg !9482

20:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8.107, i32 0, i32 0), i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31.113, i32 0, i32 0), i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #25, !dbg !9483
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33.112, i32 0, i32 0)) #25, !dbg !9483
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32.109, i32 0, i32 0), i32 noundef 77) #25, !dbg !9483
  unreachable, !dbg !9483

21:                                               ; preds = %15
  tail call void %18(%struct.device* noundef %1, %struct.gpio_callback* noundef nonnull %9, i32 noundef %13) #25, !dbg !9485
  br label %22, !dbg !9486

22:                                               ; preds = %6, %21
  call void @llvm.dbg.value(metadata %struct._snode* %8, metadata !9466, metadata !DIExpression()), !dbg !9468
  %23 = icmp eq %struct._snode* %8, null, !dbg !9487
  br i1 %23, label %24, label %6, !dbg !9487

24:                                               ; preds = %22, %3
  ret void, !dbg !9488
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LL_SYSCFG_GetEXTISource(i32 noundef %0) unnamed_addr #1 !dbg !9489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9491, metadata !DIExpression()), !dbg !9492
  %2 = and i32 %0, 255, !dbg !9493
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* inttoptr (i32 1073821704 to [4 x i32]*), i32 0, i32 %2, !dbg !9493
  %4 = load volatile i32, i32* %3, align 4, !dbg !9493
  %5 = lshr i32 %0, 16, !dbg !9493
  %6 = and i32 %4, %5, !dbg !9493
  call void @llvm.dbg.value(metadata i32 %5, metadata !9442, metadata !DIExpression()) #23, !dbg !9494
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %5) #28, !dbg !9496, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %7, metadata !9445, metadata !DIExpression()) #23, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %7, metadata !9450, metadata !DIExpression()) #23, !dbg !9497
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9499, !range !7619
  %9 = lshr i32 %6, %8, !dbg !9500
  ret i32 %9, !dbg !9501
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_ResetOutputPin(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9502 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9507, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.value(metadata i32 %1, metadata !9508, metadata !DIExpression()), !dbg !9509
  %3 = shl i32 %1, 16, !dbg !9510
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 6, !dbg !9510
  store volatile i32 %3, i32* %4, align 4, !dbg !9510
  ret void, !dbg !9511
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadOutputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9512 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9516, metadata !DIExpression()), !dbg !9517
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9518
  %3 = load volatile i32, i32* %2, align 4, !dbg !9518
  ret i32 %3, !dbg !9519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_WriteOutputPort(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !9520 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9522, metadata !DIExpression()), !dbg !9524
  call void @llvm.dbg.value(metadata i32 %1, metadata !9523, metadata !DIExpression()), !dbg !9524
  %3 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 5, !dbg !9525
  store volatile i32 %1, i32* %3, align 4, !dbg !9525
  ret void, !dbg !9526
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_GPIO_ReadInputPort(%struct.GPIO_TypeDef* noundef %0) unnamed_addr #15 !dbg !9527 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9529, metadata !DIExpression()), !dbg !9530
  %2 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 4, !dbg !9531
  %3 = load volatile i32, i32* %2, align 4, !dbg !9531
  ret i32 %3, !dbg !9532
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc i32 @gpio_stm32_flags_to_conf(i32 noundef %0, i32* nocapture noundef %1) unnamed_addr #9 !dbg !9533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9537, metadata !DIExpression()), !dbg !9539
  call void @llvm.dbg.value(metadata i32* %1, metadata !9538, metadata !DIExpression()), !dbg !9539
  %3 = and i32 %0, 131072, !dbg !9540
  %4 = icmp eq i32 %3, 0, !dbg !9542
  br i1 %4, label %22, label %5, !dbg !9543

5:                                                ; preds = %2
  store i32 16, i32* %1, align 4, !dbg !9544
  %6 = and i32 %0, 2, !dbg !9546
  %7 = icmp eq i32 %6, 0, !dbg !9548
  br i1 %7, label %11, label %8, !dbg !9549

8:                                                ; preds = %5
  %9 = and i32 %0, 4, !dbg !9550
  %10 = icmp eq i32 %9, 0, !dbg !9550
  br i1 %10, label %33, label %11, !dbg !9553

11:                                               ; preds = %5, %8
  %12 = phi i32 [ 80, %8 ], [ 16, %5 ], !dbg !9554
  store i32 %12, i32* %1, align 4, !dbg !9554
  %13 = and i32 %0, 16, !dbg !9555
  %14 = icmp eq i32 %13, 0, !dbg !9557
  br i1 %14, label %17, label %15, !dbg !9558

15:                                               ; preds = %11
  %16 = or i32 %12, 512, !dbg !9559
  br label %31, !dbg !9561

17:                                               ; preds = %11
  %18 = and i32 %0, 32, !dbg !9562
  %19 = icmp eq i32 %18, 0, !dbg !9564
  br i1 %19, label %33, label %20, !dbg !9565

20:                                               ; preds = %17
  %21 = or i32 %12, 1024, !dbg !9566
  br label %31, !dbg !9568

22:                                               ; preds = %2
  %23 = and i32 %0, 65536, !dbg !9569
  %24 = icmp eq i32 %23, 0, !dbg !9571
  br i1 %24, label %31, label %25, !dbg !9572

25:                                               ; preds = %22
  %26 = and i32 %0, 16, !dbg !9573
  %27 = icmp eq i32 %26, 0, !dbg !9576
  br i1 %27, label %28, label %31, !dbg !9577

28:                                               ; preds = %25
  %29 = shl i32 %0, 5
  %30 = and i32 %29, 1024
  br label %31

31:                                               ; preds = %22, %28, %25, %15, %20
  %32 = phi i32 [ %21, %20 ], [ %16, %15 ], [ 512, %25 ], [ %30, %28 ], [ 48, %22 ]
  store i32 %32, i32* %1, align 4, !dbg !9578
  br label %33, !dbg !9579

33:                                               ; preds = %31, %17, %8
  %34 = phi i32 [ -134, %8 ], [ 0, %17 ], [ 0, %31 ], !dbg !9539
  ret i32 %34, !dbg !9579
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gpio_stm32_configure_raw(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !9580 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9584, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %1, metadata !9585, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9586, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %3, metadata !9587, metadata !DIExpression()), !dbg !9595
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9596
  %6 = bitcast i8** %5 to %struct.gpio_stm32_config**, !dbg !9596
  %7 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %6, align 4, !dbg !9596
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %7, metadata !9588, metadata !DIExpression()), !dbg !9595
  %8 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %7, i32 0, i32 1, !dbg !9597
  %9 = bitcast i32** %8 to %struct.GPIO_TypeDef**, !dbg !9597
  %10 = load %struct.GPIO_TypeDef*, %struct.GPIO_TypeDef** %9, align 4, !dbg !9597
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %10, metadata !9589, metadata !DIExpression()), !dbg !9595
  %11 = tail call fastcc i32 @stm32_pinval_get(i32 noundef %1) #24, !dbg !9598
  call void @llvm.dbg.value(metadata i32 %11, metadata !9590, metadata !DIExpression()), !dbg !9595
  %12 = and i32 %2, 48, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %12, metadata !9591, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9592, metadata !DIExpression(DW_OP_constu, 64, DW_OP_and, DW_OP_stack_value)), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9593, metadata !DIExpression(DW_OP_constu, 384, DW_OP_and, DW_OP_stack_value)), !dbg !9595
  call void @llvm.dbg.value(metadata i32 %2, metadata !9594, metadata !DIExpression(DW_OP_constu, 1536, DW_OP_and, DW_OP_stack_value)), !dbg !9595
  %13 = lshr i32 %2, 6, !dbg !9600
  %14 = and i32 %13, 1, !dbg !9600
  tail call fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %14) #24, !dbg !9601
  %15 = lshr i32 %2, 7, !dbg !9602
  %16 = and i32 %15, 3, !dbg !9602
  tail call fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %16) #24, !dbg !9603
  %17 = lshr i32 %2, 9, !dbg !9604
  %18 = and i32 %17, 3, !dbg !9604
  tail call fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %18) #24, !dbg !9605
  %19 = icmp eq i32 %12, 32, !dbg !9606
  br i1 %19, label %20, label %24, !dbg !9608

20:                                               ; preds = %4
  %21 = icmp slt i32 %1, 8, !dbg !9609
  br i1 %21, label %22, label %23, !dbg !9612

22:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9613
  br label %24, !dbg !9615

23:                                               ; preds = %20
  tail call fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %3) #24, !dbg !9616
  br label %24

24:                                               ; preds = %22, %23, %4
  %25 = lshr exact i32 %12, 4, !dbg !9618
  tail call fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %10, i32 noundef %11, i32 noundef %25) #24, !dbg !9619
  ret void, !dbg !9620
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @stm32_pinval_get(i32 noundef %0) unnamed_addr #3 !dbg !9621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9623, metadata !DIExpression()), !dbg !9625
  %2 = shl nuw i32 1, %0, !dbg !9626
  call void @llvm.dbg.value(metadata i32 %2, metadata !9624, metadata !DIExpression()), !dbg !9625
  ret i32 %2, !dbg !9627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_GPIO_SetPinOutputType(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !9628 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9632, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %1, metadata !9633, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %2, metadata !9634, metadata !DIExpression()), !dbg !9635
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 1, !dbg !9636
  %5 = load volatile i32, i32* %4, align 4, !dbg !9636
  %6 = xor i32 %1, -1, !dbg !9636
  %7 = and i32 %5, %6, !dbg !9636
  %8 = mul i32 %2, %1, !dbg !9636
  %9 = or i32 %7, %8, !dbg !9636
  store volatile i32 %9, i32* %4, align 4, !dbg !9636
  ret void, !dbg !9637
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinSpeed(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9638 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9640, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i32 %1, metadata !9641, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.value(metadata i32 %2, metadata !9642, metadata !DIExpression()), !dbg !9643
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 2, !dbg !9644
  %5 = load volatile i32, i32* %4, align 4, !dbg !9644
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9645
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9647, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9645
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9648
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9650, !range !7619
  %8 = shl nuw nsw i32 %7, 1, !dbg !9644
  %9 = shl i32 3, %8, !dbg !9644
  %10 = xor i32 %9, -1, !dbg !9644
  %11 = and i32 %5, %10, !dbg !9644
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9651
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9653
  %12 = shl i32 %2, %8, !dbg !9644
  %13 = or i32 %11, %12, !dbg !9644
  store volatile i32 %13, i32* %4, align 4, !dbg !9644
  ret void, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinPull(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9656 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9658, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %1, metadata !9659, metadata !DIExpression()), !dbg !9661
  call void @llvm.dbg.value(metadata i32 %2, metadata !9660, metadata !DIExpression()), !dbg !9661
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 3, !dbg !9662
  %5 = load volatile i32, i32* %4, align 4, !dbg !9662
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9663
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9665, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9663
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9666
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9668, !range !7619
  %8 = shl nuw nsw i32 %7, 1, !dbg !9662
  %9 = shl i32 3, %8, !dbg !9662
  %10 = xor i32 %9, -1, !dbg !9662
  %11 = and i32 %5, %10, !dbg !9662
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9669
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9671
  %12 = shl i32 %2, %8, !dbg !9662
  %13 = or i32 %11, %12, !dbg !9662
  store volatile i32 %13, i32* %4, align 4, !dbg !9662
  ret void, !dbg !9673
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_0_7(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9674 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9676, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.value(metadata i32 %1, metadata !9677, metadata !DIExpression()), !dbg !9679
  call void @llvm.dbg.value(metadata i32 %2, metadata !9678, metadata !DIExpression()), !dbg !9679
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 0, !dbg !9680
  %5 = load volatile i32, i32* %4, align 4, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9681
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9683, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9681
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9684
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9686, !range !7619
  %8 = shl nuw nsw i32 %7, 2, !dbg !9680
  %9 = shl i32 15, %8, !dbg !9680
  %10 = xor i32 %9, -1, !dbg !9680
  %11 = and i32 %5, %10, !dbg !9680
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9689
  %12 = shl i32 %2, %8, !dbg !9680
  %13 = or i32 %11, %12, !dbg !9680
  store volatile i32 %13, i32* %4, align 4, !dbg !9680
  ret void, !dbg !9691
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetAFPin_8_15(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9692 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9694, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 %1, metadata !9695, metadata !DIExpression()), !dbg !9697
  call void @llvm.dbg.value(metadata i32 %2, metadata !9696, metadata !DIExpression()), !dbg !9697
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 8, i32 1, !dbg !9698
  %5 = load volatile i32, i32* %4, align 4, !dbg !9698
  %6 = lshr i32 %1, 8, !dbg !9698
  call void @llvm.dbg.value(metadata i32 %6, metadata !9442, metadata !DIExpression()) #23, !dbg !9699
  %7 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %6) #28, !dbg !9701, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %7, metadata !9445, metadata !DIExpression()) #23, !dbg !9699
  call void @llvm.dbg.value(metadata i32 %7, metadata !9450, metadata !DIExpression()) #23, !dbg !9702
  %8 = tail call i32 @llvm.ctlz.i32(i32 %7, i1 false) #23, !dbg !9704, !range !7619
  %9 = shl nuw nsw i32 %8, 2, !dbg !9698
  %10 = shl i32 15, %9, !dbg !9698
  %11 = xor i32 %10, -1, !dbg !9698
  %12 = and i32 %5, %11, !dbg !9698
  call void @llvm.dbg.value(metadata i32 %6, metadata !9442, metadata !DIExpression()) #23, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %7, metadata !9445, metadata !DIExpression()) #23, !dbg !9705
  call void @llvm.dbg.value(metadata i32 %7, metadata !9450, metadata !DIExpression()) #23, !dbg !9707
  %13 = shl i32 %2, %9, !dbg !9698
  %14 = or i32 %12, %13, !dbg !9698
  store volatile i32 %14, i32* %4, align 4, !dbg !9698
  ret void, !dbg !9709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_GPIO_SetPinMode(%struct.GPIO_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !9710 {
  call void @llvm.dbg.value(metadata %struct.GPIO_TypeDef* %0, metadata !9712, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %1, metadata !9713, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.value(metadata i32 %2, metadata !9714, metadata !DIExpression()), !dbg !9715
  %4 = getelementptr inbounds %struct.GPIO_TypeDef, %struct.GPIO_TypeDef* %0, i32 0, i32 0, !dbg !9716
  %5 = load volatile i32, i32* %4, align 4, !dbg !9716
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9717
  %6 = tail call i32 asm "rbit $0, $1", "=r,r"(i32 %1) #28, !dbg !9719, !srcloc !9449
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9717
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9720
  %7 = tail call i32 @llvm.ctlz.i32(i32 %6, i1 false) #23, !dbg !9722, !range !7619
  %8 = shl nuw nsw i32 %7, 1, !dbg !9716
  %9 = shl i32 3, %8, !dbg !9716
  %10 = xor i32 %9, -1, !dbg !9716
  %11 = and i32 %5, %10, !dbg !9716
  call void @llvm.dbg.value(metadata i32 %1, metadata !9442, metadata !DIExpression()) #23, !dbg !9723
  call void @llvm.dbg.value(metadata i32 %6, metadata !9445, metadata !DIExpression()) #23, !dbg !9723
  call void @llvm.dbg.value(metadata i32 %6, metadata !9450, metadata !DIExpression()) #23, !dbg !9725
  %12 = shl i32 %2, %8, !dbg !9716
  %13 = or i32 %11, %12, !dbg !9716
  store volatile i32 %13, i32* %4, align 4, !dbg !9716
  ret void, !dbg !9727
}

; Function Attrs: noinline nounwind optsize
define internal i32 @gpio_stm32_init(%struct.device* noundef %0) #1 !dbg !9728 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9730, metadata !DIExpression()), !dbg !9733
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9734
  %3 = bitcast i8** %2 to %struct.gpio_stm32_data**, !dbg !9734
  %4 = load %struct.gpio_stm32_data*, %struct.gpio_stm32_data** %3, align 4, !dbg !9734
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_data* %4, metadata !9731, metadata !DIExpression()), !dbg !9733
  %5 = getelementptr inbounds %struct.gpio_stm32_data, %struct.gpio_stm32_data* %4, i32 0, i32 1, !dbg !9735
  store %struct.device* %0, %struct.device** %5, align 4, !dbg !9736
  %6 = tail call fastcc zeroext i1 @device_is_ready.122() #24, !dbg !9737
  br i1 %6, label %7, label %11, !dbg !9739

7:                                                ; preds = %1
  %8 = tail call fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef nonnull %0) #24, !dbg !9740
  call void @llvm.dbg.value(metadata i32 %8, metadata !9732, metadata !DIExpression()), !dbg !9733
  %9 = icmp slt i32 %8, 0, !dbg !9741
  %10 = select i1 %9, i32 %8, i32 0, !dbg !9743
  br label %11, !dbg !9743

11:                                               ; preds = %7, %1
  %12 = phi i32 [ -19, %1 ], [ %10, %7 ], !dbg !9733
  ret i32 %12, !dbg !9744
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.122() unnamed_addr #1 !dbg !9745 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9749, metadata !DIExpression()), !dbg !9750
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !9751, !srcloc !9753
  %1 = tail call fastcc zeroext i1 @z_impl_device_is_ready.123() #24, !dbg !9754
  ret i1 %1, !dbg !9755
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @gpio_stm32_clock_request(%struct.device* noundef readonly %0) unnamed_addr #1 !dbg !9756 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9760, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata i8 1, metadata !9761, metadata !DIExpression()), !dbg !9765
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9766
  %3 = bitcast i8** %2 to %struct.gpio_stm32_config**, !dbg !9766
  %4 = load %struct.gpio_stm32_config*, %struct.gpio_stm32_config** %3, align 4, !dbg !9766
  call void @llvm.dbg.value(metadata %struct.gpio_stm32_config* %4, metadata !9762, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata i32 0, metadata !9763, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9764, metadata !DIExpression()), !dbg !9765
  %5 = getelementptr inbounds %struct.gpio_stm32_config, %struct.gpio_stm32_config* %4, i32 0, i32 3, !dbg !9767
  %6 = bitcast %struct._thread_arch* %5 to i8*, !dbg !9770
  %7 = tail call fastcc i32 @clock_control_on(i8* noundef nonnull %6) #24, !dbg !9771
  call void @llvm.dbg.value(metadata i32 %7, metadata !9763, metadata !DIExpression()), !dbg !9765
  ret i32 %7, !dbg !9772
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.123() unnamed_addr #1 !dbg !9773 {
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !9775, metadata !DIExpression()), !dbg !9776
  %1 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef nonnull @__device_dts_ord_8) #25, !dbg !9777
  ret i1 %1, !dbg !9778
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpio_stm32_configure(%struct.device* nocapture noundef readonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #1 !dbg !9779 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9783, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 %1, metadata !9784, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 %2, metadata !9785, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 %3, metadata !9786, metadata !DIExpression()), !dbg !9791
  call void @llvm.dbg.value(metadata i32 0, metadata !9787, metadata !DIExpression()), !dbg !9791
  tail call fastcc void @gpio_stm32_configure_raw(%struct.device* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) #24, !dbg !9792
  %5 = icmp eq i32 %3, 17, !dbg !9793
  br i1 %5, label %6, label %14, !dbg !9794

6:                                                ; preds = %4
  %7 = and i32 %2, 2048, !dbg !9795
  call void @llvm.dbg.value(metadata i32 %7, metadata !9788, metadata !DIExpression()), !dbg !9796
  %8 = icmp eq i32 %7, 0, !dbg !9797
  %9 = shl nuw i32 1, %1, !dbg !9799
  br i1 %8, label %12, label %10, !dbg !9800

10:                                               ; preds = %6
  %11 = tail call i32 @gpio_stm32_port_set_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9801
  br label %14, !dbg !9803

12:                                               ; preds = %6
  %13 = tail call i32 @gpio_stm32_port_clear_bits_raw(%struct.device* noundef %0, i32 noundef %9) #24, !dbg !9804
  br label %14, !dbg !9807

14:                                               ; preds = %10, %12, %4
  ret i32 0, !dbg !9808
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_poll_in(%struct.device* nocapture noundef readonly %0, i8* nocapture noundef writeonly %1) #19 !dbg !9809 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9811, metadata !DIExpression()), !dbg !9815
  call void @llvm.dbg.value(metadata i8* %1, metadata !9812, metadata !DIExpression()), !dbg !9815
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9816
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9816
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9816
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9813, metadata !DIExpression()), !dbg !9815
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9817
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9817
  %8 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %7) #24, !dbg !9819
  %9 = icmp eq i32 %8, 0, !dbg !9819
  br i1 %9, label %12, label %10, !dbg !9820

10:                                               ; preds = %2
  %11 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9821
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %11) #24, !dbg !9823
  br label %12, !dbg !9824

12:                                               ; preds = %10, %2
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9825
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9827
  %15 = icmp eq i32 %14, 0, !dbg !9827
  br i1 %15, label %19, label %16, !dbg !9828

16:                                               ; preds = %12
  %17 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9829
  %18 = tail call fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %17) #24, !dbg !9830
  store i8 %18, i8* %1, align 1, !dbg !9831
  br label %19, !dbg !9832

19:                                               ; preds = %12, %16
  %20 = phi i32 [ 0, %16 ], [ -1, %12 ], !dbg !9815
  ret i32 %20, !dbg !9833
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_stm32_poll_out(%struct.device* nocapture noundef readonly %0, i8 noundef zeroext %1) #1 !dbg !9834 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9836, metadata !DIExpression()), !dbg !9840
  call void @llvm.dbg.value(metadata i8 %1, metadata !9837, metadata !DIExpression()), !dbg !9840
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9841
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9841
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9841
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9838, metadata !DIExpression()), !dbg !9840
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  br label %7, !dbg !9842

7:                                                ; preds = %18, %2
  %8 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9843
  %9 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %8) #24, !dbg !9846
  %10 = icmp eq i32 %9, 0, !dbg !9846
  br i1 %10, label %18, label %11, !dbg !9847

11:                                               ; preds = %7
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !9848, !srcloc !9855
  call void @llvm.dbg.value(metadata i32 undef, metadata !9851, metadata !DIExpression()) #23, !dbg !9856
  call void @llvm.dbg.value(metadata i32 undef, metadata !9852, metadata !DIExpression()) #23, !dbg !9856
  call void @llvm.dbg.value(metadata i32 undef, metadata !9839, metadata !DIExpression()), !dbg !9840
  %13 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9857
  %14 = tail call fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %13) #24, !dbg !9859
  %15 = icmp eq i32 %14, 0, !dbg !9859
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !9848
  br i1 %15, label %17, label %19, !dbg !9860

17:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %16, metadata !9851, metadata !DIExpression()) #23, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %16, metadata !9839, metadata !DIExpression()), !dbg !9840
  call void @llvm.dbg.value(metadata i32 undef, metadata !9861, metadata !DIExpression()) #23, !dbg !9864
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !9866, !srcloc !9867
  br label %18, !dbg !9868

18:                                               ; preds = %17, %7
  br label %7, !dbg !9843, !llvm.loop !9869

19:                                               ; preds = %11
  %20 = extractvalue { i32, i32 } %12, 0, !dbg !9848
  %21 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !9871
  tail call fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %21, i8 noundef zeroext %1) #24, !dbg !9872
  call void @llvm.dbg.value(metadata i32 %20, metadata !9861, metadata !DIExpression()) #23, !dbg !9873
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !9875, !srcloc !9867
  ret void, !dbg !9876
}

; Function Attrs: nofree noinline nounwind optsize
define internal i32 @uart_stm32_err_check(%struct.device* nocapture noundef readonly %0) #19 !dbg !9877 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9879, metadata !DIExpression()), !dbg !9882
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9883
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !9883
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !9883
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !9880, metadata !DIExpression()), !dbg !9882
  call void @llvm.dbg.value(metadata i32 0, metadata !9881, metadata !DIExpression()), !dbg !9882
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !9884
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9884
  %7 = tail call fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %6) #24, !dbg !9886
  %8 = icmp ne i32 %7, 0, !dbg !9886
  %9 = zext i1 %8 to i32, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %9, metadata !9881, metadata !DIExpression()), !dbg !9882
  %10 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9888
  %11 = tail call fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %10) #24, !dbg !9890
  %12 = icmp eq i32 %11, 0, !dbg !9890
  %13 = or i32 %9, 2, !dbg !9891
  %14 = select i1 %12, i32 %9, i32 %13, !dbg !9891
  call void @llvm.dbg.value(metadata i32 %14, metadata !9881, metadata !DIExpression()), !dbg !9882
  %15 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9892
  %16 = tail call fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %15) #24, !dbg !9894
  %17 = icmp eq i32 %16, 0, !dbg !9894
  %18 = or i32 %14, 4, !dbg !9895
  %19 = select i1 %17, i32 %14, i32 %18, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %19, metadata !9881, metadata !DIExpression()), !dbg !9882
  %20 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9896
  %21 = tail call fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %20) #24, !dbg !9898
  %22 = icmp eq i32 %21, 0, !dbg !9898
  %23 = or i32 %19, 8, !dbg !9899
  %24 = select i1 %22, i32 %19, i32 %23, !dbg !9899
  call void @llvm.dbg.value(metadata i32 %24, metadata !9881, metadata !DIExpression()), !dbg !9882
  %25 = and i32 %24, 8, !dbg !9900
  %26 = icmp eq i32 %25, 0, !dbg !9900
  br i1 %26, label %29, label %27, !dbg !9902

27:                                               ; preds = %1
  %28 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9903
  tail call fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %28) #24, !dbg !9905
  br label %29, !dbg !9906

29:                                               ; preds = %27, %1
  %30 = and i32 %24, 1, !dbg !9907
  %31 = icmp eq i32 %30, 0, !dbg !9907
  br i1 %31, label %34, label %32, !dbg !9909

32:                                               ; preds = %29
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9910
  tail call fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %33) #24, !dbg !9912
  br label %34, !dbg !9913

34:                                               ; preds = %32, %29
  %35 = and i32 %24, 2, !dbg !9914
  %36 = icmp eq i32 %35, 0, !dbg !9914
  br i1 %36, label %39, label %37, !dbg !9916

37:                                               ; preds = %34
  %38 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9917
  tail call fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %38) #24, !dbg !9919
  br label %39, !dbg !9920

39:                                               ; preds = %37, %34
  %40 = and i32 %24, 4, !dbg !9921
  %41 = icmp eq i32 %40, 0, !dbg !9921
  br i1 %41, label %44, label %42, !dbg !9923

42:                                               ; preds = %39
  %43 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9924
  tail call fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %43) #24, !dbg !9926
  br label %44, !dbg !9927

44:                                               ; preds = %42, %39
  %45 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !9928
  tail call fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %45) #24, !dbg !9929
  ret i32 %24, !dbg !9930
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_configure(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef readonly %1) #1 !dbg !9931 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !9933, metadata !DIExpression()), !dbg !9942
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !9934, metadata !DIExpression()), !dbg !9942
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !9943
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !9943
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !9943
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !9935, metadata !DIExpression()), !dbg !9942
  %6 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !9944
  %7 = bitcast i8** %6 to %struct.uart_stm32_data**, !dbg !9944
  %8 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %7, align 4, !dbg !9944
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %8, metadata !9936, metadata !DIExpression()), !dbg !9942
  %9 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !9945
  %10 = load i8, i8* %9, align 4, !dbg !9945
  %11 = zext i8 %10 to i32, !dbg !9946
  %12 = tail call fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %11) #24, !dbg !9947
  call void @llvm.dbg.value(metadata i32 %12, metadata !9938, metadata !DIExpression()), !dbg !9942
  %13 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !9948
  %14 = load i8, i8* %13, align 1, !dbg !9948
  %15 = zext i8 %14 to i32, !dbg !9949
  %16 = tail call fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %15) #24, !dbg !9950
  call void @llvm.dbg.value(metadata i32 %16, metadata !9939, metadata !DIExpression()), !dbg !9942
  %17 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !9951
  %18 = load i8, i8* %17, align 2, !dbg !9951
  %19 = zext i8 %18 to i32, !dbg !9952
  %20 = tail call fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %19, i32 noundef %11) #24, !dbg !9953
  call void @llvm.dbg.value(metadata i32 %20, metadata !9940, metadata !DIExpression()), !dbg !9942
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !9954
  %22 = load i8, i8* %21, align 1, !dbg !9954
  %23 = zext i8 %22 to i32, !dbg !9955
  %24 = tail call fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %23) #24, !dbg !9956
  call void @llvm.dbg.value(metadata i32 %24, metadata !9941, metadata !DIExpression()), !dbg !9942
  switch i8 %10, label %25 [
    i8 3, label %69
    i8 4, label %69
    i8 0, label %27
  ], !dbg !9957

25:                                               ; preds = %2
  %26 = icmp eq i8 %18, 4, !dbg !9959
  br i1 %26, label %69, label %27, !dbg !9961

27:                                               ; preds = %2, %25
  switch i8 %14, label %28 [
    i8 0, label %69
    i8 2, label %69
  ], !dbg !9962

28:                                               ; preds = %27
  %29 = icmp ult i8 %18, 5, !dbg !9963
  br i1 %29, label %65, label %30, !dbg !9963

30:                                               ; preds = %65, %28
  %31 = icmp eq i8 %22, 0, !dbg !9965
  %32 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0
  %33 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %32, align 4, !dbg !9942
  br i1 %31, label %38, label %34, !dbg !9967

34:                                               ; preds = %30
  %35 = ptrtoint %struct.USART_TypeDef* %33 to i32, !dbg !9968
  switch i32 %35, label %69 [
    i32 1073811456, label %36
    i32 1073759232, label %36
    i32 1073760256, label %36
  ], !dbg !9968

36:                                               ; preds = %34, %34, %34
  %37 = icmp eq i8 %22, 1, !dbg !9971
  br i1 %37, label %38, label %69, !dbg !9972

38:                                               ; preds = %30, %36
  %39 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !9973
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %33) #24, !dbg !9974
  %40 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef nonnull %0) #24, !dbg !9975
  %41 = icmp eq i32 %12, %40, !dbg !9977
  br i1 %41, label %43, label %42, !dbg !9978

42:                                               ; preds = %38
  tail call fastcc void @uart_stm32_set_parity(%struct.device* noundef nonnull %0, i32 noundef %12) #24, !dbg !9979
  br label %43, !dbg !9981

43:                                               ; preds = %42, %38
  %44 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef nonnull %0) #24, !dbg !9982
  %45 = icmp eq i32 %16, %44, !dbg !9984
  br i1 %45, label %47, label %46, !dbg !9985

46:                                               ; preds = %43
  tail call fastcc void @uart_stm32_set_stopbits(%struct.device* noundef nonnull %0, i32 noundef %16) #24, !dbg !9986
  br label %47, !dbg !9988

47:                                               ; preds = %46, %43
  %48 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef nonnull %0) #24, !dbg !9989
  %49 = icmp eq i32 %20, %48, !dbg !9991
  br i1 %49, label %51, label %50, !dbg !9992

50:                                               ; preds = %47
  tail call fastcc void @uart_stm32_set_databits(%struct.device* noundef nonnull %0, i32 noundef %20) #24, !dbg !9993
  br label %51, !dbg !9995

51:                                               ; preds = %50, %47
  %52 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef nonnull %0) #24, !dbg !9996
  %53 = icmp eq i32 %24, %52, !dbg !9998
  br i1 %53, label %55, label %54, !dbg !9999

54:                                               ; preds = %51
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef %24) #24, !dbg !10000
  br label %55, !dbg !10002

55:                                               ; preds = %54, %51
  %56 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10003
  %57 = load i32, i32* %56, align 4, !dbg !10003
  %58 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %8, i32 0, i32 0, !dbg !10005
  %59 = load i32, i32* %58, align 4, !dbg !10005
  %60 = icmp eq i32 %57, %59, !dbg !10006
  br i1 %60, label %63, label %61, !dbg !10007

61:                                               ; preds = %55
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %57) #24, !dbg !10008
  %62 = load i32, i32* %56, align 4, !dbg !10010
  store i32 %62, i32* %58, align 4, !dbg !10011
  br label %63, !dbg !10012

63:                                               ; preds = %61, %55
  %64 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %39, align 4, !dbg !10013
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %64) #24, !dbg !10014
  br label %69, !dbg !10015

65:                                               ; preds = %28
  %66 = lshr i8 23, %18, !dbg !9963
  %67 = and i8 %66, 1, !dbg !9963
  %68 = icmp eq i8 %67, 0, !dbg !9963
  br i1 %68, label %30, label %69, !dbg !9963

69:                                               ; preds = %65, %36, %34, %27, %27, %25, %2, %2, %63
  %70 = phi i32 [ 0, %63 ], [ -134, %2 ], [ -134, %2 ], [ -134, %25 ], [ -134, %27 ], [ -134, %27 ], [ -134, %34 ], [ -134, %36 ], [ -134, %65 ], !dbg !9942
  ret i32 %70, !dbg !10016
}

; Function Attrs: mustprogress nofree noinline nounwind optsize willreturn
define internal i32 @uart_stm32_config_get(%struct.device* nocapture noundef readonly %0, %struct.uart_config* nocapture noundef writeonly %1) #20 !dbg !10017 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10019, metadata !DIExpression()), !dbg !10022
  call void @llvm.dbg.value(metadata %struct.uart_config* %1, metadata !10020, metadata !DIExpression()), !dbg !10022
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10023
  %4 = bitcast i8** %3 to %struct.uart_stm32_data**, !dbg !10023
  %5 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %4, align 4, !dbg !10023
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %5, metadata !10021, metadata !DIExpression()), !dbg !10022
  %6 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %5, i32 0, i32 0, !dbg !10024
  %7 = load i32, i32* %6, align 4, !dbg !10024
  %8 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 0, !dbg !10025
  store i32 %7, i32* %8, align 4, !dbg !10026
  %9 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10027, !range !10028
  %10 = tail call fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %9) #24, !dbg !10029
  %11 = trunc i32 %10 to i8, !dbg !10029
  %12 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 1, !dbg !10030
  store i8 %11, i8* %12, align 4, !dbg !10031
  %13 = tail call fastcc i32 @uart_stm32_get_stopbits(%struct.device* noundef %0) #24, !dbg !10032, !range !10033
  %14 = tail call fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %13) #24, !dbg !10034
  %15 = trunc i32 %14 to i8, !dbg !10034
  %16 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 2, !dbg !10035
  store i8 %15, i8* %16, align 1, !dbg !10036
  %17 = tail call fastcc i32 @uart_stm32_get_databits(%struct.device* noundef %0) #24, !dbg !10037
  %18 = tail call fastcc i32 @uart_stm32_get_parity(%struct.device* noundef %0) #24, !dbg !10038, !range !10028
  %19 = tail call fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %17, i32 noundef %18) #24, !dbg !10039
  %20 = trunc i32 %19 to i8, !dbg !10039
  %21 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 3, !dbg !10040
  store i8 %20, i8* %21, align 2, !dbg !10041
  %22 = tail call fastcc i32 @uart_stm32_get_hwctrl(%struct.device* noundef %0) #24, !dbg !10042, !range !10043
  %23 = tail call fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %22) #24, !dbg !10044
  %24 = trunc i32 %23 to i8, !dbg !10044
  %25 = getelementptr inbounds %struct.uart_config, %struct.uart_config* %1, i32 0, i32 4, !dbg !10045
  store i8 %24, i8* %25, align 1, !dbg !10046
  ret i32 0, !dbg !10047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_parity(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10048 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10052, metadata !DIExpression()), !dbg !10054
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10055
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10055
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10055
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10053, metadata !DIExpression()), !dbg !10054
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10056
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10056
  %7 = tail call fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %6) #24, !dbg !10057
  ret i32 %7, !dbg !10058
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_parity(i32 noundef %0) unnamed_addr #3 !dbg !10059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10063, metadata !DIExpression()), !dbg !10064
  %2 = icmp eq i32 %0, 1024, !dbg !10065
  %3 = select i1 %2, i32 2, i32 0, !dbg !10065
  %4 = icmp eq i32 %0, 1536, !dbg !10065
  %5 = select i1 %4, i32 1, i32 %3, !dbg !10065
  ret i32 %5, !dbg !10066
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_stopbits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10067 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10069, metadata !DIExpression()), !dbg !10071
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10072
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10072
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10072
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10070, metadata !DIExpression()), !dbg !10071
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10073
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10073
  %7 = tail call fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %6) #24, !dbg !10074
  ret i32 %7, !dbg !10075
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_stopbits(i32 noundef %0) unnamed_addr #11 !dbg !10076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10080, metadata !DIExpression()), !dbg !10081
  %2 = tail call i32 @llvm.fshl.i32(i32 %0, i32 %0, i32 20), !dbg !10082
  %3 = icmp ult i32 %2, 4, !dbg !10082
  br i1 %3, label %4, label %7, !dbg !10082

4:                                                ; preds = %1
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.uart_stm32_ll2cfg_stopbits, i32 0, i32 %2, !dbg !10082
  %6 = load i32, i32* %5, align 4, !dbg !10082
  br label %7, !dbg !10082

7:                                                ; preds = %1, %4
  %8 = phi i32 [ %6, %4 ], [ 3, %1 ], !dbg !10083
  ret i32 %8, !dbg !10085
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_databits(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10086 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10088, metadata !DIExpression()), !dbg !10090
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10091
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10091
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10091
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10089, metadata !DIExpression()), !dbg !10090
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10092
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10092
  %7 = tail call fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %6) #24, !dbg !10093
  ret i32 %7, !dbg !10094
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10095 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10099, metadata !DIExpression()), !dbg !10101
  call void @llvm.dbg.value(metadata i32 %1, metadata !10100, metadata !DIExpression()), !dbg !10101
  %3 = icmp eq i32 %0, 4096, !dbg !10102
  %4 = icmp eq i32 %1, 0, !dbg !10102
  %5 = select i1 %4, i32 4, i32 3, !dbg !10102
  %6 = select i1 %4, i32 3, i32 2, !dbg !10102
  %7 = select i1 %3, i32 %5, i32 %6, !dbg !10102
  ret i32 %7, !dbg !10103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @uart_stm32_get_hwctrl(%struct.device* nocapture noundef readonly %0) unnamed_addr #15 !dbg !10104 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10106, metadata !DIExpression()), !dbg !10108
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10109
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10109
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10109
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10107, metadata !DIExpression()), !dbg !10108
  %5 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10110
  %6 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %5, align 4, !dbg !10110
  %7 = tail call fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %6) #24, !dbg !10111
  ret i32 %7, !dbg !10112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_ll2cfg_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10117, metadata !DIExpression()), !dbg !10118
  %2 = icmp eq i32 %0, 768, !dbg !10119
  %3 = zext i1 %2 to i32, !dbg !10118
  ret i32 %3, !dbg !10121
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetHWFlowCtrl(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10122 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10127, metadata !DIExpression()), !dbg !10128
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10129
  %3 = load volatile i32, i32* %2, align 4, !dbg !10129
  %4 = and i32 %3, 768, !dbg !10129
  ret i32 %4, !dbg !10130
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetDataWidth(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10131 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10133, metadata !DIExpression()), !dbg !10134
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10135
  %3 = load volatile i32, i32* %2, align 4, !dbg !10135
  %4 = and i32 %3, 4096, !dbg !10135
  ret i32 %4, !dbg !10136
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #2

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetStopBitsLength(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10137 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10139, metadata !DIExpression()), !dbg !10140
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10141
  %3 = load volatile i32, i32* %2, align 4, !dbg !10141
  %4 = and i32 %3, 12288, !dbg !10141
  ret i32 %4, !dbg !10142
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_GetParity(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10143 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10145, metadata !DIExpression()), !dbg !10146
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10147
  %3 = load volatile i32, i32* %2, align 4, !dbg !10147
  %4 = and i32 %3, 1536, !dbg !10147
  ret i32 %4, !dbg !10148
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_parity(i32 noundef %0) unnamed_addr #3 !dbg !10149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10153, metadata !DIExpression()), !dbg !10154
  %2 = icmp eq i32 %0, 2, !dbg !10155
  %3 = select i1 %2, i32 1024, i32 0, !dbg !10155
  %4 = icmp eq i32 %0, 1, !dbg !10155
  %5 = select i1 %4, i32 1536, i32 %3, !dbg !10155
  ret i32 %5, !dbg !10156
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_stopbits(i32 noundef %0) unnamed_addr #3 !dbg !10157 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10161, metadata !DIExpression()), !dbg !10162
  %2 = icmp ult i32 %0, 3, !dbg !10163
  br i1 %2, label %3, label %6, !dbg !10163

3:                                                ; preds = %1
  %4 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_cfg2ll_stopbits, i32 0, i32 %0, !dbg !10163
  %5 = load i32, i32* %4, align 4, !dbg !10163
  br label %6, !dbg !10163

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ 8192, %1 ], !dbg !10164
  ret i32 %7, !dbg !10166
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_databits(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !10167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10171, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.value(metadata i32 %1, metadata !10172, metadata !DIExpression()), !dbg !10173
  %3 = icmp eq i32 %0, 4, !dbg !10174
  %4 = icmp eq i32 %1, 0, !dbg !10174
  %5 = select i1 %4, i32 0, i32 4096, !dbg !10174
  %6 = select i1 %3, i32 4096, i32 %5, !dbg !10174
  ret i32 %6, !dbg !10175
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @uart_stm32_cfg2ll_hwctrl(i32 noundef %0) unnamed_addr #3 !dbg !10176 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10180, metadata !DIExpression()), !dbg !10181
  %2 = icmp eq i32 %0, 1, !dbg !10182
  %3 = select i1 %2, i32 768, i32 0, !dbg !10181
  ret i32 %3, !dbg !10184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10185 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10189, metadata !DIExpression()), !dbg !10190
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10191
  %3 = load volatile i32, i32* %2, align 4, !dbg !10191
  %4 = and i32 %3, -8193, !dbg !10191
  store volatile i32 %4, i32* %2, align 4, !dbg !10191
  ret void, !dbg !10192
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_parity(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10193 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10197, metadata !DIExpression()), !dbg !10200
  call void @llvm.dbg.value(metadata i32 %1, metadata !10198, metadata !DIExpression()), !dbg !10200
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10201
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10201
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10201
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10199, metadata !DIExpression()), !dbg !10200
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10202
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10202
  tail call fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10203
  ret void, !dbg !10204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_stopbits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10205 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10207, metadata !DIExpression()), !dbg !10210
  call void @llvm.dbg.value(metadata i32 %1, metadata !10208, metadata !DIExpression()), !dbg !10210
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10211
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10211
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10211
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10209, metadata !DIExpression()), !dbg !10210
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10212
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10212
  tail call fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10213
  ret void, !dbg !10214
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_databits(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10215 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10217, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata i32 %1, metadata !10218, metadata !DIExpression()), !dbg !10220
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10221
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10221
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10221
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10219, metadata !DIExpression()), !dbg !10220
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10222
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10222
  tail call fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10223
  ret void, !dbg !10224
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @uart_stm32_set_hwctrl(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #14 !dbg !10225 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10227, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %1, metadata !10228, metadata !DIExpression()), !dbg !10230
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10231
  %4 = bitcast i8** %3 to %struct.uart_stm32_config**, !dbg !10231
  %5 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %4, align 4, !dbg !10231
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %5, metadata !10229, metadata !DIExpression()), !dbg !10230
  %6 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %5, i32 0, i32 0, !dbg !10232
  %7 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %6, align 4, !dbg !10232
  tail call fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %7, i32 noundef %1) #24, !dbg !10233
  ret void, !dbg !10234
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_stm32_set_baudrate(%struct.device* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !10235 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10237, metadata !DIExpression()), !dbg !10242
  call void @llvm.dbg.value(metadata i32 %1, metadata !10238, metadata !DIExpression()), !dbg !10242
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10243
  %5 = bitcast i8** %4 to %struct.uart_stm32_config**, !dbg !10243
  %6 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %5, align 4, !dbg !10243
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %6, metadata !10239, metadata !DIExpression()), !dbg !10242
  %7 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10244
  %8 = bitcast i8** %7 to %struct.uart_stm32_data**, !dbg !10244
  %9 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %8, align 4, !dbg !10244
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %9, metadata !10240, metadata !DIExpression()), !dbg !10242
  %10 = bitcast i32* %3 to i8*, !dbg !10245
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10245
  %11 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %9, i32 0, i32 1, !dbg !10246
  %12 = load %struct.device*, %struct.device** %11, align 4, !dbg !10246
  %13 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 1, !dbg !10250
  %14 = bitcast %struct._thread_arch** %13 to i8**, !dbg !10250
  %15 = load i8*, i8** %14, align 4, !dbg !10250
  call void @llvm.dbg.value(metadata i32* %3, metadata !10241, metadata !DIExpression(DW_OP_deref)), !dbg !10242
  %16 = call fastcc i32 @clock_control_get_rate(%struct.device* noundef %12, i8* noundef %15, i32* noundef nonnull %3) #24, !dbg !10251
  %17 = icmp slt i32 %16, 0, !dbg !10252
  br i1 %17, label %18, label %21, !dbg !10253

18:                                               ; preds = %2
  %19 = call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #24, !dbg !10254
  %20 = zext i8 %19 to i32, !dbg !10254
  call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.129, i32 0, i32 0), i32 noundef %20) #25, !dbg !10254
  br label %31, !dbg !10260

21:                                               ; preds = %2
  %22 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %6, i32 0, i32 0, !dbg !10261
  %23 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10261
  call fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %23) #24, !dbg !10262
  %24 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10263
  %25 = load i32, i32* %3, align 4, !dbg !10264
  call void @llvm.dbg.value(metadata i32 %25, metadata !10241, metadata !DIExpression()), !dbg !10242
  call fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %24, i32 noundef %25, i32 noundef %1) #24, !dbg !10265
  %26 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %22, align 4, !dbg !10266
  %27 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %26, i32 0, i32 2, !dbg !10266
  %28 = load volatile i32, i32* %27, align 4, !dbg !10266
  %29 = icmp ugt i32 %28, 16, !dbg !10266
  br i1 %29, label %31, label %30, !dbg !10269

30:                                               ; preds = %21
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.130, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4.131, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.132, i32 0, i32 0), i32 noundef 190) #25, !dbg !10270
  call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6.133, i32 0, i32 0)) #25, !dbg !10270
  call void @assert_post_action(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5.132, i32 0, i32 0), i32 noundef 190) #25, !dbg !10270
  unreachable, !dbg !10270

31:                                               ; preds = %21, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !10272
  ret void, !dbg !10272
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10273 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10275, metadata !DIExpression()), !dbg !10276
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10277
  %3 = load volatile i32, i32* %2, align 4, !dbg !10277
  %4 = or i32 %3, 8192, !dbg !10277
  store volatile i32 %4, i32* %2, align 4, !dbg !10277
  ret void, !dbg !10278
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_get_rate(%struct.device* noundef %0, i8* noundef %1, i32* noundef %2) unnamed_addr #1 !dbg !10279 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10281, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i8* %1, metadata !10282, metadata !DIExpression()), !dbg !10285
  call void @llvm.dbg.value(metadata i32* %2, metadata !10283, metadata !DIExpression()), !dbg !10285
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10286
  %5 = bitcast i8** %4 to %struct.clock_control_driver_api**, !dbg !10286
  %6 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %5, align 4, !dbg !10286
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %6, metadata !10284, metadata !DIExpression()), !dbg !10285
  %7 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %6, i32 0, i32 3, !dbg !10287
  %8 = load i32 (%struct.device*, i8*, i32*)*, i32 (%struct.device*, i8*, i32*)** %7, align 4, !dbg !10287
  %9 = icmp eq i32 (%struct.device*, i8*, i32*)* %8, null, !dbg !10289
  br i1 %9, label %12, label %10, !dbg !10290

10:                                               ; preds = %3
  %11 = tail call i32 %8(%struct.device* noundef nonnull %0, i8* noundef %1, i32* noundef %2) #25, !dbg !10291
  br label %12, !dbg !10292

12:                                               ; preds = %3, %10
  %13 = phi i32 [ %11, %10 ], [ -88, %3 ], !dbg !10285
  ret i32 %13, !dbg !10293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef %0) unnamed_addr #3 !dbg !10294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10296, metadata !DIExpression()), !dbg !10297
  %2 = icmp eq i32 %0, 2, !dbg !10298
  %3 = select i1 %2, i8 87, i8 63, !dbg !10298
  %4 = icmp eq i32 %0, 1, !dbg !10298
  %5 = select i1 %4, i8 69, i8 %3, !dbg !10298
  ret i8 %5, !dbg !10299
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetOverSampling(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10300 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10304, metadata !DIExpression()), !dbg !10306
  call void @llvm.dbg.value(metadata i32 0, metadata !10305, metadata !DIExpression()), !dbg !10306
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10307
  %3 = load volatile i32, i32* %2, align 4, !dbg !10307
  %4 = and i32 %3, -32769, !dbg !10307
  store volatile i32 %4, i32* %2, align 4, !dbg !10307
  ret void, !dbg !10308
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetBaudRate(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10309 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10313, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %1, metadata !10314, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 0, metadata !10315, metadata !DIExpression()), !dbg !10317
  call void @llvm.dbg.value(metadata i32 %2, metadata !10316, metadata !DIExpression()), !dbg !10317
  %4 = zext i32 %1 to i64, !dbg !10318
  %5 = mul nuw nsw i64 %4, 25, !dbg !10318
  %6 = zext i32 %2 to i64, !dbg !10318
  %7 = shl nuw nsw i64 %6, 2, !dbg !10318
  %8 = udiv i64 %5, %7, !dbg !10318
  %9 = trunc i64 %8 to i32, !dbg !10318
  %10 = udiv i32 %9, 100, !dbg !10318
  %11 = shl nuw nsw i32 %10, 4, !dbg !10318
  %12 = mul i32 %10, -100, !dbg !10318
  %13 = add i32 %12, %9, !dbg !10318
  %14 = shl i32 %13, 4, !dbg !10318
  %15 = add i32 %14, 50, !dbg !10318
  %16 = udiv i32 %15, 100, !dbg !10318
  %17 = and i32 %16, 240, !dbg !10318
  %18 = add nuw nsw i32 %17, %11, !dbg !10318
  %19 = and i32 %16, 15, !dbg !10318
  %20 = and i32 %18, 65520, !dbg !10321
  %21 = or i32 %20, %19, !dbg !10321
  %22 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 2, !dbg !10322
  store volatile i32 %21, i32* %22, align 4, !dbg !10323
  ret void, !dbg !10324
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetHWFlowCtrl(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10325 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10327, metadata !DIExpression()), !dbg !10329
  call void @llvm.dbg.value(metadata i32 %1, metadata !10328, metadata !DIExpression()), !dbg !10329
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10330
  %4 = load volatile i32, i32* %3, align 4, !dbg !10330
  %5 = and i32 %4, -769, !dbg !10330
  %6 = or i32 %5, %1, !dbg !10330
  store volatile i32 %6, i32* %3, align 4, !dbg !10330
  ret void, !dbg !10331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetDataWidth(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10332 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10334, metadata !DIExpression()), !dbg !10336
  call void @llvm.dbg.value(metadata i32 %1, metadata !10335, metadata !DIExpression()), !dbg !10336
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10337
  %4 = load volatile i32, i32* %3, align 4, !dbg !10337
  %5 = and i32 %4, -4097, !dbg !10337
  %6 = or i32 %5, %1, !dbg !10337
  store volatile i32 %6, i32* %3, align 4, !dbg !10337
  ret void, !dbg !10338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetStopBitsLength(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10339 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10341, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i32 %1, metadata !10342, metadata !DIExpression()), !dbg !10343
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10344
  %4 = load volatile i32, i32* %3, align 4, !dbg !10344
  %5 = and i32 %4, -12289, !dbg !10344
  %6 = or i32 %5, %1, !dbg !10344
  store volatile i32 %6, i32* %3, align 4, !dbg !10344
  ret void, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_SetParity(%struct.USART_TypeDef* noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !10346 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10348, metadata !DIExpression()), !dbg !10350
  call void @llvm.dbg.value(metadata i32 %1, metadata !10349, metadata !DIExpression()), !dbg !10350
  %3 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10351
  %4 = load volatile i32, i32* %3, align 4, !dbg !10351
  %5 = and i32 %4, -1537, !dbg !10351
  %6 = or i32 %5, %1, !dbg !10351
  store volatile i32 %6, i32* %3, align 4, !dbg !10351
  ret void, !dbg !10352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10353 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10355, metadata !DIExpression()), !dbg !10356
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10357
  %3 = load volatile i32, i32* %2, align 4, !dbg !10357
  %4 = lshr i32 %3, 3, !dbg !10358
  %5 = and i32 %4, 1, !dbg !10358
  ret i32 %5, !dbg !10359
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10360 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10362, metadata !DIExpression()), !dbg !10363
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10364
  %3 = load volatile i32, i32* %2, align 4, !dbg !10364
  %4 = and i32 %3, 1, !dbg !10364
  ret i32 %4, !dbg !10365
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10366 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10368, metadata !DIExpression()), !dbg !10369
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10370
  %3 = load volatile i32, i32* %2, align 4, !dbg !10370
  %4 = lshr i32 %3, 1, !dbg !10371
  %5 = and i32 %4, 1, !dbg !10371
  ret i32 %5, !dbg !10372
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10373 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10375, metadata !DIExpression()), !dbg !10376
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10377
  %3 = load volatile i32, i32* %2, align 4, !dbg !10377
  %4 = lshr i32 %3, 8, !dbg !10378
  %5 = and i32 %4, 1, !dbg !10378
  ret i32 %5, !dbg !10379
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_LBD(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10380 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10382, metadata !DIExpression()), !dbg !10383
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10384
  store volatile i32 -257, i32* %2, align 4, !dbg !10384
  ret void, !dbg !10385
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_ORE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10386 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10388, metadata !DIExpression()), !dbg !10390
  %3 = bitcast i32* %2 to i8*, !dbg !10391
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10391
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10389, metadata !DIExpression()), !dbg !10392
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10393
  %5 = load volatile i32, i32* %4, align 4, !dbg !10393
  store volatile i32 %5, i32* %2, align 4, !dbg !10394
  %6 = load volatile i32, i32* %2, align 4, !dbg !10395
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10396
  %8 = load volatile i32, i32* %7, align 4, !dbg !10396
  store volatile i32 %8, i32* %2, align 4, !dbg !10397
  %9 = load volatile i32, i32* %2, align 4, !dbg !10398
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10399
  ret void, !dbg !10399
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_PE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10400 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10402, metadata !DIExpression()), !dbg !10404
  %3 = bitcast i32* %2 to i8*, !dbg !10405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10405
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10403, metadata !DIExpression()), !dbg !10406
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10407
  %5 = load volatile i32, i32* %4, align 4, !dbg !10407
  store volatile i32 %5, i32* %2, align 4, !dbg !10408
  %6 = load volatile i32, i32* %2, align 4, !dbg !10409
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10410
  %8 = load volatile i32, i32* %7, align 4, !dbg !10410
  store volatile i32 %8, i32* %2, align 4, !dbg !10411
  %9 = load volatile i32, i32* %2, align 4, !dbg !10412
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10413
  ret void, !dbg !10413
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_FE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10414 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10416, metadata !DIExpression()), !dbg !10418
  %3 = bitcast i32* %2 to i8*, !dbg !10419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10419
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10417, metadata !DIExpression()), !dbg !10420
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10421
  %5 = load volatile i32, i32* %4, align 4, !dbg !10421
  store volatile i32 %5, i32* %2, align 4, !dbg !10422
  %6 = load volatile i32, i32* %2, align 4, !dbg !10423
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10424
  %8 = load volatile i32, i32* %7, align 4, !dbg !10424
  store volatile i32 %8, i32* %2, align 4, !dbg !10425
  %9 = load volatile i32, i32* %2, align 4, !dbg !10426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10427
  ret void, !dbg !10427
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @LL_USART_ClearFlag_NE(%struct.USART_TypeDef* noundef %0) unnamed_addr #19 !dbg !10428 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10430, metadata !DIExpression()), !dbg !10432
  %3 = bitcast i32* %2 to i8*, !dbg !10433
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10433
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10431, metadata !DIExpression()), !dbg !10434
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10435
  %5 = load volatile i32, i32* %4, align 4, !dbg !10435
  store volatile i32 %5, i32* %2, align 4, !dbg !10436
  %6 = load volatile i32, i32* %2, align 4, !dbg !10437
  %7 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10438
  %8 = load volatile i32, i32* %7, align 4, !dbg !10438
  store volatile i32 %8, i32* %2, align 4, !dbg !10439
  %9 = load volatile i32, i32* %2, align 4, !dbg !10440
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10441
  ret void, !dbg !10441
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_TXE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10442 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10444, metadata !DIExpression()), !dbg !10445
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10446
  %3 = load volatile i32, i32* %2, align 4, !dbg !10446
  %4 = lshr i32 %3, 7, !dbg !10447
  %5 = and i32 %4, 1, !dbg !10447
  ret i32 %5, !dbg !10448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_TransmitData8(%struct.USART_TypeDef* noundef %0, i8 noundef zeroext %1) unnamed_addr #14 !dbg !10449 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10453, metadata !DIExpression()), !dbg !10455
  call void @llvm.dbg.value(metadata i8 %1, metadata !10454, metadata !DIExpression()), !dbg !10455
  %3 = zext i8 %1 to i32, !dbg !10456
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10457
  store volatile i32 %3, i32* %4, align 4, !dbg !10458
  ret void, !dbg !10459
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_USART_IsActiveFlag_RXNE(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10460 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10462, metadata !DIExpression()), !dbg !10463
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 0, !dbg !10464
  %3 = load volatile i32, i32* %2, align 4, !dbg !10464
  %4 = lshr i32 %3, 5, !dbg !10465
  %5 = and i32 %4, 1, !dbg !10465
  ret i32 %5, !dbg !10466
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc zeroext i8 @LL_USART_ReceiveData8(%struct.USART_TypeDef* noundef %0) unnamed_addr #15 !dbg !10467 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10471, metadata !DIExpression()), !dbg !10472
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 1, !dbg !10473
  %3 = load volatile i32, i32* %2, align 4, !dbg !10473
  %4 = trunc i32 %3 to i8, !dbg !10474
  ret i8 %4, !dbg !10475
}

; Function Attrs: noinline nounwind optsize
define internal i32 @uart_stm32_init(%struct.device* nocapture noundef readonly %0) #1 !dbg !10476 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10478, metadata !DIExpression()), !dbg !10484
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !10485
  %3 = bitcast i8** %2 to %struct.uart_stm32_config**, !dbg !10485
  %4 = load %struct.uart_stm32_config*, %struct.uart_stm32_config** %3, align 4, !dbg !10485
  call void @llvm.dbg.value(metadata %struct.uart_stm32_config* %4, metadata !10479, metadata !DIExpression()), !dbg !10484
  %5 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10486
  %6 = bitcast i8** %5 to %struct.uart_stm32_data**, !dbg !10486
  %7 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %6, align 4, !dbg !10486
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %7, metadata !10480, metadata !DIExpression()), !dbg !10484
  tail call fastcc void @__uart_stm32_get_clock(%struct.device* noundef %0) #24, !dbg !10487
  %8 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 1, !dbg !10488
  %9 = load %struct.device*, %struct.device** %8, align 4, !dbg !10488
  %10 = tail call fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %9) #24, !dbg !10490
  br i1 %10, label %14, label %11, !dbg !10491

11:                                               ; preds = %1
  %12 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #24, !dbg !10492
  %13 = zext i8 %12 to i32, !dbg !10492
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.136, i32 0, i32 0), i32 noundef %13) #25, !dbg !10492
  br label %62, !dbg !10498

14:                                               ; preds = %1
  %15 = load %struct.device*, %struct.device** %8, align 4, !dbg !10499
  %16 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 1, !dbg !10500
  %17 = bitcast %struct._thread_arch** %16 to i8**, !dbg !10500
  %18 = load i8*, i8** %17, align 4, !dbg !10500
  %19 = tail call fastcc i32 @clock_control_on.137(%struct.device* noundef %15, i8* noundef %18) #24, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %19, metadata !10483, metadata !DIExpression()), !dbg !10484
  %20 = icmp eq i32 %19, 0, !dbg !10502
  br i1 %20, label %24, label %21, !dbg !10504

21:                                               ; preds = %14
  %22 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 1) #24, !dbg !10505
  %23 = zext i8 %22 to i32, !dbg !10505
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8.138, i32 0, i32 0), i32 noundef %23) #25, !dbg !10505
  br label %62, !dbg !10511

24:                                               ; preds = %14
  %25 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 9, !dbg !10512
  %26 = load %struct.pinctrl_dev_config*, %struct.pinctrl_dev_config** %25, align 4, !dbg !10512
  %27 = tail call fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %26) #24, !dbg !10513
  call void @llvm.dbg.value(metadata i32 %27, metadata !10483, metadata !DIExpression()), !dbg !10484
  %28 = icmp slt i32 %27, 0, !dbg !10514
  br i1 %28, label %62, label %29, !dbg !10516

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 0, !dbg !10517
  %31 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10517
  tail call fastcc void @LL_USART_Disable(%struct.USART_TypeDef* noundef %31) #24, !dbg !10518
  %32 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10519
  tail call fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %32) #24, !dbg !10520
  %33 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 4, !dbg !10521
  %34 = load i32, i32* %33, align 4, !dbg !10521
  %35 = icmp ult i32 %34, 3, !dbg !10523
  br i1 %35, label %39, label %36, !dbg !10523

36:                                               ; preds = %29
  %37 = tail call fastcc zeroext i8 @z_log_minimal_level_to_char.128(i32 noundef 2) #24, !dbg !10524
  %38 = zext i8 %37 to i32, !dbg !10524
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9.139, i32 0, i32 0), i32 noundef %38, i32 noundef %34) #25, !dbg !10524
  call void @llvm.dbg.value(metadata i32 0, metadata !10481, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 0, metadata !10482, metadata !DIExpression()), !dbg !10484
  br label %44

39:                                               ; preds = %29
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init, i32 0, i32 %34, !dbg !10523
  %41 = load i32, i32* %40, align 4, !dbg !10523
  %42 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table.uart_stm32_init.10, i32 0, i32 %34, !dbg !10523
  %43 = load i32, i32* %42, align 4, !dbg !10523
  br label %44, !dbg !10523

44:                                               ; preds = %39, %36
  %45 = phi i32 [ 0, %36 ], [ %41, %39 ], !dbg !10533
  %46 = phi i32 [ 0, %36 ], [ %43, %39 ], !dbg !10533
  call void @llvm.dbg.value(metadata i32 %46, metadata !10482, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.value(metadata i32 %45, metadata !10481, metadata !DIExpression()), !dbg !10484
  %47 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10534
  tail call fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %47, i32 noundef %46, i32 noundef %45) #24, !dbg !10535
  %48 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 3, !dbg !10536
  %49 = load i8, i8* %48, align 4, !dbg !10536, !range !6782
  %50 = icmp eq i8 %49, 0, !dbg !10536
  br i1 %50, label %52, label %51, !dbg !10538

51:                                               ; preds = %44
  tail call fastcc void @uart_stm32_set_hwctrl(%struct.device* noundef nonnull %0, i32 noundef 768) #24, !dbg !10539
  br label %52, !dbg !10541

52:                                               ; preds = %51, %44
  %53 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %7, i32 0, i32 0, !dbg !10542
  %54 = load i32, i32* %53, align 4, !dbg !10542
  tail call fastcc void @uart_stm32_set_baudrate(%struct.device* noundef nonnull %0, i32 noundef %54) #24, !dbg !10543
  %55 = getelementptr inbounds %struct.uart_stm32_config, %struct.uart_stm32_config* %4, i32 0, i32 5, !dbg !10544
  %56 = load i8, i8* %55, align 4, !dbg !10544, !range !6782
  %57 = icmp eq i8 %56, 0, !dbg !10544
  br i1 %57, label %60, label %58, !dbg !10546

58:                                               ; preds = %52
  %59 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10547
  tail call fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %59) #24, !dbg !10549
  br label %60, !dbg !10550

60:                                               ; preds = %58, %52
  %61 = load %struct.USART_TypeDef*, %struct.USART_TypeDef** %30, align 4, !dbg !10551
  tail call fastcc void @LL_USART_Enable(%struct.USART_TypeDef* noundef %61) #24, !dbg !10552
  br label %62, !dbg !10553

62:                                               ; preds = %24, %60, %21, %11
  %63 = phi i32 [ %19, %21 ], [ 0, %60 ], [ -19, %11 ], [ %27, %24 ], !dbg !10484
  ret i32 %63, !dbg !10554
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @__uart_stm32_get_clock(%struct.device* nocapture noundef readonly %0) unnamed_addr #9 !dbg !10555 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10559, metadata !DIExpression()), !dbg !10563
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 4, !dbg !10564
  %3 = bitcast i8** %2 to %struct.uart_stm32_data**, !dbg !10564
  %4 = load %struct.uart_stm32_data*, %struct.uart_stm32_data** %3, align 4, !dbg !10564
  call void @llvm.dbg.value(metadata %struct.uart_stm32_data* %4, metadata !10560, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.value(metadata %struct.device* @__device_dts_ord_8, metadata !10561, metadata !DIExpression()), !dbg !10563
  %5 = getelementptr inbounds %struct.uart_stm32_data, %struct.uart_stm32_data* %4, i32 0, i32 1, !dbg !10565
  store %struct.device* @__device_dts_ord_8, %struct.device** %5, align 4, !dbg !10566
  ret void, !dbg !10567
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.135(%struct.device* noundef %0) unnamed_addr #1 !dbg !10568 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10572, metadata !DIExpression()), !dbg !10573
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !10574, !srcloc !10576
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) #24, !dbg !10577
  ret i1 %2, !dbg !10578
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @clock_control_on.137(%struct.device* noundef %0, i8* noundef %1) unnamed_addr #1 !dbg !10579 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10581, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.value(metadata i8* %1, metadata !10582, metadata !DIExpression()), !dbg !10584
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 2, !dbg !10585
  %4 = bitcast i8** %3 to %struct.clock_control_driver_api**, !dbg !10585
  %5 = load %struct.clock_control_driver_api*, %struct.clock_control_driver_api** %4, align 4, !dbg !10585
  call void @llvm.dbg.value(metadata %struct.clock_control_driver_api* %5, metadata !10583, metadata !DIExpression()), !dbg !10584
  %6 = getelementptr inbounds %struct.clock_control_driver_api, %struct.clock_control_driver_api* %5, i32 0, i32 0, !dbg !10586
  %7 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %6, align 4, !dbg !10586
  %8 = tail call i32 %7(%struct.device* noundef %0, i8* noundef %1) #25, !dbg !10587
  ret i32 %8, !dbg !10588
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state(%struct.pinctrl_dev_config* noundef %0) unnamed_addr #1 !dbg !10589 {
  %2 = alloca %struct.pinctrl_state*, align 4
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10593, metadata !DIExpression()), !dbg !10597
  call void @llvm.dbg.value(metadata i8 0, metadata !10594, metadata !DIExpression()), !dbg !10597
  %3 = bitcast %struct.pinctrl_state** %2 to i8*, !dbg !10598
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10598
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10596, metadata !DIExpression(DW_OP_deref)), !dbg !10597
  %4 = call i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* noundef %0, i8 noundef zeroext 0, %struct.pinctrl_state** noundef nonnull %2) #25, !dbg !10599
  call void @llvm.dbg.value(metadata i32 %4, metadata !10595, metadata !DIExpression()), !dbg !10597
  %5 = icmp slt i32 %4, 0, !dbg !10600
  br i1 %5, label %9, label %6, !dbg !10602

6:                                                ; preds = %1
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %2, align 4, !dbg !10603
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %7, metadata !10596, metadata !DIExpression()), !dbg !10597
  %8 = call fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* noundef %7) #24, !dbg !10604
  br label %9, !dbg !10605

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ %4, %1 ], !dbg !10597
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !10606
  ret i32 %10, !dbg !10606
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LL_USART_SetTransferDirection(%struct.USART_TypeDef* noundef %0) unnamed_addr #1 !dbg !10607 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10609, metadata !DIExpression()), !dbg !10613
  call void @llvm.dbg.value(metadata i32 12, metadata !10610, metadata !DIExpression()), !dbg !10613
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3
  br label %3, !dbg !10614

3:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata i32* %2, metadata !10615, metadata !DIExpression()) #23, !dbg !10621
  %4 = tail call i32 asm sideeffect "ldrex $0, $1", "=r,*Q"(i32* nonnull elementtype(i32) %2) #23, !dbg !10624, !srcloc !10625
  call void @llvm.dbg.value(metadata i32 %4, metadata !10620, metadata !DIExpression()) #23, !dbg !10621
  %5 = or i32 %4, 12, !dbg !10626
  call void @llvm.dbg.value(metadata i32 %5, metadata !10611, metadata !DIExpression()), !dbg !10627
  call void @llvm.dbg.value(metadata i32 %5, metadata !10628, metadata !DIExpression()) #23, !dbg !10635
  call void @llvm.dbg.value(metadata i32* %2, metadata !10633, metadata !DIExpression()) #23, !dbg !10635
  %6 = tail call i32 asm sideeffect "strex $0, $2, $1", "=&r,=*Q,r"(i32* nonnull elementtype(i32) %2, i32 %5) #23, !dbg !10637, !srcloc !10638
  call void @llvm.dbg.value(metadata i32 %6, metadata !10634, metadata !DIExpression()) #23, !dbg !10635
  %7 = icmp eq i32 %6, 0, !dbg !10614
  br i1 %7, label %8, label %3, !dbg !10626, !llvm.loop !10639

8:                                                ; preds = %3
  ret void, !dbg !10640
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_ConfigCharacter(%struct.USART_TypeDef* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #14 !dbg !10641 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10643, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %1, metadata !10644, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %2, metadata !10645, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10646, metadata !DIExpression()), !dbg !10647
  %4 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 3, !dbg !10648
  %5 = load volatile i32, i32* %4, align 4, !dbg !10648
  %6 = and i32 %5, -5633, !dbg !10648
  %7 = or i32 %2, %1, !dbg !10648
  %8 = or i32 %7, %6, !dbg !10648
  store volatile i32 %8, i32* %4, align 4, !dbg !10648
  %9 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 4, !dbg !10649
  %10 = load volatile i32, i32* %9, align 4, !dbg !10649
  %11 = and i32 %10, -12289, !dbg !10649
  store volatile i32 %11, i32* %9, align 4, !dbg !10649
  ret void, !dbg !10650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_USART_EnableHalfDuplex(%struct.USART_TypeDef* noundef %0) unnamed_addr #14 !dbg !10651 {
  call void @llvm.dbg.value(metadata %struct.USART_TypeDef* %0, metadata !10653, metadata !DIExpression()), !dbg !10654
  %2 = getelementptr inbounds %struct.USART_TypeDef, %struct.USART_TypeDef* %0, i32 0, i32 5, !dbg !10655
  %3 = load volatile i32, i32* %2, align 4, !dbg !10655
  %4 = or i32 %3, 8, !dbg !10655
  store volatile i32 %4, i32* %2, align 4, !dbg !10655
  ret void, !dbg !10656
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @pinctrl_apply_state_direct(%struct.pinctrl_state* nocapture noundef readonly %0) unnamed_addr #1 !dbg !10657 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* undef, metadata !10661, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata %struct.pinctrl_state* %0, metadata !10662, metadata !DIExpression()), !dbg !10664
  call void @llvm.dbg.value(metadata i32 0, metadata !10663, metadata !DIExpression()), !dbg !10664
  %2 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 0, !dbg !10665
  %3 = load %struct._thread_arch*, %struct._thread_arch** %2, align 4, !dbg !10665
  %4 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %0, i32 0, i32 1, !dbg !10666
  %5 = load i8, i8* %4, align 4, !dbg !10666
  %6 = tail call i32 @pinctrl_configure_pins(%struct._thread_arch* noundef %3, i8 noundef zeroext %5, i32 noundef 0) #25, !dbg !10667
  ret i32 %6, !dbg !10668
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.140(%struct.device* noundef %0) unnamed_addr #1 !dbg !10669 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10671, metadata !DIExpression()), !dbg !10672
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !10673
  ret i1 %2, !dbg !10674
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal i32 @sys_clock_driver_init(%struct.device* nocapture noundef readnone %0) #14 !dbg !10675 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !10677, metadata !DIExpression()), !dbg !10678
  tail call fastcc void @__NVIC_SetPriority.142() #24, !dbg !10679
  store i32 8399, i32* @last_load, align 4, !dbg !10680
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10681
  store volatile i32 8399, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10682
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10683
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10684
  %3 = or i32 %2, 7, !dbg !10684
  store volatile i32 %3, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10684
  ret i32 0, !dbg !10685
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.142() unnamed_addr #14 !dbg !10686 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !10688, metadata !DIExpression()), !dbg !10690
  call void @llvm.dbg.value(metadata i32 1, metadata !10689, metadata !DIExpression()), !dbg !10690
  store volatile i8 16, i8* inttoptr (i32 -536810205 to i8*), align 1, !dbg !10691
  ret void, !dbg !10694
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_isr(i8* nocapture noundef readnone %0) local_unnamed_addr #1 !dbg !10695 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10697, metadata !DIExpression()), !dbg !10699
  %2 = tail call fastcc i32 @elapsed() #24, !dbg !10700
  %3 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10701
  %4 = load i32, i32* @cycle_count, align 4, !dbg !10702
  %5 = add i32 %4, %3, !dbg !10702
  store i32 %5, i32* @cycle_count, align 4, !dbg !10702
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10703
  %6 = load i32, i32* @announced_cycles, align 4, !dbg !10704
  %7 = sub i32 %5, %6, !dbg !10707
  %8 = udiv i32 %7, 8400, !dbg !10708
  call void @llvm.dbg.value(metadata i32 %8, metadata !10698, metadata !DIExpression()), !dbg !10699
  %9 = mul nuw i32 %8, 8400, !dbg !10709
  %10 = add i32 %9, %6, !dbg !10710
  store i32 %10, i32* @announced_cycles, align 4, !dbg !10710
  tail call void @sys_clock_announce(i32 noundef %8) #25, !dbg !10711
  tail call void @z_arm_int_exit() #25, !dbg !10712
  ret void, !dbg !10713
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @elapsed() unnamed_addr #14 !dbg !10714 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10719
  call void @llvm.dbg.value(metadata i32 %1, metadata !10716, metadata !DIExpression()), !dbg !10720
  %2 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10721
  call void @llvm.dbg.value(metadata i32 %2, metadata !10717, metadata !DIExpression()), !dbg !10720
  %3 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10722
  call void @llvm.dbg.value(metadata i32 %3, metadata !10718, metadata !DIExpression()), !dbg !10720
  %4 = and i32 %2, 65536, !dbg !10723
  %5 = icmp ne i32 %4, 0, !dbg !10723
  %6 = icmp ult i32 %1, %3
  %7 = select i1 %5, i1 true, i1 %6, !dbg !10725
  %8 = load i32, i32* @last_load, align 4, !dbg !10720
  br i1 %7, label %9, label %13, !dbg !10725

9:                                                ; preds = %0
  %10 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10726
  %11 = add i32 %10, %8, !dbg !10726
  store volatile i32 %11, i32* @overflow_cyc, align 4, !dbg !10726
  %12 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10728
  br label %13, !dbg !10729

13:                                               ; preds = %0, %9
  %14 = sub i32 %8, %3, !dbg !10730
  %15 = load volatile i32, i32* @overflow_cyc, align 4, !dbg !10731
  %16 = add i32 %14, %15, !dbg !10732
  ret i32 %16, !dbg !10733
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_set_timeout(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !10734 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10738, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i1 %1, metadata !10739, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10751
  %3 = icmp eq i32 %0, -1
  %4 = and i1 %3, %1, !dbg !10752
  br i1 %4, label %5, label %8, !dbg !10752

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10754
  %7 = and i32 %6, -2, !dbg !10754
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10754
  store i32 -16777216, i32* @last_load, align 4, !dbg !10756
  br label %60, !dbg !10757

8:                                                ; preds = %2
  %9 = load i32, i32* @last_load, align 4, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %9, metadata !10743, metadata !DIExpression()), !dbg !10751
  br i1 %3, label %18, label %10, !dbg !10759

10:                                               ; preds = %8
  %11 = add i32 %0, -1, !dbg !10759
  call void @llvm.dbg.value(metadata i32 undef, metadata !10738, metadata !DIExpression()), !dbg !10751
  %12 = icmp slt i32 %11, 1, !dbg !10760
  br i1 %12, label %18, label %13, !dbg !10760

13:                                               ; preds = %10
  %14 = icmp ult i32 %11, 1996, !dbg !10760
  %15 = select i1 %14, i32 %11, i32 1996, !dbg !10760
  %16 = mul nuw nsw i32 %15, 8400, !dbg !10760
  %17 = add nuw nsw i32 %16, 8399, !dbg !10760
  br label %18, !dbg !10760

18:                                               ; preds = %13, %8, %10
  %19 = phi i32 [ 8399, %10 ], [ 16766399, %8 ], [ %17, %13 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !10738, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10761, metadata !DIExpression()) #23, !dbg !10768
  %20 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10770, !srcloc !10776
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10777
  call void @llvm.dbg.value(metadata i32 undef, metadata !10774, metadata !DIExpression()) #23, !dbg !10777
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10768
  %21 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10778
  br i1 %21, label %23, label %22, !dbg !10781

22:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10782
  unreachable, !dbg !10782

23:                                               ; preds = %18
  %24 = extractvalue { i32, i32 } %20, 0, !dbg !10770
  call void @llvm.dbg.value(metadata i32 %24, metadata !10773, metadata !DIExpression()) #23, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %24, metadata !10767, metadata !DIExpression()) #23, !dbg !10768
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10784
  call void @llvm.dbg.value(metadata i32 %24, metadata !10744, metadata !DIExpression()), !dbg !10751
  %25 = tail call fastcc i32 @elapsed() #24, !dbg !10785
  call void @llvm.dbg.value(metadata i32 %25, metadata !10749, metadata !DIExpression()), !dbg !10751
  %26 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10786
  call void @llvm.dbg.value(metadata i32 %26, metadata !10741, metadata !DIExpression()), !dbg !10751
  %27 = load i32, i32* @cycle_count, align 4, !dbg !10787
  %28 = add i32 %27, %25, !dbg !10787
  store i32 %28, i32* @cycle_count, align 4, !dbg !10787
  store volatile i32 0, i32* @overflow_cyc, align 4, !dbg !10788
  %29 = load i32, i32* @announced_cycles, align 4, !dbg !10789
  %30 = sub i32 %28, %29, !dbg !10790
  call void @llvm.dbg.value(metadata i32 %30, metadata !10750, metadata !DIExpression()), !dbg !10751
  %31 = icmp slt i32 %30, 0, !dbg !10791
  br i1 %31, label %41, label %32, !dbg !10793

32:                                               ; preds = %23
  call void @llvm.dbg.value(metadata i32 undef, metadata !10740, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.value(metadata i32 undef, metadata !10740, metadata !DIExpression()), !dbg !10751
  %33 = add nuw i32 %19, %30, !dbg !10794
  %34 = urem i32 %33, 8400, !dbg !10796
  call void @llvm.dbg.value(metadata !DIArgList(i32 %33, i32 %34), metadata !10740, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10751
  %35 = sub nuw nsw i32 %19, %34, !dbg !10797
  call void @llvm.dbg.value(metadata i32 %35, metadata !10740, metadata !DIExpression()), !dbg !10751
  %36 = icmp ugt i32 %35, 1024, !dbg !10798
  br i1 %36, label %37, label %39, !dbg !10798

37:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i32 %35, metadata !10740, metadata !DIExpression()), !dbg !10751
  %38 = icmp ugt i32 %35, 16766400, !dbg !10799
  br i1 %38, label %41, label %39, !dbg !10801

39:                                               ; preds = %32, %37
  %40 = phi i32 [ %35, %37 ], [ 1024, %32 ]
  br label %41

41:                                               ; preds = %37, %23, %39
  %42 = phi i32 [ %40, %39 ], [ 1024, %23 ], [ 16766400, %37 ]
  store i32 %42, i32* @last_load, align 4, !dbg !10802
  %43 = load volatile i32, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10803
  call void @llvm.dbg.value(metadata i32 %43, metadata !10742, metadata !DIExpression()), !dbg !10751
  %44 = add nsw i32 %42, -1, !dbg !10804
  store volatile i32 %44, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !10805
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !10806
  %45 = icmp ult i32 %26, %43, !dbg !10807
  br i1 %45, label %46, label %51, !dbg !10809

46:                                               ; preds = %41
  %47 = load i32, i32* @cycle_count, align 4, !dbg !10810
  %48 = add i32 %26, %9, !dbg !10812
  %49 = sub i32 %48, %43, !dbg !10813
  %50 = add i32 %49, %47, !dbg !10810
  br label %55, !dbg !10814

51:                                               ; preds = %41
  %52 = sub i32 %26, %43, !dbg !10815
  %53 = load i32, i32* @cycle_count, align 4, !dbg !10817
  %54 = add i32 %52, %53, !dbg !10817
  br label %55

55:                                               ; preds = %51, %46
  %56 = phi i32 [ %54, %51 ], [ %50, %46 ], !dbg !10818
  store i32 %56, i32* @cycle_count, align 4, !dbg !10818
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10825
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10824, metadata !DIExpression()) #23, !dbg !10825
  %57 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10827
  br i1 %57, label %59, label %58, !dbg !10830

58:                                               ; preds = %55
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10831
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10831
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10831
  unreachable, !dbg !10831

59:                                               ; preds = %55
  call void @llvm.dbg.value(metadata i32 %24, metadata !10819, metadata !DIExpression()) #23, !dbg !10825
  call void @llvm.dbg.value(metadata i32 %24, metadata !10833, metadata !DIExpression()) #23, !dbg !10836
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !10838, !srcloc !10839
  br label %60

60:                                               ; preds = %59, %5
  ret void, !dbg !10840
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_elapsed() local_unnamed_addr #1 !dbg !10841 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10761, metadata !DIExpression()) #23, !dbg !10845
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10847, !srcloc !10776
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10774, metadata !DIExpression()) #23, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10845
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10850
  br i1 %2, label %4, label %3, !dbg !10851

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10852
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10852
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10852
  unreachable, !dbg !10852

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10849
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10845
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10853
  call void @llvm.dbg.value(metadata i32 undef, metadata !10843, metadata !DIExpression()), !dbg !10854
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10855
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10856
  %7 = load i32, i32* @announced_cycles, align 4, !dbg !10857
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %7, i32 %6), metadata !10844, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10854
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10858
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10824, metadata !DIExpression()) #23, !dbg !10858
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10860
  br i1 %8, label %10, label %9, !dbg !10861

9:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10862
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10862
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10862
  unreachable, !dbg !10862

10:                                               ; preds = %4
  %11 = add i32 %6, %5, !dbg !10863
  call void @llvm.dbg.value(metadata !DIArgList(i32 %11, i32 %7), metadata !10844, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10854
  %12 = sub i32 %11, %7, !dbg !10864
  call void @llvm.dbg.value(metadata i32 %12, metadata !10844, metadata !DIExpression()), !dbg !10854
  %13 = extractvalue { i32, i32 } %1, 0, !dbg !10847
  call void @llvm.dbg.value(metadata i32 %13, metadata !10773, metadata !DIExpression()) #23, !dbg !10849
  call void @llvm.dbg.value(metadata i32 %13, metadata !10767, metadata !DIExpression()) #23, !dbg !10845
  call void @llvm.dbg.value(metadata i32 %13, metadata !10843, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10858
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10865
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %13) #23, !dbg !10867, !srcloc !10839
  %14 = udiv i32 %12, 8400, !dbg !10868
  ret i32 %14, !dbg !10869
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_cycle_get_32() local_unnamed_addr #1 !dbg !10870 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10761, metadata !DIExpression()) #23, !dbg !10874
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !10876, !srcloc !10776
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10774, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10874
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10879
  br i1 %2, label %4, label %3, !dbg !10880

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.144, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10881
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.146, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10881
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 148) #25, !dbg !10881
  unreachable, !dbg !10881

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !10773, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 undef, metadata !10767, metadata !DIExpression()) #23, !dbg !10874
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10882
  call void @llvm.dbg.value(metadata i32 undef, metadata !10872, metadata !DIExpression()), !dbg !10883
  %5 = tail call fastcc i32 @elapsed() #24, !dbg !10884
  %6 = load i32, i32* @cycle_count, align 4, !dbg !10885
  call void @llvm.dbg.value(metadata !DIArgList(i32 %5, i32 %6), metadata !10873, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !10883
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock, metadata !10824, metadata !DIExpression()) #23, !dbg !10886
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10888
  br i1 %7, label %9, label %8, !dbg !10889

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.143, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.147, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10890
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.148, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock) #25, !dbg !10890
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.145, i32 0, i32 0), i32 noundef 194) #25, !dbg !10890
  unreachable, !dbg !10890

9:                                                ; preds = %4
  %10 = add i32 %6, %5, !dbg !10891
  call void @llvm.dbg.value(metadata i32 %10, metadata !10873, metadata !DIExpression()), !dbg !10883
  %11 = extractvalue { i32, i32 } %1, 0, !dbg !10876
  call void @llvm.dbg.value(metadata i32 %11, metadata !10773, metadata !DIExpression()) #23, !dbg !10878
  call void @llvm.dbg.value(metadata i32 %11, metadata !10767, metadata !DIExpression()) #23, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %11, metadata !10872, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.value(metadata i32 undef, metadata !10819, metadata !DIExpression()) #23, !dbg !10886
  call void @llvm.dbg.value(metadata i32 undef, metadata !10833, metadata !DIExpression()) #23, !dbg !10892
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !10894, !srcloc !10839
  ret i32 %10, !dbg !10895
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_idle_exit() local_unnamed_addr #14 !dbg !10896 {
  %1 = load i32, i32* @last_load, align 4, !dbg !10897
  %2 = icmp eq i32 %1, -16777216, !dbg !10899
  br i1 %2, label %3, label %6, !dbg !10900

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10901
  %5 = or i32 %4, 1, !dbg !10901
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10901
  br label %6, !dbg !10903

6:                                                ; preds = %3, %0
  ret void, !dbg !10904
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @sys_clock_disable() local_unnamed_addr #14 !dbg !10905 {
  %1 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10906
  %2 = and i32 %1, -2, !dbg !10906
  store volatile i32 %2, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !10906
  ret void, !dbg !10907
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @pinctrl_lookup_state(%struct.pinctrl_dev_config* nocapture noundef readonly %0, i8 noundef zeroext %1, %struct.pinctrl_state** nocapture noundef writeonly %2) local_unnamed_addr #13 !dbg !10908 {
  call void @llvm.dbg.value(metadata %struct.pinctrl_dev_config* %0, metadata !10934, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata i8 %1, metadata !10935, metadata !DIExpression()), !dbg !10937
  call void @llvm.dbg.value(metadata %struct.pinctrl_state** %2, metadata !10936, metadata !DIExpression()), !dbg !10937
  %4 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 0, !dbg !10938
  %5 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10938
  %6 = getelementptr inbounds %struct.pinctrl_dev_config, %struct.pinctrl_dev_config* %0, i32 0, i32 1
  store %struct.pinctrl_state* %5, %struct.pinctrl_state** %2, align 4, !dbg !10937
  %7 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10939
  %8 = load i8, i8* %6, align 4, !dbg !10940
  %9 = zext i8 %8 to i32, !dbg !10941
  %10 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %7, i32 %9, !dbg !10941
  %11 = icmp ult %struct.pinctrl_state* %5, %10, !dbg !10942
  br i1 %11, label %18, label %24, !dbg !10943

12:                                               ; preds = %18
  store %struct.pinctrl_state* %23, %struct.pinctrl_state** %2, align 4, !dbg !10937
  %13 = load %struct.pinctrl_state*, %struct.pinctrl_state** %4, align 4, !dbg !10939
  %14 = load i8, i8* %6, align 4, !dbg !10940
  %15 = zext i8 %14 to i32, !dbg !10941
  %16 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %13, i32 %15, !dbg !10941
  %17 = icmp ult %struct.pinctrl_state* %23, %16, !dbg !10942
  br i1 %17, label %18, label %24, !dbg !10943, !llvm.loop !10944

18:                                               ; preds = %3, %12
  %19 = phi %struct.pinctrl_state* [ %23, %12 ], [ %5, %3 ]
  %20 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 0, i32 2, !dbg !10946
  %21 = load i8, i8* %20, align 1, !dbg !10946
  %22 = icmp eq i8 %21, %1, !dbg !10949
  %23 = getelementptr inbounds %struct.pinctrl_state, %struct.pinctrl_state* %19, i32 1, !dbg !10950
  br i1 %22, label %24, label %12, !dbg !10951

24:                                               ; preds = %18, %12, %3
  %25 = phi i32 [ -2, %3 ], [ -2, %12 ], [ 0, %18 ], !dbg !10937
  ret i32 %25, !dbg !10952
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pinctrl_configure_pins(%struct._thread_arch* nocapture noundef readonly %0, i8 noundef zeroext %1, i32 noundef %2) local_unnamed_addr #1 !dbg !10953 {
  call void @llvm.dbg.value(metadata %struct._thread_arch* %0, metadata !10964, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8 %1, metadata !10965, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 %2, metadata !10966, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 0, metadata !10969, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i32 0, metadata !10970, metadata !DIExpression()), !dbg !10980
  call void @llvm.dbg.value(metadata i8 0, metadata !10971, metadata !DIExpression()), !dbg !10981
  %4 = icmp eq i8 %1, 0, !dbg !10982
  br i1 %4, label %35, label %5, !dbg !10983

5:                                                ; preds = %3
  %6 = zext i8 %1 to i32, !dbg !10982
  br label %9, !dbg !10983

7:                                                ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !10971, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.value(metadata i32 %29, metadata !10969, metadata !DIExpression()), !dbg !10980
  %8 = icmp eq i32 %34, %6, !dbg !10982
  br i1 %8, label %35, label %9, !dbg !10983, !llvm.loop !10984

9:                                                ; preds = %5, %7
  %10 = phi i32 [ 0, %5 ], [ %34, %7 ]
  %11 = phi i32 [ 0, %5 ], [ %29, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10971, metadata !DIExpression()), !dbg !10981
  call void @llvm.dbg.value(metadata i32 %11, metadata !10969, metadata !DIExpression()), !dbg !10980
  %12 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 0, !dbg !10986
  %13 = load i32, i32* %12, align 4, !dbg !10986
  call void @llvm.dbg.value(metadata i32 %13, metadata !10968, metadata !DIExpression()), !dbg !10980
  %14 = and i32 %13, 31, !dbg !10987
  %15 = icmp ult i32 %14, 16, !dbg !10988
  br i1 %15, label %16, label %20, !dbg !10989

16:                                               ; preds = %9
  %17 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10990
  %18 = load i32, i32* %17, align 4, !dbg !10990
  %19 = or i32 %18, 32, !dbg !10992
  call void @llvm.dbg.value(metadata i32 %19, metadata !10969, metadata !DIExpression()), !dbg !10980
  br label %28, !dbg !10993

20:                                               ; preds = %9
  switch i32 %14, label %27 [
    i32 16, label %28
    i32 17, label %21
  ], !dbg !10994

21:                                               ; preds = %20
  %22 = getelementptr inbounds %struct._thread_arch, %struct._thread_arch* %0, i32 %10, i32 1, !dbg !10995
  %23 = load i32, i32* %22, align 4, !dbg !10995
  call void @llvm.dbg.value(metadata i32 %23, metadata !10973, metadata !DIExpression(DW_OP_constu, 2048, DW_OP_and, DW_OP_stack_value)), !dbg !10996
  %24 = lshr i32 %23, 7, !dbg !10997
  %25 = and i32 %24, 16, !dbg !10997
  %26 = or i32 %25, %23, !dbg !10997
  call void @llvm.dbg.value(metadata i32 %26, metadata !10969, metadata !DIExpression()), !dbg !10980
  br label %28, !dbg !10998

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %20, %27, %21, %16
  %29 = phi i32 [ %19, %16 ], [ %26, %21 ], [ %11, %27 ], [ 48, %20 ], !dbg !10980
  call void @llvm.dbg.value(metadata i32 %29, metadata !10969, metadata !DIExpression()), !dbg !10980
  %30 = lshr i32 %13, 5, !dbg !10999
  %31 = and i32 %30, 255, !dbg !10999
  call void @llvm.dbg.value(metadata i32 %31, metadata !10967, metadata !DIExpression()), !dbg !10980
  %32 = tail call fastcc i32 @stm32_pin_configure(i32 noundef %31, i32 noundef %29, i32 noundef %14) #24, !dbg !11000
  call void @llvm.dbg.value(metadata i32 %32, metadata !10970, metadata !DIExpression()), !dbg !10980
  %33 = icmp slt i32 %32, 0, !dbg !11001
  %34 = add nuw nsw i32 %10, 1, !dbg !11003
  call void @llvm.dbg.value(metadata i32 %34, metadata !10971, metadata !DIExpression()), !dbg !10981
  br i1 %33, label %35, label %7, !dbg !11004

35:                                               ; preds = %7, %28, %3
  %36 = phi i32 [ 0, %3 ], [ %32, %28 ], [ 0, %7 ]
  ret i32 %36, !dbg !11005
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @stm32_pin_configure(i32 noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #1 !dbg !11006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11010, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 %1, metadata !11011, metadata !DIExpression()), !dbg !11014
  call void @llvm.dbg.value(metadata i32 %2, metadata !11012, metadata !DIExpression()), !dbg !11014
  %4 = icmp ugt i32 %0, 175, !dbg !11015
  br i1 %4, label %16, label %5, !dbg !11017

5:                                                ; preds = %3
  %6 = lshr i32 %0, 4, !dbg !11018
  %7 = getelementptr inbounds [11 x %struct.device*], [11 x %struct.device*]* @gpio_ports, i32 0, i32 %6, !dbg !11019
  %8 = load %struct.device*, %struct.device** %7, align 4, !dbg !11019
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !11013, metadata !DIExpression()), !dbg !11014
  %9 = add nsw i32 %6, -8, !dbg !11020
  %10 = icmp ult i32 %9, 3, !dbg !11020
  br i1 %10, label %16, label %11, !dbg !11022

11:                                               ; preds = %5
  %12 = tail call fastcc zeroext i1 @device_is_ready.153(%struct.device* noundef %8) #24, !dbg !11023
  br i1 %12, label %13, label %16, !dbg !11024

13:                                               ; preds = %11
  %14 = and i32 %0, 15, !dbg !11025
  %15 = tail call i32 @gpio_stm32_configure(%struct.device* noundef %8, i32 noundef %14, i32 noundef %1, i32 noundef %2) #25, !dbg !11026
  br label %16, !dbg !11027

16:                                               ; preds = %5, %11, %3, %13
  %17 = phi i32 [ %15, %13 ], [ -22, %3 ], [ -19, %11 ], [ -19, %5 ], !dbg !11014
  ret i32 %17, !dbg !11028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @device_is_ready.153(%struct.device* noundef %0) unnamed_addr #1 !dbg !11029 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11033, metadata !DIExpression()), !dbg !11034
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !11035, !srcloc !11037
  %2 = tail call fastcc zeroext i1 @z_impl_device_is_ready.154(%struct.device* noundef %0) #24, !dbg !11038
  ret i1 %2, !dbg !11039
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @z_impl_device_is_ready.154(%struct.device* noundef %0) unnamed_addr #1 !dbg !11040 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !11042, metadata !DIExpression()), !dbg !11043
  %2 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %0) #25, !dbg !11044
  ret i1 %2, !dbg !11045
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SystemInit() local_unnamed_addr #3 !dbg !11046 {
  ret void, !dbg !11047
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #15 !dbg !11048 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11050, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 0, metadata !11051, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 2, metadata !11052, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 0, metadata !11053, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 2, metadata !11054, metadata !DIExpression()), !dbg !11055
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11056
  %2 = and i32 %1, 12, !dbg !11057
  call void @llvm.dbg.value(metadata i32 %2, metadata !11050, metadata !DIExpression()), !dbg !11055
  %3 = icmp eq i32 %2, 8, !dbg !11058
  br i1 %3, label %4, label %18, !dbg !11058

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11059
  call void @llvm.dbg.value(metadata i32 %5, metadata !11053, metadata !DIExpression(DW_OP_constu, 22, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !11055
  %6 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11061
  %7 = and i32 %6, 63, !dbg !11062
  call void @llvm.dbg.value(metadata i32 %7, metadata !11054, metadata !DIExpression()), !dbg !11055
  %8 = udiv i32 16000000, %7, !dbg !11063
  %9 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11063
  %10 = lshr i32 %9, 6, !dbg !11063
  %11 = and i32 %10, 511, !dbg !11063
  %12 = mul i32 %11, %8, !dbg !11063
  call void @llvm.dbg.value(metadata i32 %12, metadata !11051, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 %12, metadata !11051, metadata !DIExpression()), !dbg !11055
  call void @llvm.dbg.value(metadata i32 %12, metadata !11051, metadata !DIExpression()), !dbg !11055
  %13 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11065
  %14 = lshr i32 %13, 15, !dbg !11066
  %15 = and i32 %14, 6, !dbg !11066
  %16 = add nuw nsw i32 %15, 2, !dbg !11066
  call void @llvm.dbg.value(metadata i32 %16, metadata !11052, metadata !DIExpression()), !dbg !11055
  %17 = udiv i32 %12, %16, !dbg !11067
  br label %18, !dbg !11068

18:                                               ; preds = %0, %4
  %19 = phi i32 [ %17, %4 ], [ 16000000, %0 ]
  store i32 %19, i32* @SystemCoreClock, align 4, !dbg !11069
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11070
  %21 = lshr i32 %20, 4, !dbg !11071
  %22 = and i32 %21, 15, !dbg !11071
  %23 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %22, !dbg !11072
  %24 = load i8, i8* %23, align 1, !dbg !11072
  %25 = zext i8 %24 to i32, !dbg !11072
  call void @llvm.dbg.value(metadata i32 %25, metadata !11050, metadata !DIExpression()), !dbg !11055
  %26 = lshr i32 %19, %25, !dbg !11073
  store i32 %26, i32* @SystemCoreClock, align 4, !dbg !11073
  ret void, !dbg !11074
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_DeInit() local_unnamed_addr #1 !dbg !11075 {
  ret i32 0, !dbg !11080
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_OscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11081 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11108, metadata !DIExpression()), !dbg !11119
  %3 = icmp eq %struct.RCC_OscInitTypeDef* %0, null, !dbg !11120
  br i1 %3, label %317, label %4, !dbg !11122

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11123
  %6 = load i32, i32* %5, align 4, !dbg !11123
  %7 = and i32 %6, 1, !dbg !11125
  %8 = icmp eq i32 %7, 0, !dbg !11126
  br i1 %8, label %66, label %9, !dbg !11127

9:                                                ; preds = %4
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11128
  %11 = and i32 %10, 12, !dbg !11128
  %12 = icmp eq i32 %11, 4, !dbg !11131
  br i1 %12, label %21, label %13, !dbg !11132

13:                                               ; preds = %9
  %14 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11133
  %15 = and i32 %14, 12, !dbg !11133
  %16 = icmp eq i32 %15, 8, !dbg !11134
  br i1 %16, label %17, label %29, !dbg !11135

17:                                               ; preds = %13
  %18 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11136
  %19 = and i32 %18, 4194304, !dbg !11137
  %20 = icmp eq i32 %19, 0, !dbg !11138
  br i1 %20, label %29, label %21, !dbg !11139

21:                                               ; preds = %17, %9
  %22 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11140
  %23 = and i32 %22, 131072, !dbg !11140
  %24 = icmp eq i32 %23, 0, !dbg !11140
  br i1 %24, label %66, label %25, !dbg !11143

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11144
  %27 = load i32, i32* %26, align 4, !dbg !11144
  %28 = icmp eq i32 %27, 0, !dbg !11145
  br i1 %28, label %317, label %66, !dbg !11146

29:                                               ; preds = %13, %17
  %30 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11147
  %31 = load i32, i32* %30, align 4, !dbg !11147
  switch i32 %31, label %40 [
    i32 65536, label %32
    i32 327680, label %35
  ], !dbg !11151

32:                                               ; preds = %29
  %33 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11152
  %34 = or i32 %33, 65536, !dbg !11152
  br label %45, !dbg !11152

35:                                               ; preds = %29
  %36 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11154
  %37 = or i32 %36, 262144, !dbg !11154
  store volatile i32 %37, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11154
  %38 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11154
  %39 = or i32 %38, 65536, !dbg !11154
  br label %45, !dbg !11154

40:                                               ; preds = %29
  %41 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11157
  %42 = and i32 %41, -65537, !dbg !11157
  store volatile i32 %42, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11157
  %43 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11157
  %44 = and i32 %43, -262145, !dbg !11157
  br label %45

45:                                               ; preds = %35, %40, %32
  %46 = phi i32 [ %39, %35 ], [ %44, %40 ], [ %34, %32 ]
  store volatile i32 %46, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11159
  %47 = load i32, i32* %30, align 4, !dbg !11160
  %48 = icmp eq i32 %47, 0, !dbg !11162
  %49 = tail call i32 @HAL_GetTick() #25, !dbg !11163
  call void @llvm.dbg.value(metadata i32 %49, metadata !11109, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.value(metadata i32 %49, metadata !11109, metadata !DIExpression()), !dbg !11119
  br i1 %48, label %58, label %50, !dbg !11164

50:                                               ; preds = %45, %54
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11165
  %52 = and i32 %51, 131072, !dbg !11167
  %53 = icmp eq i32 %52, 0, !dbg !11167
  br i1 %53, label %54, label %66, !dbg !11168

54:                                               ; preds = %50
  %55 = tail call i32 @HAL_GetTick() #25, !dbg !11169
  %56 = sub i32 %55, %49, !dbg !11172
  %57 = icmp ugt i32 %56, 100, !dbg !11173
  br i1 %57, label %317, label %50, !dbg !11174, !llvm.loop !11175

58:                                               ; preds = %45, %62
  %59 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11177
  %60 = and i32 %59, 131072, !dbg !11177
  %61 = icmp eq i32 %60, 0, !dbg !11177
  br i1 %61, label %66, label %62, !dbg !11179

62:                                               ; preds = %58
  %63 = tail call i32 @HAL_GetTick() #25, !dbg !11180
  %64 = sub i32 %63, %49, !dbg !11183
  %65 = icmp ugt i32 %64, 100, !dbg !11184
  br i1 %65, label %317, label %58, !dbg !11185, !llvm.loop !11186

66:                                               ; preds = %50, %58, %25, %21, %4
  %67 = load i32, i32* %5, align 4, !dbg !11188
  %68 = and i32 %67, 2, !dbg !11190
  %69 = icmp eq i32 %68, 0, !dbg !11191
  br i1 %69, label %121, label %70, !dbg !11192

70:                                               ; preds = %66
  %71 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11193
  %72 = and i32 %71, 12, !dbg !11193
  %73 = icmp eq i32 %72, 0, !dbg !11196
  br i1 %73, label %82, label %74, !dbg !11197

74:                                               ; preds = %70
  %75 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11198
  %76 = and i32 %75, 12, !dbg !11198
  %77 = icmp eq i32 %76, 8, !dbg !11199
  br i1 %77, label %78, label %90, !dbg !11200

78:                                               ; preds = %74
  %79 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11201
  %80 = and i32 %79, 4194304, !dbg !11202
  %81 = icmp eq i32 %80, 0, !dbg !11203
  br i1 %81, label %82, label %90, !dbg !11204

82:                                               ; preds = %78, %70
  %83 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11205
  %84 = and i32 %83, 2, !dbg !11205
  %85 = icmp eq i32 %84, 0, !dbg !11205
  br i1 %85, label %114, label %86, !dbg !11208

86:                                               ; preds = %82
  %87 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11209
  %88 = load i32, i32* %87, align 4, !dbg !11209
  %89 = icmp eq i32 %88, 1, !dbg !11210
  br i1 %89, label %114, label %317, !dbg !11211

90:                                               ; preds = %78, %74
  %91 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11212
  %92 = load i32, i32* %91, align 4, !dbg !11212
  %93 = icmp eq i32 %92, 0, !dbg !11215
  br i1 %93, label %104, label %94, !dbg !11216

94:                                               ; preds = %90
  store volatile i32 1, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11217
  %95 = tail call i32 @HAL_GetTick() #25, !dbg !11219
  call void @llvm.dbg.value(metadata i32 %95, metadata !11109, metadata !DIExpression()), !dbg !11119
  br label %96, !dbg !11220

96:                                               ; preds = %100, %94
  %97 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11221
  %98 = and i32 %97, 2, !dbg !11222
  %99 = icmp eq i32 %98, 0, !dbg !11222
  br i1 %99, label %100, label %114, !dbg !11220

100:                                              ; preds = %96
  %101 = tail call i32 @HAL_GetTick() #25, !dbg !11223
  %102 = sub i32 %101, %95, !dbg !11226
  %103 = icmp ugt i32 %102, 2, !dbg !11227
  br i1 %103, label %317, label %96, !dbg !11228, !llvm.loop !11229

104:                                              ; preds = %90
  store volatile i32 0, i32* inttoptr (i32 1111949312 to i32*), align 65536, !dbg !11231
  %105 = tail call i32 @HAL_GetTick() #25, !dbg !11233
  call void @llvm.dbg.value(metadata i32 %105, metadata !11109, metadata !DIExpression()), !dbg !11119
  br label %106, !dbg !11234

106:                                              ; preds = %110, %104
  %107 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11235
  %108 = and i32 %107, 2, !dbg !11235
  %109 = icmp eq i32 %108, 0, !dbg !11235
  br i1 %109, label %121, label %110, !dbg !11234

110:                                              ; preds = %106
  %111 = tail call i32 @HAL_GetTick() #25, !dbg !11236
  %112 = sub i32 %111, %105, !dbg !11239
  %113 = icmp ugt i32 %112, 2, !dbg !11240
  br i1 %113, label %317, label %106, !dbg !11241, !llvm.loop !11242

114:                                              ; preds = %96, %82, %86
  %115 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11244
  %116 = and i32 %115, -249, !dbg !11244
  %117 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11244
  %118 = load i32, i32* %117, align 4, !dbg !11244
  %119 = shl i32 %118, 3, !dbg !11244
  %120 = or i32 %119, %116, !dbg !11244
  store volatile i32 %120, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11244
  br label %121, !dbg !11245

121:                                              ; preds = %106, %114, %66
  %122 = load i32, i32* %5, align 4, !dbg !11245
  %123 = and i32 %122, 8, !dbg !11247
  %124 = icmp eq i32 %123, 0, !dbg !11248
  br i1 %124, label %149, label %125, !dbg !11249

125:                                              ; preds = %121
  %126 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11250
  %127 = load i32, i32* %126, align 4, !dbg !11250
  %128 = icmp eq i32 %127, 0, !dbg !11253
  br i1 %128, label %139, label %129, !dbg !11254

129:                                              ; preds = %125
  store volatile i32 1, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11255
  %130 = tail call i32 @HAL_GetTick() #25, !dbg !11257
  call void @llvm.dbg.value(metadata i32 %130, metadata !11109, metadata !DIExpression()), !dbg !11119
  br label %131, !dbg !11258

131:                                              ; preds = %135, %129
  %132 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11259
  %133 = and i32 %132, 2, !dbg !11260
  %134 = icmp eq i32 %133, 0, !dbg !11260
  br i1 %134, label %135, label %149, !dbg !11258

135:                                              ; preds = %131
  %136 = tail call i32 @HAL_GetTick() #25, !dbg !11261
  %137 = sub i32 %136, %130, !dbg !11264
  %138 = icmp ugt i32 %137, 2, !dbg !11265
  br i1 %138, label %317, label %131, !dbg !11266, !llvm.loop !11267

139:                                              ; preds = %125
  store volatile i32 0, i32* inttoptr (i32 1111953024 to i32*), align 128, !dbg !11269
  %140 = tail call i32 @HAL_GetTick() #25, !dbg !11271
  call void @llvm.dbg.value(metadata i32 %140, metadata !11109, metadata !DIExpression()), !dbg !11119
  br label %141, !dbg !11272

141:                                              ; preds = %145, %139
  %142 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11273
  %143 = and i32 %142, 2, !dbg !11273
  %144 = icmp eq i32 %143, 0, !dbg !11273
  br i1 %144, label %149, label %145, !dbg !11272

145:                                              ; preds = %141
  %146 = tail call i32 @HAL_GetTick() #25, !dbg !11274
  %147 = sub i32 %146, %140, !dbg !11277
  %148 = icmp ugt i32 %147, 2, !dbg !11278
  br i1 %148, label %317, label %141, !dbg !11279, !llvm.loop !11280

149:                                              ; preds = %131, %141, %121
  %150 = load i32, i32* %5, align 4, !dbg !11282
  %151 = and i32 %150, 4, !dbg !11283
  %152 = icmp eq i32 %151, 0, !dbg !11284
  br i1 %152, label %221, label %153, !dbg !11285

153:                                              ; preds = %149
  call void @llvm.dbg.value(metadata i32 0, metadata !11111, metadata !DIExpression()), !dbg !11286
  %154 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11287
  %155 = and i32 %154, 268435456, !dbg !11287
  %156 = icmp eq i32 %155, 0, !dbg !11287
  br i1 %156, label %157, label %164, !dbg !11288

157:                                              ; preds = %153
  %158 = bitcast i32* %2 to i8*, !dbg !11289
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158), !dbg !11289
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11115, metadata !DIExpression()), !dbg !11289
  store volatile i32 0, i32* %2, align 4, !dbg !11289
  %159 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11289
  %160 = or i32 %159, 268435456, !dbg !11289
  store volatile i32 %160, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11289
  %161 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11289
  %162 = and i32 %161, 268435456, !dbg !11289
  store volatile i32 %162, i32* %2, align 4, !dbg !11289
  %163 = load volatile i32, i32* %2, align 4, !dbg !11289
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158), !dbg !11290
  call void @llvm.dbg.value(metadata i32 1, metadata !11111, metadata !DIExpression()), !dbg !11286
  br label %164, !dbg !11291

164:                                              ; preds = %157, %153
  call void @llvm.dbg.value(metadata i32 undef, metadata !11111, metadata !DIExpression()), !dbg !11286
  %165 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11292
  %166 = and i32 %165, 256, !dbg !11292
  %167 = icmp eq i32 %166, 0, !dbg !11292
  br i1 %167, label %168, label %180, !dbg !11294

168:                                              ; preds = %164
  %169 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11295
  %170 = or i32 %169, 256, !dbg !11295
  store volatile i32 %170, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11295
  %171 = tail call i32 @HAL_GetTick() #25, !dbg !11297
  call void @llvm.dbg.value(metadata i32 %171, metadata !11109, metadata !DIExpression()), !dbg !11119
  br label %172, !dbg !11298

172:                                              ; preds = %176, %168
  %173 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11299
  %174 = and i32 %173, 256, !dbg !11299
  %175 = icmp eq i32 %174, 0, !dbg !11299
  br i1 %175, label %176, label %180, !dbg !11298

176:                                              ; preds = %172
  %177 = tail call i32 @HAL_GetTick() #25, !dbg !11300
  %178 = sub i32 %177, %171, !dbg !11303
  %179 = icmp ugt i32 %178, 2, !dbg !11304
  br i1 %179, label %317, label %172, !dbg !11305, !llvm.loop !11306

180:                                              ; preds = %172, %164
  %181 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11308
  %182 = load i32, i32* %181, align 4, !dbg !11308
  switch i32 %182, label %191 [
    i32 1, label %183
    i32 5, label %186
  ], !dbg !11311

183:                                              ; preds = %180
  %184 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11312
  %185 = or i32 %184, 1, !dbg !11312
  br label %196, !dbg !11312

186:                                              ; preds = %180
  %187 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11314
  %188 = or i32 %187, 4, !dbg !11314
  store volatile i32 %188, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11314
  %189 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11314
  %190 = or i32 %189, 1, !dbg !11314
  br label %196, !dbg !11314

191:                                              ; preds = %180
  %192 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11317
  %193 = and i32 %192, -2, !dbg !11317
  store volatile i32 %193, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11317
  %194 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11317
  %195 = and i32 %194, -5, !dbg !11317
  br label %196

196:                                              ; preds = %186, %191, %183
  %197 = phi i32 [ %190, %186 ], [ %195, %191 ], [ %185, %183 ]
  store volatile i32 %197, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11319
  %198 = load i32, i32* %181, align 4, !dbg !11320
  %199 = icmp eq i32 %198, 0, !dbg !11322
  %200 = tail call i32 @HAL_GetTick() #25, !dbg !11323
  call void @llvm.dbg.value(metadata i32 %200, metadata !11109, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.value(metadata i32 %200, metadata !11109, metadata !DIExpression()), !dbg !11119
  br i1 %199, label %209, label %201, !dbg !11324

201:                                              ; preds = %196, %205
  %202 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11325
  %203 = and i32 %202, 2, !dbg !11327
  %204 = icmp eq i32 %203, 0, !dbg !11327
  br i1 %204, label %205, label %217, !dbg !11328

205:                                              ; preds = %201
  %206 = tail call i32 @HAL_GetTick() #25, !dbg !11329
  %207 = sub i32 %206, %200, !dbg !11332
  %208 = icmp ugt i32 %207, 5000, !dbg !11333
  br i1 %208, label %317, label %201, !dbg !11334, !llvm.loop !11335

209:                                              ; preds = %196, %213
  %210 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11337
  %211 = and i32 %210, 2, !dbg !11337
  %212 = icmp eq i32 %211, 0, !dbg !11337
  br i1 %212, label %217, label %213, !dbg !11339

213:                                              ; preds = %209
  %214 = tail call i32 @HAL_GetTick() #25, !dbg !11340
  %215 = sub i32 %214, %200, !dbg !11343
  %216 = icmp ugt i32 %215, 5000, !dbg !11344
  br i1 %216, label %317, label %209, !dbg !11345, !llvm.loop !11346

217:                                              ; preds = %201, %209
  br i1 %156, label %218, label %221, !dbg !11348

218:                                              ; preds = %217
  %219 = load volatile i32, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11349
  %220 = and i32 %219, -268435457, !dbg !11349
  store volatile i32 %220, i32* inttoptr (i32 1073887296 to i32*), align 64, !dbg !11349
  br label %221, !dbg !11352

221:                                              ; preds = %218, %217, %149
  %222 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11353
  %223 = load i32, i32* %222, align 4, !dbg !11353
  %224 = icmp eq i32 %223, 0, !dbg !11355
  br i1 %224, label %316, label %225, !dbg !11356

225:                                              ; preds = %221
  %226 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11357
  %227 = and i32 %226, 12, !dbg !11357
  %228 = icmp eq i32 %227, 8, !dbg !11360
  br i1 %228, label %277, label %229, !dbg !11361

229:                                              ; preds = %225
  %230 = icmp eq i32 %223, 2, !dbg !11362
  store volatile i32 0, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11365
  %231 = tail call i32 @HAL_GetTick() #25, !dbg !11365
  call void @llvm.dbg.value(metadata i32 %231, metadata !11109, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.value(metadata i32 %231, metadata !11109, metadata !DIExpression()), !dbg !11119
  br i1 %230, label %232, label %269, !dbg !11366

232:                                              ; preds = %229, %236
  %233 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11367
  %234 = and i32 %233, 33554432, !dbg !11367
  %235 = icmp eq i32 %234, 0, !dbg !11367
  br i1 %235, label %240, label %236, !dbg !11369

236:                                              ; preds = %232
  %237 = tail call i32 @HAL_GetTick() #25, !dbg !11370
  %238 = sub i32 %237, %231, !dbg !11373
  %239 = icmp ugt i32 %238, 2, !dbg !11374
  br i1 %239, label %317, label %232, !dbg !11375, !llvm.loop !11376

240:                                              ; preds = %232
  %241 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11378
  %242 = load i32, i32* %241, align 4, !dbg !11378
  %243 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11378
  %244 = load i32, i32* %243, align 4, !dbg !11378
  %245 = or i32 %244, %242, !dbg !11378
  %246 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11378
  %247 = load i32, i32* %246, align 4, !dbg !11378
  %248 = shl i32 %247, 6, !dbg !11378
  %249 = or i32 %245, %248, !dbg !11378
  %250 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11378
  %251 = load i32, i32* %250, align 4, !dbg !11378
  %252 = shl i32 %251, 15, !dbg !11378
  %253 = add i32 %252, -65536, !dbg !11378
  %254 = and i32 %253, -65536, !dbg !11378
  %255 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11378
  %256 = load i32, i32* %255, align 4, !dbg !11378
  %257 = shl i32 %256, 24, !dbg !11378
  %258 = or i32 %249, %257, !dbg !11378
  %259 = or i32 %258, %254, !dbg !11378
  store volatile i32 %259, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11378
  store volatile i32 1, i32* inttoptr (i32 1111949408 to i32*), align 32, !dbg !11379
  %260 = tail call i32 @HAL_GetTick() #25, !dbg !11380
  call void @llvm.dbg.value(metadata i32 %260, metadata !11109, metadata !DIExpression()), !dbg !11119
  br label %261, !dbg !11381

261:                                              ; preds = %265, %240
  %262 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11382
  %263 = and i32 %262, 33554432, !dbg !11383
  %264 = icmp eq i32 %263, 0, !dbg !11383
  br i1 %264, label %265, label %316, !dbg !11381

265:                                              ; preds = %261
  %266 = tail call i32 @HAL_GetTick() #25, !dbg !11384
  %267 = sub i32 %266, %260, !dbg !11387
  %268 = icmp ugt i32 %267, 2, !dbg !11388
  br i1 %268, label %317, label %261, !dbg !11389, !llvm.loop !11390

269:                                              ; preds = %229, %273
  %270 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11392
  %271 = and i32 %270, 33554432, !dbg !11392
  %272 = icmp eq i32 %271, 0, !dbg !11392
  br i1 %272, label %316, label %273, !dbg !11394

273:                                              ; preds = %269
  %274 = tail call i32 @HAL_GetTick() #25, !dbg !11395
  %275 = sub i32 %274, %231, !dbg !11398
  %276 = icmp ugt i32 %275, 2, !dbg !11399
  br i1 %276, label %317, label %269, !dbg !11400, !llvm.loop !11401

277:                                              ; preds = %225
  %278 = icmp eq i32 %223, 1, !dbg !11403
  br i1 %278, label %317, label %279, !dbg !11406

279:                                              ; preds = %277
  %280 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11407
  call void @llvm.dbg.value(metadata i32 %280, metadata !11110, metadata !DIExpression()), !dbg !11119
  %281 = and i32 %280, 4194304, !dbg !11409
  %282 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11411
  %283 = load i32, i32* %282, align 4, !dbg !11411
  %284 = icmp eq i32 %281, %283, !dbg !11412
  br i1 %284, label %285, label %317, !dbg !11413

285:                                              ; preds = %279
  %286 = and i32 %280, 63, !dbg !11414
  %287 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11415
  %288 = load i32, i32* %287, align 4, !dbg !11415
  %289 = icmp eq i32 %286, %288, !dbg !11416
  br i1 %289, label %290, label %317, !dbg !11417

290:                                              ; preds = %285
  %291 = and i32 %280, 32704, !dbg !11418
  %292 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11419
  %293 = load i32, i32* %292, align 4, !dbg !11419
  %294 = shl i32 %293, 6, !dbg !11420
  %295 = icmp eq i32 %291, %294, !dbg !11421
  br i1 %295, label %296, label %317, !dbg !11422

296:                                              ; preds = %290
  %297 = and i32 %280, 196608, !dbg !11423
  %298 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11424
  %299 = load i32, i32* %298, align 4, !dbg !11424
  %300 = shl i32 %299, 15, !dbg !11425
  %301 = add i32 %300, -65536, !dbg !11425
  %302 = and i32 %301, -65536, !dbg !11425
  %303 = icmp eq i32 %297, %302, !dbg !11426
  br i1 %303, label %304, label %317, !dbg !11427

304:                                              ; preds = %296
  %305 = and i32 %280, 251658240, !dbg !11428
  %306 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11429
  %307 = load i32, i32* %306, align 4, !dbg !11429
  %308 = shl i32 %307, 24, !dbg !11430
  %309 = icmp eq i32 %305, %308, !dbg !11431
  br i1 %309, label %310, label %317, !dbg !11432

310:                                              ; preds = %304
  %311 = and i32 %280, 1879048192, !dbg !11433
  %312 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 6, !dbg !11434
  %313 = load i32, i32* %312, align 4, !dbg !11434
  %314 = shl i32 %313, 28, !dbg !11435
  %315 = icmp eq i32 %311, %314, !dbg !11436
  br i1 %315, label %316, label %317, !dbg !11437

316:                                              ; preds = %269, %261, %310, %221
  br label %317, !dbg !11438

317:                                              ; preds = %54, %62, %100, %110, %135, %145, %176, %205, %213, %273, %236, %265, %279, %285, %290, %296, %304, %310, %277, %86, %25, %1, %316
  %318 = phi i32 [ 0, %316 ], [ 1, %1 ], [ 1, %25 ], [ 1, %86 ], [ 1, %277 ], [ 1, %310 ], [ 1, %304 ], [ 1, %296 ], [ 1, %290 ], [ 1, %285 ], [ 1, %279 ], [ 3, %265 ], [ 3, %236 ], [ 3, %273 ], [ 3, %213 ], [ 3, %205 ], [ 3, %176 ], [ 3, %145 ], [ 3, %135 ], [ 3, %110 ], [ 3, %100 ], [ 3, %62 ], [ 3, %54 ], !dbg !11119
  ret i32 %318, !dbg !11439
}

; Function Attrs: optsize
declare !dbg !11440 dso_local i32 @HAL_GetTick() local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local i32 @HAL_RCC_ClockConfig(%struct.RCC_ClkInitTypeDef* noundef readonly %0, i32 noundef %1) local_unnamed_addr #1 !dbg !11442 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11455, metadata !DIExpression()), !dbg !11458
  call void @llvm.dbg.value(metadata i32 %1, metadata !11456, metadata !DIExpression()), !dbg !11458
  %3 = icmp eq %struct.RCC_ClkInitTypeDef* %0, null, !dbg !11459
  br i1 %3, label %115, label %4, !dbg !11461

4:                                                ; preds = %2
  %5 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11462
  %6 = and i32 %5, 7, !dbg !11462
  %7 = icmp ult i32 %6, %1, !dbg !11464
  br i1 %7, label %8, label %13, !dbg !11465

8:                                                ; preds = %4
  %9 = trunc i32 %1 to i8, !dbg !11466
  store volatile i8 %9, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11466
  %10 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11468
  %11 = and i32 %10, 7, !dbg !11468
  %12 = icmp eq i32 %11, %1, !dbg !11470
  br i1 %12, label %13, label %115, !dbg !11471

13:                                               ; preds = %8, %4
  %14 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11472
  %15 = load i32, i32* %14, align 4, !dbg !11472
  %16 = and i32 %15, 2, !dbg !11474
  %17 = icmp eq i32 %16, 0, !dbg !11475
  br i1 %17, label %39, label %18, !dbg !11476

18:                                               ; preds = %13
  %19 = and i32 %15, 4, !dbg !11477
  %20 = icmp eq i32 %19, 0, !dbg !11480
  br i1 %20, label %25, label %21, !dbg !11481

21:                                               ; preds = %18
  %22 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11482
  %23 = or i32 %22, 7168, !dbg !11482
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11482
  %24 = load i32, i32* %14, align 4, !dbg !11484
  br label %25, !dbg !11486

25:                                               ; preds = %21, %18
  %26 = phi i32 [ %24, %21 ], [ %15, %18 ], !dbg !11484
  %27 = and i32 %26, 8, !dbg !11487
  %28 = icmp eq i32 %27, 0, !dbg !11488
  br i1 %28, label %32, label %29, !dbg !11489

29:                                               ; preds = %25
  %30 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11490
  %31 = or i32 %30, 57344, !dbg !11490
  store volatile i32 %31, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11490
  br label %32, !dbg !11492

32:                                               ; preds = %29, %25
  %33 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11493
  %34 = and i32 %33, -241, !dbg !11493
  %35 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11493
  %36 = load i32, i32* %35, align 4, !dbg !11493
  %37 = or i32 %34, %36, !dbg !11493
  store volatile i32 %37, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11493
  %38 = load i32, i32* %14, align 4, !dbg !11494
  br label %39, !dbg !11496

39:                                               ; preds = %32, %13
  %40 = phi i32 [ %38, %32 ], [ %15, %13 ], !dbg !11494
  %41 = and i32 %40, 1, !dbg !11497
  %42 = icmp eq i32 %41, 0, !dbg !11498
  br i1 %42, label %73, label %43, !dbg !11499

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11500
  %45 = load i32, i32* %44, align 4, !dbg !11500
  switch i32 %45, label %54 [
    i32 1, label %46
    i32 2, label %50
    i32 3, label %50
  ], !dbg !11503

46:                                               ; preds = %43
  %47 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11504
  %48 = and i32 %47, 131072, !dbg !11507
  %49 = icmp eq i32 %48, 0, !dbg !11507
  br i1 %49, label %115, label %58, !dbg !11508

50:                                               ; preds = %43, %43
  %51 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11509
  %52 = and i32 %51, 33554432, !dbg !11513
  %53 = icmp eq i32 %52, 0, !dbg !11513
  br i1 %53, label %115, label %58, !dbg !11514

54:                                               ; preds = %43
  %55 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11515
  %56 = and i32 %55, 2, !dbg !11518
  %57 = icmp eq i32 %56, 0, !dbg !11518
  br i1 %57, label %115, label %58, !dbg !11519

58:                                               ; preds = %50, %54, %46
  %59 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11520
  %60 = and i32 %59, -4, !dbg !11520
  %61 = or i32 %60, %45, !dbg !11520
  store volatile i32 %61, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11520
  %62 = tail call i32 @HAL_GetTick() #25, !dbg !11521
  call void @llvm.dbg.value(metadata i32 %62, metadata !11457, metadata !DIExpression()), !dbg !11458
  br label %63, !dbg !11522

63:                                               ; preds = %69, %58
  %64 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11523
  %65 = and i32 %64, 12, !dbg !11523
  %66 = load i32, i32* %44, align 4, !dbg !11524
  %67 = shl i32 %66, 2, !dbg !11525
  %68 = icmp eq i32 %65, %67, !dbg !11526
  br i1 %68, label %73, label %69, !dbg !11522

69:                                               ; preds = %63
  %70 = tail call i32 @HAL_GetTick() #25, !dbg !11527
  %71 = sub i32 %70, %62, !dbg !11530
  %72 = icmp ugt i32 %71, 5000, !dbg !11531
  br i1 %72, label %115, label %63, !dbg !11532, !llvm.loop !11533

73:                                               ; preds = %63, %39
  %74 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11535
  %75 = and i32 %74, 7, !dbg !11535
  %76 = icmp ugt i32 %75, %1, !dbg !11537
  br i1 %76, label %77, label %82, !dbg !11538

77:                                               ; preds = %73
  %78 = trunc i32 %1 to i8, !dbg !11539
  store volatile i8 %78, i8* inttoptr (i32 1073888256 to i8*), align 1024, !dbg !11539
  %79 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11541
  %80 = and i32 %79, 7, !dbg !11541
  %81 = icmp eq i32 %80, %1, !dbg !11543
  br i1 %81, label %82, label %115, !dbg !11544

82:                                               ; preds = %77, %73
  %83 = load i32, i32* %14, align 4, !dbg !11545
  %84 = and i32 %83, 4, !dbg !11547
  %85 = icmp eq i32 %84, 0, !dbg !11548
  br i1 %85, label %93, label %86, !dbg !11549

86:                                               ; preds = %82
  %87 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11550
  %88 = and i32 %87, -7169, !dbg !11550
  %89 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11550
  %90 = load i32, i32* %89, align 4, !dbg !11550
  %91 = or i32 %88, %90, !dbg !11550
  store volatile i32 %91, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11550
  %92 = load i32, i32* %14, align 4, !dbg !11552
  br label %93, !dbg !11554

93:                                               ; preds = %86, %82
  %94 = phi i32 [ %92, %86 ], [ %83, %82 ], !dbg !11552
  %95 = and i32 %94, 8, !dbg !11555
  %96 = icmp eq i32 %95, 0, !dbg !11556
  br i1 %96, label %104, label %97, !dbg !11557

97:                                               ; preds = %93
  %98 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11558
  %99 = and i32 %98, -57345, !dbg !11558
  %100 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11558
  %101 = load i32, i32* %100, align 4, !dbg !11558
  %102 = shl i32 %101, 3, !dbg !11558
  %103 = or i32 %102, %99, !dbg !11558
  store volatile i32 %103, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11558
  br label %104, !dbg !11560

104:                                              ; preds = %97, %93
  %105 = tail call i32 @HAL_RCC_GetSysClockFreq() #24, !dbg !11561
  %106 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11562
  %107 = lshr i32 %106, 4, !dbg !11563
  %108 = and i32 %107, 15, !dbg !11563
  %109 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %108, !dbg !11564
  %110 = load i8, i8* %109, align 1, !dbg !11564
  %111 = zext i8 %110 to i32, !dbg !11564
  %112 = lshr i32 %105, %111, !dbg !11565
  store i32 %112, i32* @SystemCoreClock, align 4, !dbg !11566
  %113 = load i32, i32* @uwTickPrio, align 4, !dbg !11567
  %114 = tail call i32 @HAL_InitTick(i32 noundef %113) #25, !dbg !11568
  br label %115, !dbg !11569

115:                                              ; preds = %69, %77, %54, %50, %46, %8, %2, %104
  %116 = phi i32 [ 0, %104 ], [ 1, %2 ], [ 1, %8 ], [ 1, %46 ], [ 1, %50 ], [ 1, %54 ], [ 1, %77 ], [ 3, %69 ], !dbg !11458
  ret i32 %116, !dbg !11570
}

; Function Attrs: noinline nounwind optsize
define weak dso_local i32 @HAL_RCC_GetSysClockFreq() local_unnamed_addr #1 !dbg !11571 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11573, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i32 0, metadata !11574, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i32 0, metadata !11575, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i32 0, metadata !11576, metadata !DIExpression()), !dbg !11577
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11578
  %2 = and i32 %1, 12, !dbg !11579
  %3 = icmp eq i32 %2, 8, !dbg !11580
  br i1 %3, label %4, label %21, !dbg !11580

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11581
  %6 = and i32 %5, 63, !dbg !11584
  call void @llvm.dbg.value(metadata i32 %6, metadata !11573, metadata !DIExpression()), !dbg !11577
  %7 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11585
  %8 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11587
  %9 = lshr i32 %8, 6, !dbg !11587
  %10 = and i32 %9, 511, !dbg !11587
  %11 = zext i32 %10 to i64, !dbg !11587
  %12 = mul nuw nsw i64 %11, 16000000, !dbg !11587
  %13 = zext i32 %6 to i64, !dbg !11587
  %14 = udiv i64 %12, %13, !dbg !11587
  %15 = trunc i64 %14 to i32, !dbg !11587
  call void @llvm.dbg.value(metadata i32 %15, metadata !11574, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i32 %15, metadata !11574, metadata !DIExpression()), !dbg !11577
  call void @llvm.dbg.value(metadata i32 %15, metadata !11574, metadata !DIExpression()), !dbg !11577
  %16 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11588
  %17 = lshr i32 %16, 15, !dbg !11589
  %18 = and i32 %17, 6, !dbg !11589
  %19 = add nuw nsw i32 %18, 2, !dbg !11589
  call void @llvm.dbg.value(metadata i32 %19, metadata !11575, metadata !DIExpression()), !dbg !11577
  %20 = udiv i32 %15, %19, !dbg !11590
  call void @llvm.dbg.value(metadata i32 %20, metadata !11576, metadata !DIExpression()), !dbg !11577
  br label %21, !dbg !11591

21:                                               ; preds = %0, %4
  %22 = phi i32 [ %20, %4 ], [ 16000000, %0 ], !dbg !11592
  call void @llvm.dbg.value(metadata i32 %22, metadata !11576, metadata !DIExpression()), !dbg !11577
  ret i32 %22, !dbg !11593
}

; Function Attrs: optsize
declare !dbg !11594 dso_local i32 @HAL_InitTick(i32 noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_MCOConfig(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !11597 {
  %4 = alloca %struct.RCC_ClkInitTypeDef, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11601, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %1, metadata !11602, metadata !DIExpression()), !dbg !11618
  call void @llvm.dbg.value(metadata i32 %2, metadata !11603, metadata !DIExpression()), !dbg !11618
  %6 = bitcast %struct.RCC_ClkInitTypeDef* %4 to i8*, !dbg !11619
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11619
  call void @llvm.dbg.declare(metadata %struct.RCC_ClkInitTypeDef* %4, metadata !11604, metadata !DIExpression()), !dbg !11620
  %7 = icmp eq i32 %0, 0, !dbg !11621
  br i1 %7, label %8, label %24, !dbg !11622

8:                                                ; preds = %3
  %9 = bitcast i32* %5 to i8*, !dbg !11623
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9), !dbg !11623
  call void @llvm.dbg.declare(metadata i32* %5, metadata !11614, metadata !DIExpression()), !dbg !11623
  store volatile i32 0, i32* %5, align 4, !dbg !11623
  %10 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11623
  %11 = or i32 %10, 1, !dbg !11623
  store volatile i32 %11, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11623
  %12 = load volatile i32, i32* inttoptr (i32 1073887280 to i32*), align 16, !dbg !11623
  %13 = and i32 %12, 1, !dbg !11623
  store volatile i32 %13, i32* %5, align 4, !dbg !11623
  %14 = load volatile i32, i32* %5, align 4, !dbg !11623
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9), !dbg !11624
  %15 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 0, !dbg !11625
  store i32 256, i32* %15, align 4, !dbg !11626
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 1, !dbg !11627
  store i32 2, i32* %16, align 4, !dbg !11628
  %17 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 3, !dbg !11629
  store i32 3, i32* %17, align 4, !dbg !11630
  %18 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 2, !dbg !11631
  store i32 0, i32* %18, align 4, !dbg !11632
  %19 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %4, i32 0, i32 4, !dbg !11633
  store i32 0, i32* %19, align 4, !dbg !11634
  call void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef nonnull inttoptr (i32 1073872896 to %struct.GPIO_TypeDef*), %struct.RCC_ClkInitTypeDef* noundef nonnull %4) #25, !dbg !11635
  %20 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11636
  %21 = and i32 %20, -123731969, !dbg !11636
  %22 = or i32 %2, %1, !dbg !11636
  %23 = or i32 %22, %21, !dbg !11636
  store volatile i32 %23, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11636
  br label %24, !dbg !11637

24:                                               ; preds = %8, %3
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !11638
  ret void, !dbg !11638
}

; Function Attrs: optsize
declare !dbg !11639 dso_local void @HAL_GPIO_Init(%struct.GPIO_TypeDef* noundef, %struct.RCC_ClkInitTypeDef* noundef) local_unnamed_addr #0

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_EnableCSS() local_unnamed_addr #14 !dbg !11643 {
  store volatile i32 1, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11644
  ret void, !dbg !11645
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @HAL_RCC_DisableCSS() local_unnamed_addr #14 !dbg !11646 {
  store volatile i32 0, i32* inttoptr (i32 1111949388 to i32*), align 4, !dbg !11647
  ret void, !dbg !11648
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @HAL_RCC_GetHCLKFreq() local_unnamed_addr #8 !dbg !11649 {
  %1 = load i32, i32* @SystemCoreClock, align 4, !dbg !11650
  ret i32 %1, !dbg !11651
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK1Freq() local_unnamed_addr #15 !dbg !11652 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11653
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11654
  %3 = lshr i32 %2, 10, !dbg !11655
  %4 = and i32 %3, 7, !dbg !11655
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11656
  %6 = load i8, i8* %5, align 1, !dbg !11656
  %7 = zext i8 %6 to i32, !dbg !11656
  %8 = lshr i32 %1, %7, !dbg !11657
  ret i32 %8, !dbg !11658
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @HAL_RCC_GetPCLK2Freq() local_unnamed_addr #15 !dbg !11659 {
  %1 = tail call i32 @HAL_RCC_GetHCLKFreq() #24, !dbg !11660
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11661
  %3 = lshr i32 %2, 13, !dbg !11662
  %4 = and i32 %3, 7, !dbg !11662
  %5 = getelementptr inbounds [8 x i8], [8 x i8]* @APBPrescTable, i32 0, i32 %4, !dbg !11663
  %6 = load i8, i8* %5, align 1, !dbg !11663
  %7 = zext i8 %6 to i32, !dbg !11663
  %8 = lshr i32 %1, %7, !dbg !11664
  ret i32 %8, !dbg !11665
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_GetOscConfig(%struct.RCC_OscInitTypeDef* noundef %0) local_unnamed_addr #1 !dbg !11666 {
  call void @llvm.dbg.value(metadata %struct.RCC_OscInitTypeDef* %0, metadata !11670, metadata !DIExpression()), !dbg !11671
  %2 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 0, !dbg !11672
  store i32 15, i32* %2, align 4, !dbg !11673
  %3 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11674
  %4 = and i32 %3, 262144, !dbg !11676
  %5 = icmp eq i32 %4, 0, !dbg !11677
  br i1 %5, label %8, label %6, !dbg !11678

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11679
  store i32 327680, i32* %7, align 4, !dbg !11681
  br label %15, !dbg !11682

8:                                                ; preds = %1
  %9 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11683
  %10 = and i32 %9, 65536, !dbg !11685
  %11 = icmp eq i32 %10, 0, !dbg !11686
  %12 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 1, !dbg !11687
  br i1 %11, label %14, label %13, !dbg !11688

13:                                               ; preds = %8
  store i32 65536, i32* %12, align 4, !dbg !11689
  br label %15, !dbg !11691

14:                                               ; preds = %8
  store i32 0, i32* %12, align 4, !dbg !11692
  br label %15

15:                                               ; preds = %13, %14, %6
  %16 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11694
  %17 = and i32 %16, 1, !dbg !11696
  %18 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 3, !dbg !11697
  store i32 %17, i32* %18, align 4, !dbg !11699
  %19 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11700
  %20 = lshr i32 %19, 3, !dbg !11701
  %21 = and i32 %20, 31, !dbg !11701
  %22 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 4, !dbg !11702
  store i32 %21, i32* %22, align 4, !dbg !11703
  %23 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11704
  %24 = and i32 %23, 4, !dbg !11706
  %25 = icmp eq i32 %24, 0, !dbg !11707
  br i1 %25, label %28, label %26, !dbg !11708

26:                                               ; preds = %15
  %27 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11709
  store i32 5, i32* %27, align 4, !dbg !11711
  br label %35, !dbg !11712

28:                                               ; preds = %15
  %29 = load volatile i32, i32* inttoptr (i32 1073887344 to i32*), align 16, !dbg !11713
  %30 = and i32 %29, 1, !dbg !11715
  %31 = icmp eq i32 %30, 0, !dbg !11716
  %32 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 2, !dbg !11717
  br i1 %31, label %34, label %33, !dbg !11718

33:                                               ; preds = %28
  store i32 1, i32* %32, align 4, !dbg !11719
  br label %35, !dbg !11721

34:                                               ; preds = %28
  store i32 0, i32* %32, align 4, !dbg !11722
  br label %35

35:                                               ; preds = %33, %34, %26
  %36 = load volatile i32, i32* inttoptr (i32 1073887348 to i32*), align 4, !dbg !11724
  %37 = and i32 %36, 1, !dbg !11726
  %38 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 5, !dbg !11727
  store i32 %37, i32* %38, align 4, !dbg !11729
  %39 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !11730
  %40 = and i32 %39, 16777216, !dbg !11732
  %41 = icmp eq i32 %40, 0, !dbg !11733
  %42 = select i1 %41, i32 1, i32 2, !dbg !11734
  %43 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 0, !dbg !11735
  store i32 %42, i32* %43, align 4, !dbg !11737
  %44 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11738
  %45 = and i32 %44, 4194304, !dbg !11739
  %46 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 1, !dbg !11740
  store i32 %45, i32* %46, align 4, !dbg !11741
  %47 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11742
  %48 = and i32 %47, 63, !dbg !11743
  %49 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 2, !dbg !11744
  store i32 %48, i32* %49, align 4, !dbg !11745
  %50 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11746
  %51 = lshr i32 %50, 6, !dbg !11747
  %52 = and i32 %51, 511, !dbg !11747
  %53 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 3, !dbg !11748
  store i32 %52, i32* %53, align 4, !dbg !11749
  %54 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11750
  %55 = shl i32 %54, 1, !dbg !11751
  %56 = and i32 %55, 393216, !dbg !11751
  %57 = add nuw nsw i32 %56, 131072, !dbg !11751
  %58 = lshr exact i32 %57, 16, !dbg !11752
  %59 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 4, !dbg !11753
  store i32 %58, i32* %59, align 4, !dbg !11754
  %60 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !11755
  %61 = lshr i32 %60, 24, !dbg !11756
  %62 = and i32 %61, 15, !dbg !11756
  %63 = getelementptr inbounds %struct.RCC_OscInitTypeDef, %struct.RCC_OscInitTypeDef* %0, i32 0, i32 6, i32 5, !dbg !11757
  store i32 %62, i32* %63, align 4, !dbg !11758
  ret void, !dbg !11759
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @HAL_RCC_GetClockConfig(%struct.RCC_ClkInitTypeDef* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #15 !dbg !11760 {
  call void @llvm.dbg.value(metadata %struct.RCC_ClkInitTypeDef* %0, metadata !11764, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.value(metadata i32* %1, metadata !11765, metadata !DIExpression()), !dbg !11766
  %3 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 0, !dbg !11767
  store i32 15, i32* %3, align 4, !dbg !11768
  %4 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11769
  %5 = and i32 %4, 3, !dbg !11770
  %6 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 1, !dbg !11771
  store i32 %5, i32* %6, align 4, !dbg !11772
  %7 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11773
  %8 = and i32 %7, 240, !dbg !11774
  %9 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 2, !dbg !11775
  store i32 %8, i32* %9, align 4, !dbg !11776
  %10 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11777
  %11 = and i32 %10, 7168, !dbg !11778
  %12 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 3, !dbg !11779
  store i32 %11, i32* %12, align 4, !dbg !11780
  %13 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !11781
  %14 = lshr i32 %13, 3, !dbg !11782
  %15 = and i32 %14, 7168, !dbg !11782
  %16 = getelementptr inbounds %struct.RCC_ClkInitTypeDef, %struct.RCC_ClkInitTypeDef* %0, i32 0, i32 4, !dbg !11783
  store i32 %15, i32* %16, align 4, !dbg !11784
  %17 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11785
  %18 = and i32 %17, 7, !dbg !11786
  store i32 %18, i32* %1, align 4, !dbg !11787
  ret void, !dbg !11788
}

; Function Attrs: noinline nounwind optsize
define dso_local void @HAL_RCC_NMI_IRQHandler() local_unnamed_addr #1 !dbg !11789 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887244 to i32*), align 4, !dbg !11790
  %2 = and i32 %1, 128, !dbg !11790
  %3 = icmp eq i32 %2, 0, !dbg !11790
  br i1 %3, label %5, label %4, !dbg !11792

4:                                                ; preds = %0
  tail call void @HAL_RCC_CSSCallback() #24, !dbg !11793
  store volatile i8 -128, i8* inttoptr (i32 1073887246 to i8*), align 2, !dbg !11795
  br label %5, !dbg !11796

5:                                                ; preds = %4, %0
  ret void, !dbg !11797
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @HAL_RCC_CSSCallback() local_unnamed_addr #1 !dbg !11798 {
  ret void, !dbg !11799
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @LL_Init1msTick(i32 noundef %0) local_unnamed_addr #14 !dbg !11800 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11803, metadata !DIExpression()), !dbg !11804
  tail call fastcc void @LL_InitTick(i32 noundef %0) #24, !dbg !11805
  ret void, !dbg !11806
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_InitTick(i32 noundef %0) unnamed_addr #14 !dbg !11807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11810, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.value(metadata i32 1000, metadata !11811, metadata !DIExpression()), !dbg !11812
  %2 = udiv i32 %0, 1000, !dbg !11813
  %3 = add nsw i32 %2, -1, !dbg !11814
  store volatile i32 %3, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11815
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11816
  store volatile i32 5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11817
  ret void, !dbg !11818
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @LL_mDelay(i32 noundef %0) local_unnamed_addr #19 !dbg !11819 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11821, metadata !DIExpression()), !dbg !11823
  %3 = bitcast i32* %2 to i8*, !dbg !11824
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11824
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11822, metadata !DIExpression()), !dbg !11825
  %4 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11826
  store volatile i32 %4, i32* %2, align 4, !dbg !11825
  %5 = load volatile i32, i32* %2, align 4, !dbg !11827
  %6 = icmp eq i32 %0, -1, !dbg !11828
  %7 = add i32 %0, 1
  call void @llvm.dbg.value(metadata i32 undef, metadata !11821, metadata !DIExpression()), !dbg !11823
  %8 = select i1 %6, i32 -1, i32 %7, !dbg !11823
  call void @llvm.dbg.value(metadata i32 %8, metadata !11821, metadata !DIExpression()), !dbg !11823
  br label %9, !dbg !11830

9:                                                ; preds = %1, %9
  %10 = phi i32 [ %14, %9 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11821, metadata !DIExpression()), !dbg !11823
  %11 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11831
  call void @llvm.dbg.value(metadata i32 undef, metadata !11821, metadata !DIExpression()), !dbg !11823
  %12 = shl i32 %11, 15, !dbg !11823
  %13 = ashr i32 %12, 31, !dbg !11823
  %14 = add i32 %13, %10, !dbg !11823
  call void @llvm.dbg.value(metadata i32 %14, metadata !11821, metadata !DIExpression()), !dbg !11823
  %15 = icmp eq i32 %14, 0, !dbg !11830
  br i1 %15, label %16, label %9, !dbg !11830

16:                                               ; preds = %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11834
  ret void, !dbg !11834
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LL_SetSystemCoreClock(i32 noundef %0) local_unnamed_addr #7 !dbg !11835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11837, metadata !DIExpression()), !dbg !11838
  store i32 %0, i32* @SystemCoreClock, align 4, !dbg !11839
  ret void, !dbg !11840
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_SetFlashLatency(i32 noundef %0) local_unnamed_addr #14 !dbg !11841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11846, metadata !DIExpression()), !dbg !11851
  call void @llvm.dbg.value(metadata i32 0, metadata !11849, metadata !DIExpression()), !dbg !11851
  call void @llvm.dbg.value(metadata i32 0, metadata !11850, metadata !DIExpression()), !dbg !11851
  %2 = icmp eq i32 %0, 0, !dbg !11852
  br i1 %2, label %50, label %3, !dbg !11854

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11855
  %5 = icmp eq i32 %4, 49152, !dbg !11858
  br i1 %5, label %6, label %15, !dbg !11859

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !11849, metadata !DIExpression()), !dbg !11851
  %7 = add i32 %0, -64000001, !dbg !11860
  %8 = icmp ult i32 %7, 26000000, !dbg !11860
  br i1 %8, label %15, label %9, !dbg !11860

9:                                                ; preds = %6
  %10 = icmp ult i32 %0, 90000001, !dbg !11863
  %11 = select i1 %10, i32 0, i32 3, !dbg !11865
  call void @llvm.dbg.value(metadata i32 %11, metadata !11849, metadata !DIExpression()), !dbg !11851
  %12 = add i32 %0, -30000001, !dbg !11866
  %13 = icmp ult i32 %12, 60000000, !dbg !11866
  %14 = select i1 %13, i32 1, i32 %11, !dbg !11866
  call void @llvm.dbg.value(metadata i32 %14, metadata !11849, metadata !DIExpression()), !dbg !11851
  br label %15, !dbg !11866

15:                                               ; preds = %6, %9, %3
  %16 = phi i32 [ %14, %9 ], [ 0, %3 ], [ 2, %6 ], !dbg !11851
  call void @llvm.dbg.value(metadata i32 %16, metadata !11849, metadata !DIExpression()), !dbg !11851
  %17 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11869
  %18 = icmp eq i32 %17, 32768, !dbg !11871
  br i1 %18, label %19, label %27, !dbg !11872

19:                                               ; preds = %15
  %20 = icmp ugt i32 %0, 64000000, !dbg !11873
  %21 = icmp eq i32 %16, 0
  %22 = and i1 %20, %21, !dbg !11876
  br i1 %22, label %27, label %23, !dbg !11876

23:                                               ; preds = %19
  %24 = icmp ugt i32 %0, 30000000, !dbg !11877
  %25 = and i1 %24, %21, !dbg !11880
  %26 = select i1 %25, i32 1, i32 %16, !dbg !11880
  call void @llvm.dbg.value(metadata i32 %26, metadata !11849, metadata !DIExpression()), !dbg !11851
  br label %27, !dbg !11880

27:                                               ; preds = %19, %23, %15
  %28 = phi i32 [ %26, %23 ], [ %16, %15 ], [ 2, %19 ], !dbg !11881
  call void @llvm.dbg.value(metadata i32 %28, metadata !11849, metadata !DIExpression()), !dbg !11851
  %29 = tail call fastcc i32 @LL_PWR_GetRegulVoltageScaling() #24, !dbg !11882
  %30 = icmp eq i32 %29, 16384, !dbg !11884
  br i1 %30, label %31, label %39, !dbg !11885

31:                                               ; preds = %27
  %32 = icmp ugt i32 %0, 64000000, !dbg !11886
  %33 = icmp eq i32 %28, 0
  %34 = select i1 %32, i1 %33, i1 false, !dbg !11889
  br i1 %34, label %39, label %35, !dbg !11889

35:                                               ; preds = %31
  %36 = icmp ugt i32 %0, 30000000, !dbg !11890
  %37 = select i1 %36, i1 %33, i1 false, !dbg !11893
  %38 = select i1 %37, i32 1, i32 %28, !dbg !11893
  call void @llvm.dbg.value(metadata i32 %38, metadata !11849, metadata !DIExpression()), !dbg !11851
  br label %39, !dbg !11893

39:                                               ; preds = %31, %35, %27
  %40 = phi i32 [ %38, %35 ], [ %28, %27 ], [ 2, %31 ], !dbg !11881
  call void @llvm.dbg.value(metadata i32 %40, metadata !11849, metadata !DIExpression()), !dbg !11851
  tail call fastcc void @LL_FLASH_SetLatency(i32 noundef %40) #24, !dbg !11894
  call void @llvm.dbg.value(metadata i32 2, metadata !11847, metadata !DIExpression()), !dbg !11851
  br label %41, !dbg !11895

41:                                               ; preds = %41, %39
  %42 = phi i32 [ 2, %39 ], [ %44, %41 ], !dbg !11881
  call void @llvm.dbg.value(metadata i32 %42, metadata !11847, metadata !DIExpression()), !dbg !11851
  %43 = tail call fastcc i32 @LL_FLASH_GetLatency() #24, !dbg !11896
  call void @llvm.dbg.value(metadata i32 %43, metadata !11848, metadata !DIExpression()), !dbg !11851
  %44 = add nsw i32 %42, -1, !dbg !11898
  call void @llvm.dbg.value(metadata i32 %44, metadata !11847, metadata !DIExpression()), !dbg !11851
  %45 = icmp ne i32 %43, %40, !dbg !11899
  %46 = icmp ne i32 %44, 0, !dbg !11900
  %47 = select i1 %45, i1 %46, i1 false, !dbg !11900
  br i1 %47, label %41, label %48, !dbg !11901, !llvm.loop !11902

48:                                               ; preds = %41
  %49 = zext i1 %45 to i32
  br label %50

50:                                               ; preds = %48, %1
  %51 = phi i32 [ 1, %1 ], [ %49, %48 ], !dbg !11904
  call void @llvm.dbg.value(metadata i32 %51, metadata !11850, metadata !DIExpression()), !dbg !11851
  ret i32 %51, !dbg !11905
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_PWR_GetRegulVoltageScaling() unnamed_addr #15 !dbg !11906 {
  %1 = load volatile i32, i32* inttoptr (i32 1073770496 to i32*), align 4096, !dbg !11908
  %2 = and i32 %1, 49152, !dbg !11908
  ret i32 %2, !dbg !11909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_FLASH_SetLatency(i32 noundef %0) unnamed_addr #14 !dbg !11910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11912, metadata !DIExpression()), !dbg !11913
  %2 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11914
  %3 = and i32 %2, -8, !dbg !11914
  %4 = or i32 %3, %0, !dbg !11914
  store volatile i32 %4, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11914
  ret void, !dbg !11915
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_FLASH_GetLatency() unnamed_addr #15 !dbg !11916 {
  %1 = load volatile i32, i32* inttoptr (i32 1073888256 to i32*), align 1024, !dbg !11917
  %2 = and i32 %1, 7, !dbg !11917
  ret i32 %2, !dbg !11918
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSI(%struct._thread_stack_info* nocapture noundef readonly %0, %struct._thread_stack_info* nocapture noundef readonly %1) local_unnamed_addr #14 !dbg !11919 {
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %0, metadata !11937, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11938, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata i32 0, metadata !11939, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.value(metadata i32 0, metadata !11940, metadata !DIExpression()), !dbg !11941
  %3 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !11942
  %4 = icmp eq i32 %3, 0, !dbg !11944
  br i1 %4, label %5, label %21, !dbg !11945

5:                                                ; preds = %2
  %6 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef 16000000, %struct._thread_stack_info* noundef %0) #24, !dbg !11946
  call void @llvm.dbg.value(metadata i32 %6, metadata !11940, metadata !DIExpression()), !dbg !11941
  %7 = tail call fastcc i32 @LL_RCC_HSI_IsReady.163() #24, !dbg !11948
  %8 = icmp eq i32 %7, 1, !dbg !11950
  br i1 %8, label %13, label %9, !dbg !11951

9:                                                ; preds = %5
  tail call fastcc void @LL_RCC_HSI_Enable.164() #24, !dbg !11952
  br label %10, !dbg !11954

10:                                               ; preds = %10, %9
  %11 = tail call fastcc i32 @LL_RCC_HSI_IsReady.163() #24, !dbg !11955
  %12 = icmp eq i32 %11, 1, !dbg !11956
  br i1 %12, label %13, label %10, !dbg !11954, !llvm.loop !11957

13:                                               ; preds = %10, %5
  %14 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 0, !dbg !11959
  %15 = load i32, i32* %14, align 4, !dbg !11959
  %16 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 1, !dbg !11960
  %17 = load i32, i32* %16, align 4, !dbg !11960
  %18 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %0, i32 0, i32 2, !dbg !11961
  %19 = load i32, i32* %18, align 4, !dbg !11961
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef 0, i32 noundef %15, i32 noundef %17, i32 noundef %19) #24, !dbg !11962
  %20 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %6, %struct._thread_stack_info* noundef %1) #24, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %20, metadata !11939, metadata !DIExpression()), !dbg !11941
  br label %21, !dbg !11964

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %20, %13 ], [ 1, %2 ], !dbg !11965
  call void @llvm.dbg.value(metadata i32 %22, metadata !11939, metadata !DIExpression()), !dbg !11941
  ret i32 %22, !dbg !11966
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @UTILS_PLL_IsBusy() unnamed_addr #15 !dbg !11967 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11971, metadata !DIExpression()), !dbg !11972
  %1 = tail call fastcc i32 @LL_RCC_PLL_IsReady.167() #24, !dbg !11973
  %2 = icmp ne i32 %1, 0, !dbg !11975
  call void @llvm.dbg.value(metadata i1 %2, metadata !11971, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !11972
  %3 = tail call fastcc i32 @LL_RCC_PLLI2S_IsReady() #24, !dbg !11976
  %4 = icmp ne i32 %3, 0, !dbg !11978
  %5 = select i1 %4, i1 true, i1 %2, !dbg !11979
  %6 = zext i1 %5 to i32, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %6, metadata !11971, metadata !DIExpression()), !dbg !11972
  ret i32 %6, !dbg !11980
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #8 !dbg !11981 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11985, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !11986, metadata !DIExpression()), !dbg !11988
  call void @llvm.dbg.value(metadata i32 0, metadata !11987, metadata !DIExpression()), !dbg !11988
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !11989
  %4 = load i32, i32* %3, align 4, !dbg !11989
  %5 = and i32 %4, 63, !dbg !11990
  %6 = udiv i32 %0, %5, !dbg !11991
  call void @llvm.dbg.value(metadata i32 %6, metadata !11987, metadata !DIExpression()), !dbg !11988
  %7 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !11992
  %8 = load i32, i32* %7, align 4, !dbg !11992
  %9 = and i32 %8, 511, !dbg !11993
  %10 = mul i32 %9, %6, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %10, metadata !11987, metadata !DIExpression()), !dbg !11988
  %11 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !11995
  %12 = load i32, i32* %11, align 4, !dbg !11995
  %13 = lshr i32 %12, 15, !dbg !11996
  %14 = and i32 %13, 131070, !dbg !11996
  %15 = add nuw nsw i32 %14, 2, !dbg !11996
  %16 = udiv i32 %10, %15, !dbg !11997
  call void @llvm.dbg.value(metadata i32 %16, metadata !11987, metadata !DIExpression()), !dbg !11988
  ret i32 %16, !dbg !11998
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSI_IsReady.163() unnamed_addr #15 !dbg !11999 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12000
  %2 = lshr i32 %1, 1, !dbg !12001
  %3 = and i32 %2, 1, !dbg !12001
  ret i32 %3, !dbg !12002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSI_Enable.164() unnamed_addr #14 !dbg !12003 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12004
  %2 = or i32 %1, 1, !dbg !12004
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12004
  ret void, !dbg !12005
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) unnamed_addr #14 !dbg !12006 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12008, metadata !DIExpression()), !dbg !12012
  call void @llvm.dbg.value(metadata i32 %1, metadata !12009, metadata !DIExpression()), !dbg !12012
  call void @llvm.dbg.value(metadata i32 %2, metadata !12010, metadata !DIExpression()), !dbg !12012
  call void @llvm.dbg.value(metadata i32 %3, metadata !12011, metadata !DIExpression()), !dbg !12012
  %5 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12013
  %6 = and i32 %5, -4227072, !dbg !12013
  %7 = or i32 %1, %0, !dbg !12013
  %8 = shl i32 %2, 6, !dbg !12013
  %9 = or i32 %7, %8, !dbg !12013
  %10 = or i32 %9, %6, !dbg !12013
  store volatile i32 %10, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12013
  %11 = load volatile i32, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12014
  %12 = and i32 %11, -196609, !dbg !12014
  %13 = or i32 %12, %3, !dbg !12014
  store volatile i32 %13, i32* inttoptr (i32 1073887236 to i32*), align 4, !dbg !12014
  ret void, !dbg !12015
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %0, %struct._thread_stack_info* nocapture noundef readonly %1) unnamed_addr #14 !dbg !12016 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12020, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %1, metadata !12021, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 0, metadata !12022, metadata !DIExpression()), !dbg !12024
  call void @llvm.dbg.value(metadata i32 0, metadata !12023, metadata !DIExpression()), !dbg !12024
  %3 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 0, !dbg !12025
  %4 = load i32, i32* %3, align 4, !dbg !12025
  %5 = lshr i32 %4, 4, !dbg !12025
  %6 = and i32 %5, 15, !dbg !12025
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* @AHBPrescTable, i32 0, i32 %6, !dbg !12025
  %8 = load i8, i8* %7, align 1, !dbg !12025
  %9 = zext i8 %8 to i32, !dbg !12025
  %10 = lshr i32 %0, %9, !dbg !12025
  call void @llvm.dbg.value(metadata i32 %10, metadata !12023, metadata !DIExpression()), !dbg !12024
  %11 = load i32, i32* @SystemCoreClock, align 4, !dbg !12026
  %12 = icmp ult i32 %11, %10, !dbg !12028
  br i1 %12, label %13, label %16, !dbg !12029

13:                                               ; preds = %2
  %14 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %14, metadata !12022, metadata !DIExpression()), !dbg !12024
  %15 = icmp eq i32 %14, 0, !dbg !12032
  br i1 %15, label %16, label %30, !dbg !12034

16:                                               ; preds = %2, %13
  tail call fastcc void @LL_RCC_PLL_Enable.166() #24, !dbg !12035
  br label %17, !dbg !12037

17:                                               ; preds = %17, %16
  %18 = tail call fastcc i32 @LL_RCC_PLL_IsReady.167() #24, !dbg !12038
  %19 = icmp eq i32 %18, 1, !dbg !12039
  br i1 %19, label %20, label %17, !dbg !12037, !llvm.loop !12040

20:                                               ; preds = %17
  %21 = load i32, i32* %3, align 4, !dbg !12042
  tail call fastcc void @LL_RCC_SetAHBPrescaler.168(i32 noundef %21) #24, !dbg !12043
  tail call fastcc void @LL_RCC_SetSysClkSource.169() #24, !dbg !12044
  br label %22, !dbg !12045

22:                                               ; preds = %22, %20
  %23 = tail call fastcc i32 @LL_RCC_GetSysClkSource.170() #24, !dbg !12046
  %24 = icmp eq i32 %23, 8, !dbg !12047
  br i1 %24, label %25, label %22, !dbg !12045, !llvm.loop !12048

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 1, !dbg !12050
  %27 = load i32, i32* %26, align 4, !dbg !12050
  tail call fastcc void @LL_RCC_SetAPB1Prescaler.171(i32 noundef %27) #24, !dbg !12051
  %28 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %1, i32 0, i32 2, !dbg !12052
  %29 = load i32, i32* %28, align 4, !dbg !12052
  tail call fastcc void @LL_RCC_SetAPB2Prescaler.172(i32 noundef %29) #24, !dbg !12053
  br label %30, !dbg !12054

30:                                               ; preds = %25, %13
  %31 = phi i32 [ 0, %25 ], [ %14, %13 ]
  %32 = load i32, i32* @SystemCoreClock, align 4, !dbg !12055
  %33 = icmp ugt i32 %32, %10, !dbg !12057
  br i1 %33, label %34, label %36, !dbg !12058

34:                                               ; preds = %30
  %35 = tail call i32 @LL_SetFlashLatency(i32 noundef %10) #24, !dbg !12059
  call void @llvm.dbg.value(metadata i32 %35, metadata !12022, metadata !DIExpression()), !dbg !12024
  br label %36, !dbg !12061

36:                                               ; preds = %34, %30
  %37 = phi i32 [ %35, %34 ], [ %31, %30 ], !dbg !12024
  call void @llvm.dbg.value(metadata i32 %37, metadata !12022, metadata !DIExpression()), !dbg !12024
  %38 = icmp eq i32 %37, 0, !dbg !12062
  br i1 %38, label %39, label %40, !dbg !12064

39:                                               ; preds = %36
  tail call void @LL_SetSystemCoreClock(i32 noundef %10) #24, !dbg !12065
  br label %40, !dbg !12067

40:                                               ; preds = %39, %36
  ret i32 %37, !dbg !12068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_PLL_Enable.166() unnamed_addr #14 !dbg !12069 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12070
  %2 = or i32 %1, 16777216, !dbg !12070
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12070
  ret void, !dbg !12071
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLL_IsReady.167() unnamed_addr #15 !dbg !12072 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12073
  %2 = lshr i32 %1, 25, !dbg !12074
  %3 = and i32 %2, 1, !dbg !12074
  ret i32 %3, !dbg !12075
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAHBPrescaler.168(i32 noundef %0) unnamed_addr #14 !dbg !12076 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12078, metadata !DIExpression()), !dbg !12079
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12080
  %3 = and i32 %2, -241, !dbg !12080
  %4 = or i32 %3, %0, !dbg !12080
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12080
  ret void, !dbg !12081
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetSysClkSource.169() unnamed_addr #14 !dbg !12082 {
  call void @llvm.dbg.value(metadata i32 2, metadata !12084, metadata !DIExpression()), !dbg !12085
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12086
  %2 = and i32 %1, -4, !dbg !12086
  %3 = or i32 %2, 2, !dbg !12086
  store volatile i32 %3, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12086
  ret void, !dbg !12087
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_GetSysClkSource.170() unnamed_addr #15 !dbg !12088 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12089
  %2 = and i32 %1, 12, !dbg !12089
  ret i32 %2, !dbg !12090
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB1Prescaler.171(i32 noundef %0) unnamed_addr #14 !dbg !12091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12093, metadata !DIExpression()), !dbg !12094
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12095
  %3 = and i32 %2, -7169, !dbg !12095
  %4 = or i32 %3, %0, !dbg !12095
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12095
  ret void, !dbg !12096
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_SetAPB2Prescaler.172(i32 noundef %0) unnamed_addr #14 !dbg !12097 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12099, metadata !DIExpression()), !dbg !12100
  %2 = load volatile i32, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12101
  %3 = and i32 %2, -57345, !dbg !12101
  %4 = or i32 %3, %0, !dbg !12101
  store volatile i32 %4, i32* inttoptr (i32 1073887240 to i32*), align 8, !dbg !12101
  ret void, !dbg !12102
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_PLLI2S_IsReady() unnamed_addr #15 !dbg !12103 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12104
  %2 = lshr i32 %1, 27, !dbg !12105
  %3 = and i32 %2, 1, !dbg !12105
  ret i32 %3, !dbg !12106
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @LL_PLL_ConfigSystemClock_HSE(i32 noundef %0, i32 noundef %1, %struct._thread_stack_info* nocapture noundef readonly %2, %struct._thread_stack_info* nocapture noundef readonly %3) local_unnamed_addr #14 !dbg !12107 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12111, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 %1, metadata !12112, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %2, metadata !12113, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata %struct._thread_stack_info* %3, metadata !12114, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 0, metadata !12115, metadata !DIExpression()), !dbg !12117
  call void @llvm.dbg.value(metadata i32 0, metadata !12116, metadata !DIExpression()), !dbg !12117
  %5 = tail call fastcc i32 @UTILS_PLL_IsBusy() #24, !dbg !12118
  %6 = icmp eq i32 %5, 0, !dbg !12120
  br i1 %6, label %7, label %27, !dbg !12121

7:                                                ; preds = %4
  %8 = tail call fastcc i32 @UTILS_GetPLLOutputFrequency(i32 noundef %0, %struct._thread_stack_info* noundef %2) #24, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %8, metadata !12116, metadata !DIExpression()), !dbg !12117
  %9 = tail call fastcc i32 @LL_RCC_HSE_IsReady.173() #24, !dbg !12124
  %10 = icmp eq i32 %9, 1, !dbg !12126
  br i1 %10, label %19, label %11, !dbg !12127

11:                                               ; preds = %7
  %12 = icmp eq i32 %1, 1, !dbg !12128
  br i1 %12, label %13, label %14, !dbg !12131

13:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_EnableBypass() #24, !dbg !12132
  br label %15, !dbg !12134

14:                                               ; preds = %11
  tail call fastcc void @LL_RCC_HSE_DisableBypass.174() #24, !dbg !12135
  br label %15

15:                                               ; preds = %14, %13
  tail call fastcc void @LL_RCC_HSE_Enable.175() #24, !dbg !12137
  br label %16, !dbg !12138

16:                                               ; preds = %16, %15
  %17 = tail call fastcc i32 @LL_RCC_HSE_IsReady.173() #24, !dbg !12139
  %18 = icmp eq i32 %17, 1, !dbg !12140
  br i1 %18, label %19, label %16, !dbg !12138, !llvm.loop !12141

19:                                               ; preds = %16, %7
  %20 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 0, !dbg !12143
  %21 = load i32, i32* %20, align 4, !dbg !12143
  %22 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 1, !dbg !12144
  %23 = load i32, i32* %22, align 4, !dbg !12144
  %24 = getelementptr inbounds %struct._thread_stack_info, %struct._thread_stack_info* %2, i32 0, i32 2, !dbg !12145
  %25 = load i32, i32* %24, align 4, !dbg !12145
  tail call fastcc void @LL_RCC_PLL_ConfigDomain_SYS.165(i32 noundef 4194304, i32 noundef %21, i32 noundef %23, i32 noundef %25) #24, !dbg !12146
  %26 = tail call fastcc i32 @UTILS_EnablePLLAndSwitchSystem(i32 noundef %8, %struct._thread_stack_info* noundef %3) #24, !dbg !12147
  call void @llvm.dbg.value(metadata i32 %26, metadata !12115, metadata !DIExpression()), !dbg !12117
  br label %27, !dbg !12148

27:                                               ; preds = %4, %19
  %28 = phi i32 [ %26, %19 ], [ 1, %4 ], !dbg !12149
  call void @llvm.dbg.value(metadata i32 %28, metadata !12115, metadata !DIExpression()), !dbg !12117
  ret i32 %28, !dbg !12150
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @LL_RCC_HSE_IsReady.173() unnamed_addr #15 !dbg !12151 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12152
  %2 = lshr i32 %1, 17, !dbg !12153
  %3 = and i32 %2, 1, !dbg !12153
  ret i32 %3, !dbg !12154
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_EnableBypass() unnamed_addr #14 !dbg !12155 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12156
  %2 = or i32 %1, 262144, !dbg !12156
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12156
  ret void, !dbg !12157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_DisableBypass.174() unnamed_addr #14 !dbg !12158 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12159
  %2 = and i32 %1, -262145, !dbg !12159
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12159
  ret void, !dbg !12160
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @LL_RCC_HSE_Enable.175() unnamed_addr #14 !dbg !12161 {
  %1 = load volatile i32, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12162
  %2 = or i32 %1, 65536, !dbg !12162
  store volatile i32 %2, i32* inttoptr (i32 1073887232 to i32*), align 2048, !dbg !12162
  ret void, !dbg !12163
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local void @z_device_state_init() local_unnamed_addr #21 !dbg !12164 {
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12167, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 undef, metadata !12167, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.value(metadata i32 undef, metadata !12167, metadata !DIExpression(DW_OP_plus_uconst, 24, DW_OP_stack_value)), !dbg !12183
  ret void, !dbg !12184
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.device* @z_impl_device_get_binding(i8* noundef %0) local_unnamed_addr #1 !dbg !12185 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12189, metadata !DIExpression()), !dbg !12191
  %2 = icmp eq i8* %0, null, !dbg !12192
  br i1 %2, label %29, label %3, !dbg !12194

3:                                                ; preds = %1
  %4 = load i8, i8* %0, align 1, !dbg !12195
  %5 = icmp eq i8 %4, 0, !dbg !12196
  %6 = or i1 %5, icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), !dbg !12197
  br i1 %6, label %29, label %8, !dbg !12197

7:                                                ; preds = %15
  call void @llvm.dbg.value(metadata %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), metadata !12190, metadata !DIExpression()), !dbg !12191
  br i1 icmp eq (%struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0)), label %29, label %18, !dbg !12198

8:                                                ; preds = %3, %15
  %9 = phi %struct.device* [ %16, %15 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %3 ]
  call void @llvm.dbg.value(metadata %struct.device* %9, metadata !12190, metadata !DIExpression()), !dbg !12191
  %10 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %9) #24, !dbg !12200
  br i1 %10, label %11, label %15, !dbg !12205

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 0, !dbg !12206
  %13 = load i8*, i8** %12, align 4, !dbg !12206
  %14 = icmp eq i8* %13, %0, !dbg !12207
  br i1 %14, label %29, label %15, !dbg !12208

15:                                               ; preds = %8, %11
  %16 = getelementptr inbounds %struct.device, %struct.device* %9, i32 1, !dbg !12209
  call void @llvm.dbg.value(metadata %struct.device* %16, metadata !12190, metadata !DIExpression()), !dbg !12191
  %17 = icmp eq %struct.device* %16, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12210
  br i1 %17, label %7, label %8, !dbg !12211, !llvm.loop !12212

18:                                               ; preds = %7, %26
  %19 = phi %struct.device* [ %27, %26 ], [ getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %7 ]
  call void @llvm.dbg.value(metadata %struct.device* %19, metadata !12190, metadata !DIExpression()), !dbg !12191
  %20 = tail call zeroext i1 @z_device_is_ready(%struct.device* noundef %19) #24, !dbg !12214
  br i1 %20, label %21, label %26, !dbg !12218

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct.device, %struct.device* %19, i32 0, i32 0, !dbg !12219
  %23 = load i8*, i8** %22, align 4, !dbg !12219
  %24 = tail call i32 @strcmp(i8* noundef nonnull %0, i8* noundef %23) #25, !dbg !12220
  %25 = icmp eq i32 %24, 0, !dbg !12221
  br i1 %25, label %29, label %26, !dbg !12222

26:                                               ; preds = %18, %21
  %27 = getelementptr inbounds %struct.device, %struct.device* %19, i32 1, !dbg !12223
  call void @llvm.dbg.value(metadata %struct.device* %27, metadata !12190, metadata !DIExpression()), !dbg !12191
  %28 = icmp eq %struct.device* %27, getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_end, i32 0, i32 0), !dbg !12224
  br i1 %28, label %29, label %18, !dbg !12198, !llvm.loop !12225

29:                                               ; preds = %11, %21, %26, %3, %7, %1
  %30 = phi %struct.device* [ null, %3 ], [ null, %1 ], [ null, %7 ], [ %19, %21 ], [ null, %26 ], [ %9, %11 ], !dbg !12191
  ret %struct.device* %30, !dbg !12227
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_device_is_ready(%struct.device* noundef readonly %0) local_unnamed_addr #8 !dbg !12228 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12232, metadata !DIExpression()), !dbg !12233
  %2 = icmp eq %struct.device* %0, null, !dbg !12234
  br i1 %2, label %14, label %3, !dbg !12236

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !12237
  %5 = load %struct.device_state*, %struct.device_state** %4, align 4, !dbg !12237
  %6 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 1, !dbg !12238
  %7 = load i8, i8* %6, align 1, !dbg !12238
  %8 = and i8 %7, 1, !dbg !12238
  %9 = icmp eq i8 %8, 0, !dbg !12238
  br i1 %9, label %14, label %10, !dbg !12239

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.device_state, %struct.device_state* %5, i32 0, i32 0, !dbg !12240
  %12 = load i8, i8* %11, align 1, !dbg !12240
  %13 = icmp eq i8 %12, 0, !dbg !12241
  br label %14

14:                                               ; preds = %3, %10, %1
  %15 = phi i1 [ false, %1 ], [ false, %3 ], [ %13, %10 ], !dbg !12233
  ret i1 %15, !dbg !12242
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_device_get_all_static(%struct.device** nocapture noundef writeonly %0) local_unnamed_addr #7 !dbg !12243 {
  call void @llvm.dbg.value(metadata %struct.device** %0, metadata !12248, metadata !DIExpression()), !dbg !12249
  store %struct.device* getelementptr inbounds ([0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 0), %struct.device** %0, align 4, !dbg !12250
  ret i32 sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), !dbg !12251
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_required_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12252 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12260, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12261, metadata !DIExpression()), !dbg !12265
  call void @llvm.dbg.value(metadata i8* %2, metadata !12262, metadata !DIExpression()), !dbg !12265
  %5 = bitcast i32* %4 to i8*, !dbg !12266
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12266
  call void @llvm.dbg.value(metadata i32 0, metadata !12263, metadata !DIExpression()), !dbg !12265
  store i32 0, i32* %4, align 4, !dbg !12267
  call void @llvm.dbg.value(metadata i32* %4, metadata !12263, metadata !DIExpression(DW_OP_deref)), !dbg !12265
  %6 = call fastcc i16* @device_required_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12268
  call void @llvm.dbg.value(metadata i16* %6, metadata !12264, metadata !DIExpression()), !dbg !12265
  %7 = load i32, i32* %4, align 4, !dbg !12269
  call void @llvm.dbg.value(metadata i32 %7, metadata !12263, metadata !DIExpression()), !dbg !12265
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12270
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12271
  ret i32 %8, !dbg !12272
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_required_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12273 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12277, metadata !DIExpression()), !dbg !12283
  call void @llvm.dbg.value(metadata i32* %1, metadata !12278, metadata !DIExpression()), !dbg !12283
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12284
  %4 = load i16*, i16** %3, align 4, !dbg !12284
  call void @llvm.dbg.value(metadata i16* %4, metadata !12279, metadata !DIExpression()), !dbg !12283
  %5 = icmp eq i16* %4, null, !dbg !12285
  br i1 %5, label %14, label %6, !dbg !12286

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %12, %6 ], [ 0, %2 ], !dbg !12287
  call void @llvm.dbg.value(metadata i32 %7, metadata !12280, metadata !DIExpression()), !dbg !12287
  %8 = getelementptr inbounds i16, i16* %4, i32 %7, !dbg !12288
  %9 = load i16, i16* %8, align 2, !dbg !12288
  %10 = add i16 %9, -32767, !dbg !12289
  %11 = icmp ult i16 %10, 2, !dbg !12289
  %12 = add i32 %7, 1, !dbg !12290
  call void @llvm.dbg.value(metadata i32 %12, metadata !12280, metadata !DIExpression()), !dbg !12287
  br i1 %11, label %13, label %6, !dbg !12289, !llvm.loop !12292

13:                                               ; preds = %6
  store i32 %7, i32* %1, align 4, !dbg !12295
  br label %14, !dbg !12296

14:                                               ; preds = %13, %2
  ret i16* %4, !dbg !12297
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @device_visitor(i16* nocapture noundef readonly %0, i32 noundef %1, i32 (%struct.device*, i8*)* nocapture noundef readonly %2, i8* noundef %3) unnamed_addr #1 !dbg !12298 {
  call void @llvm.dbg.value(metadata i16* %0, metadata !12302, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i32 %1, metadata !12303, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %2, metadata !12304, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i8* %3, metadata !12305, metadata !DIExpression()), !dbg !12313
  call void @llvm.dbg.value(metadata i32 0, metadata !12306, metadata !DIExpression()), !dbg !12314
  %5 = icmp eq i32 %1, 0, !dbg !12315
  br i1 %5, label %16, label %8, !dbg !12316

6:                                                ; preds = %8
  call void @llvm.dbg.value(metadata i32 %15, metadata !12306, metadata !DIExpression()), !dbg !12314
  %7 = icmp eq i32 %15, %1, !dbg !12315
  br i1 %7, label %16, label %8, !dbg !12316, !llvm.loop !12317

8:                                                ; preds = %4, %6
  %9 = phi i32 [ %15, %6 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12306, metadata !DIExpression()), !dbg !12314
  %10 = getelementptr inbounds i16, i16* %0, i32 %9, !dbg !12319
  %11 = load i16, i16* %10, align 2, !dbg !12319
  call void @llvm.dbg.value(metadata i16 %11, metadata !12308, metadata !DIExpression()), !dbg !12320
  %12 = tail call fastcc %struct.device* @device_from_handle(i16 noundef signext %11) #24, !dbg !12321
  call void @llvm.dbg.value(metadata %struct.device* %12, metadata !12311, metadata !DIExpression()), !dbg !12320
  %13 = tail call i32 %2(%struct.device* noundef %12, i8* noundef %3) #25, !dbg !12322
  call void @llvm.dbg.value(metadata i32 %13, metadata !12312, metadata !DIExpression()), !dbg !12320
  %14 = icmp slt i32 %13, 0, !dbg !12323
  %15 = add nuw i32 %9, 1, !dbg !12325
  call void @llvm.dbg.value(metadata i32 %15, metadata !12306, metadata !DIExpression()), !dbg !12314
  br i1 %14, label %16, label %6

16:                                               ; preds = %8, %6, %4
  %17 = phi i32 [ 0, %4 ], [ %1, %6 ], [ %13, %8 ]
  ret i32 %17, !dbg !12326
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc %struct.device* @device_from_handle(i16 noundef signext %0) unnamed_addr #3 !dbg !12327 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !12331, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata %struct.device* null, metadata !12332, metadata !DIExpression()), !dbg !12334
  call void @llvm.dbg.value(metadata i32 sdiv exact (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24), metadata !12333, metadata !DIExpression()), !dbg !12334
  %2 = sext i16 %0 to i32, !dbg !12335
  %3 = icmp slt i16 %0, 1, !dbg !12337
  %4 = icmp ugt i32 %2, sdiv (i32 sub (i32 ptrtoint ([0 x %struct.device]* @__device_end to i32), i32 ptrtoint ([0 x %struct.device]* @__device_start to i32)), i32 24)
  %5 = or i1 %3, %4, !dbg !12338
  %6 = add nsw i32 %2, -1, !dbg !12338
  %7 = getelementptr inbounds [0 x %struct.device], [0 x %struct.device]* @__device_start, i32 0, i32 %6, !dbg !12338
  %8 = select i1 %5, %struct.device* null, %struct.device* %7, !dbg !12338
  call void @llvm.dbg.value(metadata %struct.device* %8, metadata !12332, metadata !DIExpression()), !dbg !12334
  ret %struct.device* %8, !dbg !12339
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @device_supported_foreach(%struct.device* nocapture noundef readonly %0, i32 (%struct.device*, i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #1 !dbg !12340 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12342, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i32 (%struct.device*, i8*)* %1, metadata !12343, metadata !DIExpression()), !dbg !12347
  call void @llvm.dbg.value(metadata i8* %2, metadata !12344, metadata !DIExpression()), !dbg !12347
  %5 = bitcast i32* %4 to i8*, !dbg !12348
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12348
  call void @llvm.dbg.value(metadata i32 0, metadata !12345, metadata !DIExpression()), !dbg !12347
  store i32 0, i32* %4, align 4, !dbg !12349
  call void @llvm.dbg.value(metadata i32* %4, metadata !12345, metadata !DIExpression(DW_OP_deref)), !dbg !12347
  %6 = call fastcc i16* @device_supported_handles_get(%struct.device* noundef %0, i32* noundef nonnull %4) #24, !dbg !12350
  call void @llvm.dbg.value(metadata i16* %6, metadata !12346, metadata !DIExpression()), !dbg !12347
  %7 = load i32, i32* %4, align 4, !dbg !12351
  call void @llvm.dbg.value(metadata i32 %7, metadata !12345, metadata !DIExpression()), !dbg !12347
  %8 = tail call fastcc i32 @device_visitor(i16* noundef %6, i32 noundef %7, i32 (%struct.device*, i8*)* noundef %1, i8* noundef %2) #24, !dbg !12352
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !12353
  ret i32 %8, !dbg !12354
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i16* @device_supported_handles_get(%struct.device* nocapture noundef readonly %0, i32* nocapture noundef writeonly %1) unnamed_addr #13 !dbg !12355 {
  call void @llvm.dbg.value(metadata %struct.device* %0, metadata !12357, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.value(metadata i32* %1, metadata !12358, metadata !DIExpression()), !dbg !12362
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !12363
  %4 = load i16*, i16** %3, align 4, !dbg !12363
  call void @llvm.dbg.value(metadata i16* %4, metadata !12359, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.value(metadata i32 0, metadata !12360, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.value(metadata i32 0, metadata !12361, metadata !DIExpression()), !dbg !12362
  %5 = icmp eq i16* %4, null, !dbg !12364
  br i1 %5, label %22, label %6, !dbg !12366

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %2 ]
  %8 = phi i16* [ %11, %6 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !12360, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.value(metadata i16* %8, metadata !12359, metadata !DIExpression()), !dbg !12362
  %9 = load i16, i16* %8, align 2, !dbg !12367
  %10 = icmp eq i16 %9, -32768, !dbg !12371
  call void @llvm.dbg.value(metadata i32 undef, metadata !12360, metadata !DIExpression()), !dbg !12362
  %11 = getelementptr inbounds i16, i16* %8, i32 1, !dbg !12372
  call void @llvm.dbg.value(metadata i16* %11, metadata !12359, metadata !DIExpression()), !dbg !12362
  %12 = zext i1 %10 to i32, !dbg !12373
  %13 = add i32 %7, %12, !dbg !12373
  call void @llvm.dbg.value(metadata i32 %13, metadata !12360, metadata !DIExpression()), !dbg !12362
  %14 = icmp eq i32 %13, 2, !dbg !12374
  br i1 %14, label %15, label %6, !dbg !12375

15:                                               ; preds = %6, %15
  %16 = phi i32 [ %20, %15 ], [ 0, %6 ], !dbg !12362
  call void @llvm.dbg.value(metadata i32 %16, metadata !12361, metadata !DIExpression()), !dbg !12362
  %17 = getelementptr inbounds i16, i16* %11, i32 %16, !dbg !12376
  %18 = load i16, i16* %17, align 2, !dbg !12376
  %19 = icmp eq i16 %18, 32767, !dbg !12377
  %20 = add i32 %16, 1, !dbg !12378
  call void @llvm.dbg.value(metadata i32 %20, metadata !12361, metadata !DIExpression()), !dbg !12362
  br i1 %19, label %21, label %15, !dbg !12380, !llvm.loop !12381

21:                                               ; preds = %15
  store i32 %16, i32* %1, align 4, !dbg !12383
  br label %22, !dbg !12384

22:                                               ; preds = %21, %2
  %23 = phi i16* [ %11, %21 ], [ null, %2 ], !dbg !12385
  call void @llvm.dbg.value(metadata i16* %23, metadata !12359, metadata !DIExpression()), !dbg !12362
  ret i16* %23, !dbg !12386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local nonnull i32* @z_impl_z_errno() local_unnamed_addr #8 !dbg !12387 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12390
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 5, !dbg !12391
  ret i32* %2, !dbg !12392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump(i32 %0, %struct.__esf* nocapture %1, %struct.k_thread* nocapture %2) local_unnamed_addr #3 !dbg !12393 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !12544, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata %struct.__esf* undef, metadata !12545, metadata !DIExpression()), !dbg !12547
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !12546, metadata !DIExpression()), !dbg !12547
  ret void, !dbg !12548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_memory_dump(i32 noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12553, metadata !DIExpression()), !dbg !12555
  call void @llvm.dbg.value(metadata i32 %1, metadata !12554, metadata !DIExpression()), !dbg !12555
  ret void, !dbg !12556
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @coredump_buffer_output(i8* nocapture noundef %0, i32 noundef %1) local_unnamed_addr #3 !dbg !12557 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12561, metadata !DIExpression()), !dbg !12563
  call void @llvm.dbg.value(metadata i32 %1, metadata !12562, metadata !DIExpression()), !dbg !12563
  ret void, !dbg !12564
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_query(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12565 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12569, metadata !DIExpression()), !dbg !12571
  call void @llvm.dbg.value(metadata i8* %1, metadata !12570, metadata !DIExpression()), !dbg !12571
  ret i32 -134, !dbg !12572
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @coredump_cmd(i32 noundef %0, i8* nocapture noundef readnone %1) local_unnamed_addr #3 !dbg !12573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12577, metadata !DIExpression()), !dbg !12579
  call void @llvm.dbg.value(metadata i8* %1, metadata !12578, metadata !DIExpression()), !dbg !12579
  ret i32 -134, !dbg !12580
}

; Function Attrs: noinline noreturn nounwind optsize
define weak dso_local void @arch_system_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12584, metadata !DIExpression()), !dbg !12585
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12586, !srcloc !12592
  call void @llvm.dbg.value(metadata i32 undef, metadata !12589, metadata !DIExpression()) #23, !dbg !12593
  call void @llvm.dbg.value(metadata i32 undef, metadata !12590, metadata !DIExpression()) #23, !dbg !12593
  br label %3, !dbg !12594

3:                                                ; preds = %3, %1
  br label %3, !dbg !12595, !llvm.loop !12598
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12601 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12605, metadata !DIExpression()), !dbg !12607
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12606, metadata !DIExpression()), !dbg !12607
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.180, i32 0, i32 0), i32 noundef 69) #25, !dbg !12608
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12613
  unreachable, !dbg !12613
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_fatal_halt(i32 noundef %0) local_unnamed_addr #10 !dbg !12614 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12616, metadata !DIExpression()), !dbg !12617
  tail call void @arch_system_halt(i32 noundef %0) #29, !dbg !12618
  unreachable, !dbg !12618
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_fatal_error(i32 noundef %0, %struct.__esf* noundef %1) local_unnamed_addr #1 !dbg !12619 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12621, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12622, metadata !DIExpression()), !dbg !12625
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !12626, !srcloc !12592
  %4 = extractvalue { i32, i32 } %3, 0, !dbg !12626
  call void @llvm.dbg.value(metadata i32 %4, metadata !12589, metadata !DIExpression()) #23, !dbg !12628
  call void @llvm.dbg.value(metadata i32 undef, metadata !12590, metadata !DIExpression()) #23, !dbg !12628
  call void @llvm.dbg.value(metadata i32 %4, metadata !12623, metadata !DIExpression()), !dbg !12625
  %5 = tail call fastcc %struct.k_thread* @k_current_get.183() #26, !dbg !12629
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !12624, metadata !DIExpression()), !dbg !12625
  %6 = tail call fastcc i8* @reason_to_str(i32 noundef %0) #24, !dbg !12630
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1.184, i32 0, i32 0), i32 noundef 69, i32 noundef %0, i8* noundef %6, i32 noundef 0) #25, !dbg !12630
  %7 = icmp eq %struct.__esf* %1, null, !dbg !12635
  br i1 %7, label %20, label %8, !dbg !12637

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12638, metadata !DIExpression()), !dbg !12643
  %9 = getelementptr inbounds %struct.__esf, %struct.__esf* %1, i32 0, i32 0, i32 7, !dbg !12645
  %10 = load i32, i32* %9, align 4, !dbg !12645
  %11 = and i32 %10, 511, !dbg !12646
  %12 = icmp eq i32 %11, 0, !dbg !12647
  br i1 %12, label %14, label %13, !dbg !12648

13:                                               ; preds = %8
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.185, i32 0, i32 0), i32 noundef 69) #25, !dbg !12649
  br label %14, !dbg !12655

14:                                               ; preds = %8, %13
  %15 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12656
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.186, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %15) #25, !dbg !12656
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef nonnull %1) #24, !dbg !12661
  call void @llvm.dbg.value(metadata %struct.__esf* %1, metadata !12638, metadata !DIExpression()), !dbg !12662
  %16 = load i32, i32* %9, align 4, !dbg !12667
  %17 = and i32 %16, 511, !dbg !12668
  %18 = icmp eq i32 %17, 0, !dbg !12669
  br i1 %18, label %22, label %19, !dbg !12670

19:                                               ; preds = %14
  call void @llvm.dbg.value(metadata i32 %4, metadata !12671, metadata !DIExpression()) #23, !dbg !12674
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12677, !srcloc !12678
  br label %25, !dbg !12679

20:                                               ; preds = %2
  %21 = tail call fastcc i8* @thread_name_get(%struct.k_thread* noundef %5) #24, !dbg !12656
  tail call void (i8*, ...) @z_log_minimal_printk(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3.186, i32 0, i32 0), i32 noundef 69, %struct.k_thread* noundef %5, i8* noundef %21) #25, !dbg !12656
  tail call void @k_sys_fatal_error_handler(i32 noundef %0, %struct.__esf* noundef null) #24, !dbg !12661
  br label %22, !dbg !12680

22:                                               ; preds = %20, %14
  %23 = icmp eq i32 %0, 1, !dbg !12681
  call void @llvm.dbg.value(metadata i32 %4, metadata !12671, metadata !DIExpression()) #23, !dbg !12684
  call void @llvm.dbg.value(metadata i32 %4, metadata !12671, metadata !DIExpression()) #23, !dbg !12687
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %4) #23, !dbg !12625
  br i1 %23, label %25, label %24, !dbg !12689

24:                                               ; preds = %22
  tail call fastcc void @k_thread_abort.187(%struct.k_thread* noundef %5) #24, !dbg !12690
  br label %25, !dbg !12693

25:                                               ; preds = %22, %24, %19
  ret void, !dbg !12693
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @k_current_get.183() unnamed_addr #11 !dbg !12694 {
  %1 = tail call fastcc %struct.k_thread* @z_current_get.195() #26, !dbg !12698
  ret %struct.k_thread* %1, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i8* @reason_to_str(i32 noundef %0) unnamed_addr #3 !dbg !12700 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12704, metadata !DIExpression()), !dbg !12705
  %2 = icmp ult i32 %0, 5, !dbg !12706
  br i1 %2, label %3, label %6, !dbg !12706

3:                                                ; preds = %1
  %4 = getelementptr inbounds [5 x i8*], [5 x i8*]* @switch.table.reason_to_str, i32 0, i32 %0, !dbg !12706
  %5 = load i8*, i8** %4, align 4, !dbg !12706
  br label %6, !dbg !12706

6:                                                ; preds = %1, %3
  %7 = phi i8* [ %5, %3 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9.189, i32 0, i32 0), %1 ], !dbg !12707
  ret i8* %7, !dbg !12709
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @thread_name_get(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12710 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12714, metadata !DIExpression()), !dbg !12716
  %2 = icmp eq %struct.k_thread* %0, null, !dbg !12717
  br i1 %2, label %9, label %3, !dbg !12718

3:                                                ; preds = %1
  %4 = tail call i8* @k_thread_name_get(%struct.k_thread* noundef nonnull %0) #25, !dbg !12719
  call void @llvm.dbg.value(metadata i8* %4, metadata !12715, metadata !DIExpression()), !dbg !12716
  %5 = icmp eq i8* %4, null, !dbg !12720
  br i1 %5, label %9, label %6, !dbg !12722

6:                                                ; preds = %3
  %7 = load i8, i8* %4, align 1, !dbg !12723
  %8 = icmp eq i8 %7, 0, !dbg !12724
  br i1 %8, label %9, label %10, !dbg !12725

9:                                                ; preds = %1, %6, %3
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.188, i32 0, i32 0), metadata !12715, metadata !DIExpression()), !dbg !12716
  br label %10, !dbg !12726

10:                                               ; preds = %9, %6
  %11 = phi i8* [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.188, i32 0, i32 0), %9 ], [ %4, %6 ], !dbg !12716
  call void @llvm.dbg.value(metadata i8* %11, metadata !12715, metadata !DIExpression()), !dbg !12716
  ret i8* %11, !dbg !12728
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_abort.187(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !12729 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12733, metadata !DIExpression()), !dbg !12734
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12735, !srcloc !12737
  tail call void @z_impl_k_thread_abort(%struct.k_thread* noundef %0) #25, !dbg !12738
  ret void, !dbg !12739
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define internal fastcc %struct.k_thread* @z_current_get.195() unnamed_addr #11 !dbg !12740 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !12741, !srcloc !12743
  %1 = tail call %struct.k_thread* @z_impl_z_current_get() #25, !dbg !12744
  ret %struct.k_thread* %1, !dbg !12745
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12746 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12750, metadata !DIExpression()), !dbg !12753
  call void @llvm.dbg.value(metadata i32 %1, metadata !12751, metadata !DIExpression()), !dbg !12753
  call void @llvm.dbg.value(metadata i32 %2, metadata !12752, metadata !DIExpression()), !dbg !12753
  %4 = tail call i8* @memset(i8* noundef %0, i32 noundef %1, i32 noundef %2) #25, !dbg !12754
  ret void, !dbg !12755
}

; Function Attrs: noinline nounwind optsize
define weak dso_local void @z_early_memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !12756 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12760, metadata !DIExpression()), !dbg !12763
  call void @llvm.dbg.value(metadata i8* %1, metadata !12761, metadata !DIExpression()), !dbg !12763
  call void @llvm.dbg.value(metadata i32 %2, metadata !12762, metadata !DIExpression()), !dbg !12763
  %4 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !12764
  ret void, !dbg !12765
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_bss_zero() local_unnamed_addr #1 !dbg !12766 {
  tail call void @z_early_memset(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__bss_start, i32 0, i32 0), i32 noundef 0, i32 noundef sub (i32 ptrtoint ([0 x i8]* @__bss_end to i32), i32 ptrtoint ([0 x i8]* @__bss_start to i32))) #24, !dbg !12767
  ret void, !dbg !12768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_cpu(i32 noundef %0) local_unnamed_addr #1 !dbg !12769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12771, metadata !DIExpression()), !dbg !12772
  tail call fastcc void @init_idle_thread(i32 noundef %0) #24, !dbg !12773
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12774
  %3 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 3, !dbg !12775
  store %struct.k_thread* %2, %struct.k_thread** %3, align 4, !dbg !12776
  %4 = trunc i32 %0 to i8, !dbg !12777
  %5 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 5, !dbg !12778
  store i8 %4, i8* %5, align 4, !dbg !12779
  %6 = getelementptr inbounds [1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 %0, i32 0, !dbg !12780
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef nonnull %6) #24, !dbg !12781
  %8 = getelementptr inbounds i8, i8* %7, i32 2048, !dbg !12782
  %9 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, i32 1, !dbg !12783
  store i8* %8, i8** %9, align 4, !dbg !12784
  ret void, !dbg !12785
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @init_idle_thread(i32 noundef %0) unnamed_addr #1 !dbg !12786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12788, metadata !DIExpression()), !dbg !12794
  %2 = getelementptr inbounds [1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 %0, !dbg !12795
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !12789, metadata !DIExpression()), !dbg !12794
  %3 = getelementptr inbounds [1 x [384 x %struct.z_thread_stack_element]], [1 x [384 x %struct.z_thread_stack_element]]* @z_idle_stacks, i32 0, i32 %0, i32 0, !dbg !12796
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %3, metadata !12790, metadata !DIExpression()), !dbg !12794
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.202, i32 0, i32 0), metadata !12793, metadata !DIExpression()), !dbg !12794
  %4 = getelementptr inbounds %struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 %0, !dbg !12797
  %5 = bitcast %struct._cpu* %4 to i8*, !dbg !12798
  %6 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull %2, %struct.z_thread_stack_element* noundef nonnull %3, i32 noundef 320, void (i8*, i8*, i8*)* noundef nonnull @idle, i8* noundef nonnull %5, i8* noundef null, i8* noundef null, i32 noundef 15, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.202, i32 0, i32 0)) #25, !dbg !12799
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull %2) #24, !dbg !12800
  ret void, !dbg !12801
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !12802 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !12806, metadata !DIExpression()), !dbg !12807
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !12808
  ret i8* %2, !dbg !12809
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !12810 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12815, metadata !DIExpression()), !dbg !12816
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12817
  %3 = load i8, i8* %2, align 1, !dbg !12818
  %4 = and i8 %3, -5, !dbg !12818
  store i8 %4, i8* %2, align 1, !dbg !12818
  ret void, !dbg !12819
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @z_cstart() local_unnamed_addr #10 !dbg !12820 {
  %1 = alloca %struct.k_thread, align 8
  tail call fastcc void @z_sys_init_run_level(i32 noundef 0) #24, !dbg !12823
  %2 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER(%struct.z_thread_stack_element* noundef getelementptr inbounds ([1 x [2112 x %struct.z_thread_stack_element]], [1 x [2112 x %struct.z_thread_stack_element]]* @z_interrupt_stacks, i32 0, i32 0, i32 0)) #25, !dbg !12824
  %3 = ptrtoint i8* %2 to i32, !dbg !12833
  %4 = add i32 %3, 2048, !dbg !12834
  call void @llvm.dbg.value(metadata i32 %4, metadata !12828, metadata !DIExpression()) #23, !dbg !12835
  call void @llvm.dbg.value(metadata i32 %4, metadata !12836, metadata !DIExpression()) #23, !dbg !12839
  tail call void asm sideeffect "MSR msp, $0", "r"(i32 %4) #23, !dbg !12841, !srcloc !12842
  %5 = load volatile i32, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12843
  %6 = or i32 %5, 512, !dbg !12843
  store volatile i32 %6, i32* inttoptr (i32 -536810220 to i32*), align 4, !dbg !12843
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -2, i32 noundef 255) #25, !dbg !12844
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -5, i32 noundef 0) #25, !dbg !12847
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -12, i32 noundef 0) #25, !dbg !12848
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -11, i32 noundef 0) #25, !dbg !12849
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -10, i32 noundef 0) #25, !dbg !12850
  tail call fastcc void @__NVIC_SetPriority.205(i32 noundef -4, i32 noundef 0) #25, !dbg !12851
  %7 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12852
  %8 = or i32 %7, 458752, !dbg !12852
  store volatile i32 %8, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12852
  tail call void @z_arm_fault_init() #25, !dbg !12853
  tail call void @z_arm_cpu_idle_init() #25, !dbg !12854
  store volatile i32 -1, i32* inttoptr (i32 -536810200 to i32*), align 8, !dbg !12855
  store volatile i32 -1, i32* inttoptr (i32 -536810196 to i32*), align 4, !dbg !12858
  %9 = tail call i32 @z_arm_mpu_init() #25, !dbg !12859
  tail call void @z_arm_configure_static_mpu_regions() #25, !dbg !12860
  %10 = bitcast %struct.k_thread* %1 to i8*, !dbg !12861
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %10) #23, !dbg !12861
  call void @llvm.dbg.declare(metadata %struct.k_thread* %1, metadata !12822, metadata !DIExpression()), !dbg !12862
  call fastcc void @z_dummy_thread_init(%struct.k_thread* noundef nonnull %1) #24, !dbg !12863
  call void @z_device_state_init() #25, !dbg !12864
  call fastcc void @z_sys_init_run_level(i32 noundef 1) #24, !dbg !12865
  call fastcc void @z_sys_init_run_level(i32 noundef 2) #24, !dbg !12866
  %11 = call fastcc i8* @prepare_multithreading() #24, !dbg !12867
  call fastcc void @switch_to_main_thread(i8* noundef %11) #29, !dbg !12868
  unreachable, !dbg !12868
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sys_init_run_level(i32 noundef %0) unnamed_addr #1 !dbg !2058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2062, metadata !DIExpression()), !dbg !12869
  %2 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %0, !dbg !12870
  %3 = load %struct.init_entry*, %struct.init_entry** %2, align 4, !dbg !12870
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2063, metadata !DIExpression()), !dbg !12869
  %4 = add i32 %0, 1
  %5 = getelementptr inbounds [6 x %struct.init_entry*], [6 x %struct.init_entry*]* @z_sys_init_run_level.levels, i32 0, i32 %4
  %6 = load %struct.init_entry*, %struct.init_entry** %5, align 4
  call void @llvm.dbg.value(metadata %struct.init_entry* %3, metadata !2063, metadata !DIExpression()), !dbg !12869
  %7 = icmp ult %struct.init_entry* %3, %6, !dbg !12871
  br i1 %7, label %8, label %35, !dbg !12872

8:                                                ; preds = %1, %32
  %9 = phi %struct.init_entry* [ %33, %32 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata %struct.init_entry* %9, metadata !2063, metadata !DIExpression()), !dbg !12869
  %10 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 1, !dbg !12873
  %11 = load %struct.device*, %struct.device** %10, align 4, !dbg !12873
  call void @llvm.dbg.value(metadata %struct.device* %11, metadata !2073, metadata !DIExpression()), !dbg !12874
  %12 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 0, i32 0, !dbg !12875
  %13 = load i32 (%struct.device*)*, i32 (%struct.device*)** %12, align 4, !dbg !12875
  %14 = tail call i32 %13(%struct.device* noundef %11) #25, !dbg !12876
  call void @llvm.dbg.value(metadata i32 %14, metadata !2077, metadata !DIExpression()), !dbg !12874
  %15 = icmp eq %struct.device* %11, null, !dbg !12877
  br i1 %15, label %32, label %16, !dbg !12879

16:                                               ; preds = %8
  %17 = icmp eq i32 %14, 0, !dbg !12880
  br i1 %17, label %26, label %18, !dbg !12883

18:                                               ; preds = %16
  %19 = tail call i32 @llvm.abs.i32(i32 %14, i1 true), !dbg !12884
  call void @llvm.dbg.value(metadata i32 %19, metadata !2077, metadata !DIExpression()), !dbg !12874
  %20 = icmp ult i32 %19, 255, !dbg !12886
  %21 = select i1 %20, i32 %19, i32 255, !dbg !12886
  call void @llvm.dbg.value(metadata i32 %21, metadata !2077, metadata !DIExpression()), !dbg !12874
  %22 = trunc i32 %21 to i8, !dbg !12887
  %23 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12888
  %24 = load %struct.device_state*, %struct.device_state** %23, align 4, !dbg !12888
  %25 = getelementptr inbounds %struct.device_state, %struct.device_state* %24, i32 0, i32 0, !dbg !12889
  store i8 %22, i8* %25, align 1, !dbg !12890
  br label %26, !dbg !12891

26:                                               ; preds = %18, %16
  %27 = getelementptr inbounds %struct.device, %struct.device* %11, i32 0, i32 3, !dbg !12892
  %28 = load %struct.device_state*, %struct.device_state** %27, align 4, !dbg !12892
  %29 = getelementptr inbounds %struct.device_state, %struct.device_state* %28, i32 0, i32 1, !dbg !12893
  %30 = load i8, i8* %29, align 1, !dbg !12894
  %31 = or i8 %30, 1, !dbg !12894
  store i8 %31, i8* %29, align 1, !dbg !12894
  br label %32, !dbg !12895

32:                                               ; preds = %26, %8
  %33 = getelementptr inbounds %struct.init_entry, %struct.init_entry* %9, i32 1, !dbg !12896
  call void @llvm.dbg.value(metadata %struct.init_entry* %33, metadata !2063, metadata !DIExpression()), !dbg !12869
  %34 = icmp ult %struct.init_entry* %33, %6, !dbg !12871
  br i1 %34, label %8, label %35, !dbg !12872, !llvm.loop !12897

35:                                               ; preds = %32, %1
  ret void, !dbg !12899
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @__NVIC_SetPriority.205(i32 noundef %0, i32 noundef %1) unnamed_addr #14 !dbg !12900 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12902, metadata !DIExpression()), !dbg !12904
  call void @llvm.dbg.value(metadata i32 %1, metadata !12903, metadata !DIExpression()), !dbg !12904
  %3 = trunc i32 %1 to i8, !dbg !12905
  %4 = shl i8 %3, 4, !dbg !12905
  %5 = and i32 %0, 15, !dbg !12908
  %6 = add nsw i32 %5, -4, !dbg !12909
  %7 = getelementptr inbounds [12 x i8], [12 x i8]* inttoptr (i32 -536810216 to [12 x i8]*), i32 0, i32 %6, !dbg !12910
  store volatile i8 %4, i8* %7, align 1, !dbg !12911
  ret void, !dbg !12912
}

; Function Attrs: optsize
declare !dbg !12913 dso_local void @z_arm_cpu_idle_init() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_dummy_thread_init(%struct.k_thread* noundef %0) unnamed_addr #7 !dbg !12914 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !12917, metadata !DIExpression()), !dbg !12918
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !12919
  store i8 1, i8* %2, align 1, !dbg !12920
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !12921
  store i8 1, i8* %3, align 4, !dbg !12922
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !12923
  store i32 0, i32* %4, align 4, !dbg !12924
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !12925
  store i32 0, i32* %5, align 4, !dbg !12926
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !12927
  store %struct.k_heap* null, %struct.k_heap** %6, align 8, !dbg !12928
  store %struct.k_thread* %0, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12929
  ret void, !dbg !12930
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i8* @prepare_multithreading() unnamed_addr #1 !dbg !12931 {
  tail call void @z_sched_init() #25, !dbg !12936
  store %struct.k_thread* @z_main_thread, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !12937
  %1 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef nonnull @z_main_thread, %struct.z_thread_stack_element* noundef getelementptr inbounds ([1088 x %struct.z_thread_stack_element], [1088 x %struct.z_thread_stack_element]* @z_main_stack, i32 0, i32 0), i32 noundef 1024, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main, i8* noundef null, i8* noundef null, i8* noundef null, i32 noundef 0, i32 noundef 1, i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.206, i32 0, i32 0)) #25, !dbg !12938
  call void @llvm.dbg.value(metadata i8* %1, metadata !12935, metadata !DIExpression()), !dbg !12939
  tail call fastcc void @z_mark_thread_as_started(%struct.k_thread* noundef nonnull @z_main_thread) #24, !dbg !12940
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull @z_main_thread) #25, !dbg !12941
  tail call void @z_init_cpu(i32 noundef 0) #24, !dbg !12942
  ret i8* %1, !dbg !12943
}

; Function Attrs: noinline noreturn nounwind optsize
define internal fastcc void @switch_to_main_thread(i8* noundef %0) unnamed_addr #10 !dbg !12944 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12948, metadata !DIExpression()), !dbg !12949
  tail call void @arch_switch_to_main_thread(%struct.k_thread* noundef nonnull @z_main_thread, i8* noundef %0, void (i8*, i8*, i8*)* noundef nonnull @bg_thread_main) #25, !dbg !12950
  unreachable, !dbg !12951
}

; Function Attrs: noinline nounwind optsize
define internal void @bg_thread_main(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #1 !dbg !12952 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12954, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i8* %1, metadata !12955, metadata !DIExpression()), !dbg !12957
  call void @llvm.dbg.value(metadata i8* %2, metadata !12956, metadata !DIExpression()), !dbg !12957
  store i8 1, i8* @z_sys_post_kernel, align 1, !dbg !12958
  tail call fastcc void @z_sys_init_run_level(i32 noundef 3) #24, !dbg !12959
  tail call void @boot_banner() #25, !dbg !12960
  tail call fastcc void @z_sys_init_run_level(i32 noundef 4) #24, !dbg !12961
  tail call void @z_init_static_threads() #25, !dbg !12962
  tail call void @main() #25, !dbg !12963
  %4 = load i8, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12964
  %5 = and i8 %4, -2, !dbg !12964
  store i8 %5, i8* getelementptr inbounds (%struct.k_thread, %struct.k_thread* @z_main_thread, i32 0, i32 0, i32 2), align 4, !dbg !12964
  ret void, !dbg !12965
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #2

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !12966 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12976, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.value(metadata i8* %1, metadata !12977, metadata !DIExpression()), !dbg !12978
  ret void, !dbg !12979
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @k_thread_foreach_unlocked(void (%struct.k_thread*, i8*)* nocapture noundef %0, i8* nocapture noundef %1) local_unnamed_addr #3 !dbg !12980 {
  call void @llvm.dbg.value(metadata void (%struct.k_thread*, i8*)* %0, metadata !12982, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.value(metadata i8* %1, metadata !12983, metadata !DIExpression()), !dbg !12984
  ret void, !dbg !12985
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_is_in_isr() local_unnamed_addr #1 !dbg !12986 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !12987, !srcloc !12994
  call void @llvm.dbg.value(metadata i32 %1, metadata !12990, metadata !DIExpression()) #23, !dbg !12995
  %2 = icmp ne i32 %1, 0, !dbg !12996
  ret i1 %2, !dbg !12997
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_set() local_unnamed_addr #9 !dbg !12998 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !12999
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13000
  %3 = load i8, i8* %2, align 4, !dbg !13001
  %4 = or i8 %3, 1, !dbg !13001
  store i8 %4, i8* %2, align 4, !dbg !13001
  ret void, !dbg !13002
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_thread_essential_clear() local_unnamed_addr #9 !dbg !13003 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13004
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13005
  %3 = load i8, i8* %2, align 4, !dbg !13006
  %4 = and i8 %3, -2, !dbg !13006
  store i8 %4, i8* %2, align 4, !dbg !13006
  ret void, !dbg !13007
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_is_thread_essential() local_unnamed_addr #8 !dbg !13008 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13009
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 2, !dbg !13010
  %3 = load i8, i8* %2, align 4, !dbg !13010
  %4 = and i8 %3, 1, !dbg !13011
  %5 = icmp ne i8 %4, 0, !dbg !13012
  ret i1 %5, !dbg !13013
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_set(%struct.k_thread* noundef %0, i8* noundef %1) local_unnamed_addr #1 !dbg !13014 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13018, metadata !DIExpression()), !dbg !13020
  call void @llvm.dbg.value(metadata i8* %1, metadata !13019, metadata !DIExpression()), !dbg !13020
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13021
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %0, !dbg !13023
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !13018, metadata !DIExpression()), !dbg !13020
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 0, !dbg !13024
  %7 = tail call i8* @strncpy(i8* noundef nonnull %6, i8* noundef %1, i32 noundef 31) #25, !dbg !13025
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 4, i32 31, !dbg !13026
  store i8 0, i8* %8, align 1, !dbg !13027
  ret i32 0, !dbg !13028
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull i8* @k_thread_name_get(%struct.k_thread* noundef readnone %0) local_unnamed_addr #3 !dbg !13029 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13033, metadata !DIExpression()), !dbg !13034
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13035
  ret i8* %2, !dbg !13036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_name_copy(%struct.k_thread* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !13037 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13041, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i8* %1, metadata !13042, metadata !DIExpression()), !dbg !13044
  call void @llvm.dbg.value(metadata i32 %2, metadata !13043, metadata !DIExpression()), !dbg !13044
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13045
  %5 = tail call i8* @strncpy(i8* noundef %1, i8* noundef nonnull %4, i32 noundef %2) #25, !dbg !13046
  ret i32 0, !dbg !13047
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @k_thread_state_str(%struct.k_thread* nocapture noundef readonly %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #1 !dbg !2086 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !2203, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i8* %1, metadata !2204, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i32 %2, metadata !2205, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i32 0, metadata !2206, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i8 undef, metadata !2208, metadata !DIExpression()), !dbg !13048
  %4 = icmp eq i8* %1, null, !dbg !13049
  %5 = icmp eq i32 %2, 0
  %6 = or i1 %4, %5, !dbg !13051
  br i1 %6, label %46, label %7, !dbg !13051

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !13052
  %9 = load i8, i8* %8, align 1, !dbg !13052
  call void @llvm.dbg.value(metadata i8 %9, metadata !2208, metadata !DIExpression()), !dbg !13048
  %10 = add i32 %2, -1, !dbg !13053
  call void @llvm.dbg.value(metadata i32 %10, metadata !2205, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i8 0, metadata !2209, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.value(metadata i8 %9, metadata !2208, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i32 0, metadata !2206, metadata !DIExpression()), !dbg !13048
  %11 = icmp eq i8 %9, 0, !dbg !13055
  br i1 %11, label %12, label %15, !dbg !13057

12:                                               ; preds = %24, %7
  %13 = phi i32 [ 0, %7 ], [ %32, %24 ], !dbg !13058
  %14 = getelementptr inbounds i8, i8* %1, i32 %13, !dbg !13059
  store i8 0, i8* %14, align 1, !dbg !13060
  br label %46, !dbg !13061

15:                                               ; preds = %7, %42
  %16 = phi i8 [ %45, %42 ], [ 0, %7 ]
  %17 = phi i8 [ %44, %42 ], [ %9, %7 ]
  %18 = phi i32 [ %43, %42 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i8 %16, metadata !2209, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.value(metadata i8 %17, metadata !2208, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i32 %18, metadata !2206, metadata !DIExpression()), !dbg !13048
  %19 = zext i8 %17 to i32, !dbg !13062
  %20 = zext i8 %16 to i32, !dbg !13063
  %21 = shl nuw i32 1, %20, !dbg !13063
  call void @llvm.dbg.value(metadata i32 %21, metadata !2207, metadata !DIExpression()), !dbg !13048
  %22 = and i32 %21, %19, !dbg !13065
  %23 = icmp eq i32 %22, 0, !dbg !13067
  br i1 %23, label %42, label %24, !dbg !13068

24:                                               ; preds = %15
  %25 = getelementptr inbounds i8, i8* %1, i32 %18, !dbg !13069
  %26 = sub i32 %10, %18, !dbg !13070
  %27 = getelementptr inbounds [8 x i8*], [8 x i8*]* @k_thread_state_str.states_str, i32 0, i32 %20, !dbg !13071
  %28 = load i8*, i8** %27, align 4, !dbg !13071
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* @k_thread_state_str.states_sz, i32 0, i32 %20, !dbg !13072
  %30 = load i32, i32* %29, align 4, !dbg !13072
  %31 = tail call fastcc i32 @copy_bytes(i8* noundef %25, i32 noundef %26, i8* noundef %28, i32 noundef %30) #24, !dbg !13073
  %32 = add i32 %31, %18, !dbg !13074
  call void @llvm.dbg.value(metadata i32 %32, metadata !2206, metadata !DIExpression()), !dbg !13048
  %33 = trunc i32 %21 to i8, !dbg !13075
  %34 = xor i8 %33, -1, !dbg !13075
  %35 = and i8 %17, %34, !dbg !13075
  call void @llvm.dbg.value(metadata i8 %35, metadata !2208, metadata !DIExpression()), !dbg !13048
  %36 = icmp eq i8 %35, 0, !dbg !13076
  br i1 %36, label %12, label %37, !dbg !13078

37:                                               ; preds = %24
  %38 = getelementptr inbounds i8, i8* %1, i32 %32, !dbg !13079
  %39 = sub i32 %10, %32, !dbg !13081
  %40 = tail call fastcc i32 @copy_bytes(i8* noundef %38, i32 noundef %39, i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.209, i32 0, i32 0), i32 noundef 1) #24, !dbg !13082
  %41 = add i32 %40, %32, !dbg !13083
  call void @llvm.dbg.value(metadata i32 %41, metadata !2206, metadata !DIExpression()), !dbg !13048
  br label %42, !dbg !13084

42:                                               ; preds = %37, %15
  %43 = phi i32 [ %18, %15 ], [ %41, %37 ], !dbg !13048
  %44 = phi i8 [ %17, %15 ], [ %35, %37 ], !dbg !13048
  call void @llvm.dbg.value(metadata i8 %44, metadata !2208, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.value(metadata i32 %43, metadata !2206, metadata !DIExpression()), !dbg !13048
  %45 = add i8 %16, 1, !dbg !13085
  call void @llvm.dbg.value(metadata i8 %45, metadata !2209, metadata !DIExpression()), !dbg !13054
  br label %15, !dbg !13057

46:                                               ; preds = %3, %12
  %47 = phi i8* [ %1, %12 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6.210, i32 0, i32 0), %3 ], !dbg !13048
  ret i8* %47, !dbg !13086
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @copy_bytes(i8* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) unnamed_addr #1 !dbg !13087 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13091, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata i32 %1, metadata !13092, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata i8* %2, metadata !13093, metadata !DIExpression()), !dbg !13096
  call void @llvm.dbg.value(metadata i32 %3, metadata !13094, metadata !DIExpression()), !dbg !13096
  %5 = icmp ult i32 %1, %3, !dbg !13097
  %6 = select i1 %5, i32 %1, i32 %3, !dbg !13097
  call void @llvm.dbg.value(metadata i32 %6, metadata !13095, metadata !DIExpression()), !dbg !13096
  %7 = tail call i8* @memcpy(i8* noundef %0, i8* noundef %2, i32 noundef %6) #25, !dbg !13098
  ret i32 %6, !dbg !13099
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !13100 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13104, metadata !DIExpression()), !dbg !13105
  tail call void @z_sched_start(%struct.k_thread* noundef %0) #25, !dbg !13106
  ret void, !dbg !13107
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef %9) local_unnamed_addr #1 !dbg !13108 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13117, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13118, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i32 %2, metadata !13119, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13120, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i8* %4, metadata !13121, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i8* %5, metadata !13122, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i8* %6, metadata !13123, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i32 %7, metadata !13124, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i32 %8, metadata !13125, metadata !DIExpression()), !dbg !13128
  call void @llvm.dbg.value(metadata i8* %9, metadata !13126, metadata !DIExpression()), !dbg !13128
  %11 = icmp eq i32 %7, 15, !dbg !13129
  br i1 %11, label %12, label %15, !dbg !13129

12:                                               ; preds = %10
  %13 = bitcast void (i8*, i8*, i8*)* %3 to i8*, !dbg !13129
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef %13) #24, !dbg !13129
  br i1 %14, label %19, label %18, !dbg !13129

15:                                               ; preds = %10
  %16 = add i32 %7, 16, !dbg !13129
  %17 = icmp ult i32 %16, 31, !dbg !13129
  br i1 %17, label %19, label %18, !dbg !13129

18:                                               ; preds = %12, %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([128 x i8], [128 x i8]* @.str.10.221, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.222, i32 0, i32 0), i32 noundef 536) #25, !dbg !13133
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12.223, i32 0, i32 0), i32 noundef %7, i32 noundef 14, i32 noundef -16) #25, !dbg !13133
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.222, i32 0, i32 0), i32 noundef 536) #25, !dbg !13133
  unreachable, !dbg !13133

19:                                               ; preds = %15, %12
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !13135
  tail call fastcc void @z_waitq_init(%struct._wait_q_t* noundef nonnull %20) #24, !dbg !13136
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, !dbg !13137
  tail call void @z_init_thread_base(%struct._thread_base* noundef %21, i32 noundef %7, i32 noundef 4, i32 noundef %8) #24, !dbg !13138
  %22 = tail call fastcc i8* @setup_thread_stack(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) #24, !dbg !13139
  call void @llvm.dbg.value(metadata i8* %22, metadata !13127, metadata !DIExpression()), !dbg !13128
  tail call void @arch_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i8* noundef %22, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6) #25, !dbg !13140
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 2, !dbg !13141
  store i8* null, i8** %23, align 4, !dbg !13142
  %24 = icmp eq i8* %9, null, !dbg !13143
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 0, !dbg !13145
  br i1 %24, label %29, label %26, !dbg !13146

26:                                               ; preds = %19
  %27 = tail call i8* @strncpy(i8* noundef nonnull %25, i8* noundef nonnull %9, i32 noundef 31) #25, !dbg !13147
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 4, i32 31, !dbg !13149
  store i8 0, i8* %28, align 1, !dbg !13150
  br label %30, !dbg !13151

29:                                               ; preds = %19
  store i8 0, i8* %25, align 8, !dbg !13152
  br label %30

30:                                               ; preds = %29, %26
  %31 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13154
  %32 = icmp eq %struct.k_thread* %31, null, !dbg !13154
  br i1 %32, label %36, label %33, !dbg !13156

33:                                               ; preds = %30
  %34 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %31, i32 0, i32 7, !dbg !13157
  %35 = load %struct.k_heap*, %struct.k_heap** %34, align 8, !dbg !13157
  br label %36, !dbg !13158

36:                                               ; preds = %30, %33
  %37 = phi %struct.k_heap* [ %35, %33 ], [ null, %30 ], !dbg !13128
  %38 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 7, !dbg !13159
  store %struct.k_heap* %37, %struct.k_heap** %38, align 8, !dbg !13161
  ret i8* %22, !dbg !13162
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_entry(i8* noundef readnone %0) unnamed_addr #3 !dbg !13163 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13167, metadata !DIExpression()), !dbg !13168
  %2 = icmp eq i8* %0, bitcast (void (i8*, i8*, i8*)* @idle to i8*), !dbg !13169
  ret i1 %2, !dbg !13170
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13171 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13176, metadata !DIExpression()), !dbg !13177
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13178
  tail call fastcc void @sys_dlist_init(%struct._dnode* noundef %2) #24, !dbg !13179
  ret void, !dbg !13180
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @z_init_thread_base(%struct._thread_base* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #7 !dbg !13181 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13186, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata i32 %1, metadata !13187, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata i32 %2, metadata !13188, metadata !DIExpression()), !dbg !13190
  call void @llvm.dbg.value(metadata i32 %3, metadata !13189, metadata !DIExpression()), !dbg !13190
  %5 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 1, !dbg !13191
  store %struct._wait_q_t* null, %struct._wait_q_t** %5, align 8, !dbg !13192
  %6 = trunc i32 %3 to i8, !dbg !13193
  %7 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 2, !dbg !13194
  store i8 %6, i8* %7, align 4, !dbg !13195
  %8 = trunc i32 %2 to i8, !dbg !13196
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 3, !dbg !13197
  store i8 %8, i8* %9, align 1, !dbg !13198
  %10 = trunc i32 %1 to i8, !dbg !13199
  %11 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 4, !dbg !13200
  %12 = bitcast %union.anon.2* %11 to %struct.device_state*, !dbg !13200
  %13 = bitcast %union.anon.2* %11 to i8*, !dbg !13200
  store i8 %10, i8* %13, align 2, !dbg !13201
  %14 = getelementptr inbounds %struct.device_state, %struct.device_state* %12, i32 0, i32 1, !dbg !13202
  store i8 0, i8* %14, align 1, !dbg !13203
  tail call fastcc void @z_init_thread_timeout(%struct._thread_base* noundef %0) #24, !dbg !13204
  ret void, !dbg !13205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc i8* @setup_thread_stack(%struct.k_thread* nocapture noundef writeonly %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2) unnamed_addr #7 !dbg !13206 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13210, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13211, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.value(metadata i32 %2, metadata !13212, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.value(metadata i32 0, metadata !13217, metadata !DIExpression()), !dbg !13218
  %4 = add i32 %2, 7, !dbg !13219
  %5 = and i32 %4, -8, !dbg !13219
  %6 = add i32 %5, 64, !dbg !13219
  call void @llvm.dbg.value(metadata i32 %6, metadata !13213, metadata !DIExpression()), !dbg !13218
  %7 = tail call fastcc i8* @Z_KERNEL_STACK_BUFFER.224(%struct.z_thread_stack_element* noundef %1) #24, !dbg !13221
  call void @llvm.dbg.value(metadata i8* %7, metadata !13216, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.value(metadata i32 %5, metadata !13214, metadata !DIExpression()), !dbg !13218
  %8 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %1, i32 %6, i32 0, !dbg !13222
  call void @llvm.dbg.value(metadata i8* %8, metadata !13215, metadata !DIExpression()), !dbg !13218
  call void @llvm.dbg.value(metadata i32 0, metadata !13217, metadata !DIExpression()), !dbg !13218
  %9 = ptrtoint i8* %7 to i32, !dbg !13223
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 0, !dbg !13224
  store i32 %9, i32* %10, align 4, !dbg !13225
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 1, !dbg !13226
  store i32 %5, i32* %11, align 4, !dbg !13227
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 6, i32 2, !dbg !13228
  store i32 0, i32* %12, align 4, !dbg !13229
  call void @llvm.dbg.value(metadata i8* %8, metadata !13215, metadata !DIExpression()), !dbg !13218
  ret i8* %8, !dbg !13230
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc nonnull i8* @Z_KERNEL_STACK_BUFFER.224(%struct.z_thread_stack_element* noundef readnone %0) unnamed_addr #3 !dbg !13231 {
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %0, metadata !13235, metadata !DIExpression()), !dbg !13236
  %2 = getelementptr inbounds %struct.z_thread_stack_element, %struct.z_thread_stack_element* %0, i32 64, i32 0, !dbg !13237
  ret i8* %2, !dbg !13238
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_thread_timeout(%struct._thread_base* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13239 {
  call void @llvm.dbg.value(metadata %struct._thread_base* %0, metadata !13244, metadata !DIExpression()), !dbg !13245
  %2 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %0, i32 0, i32 7, !dbg !13246
  tail call fastcc void @z_init_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !13247
  ret void, !dbg !13248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_init_timeout(%struct._timeout* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13249 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !13251, metadata !DIExpression()), !dbg !13252
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !13253
  tail call fastcc void @sys_dnode_init(%struct._dnode* noundef %2) #24, !dbg !13254
  ret void, !dbg !13255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !13256 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13260, metadata !DIExpression()), !dbg !13261
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13262
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !13263
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13264
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !13265
  ret void, !dbg !13266
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13267 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13272, metadata !DIExpression()), !dbg !13273
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13274
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13275
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13276
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13277
  ret void, !dbg !13278
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_impl_k_thread_create(%struct.k_thread* noundef returned %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, [1 x i64] %9) local_unnamed_addr #1 !dbg !13279 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13296, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13287, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata %struct.z_thread_stack_element* %1, metadata !13288, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i32 %2, metadata !13289, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %3, metadata !13290, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i8* %4, metadata !13291, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i8* %5, metadata !13292, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i8* %6, metadata !13293, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i32 %7, metadata !13294, metadata !DIExpression()), !dbg !13297
  call void @llvm.dbg.value(metadata i32 %8, metadata !13295, metadata !DIExpression()), !dbg !13297
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13298, !srcloc !12994
  call void @llvm.dbg.value(metadata i32 %11, metadata !12990, metadata !DIExpression()) #23, !dbg !13303
  %12 = icmp eq i32 %11, 0, !dbg !13304
  br i1 %12, label %14, label %13, !dbg !13305

13:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.227, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.222, i32 0, i32 0), i32 noundef 647) #25, !dbg !13306
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.228, i32 0, i32 0)) #25, !dbg !13306
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.222, i32 0, i32 0), i32 noundef 647) #25, !dbg !13306
  unreachable, !dbg !13306

14:                                               ; preds = %10
  %15 = extractvalue [1 x i64] %9, 0
  call void @llvm.dbg.value(metadata i64 %15, metadata !13296, metadata !DIExpression()), !dbg !13297
  %16 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %0, %struct.z_thread_stack_element* noundef %1, i32 noundef %2, void (i8*, i8*, i8*)* noundef %3, i8* noundef %4, i8* noundef %5, i8* noundef %6, i32 noundef %7, i32 noundef %8, i8* noundef null) #24, !dbg !13308
  %17 = icmp eq i64 %15, -1, !dbg !13309
  br i1 %17, label %19, label %18, !dbg !13311

18:                                               ; preds = %14
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %9) #24, !dbg !13312
  br label %19, !dbg !13314

19:                                               ; preds = %18, %14
  ret %struct.k_thread* %0, !dbg !13315
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @schedule_new_thread(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13316 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13321, metadata !DIExpression()), !dbg !13322
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13320, metadata !DIExpression()), !dbg !13322
  %4 = icmp eq i64 %3, 0, !dbg !13323
  br i1 %4, label %5, label %6, !dbg !13325

5:                                                ; preds = %2
  tail call fastcc void @k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13326
  br label %7, !dbg !13328

6:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !13329
  br label %7

7:                                                ; preds = %6, %5
  ret void, !dbg !13331
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_start(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !13332 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13336, metadata !DIExpression()), !dbg !13337
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !13338, !srcloc !13340
  tail call void @z_impl_k_thread_start(%struct.k_thread* noundef %0) #24, !dbg !13341
  ret void, !dbg !13342
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !13343 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !13346, metadata !DIExpression()), !dbg !13347
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13345, metadata !DIExpression()), !dbg !13347
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !13348
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !13349
  ret void, !dbg !13350
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_init_static_threads() local_unnamed_addr #1 !dbg !13351 {
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13353, metadata !DIExpression()), !dbg !13373
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %1, label %2, !dbg !13374

1:                                                ; preds = %6, %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.222, i32 0, i32 0), i32 noundef 750) #25, !dbg !13378
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.232, i32 0, i32 0)) #25, !dbg !13378
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.222, i32 0, i32 0), i32 noundef 750) #25, !dbg !13378
  unreachable, !dbg !13378

2:                                                ; preds = %0, %6
  %3 = phi %struct._static_thread_data* [ %31, %6 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %0 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %3, metadata !13353, metadata !DIExpression()), !dbg !13373
  %4 = icmp ult %struct._static_thread_data* %3, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13381
  br i1 %4, label %6, label %5, !dbg !13382

5:                                                ; preds = %2
  tail call void @k_sched_lock() #25, !dbg !13383
  call void @llvm.dbg.value(metadata %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), metadata !13371, metadata !DIExpression()), !dbg !13384
  br i1 icmp ugt (%struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %struct._static_thread_data* getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0)), label %33, label %34, !dbg !13385

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 0, !dbg !13389
  %8 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13389
  %9 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 1, !dbg !13391
  %10 = load %struct.z_thread_stack_element*, %struct.z_thread_stack_element** %9, align 4, !dbg !13391
  %11 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 2, !dbg !13392
  %12 = load i32, i32* %11, align 4, !dbg !13392
  %13 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 3, !dbg !13393
  %14 = load void (i8*, i8*, i8*)*, void (i8*, i8*, i8*)** %13, align 4, !dbg !13393
  %15 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 4, !dbg !13394
  %16 = load i8*, i8** %15, align 4, !dbg !13394
  %17 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 5, !dbg !13395
  %18 = load i8*, i8** %17, align 4, !dbg !13395
  %19 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 6, !dbg !13396
  %20 = load i8*, i8** %19, align 4, !dbg !13396
  %21 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 7, !dbg !13397
  %22 = load i32, i32* %21, align 4, !dbg !13397
  %23 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 8, !dbg !13398
  %24 = load i32, i32* %23, align 4, !dbg !13398
  %25 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 0, i32 11, !dbg !13399
  %26 = load i8*, i8** %25, align 4, !dbg !13399
  %27 = tail call i8* @z_setup_new_thread(%struct.k_thread* noundef %8, %struct.z_thread_stack_element* noundef %10, i32 noundef %12, void (i8*, i8*, i8*)* noundef %14, i8* noundef %16, i8* noundef %18, i8* noundef %20, i32 noundef %22, i32 noundef %24, i8* noundef %26) #24, !dbg !13400
  %28 = load %struct.k_thread*, %struct.k_thread** %7, align 4, !dbg !13401
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 2, !dbg !13402
  %30 = bitcast i8** %29 to %struct._static_thread_data**, !dbg !13403
  store %struct._static_thread_data* %3, %struct._static_thread_data** %30, align 4, !dbg !13403
  %31 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %3, i32 1, !dbg !13404
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %31, metadata !13353, metadata !DIExpression()), !dbg !13373
  %32 = icmp ugt %struct._static_thread_data* %31, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13405
  br i1 %32, label %1, label %2, !dbg !13374, !llvm.loop !13406

33:                                               ; preds = %50, %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.220, i32 0, i32 0), i8* noundef getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15.231, i32 0, i32 0), i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.222, i32 0, i32 0), i32 noundef 781) #25, !dbg !13408
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16.232, i32 0, i32 0)) #25, !dbg !13408
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11.222, i32 0, i32 0), i32 noundef 781) #25, !dbg !13408
  unreachable, !dbg !13408

34:                                               ; preds = %5, %50
  %35 = phi %struct._static_thread_data* [ %51, %50 ], [ getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_start, i32 0, i32 0), %5 ]
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %35, metadata !13371, metadata !DIExpression()), !dbg !13384
  %36 = icmp ult %struct._static_thread_data* %35, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13411
  br i1 %36, label %38, label %37, !dbg !13412

37:                                               ; preds = %34
  tail call void @k_sched_unlock() #25, !dbg !13413
  ret void, !dbg !13414

38:                                               ; preds = %34
  %39 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 9, !dbg !13415
  %40 = load i32, i32* %39, align 4, !dbg !13415
  %41 = icmp eq i32 %40, -1, !dbg !13418
  br i1 %41, label %50, label %42, !dbg !13419

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 0, i32 0, !dbg !13420
  %44 = load %struct.k_thread*, %struct.k_thread** %43, align 4, !dbg !13420
  %45 = icmp sgt i32 %40, 0, !dbg !13422
  %46 = select i1 %45, i32 %40, i32 0, !dbg !13422
  %47 = zext i32 %46 to i64, !dbg !13422
  %48 = tail call fastcc i64 @k_ms_to_ticks_ceil64.233(i64 noundef %47) #24, !dbg !13422
  %49 = insertvalue [1 x i64] poison, i64 %48, 0, !dbg !13423
  tail call fastcc void @schedule_new_thread(%struct.k_thread* noundef %44, [1 x i64] %49) #24, !dbg !13423
  br label %50, !dbg !13424

50:                                               ; preds = %38, %42
  %51 = getelementptr inbounds %struct._static_thread_data, %struct._static_thread_data* %35, i32 1, !dbg !13425
  call void @llvm.dbg.value(metadata %struct._static_thread_data* %51, metadata !13371, metadata !DIExpression()), !dbg !13384
  %52 = icmp ugt %struct._static_thread_data* %51, getelementptr inbounds ([0 x %struct._static_thread_data], [0 x %struct._static_thread_data]* @__static_thread_data_list_end, i32 0, i32 0), !dbg !13426
  br i1 %52, label %33, label %34, !dbg !13385, !llvm.loop !13427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ms_to_ticks_ceil64.233(i64 noundef %0) unnamed_addr #3 !dbg !13429 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !13431, metadata !DIExpression()), !dbg !13432
  call void @llvm.dbg.value(metadata i64 %0, metadata !13433, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 1000, metadata !13436, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i32 10000, metadata !13437, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8 1, metadata !13438, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8 0, metadata !13439, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8 1, metadata !13440, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8 0, metadata !13441, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8 1, metadata !13442, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i8 0, metadata !13443, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i64 0, metadata !13444, metadata !DIExpression()), !dbg !13448
  call void @llvm.dbg.value(metadata i64 0, metadata !13444, metadata !DIExpression()), !dbg !13448
  %2 = mul i64 %0, 10, !dbg !13450
  ret i64 %2, !dbg !13456
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @k_thread_user_mode_enter(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #10 !dbg !13457 {
  call void @llvm.dbg.value(metadata void (i8*, i8*, i8*)* %0, metadata !13459, metadata !DIExpression()), !dbg !13463
  call void @llvm.dbg.value(metadata i8* %1, metadata !13460, metadata !DIExpression()), !dbg !13463
  call void @llvm.dbg.value(metadata i8* %2, metadata !13461, metadata !DIExpression()), !dbg !13463
  call void @llvm.dbg.value(metadata i8* %3, metadata !13462, metadata !DIExpression()), !dbg !13463
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13464
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 2, !dbg !13465
  %7 = load i8, i8* %6, align 4, !dbg !13466
  %8 = or i8 %7, 4, !dbg !13466
  store i8 %8, i8* %6, align 4, !dbg !13466
  tail call void @z_thread_essential_clear() #24, !dbg !13467
  tail call void @z_thread_entry(void (i8*, i8*, i8*)* noundef %0, i8* noundef %1, i8* noundef %2, i8* noundef %3) #27, !dbg !13468
  unreachable, !dbg !13468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !13469 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13474, metadata !DIExpression()), !dbg !13476
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13477
  %3 = load i32, i32* %2, align 4, !dbg !13477
  call void @llvm.dbg.value(metadata i32 %3, metadata !13475, metadata !DIExpression()), !dbg !13476
  %4 = icmp eq i32 %3, 0, !dbg !13478
  br i1 %4, label %10, label %5, !dbg !13480

5:                                                ; preds = %1
  %6 = and i32 %3, 3, !dbg !13481
  %7 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13484
  %8 = zext i8 %7 to i32, !dbg !13485
  %9 = icmp eq i32 %6, %8, !dbg !13486
  br i1 %9, label %11, label %10, !dbg !13487

10:                                               ; preds = %5, %1
  br label %11, !dbg !13488

11:                                               ; preds = %5, %10
  %12 = phi i1 [ true, %10 ], [ false, %5 ], !dbg !13476
  ret i1 %12, !dbg !13489
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* nocapture noundef %0) local_unnamed_addr #9 !dbg !13490 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13492, metadata !DIExpression()), !dbg !13493
  %2 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13494
  %3 = load i32, i32* %2, align 4, !dbg !13494
  %4 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13496
  %5 = zext i8 %4 to i32, !dbg !13497
  %6 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13498
  %7 = ptrtoint %struct.k_thread* %6 to i32, !dbg !13499
  %8 = or i32 %7, %5, !dbg !13500
  %9 = icmp eq i32 %3, %8, !dbg !13501
  br i1 %9, label %10, label %11, !dbg !13502

10:                                               ; preds = %1
  store i32 0, i32* %2, align 4, !dbg !13503
  br label %11, !dbg !13504

11:                                               ; preds = %1, %10
  ret i1 %9, !dbg !13505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @z_spin_lock_set_owner(%struct.k_spinlock* nocapture noundef writeonly %0) local_unnamed_addr #9 !dbg !13506 {
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !13510, metadata !DIExpression()), !dbg !13511
  %2 = load i8, i8* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 5), align 4, !dbg !13512
  %3 = zext i8 %2 to i32, !dbg !13513
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13514
  %5 = ptrtoint %struct.k_thread* %4 to i32, !dbg !13515
  %6 = or i32 %5, %3, !dbg !13516
  %7 = getelementptr inbounds %struct.k_spinlock, %struct.k_spinlock* %0, i32 0, i32 0, !dbg !13517
  store i32 %6, i32* %7, align 4, !dbg !13518
  ret void, !dbg !13519
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_disable(%struct.k_thread* nocapture noundef readnone %0) local_unnamed_addr #3 !dbg !13520 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13524, metadata !DIExpression()), !dbg !13525
  ret i32 -134, !dbg !13526
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @z_impl_k_float_enable(%struct.k_thread* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #3 !dbg !13527 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13531, metadata !DIExpression()), !dbg !13533
  call void @llvm.dbg.value(metadata i32 %1, metadata !13532, metadata !DIExpression()), !dbg !13533
  ret i32 -134, !dbg !13534
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_get(%struct.k_thread* noundef readnone %0, %struct._cpu_arch* noundef readnone %1) local_unnamed_addr #3 !dbg !13535 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13542, metadata !DIExpression()), !dbg !13544
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %1, metadata !13543, metadata !DIExpression()), !dbg !13544
  %3 = icmp eq %struct.k_thread* %0, null, !dbg !13545
  %4 = icmp eq %struct._cpu_arch* %1, null
  %5 = or i1 %3, %4, !dbg !13547
  %6 = select i1 %5, i32 -22, i32 0, !dbg !13544
  ret i32 %6, !dbg !13548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @k_thread_runtime_stats_all_get(%struct._cpu_arch* noundef readnone %0) local_unnamed_addr #3 !dbg !13549 {
  call void @llvm.dbg.value(metadata %struct._cpu_arch* %0, metadata !13553, metadata !DIExpression()), !dbg !13554
  %2 = icmp eq %struct._cpu_arch* %0, null, !dbg !13555
  %3 = select i1 %2, i32 -22, i32 0, !dbg !13554
  ret i32 %3, !dbg !13557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pm_save_idle_exit() local_unnamed_addr #1 !dbg !13558 {
  tail call void @sys_clock_idle_exit() #25, !dbg !13560
  ret void, !dbg !13561
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @idle(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1, i8* nocapture noundef readnone %2) #10 !dbg !13562 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !13564, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata i8* %1, metadata !13565, metadata !DIExpression()), !dbg !13567
  call void @llvm.dbg.value(metadata i8* %2, metadata !13566, metadata !DIExpression()), !dbg !13567
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13568
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13568
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13568
  %7 = load i8, i8* %6, align 2, !dbg !13568
  %8 = icmp sgt i8 %7, -1, !dbg !13568
  br i1 %8, label %10, label %9, !dbg !13571

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.242, i32 0, i32 0), i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.243, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.244, i32 0, i32 0), i32 noundef 39) #25, !dbg !13572
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.244, i32 0, i32 0), i32 noundef 39) #25, !dbg !13572
  unreachable, !dbg !13572

10:                                               ; preds = %3, %10
  %11 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13574, !srcloc !13581
  call void @llvm.dbg.value(metadata i32 undef, metadata !13577, metadata !DIExpression()) #23, !dbg !13582
  call void @llvm.dbg.value(metadata i32 undef, metadata !13578, metadata !DIExpression()) #23, !dbg !13582
  tail call fastcc void @k_cpu_idle() #24, !dbg !13583
  br label %10, !dbg !13584, !llvm.loop !13585
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_cpu_idle() unnamed_addr #1 !dbg !13587 {
  tail call void @arch_cpu_idle() #25, !dbg !13588
  ret void, !dbg !13589
}

; Function Attrs: optsize
declare !dbg !13590 dso_local void @arch_cpu_idle() local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_mutex_init(%struct.k_mutex* noundef %0) local_unnamed_addr #7 !dbg !13591 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13602, metadata !DIExpression()), !dbg !13603
  %2 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13604
  store %struct.k_thread* null, %struct.k_thread** %2, align 4, !dbg !13605
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13606
  store i32 0, i32* %3, align 4, !dbg !13607
  %4 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13608
  tail call fastcc void @z_waitq_init.245(%struct._wait_q_t* noundef %4) #24, !dbg !13609
  ret i32 0, !dbg !13610
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.245(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !13611 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13615, metadata !DIExpression()), !dbg !13616
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13617
  tail call fastcc void @sys_dlist_init.246(%struct._dnode* noundef %2) #24, !dbg !13618
  ret void, !dbg !13619
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.246(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !13620 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13625, metadata !DIExpression()), !dbg !13626
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13627
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !13628
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !13629
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !13630
  ret void, !dbg !13631
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !13632 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !13641, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13640, metadata !DIExpression()), !dbg !13653
  call void @llvm.dbg.value(metadata i8 0, metadata !13648, metadata !DIExpression()), !dbg !13653
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13654, !srcloc !13663
  call void @llvm.dbg.value(metadata i32 %4, metadata !13657, metadata !DIExpression()) #23, !dbg !13664
  %5 = icmp eq i32 %4, 0, !dbg !13665
  br i1 %5, label %7, label %6, !dbg !13666

6:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 101) #25, !dbg !13667
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.252, i32 0, i32 0)) #25, !dbg !13667
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 101) #25, !dbg !13667
  unreachable, !dbg !13667

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.253, metadata !13669, metadata !DIExpression()) #23, !dbg !13676
  %8 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13678, !srcloc !13684
  call void @llvm.dbg.value(metadata i32 undef, metadata !13681, metadata !DIExpression()) #23, !dbg !13685
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()) #23, !dbg !13685
  call void @llvm.dbg.value(metadata i32 undef, metadata !13675, metadata !DIExpression()) #23, !dbg !13676
  %9 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13686
  br i1 %9, label %11, label %10, !dbg !13689

10:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 148) #25, !dbg !13690
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.256, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13690
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 148) #25, !dbg !13690
  unreachable, !dbg !13690

11:                                               ; preds = %7
  %12 = extractvalue { i32, i32 } %8, 0, !dbg !13678
  call void @llvm.dbg.value(metadata i32 %12, metadata !13681, metadata !DIExpression()) #23, !dbg !13685
  call void @llvm.dbg.value(metadata i32 %12, metadata !13675, metadata !DIExpression()) #23, !dbg !13676
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13692
  call void @llvm.dbg.value(metadata i32 %12, metadata !13643, metadata !DIExpression()), !dbg !13653
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13693
  %14 = load i32, i32* %13, align 4, !dbg !13693
  %15 = icmp eq i32 %14, 0, !dbg !13693
  br i1 %15, label %21, label %16, !dbg !13693

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13693
  %18 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13693
  %19 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13693
  %20 = icmp eq %struct.k_thread* %18, %19, !dbg !13693
  br i1 %20, label %27, label %39, !dbg !13695, !prof !13696

21:                                               ; preds = %11
  %22 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13697
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %22, i32 0, i32 0, i32 4, !dbg !13699
  %24 = bitcast %union.anon.2* %23 to i8*, !dbg !13699
  %25 = load i8, i8* %24, align 2, !dbg !13699
  %26 = sext i8 %25 to i32, !dbg !13697
  br label %30, !dbg !13700

27:                                               ; preds = %16
  %28 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13701
  %29 = load i32, i32* %28, align 4, !dbg !13701
  br label %30, !dbg !13700

30:                                               ; preds = %27, %21
  %31 = phi %struct.k_thread* [ %22, %21 ], [ %18, %27 ], !dbg !13702
  %32 = phi i32 [ %26, %21 ], [ %29, %27 ], !dbg !13700
  %33 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13703
  store i32 %32, i32* %33, align 4, !dbg !13704
  %34 = add i32 %14, 1, !dbg !13705
  store i32 %34, i32* %13, align 4, !dbg !13705
  %35 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13706
  store %struct.k_thread* %31, %struct.k_thread** %35, align 4, !dbg !13707
  call void @llvm.dbg.value(metadata i32 undef, metadata !13708, metadata !DIExpression()) #23, !dbg !13714
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.253, metadata !13713, metadata !DIExpression()) #23, !dbg !13714
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13716
  br i1 %36, label %38, label %37, !dbg !13719

37:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 194) #25, !dbg !13720
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.258, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13720
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 194) #25, !dbg !13720
  unreachable, !dbg !13720

38:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %12, metadata !13708, metadata !DIExpression()) #23, !dbg !13714
  call void @llvm.dbg.value(metadata i32 %12, metadata !13722, metadata !DIExpression()) #23, !dbg !13725
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13727, !srcloc !13728
  br label %97, !dbg !13729

39:                                               ; preds = %16
  %40 = icmp eq i64 %3, 0, !dbg !13730
  br i1 %40, label %41, label %45, !dbg !13732, !prof !13733

41:                                               ; preds = %39
  call void @llvm.dbg.value(metadata i32 undef, metadata !13708, metadata !DIExpression()) #23, !dbg !13734
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.253, metadata !13713, metadata !DIExpression()) #23, !dbg !13734
  %42 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13737
  br i1 %42, label %44, label %43, !dbg !13738

43:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 194) #25, !dbg !13739
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.258, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13739
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 194) #25, !dbg !13739
  unreachable, !dbg !13739

44:                                               ; preds = %41
  call void @llvm.dbg.value(metadata i32 %12, metadata !13708, metadata !DIExpression()) #23, !dbg !13734
  call void @llvm.dbg.value(metadata i32 %12, metadata !13722, metadata !DIExpression()) #23, !dbg !13740
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !13742, !srcloc !13728
  br label %97, !dbg !13743

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %19, i32 0, i32 0, i32 4, !dbg !13744
  %47 = bitcast %union.anon.2* %46 to i8*, !dbg !13744
  %48 = load i8, i8* %47, align 2, !dbg !13744
  %49 = sext i8 %48 to i32, !dbg !13745
  %50 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %18, i32 0, i32 0, i32 4, !dbg !13746
  %51 = bitcast %union.anon.2* %50 to i8*, !dbg !13746
  %52 = load i8, i8* %51, align 2, !dbg !13746
  %53 = sext i8 %52 to i32, !dbg !13747
  %54 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %49, i32 noundef %53) #24, !dbg !13748
  call void @llvm.dbg.value(metadata i32 %54, metadata !13642, metadata !DIExpression()), !dbg !13653
  %55 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %54, i32 noundef %53) #24, !dbg !13749
  br i1 %55, label %56, label %58, !dbg !13751

56:                                               ; preds = %45
  %57 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %54) #24, !dbg !13752
  call void @llvm.dbg.value(metadata i1 %57, metadata !13648, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13653
  br label %58, !dbg !13754

58:                                               ; preds = %56, %45
  %59 = phi i1 [ %57, %56 ], [ false, %45 ]
  call void @llvm.dbg.value(metadata i8 poison, metadata !13648, metadata !DIExpression()), !dbg !13653
  %60 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13755
  %61 = insertvalue [1 x i32] poison, i32 %12, 0, !dbg !13756
  %62 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.253, [1 x i32] %61, %struct._wait_q_t* noundef %60, [1 x i64] %1) #25, !dbg !13756
  call void @llvm.dbg.value(metadata i32 %62, metadata !13649, metadata !DIExpression()), !dbg !13653
  %63 = icmp eq i32 %62, 0, !dbg !13757
  br i1 %63, label %97, label %64, !dbg !13759

64:                                               ; preds = %58
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.253, metadata !13669, metadata !DIExpression()) #23, !dbg !13760
  %65 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13762, !srcloc !13684
  call void @llvm.dbg.value(metadata i32 undef, metadata !13681, metadata !DIExpression()) #23, !dbg !13764
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()) #23, !dbg !13764
  call void @llvm.dbg.value(metadata i32 undef, metadata !13675, metadata !DIExpression()) #23, !dbg !13760
  %66 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13765
  br i1 %66, label %68, label %67, !dbg !13766

67:                                               ; preds = %64
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 148) #25, !dbg !13767
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.256, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13767
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 148) #25, !dbg !13767
  unreachable, !dbg !13767

68:                                               ; preds = %64
  %69 = extractvalue { i32, i32 } %65, 0, !dbg !13762
  call void @llvm.dbg.value(metadata i32 %69, metadata !13681, metadata !DIExpression()) #23, !dbg !13764
  call void @llvm.dbg.value(metadata i32 %69, metadata !13675, metadata !DIExpression()) #23, !dbg !13760
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13768
  call void @llvm.dbg.value(metadata i32 %69, metadata !13643, metadata !DIExpression()), !dbg !13653
  %70 = load %struct.k_thread*, %struct.k_thread** %17, align 4, !dbg !13769
  %71 = icmp eq %struct.k_thread* %70, null, !dbg !13769
  br i1 %71, label %90, label %72, !dbg !13770, !prof !13733

72:                                               ; preds = %68
  %73 = tail call fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef nonnull %60) #24, !dbg !13771
  call void @llvm.dbg.value(metadata %struct.k_thread* %73, metadata !13650, metadata !DIExpression()), !dbg !13772
  %74 = icmp eq %struct.k_thread* %73, null, !dbg !13773
  br i1 %74, label %83, label %75, !dbg !13774

75:                                               ; preds = %72
  %76 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %73, i32 0, i32 0, i32 4, !dbg !13775
  %77 = bitcast %union.anon.2* %76 to i8*, !dbg !13775
  %78 = load i8, i8* %77, align 2, !dbg !13775
  %79 = sext i8 %78 to i32, !dbg !13776
  %80 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13777
  %81 = load i32, i32* %80, align 4, !dbg !13777
  %82 = tail call fastcc i32 @new_prio_for_inheritance(i32 noundef %79, i32 noundef %81) #24, !dbg !13778
  br label %86, !dbg !13774

83:                                               ; preds = %72
  %84 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13779
  %85 = load i32, i32* %84, align 4, !dbg !13779
  br label %86, !dbg !13774

86:                                               ; preds = %83, %75
  %87 = phi i32 [ %82, %75 ], [ %85, %83 ], !dbg !13774
  call void @llvm.dbg.value(metadata i32 %87, metadata !13642, metadata !DIExpression()), !dbg !13653
  %88 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %87) #24, !dbg !13780
  %89 = select i1 %88, i1 true, i1 %59, !dbg !13781
  call void @llvm.dbg.value(metadata i1 %89, metadata !13648, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !13653
  call void @llvm.dbg.value(metadata i8 poison, metadata !13648, metadata !DIExpression()), !dbg !13653
  br i1 %89, label %91, label %93, !dbg !13782

90:                                               ; preds = %68
  call void @llvm.dbg.value(metadata i8 poison, metadata !13648, metadata !DIExpression()), !dbg !13653
  br i1 %59, label %91, label %93, !dbg !13782

91:                                               ; preds = %86, %90
  %92 = insertvalue [1 x i32] poison, i32 %69, 0, !dbg !13783
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.253, [1 x i32] %92) #25, !dbg !13783
  br label %97, !dbg !13786

93:                                               ; preds = %86, %90
  call void @llvm.dbg.value(metadata i32 undef, metadata !13708, metadata !DIExpression()) #23, !dbg !13787
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.253, metadata !13713, metadata !DIExpression()) #23, !dbg !13787
  %94 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13790
  br i1 %94, label %96, label %95, !dbg !13791

95:                                               ; preds = %93
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 194) #25, !dbg !13792
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.258, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13792
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 194) #25, !dbg !13792
  unreachable, !dbg !13792

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 %69, metadata !13708, metadata !DIExpression()) #23, !dbg !13787
  call void @llvm.dbg.value(metadata i32 %69, metadata !13722, metadata !DIExpression()) #23, !dbg !13793
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %69) #23, !dbg !13795, !srcloc !13728
  br label %97

97:                                               ; preds = %58, %91, %96, %44, %38
  %98 = phi i32 [ 0, %38 ], [ -16, %44 ], [ 0, %58 ], [ -11, %91 ], [ -11, %96 ], !dbg !13653
  ret i32 %98, !dbg !13796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @new_prio_for_inheritance(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13797 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13801, metadata !DIExpression()), !dbg !13804
  call void @llvm.dbg.value(metadata i32 %1, metadata !13802, metadata !DIExpression()), !dbg !13804
  %3 = tail call fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) #24, !dbg !13805
  %4 = select i1 %3, i32 %0, i32 %1, !dbg !13805
  call void @llvm.dbg.value(metadata i32 %4, metadata !13803, metadata !DIExpression()), !dbg !13804
  %5 = tail call fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %4) #24, !dbg !13806
  call void @llvm.dbg.value(metadata i32 %5, metadata !13803, metadata !DIExpression()), !dbg !13804
  ret i32 %5, !dbg !13807
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13808 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13812, metadata !DIExpression()), !dbg !13814
  call void @llvm.dbg.value(metadata i32 %1, metadata !13813, metadata !DIExpression()), !dbg !13814
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) #24, !dbg !13815
  ret i1 %3, !dbg !13816
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #1 !dbg !13817 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13821, metadata !DIExpression()), !dbg !13823
  call void @llvm.dbg.value(metadata i32 %1, metadata !13822, metadata !DIExpression()), !dbg !13823
  %3 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13824
  %4 = load %struct.k_thread*, %struct.k_thread** %3, align 4, !dbg !13824
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %4, i32 0, i32 0, i32 4, !dbg !13826
  %6 = bitcast %union.anon.2* %5 to i8*, !dbg !13826
  %7 = load i8, i8* %6, align 2, !dbg !13826
  %8 = sext i8 %7 to i32, !dbg !13827
  %9 = icmp eq i32 %8, %1, !dbg !13828
  br i1 %9, label %12, label %10, !dbg !13829

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef nonnull %4, i32 noundef %1) #25, !dbg !13830
  br label %12, !dbg !13832

12:                                               ; preds = %2, %10
  %13 = phi i1 [ %11, %10 ], [ false, %2 ], !dbg !13823
  ret i1 %13, !dbg !13833
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !13834 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !13838, metadata !DIExpression()), !dbg !13839
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !13840
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %2) #24, !dbg !13841
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !13842
  ret %struct.k_thread* %4, !dbg !13843
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !13844 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13848, metadata !DIExpression()), !dbg !13849
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef %0) #24, !dbg !13850
  br i1 %2, label %6, label %3, !dbg !13850

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13851
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !13851
  br label %6, !dbg !13850

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !13850
  ret %struct._dnode* %7, !dbg !13852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !13853 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !13857, metadata !DIExpression()), !dbg !13858
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !13859
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !13859
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !13860
  ret i1 %4, !dbg !13861
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !13862 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13864, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.value(metadata i32 %1, metadata !13865, metadata !DIExpression()), !dbg !13866
  %3 = icmp slt i32 %0, %1, !dbg !13867
  ret i1 %3, !dbg !13868
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @z_get_new_prio_with_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !13869 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13871, metadata !DIExpression()), !dbg !13872
  %2 = tail call fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) #24, !dbg !13873
  %3 = select i1 %2, i32 %0, i32 -127, !dbg !13873
  ret i32 %3, !dbg !13874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_under_prio_ceiling(i32 noundef %0) unnamed_addr #3 !dbg !13875 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !13879, metadata !DIExpression()), !dbg !13880
  %2 = icmp sgt i32 %0, -128, !dbg !13881
  ret i1 %2, !dbg !13882
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) local_unnamed_addr #1 !dbg !13883 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !13885, metadata !DIExpression()), !dbg !13889
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !13890, !srcloc !13663
  call void @llvm.dbg.value(metadata i32 %2, metadata !13657, metadata !DIExpression()) #23, !dbg !13895
  %3 = icmp eq i32 %2, 0, !dbg !13896
  br i1 %3, label %5, label %4, !dbg !13897

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.250, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 205) #25, !dbg !13898
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.252, i32 0, i32 0)) #25, !dbg !13898
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 205) #25, !dbg !13898
  unreachable, !dbg !13898

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 1, !dbg !13900
  %7 = load %struct.k_thread*, %struct.k_thread** %6, align 4, !dbg !13900
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !13900
  br i1 %8, label %41, label %9, !dbg !13902

9:                                                ; preds = %5
  %10 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !13903
  %11 = icmp eq %struct.k_thread* %7, %10, !dbg !13903
  br i1 %11, label %12, label %41, !dbg !13905

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 2, !dbg !13906
  %14 = load i32, i32* %13, align 4, !dbg !13906
  switch i32 %14, label %16 [
    i32 0, label %15
    i32 1, label %18
  ], !dbg !13909

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.261, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 229) #25, !dbg !13910
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.251, i32 0, i32 0), i32 noundef 229) #25, !dbg !13910
  unreachable, !dbg !13910

16:                                               ; preds = %12
  %17 = add i32 %14, -1, !dbg !13912
  store i32 %17, i32* %13, align 4, !dbg !13912
  br label %41, !dbg !13915

18:                                               ; preds = %12
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.253, metadata !13669, metadata !DIExpression()) #23, !dbg !13916
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !13918, !srcloc !13684
  call void @llvm.dbg.value(metadata i32 undef, metadata !13681, metadata !DIExpression()) #23, !dbg !13920
  call void @llvm.dbg.value(metadata i32 undef, metadata !13682, metadata !DIExpression()) #23, !dbg !13920
  call void @llvm.dbg.value(metadata i32 undef, metadata !13675, metadata !DIExpression()) #23, !dbg !13916
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13921
  br i1 %20, label %22, label %21, !dbg !13922

21:                                               ; preds = %18
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.254, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 148) #25, !dbg !13923
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7.256, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13923
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 148) #25, !dbg !13923
  unreachable, !dbg !13923

22:                                               ; preds = %18
  %23 = extractvalue { i32, i32 } %19, 0, !dbg !13918
  call void @llvm.dbg.value(metadata i32 %23, metadata !13681, metadata !DIExpression()) #23, !dbg !13920
  call void @llvm.dbg.value(metadata i32 %23, metadata !13675, metadata !DIExpression()) #23, !dbg !13916
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13924
  call void @llvm.dbg.value(metadata i32 %23, metadata !13887, metadata !DIExpression()), !dbg !13889
  %24 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 3, !dbg !13925
  %25 = load i32, i32* %24, align 4, !dbg !13925
  %26 = tail call fastcc zeroext i1 @adjust_owner_prio(%struct.k_mutex* noundef nonnull %0, i32 noundef %25) #24, !dbg !13926
  %27 = getelementptr inbounds %struct.k_mutex, %struct.k_mutex* %0, i32 0, i32 0, !dbg !13927
  %28 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %27) #25, !dbg !13928
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13886, metadata !DIExpression()), !dbg !13889
  store %struct.k_thread* %28, %struct.k_thread** %6, align 4, !dbg !13929
  %29 = icmp eq %struct.k_thread* %28, null, !dbg !13930
  br i1 %29, label %37, label %30, !dbg !13932

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 0, i32 4, !dbg !13933
  %32 = bitcast %union.anon.2* %31 to i8*, !dbg !13933
  %33 = load i8, i8* %32, align 2, !dbg !13933
  %34 = sext i8 %33 to i32, !dbg !13935
  store i32 %34, i32* %24, align 4, !dbg !13936
  call void @llvm.dbg.value(metadata %struct.k_thread* %28, metadata !13937, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.value(metadata i32 0, metadata !13942, metadata !DIExpression()), !dbg !13943
  %35 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %28, i32 0, i32 8, i32 1, !dbg !13945
  store i32 0, i32* %35, align 4, !dbg !13946
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %28) #25, !dbg !13947
  %36 = insertvalue [1 x i32] poison, i32 %23, 0, !dbg !13948
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.253, [1 x i32] %36) #25, !dbg !13948
  br label %41, !dbg !13949

37:                                               ; preds = %22
  store i32 0, i32* %13, align 4, !dbg !13950
  call void @llvm.dbg.value(metadata i32 undef, metadata !13708, metadata !DIExpression()) #23, !dbg !13952
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.253, metadata !13713, metadata !DIExpression()) #23, !dbg !13952
  %38 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13954
  br i1 %38, label %40, label %39, !dbg !13955

39:                                               ; preds = %37
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.249, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.257, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 194) #25, !dbg !13956
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9.258, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.253) #25, !dbg !13956
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6.255, i32 0, i32 0), i32 noundef 194) #25, !dbg !13956
  unreachable, !dbg !13956

40:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %23, metadata !13708, metadata !DIExpression()) #23, !dbg !13952
  call void @llvm.dbg.value(metadata i32 %23, metadata !13722, metadata !DIExpression()) #23, !dbg !13957
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %23) #23, !dbg !13959, !srcloc !13728
  br label %41

41:                                               ; preds = %30, %40, %16, %9, %5
  %42 = phi i32 [ -22, %5 ], [ -1, %9 ], [ 0, %16 ], [ 0, %40 ], [ 0, %30 ], !dbg !13889
  ret i32 %42, !dbg !13960
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_sched_prio_cmp(%struct.k_thread* nocapture noundef readonly %0, %struct.k_thread* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !13961 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !13965, metadata !DIExpression()), !dbg !13969
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !13966, metadata !DIExpression()), !dbg !13969
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !13970
  %4 = bitcast %union.anon.2* %3 to i8*, !dbg !13970
  %5 = load i8, i8* %4, align 2, !dbg !13970
  call void @llvm.dbg.value(metadata i8 %5, metadata !13967, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13969
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 4, !dbg !13971
  %7 = bitcast %union.anon.2* %6 to i8*, !dbg !13971
  %8 = load i8, i8* %7, align 2, !dbg !13971
  call void @llvm.dbg.value(metadata i8 %8, metadata !13968, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_signed, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_stack_value)), !dbg !13969
  %9 = icmp eq i8 %8, %5, !dbg !13972
  %10 = sext i8 %5 to i32, !dbg !13974
  %11 = sext i8 %8 to i32, !dbg !13974
  %12 = sub nsw i32 %11, %10, !dbg !13974
  %13 = select i1 %9, i32 0, i32 %12, !dbg !13974
  ret i32 %13, !dbg !13975
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reset_time_slice(%struct.k_thread* nocapture readnone %0) local_unnamed_addr #1 !dbg !13976 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13980, metadata !DIExpression()), !dbg !13981
  %2 = tail call fastcc i32 @slice_time() #24, !dbg !13982
  %3 = icmp eq i32 %2, 0, !dbg !13984
  br i1 %3, label %8, label %4, !dbg !13985

4:                                                ; preds = %1
  %5 = tail call i32 @sys_clock_elapsed() #25, !dbg !13986
  %6 = add i32 %5, %2, !dbg !13988
  store i32 %6, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !13989
  %7 = tail call fastcc i32 @slice_time() #24, !dbg !13990
  tail call void @z_set_timeout_expiry(i32 noundef %7, i1 noundef zeroext false) #25, !dbg !13991
  br label %8, !dbg !13992

8:                                                ; preds = %4, %1
  ret void, !dbg !13993
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @slice_time() unnamed_addr #8 !dbg !13994 {
  call void @llvm.dbg.value(metadata %struct.k_thread* undef, metadata !13998, metadata !DIExpression()), !dbg !14000
  %1 = load i32, i32* @slice_ticks, align 4, !dbg !14001
  call void @llvm.dbg.value(metadata i32 %1, metadata !13999, metadata !DIExpression()), !dbg !14000
  ret i32 %1, !dbg !14002
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_time_slice_set(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !14003 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14007, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata i32 %1, metadata !14008, metadata !DIExpression()), !dbg !14016
  call void @llvm.dbg.value(metadata i32 0, metadata !14009, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !14025
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14027, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14025
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14035
  br i1 %4, label %6, label %5, !dbg !14038

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14039
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14039
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14039
  unreachable, !dbg !14039

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14034
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14025
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14041
  call void @llvm.dbg.value(metadata i32 undef, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14009, metadata !DIExpression()), !dbg !14017
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14042
  %7 = tail call fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) #24, !dbg !14045
  %8 = icmp sgt i32 %0, 0, !dbg !14046
  %9 = icmp sgt i32 %7, 2, !dbg !14048
  %10 = select i1 %9, i32 %7, i32 2, !dbg !14048
  %11 = select i1 %8, i32 %10, i32 %7, !dbg !14048
  store i32 %11, i32* @slice_ticks, align 4, !dbg !14049
  store i32 %1, i32* @slice_max_prio, align 4, !dbg !14050
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14051
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14058
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14058
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14060
  br i1 %12, label %14, label %13, !dbg !14063

13:                                               ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14064
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14064
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14064
  unreachable, !dbg !14064

14:                                               ; preds = %6
  %15 = extractvalue { i32, i32 } %3, 0, !dbg !14027
  call void @llvm.dbg.value(metadata i32 %15, metadata !14030, metadata !DIExpression()) #23, !dbg !14034
  call void @llvm.dbg.value(metadata i32 %15, metadata !14024, metadata !DIExpression()) #23, !dbg !14025
  call void @llvm.dbg.value(metadata i32 %15, metadata !14015, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14058
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14069
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !14071, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !14009, metadata !DIExpression()), !dbg !14017
  call void @llvm.dbg.value(metadata i32 undef, metadata !14009, metadata !DIExpression()), !dbg !14017
  ret void, !dbg !14073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @k_ms_to_ticks_ceil32(i32 noundef %0) unnamed_addr #3 !dbg !14074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14076, metadata !DIExpression()), !dbg !14077
  call void @llvm.dbg.value(metadata i32 %0, metadata !14078, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14093
  call void @llvm.dbg.value(metadata i32 1000, metadata !14081, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i32 10000, metadata !14082, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i8 1, metadata !14083, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i1 true, metadata !14084, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14093
  call void @llvm.dbg.value(metadata i1 true, metadata !14085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14093
  call void @llvm.dbg.value(metadata i8 0, metadata !14086, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i1 true, metadata !14087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14093
  call void @llvm.dbg.value(metadata i1 false, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14093
  call void @llvm.dbg.value(metadata i64 0, metadata !14089, metadata !DIExpression()), !dbg !14093
  call void @llvm.dbg.value(metadata i64 0, metadata !14089, metadata !DIExpression()), !dbg !14093
  %2 = mul i32 %0, 10, !dbg !14095
  ret i32 %2, !dbg !14101
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_time_slice(i32 noundef %0) local_unnamed_addr #1 !dbg !14102 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14104, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !14107
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14109, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14111
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14111
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14107
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14112
  br i1 %3, label %5, label %4, !dbg !14113

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14114
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14114
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14114
  unreachable, !dbg !14114

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14109
  call void @llvm.dbg.value(metadata i32 %6, metadata !14030, metadata !DIExpression()) #23, !dbg !14111
  call void @llvm.dbg.value(metadata i32 %6, metadata !14024, metadata !DIExpression()) #23, !dbg !14107
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14115
  call void @llvm.dbg.value(metadata i32 %6, metadata !14105, metadata !DIExpression()), !dbg !14106
  %7 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !14116
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14118
  %9 = icmp eq %struct.k_thread* %7, %8, !dbg !14119
  br i1 %9, label %10, label %14, !dbg !14120

10:                                               ; preds = %5
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14121
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14123
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14123
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14125
  br i1 %11, label %13, label %12, !dbg !14126

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14127
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14127
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14127
  unreachable, !dbg !14127

13:                                               ; preds = %10
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !14123
  call void @llvm.dbg.value(metadata i32 %6, metadata !14066, metadata !DIExpression()) #23, !dbg !14128
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14130, !srcloc !14072
  br label %33, !dbg !14131

14:                                               ; preds = %5
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !14132
  %15 = tail call fastcc i32 @slice_time() #24, !dbg !14133
  %16 = icmp eq i32 %15, 0, !dbg !14133
  br i1 %16, label %27, label %17, !dbg !14135

17:                                               ; preds = %14
  %18 = tail call fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %8) #24, !dbg !14136
  br i1 %18, label %19, label %27, !dbg !14137

19:                                               ; preds = %17
  %20 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14138
  %21 = icmp sgt i32 %20, %0, !dbg !14141
  br i1 %21, label %25, label %22, !dbg !14142

22:                                               ; preds = %19
  %23 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14143
  %24 = tail call fastcc i32 @slice_expired_locked([1 x i32] %23) #24, !dbg !14143
  call void @llvm.dbg.value(metadata i32 %24, metadata !14105, metadata !DIExpression()), !dbg !14106
  br label %28, !dbg !14145

25:                                               ; preds = %19
  %26 = sub nsw i32 %20, %0, !dbg !14146
  store i32 %26, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14146
  br label %28

27:                                               ; preds = %17, %14
  store i32 0, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !14148
  br label %28

28:                                               ; preds = %22, %25, %27
  %29 = phi i32 [ %24, %22 ], [ %6, %25 ], [ %6, %27 ], !dbg !14106
  call void @llvm.dbg.value(metadata i32 %29, metadata !14105, metadata !DIExpression()), !dbg !14106
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14150
  %30 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14152
  br i1 %30, label %32, label %31, !dbg !14153

31:                                               ; preds = %28
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14154
  unreachable, !dbg !14154

32:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !14052, metadata !DIExpression()) #23, !dbg !14150
  call void @llvm.dbg.value(metadata i32 %29, metadata !14066, metadata !DIExpression()) #23, !dbg !14155
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %29) #23, !dbg !14157, !srcloc !14072
  br label %33, !dbg !14158

33:                                               ; preds = %32, %13
  ret void, !dbg !14158
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sliceable(%struct.k_thread* noundef %0) unnamed_addr #8 !dbg !14159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14163, metadata !DIExpression()), !dbg !14165
  %2 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %0) #24, !dbg !14166
  %3 = icmp eq i32 %2, 0, !dbg !14166
  br i1 %3, label %16, label %4, !dbg !14167

4:                                                ; preds = %1
  %5 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14168
  br i1 %5, label %16, label %6, !dbg !14169

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !14170
  %8 = bitcast %union.anon.2* %7 to i8*, !dbg !14170
  %9 = load i8, i8* %8, align 2, !dbg !14170
  %10 = sext i8 %9 to i32, !dbg !14171
  %11 = load i32, i32* @slice_max_prio, align 4, !dbg !14172
  %12 = tail call fastcc zeroext i1 @z_is_prio_higher.275(i32 noundef %10, i32 noundef %11) #24, !dbg !14173
  br i1 %12, label %16, label %13, !dbg !14174

13:                                               ; preds = %6
  %14 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef nonnull %0) #24, !dbg !14175
  %15 = xor i1 %14, true, !dbg !14176
  br label %16

16:                                               ; preds = %13, %6, %4, %1
  %17 = phi i1 [ false, %6 ], [ false, %4 ], [ false, %1 ], [ %15, %13 ], !dbg !14165
  call void @llvm.dbg.value(metadata i1 %17, metadata !14164, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !14165
  ret i1 %17, !dbg !14177
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @slice_expired_locked([1 x i32] %0) unnamed_addr #1 !dbg !14178 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !14182, metadata !DIExpression()), !dbg !14184
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14185
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14183, metadata !DIExpression()), !dbg !14184
  %3 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %2) #24, !dbg !14186
  br i1 %3, label %5, label %4, !dbg !14188

4:                                                ; preds = %1
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %2) #24, !dbg !14189
  br label %5, !dbg !14191

5:                                                ; preds = %4, %1
  %6 = extractvalue [1 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %6, metadata !14182, metadata !DIExpression()), !dbg !14184
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14192
  ret i32 %6, !dbg !14193
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14194 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14196, metadata !DIExpression()), !dbg !14198
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14199
  %3 = load i8, i8* %2, align 1, !dbg !14199
  call void @llvm.dbg.value(metadata i8 %3, metadata !14197, metadata !DIExpression()), !dbg !14198
  %4 = and i8 %3, 31, !dbg !14200
  %5 = icmp ne i8 %4, 0, !dbg !14201
  ret i1 %5, !dbg !14202
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14203 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14205, metadata !DIExpression()), !dbg !14206
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14207
  br i1 %2, label %3, label %7, !dbg !14209

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #23, !dbg !14213
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14216
  %5 = load i8, i8* %4, align 1, !dbg !14217
  %6 = and i8 %5, 127, !dbg !14217
  store i8 %6, i8* %4, align 1, !dbg !14217
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()) #23, !dbg !14221
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14225
  br label %7, !dbg !14226

7:                                                ; preds = %3, %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14227, metadata !DIExpression()) #23, !dbg !14230
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14232
  %9 = load i8, i8* %8, align 1, !dbg !14233
  %10 = or i8 %9, -128, !dbg !14233
  store i8 %10, i8* %8, align 1, !dbg !14233
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14234, metadata !DIExpression()) #23, !dbg !14237
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14241, metadata !DIExpression()) #23, !dbg !14249
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14247, metadata !DIExpression()) #23, !dbg !14249
  %11 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14251
  br i1 %11, label %12, label %13, !dbg !14254

12:                                               ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !14255
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !14255
  unreachable, !dbg !14255

13:                                               ; preds = %7
  %14 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14257
  call void @llvm.dbg.value(metadata %struct._dnode* %14, metadata !14248, metadata !DIExpression()) #23, !dbg !14249
  %15 = icmp eq %struct._dnode* %14, null, !dbg !14259
  br i1 %15, label %26, label %16, !dbg !14257

16:                                               ; preds = %13, %23
  %17 = phi %struct._dnode* [ %24, %23 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %17, metadata !14248, metadata !DIExpression()) #23, !dbg !14249
  %18 = bitcast %struct._dnode* %17 to %struct.k_thread*, !dbg !14261
  call void @llvm.dbg.value(metadata %struct.k_thread* %18, metadata !14248, metadata !DIExpression()) #23, !dbg !14249
  %19 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %18) #25, !dbg !14262
  %20 = icmp sgt i32 %19, 0, !dbg !14265
  br i1 %20, label %21, label %23, !dbg !14266

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14267
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %17, %struct._dnode* noundef %22) #25, !dbg !14269
  br label %28, !dbg !14270

23:                                               ; preds = %16
  %24 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %17) #25, !dbg !14259
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14248, metadata !DIExpression()) #23, !dbg !14249
  %25 = icmp eq %struct._dnode* %24, null, !dbg !14259
  br i1 %25, label %26, label %16, !dbg !14257, !llvm.loop !14271

26:                                               ; preds = %23, %13
  %27 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14273
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %27) #25, !dbg !14274
  br label %28, !dbg !14275

28:                                               ; preds = %21, %26
  %29 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14276
  %30 = icmp eq %struct.k_thread* %29, %0, !dbg !14277
  %31 = zext i1 %30 to i32, !dbg !14277
  tail call fastcc void @update_cache(i32 noundef %31) #24, !dbg !14278
  ret void, !dbg !14279
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14280 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14282, metadata !DIExpression()), !dbg !14283
  %2 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %0, i32 noundef 128) #24, !dbg !14284
  ret i1 %2, !dbg !14285
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_dumb_remove(%struct._dnode* nocapture readnone %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !14286 {
  call void @llvm.dbg.value(metadata %struct._dnode* undef, metadata !14288, metadata !DIExpression()), !dbg !14290
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14289, metadata !DIExpression()), !dbg !14290
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !14291
  br i1 %3, label %4, label %5, !dbg !14294

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14295
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1139) #25, !dbg !14295
  unreachable, !dbg !14295

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 0, i32 0, !dbg !14297
  tail call fastcc void @sys_dlist_remove(%struct._dnode* noundef %6) #24, !dbg !14298
  ret void, !dbg !14299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef readnone %0) unnamed_addr #3 !dbg !14300 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14302, metadata !DIExpression()), !dbg !14303
  %2 = icmp eq %struct.k_thread* %0, getelementptr inbounds ([1 x %struct.k_thread], [1 x %struct.k_thread]* @z_idle_threads, i32 0, i32 0), !dbg !14304
  ret i1 %2, !dbg !14305
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef %0) unnamed_addr #8 !dbg !14306 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14310, metadata !DIExpression()), !dbg !14311
  %2 = tail call fastcc zeroext i1 @sys_dlist_is_empty.273(%struct._dnode* noundef %0) #24, !dbg !14312
  br i1 %2, label %6, label %3, !dbg !14312

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14313
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14313
  br label %6, !dbg !14312

6:                                                ; preds = %1, %3
  %7 = phi %struct._dnode* [ %5, %3 ], [ null, %1 ], !dbg !14312
  ret %struct._dnode* %7, !dbg !14314
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14315 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14319, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14320, metadata !DIExpression()), !dbg !14323
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14324
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14324
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14321, metadata !DIExpression()), !dbg !14323
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14325
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !14326
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14327
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !14328
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14329
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14330
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14331
  ret void, !dbg !14332
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14333 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14337, metadata !DIExpression()), !dbg !14339
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14338, metadata !DIExpression()), !dbg !14339
  %3 = icmp eq %struct._dnode* %1, null, !dbg !14340
  br i1 %3, label %6, label %4, !dbg !14341

4:                                                ; preds = %2
  %5 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* noundef %0, %struct._dnode* noundef nonnull %1) #24, !dbg !14342
  br label %6, !dbg !14341

6:                                                ; preds = %2, %4
  %7 = phi %struct._dnode* [ %5, %4 ], [ null, %2 ], !dbg !14341
  ret %struct._dnode* %7, !dbg !14343
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !14344 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14348, metadata !DIExpression()), !dbg !14351
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14349, metadata !DIExpression()), !dbg !14351
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14352
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14352
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !14350, metadata !DIExpression()), !dbg !14351
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14353
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !14354
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !14355
  store %struct._dnode* %4, %struct._dnode** %6, align 4, !dbg !14356
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !14357
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !14358
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !14359
  ret void, !dbg !14360
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @update_cache(i32 noundef %0) unnamed_addr #1 !dbg !14361 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14363, metadata !DIExpression()), !dbg !14365
  %2 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14366
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !14373, metadata !DIExpression()) #23, !dbg !14375
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !14376
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 3), align 4, !dbg !14377
  %5 = select i1 %3, %struct.k_thread* %4, %struct.k_thread* %2, !dbg !14377
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14364, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !14378, metadata !DIExpression()) #23, !dbg !14384
  call void @llvm.dbg.value(metadata i32 %0, metadata !14383, metadata !DIExpression()) #23, !dbg !14384
  %6 = icmp eq i32 %0, 0, !dbg !14387
  %7 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14389
  br i1 %6, label %8, label %18, !dbg !14390

8:                                                ; preds = %1
  %9 = icmp eq %struct.k_thread* %7, null, !dbg !14391
  br i1 %9, label %10, label %11, !dbg !14394

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19.271, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 137) #25, !dbg !14395
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !14395
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 137) #25, !dbg !14395
  unreachable, !dbg !14395

11:                                               ; preds = %8
  %12 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef nonnull %7) #25, !dbg !14397
  br i1 %12, label %18, label %13, !dbg !14399

13:                                               ; preds = %11
  %14 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %5) #25, !dbg !14400
  br i1 %14, label %18, label %15, !dbg !14402

15:                                               ; preds = %13
  %16 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef nonnull %7) #25, !dbg !14403
  %17 = icmp eq i32 %16, 0, !dbg !14403
  br i1 %17, label %21, label %18, !dbg !14405

18:                                               ; preds = %1, %13, %11, %15
  %19 = icmp eq %struct.k_thread* %5, %7, !dbg !14406
  br i1 %19, label %21, label %20, !dbg !14409

20:                                               ; preds = %18
  tail call void @z_reset_time_slice(%struct.k_thread* undef) #24, !dbg !14410
  br label %21, !dbg !14412

21:                                               ; preds = %15, %18, %20
  %22 = phi %struct.k_thread* [ %5, %20 ], [ %5, %18 ], [ %7, %15 ], !dbg !14389
  store %struct.k_thread* %22, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14389
  ret void, !dbg !14413
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef readonly %0) local_unnamed_addr #8 !dbg !14414 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14418, metadata !DIExpression()), !dbg !14421
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !14419, metadata !DIExpression()), !dbg !14421
  %2 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef %0) #24, !dbg !14422
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !14420, metadata !DIExpression()), !dbg !14421
  %3 = bitcast %struct._dnode* %2 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !14419, metadata !DIExpression()), !dbg !14421
  ret %struct.k_thread* %3, !dbg !14423
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14424 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14426, metadata !DIExpression()), !dbg !14427
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14428
  %3 = tail call fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* noundef nonnull %2) #24, !dbg !14429
  %4 = xor i1 %3, true, !dbg !14430
  ret i1 %4, !dbg !14431
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc i32 @is_preempt(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14432 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14434, metadata !DIExpression()), !dbg !14435
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, i32 0, !dbg !14436
  %3 = load i16, i16* %2, align 2, !dbg !14436
  %4 = icmp ult i16 %3, 128, !dbg !14437
  %5 = zext i1 %4 to i32, !dbg !14437
  ret i32 %5, !dbg !14438
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14439 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !14445, metadata !DIExpression()), !dbg !14446
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !14447
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* noundef %2) #24, !dbg !14448
  %4 = xor i1 %3, true, !dbg !14449
  ret i1 %4, !dbg !14450
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14451 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14457, metadata !DIExpression()), !dbg !14458
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14459
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14459
  %4 = icmp ne %struct._dnode* %3, null, !dbg !14460
  ret i1 %4, !dbg !14461
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check(%struct._dnode* nocapture noundef readonly %0, %struct._dnode* noundef readonly %1) unnamed_addr #8 !dbg !14462 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14464, metadata !DIExpression()), !dbg !14466
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !14465, metadata !DIExpression()), !dbg !14466
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14467
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !14467
  %5 = icmp eq %struct._dnode* %4, %1, !dbg !14468
  br i1 %5, label %9, label %6, !dbg !14469

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !14470
  %8 = load %struct._dnode*, %struct._dnode** %7, align 4, !dbg !14470
  br label %9, !dbg !14469

9:                                                ; preds = %2, %6
  %10 = phi %struct._dnode* [ %8, %6 ], [ null, %2 ], !dbg !14469
  ret %struct._dnode* %10, !dbg !14471
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.273(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !14472 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14476, metadata !DIExpression()), !dbg !14477
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14478
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14478
  %4 = icmp eq %struct._dnode* %3, %0, !dbg !14479
  ret i1 %4, !dbg !14480
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !14481 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14485, metadata !DIExpression()), !dbg !14488
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14489
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !14489
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !14486, metadata !DIExpression()), !dbg !14488
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14490
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !14490
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !14487, metadata !DIExpression()), !dbg !14488
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !14491
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !14492
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !14493
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !14494
  tail call fastcc void @sys_dnode_init.274(%struct._dnode* noundef %0) #24, !dbg !14495
  ret void, !dbg !14496
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.274(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !14497 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !14499, metadata !DIExpression()), !dbg !14500
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !14501
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !14502
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !14503
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !14504
  ret void, !dbg !14505
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* nocapture noundef readonly %0, i32 noundef %1) unnamed_addr #8 !dbg !14506 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14510, metadata !DIExpression()), !dbg !14512
  call void @llvm.dbg.value(metadata i32 %1, metadata !14511, metadata !DIExpression()), !dbg !14512
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14513
  %4 = load i8, i8* %3, align 1, !dbg !14513
  %5 = zext i8 %4 to i32, !dbg !14514
  %6 = and i32 %5, %1, !dbg !14515
  %7 = icmp ne i32 %6, 0, !dbg !14516
  ret i1 %7, !dbg !14517
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio_higher.275(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14520, metadata !DIExpression()), !dbg !14522
  call void @llvm.dbg.value(metadata i32 %1, metadata !14521, metadata !DIExpression()), !dbg !14522
  %3 = tail call fastcc zeroext i1 @z_is_prio1_higher_than_prio2.276(i32 noundef %0, i32 noundef %1) #24, !dbg !14523
  ret i1 %3, !dbg !14524
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @z_is_prio1_higher_than_prio2.276(i32 noundef %0, i32 noundef %1) unnamed_addr #3 !dbg !14525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14527, metadata !DIExpression()), !dbg !14529
  call void @llvm.dbg.value(metadata i32 %1, metadata !14528, metadata !DIExpression()), !dbg !14529
  %3 = icmp slt i32 %0, %1, !dbg !14530
  ret i1 %3, !dbg !14531
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_ready_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14532 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14534, metadata !DIExpression()), !dbg !14538
  call void @llvm.dbg.value(metadata i32 0, metadata !14535, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !14540
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14542, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14540
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14545
  br i1 %3, label %5, label %4, !dbg !14546

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14547
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14547
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14547
  unreachable, !dbg !14547

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14540
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14548
  call void @llvm.dbg.value(metadata i32 undef, metadata !14537, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14535, metadata !DIExpression()), !dbg !14539
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14549
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14554
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14554
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14556
  br i1 %6, label %8, label %7, !dbg !14557

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14558
  unreachable, !dbg !14558

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14542
  call void @llvm.dbg.value(metadata i32 %9, metadata !14030, metadata !DIExpression()) #23, !dbg !14544
  call void @llvm.dbg.value(metadata i32 %9, metadata !14024, metadata !DIExpression()) #23, !dbg !14540
  call void @llvm.dbg.value(metadata i32 %9, metadata !14537, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14554
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14559
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14561, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !14535, metadata !DIExpression()), !dbg !14539
  call void @llvm.dbg.value(metadata i32 undef, metadata !14535, metadata !DIExpression()), !dbg !14539
  ret void, !dbg !14562
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @ready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14563 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14565, metadata !DIExpression()), !dbg !14566
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14567
  br i1 %2, label %27, label %3, !dbg !14569

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !14570
  br i1 %4, label %5, label %27, !dbg !14571

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14227, metadata !DIExpression()) #23, !dbg !14572
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14575
  %7 = load i8, i8* %6, align 1, !dbg !14576
  %8 = or i8 %7, -128, !dbg !14576
  store i8 %8, i8* %6, align 1, !dbg !14576
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14234, metadata !DIExpression()) #23, !dbg !14577
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14241, metadata !DIExpression()) #23, !dbg !14579
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14247, metadata !DIExpression()) #23, !dbg !14579
  %9 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14581
  br i1 %9, label %10, label %11, !dbg !14582

10:                                               ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !14583
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !14583
  unreachable, !dbg !14583

11:                                               ; preds = %5
  %12 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !14584
  call void @llvm.dbg.value(metadata %struct._dnode* %12, metadata !14248, metadata !DIExpression()) #23, !dbg !14579
  %13 = icmp eq %struct._dnode* %12, null, !dbg !14585
  br i1 %13, label %24, label %14, !dbg !14584

14:                                               ; preds = %11, %21
  %15 = phi %struct._dnode* [ %22, %21 ], [ %12, %11 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %15, metadata !14248, metadata !DIExpression()) #23, !dbg !14579
  %16 = bitcast %struct._dnode* %15 to %struct.k_thread*, !dbg !14586
  call void @llvm.dbg.value(metadata %struct.k_thread* %16, metadata !14248, metadata !DIExpression()) #23, !dbg !14579
  %17 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %16) #25, !dbg !14587
  %18 = icmp sgt i32 %17, 0, !dbg !14588
  br i1 %18, label %19, label %21, !dbg !14589

19:                                               ; preds = %14
  %20 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14590
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %15, %struct._dnode* noundef %20) #25, !dbg !14591
  br label %26, !dbg !14592

21:                                               ; preds = %14
  %22 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %15) #25, !dbg !14585
  call void @llvm.dbg.value(metadata %struct._dnode* %22, metadata !14248, metadata !DIExpression()) #23, !dbg !14579
  %23 = icmp eq %struct._dnode* %22, null, !dbg !14585
  br i1 %23, label %24, label %14, !dbg !14584, !llvm.loop !14593

24:                                               ; preds = %21, %11
  %25 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14595
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %25) #25, !dbg !14596
  br label %26, !dbg !14597

26:                                               ; preds = %19, %24
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !14598
  br label %27, !dbg !14599

27:                                               ; preds = %26, %3, %1
  ret void, !dbg !14600
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14601 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14603, metadata !DIExpression()), !dbg !14604
  %2 = tail call fastcc zeroext i1 @z_is_thread_prevented_from_running(%struct.k_thread* noundef %0) #24, !dbg !14605
  br i1 %2, label %6, label %3, !dbg !14606

3:                                                ; preds = %1
  %4 = tail call fastcc zeroext i1 @z_is_thread_timeout_active(%struct.k_thread* noundef %0) #24, !dbg !14607
  %5 = xor i1 %4, true, !dbg !14606
  br label %6, !dbg !14606

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ]
  ret i1 %7, !dbg !14608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14609 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14611, metadata !DIExpression()), !dbg !14615
  call void @llvm.dbg.value(metadata i32 0, metadata !14612, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !14617
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14619, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14621
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14621
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14617
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14622
  br i1 %3, label %5, label %4, !dbg !14623

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14624
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14624
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14624
  unreachable, !dbg !14624

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14621
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14617
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14625
  call void @llvm.dbg.value(metadata i32 undef, metadata !14614, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i32 undef, metadata !14612, metadata !DIExpression()), !dbg !14616
  tail call fastcc void @move_thread_to_end_of_prio_q(%struct.k_thread* noundef %0) #24, !dbg !14626
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14629
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14629
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14631
  br i1 %6, label %8, label %7, !dbg !14632

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14633
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14633
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14633
  unreachable, !dbg !14633

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !14619
  call void @llvm.dbg.value(metadata i32 %9, metadata !14030, metadata !DIExpression()) #23, !dbg !14621
  call void @llvm.dbg.value(metadata i32 %9, metadata !14024, metadata !DIExpression()) #23, !dbg !14617
  call void @llvm.dbg.value(metadata i32 %9, metadata !14614, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14629
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14634
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !14636, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !14612, metadata !DIExpression()), !dbg !14616
  call void @llvm.dbg.value(metadata i32 undef, metadata !14612, metadata !DIExpression()), !dbg !14616
  ret void, !dbg !14637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_start(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14638 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14640, metadata !DIExpression()), !dbg !14642
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !14643
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14645, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14647
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14643
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14648
  br i1 %3, label %5, label %4, !dbg !14649

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14650
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14650
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14650
  unreachable, !dbg !14650

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14645
  call void @llvm.dbg.value(metadata i32 %6, metadata !14030, metadata !DIExpression()) #23, !dbg !14647
  call void @llvm.dbg.value(metadata i32 %6, metadata !14024, metadata !DIExpression()) #23, !dbg !14643
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14651
  call void @llvm.dbg.value(metadata i32 %6, metadata !14641, metadata !DIExpression()), !dbg !14642
  %7 = tail call fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* noundef %0) #24, !dbg !14652
  br i1 %7, label %8, label %12, !dbg !14654

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14655
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14655
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14658
  br i1 %9, label %11, label %10, !dbg !14659

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14660
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14660
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14660
  unreachable, !dbg !14660

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !14655
  call void @llvm.dbg.value(metadata i32 %6, metadata !14066, metadata !DIExpression()) #23, !dbg !14661
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14663, !srcloc !14072
  br label %14, !dbg !14664

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_started.281(%struct.k_thread* noundef %0) #24, !dbg !14665
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14666
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14667
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14667
  br label %14, !dbg !14668

14:                                               ; preds = %12, %11
  ret void, !dbg !14668
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_has_thread_started(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14669 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14671, metadata !DIExpression()), !dbg !14672
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14673
  %3 = load i8, i8* %2, align 1, !dbg !14673
  %4 = and i8 %3, 4, !dbg !14674
  %5 = icmp eq i8 %4, 0, !dbg !14675
  ret i1 %5, !dbg !14676
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_started.281(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14677 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14679, metadata !DIExpression()), !dbg !14680
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14681
  %3 = load i8, i8* %2, align 1, !dbg !14682
  %4 = and i8 %3, -5, !dbg !14682
  store i8 %4, i8* %2, align 1, !dbg !14682
  ret void, !dbg !14683
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule(%struct.k_spinlock* noundef %0, [1 x i32] %1) local_unnamed_addr #1 !dbg !14684 {
  %3 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %3, metadata !14687, metadata !DIExpression()), !dbg !14688
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14686, metadata !DIExpression()), !dbg !14688
  %4 = tail call fastcc zeroext i1 @resched(i32 noundef %3) #24, !dbg !14689
  br i1 %4, label %5, label %12, !dbg !14691

5:                                                ; preds = %2
  %6 = tail call fastcc zeroext i1 @need_swap() #24, !dbg !14692
  br i1 %6, label %7, label %12, !dbg !14693

7:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14699, metadata !DIExpression()) #23, !dbg !14700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14703, metadata !DIExpression()) #23, !dbg !14708
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14710
  br i1 %8, label %10, label %9, !dbg !14713

9:                                                ; preds = %7
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !14714
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14714
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !14714
  unreachable, !dbg !14714

10:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 %3, metadata !14694, metadata !DIExpression()) #23, !dbg !14700
  %11 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %3) #25, !dbg !14716
  br label %16, !dbg !14717

12:                                               ; preds = %5, %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14718
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14057, metadata !DIExpression()) #23, !dbg !14718
  %13 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !14721
  br i1 %13, label %15, label %14, !dbg !14722

14:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14723
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !14723
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14723
  unreachable, !dbg !14723

15:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 %3, metadata !14052, metadata !DIExpression()) #23, !dbg !14718
  call void @llvm.dbg.value(metadata i32 %3, metadata !14066, metadata !DIExpression()) #23, !dbg !14724
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %3) #23, !dbg !14726, !srcloc !14072
  br label %16

16:                                               ; preds = %15, %10
  ret void, !dbg !14727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @resched(i32 noundef %0) unnamed_addr #1 !dbg !14728 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14732, metadata !DIExpression()), !dbg !14733
  call void @llvm.dbg.value(metadata i32 %0, metadata !14734, metadata !DIExpression()), !dbg !14739
  %2 = icmp eq i32 %0, 0, !dbg !14741
  br i1 %2, label %3, label %6, !dbg !14742

3:                                                ; preds = %1
  %4 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !14743, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %4, metadata !14746, metadata !DIExpression()) #23, !dbg !14751
  %5 = icmp eq i32 %4, 0, !dbg !14752
  br label %6

6:                                                ; preds = %3, %1
  %7 = phi i1 [ false, %1 ], [ %5, %3 ], !dbg !14733
  ret i1 %7, !dbg !14753
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @need_swap() unnamed_addr #8 !dbg !14754 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !14757
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !14756, metadata !DIExpression()), !dbg !14758
  %2 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14759
  %3 = icmp ne %struct.k_thread* %1, %2, !dbg !14760
  ret i1 %3, !dbg !14761
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_swap_irqlock(i32 noundef %0) unnamed_addr #1 !dbg !14762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14764, metadata !DIExpression()), !dbg !14766
  %2 = tail call i32 @arch_swap(i32 noundef %0) #25, !dbg !14767
  call void @llvm.dbg.value(metadata i32 %2, metadata !14765, metadata !DIExpression()), !dbg !14766
  ret i32 %2, !dbg !14768
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14769 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14771, metadata !DIExpression()), !dbg !14775
  %2 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !14776
  call void @llvm.dbg.value(metadata i32 0, metadata !14772, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !14778
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14780, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14782
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14778
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14783
  br i1 %4, label %6, label %5, !dbg !14784

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14785
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14785
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14785
  unreachable, !dbg !14785

6:                                                ; preds = %1
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !14780
  call void @llvm.dbg.value(metadata i32 %7, metadata !14030, metadata !DIExpression()) #23, !dbg !14782
  call void @llvm.dbg.value(metadata i32 %7, metadata !14024, metadata !DIExpression()) #23, !dbg !14778
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14786
  call void @llvm.dbg.value(metadata i32 %7, metadata !14774, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()), !dbg !14777
  %8 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !14787
  br i1 %8, label %9, label %13, !dbg !14791

9:                                                ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #23, !dbg !14792
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14795
  %11 = load i8, i8* %10, align 1, !dbg !14796
  %12 = and i8 %11, 127, !dbg !14796
  store i8 %12, i8* %10, align 1, !dbg !14796
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()) #23, !dbg !14797
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !14799
  br label %13, !dbg !14800

13:                                               ; preds = %9, %6
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %0) #24, !dbg !14801
  %14 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14802
  %15 = icmp eq %struct.k_thread* %14, %0, !dbg !14803
  %16 = zext i1 %15 to i32, !dbg !14803
  tail call fastcc void @update_cache(i32 noundef %16) #24, !dbg !14804
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14805
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14805
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14807
  br i1 %17, label %19, label %18, !dbg !14808

18:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14809
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14809
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14809
  unreachable, !dbg !14809

19:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %7, metadata !14052, metadata !DIExpression()) #23, !dbg !14805
  call void @llvm.dbg.value(metadata i32 %7, metadata !14066, metadata !DIExpression()) #23, !dbg !14810
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !14812, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !14772, metadata !DIExpression()), !dbg !14777
  call void @llvm.dbg.value(metadata i32 undef, metadata !14772, metadata !DIExpression()), !dbg !14777
  %20 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14813
  %21 = icmp eq %struct.k_thread* %20, %0, !dbg !14815
  br i1 %21, label %22, label %23, !dbg !14816

22:                                               ; preds = %19
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !14817
  br label %23, !dbg !14819

23:                                               ; preds = %22, %19
  ret void, !dbg !14820
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !14821 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14823, metadata !DIExpression()), !dbg !14824
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !14825
  %3 = tail call i32 @z_abort_timeout(%struct._timeout* noundef nonnull %2) #25, !dbg !14826
  ret i32 %3, !dbg !14827
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14828 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14830, metadata !DIExpression()), !dbg !14831
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14832
  %3 = load i8, i8* %2, align 1, !dbg !14833
  %4 = or i8 %3, 16, !dbg !14833
  store i8 %4, i8* %2, align 1, !dbg !14833
  ret void, !dbg !14834
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_reschedule_unlocked() unnamed_addr #1 !dbg !14835 {
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14836, !srcloc !14033
  %2 = extractvalue { i32, i32 } %1, 0, !dbg !14836
  call void @llvm.dbg.value(metadata i32 %2, metadata !14030, metadata !DIExpression()) #23, !dbg !14838
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14838
  tail call void @z_reschedule_irqlock(i32 noundef %2) #24, !dbg !14839
  ret void, !dbg !14840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_reschedule_irqlock(i32 noundef %0) local_unnamed_addr #1 !dbg !14841 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !14843, metadata !DIExpression()), !dbg !14844
  %2 = tail call fastcc zeroext i1 @resched(i32 noundef %0) #24, !dbg !14845
  br i1 %2, label %3, label %5, !dbg !14847

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !14848
  br label %6, !dbg !14850

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 %0, metadata !14066, metadata !DIExpression()) #23, !dbg !14851
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %0) #23, !dbg !14854, !srcloc !14072
  br label %6

6:                                                ; preds = %5, %3
  ret void, !dbg !14855
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_resume(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !14856 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14858, metadata !DIExpression()), !dbg !14860
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !14861
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14863, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14865
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14861
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14866
  br i1 %3, label %5, label %4, !dbg !14867

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14868
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14868
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14868
  unreachable, !dbg !14868

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !14863
  call void @llvm.dbg.value(metadata i32 %6, metadata !14030, metadata !DIExpression()) #23, !dbg !14865
  call void @llvm.dbg.value(metadata i32 %6, metadata !14024, metadata !DIExpression()) #23, !dbg !14861
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14869
  call void @llvm.dbg.value(metadata i32 %6, metadata !14859, metadata !DIExpression()), !dbg !14860
  %7 = tail call fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* noundef %0) #24, !dbg !14870
  br i1 %7, label %12, label %8, !dbg !14872

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14873
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14873
  %9 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14876
  br i1 %9, label %11, label %10, !dbg !14877

10:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14878
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14878
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14878
  unreachable, !dbg !14878

11:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !14873
  call void @llvm.dbg.value(metadata i32 %6, metadata !14066, metadata !DIExpression()) #23, !dbg !14879
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !14881, !srcloc !14072
  br label %14, !dbg !14882

12:                                               ; preds = %5
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !14883
  tail call fastcc void @ready_thread(%struct.k_thread* noundef %0) #24, !dbg !14884
  %13 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !14885
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @sched_spinlock, [1 x i32] %13) #24, !dbg !14885
  br label %14, !dbg !14886

14:                                               ; preds = %12, %11
  ret void, !dbg !14886
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_suspended(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14887 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14889, metadata !DIExpression()), !dbg !14890
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14891
  %3 = load i8, i8* %2, align 1, !dbg !14891
  %4 = and i8 %3, 16, !dbg !14892
  %5 = icmp ne i8 %4, 0, !dbg !14893
  ret i1 %5, !dbg !14894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !14895 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14897, metadata !DIExpression()), !dbg !14898
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14899
  %3 = load i8, i8* %2, align 1, !dbg !14900
  %4 = and i8 %3, -17, !dbg !14900
  store i8 %4, i8* %2, align 1, !dbg !14900
  ret void, !dbg !14901
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_pend_thread(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !14902 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14912, metadata !DIExpression()), !dbg !14916
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14910, metadata !DIExpression()), !dbg !14916
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14911, metadata !DIExpression()), !dbg !14916
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !14917
  %5 = icmp eq %struct.k_thread* %4, %0, !dbg !14917
  br i1 %5, label %9, label %6, !dbg !14917

6:                                                ; preds = %3
  %7 = tail call fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* noundef %0) #24, !dbg !14917
  br i1 %7, label %9, label %8, !dbg !14920

8:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1.284, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 773) #25, !dbg !14921
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 773) #25, !dbg !14921
  unreachable, !dbg !14921

9:                                                ; preds = %3, %6
  call void @llvm.dbg.value(metadata i32 0, metadata !14913, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !14924
  %10 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !14926, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14928
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !14928
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14924
  %11 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14929
  br i1 %11, label %13, label %12, !dbg !14930

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14931
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14931
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !14931
  unreachable, !dbg !14931

13:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !14928
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !14924
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14932
  call void @llvm.dbg.value(metadata i32 undef, metadata !14915, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata i32 undef, metadata !14913, metadata !DIExpression()), !dbg !14923
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !14933
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14936
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !14936
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14938
  br i1 %14, label %16, label %15, !dbg !14939

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14940
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !14940
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !14940
  unreachable, !dbg !14940

16:                                               ; preds = %13
  %17 = extractvalue { i32, i32 } %10, 0, !dbg !14926
  call void @llvm.dbg.value(metadata i32 %17, metadata !14030, metadata !DIExpression()) #23, !dbg !14928
  call void @llvm.dbg.value(metadata i32 %17, metadata !14024, metadata !DIExpression()) #23, !dbg !14924
  call void @llvm.dbg.value(metadata i32 %17, metadata !14915, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !14936
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !14941
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %17) #23, !dbg !14943, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !14913, metadata !DIExpression()), !dbg !14923
  call void @llvm.dbg.value(metadata i32 undef, metadata !14913, metadata !DIExpression()), !dbg !14923
  ret void, !dbg !14944
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_thread_dummy(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !14945 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14947, metadata !DIExpression()), !dbg !14948
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !14949
  %3 = load i8, i8* %2, align 1, !dbg !14949
  %4 = and i8 %3, 1, !dbg !14950
  %5 = icmp ne i8 %4, 0, !dbg !14951
  ret i1 %5, !dbg !14952
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @pend_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) unnamed_addr #1 !dbg !14953 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !14957, metadata !DIExpression()), !dbg !14958
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14955, metadata !DIExpression()), !dbg !14958
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14956, metadata !DIExpression()), !dbg !14958
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) #24, !dbg !14959
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %2) #24, !dbg !14960
  ret void, !dbg !14961
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %0, %struct._wait_q_t* noundef %1) unnamed_addr #1 !dbg !14962 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14966, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !14967, metadata !DIExpression()), !dbg !14968
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %0) #24, !dbg !14969
  tail call fastcc void @z_mark_thread_as_pending(%struct.k_thread* noundef %0) #24, !dbg !14970
  %3 = icmp eq %struct._wait_q_t* %1, null, !dbg !14971
  br i1 %3, label %24, label %4, !dbg !14973

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !14974
  store %struct._wait_q_t* %1, %struct._wait_q_t** %5, align 8, !dbg !14976
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %1, i32 0, i32 0, !dbg !14977
  call void @llvm.dbg.value(metadata %struct._dnode* %6, metadata !14241, metadata !DIExpression()) #23, !dbg !14978
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14247, metadata !DIExpression()) #23, !dbg !14978
  %7 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !14980
  br i1 %7, label %8, label %9, !dbg !14981

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !14982
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !14982
  unreachable, !dbg !14982

9:                                                ; preds = %4
  %10 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef nonnull %6) #25, !dbg !14983
  call void @llvm.dbg.value(metadata %struct._dnode* %10, metadata !14248, metadata !DIExpression()) #23, !dbg !14978
  %11 = icmp eq %struct._dnode* %10, null, !dbg !14984
  br i1 %11, label %22, label %12, !dbg !14983

12:                                               ; preds = %9, %19
  %13 = phi %struct._dnode* [ %20, %19 ], [ %10, %9 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %13, metadata !14248, metadata !DIExpression()) #23, !dbg !14978
  %14 = bitcast %struct._dnode* %13 to %struct.k_thread*, !dbg !14985
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !14248, metadata !DIExpression()) #23, !dbg !14978
  %15 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %14) #25, !dbg !14986
  %16 = icmp sgt i32 %15, 0, !dbg !14987
  br i1 %16, label %17, label %19, !dbg !14988

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14989
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %13, %struct._dnode* noundef %18) #25, !dbg !14990
  br label %24, !dbg !14991

19:                                               ; preds = %12
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef nonnull %13) #25, !dbg !14984
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14248, metadata !DIExpression()) #23, !dbg !14978
  %21 = icmp eq %struct._dnode* %20, null, !dbg !14984
  br i1 %21, label %22, label %12, !dbg !14983, !llvm.loop !14992

22:                                               ; preds = %19, %9
  %23 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0, !dbg !14994
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef nonnull %6, %struct._dnode* noundef %23) #25, !dbg !14995
  br label %24, !dbg !14996

24:                                               ; preds = %22, %17, %2
  ret void, !dbg !14997
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @add_thread_timeout(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !14998 {
  %3 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %3, metadata !15003, metadata !DIExpression()), !dbg !15004
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15002, metadata !DIExpression()), !dbg !15004
  %4 = icmp eq i64 %3, -1, !dbg !15005
  br i1 %4, label %6, label %5, !dbg !15007

5:                                                ; preds = %2
  tail call fastcc void @z_add_thread_timeout.285(%struct.k_thread* noundef %0, [1 x i64] %1) #24, !dbg !15008
  br label %6, !dbg !15010

6:                                                ; preds = %5, %2
  ret void, !dbg !15011
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_add_thread_timeout.285(%struct.k_thread* noundef %0, [1 x i64] %1) unnamed_addr #1 !dbg !15012 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15015, metadata !DIExpression()), !dbg !15016
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15014, metadata !DIExpression()), !dbg !15016
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 7, !dbg !15017
  tail call void @z_add_timeout(%struct._timeout* noundef nonnull %3, void (%struct._timeout*)* noundef nonnull @z_thread_timeout, [1 x i64] %1) #25, !dbg !15018
  ret void, !dbg !15019
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_timeout(%struct._timeout* noundef %0) #1 !dbg !15020 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !15022, metadata !DIExpression()), !dbg !15030
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, !dbg !15031
  %3 = bitcast %struct._timeout* %2 to %struct.k_thread*, !dbg !15031
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15023, metadata !DIExpression()), !dbg !15030
  call void @llvm.dbg.value(metadata i32 0, metadata !15024, metadata !DIExpression()), !dbg !15032
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15033
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15035, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15033
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15038
  br i1 %5, label %7, label %6, !dbg !15039

6:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15040
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15040
  unreachable, !dbg !15040

7:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15037
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15033
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15041
  call void @llvm.dbg.value(metadata i32 undef, metadata !15026, metadata !DIExpression()), !dbg !15032
  call void @llvm.dbg.value(metadata i32 undef, metadata !15024, metadata !DIExpression()), !dbg !15032
  %8 = bitcast %struct._timeout* %2 to %struct._thread_base*, !dbg !15042
  %9 = getelementptr inbounds %struct._thread_base, %struct._thread_base* %8, i32 0, i32 3, !dbg !15043
  %10 = load i8, i8* %9, align 1, !dbg !15043
  %11 = and i8 %10, 40, !dbg !15044
  %12 = icmp eq i8 %11, 0, !dbg !15044
  call void @llvm.dbg.value(metadata i1 %12, metadata !15027, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15045
  br i1 %12, label %13, label %20, !dbg !15046

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 -1, i32 1, !dbg !15047
  %15 = bitcast void (%struct._timeout*)** %14 to %struct._wait_q_t**, !dbg !15047
  %16 = load %struct._wait_q_t*, %struct._wait_q_t** %15, align 8, !dbg !15047
  %17 = icmp eq %struct._wait_q_t* %16, null, !dbg !15051
  br i1 %17, label %19, label %18, !dbg !15052

18:                                               ; preds = %13
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %3) #24, !dbg !15053
  br label %19, !dbg !15055

19:                                               ; preds = %18, %13
  tail call fastcc void @z_mark_thread_as_started.281(%struct.k_thread* noundef nonnull %3) #24, !dbg !15056
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef nonnull %3) #24, !dbg !15057
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %3) #24, !dbg !15058
  br label %20, !dbg !15059

20:                                               ; preds = %19, %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15060
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15060
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15062
  br i1 %21, label %23, label %22, !dbg !15063

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15064
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15064
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15064
  unreachable, !dbg !15064

23:                                               ; preds = %20
  %24 = extractvalue { i32, i32 } %4, 0, !dbg !15035
  call void @llvm.dbg.value(metadata i32 %24, metadata !14030, metadata !DIExpression()) #23, !dbg !15037
  call void @llvm.dbg.value(metadata i32 %24, metadata !14024, metadata !DIExpression()) #23, !dbg !15033
  call void @llvm.dbg.value(metadata i32 %24, metadata !15026, metadata !DIExpression()), !dbg !15032
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15060
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15065
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %24) #23, !dbg !15067, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !15024, metadata !DIExpression()), !dbg !15032
  call void @llvm.dbg.value(metadata i32 undef, metadata !15024, metadata !DIExpression()), !dbg !15032
  ret void, !dbg !15068
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15069 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15071, metadata !DIExpression()), !dbg !15072
  %2 = tail call fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* noundef %0) #24, !dbg !15073
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #24, !dbg !15074
  tail call fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* noundef %0) #24, !dbg !15075
  %3 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15076
  store %struct._wait_q_t* null, %struct._wait_q_t** %3, align 8, !dbg !15077
  ret void, !dbg !15078
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct._wait_q_t* @pended_on_thread(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #1 !dbg !15079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15083, metadata !DIExpression()), !dbg !15084
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !15085
  %3 = load %struct._wait_q_t*, %struct._wait_q_t** %2, align 8, !dbg !15085
  %4 = icmp eq %struct._wait_q_t* %3, null, !dbg !15085
  br i1 %4, label %5, label %6, !dbg !15088

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20.288, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 726) #25, !dbg !15089
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 726) #25, !dbg !15089
  unreachable, !dbg !15089

6:                                                ; preds = %1
  ret %struct._wait_q_t* %3, !dbg !15091
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_not_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15092 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15094, metadata !DIExpression()), !dbg !15095
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15096
  %3 = load i8, i8* %2, align 1, !dbg !15097
  %4 = and i8 %3, -3, !dbg !15097
  store i8 %4, i8* %2, align 1, !dbg !15097
  ret void, !dbg !15098
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unready_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15099 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15101, metadata !DIExpression()), !dbg !15102
  %2 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef %0) #24, !dbg !15103
  br i1 %2, label %3, label %7, !dbg !15105

3:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #23, !dbg !15106
  %4 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15109
  %5 = load i8, i8* %4, align 1, !dbg !15110
  %6 = and i8 %5, 127, !dbg !15110
  store i8 %6, i8* %4, align 1, !dbg !15110
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()) #23, !dbg !15111
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15113
  br label %7, !dbg !15114

7:                                                ; preds = %3, %1
  %8 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15115
  %9 = icmp eq %struct.k_thread* %8, %0, !dbg !15116
  %10 = zext i1 %9 to i32, !dbg !15116
  tail call fastcc void @update_cache(i32 noundef %10) #24, !dbg !15117
  ret void, !dbg !15118
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @z_mark_thread_as_pending(%struct.k_thread* nocapture noundef %0) unnamed_addr #9 !dbg !15119 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15121, metadata !DIExpression()), !dbg !15122
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !15123
  %3 = load i8, i8* %2, align 1, !dbg !15124
  %4 = or i8 %3, 2, !dbg !15124
  store i8 %4, i8* %2, align 1, !dbg !15124
  ret void, !dbg !15125
}

; Function Attrs: alwaysinline nounwind optsize
define dso_local void @z_unpend_thread_no_timeout(%struct.k_thread* noundef %0) local_unnamed_addr #22 !dbg !15126 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15128, metadata !DIExpression()), !dbg !15132
  call void @llvm.dbg.value(metadata i32 0, metadata !15129, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15134
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15136, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15134
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15139
  br i1 %3, label %5, label %4, !dbg !15140

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15141
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15141
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15141
  unreachable, !dbg !15141

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15134
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15142
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata i32 undef, metadata !15129, metadata !DIExpression()), !dbg !15133
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #24, !dbg !15143
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15146
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15146
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15148
  br i1 %6, label %8, label %7, !dbg !15149

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15150
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15150
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15150
  unreachable, !dbg !15150

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15136
  call void @llvm.dbg.value(metadata i32 %9, metadata !14030, metadata !DIExpression()) #23, !dbg !15138
  call void @llvm.dbg.value(metadata i32 %9, metadata !14024, metadata !DIExpression()) #23, !dbg !15134
  call void @llvm.dbg.value(metadata i32 %9, metadata !15131, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15146
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15151
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15153, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !15129, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.value(metadata i32 undef, metadata !15129, metadata !DIExpression()), !dbg !15133
  ret void, !dbg !15154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr_irqlock(i32 noundef %0, %struct._wait_q_t* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !15155 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !15161, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata i32 %0, metadata !15159, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %1, metadata !15160, metadata !DIExpression()), !dbg !15166
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15167
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %4, %struct._wait_q_t* noundef %1, [1 x i64] %2) #24, !dbg !15168
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15169
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15170
  %6 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %0) #24, !dbg !15171
  call void @llvm.dbg.value(metadata i32 %6, metadata !15162, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.value(metadata i32 0, metadata !15163, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15173
  %7 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15175, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15173
  %8 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15178
  br i1 %8, label %10, label %9, !dbg !15179

9:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15180
  unreachable, !dbg !15180

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15177
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15173
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15181
  call void @llvm.dbg.value(metadata i32 undef, metadata !15165, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15163, metadata !DIExpression()), !dbg !15172
  %11 = load %struct.k_thread*, %struct.k_thread** @pending_current, align 4, !dbg !15182
  %12 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15186
  %13 = icmp eq %struct.k_thread* %11, %12, !dbg !15187
  br i1 %13, label %14, label %15, !dbg !15188

14:                                               ; preds = %10
  store %struct.k_thread* null, %struct.k_thread** @pending_current, align 4, !dbg !15189
  br label %15, !dbg !15191

15:                                               ; preds = %10, %14
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15192
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15194
  br i1 %16, label %18, label %17, !dbg !15195

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15196
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15196
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15196
  unreachable, !dbg !15196

18:                                               ; preds = %15
  %19 = extractvalue { i32, i32 } %7, 0, !dbg !15175
  call void @llvm.dbg.value(metadata i32 %19, metadata !14030, metadata !DIExpression()) #23, !dbg !15177
  call void @llvm.dbg.value(metadata i32 %19, metadata !14024, metadata !DIExpression()) #23, !dbg !15173
  call void @llvm.dbg.value(metadata i32 %19, metadata !15165, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15192
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15197
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %19) #23, !dbg !15199, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !15163, metadata !DIExpression()), !dbg !15172
  call void @llvm.dbg.value(metadata i32 undef, metadata !15163, metadata !DIExpression()), !dbg !15172
  ret i32 %6, !dbg !15200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) local_unnamed_addr #1 !dbg !15201 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !15206, metadata !DIExpression()), !dbg !15209
  call void @llvm.dbg.value(metadata i64 undef, metadata !15208, metadata !DIExpression()), !dbg !15209
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !15205, metadata !DIExpression()), !dbg !15209
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !15207, metadata !DIExpression()), !dbg !15209
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15210
  store %struct.k_thread* %5, %struct.k_thread** @pending_current, align 4, !dbg !15211
  %6 = icmp eq %struct.k_spinlock* %0, @sched_spinlock, !dbg !15212
  br i1 %6, label %7, label %8, !dbg !15215

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3.291, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 846) #25, !dbg !15216
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 846) #25, !dbg !15216
  unreachable, !dbg !15216

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15218
  %9 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15220, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15218
  %10 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15223
  br i1 %10, label %12, label %11, !dbg !15224

11:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15225
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15225
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15225
  unreachable, !dbg !15225

12:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15222
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15218
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15226
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15227
  tail call fastcc void @pend_locked(%struct.k_thread* noundef %13, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !15228
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !14703, metadata !DIExpression()) #23, !dbg !15229
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef %0) #25, !dbg !15231
  br i1 %14, label %16, label %15, !dbg !15232

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !15233
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef %0) #25, !dbg !15233
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !15233
  unreachable, !dbg !15233

16:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !15234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14699, metadata !DIExpression()) #23, !dbg !15234
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14703, metadata !DIExpression()) #23, !dbg !15236
  %17 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15238
  br i1 %17, label %19, label %18, !dbg !15239

18:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !15240
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15240
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !15240
  unreachable, !dbg !15240

19:                                               ; preds = %16
  %20 = extractvalue [1 x i32] %1, 0
  call void @llvm.dbg.value(metadata i32 %20, metadata !14694, metadata !DIExpression()) #23, !dbg !15234
  %21 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %20) #25, !dbg !15241
  ret i32 %21, !dbg !15242
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend1_no_timeout(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15243 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15247, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15248, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i32 0, metadata !15249, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15254
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15256, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15254
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15259
  br i1 %3, label %5, label %4, !dbg !15260

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15261
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15261
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15261
  unreachable, !dbg !15261

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15258
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15254
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15262
  call void @llvm.dbg.value(metadata i32 undef, metadata !15251, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15248, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i32 undef, metadata !15249, metadata !DIExpression()), !dbg !15253
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15263
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15248, metadata !DIExpression()), !dbg !15252
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15266
  br i1 %8, label %10, label %9, !dbg !15268

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15269
  br label %10, !dbg !15271

10:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15272
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15272
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15274
  br i1 %11, label %13, label %12, !dbg !15275

12:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15276
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15276
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15276
  unreachable, !dbg !15276

13:                                               ; preds = %10
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !15256
  call void @llvm.dbg.value(metadata i32 %14, metadata !14030, metadata !DIExpression()) #23, !dbg !15258
  call void @llvm.dbg.value(metadata i32 %14, metadata !14024, metadata !DIExpression()) #23, !dbg !15254
  call void @llvm.dbg.value(metadata i32 %14, metadata !15251, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15272
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15277
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !15279, !srcloc !14072
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15248, metadata !DIExpression()), !dbg !15252
  call void @llvm.dbg.value(metadata i32 undef, metadata !15249, metadata !DIExpression()), !dbg !15253
  ret %struct.k_thread* %7, !dbg !15280
}

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15281 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15283, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15284, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata i32 0, metadata !15285, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15290
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15292, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15290
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15295
  br i1 %3, label %5, label %4, !dbg !15296

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15297
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15297
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15297
  unreachable, !dbg !15297

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15290
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15298
  call void @llvm.dbg.value(metadata i32 undef, metadata !15287, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15284, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15285, metadata !DIExpression()), !dbg !15289
  %6 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %7 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %6) #24, !dbg !15299
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15284, metadata !DIExpression()), !dbg !15288
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !15302
  br i1 %8, label %11, label %9, !dbg !15304

9:                                                ; preds = %5
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15305
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %7) #24, !dbg !15307
  br label %11, !dbg !15308

11:                                               ; preds = %5, %9
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15309
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15311
  br i1 %12, label %14, label %13, !dbg !15312

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15313
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15313
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15313
  unreachable, !dbg !15313

14:                                               ; preds = %11
  %15 = extractvalue { i32, i32 } %2, 0, !dbg !15292
  call void @llvm.dbg.value(metadata i32 %15, metadata !14030, metadata !DIExpression()) #23, !dbg !15294
  call void @llvm.dbg.value(metadata i32 %15, metadata !14024, metadata !DIExpression()) #23, !dbg !15290
  call void @llvm.dbg.value(metadata i32 %15, metadata !15287, metadata !DIExpression()), !dbg !15289
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15314
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %15) #23, !dbg !15316, !srcloc !14072
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !15284, metadata !DIExpression()), !dbg !15288
  call void @llvm.dbg.value(metadata i32 undef, metadata !15285, metadata !DIExpression()), !dbg !15289
  ret %struct.k_thread* %7, !dbg !15317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_unpend_thread(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !15318 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15320, metadata !DIExpression()), !dbg !15321
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15128, metadata !DIExpression()) #23, !dbg !15322
  call void @llvm.dbg.value(metadata i32 0, metadata !15129, metadata !DIExpression()) #23, !dbg !15324
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15325
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15327, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15329
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15329
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15325
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15330
  br i1 %3, label %5, label %4, !dbg !15331

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15332
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15332
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15332
  unreachable, !dbg !15332

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15329
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15325
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15333
  call void @llvm.dbg.value(metadata i32 undef, metadata !15131, metadata !DIExpression()) #23, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !15129, metadata !DIExpression()) #23, !dbg !15324
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef %0) #25, !dbg !15334
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15335
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15335
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15337
  br i1 %6, label %8, label %7, !dbg !15338

7:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15339
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15339
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15339
  unreachable, !dbg !15339

8:                                                ; preds = %5
  %9 = extractvalue { i32, i32 } %2, 0, !dbg !15327
  call void @llvm.dbg.value(metadata i32 %9, metadata !14030, metadata !DIExpression()) #23, !dbg !15329
  call void @llvm.dbg.value(metadata i32 %9, metadata !14024, metadata !DIExpression()) #23, !dbg !15325
  call void @llvm.dbg.value(metadata i32 %9, metadata !15131, metadata !DIExpression()) #23, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15335
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15340
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !15342, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !15129, metadata !DIExpression()) #23, !dbg !15324
  call void @llvm.dbg.value(metadata i32 undef, metadata !15129, metadata !DIExpression()) #23, !dbg !15324
  %10 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !15343
  ret void, !dbg !15344
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15345 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15347, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i32 %1, metadata !15348, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i8 0, metadata !15349, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i32 0, metadata !15350, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15355
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15357, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15355
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15360
  br i1 %4, label %6, label %5, !dbg !15361

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15362
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15362
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15362
  unreachable, !dbg !15362

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15359
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15355
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15363
  call void @llvm.dbg.value(metadata i32 undef, metadata !15352, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i8 poison, metadata !15349, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i32 undef, metadata !15350, metadata !DIExpression()), !dbg !15354
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call fastcc zeroext i1 @z_is_thread_ready(%struct.k_thread* noundef %0) #24, !dbg !15364
  call void @llvm.dbg.value(metadata i1 %9, metadata !15349, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15353
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4
  %11 = bitcast %union.anon.2* %10 to i8*
  %12 = trunc i32 %1 to i8
  br i1 %9, label %13, label %34, !dbg !15367

13:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #23, !dbg !15368
  %14 = load i8, i8* %7, align 1, !dbg !15374
  %15 = and i8 %14, 127, !dbg !15374
  store i8 %15, i8* %7, align 1, !dbg !15374
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()) #23, !dbg !15375
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %0) #25, !dbg !15377
  store i8 %12, i8* %11, align 2, !dbg !15378
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14227, metadata !DIExpression()) #23, !dbg !15379
  %16 = load i8, i8* %7, align 1, !dbg !15381
  %17 = or i8 %16, -128, !dbg !15381
  store i8 %17, i8* %7, align 1, !dbg !15381
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14234, metadata !DIExpression()) #23, !dbg !15382
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14241, metadata !DIExpression()) #23, !dbg !15384
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14247, metadata !DIExpression()) #23, !dbg !15384
  %18 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %0) #25, !dbg !15386
  br i1 %18, label %19, label %20, !dbg !15387

19:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !15388
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !15388
  unreachable, !dbg !15388

20:                                               ; preds = %13
  %21 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15389
  call void @llvm.dbg.value(metadata %struct._dnode* %21, metadata !14248, metadata !DIExpression()) #23, !dbg !15384
  %22 = icmp eq %struct._dnode* %21, null, !dbg !15390
  br i1 %22, label %32, label %23, !dbg !15389

23:                                               ; preds = %20, %29
  %24 = phi %struct._dnode* [ %30, %29 ], [ %21, %20 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %24, metadata !14248, metadata !DIExpression()) #23, !dbg !15384
  %25 = bitcast %struct._dnode* %24 to %struct.k_thread*, !dbg !15391
  call void @llvm.dbg.value(metadata %struct.k_thread* %25, metadata !14248, metadata !DIExpression()) #23, !dbg !15384
  %26 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %0, %struct.k_thread* noundef nonnull %25) #25, !dbg !15392
  %27 = icmp sgt i32 %26, 0, !dbg !15393
  br i1 %27, label %28, label %29, !dbg !15394

28:                                               ; preds = %23
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %24, %struct._dnode* noundef %8) #25, !dbg !15395
  br label %33, !dbg !15396

29:                                               ; preds = %23
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %24) #25, !dbg !15390
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14248, metadata !DIExpression()) #23, !dbg !15384
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15390
  br i1 %31, label %32, label %23, !dbg !15389, !llvm.loop !15397

32:                                               ; preds = %29, %20
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %8) #25, !dbg !15399
  br label %33, !dbg !15400

33:                                               ; preds = %28, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15401
  br label %35, !dbg !15402

34:                                               ; preds = %6
  store i8 %12, i8* %11, align 2, !dbg !15403
  br label %35

35:                                               ; preds = %33, %34
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15405
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15405
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15407
  br i1 %36, label %38, label %37, !dbg !15408

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15409
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15409
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15409
  unreachable, !dbg !15409

38:                                               ; preds = %35
  %39 = extractvalue { i32, i32 } %3, 0, !dbg !15357
  call void @llvm.dbg.value(metadata i32 %39, metadata !14030, metadata !DIExpression()) #23, !dbg !15359
  call void @llvm.dbg.value(metadata i32 %39, metadata !14024, metadata !DIExpression()) #23, !dbg !15355
  call void @llvm.dbg.value(metadata i32 %39, metadata !15352, metadata !DIExpression()), !dbg !15354
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15405
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15410
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %39) #23, !dbg !15412, !srcloc !14072
  call void @llvm.dbg.value(metadata i8 poison, metadata !15349, metadata !DIExpression()), !dbg !15353
  call void @llvm.dbg.value(metadata i32 undef, metadata !15350, metadata !DIExpression()), !dbg !15354
  ret i1 %9, !dbg !15413
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15414 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15418, metadata !DIExpression()), !dbg !15421
  call void @llvm.dbg.value(metadata i32 %1, metadata !15419, metadata !DIExpression()), !dbg !15421
  %3 = tail call zeroext i1 @z_set_prio(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15422
  call void @llvm.dbg.value(metadata i1 %3, metadata !15420, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15421
  br i1 %3, label %4, label %12, !dbg !15423

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15425
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15426
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15426
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15426
  %9 = load i8, i8* %8, align 1, !dbg !15426
  %10 = icmp eq i8 %9, 0, !dbg !15427
  br i1 %10, label %11, label %12, !dbg !15428

11:                                               ; preds = %4
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15429
  br label %12, !dbg !15431

12:                                               ; preds = %11, %4, %2
  ret void, !dbg !15432
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_lock() local_unnamed_addr #1 !dbg !15433 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15435, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15439
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15441, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15439
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15444
  br i1 %2, label %4, label %3, !dbg !15445

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15446
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15446
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15446
  unreachable, !dbg !15446

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15443
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15439
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15447
  call void @llvm.dbg.value(metadata i32 undef, metadata !15437, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15435, metadata !DIExpression()), !dbg !15438
  tail call fastcc void @z_sched_lock() #24, !dbg !15448
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15451
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15451
  %5 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15453
  br i1 %5, label %7, label %6, !dbg !15454

6:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15455
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15455
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15455
  unreachable, !dbg !15455

7:                                                ; preds = %4
  %8 = extractvalue { i32, i32 } %1, 0, !dbg !15441
  call void @llvm.dbg.value(metadata i32 %8, metadata !14030, metadata !DIExpression()) #23, !dbg !15443
  call void @llvm.dbg.value(metadata i32 %8, metadata !14024, metadata !DIExpression()) #23, !dbg !15439
  call void @llvm.dbg.value(metadata i32 %8, metadata !15437, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15451
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15456
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %8) #23, !dbg !15458, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !15435, metadata !DIExpression()), !dbg !15438
  call void @llvm.dbg.value(metadata i32 undef, metadata !15435, metadata !DIExpression()), !dbg !15438
  ret void, !dbg !15459
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @z_sched_lock() unnamed_addr #1 !dbg !15460 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15461, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %1, metadata !14746, metadata !DIExpression()) #23, !dbg !15466
  %2 = icmp eq i32 %1, 0, !dbg !15467
  br i1 %2, label %4, label %3, !dbg !15468

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.299, i32 0, i32 0), i32 noundef 253) #25, !dbg !15469
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15469
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.299, i32 0, i32 0), i32 noundef 253) #25, !dbg !15469
  unreachable, !dbg !15469

4:                                                ; preds = %0
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15471
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15471
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15471
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15471
  %9 = load i8, i8* %8, align 1, !dbg !15471
  %10 = icmp eq i8 %9, 1, !dbg !15471
  br i1 %10, label %11, label %12, !dbg !15474

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.22.300, i32 0, i32 0), i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.299, i32 0, i32 0), i32 noundef 254) #25, !dbg !15475
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15475
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21.299, i32 0, i32 0), i32 noundef 254) #25, !dbg !15475
  unreachable, !dbg !15475

12:                                               ; preds = %4
  %13 = add i8 %9, -1, !dbg !15477
  store i8 %13, i8* %8, align 1, !dbg !15477
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15478, !srcloc !15480
  ret void, !dbg !15481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @k_sched_unlock() local_unnamed_addr #1 !dbg !15482 {
  call void @llvm.dbg.value(metadata i32 0, metadata !15484, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15488
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15490, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15488
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15493
  br i1 %2, label %4, label %3, !dbg !15494

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15495
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15495
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15495
  unreachable, !dbg !15495

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15492
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15488
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15496
  call void @llvm.dbg.value(metadata i32 undef, metadata !15486, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata i32 undef, metadata !15484, metadata !DIExpression()), !dbg !15487
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15497
  %6 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 0, i32 4, !dbg !15497
  %7 = bitcast %union.anon.2* %6 to %struct.device_state*, !dbg !15497
  %8 = getelementptr inbounds %struct.device_state, %struct.device_state* %7, i32 0, i32 1, !dbg !15497
  %9 = load i8, i8* %8, align 1, !dbg !15497
  %10 = icmp eq i8 %9, 0, !dbg !15497
  br i1 %10, label %11, label %12, !dbg !15502

11:                                               ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.303, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 999) #25, !dbg !15503
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15503
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 999) #25, !dbg !15503
  unreachable, !dbg !15503

12:                                               ; preds = %4
  %13 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15505, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %13, metadata !14746, metadata !DIExpression()) #23, !dbg !15510
  %14 = icmp eq i32 %13, 0, !dbg !15511
  br i1 %14, label %16, label %15, !dbg !15512

15:                                               ; preds = %12
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15513
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15513
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1000) #25, !dbg !15513
  unreachable, !dbg !15513

16:                                               ; preds = %12
  %17 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15515
  %18 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %17, i32 0, i32 0, i32 4, !dbg !15516
  %19 = bitcast %union.anon.2* %18 to %struct.device_state*, !dbg !15516
  %20 = getelementptr inbounds %struct.device_state, %struct.device_state* %19, i32 0, i32 1, !dbg !15516
  %21 = load i8, i8* %20, align 1, !dbg !15517
  %22 = add i8 %21, 1, !dbg !15517
  store i8 %22, i8* %20, align 1, !dbg !15517
  tail call fastcc void @update_cache(i32 noundef 0) #24, !dbg !15518
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15519
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !15519
  %23 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15521
  br i1 %23, label %25, label %24, !dbg !15522

24:                                               ; preds = %16
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !15523
  unreachable, !dbg !15523

25:                                               ; preds = %16
  %26 = extractvalue { i32, i32 } %1, 0, !dbg !15490
  call void @llvm.dbg.value(metadata i32 %26, metadata !14030, metadata !DIExpression()) #23, !dbg !15492
  call void @llvm.dbg.value(metadata i32 %26, metadata !14024, metadata !DIExpression()) #23, !dbg !15488
  call void @llvm.dbg.value(metadata i32 %26, metadata !15486, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !15519
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !15524
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %26) #23, !dbg !15526, !srcloc !14072
  call void @llvm.dbg.value(metadata i32 1, metadata !15484, metadata !DIExpression()), !dbg !15487
  call void @llvm.dbg.value(metadata i32 undef, metadata !15484, metadata !DIExpression()), !dbg !15487
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !15527
  ret void, !dbg !15528
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_swap_next_thread() local_unnamed_addr #8 !dbg !15529 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 0), align 4, !dbg !15530
  ret %struct.k_thread* %1, !dbg !15531
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local zeroext i1 @z_priq_rb_lessthan(%struct.rbnode* nocapture noundef readonly %0, %struct.rbnode* nocapture noundef readonly %1) local_unnamed_addr #8 !dbg !15532 {
  call void @llvm.dbg.value(metadata %struct.rbnode* %0, metadata !15536, metadata !DIExpression()), !dbg !15541
  call void @llvm.dbg.value(metadata %struct.rbnode* %1, metadata !15537, metadata !DIExpression()), !dbg !15541
  %3 = bitcast %struct.rbnode* %0 to %struct.k_thread*, !dbg !15542
  call void @llvm.dbg.value(metadata %struct.k_thread* %3, metadata !15538, metadata !DIExpression()), !dbg !15541
  %4 = bitcast %struct.rbnode* %1 to %struct.k_thread*, !dbg !15543
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15539, metadata !DIExpression()), !dbg !15541
  %5 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %3, %struct.k_thread* noundef %4) #24, !dbg !15544
  call void @llvm.dbg.value(metadata i32 %5, metadata !15540, metadata !DIExpression()), !dbg !15541
  %6 = icmp sgt i32 %5, 0, !dbg !15545
  br i1 %6, label %17, label %7, !dbg !15547

7:                                                ; preds = %2
  %8 = icmp slt i32 %5, 0, !dbg !15548
  br i1 %8, label %17, label %9, !dbg !15550

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %0, i32 2, !dbg !15551
  %11 = bitcast %struct.rbnode* %10 to i32*, !dbg !15551
  %12 = load i32, i32* %11, align 8, !dbg !15551
  %13 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %1, i32 2, !dbg !15553
  %14 = bitcast %struct.rbnode* %13 to i32*, !dbg !15553
  %15 = load i32, i32* %14, align 8, !dbg !15553
  %16 = icmp ult i32 %12, %15, !dbg !15554
  br label %17, !dbg !15555

17:                                               ; preds = %7, %2, %9
  %18 = phi i1 [ %16, %9 ], [ true, %2 ], [ false, %7 ], !dbg !15556
  ret i1 %18, !dbg !15557
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_add(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15558 {
  %3 = alloca %struct._rb_foreach, align 4
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15575, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15576, metadata !DIExpression()), !dbg !15590
  %4 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15591
  br i1 %4, label %5, label %6, !dbg !15594

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15595
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1179) #25, !dbg !15595
  unreachable, !dbg !15595

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15597
  %8 = load i32, i32* %7, align 4, !dbg !15598
  %9 = add nsw i32 %8, 1, !dbg !15598
  store i32 %9, i32* %7, align 4, !dbg !15598
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %1, i32 0, i32 0, i32 5, !dbg !15599
  store i32 %8, i32* %10, align 8, !dbg !15600
  %11 = load i32, i32* %7, align 4, !dbg !15601
  %12 = icmp eq i32 %11, 0, !dbg !15602
  br i1 %12, label %13, label %35, !dbg !15603

13:                                               ; preds = %6
  %14 = bitcast %struct._rb_foreach* %3 to i8*, !dbg !15604
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15604
  call void @llvm.dbg.declare(metadata %struct._rb_foreach* %3, metadata !15578, metadata !DIExpression()), !dbg !15604
  %15 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15604
  %16 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 2, !dbg !15604
  %17 = load i32, i32* %16, align 4, !dbg !15604
  %18 = shl i32 %17, 2, !dbg !15604
  %19 = alloca i8, i32 %18, align 8, !dbg !15604
  %20 = bitcast %struct._rb_foreach* %3 to i8**, !dbg !15604
  store i8* %19, i8** %20, align 4, !dbg !15604
  %21 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 1, !dbg !15604
  %22 = alloca i8, i32 %17, align 8, !dbg !15604
  store i8* %22, i8** %21, align 4, !dbg !15604
  %23 = getelementptr inbounds %struct._rb_foreach, %struct._rb_foreach* %3, i32 0, i32 2, !dbg !15604
  store i32 -1, i32* %23, align 4, !dbg !15604
  %24 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15605
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15587, metadata !DIExpression()), !dbg !15606
  call void @llvm.dbg.value(metadata %struct.rbnode* %24, metadata !15577, metadata !DIExpression()), !dbg !15590
  %25 = icmp eq %struct.rbnode* %24, null, !dbg !15607
  br i1 %25, label %26, label %27, !dbg !15604

26:                                               ; preds = %27, %13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #23, !dbg !15607
  br label %35, !dbg !15608

27:                                               ; preds = %13, %27
  %28 = phi %struct.rbnode* [ %33, %27 ], [ %24, %13 ]
  call void @llvm.dbg.value(metadata %struct.rbnode* %28, metadata !15577, metadata !DIExpression()), !dbg !15590
  %29 = load i32, i32* %7, align 4, !dbg !15609
  %30 = add nsw i32 %29, 1, !dbg !15609
  store i32 %30, i32* %7, align 4, !dbg !15609
  %31 = getelementptr inbounds %struct.rbnode, %struct.rbnode* %28, i32 2, !dbg !15611
  %32 = bitcast %struct.rbnode* %31 to i32*, !dbg !15611
  store i32 %29, i32* %32, align 8, !dbg !15612
  %33 = call %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef nonnull %15, %struct._rb_foreach* noundef nonnull %3) #25, !dbg !15605
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15587, metadata !DIExpression()), !dbg !15606
  call void @llvm.dbg.value(metadata %struct.rbnode* %33, metadata !15577, metadata !DIExpression()), !dbg !15590
  %34 = icmp eq %struct.rbnode* %33, null, !dbg !15607
  br i1 %34, label %26, label %27, !dbg !15604, !llvm.loop !15613

35:                                               ; preds = %26, %6
  %36 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15615
  %37 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15616
  call void @rb_insert(%struct.rbtree* noundef %36, %struct.rbnode* noundef %37) #25, !dbg !15617
  ret void, !dbg !15618
}

; Function Attrs: optsize
declare !dbg !15619 dso_local %struct.rbnode* @z_rb_foreach_next(%struct.rbtree* noundef, %struct._rb_foreach* noundef) local_unnamed_addr #0

; Function Attrs: optsize
declare !dbg !15624 dso_local void @rb_insert(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local void @z_priq_rb_remove(%struct._priq_rb* noundef %0, %struct.k_thread* noundef %1) local_unnamed_addr #1 !dbg !15627 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15629, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !15630, metadata !DIExpression()), !dbg !15631
  %3 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %1) #24, !dbg !15632
  br i1 %3, label %4, label %5, !dbg !15635

4:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15636
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1200) #25, !dbg !15636
  unreachable, !dbg !15636

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15638
  %7 = bitcast %struct.k_thread* %1 to %struct.rbnode*, !dbg !15639
  tail call void @rb_remove(%struct.rbtree* noundef %6, %struct.rbnode* noundef %7) #25, !dbg !15640
  %8 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, i32 0, !dbg !15641
  %9 = load %struct.rbnode*, %struct.rbnode** %8, align 4, !dbg !15641
  %10 = icmp eq %struct.rbnode* %9, null, !dbg !15643
  br i1 %10, label %11, label %13, !dbg !15644

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 1, !dbg !15645
  store i32 0, i32* %12, align 4, !dbg !15647
  br label %13, !dbg !15648

13:                                               ; preds = %11, %5
  ret void, !dbg !15649
}

; Function Attrs: optsize
declare !dbg !15650 dso_local void @rb_remove(%struct.rbtree* noundef, %struct.rbnode* noundef) local_unnamed_addr #0

; Function Attrs: noinline nounwind optsize
define dso_local %struct.k_thread* @z_priq_rb_best(%struct._priq_rb* noundef %0) local_unnamed_addr #1 !dbg !15651 {
  call void @llvm.dbg.value(metadata %struct._priq_rb* %0, metadata !15655, metadata !DIExpression()), !dbg !15658
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15656, metadata !DIExpression()), !dbg !15658
  %2 = getelementptr inbounds %struct._priq_rb, %struct._priq_rb* %0, i32 0, i32 0, !dbg !15659
  %3 = tail call fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %2) #24, !dbg !15660
  call void @llvm.dbg.value(metadata %struct.rbnode* %3, metadata !15657, metadata !DIExpression()), !dbg !15658
  %4 = bitcast %struct.rbnode* %3 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %4, metadata !15656, metadata !DIExpression()), !dbg !15658
  ret %struct.k_thread* %4, !dbg !15661
}

; Function Attrs: noinline nounwind optsize
define internal fastcc %struct.rbnode* @rb_get_min(%struct.rbtree* noundef %0) unnamed_addr #1 !dbg !15662 {
  call void @llvm.dbg.value(metadata %struct.rbtree* %0, metadata !15666, metadata !DIExpression()), !dbg !15667
  %2 = tail call %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef %0, i8 noundef zeroext 0) #25, !dbg !15668
  ret %struct.rbnode* %2, !dbg !15669
}

; Function Attrs: optsize
declare !dbg !15670 dso_local %struct.rbnode* @z_rb_get_minmax(%struct.rbtree* noundef, i8 noundef zeroext) local_unnamed_addr #0

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_priq_mq_best(%struct._priq_mq* noundef readonly %0) local_unnamed_addr #16 !dbg !15673 {
  call void @llvm.dbg.value(metadata %struct._priq_mq* %0, metadata !15683, metadata !DIExpression()), !dbg !15687
  %2 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 1, !dbg !15688
  %3 = load i32, i32* %2, align 4, !dbg !15688
  %4 = icmp eq i32 %3, 0, !dbg !15690
  br i1 %4, label %10, label %5, !dbg !15691

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata %struct.k_thread* null, metadata !15684, metadata !DIExpression()), !dbg !15687
  %6 = tail call i32 @llvm.cttz.i32(i32 %3, i1 true), !dbg !15692, !range !7619
  %7 = getelementptr inbounds %struct._priq_mq, %struct._priq_mq* %0, i32 0, i32 0, i32 %6, !dbg !15693
  call void @llvm.dbg.value(metadata %struct._dnode* %7, metadata !15685, metadata !DIExpression()), !dbg !15687
  %8 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef %7) #24, !dbg !15694
  call void @llvm.dbg.value(metadata %struct._dnode* %8, metadata !15686, metadata !DIExpression()), !dbg !15687
  %9 = bitcast %struct._dnode* %8 to %struct.k_thread*
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !15684, metadata !DIExpression()), !dbg !15687
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.k_thread* [ %9, %5 ], [ null, %1 ], !dbg !15687
  ret %struct.k_thread* %11, !dbg !15695
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_unpend_all(%struct._wait_q_t* noundef %0) local_unnamed_addr #1 !dbg !15696 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15700, metadata !DIExpression()), !dbg !15703
  call void @llvm.dbg.value(metadata i32 0, metadata !15701, metadata !DIExpression()), !dbg !15703
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.304(%struct._wait_q_t* noundef %0) #24, !dbg !15704
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !15702, metadata !DIExpression()), !dbg !15703
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !15705
  br i1 %3, label %8, label %4, !dbg !15706

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %6, %4 ], [ %2, %1 ]
  tail call void @z_unpend_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15707
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !15709
  call void @llvm.dbg.value(metadata i32 1, metadata !15701, metadata !DIExpression()), !dbg !15703
  %6 = tail call fastcc %struct.k_thread* @z_waitq_head.304(%struct._wait_q_t* noundef %0) #24, !dbg !15704
  call void @llvm.dbg.value(metadata %struct.k_thread* %6, metadata !15702, metadata !DIExpression()), !dbg !15703
  %7 = icmp eq %struct.k_thread* %6, null, !dbg !15705
  br i1 %7, label %8, label %4, !dbg !15706, !llvm.loop !15710

8:                                                ; preds = %4, %1
  %9 = phi i32 [ 0, %1 ], [ 1, %4 ], !dbg !15703
  ret i32 %9, !dbg !15712
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct.k_thread* @z_waitq_head.304(%struct._wait_q_t* noundef readonly %0) unnamed_addr #8 !dbg !15713 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !15715, metadata !DIExpression()), !dbg !15716
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !15717
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef %2) #24, !dbg !15718
  %4 = bitcast %struct._dnode* %3 to %struct.k_thread*, !dbg !15719
  ret %struct.k_thread* %4, !dbg !15720
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @init_ready_q(%struct._ready_q* noundef %0) local_unnamed_addr #7 !dbg !15721 {
  call void @llvm.dbg.value(metadata %struct._ready_q* %0, metadata !15730, metadata !DIExpression()), !dbg !15731
  %2 = getelementptr inbounds %struct._ready_q, %struct._ready_q* %0, i32 0, i32 1, !dbg !15732
  tail call fastcc void @sys_dlist_init.305(%struct._dnode* noundef nonnull %2) #24, !dbg !15733
  ret void, !dbg !15734
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.305(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !15735 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !15739, metadata !DIExpression()), !dbg !15740
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !15741
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !15742
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !15743
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !15744
  ret void, !dbg !15745
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_sched_init() local_unnamed_addr #1 !dbg !15746 {
  tail call void @init_ready_q(%struct._ready_q* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1)) #24, !dbg !15747
  tail call void @k_sched_time_slice_set(i32 noundef 0, i32 noundef 0) #24, !dbg !15748
  ret void, !dbg !15749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread* nocapture noundef readonly %0) local_unnamed_addr #8 !dbg !15750 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15755, metadata !DIExpression()), !dbg !15756
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 4, !dbg !15757
  %3 = bitcast %union.anon.2* %2 to i8*, !dbg !15757
  %4 = load i8, i8* %3, align 2, !dbg !15757
  %5 = sext i8 %4 to i32, !dbg !15758
  ret i32 %5, !dbg !15759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) local_unnamed_addr #1 !dbg !15760 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15764, metadata !DIExpression()), !dbg !15767
  call void @llvm.dbg.value(metadata i32 %1, metadata !15765, metadata !DIExpression()), !dbg !15767
  %3 = add i32 %1, 16, !dbg !15768
  %4 = icmp ult i32 %3, 31, !dbg !15768
  br i1 %4, label %6, label %5, !dbg !15768

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([134 x i8], [134 x i8]* @.str.8.308, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15772
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.9.309, i32 0, i32 0), i32 noundef %1, i32 noundef 14, i32 noundef -16) #25, !dbg !15772
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1331) #25, !dbg !15772
  unreachable, !dbg !15772

6:                                                ; preds = %2
  %7 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15774, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %7, metadata !14746, metadata !DIExpression()) #23, !dbg !15779
  %8 = icmp eq i32 %7, 0, !dbg !15780
  br i1 %8, label %10, label %9, !dbg !15781

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15782
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15782
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1332) #25, !dbg !15782
  unreachable, !dbg !15782

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15766, metadata !DIExpression()), !dbg !15767
  tail call void @z_thread_priority_set(%struct.k_thread* noundef %0, i32 noundef %1) #24, !dbg !15784
  ret void, !dbg !15785
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @k_can_yield() local_unnamed_addr #1 !dbg !15786 {
  %1 = tail call fastcc zeroext i1 @k_is_pre_kernel() #24, !dbg !15787
  br i1 %1, label %8, label %2, !dbg !15788

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @k_is_in_isr() #25, !dbg !15789
  br i1 %3, label %8, label %4, !dbg !15790

4:                                                ; preds = %2
  %5 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15791
  %6 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %5) #24, !dbg !15792
  %7 = xor i1 %6, true, !dbg !15790
  br label %8, !dbg !15790

8:                                                ; preds = %4, %2, %0
  %9 = phi i1 [ false, %2 ], [ false, %0 ], [ %7, %4 ]
  ret i1 %9, !dbg !15793
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @k_is_pre_kernel() unnamed_addr #8 !dbg !15794 {
  %1 = load i8, i8* @z_sys_post_kernel, align 1, !dbg !15795, !range !6782
  %2 = icmp eq i8 %1, 0, !dbg !15795
  ret i1 %2, !dbg !15796
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_yield() local_unnamed_addr #1 !dbg !15797 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15800, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %1, metadata !14746, metadata !DIExpression()) #23, !dbg !15805
  %2 = icmp eq i32 %1, 0, !dbg !15806
  br i1 %2, label %4, label %3, !dbg !15807

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15808
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15808
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1392) #25, !dbg !15808
  unreachable, !dbg !15808

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15810
  %5 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15812, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15810
  %6 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15815
  br i1 %6, label %8, label %7, !dbg !15816

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15817
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15817
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15817
  unreachable, !dbg !15817

8:                                                ; preds = %4
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15810
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15818
  call void @llvm.dbg.value(metadata i32 undef, metadata !15799, metadata !DIExpression()), !dbg !15819
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15820
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14210, metadata !DIExpression()) #23, !dbg !15823
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 3, !dbg !15825
  %11 = load i8, i8* %10, align 1, !dbg !15826
  %12 = and i8 %11, 127, !dbg !15826
  store i8 %12, i8* %10, align 1, !dbg !15826
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !14218, metadata !DIExpression()) #23, !dbg !15827
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef %9) #25, !dbg !15829
  %13 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15830
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14227, metadata !DIExpression()) #23, !dbg !15831
  %14 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 3, !dbg !15833
  %15 = load i8, i8* %14, align 1, !dbg !15834
  %16 = or i8 %15, -128, !dbg !15834
  store i8 %16, i8* %14, align 1, !dbg !15834
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14234, metadata !DIExpression()) #23, !dbg !15835
  call void @llvm.dbg.value(metadata %struct._dnode* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), metadata !14241, metadata !DIExpression()) #23, !dbg !15837
  call void @llvm.dbg.value(metadata %struct.k_thread* %13, metadata !14247, metadata !DIExpression()) #23, !dbg !15837
  %17 = tail call fastcc zeroext i1 @z_is_idle_thread_object(%struct.k_thread* noundef %13) #25, !dbg !15839
  br i1 %17, label %18, label %19, !dbg !15840

18:                                               ; preds = %8
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.268, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !15841
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 186) #25, !dbg !15841
  unreachable, !dbg !15841

19:                                               ; preds = %8
  %20 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.270(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1)) #25, !dbg !15842
  call void @llvm.dbg.value(metadata %struct._dnode* %20, metadata !14248, metadata !DIExpression()) #23, !dbg !15837
  %21 = icmp eq %struct._dnode* %20, null, !dbg !15843
  br i1 %21, label %32, label %22, !dbg !15842

22:                                               ; preds = %19, %29
  %23 = phi %struct._dnode* [ %30, %29 ], [ %20, %19 ]
  call void @llvm.dbg.value(metadata %struct._dnode* %23, metadata !14248, metadata !DIExpression()) #23, !dbg !15837
  %24 = bitcast %struct._dnode* %23 to %struct.k_thread*, !dbg !15844
  call void @llvm.dbg.value(metadata %struct.k_thread* %24, metadata !14248, metadata !DIExpression()) #23, !dbg !15837
  %25 = tail call i32 @z_sched_prio_cmp(%struct.k_thread* noundef %13, %struct.k_thread* noundef nonnull %24) #25, !dbg !15845
  %26 = icmp sgt i32 %25, 0, !dbg !15846
  br i1 %26, label %27, label %29, !dbg !15847

27:                                               ; preds = %22
  %28 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15848
  tail call fastcc void @sys_dlist_insert(%struct._dnode* noundef nonnull %23, %struct._dnode* noundef %28) #25, !dbg !15849
  br label %34, !dbg !15850

29:                                               ; preds = %22
  %30 = tail call fastcc %struct._dnode* @sys_dlist_peek_next(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef nonnull %23) #25, !dbg !15843
  call void @llvm.dbg.value(metadata %struct._dnode* %30, metadata !14248, metadata !DIExpression()) #23, !dbg !15837
  %31 = icmp eq %struct._dnode* %30, null, !dbg !15843
  br i1 %31, label %32, label %22, !dbg !15842, !llvm.loop !15851

32:                                               ; preds = %29, %19
  %33 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %13, i32 0, i32 0, i32 0, i32 0, !dbg !15853
  tail call fastcc void @sys_dlist_append(%struct._dnode* noundef getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 1, i32 1), %struct._dnode* noundef %33) #25, !dbg !15854
  br label %34, !dbg !15855

34:                                               ; preds = %27, %32
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !15856
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !15857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14699, metadata !DIExpression()) #23, !dbg !15857
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14703, metadata !DIExpression()) #23, !dbg !15859
  %35 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15861
  br i1 %35, label %37, label %36, !dbg !15862

36:                                               ; preds = %34
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !15863
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15863
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !15863
  unreachable, !dbg !15863

37:                                               ; preds = %34
  %38 = extractvalue { i32, i32 } %5, 0, !dbg !15812
  call void @llvm.dbg.value(metadata i32 %38, metadata !14030, metadata !DIExpression()) #23, !dbg !15814
  call void @llvm.dbg.value(metadata i32 %38, metadata !14024, metadata !DIExpression()) #23, !dbg !15810
  call void @llvm.dbg.value(metadata i32 %38, metadata !15799, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !15857
  %39 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %38) #25, !dbg !15864
  ret void, !dbg !15865
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_sleep([1 x i64] %0) local_unnamed_addr #1 !dbg !15866 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !15870, metadata !DIExpression()), !dbg !15873
  %3 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15874, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %3, metadata !14746, metadata !DIExpression()) #23, !dbg !15879
  %4 = icmp eq i32 %3, 0, !dbg !15880
  br i1 %4, label %6, label %5, !dbg !15881

5:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15882
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15882
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1463) #25, !dbg !15882
  unreachable, !dbg !15882

6:                                                ; preds = %1
  %7 = icmp eq i64 %2, -1, !dbg !15884
  br i1 %7, label %8, label %10, !dbg !15886

8:                                                ; preds = %6
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15887
  tail call fastcc void @k_thread_suspend(%struct.k_thread* noundef %9) #24, !dbg !15889
  br label %15, !dbg !15890

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i64 %2, metadata !15871, metadata !DIExpression()), !dbg !15873
  %11 = tail call fastcc i32 @z_tick_sleep(i64 noundef %2) #24, !dbg !15891
  %12 = sext i32 %11 to i64, !dbg !15891
  call void @llvm.dbg.value(metadata i64 %12, metadata !15871, metadata !DIExpression()), !dbg !15873
  %13 = tail call fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %12) #24, !dbg !15892
  %14 = trunc i64 %13 to i32, !dbg !15892
  call void @llvm.dbg.value(metadata i32 %14, metadata !15872, metadata !DIExpression()), !dbg !15873
  br label %15

15:                                               ; preds = %10, %8
  %16 = phi i32 [ -1, %8 ], [ %14, %10 ], !dbg !15873
  ret i32 %16, !dbg !15893
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_thread_suspend(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !15894 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !15898, metadata !DIExpression()), !dbg !15899
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15900, !srcloc !15902
  tail call void @z_impl_k_thread_suspend(%struct.k_thread* noundef %0) #24, !dbg !15903
  ret void, !dbg !15904
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @z_tick_sleep(i64 noundef %0) unnamed_addr #1 !dbg !15905 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15909, metadata !DIExpression()), !dbg !15913
  %2 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !15914, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %2, metadata !14746, metadata !DIExpression()) #23, !dbg !15919
  %3 = icmp eq i32 %2, 0, !dbg !15920
  br i1 %3, label %5, label %4, !dbg !15921

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15922
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15922
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1420) #25, !dbg !15922
  unreachable, !dbg !15922

5:                                                ; preds = %1
  %6 = icmp eq i64 %0, 0, !dbg !15924
  br i1 %6, label %7, label %8, !dbg !15926

7:                                                ; preds = %5
  tail call fastcc void @k_yield() #24, !dbg !15927
  br label %43, !dbg !15929

8:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i64 %0, metadata !15911, metadata !DIExpression()), !dbg !15913
  %9 = icmp sgt i64 %0, -3, !dbg !15930
  br i1 %9, label %10, label %14, !dbg !15932

10:                                               ; preds = %8
  %11 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15933
  %12 = trunc i64 %0 to i32, !dbg !15935
  %13 = add i32 %11, %12, !dbg !15935
  call void @llvm.dbg.value(metadata i32 %13, metadata !15910, metadata !DIExpression()), !dbg !15913
  br label %17, !dbg !15936

14:                                               ; preds = %8
  %15 = trunc i64 %0 to i32, !dbg !15937
  %16 = sub i32 -2, %15, !dbg !15937
  call void @llvm.dbg.value(metadata i32 %16, metadata !15910, metadata !DIExpression()), !dbg !15913
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i32 [ %13, %10 ], [ %16, %14 ], !dbg !15939
  call void @llvm.dbg.value(metadata i32 %18, metadata !15910, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !15940
  %19 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !15942, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15944
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !15944
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15940
  %20 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15945
  br i1 %20, label %22, label %21, !dbg !15946

21:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15947
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15947
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !15947
  unreachable, !dbg !15947

22:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !15944
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !15940
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15948
  call void @llvm.dbg.value(metadata i32 undef, metadata !15912, metadata !DIExpression()), !dbg !15913
  %23 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15949
  store %struct.k_thread* %23, %struct.k_thread** @pending_current, align 4, !dbg !15950
  tail call fastcc void @unready_thread(%struct.k_thread* noundef %23) #24, !dbg !15951
  %24 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15952
  %25 = insertvalue [1 x i64] poison, i64 %0, 0, !dbg !15953
  tail call fastcc void @z_add_thread_timeout.285(%struct.k_thread* noundef %24, [1 x i64] %25) #24, !dbg !15953
  %26 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15954
  tail call fastcc void @z_mark_thread_as_suspended(%struct.k_thread* noundef %26) #24, !dbg !15955
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !15956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14699, metadata !DIExpression()) #23, !dbg !15956
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14703, metadata !DIExpression()) #23, !dbg !15958
  %27 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15960
  br i1 %27, label %29, label %28, !dbg !15961

28:                                               ; preds = %22
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !15962
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !15962
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !15962
  unreachable, !dbg !15962

29:                                               ; preds = %22
  %30 = extractvalue { i32, i32 } %19, 0, !dbg !15942
  call void @llvm.dbg.value(metadata i32 %30, metadata !14030, metadata !DIExpression()) #23, !dbg !15944
  call void @llvm.dbg.value(metadata i32 %30, metadata !14024, metadata !DIExpression()) #23, !dbg !15940
  call void @llvm.dbg.value(metadata i32 %30, metadata !15912, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !15956
  %31 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %30) #25, !dbg !15963
  %32 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !15964
  %33 = tail call fastcc zeroext i1 @z_is_thread_state_set(%struct.k_thread* noundef %32, i32 noundef 16) #24, !dbg !15964
  br i1 %33, label %34, label %35, !dbg !15967

34:                                               ; preds = %29
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([64 x i8], [64 x i8]* @.str.23.312, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15968
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5.272, i32 0, i32 0)) #25, !dbg !15968
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1448) #25, !dbg !15968
  unreachable, !dbg !15968

35:                                               ; preds = %29
  %36 = zext i32 %18 to i64, !dbg !15970
  %37 = tail call i32 @sys_clock_tick_get_32() #25, !dbg !15971
  %38 = zext i32 %37 to i64, !dbg !15971
  %39 = sub nsw i64 %36, %38, !dbg !15972
  call void @llvm.dbg.value(metadata i64 %39, metadata !15909, metadata !DIExpression()), !dbg !15913
  %40 = icmp sgt i64 %39, 0, !dbg !15973
  %41 = select i1 %40, i64 %39, i64 0, !dbg !15973
  %42 = trunc i64 %41 to i32, !dbg !15973
  br label %43

43:                                               ; preds = %35, %7
  %44 = phi i32 [ 0, %7 ], [ %42, %35 ], !dbg !15913
  ret i32 %44, !dbg !15974
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_ms_floor64(i64 noundef %0) unnamed_addr #3 !dbg !15975 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !15977, metadata !DIExpression()), !dbg !15978
  call void @llvm.dbg.value(metadata i64 %0, metadata !14078, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i32 10000, metadata !14081, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i32 1000, metadata !14082, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i8 1, metadata !14083, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i1 false, metadata !14084, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  call void @llvm.dbg.value(metadata i1 false, metadata !14085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  call void @llvm.dbg.value(metadata i8 0, metadata !14086, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i1 false, metadata !14087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  call void @llvm.dbg.value(metadata i1 true, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15979
  call void @llvm.dbg.value(metadata i64 0, metadata !14089, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i64 0, metadata !14089, metadata !DIExpression()), !dbg !15979
  call void @llvm.dbg.value(metadata i64 %0, metadata !14078, metadata !DIExpression()), !dbg !15979
  %2 = udiv i64 %0, 10, !dbg !15981
  ret i64 %2, !dbg !15985
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_yield() unnamed_addr #1 !dbg !15986 {
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !15987, !srcloc !15989
  tail call void @z_impl_k_yield() #24, !dbg !15990
  ret void, !dbg !15991
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_usleep(i32 noundef %0) local_unnamed_addr #1 !dbg !15992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !15996, metadata !DIExpression()), !dbg !15998
  %2 = sext i32 %0 to i64, !dbg !15999
  %3 = tail call fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %2) #24, !dbg !16000
  call void @llvm.dbg.value(metadata i64 %3, metadata !15997, metadata !DIExpression(DW_OP_LLVM_convert, 64, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !15998
  %4 = shl i64 %3, 32, !dbg !16001
  %5 = ashr exact i64 %4, 32, !dbg !16001
  %6 = tail call fastcc i32 @z_tick_sleep(i64 noundef %5) #24, !dbg !16002
  call void @llvm.dbg.value(metadata i32 %6, metadata !15997, metadata !DIExpression()), !dbg !15998
  %7 = sext i32 %6 to i64, !dbg !16003
  %8 = tail call fastcc i64 @k_ticks_to_us_floor64(i64 noundef %7) #24, !dbg !16004
  %9 = trunc i64 %8 to i32, !dbg !16004
  ret i32 %9, !dbg !16005
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_us_to_ticks_ceil64(i64 noundef %0) unnamed_addr #3 !dbg !16006 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16008, metadata !DIExpression()), !dbg !16009
  call void @llvm.dbg.value(metadata i64 %0, metadata !14078, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14081, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i32 10000, metadata !14082, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i8 1, metadata !14083, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i1 false, metadata !14084, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16010
  call void @llvm.dbg.value(metadata i1 true, metadata !14085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16010
  call void @llvm.dbg.value(metadata i8 0, metadata !14086, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i1 false, metadata !14087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16010
  call void @llvm.dbg.value(metadata i1 true, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16010
  call void @llvm.dbg.value(metadata i64 0, metadata !14089, metadata !DIExpression()), !dbg !16010
  call void @llvm.dbg.value(metadata i64 0, metadata !14089, metadata !DIExpression()), !dbg !16010
  %2 = add i64 %0, 99, !dbg !16012
  call void @llvm.dbg.value(metadata i64 %2, metadata !14078, metadata !DIExpression()), !dbg !16010
  %3 = udiv i64 %2, 100, !dbg !16013
  ret i64 %3, !dbg !16014
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i64 @k_ticks_to_us_floor64(i64 noundef %0) unnamed_addr #3 !dbg !16015 {
  call void @llvm.dbg.value(metadata i64 %0, metadata !16017, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.value(metadata i64 %0, metadata !14078, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i32 10000, metadata !14081, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i32 1000000, metadata !14082, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i8 1, metadata !14083, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i1 false, metadata !14084, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  call void @llvm.dbg.value(metadata i1 false, metadata !14085, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  call void @llvm.dbg.value(metadata i8 0, metadata !14086, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i1 true, metadata !14087, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  call void @llvm.dbg.value(metadata i1 false, metadata !14088, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !16019
  call void @llvm.dbg.value(metadata i64 0, metadata !14089, metadata !DIExpression()), !dbg !16019
  call void @llvm.dbg.value(metadata i64 0, metadata !14089, metadata !DIExpression()), !dbg !16019
  %2 = mul i64 %0, 100, !dbg !16021
  ret i64 %2, !dbg !16023
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_wakeup(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16024 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16026, metadata !DIExpression()), !dbg !16027
  %2 = tail call fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* noundef %0) #24, !dbg !16028
  br i1 %2, label %14, label %3, !dbg !16030

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef %0) #24, !dbg !16031
  %5 = icmp slt i32 %4, 0, !dbg !16033
  br i1 %5, label %6, label %10, !dbg !16034

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16035
  %8 = load i8, i8* %7, align 1, !dbg !16035
  %9 = icmp eq i8 %8, 16, !dbg !16038
  br i1 %9, label %10, label %14, !dbg !16039

10:                                               ; preds = %6, %3
  tail call fastcc void @z_mark_thread_as_not_suspended(%struct.k_thread* noundef %0) #24, !dbg !16040
  tail call void @z_ready_thread(%struct.k_thread* noundef %0) #24, !dbg !16041
  %11 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16042, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %11, metadata !14746, metadata !DIExpression()) #23, !dbg !16046
  %12 = icmp eq i32 %11, 0, !dbg !16047
  br i1 %12, label %13, label %14, !dbg !16048

13:                                               ; preds = %10
  tail call fastcc void @z_reschedule_unlocked() #24, !dbg !16049
  br label %14, !dbg !16051

14:                                               ; preds = %6, %1, %13, %10
  ret void, !dbg !16052
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_thread_pending(%struct.k_thread* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16053 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16055, metadata !DIExpression()), !dbg !16056
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16057
  %3 = load i8, i8* %2, align 1, !dbg !16057
  %4 = and i8 %3, 2, !dbg !16058
  %5 = icmp ne i8 %4, 0, !dbg !16059
  ret i1 %5, !dbg !16060
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local %struct.k_thread* @z_impl_z_current_get() local_unnamed_addr #8 !dbg !16061 {
  %1 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16066
  call void @llvm.dbg.value(metadata %struct.k_thread* %1, metadata !16065, metadata !DIExpression()), !dbg !16067
  ret %struct.k_thread* %1, !dbg !16068
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_is_preempt_thread() local_unnamed_addr #1 !dbg !16069 {
  %1 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16070, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %1, metadata !14746, metadata !DIExpression()) #23, !dbg !16073
  %2 = icmp eq i32 %1, 0, !dbg !16074
  br i1 %2, label %3, label %8, !dbg !16075

3:                                                ; preds = %0
  %4 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16076
  %5 = tail call fastcc i32 @is_preempt(%struct.k_thread* noundef %4) #24, !dbg !16077
  %6 = icmp ne i32 %5, 0, !dbg !16075
  %7 = zext i1 %6 to i32
  br label %8

8:                                                ; preds = %3, %0
  %9 = phi i32 [ 0, %0 ], [ %7, %3 ]
  ret i32 %9, !dbg !16078
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_thread_abort(%struct.k_thread* noundef %0) local_unnamed_addr #1 !dbg !16079 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16081, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !16084
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16086, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !16088
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !16084
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16089
  br i1 %3, label %5, label %4, !dbg !16090

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !16091
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16091
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !16091
  unreachable, !dbg !16091

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16086
  call void @llvm.dbg.value(metadata i32 %6, metadata !14030, metadata !DIExpression()) #23, !dbg !16088
  call void @llvm.dbg.value(metadata i32 %6, metadata !14024, metadata !DIExpression()) #23, !dbg !16084
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16092
  call void @llvm.dbg.value(metadata i32 %6, metadata !16082, metadata !DIExpression()), !dbg !16083
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 2, !dbg !16093
  %8 = load i8, i8* %7, align 4, !dbg !16093
  %9 = and i8 %8, 1, !dbg !16095
  %10 = icmp eq i8 %9, 0, !dbg !16096
  br i1 %10, label %15, label %11, !dbg !16097

11:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16098
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !16098
  %12 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16101
  br i1 %12, label %14, label %13, !dbg !16102

13:                                               ; preds = %11
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16103
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16103
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16103
  unreachable, !dbg !16103

14:                                               ; preds = %11
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !16098
  call void @llvm.dbg.value(metadata i32 %6, metadata !14066, metadata !DIExpression()) #23, !dbg !16104
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16106, !srcloc !14072
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16107
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.318, i32 0, i32 0), %struct.k_thread* noundef nonnull %0) #25, !dbg !16107
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1731) #25, !dbg !16107
  unreachable, !dbg !16107

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16111
  %17 = load i8, i8* %16, align 1, !dbg !16111
  %18 = and i8 %17, 8, !dbg !16113
  %19 = icmp eq i8 %18, 0, !dbg !16114
  br i1 %19, label %24, label %20, !dbg !16115

20:                                               ; preds = %15
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16116
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !16116
  %21 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16119
  br i1 %21, label %23, label %22, !dbg !16120

22:                                               ; preds = %20
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16121
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16121
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16121
  unreachable, !dbg !16121

23:                                               ; preds = %20
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !16116
  call void @llvm.dbg.value(metadata i32 %6, metadata !14066, metadata !DIExpression()) #23, !dbg !16122
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16124, !srcloc !14072
  br label %39, !dbg !16125

24:                                               ; preds = %15
  tail call fastcc void @end_thread(%struct.k_thread* noundef nonnull %0) #24, !dbg !16126
  %25 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16127
  %26 = icmp eq %struct.k_thread* %25, %0, !dbg !16129
  br i1 %26, label %27, label %35, !dbg !16130

27:                                               ; preds = %24
  %28 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16131, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %28, metadata !14746, metadata !DIExpression()) #23, !dbg !16134
  %29 = icmp eq i32 %28, 0, !dbg !16135
  br i1 %29, label %30, label %35, !dbg !16136

30:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14699, metadata !DIExpression()) #23, !dbg !16137
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14703, metadata !DIExpression()) #23, !dbg !16140
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16142
  br i1 %31, label %33, label %32, !dbg !16143

32:                                               ; preds = %30
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !16144
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16144
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !16144
  unreachable, !dbg !16144

33:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %6, metadata !14694, metadata !DIExpression()) #23, !dbg !16137
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %6) #25, !dbg !16145
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.317, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16146
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.319, i32 0, i32 0)) #25, !dbg !16146
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1778) #25, !dbg !16146
  unreachable, !dbg !16146

35:                                               ; preds = %27, %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16150
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !16150
  %36 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16152
  br i1 %36, label %38, label %37, !dbg !16153

37:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16154
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16154
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16154
  unreachable, !dbg !16154

38:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %6, metadata !14052, metadata !DIExpression()) #23, !dbg !16150
  call void @llvm.dbg.value(metadata i32 %6, metadata !14066, metadata !DIExpression()) #23, !dbg !16155
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16157, !srcloc !14072
  br label %39, !dbg !16158

39:                                               ; preds = %38, %23
  ret void, !dbg !16158
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @end_thread(%struct.k_thread* noundef %0) unnamed_addr #1 !dbg !16159 {
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16161, metadata !DIExpression()), !dbg !16162
  %2 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16163
  %3 = load i8, i8* %2, align 1, !dbg !16163
  %4 = and i8 %3, 8, !dbg !16165
  %5 = icmp eq i8 %4, 0, !dbg !16166
  br i1 %5, label %6, label %20, !dbg !16167

6:                                                ; preds = %1
  %7 = and i8 %3, -41, !dbg !16168
  %8 = or i8 %7, 8, !dbg !16168
  store i8 %8, i8* %2, align 1, !dbg !16168
  %9 = tail call fastcc zeroext i1 @z_is_thread_queued(%struct.k_thread* noundef nonnull %0) #24, !dbg !16170
  br i1 %9, label %10, label %12, !dbg !16172

10:                                               ; preds = %6
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14210, metadata !DIExpression()) #23, !dbg !16173
  %11 = and i8 %8, 95, !dbg !16176
  store i8 %11, i8* %2, align 1, !dbg !16176
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !14218, metadata !DIExpression()) #23, !dbg !16177
  tail call void @z_priq_dumb_remove(%struct._dnode* undef, %struct.k_thread* noundef nonnull %0) #25, !dbg !16179
  br label %12, !dbg !16180

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16181
  %14 = load %struct._wait_q_t*, %struct._wait_q_t** %13, align 8, !dbg !16181
  %15 = icmp eq %struct._wait_q_t* %14, null, !dbg !16183
  br i1 %15, label %17, label %16, !dbg !16184

16:                                               ; preds = %12
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16185
  br label %17, !dbg !16187

17:                                               ; preds = %16, %12
  %18 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %0) #24, !dbg !16188
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16189
  tail call fastcc void @unpend_all(%struct._wait_q_t* noundef nonnull %19) #24, !dbg !16190
  tail call fastcc void @update_cache(i32 noundef 1) #24, !dbg !16191
  br label %20, !dbg !16192

20:                                               ; preds = %17, %1
  ret void, !dbg !16193
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @unpend_all(%struct._wait_q_t* noundef %0) unnamed_addr #1 !dbg !16194 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16198, metadata !DIExpression()), !dbg !16200
  %2 = tail call fastcc %struct.k_thread* @z_waitq_head.304(%struct._wait_q_t* noundef %0) #24, !dbg !16201
  call void @llvm.dbg.value(metadata %struct.k_thread* %2, metadata !16199, metadata !DIExpression()), !dbg !16200
  %3 = icmp eq %struct.k_thread* %2, null, !dbg !16202
  br i1 %3, label %10, label %4, !dbg !16203

4:                                                ; preds = %1, %4
  %5 = phi %struct.k_thread* [ %8, %4 ], [ %2, %1 ]
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16204
  %6 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %5) #24, !dbg !16206
  call void @llvm.dbg.value(metadata %struct.k_thread* %5, metadata !16207, metadata !DIExpression()), !dbg !16213
  call void @llvm.dbg.value(metadata i32 0, metadata !16212, metadata !DIExpression()), !dbg !16213
  %7 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %5, i32 0, i32 8, i32 1, !dbg !16215
  store i32 0, i32* %7, align 4, !dbg !16216
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %5) #24, !dbg !16217
  %8 = tail call fastcc %struct.k_thread* @z_waitq_head.304(%struct._wait_q_t* noundef %0) #24, !dbg !16201
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16199, metadata !DIExpression()), !dbg !16200
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16202
  br i1 %9, label %10, label %4, !dbg !16203, !llvm.loop !16218

10:                                               ; preds = %4, %1
  ret void, !dbg !16220
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_thread_join(%struct.k_thread* noundef %0, [1 x i64] %1) local_unnamed_addr #1 !dbg !16221 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16226, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata %struct.k_thread* %0, metadata !16225, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !16230
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16232, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !16230
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16235
  br i1 %4, label %6, label %5, !dbg !16236

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !16237
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16237
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !16237
  unreachable, !dbg !16237

6:                                                ; preds = %2
  %7 = extractvalue { i32, i32 } %3, 0, !dbg !16232
  call void @llvm.dbg.value(metadata i32 %7, metadata !14030, metadata !DIExpression()) #23, !dbg !16234
  call void @llvm.dbg.value(metadata i32 %7, metadata !14024, metadata !DIExpression()) #23, !dbg !16230
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16238
  call void @llvm.dbg.value(metadata i32 %7, metadata !16227, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i32 0, metadata !16228, metadata !DIExpression()), !dbg !16229
  %8 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 3, !dbg !16239
  %9 = load i8, i8* %8, align 1, !dbg !16239
  %10 = and i8 %9, 8, !dbg !16241
  %11 = icmp eq i8 %10, 0, !dbg !16242
  br i1 %11, label %12, label %35, !dbg !16243

12:                                               ; preds = %6
  %13 = extractvalue [1 x i64] %1, 0
  call void @llvm.dbg.value(metadata i64 %13, metadata !16226, metadata !DIExpression()), !dbg !16229
  %14 = icmp eq i64 %13, 0, !dbg !16244
  br i1 %14, label %35, label %15, !dbg !16246

15:                                               ; preds = %12
  %16 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16247
  %17 = icmp eq %struct.k_thread* %16, %0, !dbg !16249
  br i1 %17, label %35, label %18, !dbg !16250

18:                                               ; preds = %15
  %19 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 0, i32 1, !dbg !16251
  %20 = load %struct._wait_q_t*, %struct._wait_q_t** %19, align 8, !dbg !16251
  %21 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %16, i32 0, i32 3, !dbg !16252
  %22 = icmp eq %struct._wait_q_t* %20, %21, !dbg !16253
  br i1 %22, label %35, label %23, !dbg !16254

23:                                               ; preds = %18
  %24 = tail call i32 asm sideeffect "MRS $0, ipsr", "=r"() #23, !dbg !16255, !srcloc !14750
  call void @llvm.dbg.value(metadata i32 %24, metadata !14746, metadata !DIExpression()) #23, !dbg !16261
  %25 = icmp eq i32 %24, 0, !dbg !16262
  br i1 %25, label %27, label %26, !dbg !16263

26:                                               ; preds = %23
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6.298, i32 0, i32 0), i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16264
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.320, i32 0, i32 0)) #25, !dbg !16264
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.269, i32 0, i32 0), i32 noundef 1809) #25, !dbg !16264
  unreachable, !dbg !16264

27:                                               ; preds = %23
  %28 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16266
  %29 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %0, i32 0, i32 3, !dbg !16267
  tail call fastcc void @add_to_waitq_locked(%struct.k_thread* noundef %28, %struct._wait_q_t* noundef nonnull %29) #24, !dbg !16268
  %30 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16269
  tail call fastcc void @add_thread_timeout(%struct.k_thread* noundef %30, [1 x i64] %1) #24, !dbg !16270
  call void @llvm.dbg.value(metadata i32 undef, metadata !14694, metadata !DIExpression()) #23, !dbg !16271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14699, metadata !DIExpression()) #23, !dbg !16271
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14703, metadata !DIExpression()) #23, !dbg !16273
  %31 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16275
  br i1 %31, label %33, label %32, !dbg !16276

32:                                               ; preds = %27
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !16277
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16277
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 225) #25, !dbg !16277
  unreachable, !dbg !16277

33:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %7, metadata !14694, metadata !DIExpression()) #23, !dbg !16271
  %34 = tail call fastcc i32 @z_swap_irqlock(i32 noundef %7) #25, !dbg !16278
  call void @llvm.dbg.value(metadata i32 %34, metadata !16228, metadata !DIExpression()), !dbg !16229
  br label %40, !dbg !16279

35:                                               ; preds = %15, %18, %12, %6
  %36 = phi i32 [ 0, %6 ], [ -16, %12 ], [ -45, %18 ], [ -45, %15 ], !dbg !16280
  call void @llvm.dbg.value(metadata i32 %36, metadata !16228, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !16281
  %37 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16283
  br i1 %37, label %39, label %38, !dbg !16284

38:                                               ; preds = %35
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16285
  unreachable, !dbg !16285

39:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %7, metadata !14052, metadata !DIExpression()) #23, !dbg !16281
  call void @llvm.dbg.value(metadata i32 %7, metadata !14066, metadata !DIExpression()) #23, !dbg !16286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %7) #23, !dbg !16288, !srcloc !14072
  br label %40, !dbg !16289

40:                                               ; preds = %39, %33
  %41 = phi i32 [ %36, %39 ], [ %34, %33 ], !dbg !16229
  ret i32 %41, !dbg !16290
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @z_sched_wake(%struct._wait_q_t* noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #1 !dbg !16291 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16295, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata i32 %1, metadata !16296, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata i8* %2, metadata !16297, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata i8 0, metadata !16299, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata i32 0, metadata !16300, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14018, metadata !DIExpression()) #23, !dbg !16305
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16307, !srcloc !14033
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !16309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14031, metadata !DIExpression()) #23, !dbg !16309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !16305
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16310
  br i1 %5, label %7, label %6, !dbg !16311

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.263, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !16312
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16.265, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16312
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 148) #25, !dbg !16312
  unreachable, !dbg !16312

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 undef, metadata !14030, metadata !DIExpression()) #23, !dbg !16309
  call void @llvm.dbg.value(metadata i32 undef, metadata !14024, metadata !DIExpression()) #23, !dbg !16305
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16313
  call void @llvm.dbg.value(metadata i32 undef, metadata !16302, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i8 poison, metadata !16299, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata i32 undef, metadata !16300, metadata !DIExpression()), !dbg !16304
  %8 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0
  %9 = tail call %struct.k_thread* @z_priq_dumb_best(%struct._dnode* noundef %8) #24, !dbg !16314
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16298, metadata !DIExpression()), !dbg !16303
  %10 = icmp eq %struct.k_thread* %9, null, !dbg !16317
  br i1 %10, label %15, label %11, !dbg !16319

11:                                               ; preds = %7
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16320, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata i32 %1, metadata !16326, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata i8* %2, metadata !16327, metadata !DIExpression()), !dbg !16328
  call void @llvm.dbg.value(metadata %struct.k_thread* %9, metadata !16207, metadata !DIExpression()), !dbg !16331
  call void @llvm.dbg.value(metadata i32 %1, metadata !16212, metadata !DIExpression()), !dbg !16331
  %12 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 8, i32 1, !dbg !16333
  store i32 %1, i32* %12, align 4, !dbg !16334
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16335
  store i8* %2, i8** %13, align 4, !dbg !16336
  tail call fastcc void @unpend_thread_no_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16337
  %14 = tail call fastcc i32 @z_abort_thread_timeout(%struct.k_thread* noundef nonnull %9) #24, !dbg !16338
  tail call fastcc void @ready_thread(%struct.k_thread* noundef nonnull %9) #24, !dbg !16339
  call void @llvm.dbg.value(metadata i8 1, metadata !16299, metadata !DIExpression()), !dbg !16303
  br label %15, !dbg !16340

15:                                               ; preds = %7, %11
  call void @llvm.dbg.value(metadata i8 poison, metadata !16299, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16341
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @sched_spinlock, metadata !14057, metadata !DIExpression()) #23, !dbg !16341
  %16 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16343
  br i1 %16, label %18, label %17, !dbg !16344

17:                                               ; preds = %15
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.262, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17.266, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16345
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18.267, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @sched_spinlock) #25, !dbg !16345
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.15.264, i32 0, i32 0), i32 noundef 194) #25, !dbg !16345
  unreachable, !dbg !16345

18:                                               ; preds = %15
  %19 = xor i1 %10, true, !dbg !16303
  %20 = extractvalue { i32, i32 } %4, 0, !dbg !16307
  call void @llvm.dbg.value(metadata i32 %20, metadata !14030, metadata !DIExpression()) #23, !dbg !16309
  call void @llvm.dbg.value(metadata i32 %20, metadata !14024, metadata !DIExpression()) #23, !dbg !16305
  call void @llvm.dbg.value(metadata i32 %20, metadata !16302, metadata !DIExpression()), !dbg !16304
  call void @llvm.dbg.value(metadata i32 undef, metadata !14052, metadata !DIExpression()) #23, !dbg !16341
  call void @llvm.dbg.value(metadata i32 undef, metadata !14066, metadata !DIExpression()) #23, !dbg !16346
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %20) #23, !dbg !16348, !srcloc !14072
  call void @llvm.dbg.value(metadata i8 poison, metadata !16299, metadata !DIExpression()), !dbg !16303
  call void @llvm.dbg.value(metadata i32 undef, metadata !16300, metadata !DIExpression()), !dbg !16304
  ret i1 %19, !dbg !16349
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_sched_wait(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3, i8** noundef writeonly %4) local_unnamed_addr #1 !dbg !16350 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !16356, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata i64 undef, metadata !16358, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata %struct.k_spinlock* %0, metadata !16355, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %2, metadata !16357, metadata !DIExpression()), !dbg !16361
  call void @llvm.dbg.value(metadata i8** %4, metadata !16359, metadata !DIExpression()), !dbg !16361
  %6 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef %0, [1 x i32] %1, %struct._wait_q_t* noundef %2, [1 x i64] %3) #24, !dbg !16362
  call void @llvm.dbg.value(metadata i32 %6, metadata !16360, metadata !DIExpression()), !dbg !16361
  %7 = icmp eq i8** %4, null, !dbg !16363
  br i1 %7, label %12, label %8, !dbg !16365

8:                                                ; preds = %5
  %9 = load %struct.k_thread*, %struct.k_thread** getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 2), align 4, !dbg !16366
  %10 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %9, i32 0, i32 0, i32 6, !dbg !16368
  %11 = load i8*, i8** %10, align 4, !dbg !16368
  store i8* %11, i8** %4, align 4, !dbg !16369
  br label %12, !dbg !16370

12:                                               ; preds = %8, %5
  ret i32 %6, !dbg !16371
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @z_impl_k_condvar_init(%struct.k_condvar* noundef %0) local_unnamed_addr #7 !dbg !16372 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16385, metadata !DIExpression()), !dbg !16386
  %2 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16387
  tail call fastcc void @z_waitq_init.321(%struct._wait_q_t* noundef %2) #24, !dbg !16388
  ret i32 0, !dbg !16389
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @z_waitq_init.321(%struct._wait_q_t* noundef %0) unnamed_addr #7 !dbg !16390 {
  call void @llvm.dbg.value(metadata %struct._wait_q_t* %0, metadata !16395, metadata !DIExpression()), !dbg !16396
  %2 = getelementptr inbounds %struct._wait_q_t, %struct._wait_q_t* %0, i32 0, i32 0, !dbg !16397
  tail call fastcc void @sys_dlist_init.322(%struct._dnode* noundef %2) #24, !dbg !16398
  ret void, !dbg !16399
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dlist_init.322(%struct._dnode* noundef %0) unnamed_addr #7 !dbg !16400 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16405, metadata !DIExpression()), !dbg !16406
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16407
  store %struct._dnode* %0, %struct._dnode** %2, align 4, !dbg !16408
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16409
  store %struct._dnode* %0, %struct._dnode** %3, align 4, !dbg !16410
  ret void, !dbg !16411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_signal(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16412 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16414, metadata !DIExpression()), !dbg !16501
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.325, metadata !16502, metadata !DIExpression()) #23, !dbg !16509
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16511, !srcloc !16517
  call void @llvm.dbg.value(metadata i32 undef, metadata !16514, metadata !DIExpression()) #23, !dbg !16518
  call void @llvm.dbg.value(metadata i32 undef, metadata !16515, metadata !DIExpression()) #23, !dbg !16518
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()) #23, !dbg !16509
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16519
  br i1 %3, label %5, label %4, !dbg !16522

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.328, i32 0, i32 0), i32 noundef 148) #25, !dbg !16523
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16523
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.328, i32 0, i32 0), i32 noundef 148) #25, !dbg !16523
  unreachable, !dbg !16523

5:                                                ; preds = %1
  %6 = extractvalue { i32, i32 } %2, 0, !dbg !16511
  call void @llvm.dbg.value(metadata i32 %6, metadata !16514, metadata !DIExpression()) #23, !dbg !16518
  call void @llvm.dbg.value(metadata i32 %6, metadata !16508, metadata !DIExpression()) #23, !dbg !16509
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16525
  call void @llvm.dbg.value(metadata i32 %6, metadata !16415, metadata !DIExpression()), !dbg !16501
  %7 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16526
  %8 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %7) #25, !dbg !16527
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16420, metadata !DIExpression()), !dbg !16501
  %9 = icmp eq %struct.k_thread* %8, null, !dbg !16528
  br i1 %9, label %13, label %10, !dbg !16530

10:                                               ; preds = %5
  call void @llvm.dbg.value(metadata %struct.k_thread* %8, metadata !16531, metadata !DIExpression()), !dbg !16537
  call void @llvm.dbg.value(metadata i32 0, metadata !16536, metadata !DIExpression()), !dbg !16537
  %11 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %8, i32 0, i32 8, i32 1, !dbg !16540
  store i32 0, i32* %11, align 4, !dbg !16541
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %8) #25, !dbg !16542
  %12 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !16543
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.325, [1 x i32] %12) #25, !dbg !16543
  br label %17, !dbg !16544

13:                                               ; preds = %5
  call void @llvm.dbg.value(metadata i32 undef, metadata !16545, metadata !DIExpression()) #23, !dbg !16551
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.325, metadata !16550, metadata !DIExpression()) #23, !dbg !16551
  %14 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16554
  br i1 %14, label %16, label %15, !dbg !16557

15:                                               ; preds = %13
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4.330, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.328, i32 0, i32 0), i32 noundef 194) #25, !dbg !16558
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.331, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16558
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.328, i32 0, i32 0), i32 noundef 194) #25, !dbg !16558
  unreachable, !dbg !16558

16:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %6, metadata !16545, metadata !DIExpression()) #23, !dbg !16551
  call void @llvm.dbg.value(metadata i32 %6, metadata !16560, metadata !DIExpression()) #23, !dbg !16563
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %6) #23, !dbg !16565, !srcloc !16566
  br label %17

17:                                               ; preds = %10, %16
  ret i32 0, !dbg !16567
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_broadcast(%struct.k_condvar* noundef %0) local_unnamed_addr #1 !dbg !16568 {
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16570, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata i32 0, metadata !16573, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.325, metadata !16502, metadata !DIExpression()) #23, !dbg !16575
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16577, !srcloc !16517
  call void @llvm.dbg.value(metadata i32 undef, metadata !16514, metadata !DIExpression()) #23, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !16515, metadata !DIExpression()) #23, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()) #23, !dbg !16575
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16580
  br i1 %3, label %5, label %4, !dbg !16581

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.328, i32 0, i32 0), i32 noundef 148) #25, !dbg !16582
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16582
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.328, i32 0, i32 0), i32 noundef 148) #25, !dbg !16582
  unreachable, !dbg !16582

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16514, metadata !DIExpression()) #23, !dbg !16579
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()) #23, !dbg !16575
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16583
  call void @llvm.dbg.value(metadata i32 undef, metadata !16572, metadata !DIExpression()), !dbg !16574
  %6 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 0, metadata !16573, metadata !DIExpression()), !dbg !16574
  %7 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16584
  call void @llvm.dbg.value(metadata %struct.k_thread* %7, metadata !16571, metadata !DIExpression()), !dbg !16574
  %8 = icmp eq %struct.k_thread* %7, null, !dbg !16585
  br i1 %8, label %16, label %9, !dbg !16586

9:                                                ; preds = %5, %9
  %10 = phi %struct.k_thread* [ %14, %9 ], [ %7, %5 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !16573, metadata !DIExpression()), !dbg !16574
  %12 = add nuw nsw i32 %11, 1, !dbg !16587
  call void @llvm.dbg.value(metadata i32 %12, metadata !16573, metadata !DIExpression()), !dbg !16574
  call void @llvm.dbg.value(metadata %struct.k_thread* %10, metadata !16531, metadata !DIExpression()), !dbg !16589
  call void @llvm.dbg.value(metadata i32 0, metadata !16536, metadata !DIExpression()), !dbg !16589
  %13 = getelementptr inbounds %struct.k_thread, %struct.k_thread* %10, i32 0, i32 8, i32 1, !dbg !16591
  store i32 0, i32* %13, align 4, !dbg !16592
  tail call void @z_ready_thread(%struct.k_thread* noundef nonnull %10) #25, !dbg !16593
  %14 = tail call %struct.k_thread* @z_unpend_first_thread(%struct._wait_q_t* noundef %6) #25, !dbg !16584
  call void @llvm.dbg.value(metadata %struct.k_thread* %14, metadata !16571, metadata !DIExpression()), !dbg !16574
  %15 = icmp eq %struct.k_thread* %14, null, !dbg !16585
  br i1 %15, label %16, label %9, !dbg !16586, !llvm.loop !16594

16:                                               ; preds = %9, %5
  %17 = phi i32 [ 0, %5 ], [ %12, %9 ], !dbg !16574
  %18 = extractvalue { i32, i32 } %2, 0, !dbg !16577
  call void @llvm.dbg.value(metadata i32 %18, metadata !16514, metadata !DIExpression()) #23, !dbg !16579
  call void @llvm.dbg.value(metadata i32 %18, metadata !16508, metadata !DIExpression()) #23, !dbg !16575
  call void @llvm.dbg.value(metadata i32 %18, metadata !16572, metadata !DIExpression()), !dbg !16574
  %19 = insertvalue [1 x i32] poison, i32 %18, 0, !dbg !16596
  tail call void @z_reschedule(%struct.k_spinlock* noundef nonnull @lock.325, [1 x i32] %19) #25, !dbg !16596
  ret i32 %17, !dbg !16597
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_impl_k_condvar_wait(%struct.k_condvar* noundef %0, %struct.k_mutex* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16598 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16615, metadata !DIExpression()), !dbg !16618
  call void @llvm.dbg.value(metadata %struct.k_condvar* %0, metadata !16613, metadata !DIExpression()), !dbg !16618
  call void @llvm.dbg.value(metadata %struct.k_mutex* %1, metadata !16614, metadata !DIExpression()), !dbg !16618
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @lock.325, metadata !16502, metadata !DIExpression()) #23, !dbg !16619
  %4 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16621, !srcloc !16517
  call void @llvm.dbg.value(metadata i32 undef, metadata !16514, metadata !DIExpression()) #23, !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !16515, metadata !DIExpression()) #23, !dbg !16623
  call void @llvm.dbg.value(metadata i32 undef, metadata !16508, metadata !DIExpression()) #23, !dbg !16619
  %5 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16624
  br i1 %5, label %7, label %6, !dbg !16625

6:                                                ; preds = %3
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.326, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1.327, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.328, i32 0, i32 0), i32 noundef 148) #25, !dbg !16626
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.329, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16626
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.328, i32 0, i32 0), i32 noundef 148) #25, !dbg !16626
  unreachable, !dbg !16626

7:                                                ; preds = %3
  %8 = extractvalue { i32, i32 } %4, 0, !dbg !16621
  call void @llvm.dbg.value(metadata i32 %8, metadata !16514, metadata !DIExpression()) #23, !dbg !16623
  call void @llvm.dbg.value(metadata i32 %8, metadata !16508, metadata !DIExpression()) #23, !dbg !16619
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @lock.325) #25, !dbg !16627
  call void @llvm.dbg.value(metadata i32 %8, metadata !16616, metadata !DIExpression()), !dbg !16618
  tail call fastcc void @k_mutex_unlock.334(%struct.k_mutex* noundef %1) #24, !dbg !16628
  %9 = getelementptr inbounds %struct.k_condvar, %struct.k_condvar* %0, i32 0, i32 0, !dbg !16629
  %10 = insertvalue [1 x i32] poison, i32 %8, 0, !dbg !16630
  %11 = tail call i32 @z_pend_curr(%struct.k_spinlock* noundef nonnull @lock.325, [1 x i32] %10, %struct._wait_q_t* noundef %9, [1 x i64] %2) #25, !dbg !16630
  call void @llvm.dbg.value(metadata i32 %11, metadata !16617, metadata !DIExpression()), !dbg !16618
  tail call fastcc void @k_mutex_lock.335(%struct.k_mutex* noundef %1) #24, !dbg !16631
  ret i32 %11, !dbg !16632
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_unlock.334(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16633 {
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16637, metadata !DIExpression()), !dbg !16638
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16639, !srcloc !16641
  %2 = tail call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* noundef %0) #25, !dbg !16642
  ret void, !dbg !16643
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @k_mutex_lock.335(%struct.k_mutex* noundef %0) unnamed_addr #1 !dbg !16644 {
  call void @llvm.dbg.value(metadata i64 undef, metadata !16649, metadata !DIExpression()), !dbg !16650
  call void @llvm.dbg.value(metadata %struct.k_mutex* %0, metadata !16648, metadata !DIExpression()), !dbg !16650
  tail call void asm sideeffect "", "~{memory}"() #23, !dbg !16651, !srcloc !16653
  %2 = tail call i32 @z_impl_k_mutex_lock(%struct.k_mutex* noundef %0, [1 x i64] [i64 -1]) #25, !dbg !16654
  ret void, !dbg !16655
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_data_copy() local_unnamed_addr #1 !dbg !16656 {
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__data_region_load_start, i32 0, i32 0), i32 noundef sub (i32 ptrtoint ([0 x i8]* @__data_region_end to i32), i32 ptrtoint ([0 x i8]* @__data_region_start to i32))) #25, !dbg !16658
  tail call void @z_early_memcpy(i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_start, i32 0, i32 0), i8* noundef getelementptr inbounds ([0 x i8], [0 x i8]* @__ramfunc_load_start, i32 0, i32 0), i32 noundef ptrtoint ([0 x i8]* @__ramfunc_size to i32)) #25, !dbg !16659
  ret void, !dbg !16660
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_add_timeout(%struct._timeout* noundef %0, void (%struct._timeout*)* noundef %1, [1 x i64] %2) local_unnamed_addr #1 !dbg !16661 {
  %4 = extractvalue [1 x i64] %2, 0
  call void @llvm.dbg.value(metadata i64 %4, metadata !16671, metadata !DIExpression()), !dbg !16688
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16669, metadata !DIExpression()), !dbg !16688
  call void @llvm.dbg.value(metadata void (%struct._timeout*)* %1, metadata !16670, metadata !DIExpression()), !dbg !16688
  %5 = icmp eq i64 %4, -1, !dbg !16689
  br i1 %5, label %63, label %6, !dbg !16691

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16692
  %8 = tail call fastcc zeroext i1 @sys_dnode_is_linked.340(%struct._dnode* noundef %7) #24, !dbg !16692
  br i1 %8, label %9, label %10, !dbg !16695

9:                                                ; preds = %6
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.342, i32 0, i32 0), i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 99) #25, !dbg !16696
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.344, i32 0, i32 0)) #25, !dbg !16696
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.343, i32 0, i32 0), i32 noundef 99) #25, !dbg !16696
  unreachable, !dbg !16696

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 1, !dbg !16698
  store void (%struct._timeout*)* %1, void (%struct._timeout*)** %11, align 8, !dbg !16699
  call void @llvm.dbg.value(metadata i32 0, metadata !16672, metadata !DIExpression()), !dbg !16700
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !16708
  %12 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16710, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !16717
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !16708
  %13 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16718
  br i1 %13, label %15, label %14, !dbg !16721

14:                                               ; preds = %10
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !16722
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16722
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !16722
  unreachable, !dbg !16722

15:                                               ; preds = %10
  %16 = extractvalue { i32, i32 } %12, 0, !dbg !16710
  call void @llvm.dbg.value(metadata i32 %16, metadata !16713, metadata !DIExpression()) #23, !dbg !16717
  call void @llvm.dbg.value(metadata i32 %16, metadata !16707, metadata !DIExpression()) #23, !dbg !16708
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16724
  call void @llvm.dbg.value(metadata i32 %16, metadata !16678, metadata !DIExpression()), !dbg !16700
  call void @llvm.dbg.value(metadata i32 undef, metadata !16672, metadata !DIExpression()), !dbg !16700
  %17 = icmp slt i64 %4, -1, !dbg !16725
  br i1 %17, label %18, label %24, !dbg !16726

18:                                               ; preds = %15
  %19 = load i64, i64* @curr_tick, align 8, !dbg !16727
  %20 = add i64 %4, %19, !dbg !16728
  %21 = sub i64 -2, %20, !dbg !16728
  call void @llvm.dbg.value(metadata i64 %21, metadata !16682, metadata !DIExpression()), !dbg !16729
  %22 = icmp sgt i64 %21, 1, !dbg !16730
  %23 = select i1 %22, i64 %21, i64 1, !dbg !16730
  br label %29, !dbg !16731

24:                                               ; preds = %15
  %25 = add nuw nsw i64 %4, 1, !dbg !16732
  %26 = tail call fastcc i32 @elapsed.348() #24, !dbg !16734
  %27 = sext i32 %26 to i64, !dbg !16734
  %28 = add nsw i64 %25, %27, !dbg !16735
  br label %29

29:                                               ; preds = %24, %18
  %30 = phi i64 [ %23, %18 ], [ %28, %24 ], !dbg !16736
  %31 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16737
  store i64 %30, i64* %31, align 8, !dbg !16738
  %32 = tail call fastcc %struct._timeout* @first() #24, !dbg !16739
  call void @llvm.dbg.value(metadata %struct._timeout* %32, metadata !16679, metadata !DIExpression()), !dbg !16741
  %33 = icmp eq %struct._timeout* %32, null, !dbg !16742
  br i1 %33, label %48, label %34, !dbg !16742

34:                                               ; preds = %29, %44
  %35 = phi i64 [ %45, %44 ], [ %30, %29 ], !dbg !16743
  %36 = phi %struct._timeout* [ %46, %44 ], [ %32, %29 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %36, metadata !16679, metadata !DIExpression()), !dbg !16741
  %37 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16747
  %38 = load i64, i64* %37, align 8, !dbg !16747
  %39 = icmp slt i64 %35, %38, !dbg !16748
  br i1 %39, label %40, label %44, !dbg !16749

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 2, !dbg !16747
  %42 = sub nsw i64 %38, %35, !dbg !16750
  store i64 %42, i64* %41, align 8, !dbg !16750
  %43 = getelementptr inbounds %struct._timeout, %struct._timeout* %36, i32 0, i32 0, !dbg !16752
  tail call fastcc void @sys_dlist_insert.349(%struct._dnode* noundef nonnull %43, %struct._dnode* noundef nonnull %7) #24, !dbg !16753
  br label %49, !dbg !16754

44:                                               ; preds = %34
  %45 = sub nsw i64 %35, %38, !dbg !16755
  store i64 %45, i64* %31, align 8, !dbg !16755
  %46 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %36) #24, !dbg !16756
  call void @llvm.dbg.value(metadata %struct._timeout* %46, metadata !16679, metadata !DIExpression()), !dbg !16741
  %47 = icmp eq %struct._timeout* %46, null, !dbg !16742
  br i1 %47, label %48, label %34, !dbg !16742, !llvm.loop !16757

48:                                               ; preds = %44, %29
  tail call fastcc void @sys_dlist_append.350(%struct._dnode* noundef nonnull %7) #24, !dbg !16759
  br label %49, !dbg !16762

49:                                               ; preds = %40, %48
  %50 = tail call fastcc %struct._timeout* @first() #24, !dbg !16763
  %51 = icmp eq %struct._timeout* %50, %0, !dbg !16764
  br i1 %51, label %52, label %59, !dbg !16765

52:                                               ; preds = %49
  %53 = tail call fastcc i32 @next_timeout() #24, !dbg !16766
  call void @llvm.dbg.value(metadata i32 %53, metadata !16685, metadata !DIExpression()), !dbg !16767
  %54 = icmp ne i32 %53, 0, !dbg !16768
  %55 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4
  %56 = icmp eq i32 %55, %53
  %57 = select i1 %54, i1 %56, i1 false, !dbg !16770
  br i1 %57, label %59, label %58, !dbg !16770

58:                                               ; preds = %52
  tail call void @sys_clock_set_timeout(i32 noundef %53, i1 noundef zeroext false) #25, !dbg !16771
  br label %59, !dbg !16773

59:                                               ; preds = %58, %52, %49
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !16780
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !16780
  %60 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16782
  br i1 %60, label %62, label %61, !dbg !16785

61:                                               ; preds = %59
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !16786
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16786
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !16786
  unreachable, !dbg !16786

62:                                               ; preds = %59
  call void @llvm.dbg.value(metadata i32 %16, metadata !16774, metadata !DIExpression()) #23, !dbg !16780
  call void @llvm.dbg.value(metadata i32 %16, metadata !16788, metadata !DIExpression()) #23, !dbg !16791
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %16) #23, !dbg !16793, !srcloc !16794
  call void @llvm.dbg.value(metadata i32 undef, metadata !16672, metadata !DIExpression()), !dbg !16700
  br label %63

63:                                               ; preds = %3, %62
  ret void, !dbg !16795
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dnode_is_linked.340(%struct._dnode* nocapture noundef readonly %0) unnamed_addr #8 !dbg !16796 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16802, metadata !DIExpression()), !dbg !16803
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16804
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16804
  %4 = icmp ne %struct._dnode* %3, null, !dbg !16805
  ret i1 %4, !dbg !16806
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @elapsed.348() unnamed_addr #1 !dbg !16807 {
  %1 = load i32, i32* @announce_remaining, align 4, !dbg !16810
  %2 = icmp eq i32 %1, 0, !dbg !16811
  br i1 %2, label %3, label %5, !dbg !16810

3:                                                ; preds = %0
  %4 = tail call i32 @sys_clock_elapsed() #25, !dbg !16812
  br label %5, !dbg !16810

5:                                                ; preds = %0, %3
  %6 = phi i32 [ %4, %3 ], [ 0, %0 ], !dbg !16810
  ret i32 %6, !dbg !16813
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @first() unnamed_addr #8 !dbg !16814 {
  %1 = tail call fastcc %struct._dnode* @sys_dlist_peek_head.355() #24, !dbg !16820
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16818, metadata !DIExpression()), !dbg !16821
  %2 = bitcast %struct._dnode* %1 to %struct._timeout*, !dbg !16822
  ret %struct._timeout* %2, !dbg !16823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_insert.349(%struct._dnode* noundef %0, %struct._dnode* noundef %1) unnamed_addr #9 !dbg !16824 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16828, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.value(metadata %struct._dnode* %1, metadata !16829, metadata !DIExpression()), !dbg !16832
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16833
  %4 = load %struct._dnode*, %struct._dnode** %3, align 4, !dbg !16833
  call void @llvm.dbg.value(metadata %struct._dnode* %4, metadata !16830, metadata !DIExpression()), !dbg !16832
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 1, i32 0, !dbg !16834
  store %struct._dnode* %4, %struct._dnode** %5, align 4, !dbg !16835
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %1, i32 0, i32 0, i32 0, !dbg !16836
  store %struct._dnode* %0, %struct._dnode** %6, align 4, !dbg !16837
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %4, i32 0, i32 0, i32 0, !dbg !16838
  store %struct._dnode* %1, %struct._dnode** %7, align 4, !dbg !16839
  store %struct._dnode* %1, %struct._dnode** %3, align 4, !dbg !16840
  ret void, !dbg !16841
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._timeout* @next(%struct._timeout* noundef readonly %0) unnamed_addr #8 !dbg !16842 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16846, metadata !DIExpression()), !dbg !16848
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16849
  %3 = tail call fastcc %struct._dnode* @sys_dlist_peek_next.353(%struct._dnode* noundef %2) #24, !dbg !16850
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16847, metadata !DIExpression()), !dbg !16848
  %4 = bitcast %struct._dnode* %3 to %struct._timeout*, !dbg !16851
  ret %struct._timeout* %4, !dbg !16852
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_append.350(%struct._dnode* noundef %0) unnamed_addr #9 !dbg !16853 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16858, metadata !DIExpression()), !dbg !16861
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16859, metadata !DIExpression()), !dbg !16861
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16862
  call void @llvm.dbg.value(metadata %struct._dnode* %2, metadata !16860, metadata !DIExpression()), !dbg !16861
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16863
  store %struct._dnode* @timeout_list, %struct._dnode** %3, align 4, !dbg !16864
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16865
  store %struct._dnode* %2, %struct._dnode** %4, align 4, !dbg !16866
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %2, i32 0, i32 0, i32 0, !dbg !16867
  store %struct._dnode* %0, %struct._dnode** %5, align 4, !dbg !16868
  store %struct._dnode* %0, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16869
  ret void, !dbg !16870
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @next_timeout() unnamed_addr #1 !dbg !16871 {
  %1 = tail call fastcc %struct._timeout* @first() #24, !dbg !16876
  call void @llvm.dbg.value(metadata %struct._timeout* %1, metadata !16873, metadata !DIExpression()), !dbg !16877
  %2 = tail call fastcc i32 @elapsed.348() #24, !dbg !16878
  call void @llvm.dbg.value(metadata i32 %2, metadata !16874, metadata !DIExpression()), !dbg !16877
  %3 = icmp eq %struct._timeout* %1, null, !dbg !16879
  br i1 %3, label %14, label %4, !dbg !16881

4:                                                ; preds = %0
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %1, i32 0, i32 2, !dbg !16882
  %6 = load i64, i64* %5, align 8, !dbg !16882
  %7 = sext i32 %2 to i64, !dbg !16883
  %8 = sub nsw i64 %6, %7, !dbg !16884
  %9 = icmp sgt i64 %8, 2147483647, !dbg !16885
  br i1 %9, label %14, label %10, !dbg !16886

10:                                               ; preds = %4
  %11 = icmp sgt i64 %8, 0, !dbg !16887
  %12 = select i1 %11, i64 %8, i64 0, !dbg !16887
  %13 = trunc i64 %12 to i32, !dbg !16887
  call void @llvm.dbg.value(metadata i32 %13, metadata !16875, metadata !DIExpression()), !dbg !16877
  br label %14

14:                                               ; preds = %0, %4, %10
  %15 = phi i32 [ %13, %10 ], [ 2147483647, %4 ], [ 2147483647, %0 ], !dbg !16889
  call void @llvm.dbg.value(metadata i32 %15, metadata !16875, metadata !DIExpression()), !dbg !16877
  %16 = load i32, i32* getelementptr inbounds (%struct.z_kernel, %struct.z_kernel* @_kernel, i32 0, i32 0, i32 0, i32 4), align 4, !dbg !16890
  %17 = icmp ne i32 %16, 0, !dbg !16892
  %18 = icmp slt i32 %16, %15
  %19 = select i1 %17, i1 %18, i1 false, !dbg !16893
  %20 = select i1 %19, i32 %16, i32 %15, !dbg !16893
  call void @llvm.dbg.value(metadata i32 %20, metadata !16875, metadata !DIExpression()), !dbg !16877
  ret i32 %20, !dbg !16894
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next.353(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16895 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16899, metadata !DIExpression()), !dbg !16901
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16900, metadata !DIExpression()), !dbg !16901
  %2 = icmp eq %struct._dnode* %0, null, !dbg !16902
  br i1 %2, label %5, label %3, !dbg !16903

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._dnode* @sys_dlist_peek_next_no_check.354(%struct._dnode* noundef nonnull %0) #24, !dbg !16904
  br label %5, !dbg !16903

5:                                                ; preds = %1, %3
  %6 = phi %struct._dnode* [ %4, %3 ], [ null, %1 ], !dbg !16903
  ret %struct._dnode* %6, !dbg !16905
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_next_no_check.354(%struct._dnode* noundef readonly %0) unnamed_addr #8 !dbg !16906 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16908, metadata !DIExpression()), !dbg !16910
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16909, metadata !DIExpression()), !dbg !16910
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 1, i32 0), align 4, !dbg !16911
  %3 = icmp eq %struct._dnode* %2, %0, !dbg !16912
  br i1 %3, label %7, label %4, !dbg !16913

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16914
  %6 = load %struct._dnode*, %struct._dnode** %5, align 4, !dbg !16914
  br label %7, !dbg !16913

7:                                                ; preds = %1, %4
  %8 = phi %struct._dnode* [ %6, %4 ], [ null, %1 ], !dbg !16913
  ret %struct._dnode* %8, !dbg !16915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc %struct._dnode* @sys_dlist_peek_head.355() unnamed_addr #8 !dbg !16916 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16920, metadata !DIExpression()), !dbg !16921
  %1 = tail call fastcc zeroext i1 @sys_dlist_is_empty.356() #24, !dbg !16922
  %2 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4
  %3 = select i1 %1, %struct._dnode* null, %struct._dnode* %2, !dbg !16922
  ret %struct._dnode* %3, !dbg !16923
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @sys_dlist_is_empty.356() unnamed_addr #8 !dbg !16924 {
  call void @llvm.dbg.value(metadata %struct._dnode* @timeout_list, metadata !16928, metadata !DIExpression()), !dbg !16929
  %1 = load %struct._dnode*, %struct._dnode** getelementptr inbounds (%struct._dnode, %struct._dnode* @timeout_list, i32 0, i32 0, i32 0), align 4, !dbg !16930
  %2 = icmp eq %struct._dnode* %1, @timeout_list, !dbg !16931
  ret i1 %2, !dbg !16932
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_abort_timeout(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !16933 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16937, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata i32 -22, metadata !16938, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata i32 0, metadata !16939, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !16944
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !16946, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !16944
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16949
  br i1 %3, label %5, label %4, !dbg !16950

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !16951
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16951
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !16951
  unreachable, !dbg !16951

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !16948
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !16944
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16952
  call void @llvm.dbg.value(metadata i32 undef, metadata !16941, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata i32 -22, metadata !16938, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16939, metadata !DIExpression()), !dbg !16943
  %6 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0
  call void @llvm.dbg.value(metadata i32 -22, metadata !16938, metadata !DIExpression()), !dbg !16942
  %7 = tail call fastcc zeroext i1 @sys_dnode_is_linked.340(%struct._dnode* noundef %6) #24, !dbg !16953
  br i1 %7, label %8, label %9, !dbg !16957

8:                                                ; preds = %5
  tail call fastcc void @remove_timeout(%struct._timeout* noundef %0) #24, !dbg !16958
  call void @llvm.dbg.value(metadata i32 0, metadata !16938, metadata !DIExpression()), !dbg !16942
  br label %9, !dbg !16960

9:                                                ; preds = %5, %8
  %10 = phi i32 [ 0, %8 ], [ -22, %5 ], !dbg !16942
  call void @llvm.dbg.value(metadata i32 %10, metadata !16938, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !16961
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !16961
  %11 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16963
  br i1 %11, label %13, label %12, !dbg !16964

12:                                               ; preds = %9
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !16965
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !16965
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !16965
  unreachable, !dbg !16965

13:                                               ; preds = %9
  %14 = extractvalue { i32, i32 } %2, 0, !dbg !16946
  call void @llvm.dbg.value(metadata i32 %14, metadata !16713, metadata !DIExpression()) #23, !dbg !16948
  call void @llvm.dbg.value(metadata i32 %14, metadata !16707, metadata !DIExpression()) #23, !dbg !16944
  call void @llvm.dbg.value(metadata i32 %14, metadata !16941, metadata !DIExpression()), !dbg !16943
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !16961
  call void @llvm.dbg.value(metadata i32 undef, metadata !16788, metadata !DIExpression()) #23, !dbg !16966
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %14) #23, !dbg !16968, !srcloc !16794
  call void @llvm.dbg.value(metadata i32 %10, metadata !16938, metadata !DIExpression()), !dbg !16942
  call void @llvm.dbg.value(metadata i32 undef, metadata !16939, metadata !DIExpression()), !dbg !16943
  ret i32 %10, !dbg !16969
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @remove_timeout(%struct._timeout* noundef %0) unnamed_addr #9 !dbg !16970 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !16972, metadata !DIExpression()), !dbg !16973
  %2 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef %0) #24, !dbg !16974
  %3 = icmp eq %struct._timeout* %2, null, !dbg !16976
  br i1 %3, label %10, label %4, !dbg !16977

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 2, !dbg !16978
  %6 = load i64, i64* %5, align 8, !dbg !16978
  %7 = getelementptr inbounds %struct._timeout, %struct._timeout* %2, i32 0, i32 2, !dbg !16980
  %8 = load i64, i64* %7, align 8, !dbg !16981
  %9 = add nsw i64 %8, %6, !dbg !16981
  store i64 %9, i64* %7, align 8, !dbg !16981
  br label %10, !dbg !16982

10:                                               ; preds = %4, %1
  %11 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !16983
  tail call fastcc void @sys_dlist_remove.359(%struct._dnode* noundef %11) #24, !dbg !16984
  ret void, !dbg !16985
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define internal fastcc void @sys_dlist_remove.359(%struct._dnode* nocapture noundef %0) unnamed_addr #9 !dbg !16986 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !16990, metadata !DIExpression()), !dbg !16993
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !16994
  %3 = load %struct._dnode*, %struct._dnode** %2, align 4, !dbg !16994
  call void @llvm.dbg.value(metadata %struct._dnode* %3, metadata !16991, metadata !DIExpression()), !dbg !16993
  %4 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !16995
  %5 = load %struct._dnode*, %struct._dnode** %4, align 4, !dbg !16995
  call void @llvm.dbg.value(metadata %struct._dnode* %5, metadata !16992, metadata !DIExpression()), !dbg !16993
  %6 = getelementptr inbounds %struct._dnode, %struct._dnode* %3, i32 0, i32 0, i32 0, !dbg !16996
  store %struct._dnode* %5, %struct._dnode** %6, align 4, !dbg !16997
  %7 = getelementptr inbounds %struct._dnode, %struct._dnode* %5, i32 0, i32 1, i32 0, !dbg !16998
  store %struct._dnode* %3, %struct._dnode** %7, align 4, !dbg !16999
  tail call fastcc void @sys_dnode_init.360(%struct._dnode* noundef %0) #24, !dbg !17000
  ret void, !dbg !17001
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define internal fastcc void @sys_dnode_init.360(%struct._dnode* nocapture noundef writeonly %0) unnamed_addr #7 !dbg !17002 {
  call void @llvm.dbg.value(metadata %struct._dnode* %0, metadata !17004, metadata !DIExpression()), !dbg !17005
  %2 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 0, i32 0, !dbg !17006
  store %struct._dnode* null, %struct._dnode** %2, align 4, !dbg !17007
  %3 = getelementptr inbounds %struct._dnode, %struct._dnode* %0, i32 0, i32 1, i32 0, !dbg !17008
  store %struct._dnode* null, %struct._dnode** %3, align 4, !dbg !17009
  ret void, !dbg !17010
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_remaining(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17011 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17017, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i64 0, metadata !17018, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i32 0, metadata !17019, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !17024
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17026, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17024
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17029
  br i1 %3, label %5, label %4, !dbg !17030

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17031
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17031
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17031
  unreachable, !dbg !17031

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17024
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17032
  call void @llvm.dbg.value(metadata i32 undef, metadata !17021, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata i64 0, metadata !17018, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !17019, metadata !DIExpression()), !dbg !17023
  %6 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17033
  call void @llvm.dbg.value(metadata i64 %6, metadata !17018, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17036
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !17036
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17038
  br i1 %7, label %9, label %8, !dbg !17039

8:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17040
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17040
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17040
  unreachable, !dbg !17040

9:                                                ; preds = %5
  %10 = extractvalue { i32, i32 } %2, 0, !dbg !17026
  call void @llvm.dbg.value(metadata i32 %10, metadata !16713, metadata !DIExpression()) #23, !dbg !17028
  call void @llvm.dbg.value(metadata i32 %10, metadata !16707, metadata !DIExpression()) #23, !dbg !17024
  call void @llvm.dbg.value(metadata i32 %10, metadata !17021, metadata !DIExpression()), !dbg !17023
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17036
  call void @llvm.dbg.value(metadata i32 undef, metadata !16788, metadata !DIExpression()) #23, !dbg !17041
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17043, !srcloc !16794
  call void @llvm.dbg.value(metadata i64 %6, metadata !17018, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.value(metadata i32 undef, metadata !17019, metadata !DIExpression()), !dbg !17023
  ret i64 %6, !dbg !17044
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i64 @timeout_rem(%struct._timeout* noundef readonly %0) unnamed_addr #1 !dbg !17045 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17047, metadata !DIExpression()), !dbg !17051
  call void @llvm.dbg.value(metadata i64 0, metadata !17048, metadata !DIExpression()), !dbg !17051
  %2 = tail call fastcc zeroext i1 @z_is_inactive_timeout.361(%struct._timeout* noundef %0) #24, !dbg !17052
  br i1 %2, label %21, label %3, !dbg !17054

3:                                                ; preds = %1
  %4 = tail call fastcc %struct._timeout* @first() #24, !dbg !17055
  call void @llvm.dbg.value(metadata %struct._timeout* %4, metadata !17049, metadata !DIExpression()), !dbg !17056
  call void @llvm.dbg.value(metadata i64 0, metadata !17048, metadata !DIExpression()), !dbg !17051
  %5 = icmp eq %struct._timeout* %4, null, !dbg !17057
  br i1 %5, label %16, label %6, !dbg !17059

6:                                                ; preds = %3, %13
  %7 = phi %struct._timeout* [ %14, %13 ], [ %4, %3 ]
  %8 = phi i64 [ %11, %13 ], [ 0, %3 ]
  call void @llvm.dbg.value(metadata %struct._timeout* %7, metadata !17049, metadata !DIExpression()), !dbg !17056
  call void @llvm.dbg.value(metadata i64 %8, metadata !17048, metadata !DIExpression()), !dbg !17051
  %9 = getelementptr inbounds %struct._timeout, %struct._timeout* %7, i32 0, i32 2, !dbg !17060
  %10 = load i64, i64* %9, align 8, !dbg !17060
  %11 = add nsw i64 %10, %8, !dbg !17062
  call void @llvm.dbg.value(metadata i64 %11, metadata !17048, metadata !DIExpression()), !dbg !17051
  %12 = icmp eq %struct._timeout* %7, %0, !dbg !17063
  br i1 %12, label %16, label %13, !dbg !17065

13:                                               ; preds = %6
  %14 = tail call fastcc %struct._timeout* @next(%struct._timeout* noundef nonnull %7) #24, !dbg !17066
  call void @llvm.dbg.value(metadata %struct._timeout* %14, metadata !17049, metadata !DIExpression()), !dbg !17056
  call void @llvm.dbg.value(metadata i64 %11, metadata !17048, metadata !DIExpression()), !dbg !17051
  %15 = icmp eq %struct._timeout* %14, null, !dbg !17057
  br i1 %15, label %16, label %6, !dbg !17059, !llvm.loop !17067

16:                                               ; preds = %13, %6, %3
  %17 = phi i64 [ 0, %3 ], [ %11, %6 ], [ %11, %13 ], !dbg !17051
  call void @llvm.dbg.value(metadata i64 %17, metadata !17048, metadata !DIExpression()), !dbg !17051
  %18 = tail call fastcc i32 @elapsed.348() #24, !dbg !17069
  %19 = sext i32 %18 to i64, !dbg !17069
  %20 = sub nsw i64 %17, %19, !dbg !17070
  br label %21, !dbg !17071

21:                                               ; preds = %1, %16
  %22 = phi i64 [ %20, %16 ], [ 0, %1 ], !dbg !17051
  ret i64 %22, !dbg !17072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @z_is_inactive_timeout.361(%struct._timeout* nocapture noundef readonly %0) unnamed_addr #8 !dbg !17073 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17077, metadata !DIExpression()), !dbg !17078
  %2 = getelementptr inbounds %struct._timeout, %struct._timeout* %0, i32 0, i32 0, !dbg !17079
  %3 = tail call fastcc zeroext i1 @sys_dnode_is_linked.340(%struct._dnode* noundef %2) #24, !dbg !17080
  %4 = xor i1 %3, true, !dbg !17081
  ret i1 %4, !dbg !17082
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_timeout_expires(%struct._timeout* noundef %0) local_unnamed_addr #1 !dbg !17083 {
  call void @llvm.dbg.value(metadata %struct._timeout* %0, metadata !17085, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i64 0, metadata !17086, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i32 0, metadata !17087, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !17092
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17094, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17096
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17096
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17092
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17097
  br i1 %3, label %5, label %4, !dbg !17098

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17099
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17099
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17099
  unreachable, !dbg !17099

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17096
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17092
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17100
  call void @llvm.dbg.value(metadata i32 undef, metadata !17089, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata i64 0, metadata !17086, metadata !DIExpression()), !dbg !17090
  call void @llvm.dbg.value(metadata i32 undef, metadata !17087, metadata !DIExpression()), !dbg !17091
  %6 = load i64, i64* @curr_tick, align 8, !dbg !17101
  %7 = tail call fastcc i64 @timeout_rem(%struct._timeout* noundef %0) #24, !dbg !17104
  call void @llvm.dbg.value(metadata !DIArgList(i64 %6, i64 %7), metadata !17086, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17090
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17105
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !17105
  %8 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17107
  br i1 %8, label %10, label %9, !dbg !17108

9:                                                ; preds = %5
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17109
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17109
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17109
  unreachable, !dbg !17109

10:                                               ; preds = %5
  %11 = extractvalue { i32, i32 } %2, 0, !dbg !17094
  call void @llvm.dbg.value(metadata i32 %11, metadata !16713, metadata !DIExpression()) #23, !dbg !17096
  call void @llvm.dbg.value(metadata i32 %11, metadata !16707, metadata !DIExpression()) #23, !dbg !17092
  call void @llvm.dbg.value(metadata i32 %11, metadata !17089, metadata !DIExpression()), !dbg !17091
  call void @llvm.dbg.value(metadata !DIArgList(i64 %7, i64 %6), metadata !17086, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17090
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17105
  call void @llvm.dbg.value(metadata i32 undef, metadata !16788, metadata !DIExpression()) #23, !dbg !17110
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %11) #23, !dbg !17112, !srcloc !16794
  call void @llvm.dbg.value(metadata i32 undef, metadata !17087, metadata !DIExpression()), !dbg !17091
  %12 = add i64 %7, %6, !dbg !17113
  ret i64 %12, !dbg !17114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @z_get_next_timeout_expiry() local_unnamed_addr #1 !dbg !17115 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !17117, metadata !DIExpression()), !dbg !17121
  call void @llvm.dbg.value(metadata i32 0, metadata !17118, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !17123
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17125, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17127
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17127
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17123
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17128
  br i1 %2, label %4, label %3, !dbg !17129

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17130
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17130
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17130
  unreachable, !dbg !17130

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17127
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17123
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17131
  call void @llvm.dbg.value(metadata i32 undef, metadata !17120, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 -1, metadata !17117, metadata !DIExpression()), !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !17118, metadata !DIExpression()), !dbg !17122
  %5 = tail call fastcc i32 @next_timeout() #24, !dbg !17132
  call void @llvm.dbg.value(metadata i32 %5, metadata !17117, metadata !DIExpression()), !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17135
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !17135
  %6 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17137
  br i1 %6, label %8, label %7, !dbg !17138

7:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17139
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17139
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17139
  unreachable, !dbg !17139

8:                                                ; preds = %4
  %9 = extractvalue { i32, i32 } %1, 0, !dbg !17125
  call void @llvm.dbg.value(metadata i32 %9, metadata !16713, metadata !DIExpression()) #23, !dbg !17127
  call void @llvm.dbg.value(metadata i32 %9, metadata !16707, metadata !DIExpression()) #23, !dbg !17123
  call void @llvm.dbg.value(metadata i32 %9, metadata !17120, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17135
  call void @llvm.dbg.value(metadata i32 undef, metadata !16788, metadata !DIExpression()) #23, !dbg !17140
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %9) #23, !dbg !17142, !srcloc !16794
  call void @llvm.dbg.value(metadata i32 %5, metadata !17117, metadata !DIExpression()), !dbg !17121
  call void @llvm.dbg.value(metadata i32 undef, metadata !17118, metadata !DIExpression()), !dbg !17122
  ret i32 %5, !dbg !17143
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_set_timeout_expiry(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #1 !dbg !17144 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17146, metadata !DIExpression()), !dbg !17156
  call void @llvm.dbg.value(metadata i1 %1, metadata !17147, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17156
  call void @llvm.dbg.value(metadata i32 0, metadata !17148, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !17158
  %3 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17160, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17162
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17162
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17158
  %4 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17163
  br i1 %4, label %6, label %5, !dbg !17164

5:                                                ; preds = %2
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17165
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17165
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17165
  unreachable, !dbg !17165

6:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17162
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17158
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17166
  call void @llvm.dbg.value(metadata i32 undef, metadata !17150, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17157
  %7 = tail call fastcc i32 @next_timeout() #24, !dbg !17167
  call void @llvm.dbg.value(metadata i32 %7, metadata !17151, metadata !DIExpression()), !dbg !17168
  call void @llvm.dbg.value(metadata i1 undef, metadata !17154, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17168
  %8 = icmp slt i32 %7, 2, !dbg !17169
  call void @llvm.dbg.value(metadata i1 %8, metadata !17155, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17168
  %9 = icmp slt i32 %7, %0
  %10 = or i1 %8, %9, !dbg !17170
  call void @llvm.dbg.value(metadata i1 %9, metadata !17154, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !17168
  br i1 %10, label %14, label %11, !dbg !17170

11:                                               ; preds = %6
  %12 = icmp sgt i32 %7, %0, !dbg !17172
  %13 = select i1 %12, i32 %0, i32 %7, !dbg !17172
  tail call void @sys_clock_set_timeout(i32 noundef %13, i1 noundef zeroext %1) #25, !dbg !17174
  br label %14, !dbg !17175

14:                                               ; preds = %11, %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17176
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !17176
  %15 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17178
  br i1 %15, label %17, label %16, !dbg !17179

16:                                               ; preds = %14
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17180
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17180
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17180
  unreachable, !dbg !17180

17:                                               ; preds = %14
  %18 = extractvalue { i32, i32 } %3, 0, !dbg !17160
  call void @llvm.dbg.value(metadata i32 %18, metadata !16713, metadata !DIExpression()) #23, !dbg !17162
  call void @llvm.dbg.value(metadata i32 %18, metadata !16707, metadata !DIExpression()) #23, !dbg !17158
  call void @llvm.dbg.value(metadata i32 %18, metadata !17150, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17176
  call void @llvm.dbg.value(metadata i32 undef, metadata !16788, metadata !DIExpression()) #23, !dbg !17181
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %18) #23, !dbg !17183, !srcloc !16794
  call void @llvm.dbg.value(metadata i32 1, metadata !17148, metadata !DIExpression()), !dbg !17157
  call void @llvm.dbg.value(metadata i32 undef, metadata !17148, metadata !DIExpression()), !dbg !17157
  ret void, !dbg !17184
}

; Function Attrs: noinline nounwind optsize
define dso_local void @sys_clock_announce(i32 noundef %0) local_unnamed_addr #1 !dbg !17185 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17189, metadata !DIExpression()), !dbg !17194
  tail call void @z_time_slice(i32 noundef %0) #25, !dbg !17195
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !17196
  %2 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17198, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17196
  %3 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17201
  br i1 %3, label %5, label %4, !dbg !17202

4:                                                ; preds = %1
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17203
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17203
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17203
  unreachable, !dbg !17203

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17200
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17196
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17204
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  store i32 %0, i32* @announce_remaining, align 4, !dbg !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %6 = tail call fastcc %struct._timeout* @first() #24, !dbg !17205
  %7 = icmp eq %struct._timeout* %6, null, !dbg !17206
  br i1 %7, label %37, label %8, !dbg !17207

8:                                                ; preds = %5, %30
  %9 = phi %struct._timeout* [ %33, %30 ], [ %6, %5 ]
  %10 = phi { i32, i32 } [ %27, %30 ], [ %2, %5 ]
  %11 = phi i32 [ %32, %30 ], [ %0, %5 ]
  %12 = extractvalue { i32, i32 } %10, 0, !dbg !17194
  %13 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 2, !dbg !17208
  %14 = load i64, i64* %13, align 8, !dbg !17208
  %15 = sext i32 %11 to i64, !dbg !17209
  %16 = icmp sgt i64 %14, %15, !dbg !17210
  br i1 %16, label %35, label %17, !dbg !17211

17:                                               ; preds = %8
  call void @llvm.dbg.value(metadata %struct._timeout* %9, metadata !17191, metadata !DIExpression()), !dbg !17212
  %18 = trunc i64 %14 to i32, !dbg !17213
  call void @llvm.dbg.value(metadata i32 %18, metadata !17193, metadata !DIExpression()), !dbg !17212
  %19 = sext i32 %18 to i64, !dbg !17214
  %20 = load i64, i64* @curr_tick, align 8, !dbg !17215
  %21 = add i64 %20, %19, !dbg !17215
  store i64 %21, i64* @curr_tick, align 8, !dbg !17215
  store i64 0, i64* %13, align 8, !dbg !17216
  tail call fastcc void @remove_timeout(%struct._timeout* noundef nonnull %9) #24, !dbg !17217
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17218
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !17218
  %22 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17220
  br i1 %22, label %24, label %23, !dbg !17221

23:                                               ; preds = %17
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17222
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17222
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17222
  unreachable, !dbg !17222

24:                                               ; preds = %17
  call void @llvm.dbg.value(metadata i32 %12, metadata !16774, metadata !DIExpression()) #23, !dbg !17218
  call void @llvm.dbg.value(metadata i32 %12, metadata !16788, metadata !DIExpression()) #23, !dbg !17223
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %12) #23, !dbg !17225, !srcloc !16794
  %25 = getelementptr inbounds %struct._timeout, %struct._timeout* %9, i32 0, i32 1, !dbg !17226
  %26 = load void (%struct._timeout*)*, void (%struct._timeout*)** %25, align 8, !dbg !17226
  tail call void %26(%struct._timeout* noundef nonnull %9) #25, !dbg !17227
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !17228
  %27 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17230, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17228
  %28 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17233
  br i1 %28, label %30, label %29, !dbg !17234

29:                                               ; preds = %24
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17235
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17235
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17235
  unreachable, !dbg !17235

30:                                               ; preds = %24
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17232
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17228
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17236
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %31 = load i32, i32* @announce_remaining, align 4, !dbg !17237
  %32 = sub nsw i32 %31, %18, !dbg !17237
  store i32 %32, i32* @announce_remaining, align 4, !dbg !17194
  call void @llvm.dbg.value(metadata i32 undef, metadata !17190, metadata !DIExpression()), !dbg !17194
  %33 = tail call fastcc %struct._timeout* @first() #24, !dbg !17205
  %34 = icmp eq %struct._timeout* %33, null, !dbg !17206
  br i1 %34, label %37, label %8, !dbg !17207, !llvm.loop !17238

35:                                               ; preds = %8
  %36 = sub nsw i64 %14, %15, !dbg !17240
  store i64 %36, i64* %13, align 8, !dbg !17240
  br label %41, !dbg !17243

37:                                               ; preds = %30, %5
  %38 = phi { i32, i32 } [ %2, %5 ], [ %27, %30 ]
  %39 = phi i32 [ %0, %5 ], [ %32, %30 ], !dbg !17194
  %40 = sext i32 %39 to i64, !dbg !17244
  br label %41, !dbg !17244

41:                                               ; preds = %37, %35
  %42 = phi i64 [ %40, %37 ], [ %15, %35 ], !dbg !17244
  %43 = phi { i32, i32 } [ %38, %37 ], [ %10, %35 ]
  %44 = load i64, i64* @curr_tick, align 8, !dbg !17245
  %45 = add i64 %44, %42, !dbg !17245
  store i64 %45, i64* @curr_tick, align 8, !dbg !17245
  store i32 0, i32* @announce_remaining, align 4, !dbg !17246
  %46 = tail call fastcc i32 @next_timeout() #24, !dbg !17247
  tail call void @sys_clock_set_timeout(i32 noundef %46, i1 noundef zeroext false) #25, !dbg !17248
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17249
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !17249
  %47 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17251
  br i1 %47, label %49, label %48, !dbg !17252

48:                                               ; preds = %41
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17253
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17253
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17253
  unreachable, !dbg !17253

49:                                               ; preds = %41
  %50 = extractvalue { i32, i32 } %43, 0, !dbg !17194
  call void @llvm.dbg.value(metadata i32 %50, metadata !16774, metadata !DIExpression()) #23, !dbg !17249
  call void @llvm.dbg.value(metadata i32 %50, metadata !16788, metadata !DIExpression()) #23, !dbg !17254
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %50) #23, !dbg !17256, !srcloc !16794
  ret void, !dbg !17257
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_tick_get() local_unnamed_addr #1 !dbg !17258 {
  call void @llvm.dbg.value(metadata i64 0, metadata !17262, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 0, metadata !17263, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16701, metadata !DIExpression()) #23, !dbg !17268
  %1 = tail call { i32, i32 } asm sideeffect "mov $1, $2;mrs $0, BASEPRI;msr BASEPRI_MAX, $1;isb;", "=r,=r,i,~{memory}"(i32 16) #23, !dbg !17270, !srcloc !16716
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !16714, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17268
  %2 = tail call zeroext i1 @z_spin_lock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17273
  br i1 %2, label %4, label %3, !dbg !17274

3:                                                ; preds = %0
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.345, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17275
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6.347, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17275
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 148) #25, !dbg !17275
  unreachable, !dbg !17275

4:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32 undef, metadata !16713, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 undef, metadata !16707, metadata !DIExpression()) #23, !dbg !17268
  tail call void @z_spin_lock_set_owner(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17276
  call void @llvm.dbg.value(metadata i32 undef, metadata !17265, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata i64 0, metadata !17262, metadata !DIExpression()), !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !17263, metadata !DIExpression()), !dbg !17267
  %5 = load i64, i64* @curr_tick, align 8, !dbg !17277
  %6 = tail call fastcc i32 @elapsed.348() #24, !dbg !17280
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17262, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17281
  call void @llvm.dbg.value(metadata %struct.k_spinlock* @timeout_lock, metadata !16779, metadata !DIExpression()) #23, !dbg !17281
  %7 = tail call zeroext i1 @z_spin_unlock_valid(%struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17283
  br i1 %7, label %9, label %8, !dbg !17284

8:                                                ; preds = %4
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.341, i32 0, i32 0), i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.351, i32 0, i32 0), i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17285
  tail call void (i8*, ...) @assert_print(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8.352, i32 0, i32 0), %struct.k_spinlock* noundef nonnull @timeout_lock) #25, !dbg !17285
  tail call void @assert_post_action(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.346, i32 0, i32 0), i32 noundef 194) #25, !dbg !17285
  unreachable, !dbg !17285

9:                                                ; preds = %4
  %10 = extractvalue { i32, i32 } %1, 0, !dbg !17270
  call void @llvm.dbg.value(metadata i32 %10, metadata !16713, metadata !DIExpression()) #23, !dbg !17272
  call void @llvm.dbg.value(metadata i32 %10, metadata !16707, metadata !DIExpression()) #23, !dbg !17268
  call void @llvm.dbg.value(metadata i32 %10, metadata !17265, metadata !DIExpression()), !dbg !17267
  call void @llvm.dbg.value(metadata !DIArgList(i64 %5, i32 %6), metadata !17262, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_plus, DW_OP_stack_value)), !dbg !17266
  call void @llvm.dbg.value(metadata !DIArgList(i32 %6, i64 %5), metadata !17262, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_convert, 32, DW_ATE_signed, DW_OP_LLVM_convert, 64, DW_ATE_signed, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !17266
  call void @llvm.dbg.value(metadata i32 undef, metadata !16774, metadata !DIExpression()) #23, !dbg !17281
  call void @llvm.dbg.value(metadata i32 undef, metadata !16788, metadata !DIExpression()) #23, !dbg !17286
  tail call void asm sideeffect "msr BASEPRI, $0;isb;", "r,~{memory}"(i32 %10) #23, !dbg !17288, !srcloc !16794
  call void @llvm.dbg.value(metadata i32 undef, metadata !17263, metadata !DIExpression()), !dbg !17267
  %11 = sext i32 %6 to i64, !dbg !17280
  %12 = add i64 %5, %11, !dbg !17289
  ret i64 %12, !dbg !17290
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @sys_clock_tick_get_32() local_unnamed_addr #1 !dbg !17291 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17292
  %2 = trunc i64 %1 to i32, !dbg !17293
  ret i32 %2, !dbg !17294
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @z_impl_k_uptime_ticks() local_unnamed_addr #1 !dbg !17295 {
  %1 = tail call i64 @sys_clock_tick_get() #24, !dbg !17296
  ret i64 %1, !dbg !17297
}

; Function Attrs: noinline nounwind optsize
define dso_local void @z_impl_k_busy_wait(i32 noundef %0) local_unnamed_addr #1 !dbg !17298 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !17300, metadata !DIExpression()), !dbg !17307
  %2 = icmp eq i32 %0, 0, !dbg !17308
  br i1 %2, label %10, label %3, !dbg !17310

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17311
  call void @llvm.dbg.value(metadata i32 %4, metadata !17301, metadata !DIExpression()), !dbg !17307
  %5 = mul i32 %0, 84, !dbg !17312
  call void @llvm.dbg.value(metadata i32 %5, metadata !17302, metadata !DIExpression()), !dbg !17307
  br label %6, !dbg !17313

6:                                                ; preds = %6, %3
  %7 = tail call fastcc i32 @k_cycle_get_32() #24, !dbg !17314
  call void @llvm.dbg.value(metadata i32 %7, metadata !17303, metadata !DIExpression()), !dbg !17315
  %8 = sub i32 %7, %4, !dbg !17316
  %9 = icmp ult i32 %8, %5, !dbg !17318
  br i1 %9, label %6, label %10

10:                                               ; preds = %6, %1
  ret void, !dbg !17319
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @k_cycle_get_32() unnamed_addr #1 !dbg !17320 {
  %1 = tail call fastcc i32 @arch_k_cycle_get_32() #24, !dbg !17321
  ret i32 %1, !dbg !17322
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @arch_k_cycle_get_32() unnamed_addr #1 !dbg !17323 {
  %1 = tail call i32 @sys_clock_cycle_get_32() #25, !dbg !17325
  ret i32 %1, !dbg !17326
}

; Function Attrs: noinline nounwind optsize
define dso_local i64 @sys_clock_timeout_end_calc([1 x i64] %0) local_unnamed_addr #1 !dbg !17327 {
  %2 = extractvalue [1 x i64] %0, 0
  call void @llvm.dbg.value(metadata i64 %2, metadata !17331, metadata !DIExpression()), !dbg !17333
  switch i64 %2, label %5 [
    i64 -1, label %14
    i64 0, label %3
  ], !dbg !17334

3:                                                ; preds = %1
  %4 = tail call i64 @sys_clock_tick_get() #24, !dbg !17335
  br label %14, !dbg !17339

5:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i64 %2, metadata !17332, metadata !DIExpression()), !dbg !17333
  %6 = icmp slt i64 %2, -1, !dbg !17340
  br i1 %6, label %7, label %9, !dbg !17343

7:                                                ; preds = %5
  %8 = sub nuw nsw i64 -2, %2, !dbg !17344
  br label %14, !dbg !17345

9:                                                ; preds = %5
  %10 = tail call i64 @sys_clock_tick_get() #24, !dbg !17347
  %11 = icmp ugt i64 %2, 1, !dbg !17348
  %12 = select i1 %11, i64 %2, i64 1, !dbg !17348
  %13 = add nsw i64 %10, %12, !dbg !17349
  br label %14, !dbg !17350

14:                                               ; preds = %1, %9, %7, %3
  %15 = phi i64 [ %4, %3 ], [ %8, %7 ], [ %13, %9 ], [ %2, %1 ], !dbg !17351
  ret i64 %15, !dbg !17352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @boot_banner() local_unnamed_addr #1 !dbg !17353 {
  tail call void (i8*, ...) @printk(i8* noundef getelementptr inbounds ([66 x i8], [66 x i8]* @.str.370, i32 0, i32 0)) #25, !dbg !17355
  ret void, !dbg !17356
}

attributes #0 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #1 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree nosync nounwind willreturn }
attributes #5 = { nofree nosync nounwind willreturn }
attributes #6 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly nofree nounwind willreturn writeonly }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #19 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #20 = { mustprogress nofree noinline nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { alwaysinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin optsize "no-builtins" }
attributes #25 = { nobuiltin nounwind optsize "no-builtins" }
attributes #26 = { nobuiltin nounwind optsize readnone willreturn "no-builtins" }
attributes #27 = { nobuiltin noreturn nounwind optsize "no-builtins" }
attributes #28 = { nounwind readnone }
attributes #29 = { nobuiltin noreturn optsize "no-builtins" }

!llvm.dbg.cu = !{!794, !2, !2507, !27, !271, !297, !2509, !2511, !2545, !2547, !307, !358, !2549, !2552, !2563, !2609, !2611, !2639, !2667, !2710, !2782, !2827, !387, !530, !2855, !566, !576, !601, !826, !2860, !962, !1028, !1336, !1560, !2898, !1673, !1763, !2900, !2985, !3049, !1814, !3052, !1821, !2194, !3070, !2214, !2325, !2443, !3072, !2468, !3075}
!llvm.ident = !{!3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077, !3077}
!llvm.module.flags = !{!3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "_irq_vector_table", scope: !2, file: !7, line: 10, type: !21, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !4, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple/zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!4 = !{!0, !5}
!5 = !DIGlobalVariableExpression(var: !6, expr: !DIExpression())
!6 = distinct !DIGlobalVariable(name: "_sw_isr_table", scope: !2, file: !7, line: 109, type: !8, isLocal: false, isDefinition: true)
!7 = !DIFile(filename: "zephyr/isr_tables.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 6208, elements: !19)
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_table_entry", file: !10, line: 36, size: 64, elements: !11)
!10 = !DIFile(filename: "zephyr/include/zephyr/sw_isr_table.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11 = !{!12, !15}
!12 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !9, file: !10, line: 37, baseType: !13, size: 32)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 32)
!14 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "isr", scope: !9, file: !10, line: 38, baseType: !16, size: 32, offset: 32)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 32)
!17 = !DISubroutineType(types: !18)
!18 = !{null, !13}
!19 = !{!20}
!20 = !DISubrange(count: 97)
!21 = !DICompositeType(tag: DW_TAG_array_type, baseType: !22, size: 3104, elements: !19)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !23, line: 105, baseType: !24)
!23 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!24 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "mutex", scope: !27, file: !116, line: 18, type: !262, isLocal: false, isDefinition: true, align: 32)
!27 = distinct !DICompileUnit(language: DW_LANG_C99, file: !28, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !101, globals: !113, splitDebugInlining: false, nameTableKind: None)
!28 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!29 = !{!30}
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !31, line: 27, baseType: !32, size: 32, elements: !33)
!31 = !DIFile(filename: "zephyr/include/zephyr/sys/kobject.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!32 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100}
!34 = !DIEnumerator(name: "K_OBJ_ANY", value: 0)
!35 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1)
!36 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2)
!37 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3)
!38 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4)
!39 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5)
!40 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6)
!41 = !DIEnumerator(name: "K_OBJ_SEM", value: 7)
!42 = !DIEnumerator(name: "K_OBJ_STACK", value: 8)
!43 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9)
!44 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10)
!45 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11)
!46 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12)
!47 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13)
!48 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14)
!49 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15)
!50 = !DIEnumerator(name: "K_OBJ_CONDVAR", value: 16)
!51 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17)
!52 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18)
!53 = !DIEnumerator(name: "K_OBJ_DRIVER_BBRAM", value: 19)
!54 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 20)
!55 = !DIEnumerator(name: "K_OBJ_DRIVER_COREDUMP", value: 21)
!56 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 22)
!57 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 23)
!58 = !DIEnumerator(name: "K_OBJ_DRIVER_DAI", value: 24)
!59 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 25)
!60 = !DIEnumerator(name: "K_OBJ_DRIVER_EDAC", value: 26)
!61 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 27)
!62 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 28)
!63 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 29)
!64 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI_SAF", value: 30)
!65 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 31)
!66 = !DIEnumerator(name: "K_OBJ_DRIVER_FPGA", value: 32)
!67 = !DIEnumerator(name: "K_OBJ_DRIVER_BATTERY", value: 33)
!68 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 34)
!69 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 35)
!70 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 36)
!71 = !DIEnumerator(name: "K_OBJ_DRIVER_I3C", value: 37)
!72 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 38)
!73 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 39)
!74 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 40)
!75 = !DIEnumerator(name: "K_OBJ_DRIVER_MBOX", value: 41)
!76 = !DIEnumerator(name: "K_OBJ_DRIVER_MDIO", value: 42)
!77 = !DIEnumerator(name: "K_OBJ_DRIVER_MIPI_DSI", value: 43)
!78 = !DIEnumerator(name: "K_OBJ_DRIVER_PECI", value: 44)
!79 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 45)
!80 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 46)
!81 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 47)
!82 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 48)
!83 = !DIEnumerator(name: "K_OBJ_DRIVER_REGULATOR", value: 49)
!84 = !DIEnumerator(name: "K_OBJ_DRIVER_RESET", value: 50)
!85 = !DIEnumerator(name: "K_OBJ_DRIVER_SDHC", value: 51)
!86 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 52)
!87 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 53)
!88 = !DIEnumerator(name: "K_OBJ_DRIVER_SYSCON", value: 54)
!89 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 55)
!90 = !DIEnumerator(name: "K_OBJ_DRIVER_W1", value: 56)
!91 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 57)
!92 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN_TRANSCEIVER", value: 58)
!93 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 59)
!94 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 60)
!95 = !DIEnumerator(name: "K_OBJ_DRIVER_ITS", value: 61)
!96 = !DIEnumerator(name: "K_OBJ_DRIVER_PCIE_CTRL", value: 62)
!97 = !DIEnumerator(name: "K_OBJ_DRIVER_TCPC", value: 63)
!98 = !DIEnumerator(name: "K_OBJ_DRIVER_IVSHMEM", value: 64)
!99 = !DIEnumerator(name: "K_OBJ_DRIVER_ETHPHY", value: 65)
!100 = !DIEnumerator(name: "K_OBJ_LAST", value: 66)
!101 = !{!102, !103, !107, !108, !109, !110, !111}
!102 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!103 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !104, line: 46, baseType: !105)
!104 = !DIFile(filename: "zephyr/include/zephyr/sys_clock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!105 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !23, line: 75, baseType: !106)
!106 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !23, line: 104, baseType: !102)
!109 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !23, line: 90, baseType: !32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !23, line: 91, baseType: !112)
!112 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!113 = !{!25, !114, !141, !152, !260}
!114 = !DIGlobalVariableExpression(var: !115, expr: !DIExpression())
!115 = distinct !DIGlobalVariable(name: "condvar", scope: !27, file: !116, line: 19, type: !117, isLocal: false, isDefinition: true, align: 32)
!116 = !DIFile(filename: "zephyr/samples/kernel/condition_variables/simple/src/main.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !119)
!118 = !DIFile(filename: "zephyr/include/zephyr/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!119 = !{!120}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !117, file: !118, line: 2829, baseType: !121, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !123)
!122 = !DIFile(filename: "zephyr/include/zephyr/kernel_structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !124)
!124 = !{!125}
!125 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !123, file: !122, line: 232, baseType: !126, size: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !128)
!127 = !DIFile(filename: "zephyr/include/zephyr/sys/dlist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !129)
!129 = !{!130, !136}
!130 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 38, baseType: !131, size: 32)
!131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 38, size: 32, elements: !132)
!132 = !{!133, !135}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !131, file: !127, line: 39, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !128, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !131, file: !127, line: 40, baseType: !134, size: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, scope: !128, file: !127, line: 42, baseType: !137, size: 32, offset: 32)
!137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !128, file: !127, line: 42, size: 32, elements: !138)
!138 = !{!139, !140}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !137, file: !127, line: 43, baseType: !134, size: 32)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !137, file: !127, line: 44, baseType: !134, size: 32)
!141 = !DIGlobalVariableExpression(var: !142, expr: !DIExpression())
!142 = distinct !DIGlobalVariable(name: "tstacks", scope: !27, file: !116, line: 14, type: !143, isLocal: false, isDefinition: true, align: 512)
!143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !144, size: 174080, elements: !149)
!144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !146)
!145 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread_stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!146 = !{!147}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !144, file: !145, line: 48, baseType: !148, size: 8)
!148 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!149 = !{!150, !151}
!150 = !DISubrange(count: 20)
!151 = !DISubrange(count: 1088)
!152 = !DIGlobalVariableExpression(var: !153, expr: !DIExpression())
!153 = distinct !DIGlobalVariable(name: "t", scope: !27, file: !116, line: 16, type: !154, isLocal: true, isDefinition: true)
!154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 25600, elements: !259)
!155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !157)
!156 = !DIFile(filename: "zephyr/include/zephyr/kernel/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!157 = !{!158, !207, !220, !221, !222, !226, !227, !235, !254}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !155, file: !156, line: 247, baseType: !159, size: 384)
!159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !160)
!160 = !{!161, !175, !177, !180, !181, !194, !195, !196}
!161 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 60, baseType: !162, size: 64)
!162 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 60, size: 64, elements: !163)
!163 = !{!164, !166}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !162, file: !156, line: 61, baseType: !165, size: 64)
!165 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !128)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !162, file: !156, line: 62, baseType: !167, size: 64)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !169)
!168 = !DIFile(filename: "zephyr/include/zephyr/sys/rb.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!169 = !{!170}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !167, file: !168, line: 50, baseType: !171, size: 64)
!171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !172, size: 64, elements: !173)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!173 = !{!174}
!174 = !DISubrange(count: 2)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !159, file: !156, line: 68, baseType: !176, size: 32, offset: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 32)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !159, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !23, line: 88, baseType: !179)
!179 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !159, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!181 = !DIDerivedType(tag: DW_TAG_member, scope: !159, file: !156, line: 90, baseType: !182, size: 16, offset: 112)
!182 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !159, file: !156, line: 90, size: 16, elements: !183)
!183 = !{!184, !191}
!184 = !DIDerivedType(tag: DW_TAG_member, scope: !182, file: !156, line: 91, baseType: !185, size: 16)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !182, file: !156, line: 91, size: 16, elements: !186)
!186 = !{!187, !190}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !185, file: !156, line: 96, baseType: !188, size: 8)
!188 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !23, line: 72, baseType: !189)
!189 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !185, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !182, file: !156, line: 100, baseType: !192, size: 16)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !23, line: 89, baseType: !193)
!193 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !159, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !159, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !159, file: !156, line: 131, baseType: !197, size: 192, offset: 192)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !198)
!198 = !{!199, !200, !206}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !197, file: !122, line: 245, baseType: !165, size: 64)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !197, file: !122, line: 246, baseType: !201, size: 32, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !202)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 32)
!203 = !DISubroutineType(types: !204)
!204 = !{null, !205}
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !197, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !155, file: !156, line: 250, baseType: !208, size: 288, offset: 384)
!208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !210)
!209 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/thread.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!210 = !{!211, !212, !213, !214, !215, !216, !217, !218, !219}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !208, file: !209, line: 26, baseType: !110, size: 32)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !208, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !208, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !208, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !208, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !208, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !208, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !208, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !208, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !155, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !155, file: !156, line: 256, baseType: !121, size: 64, offset: 704)
!222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !155, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 256, elements: !224)
!224 = !{!225}
!225 = !DISubrange(count: 32)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !155, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !155, file: !156, line: 300, baseType: !228, size: 96, offset: 1056)
!228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !229)
!229 = !{!230, !231, !234}
!230 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !228, file: !156, line: 153, baseType: !22, size: 32)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !228, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!232 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !233, line: 214, baseType: !32)
!233 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stddef.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!234 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !228, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !155, file: !156, line: 325, baseType: !236, size: 32, offset: 1152)
!236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 32)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !238)
!238 = !{!239, !248, !249}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !237, file: !118, line: 5074, baseType: !240, size: 96)
!240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !242)
!241 = !DIFile(filename: "zephyr/include/zephyr/sys/sys_heap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!242 = !{!243, !246, !247}
!243 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !240, file: !241, line: 57, baseType: !244, size: 32)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 32)
!245 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !241, line: 57, flags: DIFlagFwdDecl)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !240, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !240, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !237, file: !118, line: 5075, baseType: !121, size: 64, offset: 96)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !237, file: !118, line: 5076, baseType: !250, size: 32, offset: 160)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !252)
!251 = !DIFile(filename: "zephyr/include/zephyr/spinlock.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !250, file: !251, line: 52, baseType: !22, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !155, file: !156, line: 343, baseType: !255, size: 64, offset: 1184)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !256)
!256 = !{!257, !258}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !255, file: !209, line: 63, baseType: !110, size: 32)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !255, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!259 = !{!150}
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "done", scope: !27, file: !116, line: 21, type: !109, isLocal: true, isDefinition: true)
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !263)
!263 = !{!264, !265, !267, !268}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !262, file: !118, line: 2722, baseType: !121, size: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !262, file: !118, line: 2724, baseType: !266, size: 32, offset: 64)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !262, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !262, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!269 = !DIGlobalVariableExpression(var: !270, expr: !DIExpression())
!270 = distinct !DIGlobalVariable(name: "log_const_cbprintf_package", scope: !271, file: !288, line: 18, type: !289, isLocal: false, isDefinition: true)
!271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !272, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !273, globals: !287, splitDebugInlining: false, nameTableKind: None)
!272 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!273 = !{!22, !107, !24, !274, !276, !278, !232, !109, !281, !282, !283, !284, !285, !286, !192, !279}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 32)
!275 = !DIBasicType(name: "long double", size: 64, encoding: DW_ATE_float)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 32)
!277 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 32)
!280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !148)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 32)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 32)
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !148, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 32)
!287 = !{!269}
!288 = !DIFile(filename: "zephyr/lib/os/cbprintf_packaged.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !290)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !292)
!291 = !DIFile(filename: "zephyr/include/zephyr/logging/log_instance.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!292 = !{!293, !294}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !291, line: 17, baseType: !279, size: 32)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !290, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "_char_out", scope: !297, file: !301, line: 54, type: !302, isLocal: false, isDefinition: true)
!297 = distinct !DICompileUnit(language: DW_LANG_C99, file: !298, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !300, splitDebugInlining: false, nameTableKind: None)
!298 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!299 = !{!107, !109}
!300 = !{!295}
!301 = !DIFile(filename: "zephyr/lib/os/printk.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 32)
!303 = !DISubroutineType(types: !304)
!304 = !{!109, !109}
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "__init_st_stm32f4_init", scope: !307, file: !324, line: 56, type: !325, isLocal: true, isDefinition: true, align: 32)
!307 = distinct !DICompileUnit(language: DW_LANG_C99, file: !308, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !309, globals: !323, splitDebugInlining: false, nameTableKind: None)
!308 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!309 = !{!310}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 32)
!311 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 379, baseType: !313)
!312 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f412cx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 224, elements: !314)
!314 = !{!315, !317, !318, !319, !320, !321, !322}
!315 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !313, file: !312, line: 372, baseType: !316, size: 32)
!316 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !110)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !313, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !313, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !313, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !313, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !313, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !313, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!323 = !{!305}
!324 = !DIFile(filename: "zephyr/soc/arm/st_stm32/stm32f4/soc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!325 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !326)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !328)
!327 = !DIFile(filename: "zephyr/include/zephyr/init.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!328 = !{!329, !355}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !326, file: !327, line: 60, baseType: !330, size: 32)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 32)
!331 = !DISubroutineType(types: !332)
!332 = !{!109, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !337)
!336 = !DIFile(filename: "zephyr/include/zephyr/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!337 = !{!338, !339, !340, !341, !348, !349}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !335, file: !336, line: 380, baseType: !279, size: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !335, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !335, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !335, file: !336, line: 386, baseType: !342, size: 32, offset: 96)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !344)
!344 = !{!345, !346}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !343, file: !336, line: 359, baseType: !178, size: 8)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !343, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!347 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !335, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !335, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 32)
!351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_handle_t", file: !336, line: 43, baseType: !353)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !23, line: 73, baseType: !354)
!354 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !326, file: !327, line: 65, baseType: !333, size: 32, offset: 32)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "__init_st_stm32_common_config", scope: !358, file: !361, line: 71, type: !362, isLocal: true, isDefinition: true, align: 32)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !360, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!360 = !{!356}
!361 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/soc_config.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !363)
!363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !364)
!364 = !{!365, !384}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !363, file: !327, line: 60, baseType: !366, size: 32)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 32)
!367 = !DISubroutineType(types: !368)
!368 = !{!109, !369}
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !372)
!372 = !{!373, !374, !375, !376, !382, !383}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !371, file: !336, line: 380, baseType: !279, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !371, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !371, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !371, file: !336, line: 386, baseType: !377, size: 32, offset: 96)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !379)
!379 = !{!380, !381}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !378, file: !336, line: 359, baseType: !178, size: 8)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !378, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !371, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !371, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !363, file: !327, line: 65, baseType: !369, size: 32, offset: 32)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "log_const_mpu", scope: !387, file: !394, line: 17, type: !523, isLocal: false, isDefinition: true)
!387 = distinct !DICompileUnit(language: DW_LANG_C99, file: !388, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !389, globals: !390, splitDebugInlining: false, nameTableKind: None)
!388 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!389 = !{!232, !109, !110, !107}
!390 = !{!385, !391, !519}
!391 = !DIGlobalVariableExpression(var: !392, expr: !DIExpression())
!392 = distinct !DIGlobalVariable(name: "dynamic_regions", scope: !393, file: !394, line: 198, type: !505, isLocal: true, isDefinition: true)
!393 = distinct !DISubprogram(name: "z_arm_configure_dynamic_mpu_regions", scope: !394, file: !394, line: 175, type: !395, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !500)
!394 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_core_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!395 = !DISubroutineType(types: !396)
!396 = !{null, !397}
!397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !398, size: 32)
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !399)
!399 = !{!400, !458, !470, !471, !472, !473, !474, !480, !495}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !398, file: !156, line: 247, baseType: !401, size: 384)
!401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !402)
!402 = !{!403, !427, !434, !435, !436, !445, !446, !447}
!403 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !156, line: 60, baseType: !404, size: 64)
!404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !156, line: 60, size: 64, elements: !405)
!405 = !{!406, !421}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !404, file: !156, line: 61, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !408)
!408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !409)
!409 = !{!410, !416}
!410 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 38, baseType: !411, size: 32)
!411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 38, size: 32, elements: !412)
!412 = !{!413, !415}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !411, file: !127, line: 39, baseType: !414, size: 32)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !411, file: !127, line: 40, baseType: !414, size: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, scope: !408, file: !127, line: 42, baseType: !417, size: 32, offset: 32)
!417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !408, file: !127, line: 42, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !417, file: !127, line: 43, baseType: !414, size: 32)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !417, file: !127, line: 44, baseType: !414, size: 32)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !404, file: !156, line: 62, baseType: !422, size: 64)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !423)
!423 = !{!424}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !422, file: !168, line: 50, baseType: !425, size: 64)
!425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 64, elements: !173)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 32)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !401, file: !156, line: 68, baseType: !428, size: 32, offset: 64)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 32)
!429 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !430)
!430 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !431)
!431 = !{!432}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !430, file: !122, line: 232, baseType: !433, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !408)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !401, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !401, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!436 = !DIDerivedType(tag: DW_TAG_member, scope: !401, file: !156, line: 90, baseType: !437, size: 16, offset: 112)
!437 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !401, file: !156, line: 90, size: 16, elements: !438)
!438 = !{!439, !444}
!439 = !DIDerivedType(tag: DW_TAG_member, scope: !437, file: !156, line: 91, baseType: !440, size: 16)
!440 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !437, file: !156, line: 91, size: 16, elements: !441)
!441 = !{!442, !443}
!442 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !440, file: !156, line: 96, baseType: !188, size: 8)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !440, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !437, file: !156, line: 100, baseType: !192, size: 16)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !401, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !401, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !401, file: !156, line: 131, baseType: !448, size: 192, offset: 192)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !449)
!449 = !{!450, !451, !457}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !448, file: !122, line: 245, baseType: !407, size: 64)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !448, file: !122, line: 246, baseType: !452, size: 32, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !453)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 32)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !456}
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !448, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !398, file: !156, line: 250, baseType: !459, size: 288, offset: 384)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !460)
!460 = !{!461, !462, !463, !464, !465, !466, !467, !468, !469}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !459, file: !209, line: 26, baseType: !110, size: 32)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !459, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !459, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !459, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !459, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !459, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !459, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !459, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !459, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !398, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !398, file: !156, line: 256, baseType: !429, size: 64, offset: 704)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !398, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !398, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !398, file: !156, line: 300, baseType: !475, size: 96, offset: 1056)
!475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !476)
!476 = !{!477, !478, !479}
!477 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !475, file: !156, line: 153, baseType: !22, size: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !475, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !475, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !398, file: !156, line: 325, baseType: !481, size: 32, offset: 1152)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 32)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !483)
!483 = !{!484, !490, !491}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !482, file: !118, line: 5074, baseType: !485, size: 96)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !486)
!486 = !{!487, !488, !489}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !485, file: !241, line: 57, baseType: !244, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !485, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !485, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !482, file: !118, line: 5075, baseType: !429, size: 64, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !482, file: !118, line: 5076, baseType: !492, size: 32, offset: 160)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !493)
!493 = !{!494}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !492, file: !251, line: 52, baseType: !22, size: 32)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !398, file: !156, line: 343, baseType: !496, size: 64, offset: 1184)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !497)
!497 = !{!498, !499}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !496, file: !209, line: 63, baseType: !110, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !496, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!500 = !{!501, !502, !503, !504}
!501 = !DILocalVariable(name: "thread", arg: 1, scope: !393, file: !394, line: 175, type: !397)
!502 = !DILocalVariable(name: "region_num", scope: !393, file: !394, line: 200, type: !178)
!503 = !DILocalVariable(name: "guard_start", scope: !393, file: !394, line: 265, type: !22)
!504 = !DILocalVariable(name: "guard_size", scope: !393, file: !394, line: 266, type: !232)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !506, size: 96, elements: !517)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !508)
!507 = !DIFile(filename: "zephyr/arch/arm/include/kernel_arch_data.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !506, file: !507, line: 53, baseType: !22, size: 32)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !506, file: !507, line: 54, baseType: !232, size: 32, offset: 32)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !506, file: !507, line: 55, baseType: !512, size: 32, offset: 64)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !514)
!513 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu_v7m.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !515)
!515 = !{!516}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !514, file: !513, line: 150, baseType: !110, size: 32)
!517 = !{!518}
!518 = !DISubrange(count: 1)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "static_regions", scope: !387, file: !394, line: 62, type: !521, isLocal: true, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 96, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !525)
!525 = !{!526, !527}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !524, file: !291, line: 17, baseType: !279, size: 32)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !524, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!528 = !DIGlobalVariableExpression(var: !529, expr: !DIExpression())
!529 = distinct !DIGlobalVariable(name: "static_regions_num", scope: !530, file: !563, line: 39, type: !178, isLocal: true, isDefinition: true)
!530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !532, globals: !562, splitDebugInlining: false, nameTableKind: None)
!531 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!532 = !{!533, !107, !109, !550, !178}
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPU_Type", file: !535, line: 1226, baseType: !536)
!535 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!536 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 1213, size: 352, elements: !537)
!537 = !{!538, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "TYPE", scope: !536, file: !535, line: 1215, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !536, file: !535, line: 1216, baseType: !316, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RNR", scope: !536, file: !535, line: 1217, baseType: !316, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR", scope: !536, file: !535, line: 1218, baseType: !316, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "RASR", scope: !536, file: !535, line: 1219, baseType: !316, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A1", scope: !536, file: !535, line: 1220, baseType: !316, size: 32, offset: 160)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A1", scope: !536, file: !535, line: 1221, baseType: !316, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A2", scope: !536, file: !535, line: 1222, baseType: !316, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A2", scope: !536, file: !535, line: 1223, baseType: !316, size: 32, offset: 256)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "RBAR_A3", scope: !536, file: !535, line: 1224, baseType: !316, size: 32, offset: 288)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "RASR_A3", scope: !536, file: !535, line: 1225, baseType: !316, size: 32, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 32)
!551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !552)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !554)
!553 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/mpu/arm_mpu.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!554 = !{!555, !556, !557}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !552, file: !553, line: 29, baseType: !110, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !552, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !552, file: !553, line: 37, baseType: !558, size: 32, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !559, file: !513, line: 143, baseType: !110, size: 32)
!562 = !{!528}
!563 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "_stdout_hook", scope: !566, file: !573, line: 21, type: !302, isLocal: true, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !568, globals: !572, splitDebugInlining: false, nameTableKind: None)
!567 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!568 = !{!569, !109, !107}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 32)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !571, line: 22, baseType: !109)
!571 = !DIFile(filename: "zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!572 = !{!564}
!573 = !DIFile(filename: "zephyr/lib/libc/minimal/source/stdout/stdout_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!574 = !DIGlobalVariableExpression(var: !575, expr: !DIExpression())
!575 = distinct !DIGlobalVariable(name: "mpu_regions", scope: !576, file: !581, line: 13, type: !598, isLocal: true, isDefinition: true)
!576 = distinct !DICompileUnit(language: DW_LANG_C99, file: !577, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !578, splitDebugInlining: false, nameTableKind: None)
!577 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!578 = !{!579, !574}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mpu_config", scope: !576, file: !581, line: 37, type: !582, isLocal: false, isDefinition: true)
!581 = !DIFile(filename: "zephyr/soc/arm/common/cortex_m/arm_mpu_regions.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !583)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_config", file: !553, line: 41, size: 64, elements: !584)
!584 = !{!585, !586}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_regions", scope: !583, file: !553, line: 43, baseType: !110, size: 32)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "mpu_regions", scope: !583, file: !553, line: 45, baseType: !587, size: 32, offset: 32)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !589)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region", file: !553, line: 27, size: 96, elements: !590)
!590 = !{!591, !592, !593}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !589, file: !553, line: 29, baseType: !110, size: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !589, file: !553, line: 31, baseType: !279, size: 32, offset: 32)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !589, file: !553, line: 37, baseType: !594, size: 32, offset: 64)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "arm_mpu_region_attr_t", file: !513, line: 146, baseType: !595)
!595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arm_mpu_region_attr", file: !513, line: 141, size: 32, elements: !596)
!596 = !{!597}
!597 = !DIDerivedType(tag: DW_TAG_member, name: "rasr", scope: !595, file: !513, line: 143, baseType: !110, size: 32)
!598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !173)
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "exti_irq_table", scope: !601, file: !705, line: 72, type: !789, isLocal: true, isDefinition: true)
!601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !602, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !603, retainedTypes: !691, globals: !702, splitDebugInlining: false, nameTableKind: None)
!602 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!603 = !{!30, !604}
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !312, line: 65, baseType: !109, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690}
!606 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!607 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!608 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!609 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!610 = !DIEnumerator(name: "SVCall_IRQn", value: -5)
!611 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!612 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!613 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!614 = !DIEnumerator(name: "WWDG_IRQn", value: 0)
!615 = !DIEnumerator(name: "PVD_IRQn", value: 1)
!616 = !DIEnumerator(name: "TAMP_STAMP_IRQn", value: 2)
!617 = !DIEnumerator(name: "RTC_WKUP_IRQn", value: 3)
!618 = !DIEnumerator(name: "FLASH_IRQn", value: 4)
!619 = !DIEnumerator(name: "RCC_IRQn", value: 5)
!620 = !DIEnumerator(name: "EXTI0_IRQn", value: 6)
!621 = !DIEnumerator(name: "EXTI1_IRQn", value: 7)
!622 = !DIEnumerator(name: "EXTI2_IRQn", value: 8)
!623 = !DIEnumerator(name: "EXTI3_IRQn", value: 9)
!624 = !DIEnumerator(name: "EXTI4_IRQn", value: 10)
!625 = !DIEnumerator(name: "DMA1_Stream0_IRQn", value: 11)
!626 = !DIEnumerator(name: "DMA1_Stream1_IRQn", value: 12)
!627 = !DIEnumerator(name: "DMA1_Stream2_IRQn", value: 13)
!628 = !DIEnumerator(name: "DMA1_Stream3_IRQn", value: 14)
!629 = !DIEnumerator(name: "DMA1_Stream4_IRQn", value: 15)
!630 = !DIEnumerator(name: "DMA1_Stream5_IRQn", value: 16)
!631 = !DIEnumerator(name: "DMA1_Stream6_IRQn", value: 17)
!632 = !DIEnumerator(name: "ADC_IRQn", value: 18)
!633 = !DIEnumerator(name: "CAN1_TX_IRQn", value: 19)
!634 = !DIEnumerator(name: "CAN1_RX0_IRQn", value: 20)
!635 = !DIEnumerator(name: "CAN1_RX1_IRQn", value: 21)
!636 = !DIEnumerator(name: "CAN1_SCE_IRQn", value: 22)
!637 = !DIEnumerator(name: "EXTI9_5_IRQn", value: 23)
!638 = !DIEnumerator(name: "TIM1_BRK_TIM9_IRQn", value: 24)
!639 = !DIEnumerator(name: "TIM1_UP_TIM10_IRQn", value: 25)
!640 = !DIEnumerator(name: "TIM1_TRG_COM_TIM11_IRQn", value: 26)
!641 = !DIEnumerator(name: "TIM1_CC_IRQn", value: 27)
!642 = !DIEnumerator(name: "TIM2_IRQn", value: 28)
!643 = !DIEnumerator(name: "TIM3_IRQn", value: 29)
!644 = !DIEnumerator(name: "TIM4_IRQn", value: 30)
!645 = !DIEnumerator(name: "I2C1_EV_IRQn", value: 31)
!646 = !DIEnumerator(name: "I2C1_ER_IRQn", value: 32)
!647 = !DIEnumerator(name: "I2C2_EV_IRQn", value: 33)
!648 = !DIEnumerator(name: "I2C2_ER_IRQn", value: 34)
!649 = !DIEnumerator(name: "SPI1_IRQn", value: 35)
!650 = !DIEnumerator(name: "SPI2_IRQn", value: 36)
!651 = !DIEnumerator(name: "USART1_IRQn", value: 37)
!652 = !DIEnumerator(name: "USART2_IRQn", value: 38)
!653 = !DIEnumerator(name: "USART3_IRQn", value: 39)
!654 = !DIEnumerator(name: "EXTI15_10_IRQn", value: 40)
!655 = !DIEnumerator(name: "RTC_Alarm_IRQn", value: 41)
!656 = !DIEnumerator(name: "OTG_FS_WKUP_IRQn", value: 42)
!657 = !DIEnumerator(name: "TIM8_BRK_TIM12_IRQn", value: 43)
!658 = !DIEnumerator(name: "TIM8_UP_TIM13_IRQn", value: 44)
!659 = !DIEnumerator(name: "TIM8_TRG_COM_TIM14_IRQn", value: 45)
!660 = !DIEnumerator(name: "TIM8_CC_IRQn", value: 46)
!661 = !DIEnumerator(name: "DMA1_Stream7_IRQn", value: 47)
!662 = !DIEnumerator(name: "SDIO_IRQn", value: 49)
!663 = !DIEnumerator(name: "TIM5_IRQn", value: 50)
!664 = !DIEnumerator(name: "SPI3_IRQn", value: 51)
!665 = !DIEnumerator(name: "TIM6_IRQn", value: 54)
!666 = !DIEnumerator(name: "TIM7_IRQn", value: 55)
!667 = !DIEnumerator(name: "DMA2_Stream0_IRQn", value: 56)
!668 = !DIEnumerator(name: "DMA2_Stream1_IRQn", value: 57)
!669 = !DIEnumerator(name: "DMA2_Stream2_IRQn", value: 58)
!670 = !DIEnumerator(name: "DMA2_Stream3_IRQn", value: 59)
!671 = !DIEnumerator(name: "DMA2_Stream4_IRQn", value: 60)
!672 = !DIEnumerator(name: "DFSDM1_FLT0_IRQn", value: 61)
!673 = !DIEnumerator(name: "DFSDM1_FLT1_IRQn", value: 62)
!674 = !DIEnumerator(name: "CAN2_TX_IRQn", value: 63)
!675 = !DIEnumerator(name: "CAN2_RX0_IRQn", value: 64)
!676 = !DIEnumerator(name: "CAN2_RX1_IRQn", value: 65)
!677 = !DIEnumerator(name: "CAN2_SCE_IRQn", value: 66)
!678 = !DIEnumerator(name: "OTG_FS_IRQn", value: 67)
!679 = !DIEnumerator(name: "DMA2_Stream5_IRQn", value: 68)
!680 = !DIEnumerator(name: "DMA2_Stream6_IRQn", value: 69)
!681 = !DIEnumerator(name: "DMA2_Stream7_IRQn", value: 70)
!682 = !DIEnumerator(name: "USART6_IRQn", value: 71)
!683 = !DIEnumerator(name: "I2C3_EV_IRQn", value: 72)
!684 = !DIEnumerator(name: "I2C3_ER_IRQn", value: 73)
!685 = !DIEnumerator(name: "RNG_IRQn", value: 80)
!686 = !DIEnumerator(name: "FPU_IRQn", value: 81)
!687 = !DIEnumerator(name: "SPI4_IRQn", value: 84)
!688 = !DIEnumerator(name: "SPI5_IRQn", value: 85)
!689 = !DIEnumerator(name: "FMPI2C1_EV_IRQn", value: 95)
!690 = !DIEnumerator(name: "FMPI2C1_ER_IRQn", value: 96)
!691 = !{!232, !109, !107, !692}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 32)
!693 = !DIDerivedType(tag: DW_TAG_typedef, name: "EXTI_TypeDef", file: !312, line: 364, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 356, size: 192, elements: !695)
!695 = !{!696, !697, !698, !699, !700, !701}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "IMR", scope: !694, file: !312, line: 358, baseType: !316, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "EMR", scope: !694, file: !312, line: 359, baseType: !316, size: 32, offset: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "RTSR", scope: !694, file: !312, line: 360, baseType: !316, size: 32, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "FTSR", scope: !694, file: !312, line: 361, baseType: !316, size: 32, offset: 96)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "SWIER", scope: !694, file: !312, line: 362, baseType: !316, size: 32, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "PR", scope: !694, file: !312, line: 363, baseType: !316, size: 32, offset: 160)
!702 = !{!703, !709, !725, !736, !753, !599, !755, !769, !771, !773, !775, !777, !779, !781, !783, !785, !787}
!703 = !DIGlobalVariableExpression(var: !704, expr: !DIExpression())
!704 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !601, file: !705, line: 424, type: !706, isLocal: false, isDefinition: true, align: 16)
!705 = !DIFile(filename: "zephyr/drivers/interrupt_controller/intc_exti_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 64, elements: !707)
!707 = !{!708}
!708 = !DISubrange(count: 4)
!709 = !DIGlobalVariableExpression(var: !710, expr: !DIExpression())
!710 = distinct !DIGlobalVariable(name: "__device_dts_ord_35", scope: !601, file: !705, line: 424, type: !711, isLocal: false, isDefinition: true, align: 32)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !713)
!713 = !{!714, !715, !716, !717, !723, !724}
!714 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !712, file: !336, line: 380, baseType: !279, size: 32)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !712, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !712, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !712, file: !336, line: 386, baseType: !718, size: 32, offset: 96)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 32)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !720)
!720 = !{!721, !722}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !719, file: !336, line: 359, baseType: !178, size: 8)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !719, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !712, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !712, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!725 = !DIGlobalVariableExpression(var: !726, expr: !DIExpression())
!726 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_35", scope: !601, file: !705, line: 424, type: !727, isLocal: true, isDefinition: true, align: 32)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !729)
!729 = !{!730, !735}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !728, file: !327, line: 60, baseType: !731, size: 32)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 32)
!732 = !DISubroutineType(types: !733)
!733 = !{!109, !734}
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !728, file: !327, line: 65, baseType: !734, size: 32, offset: 32)
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "exti_data", scope: !601, file: !705, line: 423, type: !738, isLocal: true, isDefinition: true)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_exti_data", file: !705, line: 107, size: 1472, elements: !739)
!739 = !{!740}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !738, file: !705, line: 109, baseType: !741, size: 1472)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !742, size: 1472, elements: !751)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__exti_cb", file: !705, line: 101, size: 64, elements: !743)
!743 = !{!744, !750}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !742, file: !705, line: 102, baseType: !745, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "stm32_exti_callback_t", file: !746, line: 63, baseType: !747)
!746 = !DIFile(filename: "zephyr/include/zephyr/drivers/interrupt_controller/exti_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 32)
!748 = !DISubroutineType(types: !749)
!749 = !{null, !109, !107}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !742, file: !705, line: 103, baseType: !107, size: 32, offset: 32)
!751 = !{!752}
!752 = !DISubrange(count: 23)
!753 = !DIGlobalVariableExpression(var: !754, expr: !DIExpression())
!754 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_35", scope: !601, file: !705, line: 424, type: !719, isLocal: true, isDefinition: true, align: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_0_irq_0", scope: !757, file: !705, line: 493, type: !762, isLocal: true, isDefinition: true, align: 32)
!757 = distinct !DISubprogram(name: "__stm32_exti_connect_irqs", scope: !705, file: !705, line: 460, type: !758, scopeLine: 461, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !760)
!758 = !DISubroutineType(types: !759)
!759 = !{null, !734}
!760 = !{!761}
!761 = !DILocalVariable(name: "dev", arg: 1, scope: !757, file: !705, line: 460, type: !734)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_isr_list", file: !10, line: 53, size: 128, elements: !763)
!763 = !{!764, !766, !767, !768}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !762, file: !10, line: 55, baseType: !765, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !23, line: 74, baseType: !109)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !762, file: !10, line: 57, baseType: !765, size: 32, offset: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !762, file: !10, line: 59, baseType: !107, size: 32, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !762, file: !10, line: 61, baseType: !13, size: 32, offset: 96)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_1_irq_1", scope: !757, file: !705, line: 497, type: !762, isLocal: true, isDefinition: true, align: 32)
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_2_irq_2", scope: !757, file: !705, line: 507, type: !762, isLocal: true, isDefinition: true, align: 32)
!773 = !DIGlobalVariableExpression(var: !774, expr: !DIExpression())
!774 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_3_irq_3", scope: !757, file: !705, line: 512, type: !762, isLocal: true, isDefinition: true, align: 32)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_4_irq_4", scope: !757, file: !705, line: 516, type: !762, isLocal: true, isDefinition: true, align: 32)
!777 = !DIGlobalVariableExpression(var: !778, expr: !DIExpression())
!778 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_9_5_irq_5", scope: !757, file: !705, line: 523, type: !762, isLocal: true, isDefinition: true, align: 32)
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_15_10_irq_6", scope: !757, file: !705, line: 527, type: !762, isLocal: true, isDefinition: true, align: 32)
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_16_irq_7", scope: !757, file: !705, line: 581, type: !762, isLocal: true, isDefinition: true, align: 32)
!783 = !DIGlobalVariableExpression(var: !784, expr: !DIExpression())
!784 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_18_irq_8", scope: !757, file: !705, line: 586, type: !762, isLocal: true, isDefinition: true, align: 32)
!785 = !DIGlobalVariableExpression(var: !786, expr: !DIExpression())
!786 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_21_irq_9", scope: !757, file: !705, line: 591, type: !762, isLocal: true, isDefinition: true, align: 32)
!787 = !DIGlobalVariableExpression(var: !788, expr: !DIExpression())
!788 = distinct !DIGlobalVariable(name: "__isr___stm32_exti_isr_22_irq_10", scope: !757, file: !705, line: 595, type: !762, isLocal: true, isDefinition: true, align: 32)
!789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !790, size: 736, elements: !751)
!790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !791)
!791 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !312, line: 154, baseType: !604)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_35", scope: !794, file: !799, line: 22, type: !821, isLocal: false, isDefinition: true, align: 16)
!794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !795, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !796, splitDebugInlining: false, nameTableKind: None)
!795 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple/zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!796 = !{!797, !792, !803, !805, !807, !809, !811, !813, !815, !817, !819}
!797 = !DIGlobalVariableExpression(var: !798, expr: !DIExpression())
!798 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !794, file: !799, line: 17, type: !800, isLocal: false, isDefinition: true, align: 16)
!799 = !DIFile(filename: "zephyr/dev_handles.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 192, elements: !801)
!801 = !{!802}
!802 = !DISubrange(count: 12)
!803 = !DIGlobalVariableExpression(var: !804, expr: !DIExpression())
!804 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !794, file: !799, line: 29, type: !706, isLocal: false, isDefinition: true, align: 16)
!805 = !DIGlobalVariableExpression(var: !806, expr: !DIExpression())
!806 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !794, file: !799, line: 36, type: !706, isLocal: false, isDefinition: true, align: 16)
!807 = !DIGlobalVariableExpression(var: !808, expr: !DIExpression())
!808 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !794, file: !799, line: 43, type: !706, isLocal: false, isDefinition: true, align: 16)
!809 = !DIGlobalVariableExpression(var: !810, expr: !DIExpression())
!810 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !794, file: !799, line: 50, type: !706, isLocal: false, isDefinition: true, align: 16)
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !794, file: !799, line: 57, type: !706, isLocal: false, isDefinition: true, align: 16)
!813 = !DIGlobalVariableExpression(var: !814, expr: !DIExpression())
!814 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !794, file: !799, line: 64, type: !706, isLocal: false, isDefinition: true, align: 16)
!815 = !DIGlobalVariableExpression(var: !816, expr: !DIExpression())
!816 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !794, file: !799, line: 71, type: !706, isLocal: false, isDefinition: true, align: 16)
!817 = !DIGlobalVariableExpression(var: !818, expr: !DIExpression())
!818 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !794, file: !799, line: 78, type: !706, isLocal: false, isDefinition: true, align: 16)
!819 = !DIGlobalVariableExpression(var: !820, expr: !DIExpression())
!820 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !794, file: !799, line: 85, type: !706, isLocal: false, isDefinition: true, align: 16)
!821 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 48, elements: !822)
!822 = !{!823}
!823 = !DISubrange(count: 3)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "stm32_clock_control_api", scope: !826, file: !888, line: 398, type: !921, isLocal: true, isDefinition: true)
!826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !827, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !828, retainedTypes: !841, globals: !885, splitDebugInlining: false, nameTableKind: None)
!827 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!828 = !{!829, !30, !834}
!829 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !830, line: 197, baseType: !32, size: 32, elements: !831)
!830 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/stm32f4xx.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!831 = !{!832, !833}
!832 = !DIEnumerator(name: "SUCCESS", value: 0)
!833 = !DIEnumerator(name: "ERROR", value: 1)
!834 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "clock_control_status", file: !835, line: 44, baseType: !32, size: 32, elements: !836)
!835 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!836 = !{!837, !838, !839, !840}
!837 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_STARTING", value: 0)
!838 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_OFF", value: 1)
!839 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_ON", value: 2)
!840 = !DIEnumerator(name: "CLOCK_CONTROL_STATUS_UNKNOWN", value: 3)
!841 = !{!107, !109, !110, !842, !878, !884}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 32)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !844)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !845)
!845 = !{!846, !847, !848, !849, !850, !851, !852, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !844, file: !312, line: 479, baseType: !316, size: 32)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !844, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !844, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !844, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !844, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !844, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !844, file: !312, line: 485, baseType: !853, size: 64, offset: 192)
!853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 64, elements: !173)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !844, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !844, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !844, file: !312, line: 488, baseType: !853, size: 64, offset: 320)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !844, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !844, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !844, file: !312, line: 491, baseType: !853, size: 64, offset: 448)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !844, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !844, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !844, file: !312, line: 494, baseType: !853, size: 64, offset: 576)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !844, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !844, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !844, file: !312, line: 497, baseType: !853, size: 64, offset: 704)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !844, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !844, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !844, file: !312, line: 500, baseType: !853, size: 64, offset: 832)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !844, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !844, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !844, file: !312, line: 503, baseType: !853, size: 64, offset: 960)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !844, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !844, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !844, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !844, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !844, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !844, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 32)
!879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !881)
!880 = !DIFile(filename: "zephyr/include/zephyr/drivers/clock_control/stm32_clock_control.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!881 = !{!882, !883}
!882 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !879, file: !880, line: 344, baseType: !110, size: 32)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !879, file: !880, line: 345, baseType: !110, size: 32, offset: 32)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !110, size: 32)
!885 = !{!886, !892, !908, !919, !824}
!886 = !DIGlobalVariableExpression(var: !887, expr: !DIExpression())
!887 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_8", scope: !826, file: !888, line: 752, type: !889, isLocal: false, isDefinition: true, align: 16)
!888 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32_ll_common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 848, elements: !890)
!890 = !{!891}
!891 = !DISubrange(count: 53)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "__device_dts_ord_8", scope: !826, file: !888, line: 752, type: !894, isLocal: false, isDefinition: true, align: 32)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !896)
!896 = !{!897, !898, !899, !900, !906, !907}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !895, file: !336, line: 380, baseType: !279, size: 32)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !895, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !895, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !895, file: !336, line: 386, baseType: !901, size: 32, offset: 96)
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 32)
!902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !903)
!903 = !{!904, !905}
!904 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !902, file: !336, line: 359, baseType: !178, size: 8)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !902, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !895, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !895, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!908 = !DIGlobalVariableExpression(var: !909, expr: !DIExpression())
!909 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_8", scope: !826, file: !888, line: 752, type: !910, isLocal: true, isDefinition: true, align: 32)
!910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !912)
!912 = !{!913, !918}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !911, file: !327, line: 60, baseType: !914, size: 32)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 32)
!915 = !DISubroutineType(types: !916)
!916 = !{!109, !917}
!917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !911, file: !327, line: 65, baseType: !917, size: 32, offset: 32)
!919 = !DIGlobalVariableExpression(var: !920, expr: !DIExpression())
!920 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_8", scope: !826, file: !888, line: 752, type: !902, isLocal: true, isDefinition: true, align: 8)
!921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !835, line: 100, size: 224, elements: !922)
!922 = !{!923, !929, !930, !939, !944, !949, !955}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !921, file: !835, line: 101, baseType: !924, size: 32)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !835, line: 76, baseType: !925)
!925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 32)
!926 = !DISubroutineType(types: !927)
!927 = !{!109, !917, !928}
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_t", file: !835, line: 56, baseType: !107)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !921, file: !835, line: 102, baseType: !924, size: 32, offset: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !921, file: !835, line: 103, baseType: !931, size: 32, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !835, line: 83, baseType: !932)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 32)
!933 = !DISubroutineType(types: !934)
!934 = !{!109, !917, !928, !935, !107}
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !835, line: 72, baseType: !936)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 32)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !917, !928, !107}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !921, file: !835, line: 104, baseType: !940, size: 32, offset: 96)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !835, line: 79, baseType: !941)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 32)
!942 = !DISubroutineType(types: !943)
!943 = !{!109, !917, !928, !884}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !921, file: !835, line: 105, baseType: !945, size: 32, offset: 128)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !835, line: 88, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 32)
!947 = !DISubroutineType(types: !948)
!948 = !{!834, !917, !928}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !921, file: !835, line: 106, baseType: !950, size: 32, offset: 160)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !835, line: 92, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{!109, !917, !928, !954}
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_subsys_rate_t", file: !835, line: 64, baseType: !107)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !921, file: !835, line: 107, baseType: !956, size: 32, offset: 192)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !835, line: 96, baseType: !957)
!957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 32)
!958 = !DISubroutineType(types: !959)
!959 = !{!109, !917, !928, !107}
!960 = !DIGlobalVariableExpression(var: !961, expr: !DIExpression())
!961 = distinct !DIGlobalVariable(name: "__init_uart_console_init", scope: !962, file: !1019, line: 603, type: !1021, isLocal: true, isDefinition: true, align: 32)
!962 = distinct !DICompileUnit(language: DW_LANG_C99, file: !963, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !964, globals: !1016, splitDebugInlining: false, nameTableKind: None)
!963 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!964 = !{!107, !109, !965}
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !968, line: 336, size: 160, elements: !969)
!968 = !DIFile(filename: "zephyr/include/zephyr/drivers/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!969 = !{!970, !990, !994, !998, !1011}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !967, file: !968, line: 365, baseType: !971, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!972 = !DISubroutineType(types: !973)
!973 = !{!109, !974, !989}
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !977)
!977 = !{!978, !979, !980, !981, !987, !988}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !976, file: !336, line: 380, baseType: !279, size: 32)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !976, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !976, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !976, file: !336, line: 386, baseType: !982, size: 32, offset: 96)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 32)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !984)
!984 = !{!985, !986}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !983, file: !336, line: 359, baseType: !178, size: 8)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !983, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !976, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !976, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !967, file: !968, line: 366, baseType: !991, size: 32, offset: 32)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 32)
!992 = !DISubroutineType(types: !993)
!993 = !{null, !974, !179}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !967, file: !968, line: 374, baseType: !995, size: 32, offset: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!996 = !DISubroutineType(types: !997)
!997 = !{!109, !974}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !967, file: !968, line: 377, baseType: !999, size: 32, offset: 96)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 32)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!109, !974, !1002}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !968, line: 122, size: 64, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1010}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1004, file: !968, line: 123, baseType: !110, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1004, file: !968, line: 124, baseType: !178, size: 8, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1004, file: !968, line: 125, baseType: !178, size: 8, offset: 40)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1004, file: !968, line: 126, baseType: !178, size: 8, offset: 48)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1004, file: !968, line: 127, baseType: !178, size: 8, offset: 56)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !967, file: !968, line: 379, baseType: !1012, size: 32, offset: 128)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 32)
!1013 = !DISubroutineType(types: !1014)
!1014 = !{!109, !974, !1015}
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1004, size: 32)
!1016 = !{!960, !1017}
!1017 = !DIGlobalVariableExpression(var: !1018, expr: !DIExpression())
!1018 = distinct !DIGlobalVariable(name: "uart_console_dev", scope: !962, file: !1019, line: 38, type: !1020, isLocal: true, isDefinition: true)
!1019 = !DIFile(filename: "zephyr/drivers/console/uart_console.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1020 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !974)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1023)
!1023 = !{!1024, !1025}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1022, file: !327, line: 60, baseType: !995, size: 32)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1022, file: !327, line: 65, baseType: !974, size: 32, offset: 32)
!1026 = !DIGlobalVariableExpression(var: !1027, expr: !DIExpression())
!1027 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_a", scope: !1028, file: !1199, line: 762, type: !1311, isLocal: true, isDefinition: true)
!1028 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1029, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1030, retainedTypes: !1048, globals: !1196, splitDebugInlining: false, nameTableKind: None)
!1029 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!1030 = !{!30, !1031, !1037, !1042, !834}
!1031 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_mode", file: !1032, line: 506, baseType: !32, size: 32, elements: !1033)
!1032 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1033 = !{!1034, !1035, !1036}
!1034 = !DIEnumerator(name: "GPIO_INT_MODE_DISABLED", value: 2097152)
!1035 = !DIEnumerator(name: "GPIO_INT_MODE_LEVEL", value: 4194304)
!1036 = !DIEnumerator(name: "GPIO_INT_MODE_EDGE", value: 20971520)
!1037 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpio_int_trig", file: !1032, line: 512, baseType: !32, size: 32, elements: !1038)
!1038 = !{!1039, !1040, !1041}
!1039 = !DIEnumerator(name: "GPIO_INT_TRIG_LOW", value: 33554432)
!1040 = !DIEnumerator(name: "GPIO_INT_TRIG_HIGH", value: 67108864)
!1041 = !DIEnumerator(name: "GPIO_INT_TRIG_BOTH", value: 100663296)
!1042 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stm32_exti_trigger", file: !746, line: 43, baseType: !32, size: 32, elements: !1043)
!1043 = !{!1044, !1045, !1046, !1047}
!1044 = !DIEnumerator(name: "STM32_EXTI_TRIG_NONE", value: 0)
!1045 = !DIEnumerator(name: "STM32_EXTI_TRIG_RISING", value: 1)
!1046 = !DIEnumerator(name: "STM32_EXTI_TRIG_FALLING", value: 2)
!1047 = !DIEnumerator(name: "STM32_EXTI_TRIG_BOTH", value: 3)
!1048 = !{!107, !109, !1049, !1119, !1124, !1084, !1037, !1031, !1129, !1130, !110, !1144, !1099, !285, !1156, !1157}
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1051)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1032, line: 523, size: 288, elements: !1052)
!1052 = !{!1053, !1074, !1080, !1085, !1089, !1090, !1091, !1095, !1115}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1051, file: !1032, line: 524, baseType: !1054, size: 32)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 32)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!109, !1057, !1072, !1073}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1059)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1060)
!1060 = !{!1061, !1062, !1063, !1064, !1070, !1071}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1059, file: !336, line: 380, baseType: !279, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1059, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1059, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1059, file: !336, line: 386, baseType: !1065, size: 32, offset: 96)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 32)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1066, file: !336, line: 359, baseType: !178, size: 8)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1066, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1059, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1059, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_pin_t", file: !1032, line: 237, baseType: !178)
!1073 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_flags_t", file: !1032, line: 257, baseType: !110)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1051, file: !1032, line: 530, baseType: !1075, size: 32, offset: 32)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!109, !1057, !1078}
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 32)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_value_t", file: !1032, line: 229, baseType: !110)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1051, file: !1032, line: 532, baseType: !1081, size: 32, offset: 64)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 32)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!109, !1057, !1084, !1079}
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_port_pins_t", file: !1032, line: 216, baseType: !110)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1051, file: !1032, line: 535, baseType: !1086, size: 32, offset: 96)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 32)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{!109, !1057, !1084}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1051, file: !1032, line: 537, baseType: !1086, size: 32, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1051, file: !1032, line: 539, baseType: !1086, size: 32, offset: 160)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1051, file: !1032, line: 541, baseType: !1092, size: 32, offset: 192)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 32)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!109, !1057, !1072, !1031, !1037}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1051, file: !1032, line: 544, baseType: !1096, size: 32, offset: 224)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 32)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{!109, !1057, !1099, !347}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 32)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1032, line: 478, size: 96, elements: !1101)
!1101 = !{!1102, !1109, !1114}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1100, file: !1032, line: 482, baseType: !1103, size: 32)
!1103 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1104, line: 33, baseType: !1105)
!1104 = !DIFile(filename: "zephyr/include/zephyr/sys/slist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1104, line: 29, size: 32, elements: !1106)
!1106 = !{!1107}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1105, file: !1104, line: 30, baseType: !1108, size: 32)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1100, file: !1032, line: 485, baseType: !1110, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1032, line: 464, baseType: !1111)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 32)
!1112 = !DISubroutineType(types: !1113)
!1113 = !{null, !1057, !1099, !1084}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1100, file: !1032, line: 493, baseType: !1084, size: 32, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1051, file: !1032, line: 547, baseType: !1116, size: 32, offset: 256)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1117, size: 32)
!1117 = !DISubroutineType(types: !1118)
!1118 = !{!110, !1057}
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1032, line: 428, size: 32, elements: !1122)
!1122 = !{!1123}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1121, file: !1032, line: 434, baseType: !1084, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 32)
!1125 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1032, line: 441, size: 32, elements: !1127)
!1127 = !{!1128}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1126, file: !1032, line: 447, baseType: !1084, size: 32)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 32)
!1131 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 396, baseType: !1132)
!1132 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 385, size: 320, elements: !1133)
!1133 = !{!1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142}
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !1132, file: !312, line: 387, baseType: !316, size: 32)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !1132, file: !312, line: 388, baseType: !316, size: 32, offset: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !1132, file: !312, line: 389, baseType: !316, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !1132, file: !312, line: 390, baseType: !316, size: 32, offset: 96)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !1132, file: !312, line: 391, baseType: !316, size: 32, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !1132, file: !312, line: 392, baseType: !316, size: 32, offset: 160)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !1132, file: !312, line: 393, baseType: !316, size: 32, offset: 192)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !1132, file: !312, line: 394, baseType: !316, size: 32, offset: 224)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !1132, file: !312, line: 395, baseType: !1143, size: 64, offset: 256)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 64, elements: !173)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "SYSCFG_TypeDef", file: !312, line: 411, baseType: !1146)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 402, size: 320, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1152, !1153, !1154, !1155}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "MEMRMP", scope: !1146, file: !312, line: 404, baseType: !316, size: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "PMC", scope: !1146, file: !312, line: 405, baseType: !316, size: 32, offset: 32)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "EXTICR", scope: !1146, file: !312, line: 406, baseType: !1151, size: 128, offset: 64)
!1151 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 128, elements: !707)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED", scope: !1146, file: !312, line: 407, baseType: !110, size: 32, offset: 192)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR2", scope: !1146, file: !312, line: 408, baseType: !316, size: 32, offset: 224)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "CMPCR", scope: !1146, file: !312, line: 409, baseType: !316, size: 32, offset: 256)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1146, file: !312, line: 410, baseType: !316, size: 32, offset: 288)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 32)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 32)
!1158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !835, line: 100, size: 224, elements: !1160)
!1160 = !{!1161, !1166, !1167, !1176, !1181, !1186, !1191}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1159, file: !835, line: 101, baseType: !1162, size: 32)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !835, line: 76, baseType: !1163)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!109, !1057, !928}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1159, file: !835, line: 102, baseType: !1162, size: 32, offset: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1159, file: !835, line: 103, baseType: !1168, size: 32, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !835, line: 83, baseType: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 32)
!1170 = !DISubroutineType(types: !1171)
!1171 = !{!109, !1057, !928, !1172, !107}
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !835, line: 72, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 32)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{null, !1057, !928, !107}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1159, file: !835, line: 104, baseType: !1177, size: 32, offset: 96)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !835, line: 79, baseType: !1178)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 32)
!1179 = !DISubroutineType(types: !1180)
!1180 = !{!109, !1057, !928, !884}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1159, file: !835, line: 105, baseType: !1182, size: 32, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !835, line: 88, baseType: !1183)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 32)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!834, !1057, !928}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1159, file: !835, line: 106, baseType: !1187, size: 32, offset: 160)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !835, line: 92, baseType: !1188)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!109, !1057, !928, !954}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1159, file: !835, line: 107, baseType: !1192, size: 32, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !835, line: 96, baseType: !1193)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 32)
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!109, !1057, !928, !107}
!1196 = !{!1197, !1203, !1205, !1215, !1217, !1219, !1221, !1226, !1228, !1230, !1235, !1237, !1239, !1241, !1243, !1245, !1247, !1249, !1251, !1253, !1255, !1257, !1259, !1261, !1263, !1277, !1279, !1281, !1283, !1285, !1287, !1289, !1291, !1293, !1295, !1297, !1299, !1301, !1303, !1305, !1026, !1307, !1309, !1322, !1324, !1326, !1328, !1330, !1332}
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_19", scope: !1028, file: !1199, line: 762, type: !1200, isLocal: false, isDefinition: true, align: 16)
!1199 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 112, elements: !1201)
!1201 = !{!1202}
!1202 = !DISubrange(count: 7)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "__device_dts_ord_19", scope: !1028, file: !1199, line: 762, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_19", scope: !1028, file: !1199, line: 762, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1207 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1209)
!1209 = !{!1210, !1214}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1208, file: !327, line: 60, baseType: !1211, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 32)
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!109, !1057}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1208, file: !327, line: 65, baseType: !1057, size: 32, offset: 32)
!1215 = !DIGlobalVariableExpression(var: !1216, expr: !DIExpression())
!1216 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_24", scope: !1028, file: !1199, line: 766, type: !1200, isLocal: false, isDefinition: true, align: 16)
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "__device_dts_ord_24", scope: !1028, file: !1199, line: 766, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1219 = !DIGlobalVariableExpression(var: !1220, expr: !DIExpression())
!1220 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_24", scope: !1028, file: !1199, line: 766, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1221 = !DIGlobalVariableExpression(var: !1222, expr: !DIExpression())
!1222 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_22", scope: !1028, file: !1199, line: 770, type: !1223, isLocal: false, isDefinition: true, align: 16)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 96, elements: !1224)
!1224 = !{!1225}
!1225 = !DISubrange(count: 6)
!1226 = !DIGlobalVariableExpression(var: !1227, expr: !DIExpression())
!1227 = distinct !DIGlobalVariable(name: "__device_dts_ord_22", scope: !1028, file: !1199, line: 770, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1228 = !DIGlobalVariableExpression(var: !1229, expr: !DIExpression())
!1229 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_22", scope: !1028, file: !1199, line: 770, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_75", scope: !1028, file: !1199, line: 774, type: !1232, isLocal: false, isDefinition: true, align: 16)
!1232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 80, elements: !1233)
!1233 = !{!1234}
!1234 = !DISubrange(count: 5)
!1235 = !DIGlobalVariableExpression(var: !1236, expr: !DIExpression())
!1236 = distinct !DIGlobalVariable(name: "__device_dts_ord_75", scope: !1028, file: !1199, line: 774, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1237 = !DIGlobalVariableExpression(var: !1238, expr: !DIExpression())
!1238 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_75", scope: !1028, file: !1199, line: 774, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1239 = !DIGlobalVariableExpression(var: !1240, expr: !DIExpression())
!1240 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_76", scope: !1028, file: !1199, line: 778, type: !1232, isLocal: false, isDefinition: true, align: 16)
!1241 = !DIGlobalVariableExpression(var: !1242, expr: !DIExpression())
!1242 = distinct !DIGlobalVariable(name: "__device_dts_ord_76", scope: !1028, file: !1199, line: 778, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1243 = !DIGlobalVariableExpression(var: !1244, expr: !DIExpression())
!1244 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_76", scope: !1028, file: !1199, line: 778, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1245 = !DIGlobalVariableExpression(var: !1246, expr: !DIExpression())
!1246 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_77", scope: !1028, file: !1199, line: 782, type: !1232, isLocal: false, isDefinition: true, align: 16)
!1247 = !DIGlobalVariableExpression(var: !1248, expr: !DIExpression())
!1248 = distinct !DIGlobalVariable(name: "__device_dts_ord_77", scope: !1028, file: !1199, line: 782, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1249 = !DIGlobalVariableExpression(var: !1250, expr: !DIExpression())
!1250 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_77", scope: !1028, file: !1199, line: 782, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1251 = !DIGlobalVariableExpression(var: !1252, expr: !DIExpression())
!1252 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_78", scope: !1028, file: !1199, line: 786, type: !1232, isLocal: false, isDefinition: true, align: 16)
!1253 = !DIGlobalVariableExpression(var: !1254, expr: !DIExpression())
!1254 = distinct !DIGlobalVariable(name: "__device_dts_ord_78", scope: !1028, file: !1199, line: 786, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_78", scope: !1028, file: !1199, line: 786, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1257 = !DIGlobalVariableExpression(var: !1258, expr: !DIExpression())
!1258 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_79", scope: !1028, file: !1199, line: 790, type: !1232, isLocal: false, isDefinition: true, align: 16)
!1259 = !DIGlobalVariableExpression(var: !1260, expr: !DIExpression())
!1260 = distinct !DIGlobalVariable(name: "__device_dts_ord_79", scope: !1028, file: !1199, line: 790, type: !1058, isLocal: false, isDefinition: true, align: 32)
!1261 = !DIGlobalVariableExpression(var: !1262, expr: !DIExpression())
!1262 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_79", scope: !1028, file: !1199, line: 790, type: !1207, isLocal: true, isDefinition: true, align: 32)
!1263 = !DIGlobalVariableExpression(var: !1264, expr: !DIExpression())
!1264 = distinct !DIGlobalVariable(name: "gpio_stm32_data_a", scope: !1028, file: !1199, line: 762, type: !1265, isLocal: true, isDefinition: true)
!1265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_data", file: !1266, line: 237, size: 128, elements: !1267)
!1266 = !DIFile(filename: "zephyr/drivers/gpio/gpio_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1267 = !{!1268, !1269, !1270}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1265, file: !1266, line: 239, baseType: !1126, size: 32)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1265, file: !1266, line: 241, baseType: !1057, size: 32, offset: 32)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !1265, file: !1266, line: 243, baseType: !1271, size: 64, offset: 64)
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_slist_t", file: !1104, line: 40, baseType: !1272)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slist", file: !1104, line: 35, size: 64, elements: !1273)
!1273 = !{!1274, !1276}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1272, file: !1104, line: 36, baseType: !1275, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1272, file: !1104, line: 37, baseType: !1275, size: 32, offset: 32)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_19", scope: !1028, file: !1199, line: 762, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "gpio_stm32_data_b", scope: !1028, file: !1199, line: 766, type: !1265, isLocal: true, isDefinition: true)
!1281 = !DIGlobalVariableExpression(var: !1282, expr: !DIExpression())
!1282 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_24", scope: !1028, file: !1199, line: 766, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "gpio_stm32_data_c", scope: !1028, file: !1199, line: 770, type: !1265, isLocal: true, isDefinition: true)
!1285 = !DIGlobalVariableExpression(var: !1286, expr: !DIExpression())
!1286 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_22", scope: !1028, file: !1199, line: 770, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1287 = !DIGlobalVariableExpression(var: !1288, expr: !DIExpression())
!1288 = distinct !DIGlobalVariable(name: "gpio_stm32_data_d", scope: !1028, file: !1199, line: 774, type: !1265, isLocal: true, isDefinition: true)
!1289 = !DIGlobalVariableExpression(var: !1290, expr: !DIExpression())
!1290 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_75", scope: !1028, file: !1199, line: 774, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1291 = !DIGlobalVariableExpression(var: !1292, expr: !DIExpression())
!1292 = distinct !DIGlobalVariable(name: "gpio_stm32_data_e", scope: !1028, file: !1199, line: 778, type: !1265, isLocal: true, isDefinition: true)
!1293 = !DIGlobalVariableExpression(var: !1294, expr: !DIExpression())
!1294 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_76", scope: !1028, file: !1199, line: 778, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1295 = !DIGlobalVariableExpression(var: !1296, expr: !DIExpression())
!1296 = distinct !DIGlobalVariable(name: "gpio_stm32_data_f", scope: !1028, file: !1199, line: 782, type: !1265, isLocal: true, isDefinition: true)
!1297 = !DIGlobalVariableExpression(var: !1298, expr: !DIExpression())
!1298 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_77", scope: !1028, file: !1199, line: 782, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1299 = !DIGlobalVariableExpression(var: !1300, expr: !DIExpression())
!1300 = distinct !DIGlobalVariable(name: "gpio_stm32_data_g", scope: !1028, file: !1199, line: 786, type: !1265, isLocal: true, isDefinition: true)
!1301 = !DIGlobalVariableExpression(var: !1302, expr: !DIExpression())
!1302 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_78", scope: !1028, file: !1199, line: 786, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1303 = !DIGlobalVariableExpression(var: !1304, expr: !DIExpression())
!1304 = distinct !DIGlobalVariable(name: "gpio_stm32_data_h", scope: !1028, file: !1199, line: 790, type: !1265, isLocal: true, isDefinition: true)
!1305 = !DIGlobalVariableExpression(var: !1306, expr: !DIExpression())
!1306 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_79", scope: !1028, file: !1199, line: 790, type: !1066, isLocal: true, isDefinition: true, align: 8)
!1307 = !DIGlobalVariableExpression(var: !1308, expr: !DIExpression())
!1308 = distinct !DIGlobalVariable(name: "gpio_stm32_driver", scope: !1028, file: !1199, line: 656, type: !1050, isLocal: true, isDefinition: true)
!1309 = !DIGlobalVariableExpression(var: !1310, expr: !DIExpression())
!1310 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_b", scope: !1028, file: !1199, line: 766, type: !1311, isLocal: true, isDefinition: true)
!1311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_stm32_config", file: !1266, line: 224, size: 160, elements: !1313)
!1313 = !{!1314, !1315, !1316, !1317}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1312, file: !1266, line: 226, baseType: !1121, size: 32)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1312, file: !1266, line: 228, baseType: !884, size: 32, offset: 32)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !1312, file: !1266, line: 230, baseType: !109, size: 32, offset: 64)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1312, file: !1266, line: 231, baseType: !1318, size: 64, offset: 96)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1318, file: !880, line: 344, baseType: !110, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1318, file: !880, line: 345, baseType: !110, size: 32, offset: 32)
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_c", scope: !1028, file: !1199, line: 770, type: !1311, isLocal: true, isDefinition: true)
!1324 = !DIGlobalVariableExpression(var: !1325, expr: !DIExpression())
!1325 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_d", scope: !1028, file: !1199, line: 774, type: !1311, isLocal: true, isDefinition: true)
!1326 = !DIGlobalVariableExpression(var: !1327, expr: !DIExpression())
!1327 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_e", scope: !1028, file: !1199, line: 778, type: !1311, isLocal: true, isDefinition: true)
!1328 = !DIGlobalVariableExpression(var: !1329, expr: !DIExpression())
!1329 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_f", scope: !1028, file: !1199, line: 782, type: !1311, isLocal: true, isDefinition: true)
!1330 = !DIGlobalVariableExpression(var: !1331, expr: !DIExpression())
!1331 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_g", scope: !1028, file: !1199, line: 786, type: !1311, isLocal: true, isDefinition: true)
!1332 = !DIGlobalVariableExpression(var: !1333, expr: !DIExpression())
!1333 = distinct !DIGlobalVariable(name: "gpio_stm32_cfg_h", scope: !1028, file: !1199, line: 790, type: !1311, isLocal: true, isDefinition: true)
!1334 = !DIGlobalVariableExpression(var: !1335, expr: !DIExpression())
!1335 = distinct !DIGlobalVariable(name: "log_const_uart_stm32", scope: !1336, file: !1475, line: 44, type: !1553, isLocal: false, isDefinition: true)
!1336 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1337, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1338, retainedTypes: !1371, globals: !1472, splitDebugInlining: false, nameTableKind: None)
!1337 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!1338 = !{!30, !1339, !1346, !1353, !1360, !1366, !834}
!1339 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_rx_stop_reason", file: !968, line: 47, baseType: !32, size: 32, elements: !1340)
!1340 = !{!1341, !1342, !1343, !1344, !1345}
!1341 = !DIEnumerator(name: "UART_ERROR_OVERRUN", value: 1)
!1342 = !DIEnumerator(name: "UART_ERROR_PARITY", value: 2)
!1343 = !DIEnumerator(name: "UART_ERROR_FRAMING", value: 4)
!1344 = !DIEnumerator(name: "UART_BREAK", value: 8)
!1345 = !DIEnumerator(name: "UART_ERROR_COLLISION", value: 16)
!1346 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_parity", file: !968, line: 75, baseType: !32, size: 32, elements: !1347)
!1347 = !{!1348, !1349, !1350, !1351, !1352}
!1348 = !DIEnumerator(name: "UART_CFG_PARITY_NONE", value: 0)
!1349 = !DIEnumerator(name: "UART_CFG_PARITY_ODD", value: 1)
!1350 = !DIEnumerator(name: "UART_CFG_PARITY_EVEN", value: 2)
!1351 = !DIEnumerator(name: "UART_CFG_PARITY_MARK", value: 3)
!1352 = !DIEnumerator(name: "UART_CFG_PARITY_SPACE", value: 4)
!1353 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_data_bits", file: !968, line: 92, baseType: !32, size: 32, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359}
!1355 = !DIEnumerator(name: "UART_CFG_DATA_BITS_5", value: 0)
!1356 = !DIEnumerator(name: "UART_CFG_DATA_BITS_6", value: 1)
!1357 = !DIEnumerator(name: "UART_CFG_DATA_BITS_7", value: 2)
!1358 = !DIEnumerator(name: "UART_CFG_DATA_BITS_8", value: 3)
!1359 = !DIEnumerator(name: "UART_CFG_DATA_BITS_9", value: 4)
!1360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_stop_bits", file: !968, line: 84, baseType: !32, size: 32, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365}
!1362 = !DIEnumerator(name: "UART_CFG_STOP_BITS_0_5", value: 0)
!1363 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1", value: 1)
!1364 = !DIEnumerator(name: "UART_CFG_STOP_BITS_1_5", value: 2)
!1365 = !DIEnumerator(name: "UART_CFG_STOP_BITS_2", value: 3)
!1366 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "uart_config_flow_control", file: !968, line: 107, baseType: !32, size: 32, elements: !1367)
!1367 = !{!1368, !1369, !1370}
!1368 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_NONE", value: 0)
!1369 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_RTS_CTS", value: 1)
!1370 = !DIEnumerator(name: "UART_CFG_FLOW_CTRL_DTR_DSR", value: 2)
!1371 = !{!107, !109, !1372, !179, !178, !1421, !110, !928, !1432, !192, !111, !1471}
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 32)
!1373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1374)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_driver_api", file: !968, line: 336, size: 160, elements: !1375)
!1375 = !{!1376, !1395, !1399, !1403, !1416}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "poll_in", scope: !1374, file: !968, line: 365, baseType: !1377, size: 32)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DISubroutineType(types: !1379)
!1379 = !{!109, !1380, !989}
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387, !1393, !1394}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1382, file: !336, line: 380, baseType: !279, size: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1382, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1382, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1382, file: !336, line: 386, baseType: !1388, size: 32, offset: 96)
!1388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1389, size: 32)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1390)
!1390 = !{!1391, !1392}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1389, file: !336, line: 359, baseType: !178, size: 8)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1389, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1382, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1382, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "poll_out", scope: !1374, file: !968, line: 366, baseType: !1396, size: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 32)
!1397 = !DISubroutineType(types: !1398)
!1398 = !{null, !1380, !179}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "err_check", scope: !1374, file: !968, line: 374, baseType: !1400, size: 32, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 32)
!1401 = !DISubroutineType(types: !1402)
!1402 = !{!109, !1380}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1374, file: !968, line: 377, baseType: !1404, size: 32, offset: 96)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 32)
!1405 = !DISubroutineType(types: !1406)
!1406 = !{!109, !1380, !1407}
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1409)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_config", file: !968, line: 122, size: 64, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1415}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !1409, file: !968, line: 123, baseType: !110, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1409, file: !968, line: 124, baseType: !178, size: 8, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !1409, file: !968, line: 125, baseType: !178, size: 8, offset: 40)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !1409, file: !968, line: 126, baseType: !178, size: 8, offset: 48)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "flow_ctrl", scope: !1409, file: !968, line: 127, baseType: !178, size: 8, offset: 56)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "config_get", scope: !1374, file: !968, line: 379, baseType: !1417, size: 32, offset: 128)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!109, !1380, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 32)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "USART_TypeDef", file: !312, line: 648, baseType: !1423)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 639, size: 224, elements: !1424)
!1424 = !{!1425, !1426, !1427, !1428, !1429, !1430, !1431}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !1423, file: !312, line: 641, baseType: !316, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "DR", scope: !1423, file: !312, line: 642, baseType: !316, size: 32, offset: 32)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "BRR", scope: !1423, file: !312, line: 643, baseType: !316, size: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "CR1", scope: !1423, file: !312, line: 644, baseType: !316, size: 32, offset: 96)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "CR2", scope: !1423, file: !312, line: 645, baseType: !316, size: 32, offset: 128)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "CR3", scope: !1423, file: !312, line: 646, baseType: !316, size: 32, offset: 160)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "GTPR", scope: !1423, file: !312, line: 647, baseType: !316, size: 32, offset: 192)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1434)
!1434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clock_control_driver_api", file: !835, line: 100, size: 224, elements: !1435)
!1435 = !{!1436, !1441, !1442, !1451, !1456, !1461, !1466}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !1434, file: !835, line: 101, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control", file: !835, line: 76, baseType: !1438)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 32)
!1439 = !DISubroutineType(types: !1440)
!1440 = !{!109, !1380, !928}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !1434, file: !835, line: 102, baseType: !1437, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "async_on", scope: !1434, file: !835, line: 103, baseType: !1443, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_async_on_fn", file: !835, line: 83, baseType: !1444)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 32)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{!109, !1380, !928, !1447, !107}
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_cb_t", file: !835, line: 72, baseType: !1448)
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 32)
!1449 = !DISubroutineType(types: !1450)
!1450 = !{null, !1380, !928, !107}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "get_rate", scope: !1434, file: !835, line: 104, baseType: !1452, size: 32, offset: 96)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get", file: !835, line: 79, baseType: !1453)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 32)
!1454 = !DISubroutineType(types: !1455)
!1455 = !{!109, !1380, !928, !884}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !1434, file: !835, line: 105, baseType: !1457, size: 32, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_get_status_fn", file: !835, line: 88, baseType: !1458)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{!834, !1380, !928}
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "set_rate", scope: !1434, file: !835, line: 106, baseType: !1462, size: 32, offset: 160)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_set", file: !835, line: 92, baseType: !1463)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DISubroutineType(types: !1465)
!1465 = !{!109, !1380, !928, !954}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "configure", scope: !1434, file: !835, line: 107, baseType: !1467, size: 32, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_control_configure_fn", file: !835, line: 96, baseType: !1468)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 32)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{!109, !1380, !928, !107}
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 32)
!1472 = !{!1334, !1473, !1479, !1481, !1488, !1490, !1534, !1537, !1539, !1542, !1545, !1547}
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "__devicehdl_dts_ord_44", scope: !1336, file: !1475, line: 1914, type: !1476, isLocal: false, isDefinition: true, align: 16)
!1475 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !351, size: 128, elements: !1477)
!1477 = !{!1478}
!1478 = !DISubrange(count: 8)
!1479 = !DIGlobalVariableExpression(var: !1480, expr: !DIExpression())
!1480 = distinct !DIGlobalVariable(name: "__device_dts_ord_44", scope: !1336, file: !1475, line: 1914, type: !1381, isLocal: false, isDefinition: true, align: 32)
!1481 = !DIGlobalVariableExpression(var: !1482, expr: !DIExpression())
!1482 = distinct !DIGlobalVariable(name: "__init___device_dts_ord_44", scope: !1336, file: !1475, line: 1914, type: !1483, isLocal: true, isDefinition: true, align: 32)
!1483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1484)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1485)
!1485 = !{!1486, !1487}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1484, file: !327, line: 60, baseType: !1400, size: 32)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1484, file: !327, line: 65, baseType: !1380, size: 32, offset: 32)
!1488 = !DIGlobalVariableExpression(var: !1489, expr: !DIExpression())
!1489 = distinct !DIGlobalVariable(name: "__devstate_dts_ord_44", scope: !1336, file: !1475, line: 1914, type: !1389, isLocal: true, isDefinition: true, align: 8)
!1490 = !DIGlobalVariableExpression(var: !1491, expr: !DIExpression())
!1491 = distinct !DIGlobalVariable(name: "uart_stm32_cfg_0", scope: !1336, file: !1475, line: 1914, type: !1492, isLocal: true, isDefinition: true)
!1492 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1493)
!1493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_config", file: !1494, line: 22, size: 224, elements: !1495)
!1494 = !DIFile(filename: "zephyr/drivers/serial/uart_stm32.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1495 = !{!1496, !1497, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "usart", scope: !1493, file: !1494, line: 24, baseType: !1421, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "pclken", scope: !1493, file: !1494, line: 26, baseType: !1498, size: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1499, size: 32)
!1499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1500)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stm32_pclken", file: !880, line: 343, size: 64, elements: !1501)
!1501 = !{!1502, !1503}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1500, file: !880, line: 344, baseType: !110, size: 32)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "enr", scope: !1500, file: !880, line: 345, baseType: !110, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "pclk_len", scope: !1493, file: !1494, line: 28, baseType: !232, size: 32, offset: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "hw_flow_control", scope: !1493, file: !1494, line: 30, baseType: !347, size: 8, offset: 96)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !1493, file: !1494, line: 32, baseType: !109, size: 32, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "single_wire", scope: !1493, file: !1494, line: 34, baseType: !347, size: 8, offset: 160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "tx_rx_swap", scope: !1493, file: !1494, line: 36, baseType: !347, size: 8, offset: 168)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "rx_invert", scope: !1493, file: !1494, line: 38, baseType: !347, size: 8, offset: 176)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "tx_invert", scope: !1493, file: !1494, line: 40, baseType: !347, size: 8, offset: 184)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pcfg", scope: !1493, file: !1494, line: 41, baseType: !1512, size: 32, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 32)
!1513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1515, line: 60, size: 64, elements: !1516)
!1515 = !DIFile(filename: "zephyr/include/zephyr/drivers/pinctrl.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1516 = !{!1517, !1533}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1514, file: !1515, line: 69, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1520)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1515, line: 50, size: 64, elements: !1521)
!1521 = !{!1522, !1531, !1532}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !1520, file: !1515, line: 52, baseType: !1523, size: 32)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1524, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1525)
!1525 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1526, line: 37, baseType: !1527)
!1526 = !DIFile(filename: "zephyr/soc/arm/st_stm32/common/pinctrl_soc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1526, line: 32, size: 64, elements: !1528)
!1528 = !{!1529, !1530}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !1527, file: !1526, line: 34, baseType: !110, size: 32)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !1527, file: !1526, line: 36, baseType: !110, size: 32, offset: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !1520, file: !1515, line: 54, baseType: !178, size: 8, offset: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1520, file: !1515, line: 56, baseType: !178, size: 8, offset: 40)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !1514, file: !1515, line: 71, baseType: !178, size: 8, offset: 32)
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "pclken_0", scope: !1336, file: !1475, line: 1914, type: !1536, isLocal: true, isDefinition: true)
!1536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1499, size: 64, elements: !517)
!1537 = !DIGlobalVariableExpression(var: !1538, expr: !DIExpression())
!1538 = distinct !DIGlobalVariable(name: "__pinctrl_dev_config__device_dts_ord_44", scope: !1336, file: !1475, line: 1914, type: !1513, isLocal: true, isDefinition: true)
!1539 = !DIGlobalVariableExpression(var: !1540, expr: !DIExpression())
!1540 = distinct !DIGlobalVariable(name: "__pinctrl_states__device_dts_ord_44", scope: !1336, file: !1475, line: 1914, type: !1541, isLocal: true, isDefinition: true)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1519, size: 64, elements: !517)
!1542 = !DIGlobalVariableExpression(var: !1543, expr: !DIExpression())
!1543 = distinct !DIGlobalVariable(name: "__pinctrl_state_pins_0__device_dts_ord_44", scope: !1336, file: !1475, line: 1914, type: !1544, isLocal: true, isDefinition: true)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1524, size: 128, elements: !173)
!1545 = !DIGlobalVariableExpression(var: !1546, expr: !DIExpression())
!1546 = distinct !DIGlobalVariable(name: "uart_stm32_driver_api", scope: !1336, file: !1475, line: 1539, type: !1373, isLocal: true, isDefinition: true)
!1547 = !DIGlobalVariableExpression(var: !1548, expr: !DIExpression())
!1548 = distinct !DIGlobalVariable(name: "uart_stm32_data_0", scope: !1336, file: !1475, line: 1914, type: !1549, isLocal: true, isDefinition: true)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uart_stm32_data", file: !1494, line: 74, size: 64, elements: !1550)
!1550 = !{!1551, !1552}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "baud_rate", scope: !1549, file: !1494, line: 76, baseType: !110, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !1549, file: !1494, line: 78, baseType: !1380, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1554)
!1554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !1555)
!1555 = !{!1556, !1557}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1554, file: !291, line: 17, baseType: !279, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1554, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!1558 = !DIGlobalVariableExpression(var: !1559, expr: !DIExpression())
!1559 = distinct !DIGlobalVariable(name: "overflow_cyc", scope: !1560, file: !1636, line: 65, type: !316, isLocal: true, isDefinition: true)
!1560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1561, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1562, retainedTypes: !1563, globals: !1633, splitDebugInlining: false, nameTableKind: None)
!1561 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!1562 = !{!604}
!1563 = !{!103, !1564, !765, !178, !110, !1572, !1603}
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !1566)
!1566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !1567)
!1567 = !{!1568, !1569, !1570, !1571}
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !1566, file: !535, line: 766, baseType: !316, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !1566, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !1566, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !1566, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1573, size: 32)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1574)
!1574 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1575)
!1575 = !{!1576, !1578, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1593, !1598, !1602}
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1574, file: !535, line: 413, baseType: !1577, size: 256)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 256, elements: !1477)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1574, file: !535, line: 414, baseType: !1579, size: 768, offset: 256)
!1579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 768, elements: !1580)
!1580 = !{!1581}
!1581 = !DISubrange(count: 24)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1574, file: !535, line: 415, baseType: !1577, size: 256, offset: 1024)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1574, file: !535, line: 416, baseType: !1579, size: 768, offset: 1280)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1574, file: !535, line: 417, baseType: !1577, size: 256, offset: 2048)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1574, file: !535, line: 418, baseType: !1579, size: 768, offset: 2304)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1574, file: !535, line: 419, baseType: !1577, size: 256, offset: 3072)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1574, file: !535, line: 420, baseType: !1579, size: 768, offset: 3328)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1574, file: !535, line: 421, baseType: !1577, size: 256, offset: 4096)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1574, file: !535, line: 422, baseType: !1590, size: 1792, offset: 4352)
!1590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 1792, elements: !1591)
!1591 = !{!1592}
!1592 = !DISubrange(count: 56)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1574, file: !535, line: 423, baseType: !1594, size: 1920, offset: 6144)
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1595, size: 1920, elements: !1596)
!1595 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !178)
!1596 = !{!1597}
!1597 = !DISubrange(count: 240)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1574, file: !535, line: 424, baseType: !1599, size: 20608, offset: 8064)
!1599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 20608, elements: !1600)
!1600 = !{!1601}
!1601 = !DISubrange(count: 644)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1574, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 32)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1605)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610, !1611, !1612, !1613, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1624, !1625, !1626, !1628, !1630, !1632}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1605, file: !535, line: 447, baseType: !539, size: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1605, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1605, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1605, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1605, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1605, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1605, file: !535, line: 453, baseType: !1614, size: 96, offset: 192)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1595, size: 96, elements: !801)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1605, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1605, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1605, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1605, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1605, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1605, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1605, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1605, file: !535, line: 461, baseType: !1623, size: 64, offset: 512)
!1623 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 64, elements: !173)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1605, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1605, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1605, file: !535, line: 464, baseType: !1627, size: 128, offset: 640)
!1627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 128, elements: !707)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1605, file: !535, line: 465, baseType: !1629, size: 160, offset: 768)
!1629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 160, elements: !1233)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1605, file: !535, line: 466, baseType: !1631, size: 160, offset: 928)
!1631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !110, size: 160, elements: !1233)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1605, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1633 = !{!1634, !1660, !1665, !1667, !1669, !1558}
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "__init_sys_clock_driver_init", scope: !1560, file: !1636, line: 285, type: !1637, isLocal: true, isDefinition: true, align: 32)
!1636 = !DIFile(filename: "zephyr/drivers/timer/cortex_m_systick.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1637 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !1639)
!1639 = !{!1640, !1659}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1638, file: !327, line: 60, baseType: !1641, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1642, size: 32)
!1642 = !DISubroutineType(types: !1643)
!1643 = !{!109, !1644}
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 32)
!1645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1647)
!1647 = !{!1648, !1649, !1650, !1651, !1657, !1658}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1646, file: !336, line: 380, baseType: !279, size: 32)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1646, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1646, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1646, file: !336, line: 386, baseType: !1652, size: 32, offset: 96)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 32)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1653, file: !336, line: 359, baseType: !178, size: 8)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1653, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1646, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1646, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1638, file: !327, line: 65, baseType: !1644, size: 32, offset: 32)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "lock", scope: !1560, file: !1636, line: 34, type: !1662, isLocal: true, isDefinition: true)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !1663)
!1663 = !{!1664}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1662, file: !251, line: 52, baseType: !22, size: 32)
!1665 = !DIGlobalVariableExpression(var: !1666, expr: !DIExpression())
!1666 = distinct !DIGlobalVariable(name: "last_load", scope: !1560, file: !1636, line: 36, type: !110, isLocal: true, isDefinition: true)
!1667 = !DIGlobalVariableExpression(var: !1668, expr: !DIExpression())
!1668 = distinct !DIGlobalVariable(name: "cycle_count", scope: !1560, file: !1636, line: 48, type: !110, isLocal: true, isDefinition: true)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "announced_cycles", scope: !1560, file: !1636, line: 54, type: !110, isLocal: true, isDefinition: true)
!1671 = !DIGlobalVariableExpression(var: !1672, expr: !DIExpression())
!1672 = distinct !DIGlobalVariable(name: "gpio_ports", scope: !1673, file: !1755, line: 22, type: !1757, isLocal: true, isDefinition: true)
!1673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1674, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1675, retainedTypes: !1676, globals: !1752, splitDebugInlining: false, nameTableKind: None)
!1674 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!1675 = !{!1031, !1037}
!1676 = !{!1677, !1741, !1746, !1084, !1037, !1031, !1751, !107}
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_api", file: !1032, line: 523, size: 288, elements: !1680)
!1680 = !{!1681, !1700, !1704, !1708, !1712, !1713, !1714, !1718, !1737}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "pin_configure", scope: !1679, file: !1032, line: 524, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!109, !1685, !1072, !1073}
!1685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1686, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1687)
!1687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1688)
!1688 = !{!1689, !1690, !1691, !1692, !1698, !1699}
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1687, file: !336, line: 380, baseType: !279, size: 32)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1687, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1687, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1687, file: !336, line: 386, baseType: !1693, size: 32, offset: 96)
!1693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1694, size: 32)
!1694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1695)
!1695 = !{!1696, !1697}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1694, file: !336, line: 359, baseType: !178, size: 8)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1694, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1687, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1687, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "port_get_raw", scope: !1679, file: !1032, line: 530, baseType: !1701, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 32)
!1702 = !DISubroutineType(types: !1703)
!1703 = !{!109, !1685, !1078}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_masked_raw", scope: !1679, file: !1032, line: 532, baseType: !1705, size: 32, offset: 64)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 32)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!109, !1685, !1084, !1079}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "port_set_bits_raw", scope: !1679, file: !1032, line: 535, baseType: !1709, size: 32, offset: 96)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1710 = !DISubroutineType(types: !1711)
!1711 = !{!109, !1685, !1084}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "port_clear_bits_raw", scope: !1679, file: !1032, line: 537, baseType: !1709, size: 32, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "port_toggle_bits", scope: !1679, file: !1032, line: 539, baseType: !1709, size: 32, offset: 160)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "pin_interrupt_configure", scope: !1679, file: !1032, line: 541, baseType: !1715, size: 32, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 32)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{!109, !1685, !1072, !1031, !1037}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "manage_callback", scope: !1679, file: !1032, line: 544, baseType: !1719, size: 32, offset: 224)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{!109, !1685, !1722, !347}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 32)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_callback", file: !1032, line: 478, size: 96, elements: !1724)
!1724 = !{!1725, !1731, !1736}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1723, file: !1032, line: 482, baseType: !1726, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_snode_t", file: !1104, line: 33, baseType: !1727)
!1727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_snode", file: !1104, line: 29, size: 32, elements: !1728)
!1728 = !{!1729}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1727, file: !1104, line: 30, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1723, file: !1032, line: 485, baseType: !1732, size: 32, offset: 32)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpio_callback_handler_t", file: !1032, line: 464, baseType: !1733)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 32)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{null, !1685, !1722, !1084}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "pin_mask", scope: !1723, file: !1032, line: 493, baseType: !1084, size: 32, offset: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "get_pending_int", scope: !1679, file: !1032, line: 547, baseType: !1738, size: 32, offset: 256)
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1739, size: 32)
!1739 = !DISubroutineType(types: !1740)
!1740 = !{!110, !1685}
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1743)
!1743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_config", file: !1032, line: 428, size: 32, elements: !1744)
!1744 = !{!1745}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "port_pin_mask", scope: !1743, file: !1032, line: 434, baseType: !1084, size: 32)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 32)
!1747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1748)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_driver_data", file: !1032, line: 441, size: 32, elements: !1749)
!1749 = !{!1750}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1748, file: !1032, line: 447, baseType: !1084, size: 32)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 32)
!1752 = !{!1753, !1671}
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression(DW_OP_constu, 11, DW_OP_stack_value))
!1754 = distinct !DIGlobalVariable(name: "gpio_ports_cnt", scope: !1673, file: !1755, line: 37, type: !1756, isLocal: true, isDefinition: true)
!1755 = !DIFile(filename: "zephyr/drivers/pinctrl/pinctrl_stm32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !232)
!1757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1758, size: 352, elements: !1759)
!1758 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1685)
!1759 = !{!1760}
!1760 = !DISubrange(count: 11)
!1761 = !DIGlobalVariableExpression(var: !1762, expr: !DIExpression())
!1762 = distinct !DIGlobalVariable(name: "APBPrescTable", scope: !1763, file: !1804, line: 139, type: !1811, isLocal: false, isDefinition: true)
!1763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1764, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1765, globals: !1801, splitDebugInlining: false, nameTableKind: None)
!1764 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!1765 = !{!1766}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 32)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !1769)
!1769 = !{!1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !1768, file: !312, line: 479, baseType: !316, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !1768, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !1768, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !1768, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !1768, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !1768, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1768, file: !312, line: 485, baseType: !853, size: 64, offset: 192)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !1768, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !1768, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1768, file: !312, line: 488, baseType: !853, size: 64, offset: 320)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !1768, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !1768, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1768, file: !312, line: 491, baseType: !853, size: 64, offset: 448)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !1768, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !1768, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1768, file: !312, line: 494, baseType: !853, size: 64, offset: 576)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !1768, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !1768, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1768, file: !312, line: 497, baseType: !853, size: 64, offset: 704)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !1768, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !1768, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1768, file: !312, line: 500, baseType: !853, size: 64, offset: 832)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !1768, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !1768, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1768, file: !312, line: 503, baseType: !853, size: 64, offset: 960)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !1768, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !1768, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1768, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !1768, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !1768, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !1768, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!1801 = !{!1802, !1805, !1761}
!1802 = !DIGlobalVariableExpression(var: !1803, expr: !DIExpression())
!1803 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !1763, file: !1804, line: 137, type: !110, isLocal: false, isDefinition: true)
!1804 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/soc/system_stm32f4xx.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1805 = !DIGlobalVariableExpression(var: !1806, expr: !DIExpression())
!1806 = distinct !DIGlobalVariable(name: "AHBPrescTable", scope: !1763, file: !1804, line: 138, type: !1807, isLocal: false, isDefinition: true)
!1807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, size: 128, elements: !1809)
!1808 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!1809 = !{!1810}
!1810 = !DISubrange(count: 16)
!1811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1808, size: 64, elements: !1477)
!1812 = !DIGlobalVariableExpression(var: !1813, expr: !DIExpression())
!1813 = distinct !DIGlobalVariable(name: "_k_neg_eagain", scope: !1814, file: !1817, line: 23, type: !1818, isLocal: false, isDefinition: true)
!1814 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1815, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, globals: !1816, splitDebugInlining: false, nameTableKind: None)
!1815 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!1816 = !{!1812}
!1817 = !DIFile(filename: "zephyr/kernel/errno.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1818 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!1819 = !DIGlobalVariableExpression(var: !1820, expr: !DIExpression())
!1820 = distinct !DIGlobalVariable(name: "log_const_os", scope: !1821, file: !1825, line: 37, type: !2079, isLocal: false, isDefinition: true)
!1821 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1822, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1823, retainedTypes: !1832, globals: !1905, splitDebugInlining: false, nameTableKind: None)
!1822 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!1823 = !{!1824, !30, !604}
!1824 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "init_level", file: !1825, line: 63, baseType: !32, size: 32, elements: !1826)
!1825 = !DIFile(filename: "zephyr/kernel/init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1826 = !{!1827, !1828, !1829, !1830, !1831}
!1827 = !DIEnumerator(name: "INIT_LEVEL_EARLY", value: 0)
!1828 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_1", value: 1)
!1829 = !DIEnumerator(name: "INIT_LEVEL_PRE_KERNEL_2", value: 2)
!1830 = !DIEnumerator(name: "INIT_LEVEL_POST_KERNEL", value: 3)
!1831 = !DIEnumerator(name: "INIT_LEVEL_APPLICATION", value: 4)
!1832 = !{!232, !107, !109, !1833, !285, !110, !1863, !765, !178, !1888}
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1835)
!1835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "entropy_driver_api", file: !1836, line: 51, size: 64, elements: !1837)
!1836 = !DIFile(filename: "zephyr/include/zephyr/drivers/entropy.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!1837 = !{!1838, !1858}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy", scope: !1835, file: !1836, line: 52, baseType: !1839, size: 32)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_t", file: !1836, line: 38, baseType: !1840)
!1840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1841, size: 32)
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!109, !1843, !286, !192}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1845)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1856, !1857}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1845, file: !336, line: 380, baseType: !279, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !1845, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !1845, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1845, file: !336, line: 386, baseType: !1851, size: 32, offset: 96)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 32)
!1852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !1853)
!1853 = !{!1854, !1855}
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !1852, file: !336, line: 359, baseType: !178, size: 8)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1852, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1845, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !1845, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "get_entropy_isr", scope: !1835, file: !1836, line: 53, baseType: !1859, size: 32, offset: 32)
!1859 = !DIDerivedType(tag: DW_TAG_typedef, name: "entropy_get_entropy_isr_t", file: !1836, line: 47, baseType: !1860)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 32)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!109, !1843, !286, !192, !110}
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !1865)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1865, file: !535, line: 447, baseType: !539, size: 32)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1865, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1865, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1865, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1865, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1865, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1865, file: !535, line: 453, baseType: !1614, size: 96, offset: 192)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1865, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1865, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1865, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1865, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1865, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1865, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1865, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1865, file: !535, line: 461, baseType: !1623, size: 64, offset: 512)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1865, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1865, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1865, file: !535, line: 464, baseType: !1627, size: 128, offset: 640)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1865, file: !535, line: 465, baseType: !1629, size: 160, offset: 768)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1865, file: !535, line: 466, baseType: !1631, size: 160, offset: 928)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1865, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 32)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !1891)
!1891 = !{!1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1890, file: !535, line: 413, baseType: !1577, size: 256)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1890, file: !535, line: 414, baseType: !1579, size: 768, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1890, file: !535, line: 415, baseType: !1577, size: 256, offset: 1024)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1890, file: !535, line: 416, baseType: !1579, size: 768, offset: 1280)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1890, file: !535, line: 417, baseType: !1577, size: 256, offset: 2048)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1890, file: !535, line: 418, baseType: !1579, size: 768, offset: 2304)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1890, file: !535, line: 419, baseType: !1577, size: 256, offset: 3072)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1890, file: !535, line: 420, baseType: !1579, size: 768, offset: 3328)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1890, file: !535, line: 421, baseType: !1577, size: 256, offset: 4096)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1890, file: !535, line: 422, baseType: !1590, size: 1792, offset: 4352)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1890, file: !535, line: 423, baseType: !1594, size: 1920, offset: 6144)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1890, file: !535, line: 424, baseType: !1599, size: 20608, offset: 8064)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1890, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!1905 = !{!1819, !1906, !2032, !2039, !2041, !2044, !2049, !2051, !2056}
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "_kernel", scope: !1821, file: !1825, line: 40, type: !1908, isLocal: false, isDefinition: true)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_kernel", file: !122, line: 158, size: 288, elements: !1909)
!1909 = !{!1910, !2027}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "cpus", scope: !1908, file: !122, line: 159, baseType: !1911, size: 192)
!1911 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1912, size: 192, elements: !517)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu", file: !122, line: 100, size: 192, elements: !1913)
!1913 = !{!1914, !1915, !1916, !2020, !2021, !2022, !2023}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !1912, file: !122, line: 102, baseType: !110, size: 32)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "irq_stack", scope: !1912, file: !122, line: 105, baseType: !285, size: 32, offset: 32)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1912, file: !122, line: 108, baseType: !1917, size: 32, offset: 64)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 32)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !1919)
!1919 = !{!1920, !1978, !1990, !1991, !1992, !1993, !1994, !2000, !2015}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1918, file: !156, line: 247, baseType: !1921, size: 384)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !1922)
!1922 = !{!1923, !1947, !1954, !1955, !1956, !1965, !1966, !1967}
!1923 = !DIDerivedType(tag: DW_TAG_member, scope: !1921, file: !156, line: 60, baseType: !1924, size: 64)
!1924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1921, file: !156, line: 60, size: 64, elements: !1925)
!1925 = !{!1926, !1941}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !1924, file: !156, line: 61, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !1929)
!1929 = !{!1930, !1936}
!1930 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !127, line: 38, baseType: !1931, size: 32)
!1931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !127, line: 38, size: 32, elements: !1932)
!1932 = !{!1933, !1935}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1931, file: !127, line: 39, baseType: !1934, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1928, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1931, file: !127, line: 40, baseType: !1934, size: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, scope: !1928, file: !127, line: 42, baseType: !1937, size: 32, offset: 32)
!1937 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1928, file: !127, line: 42, size: 32, elements: !1938)
!1938 = !{!1939, !1940}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1937, file: !127, line: 43, baseType: !1934, size: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1937, file: !127, line: 44, baseType: !1934, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !1924, file: !156, line: 62, baseType: !1942, size: 64)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !1943)
!1943 = !{!1944}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1942, file: !168, line: 50, baseType: !1945, size: 64)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1946, size: 64, elements: !173)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !1921, file: !156, line: 68, baseType: !1948, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !1950)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !1951)
!1951 = !{!1952}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1950, file: !122, line: 232, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !1928)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !1921, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !1921, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!1956 = !DIDerivedType(tag: DW_TAG_member, scope: !1921, file: !156, line: 90, baseType: !1957, size: 16, offset: 112)
!1957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1921, file: !156, line: 90, size: 16, elements: !1958)
!1958 = !{!1959, !1964}
!1959 = !DIDerivedType(tag: DW_TAG_member, scope: !1957, file: !156, line: 91, baseType: !1960, size: 16)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1957, file: !156, line: 91, size: 16, elements: !1961)
!1961 = !{!1962, !1963}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1960, file: !156, line: 96, baseType: !188, size: 8)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !1960, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !1957, file: !156, line: 100, baseType: !192, size: 16)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !1921, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !1921, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1921, file: !156, line: 131, baseType: !1968, size: 192, offset: 192)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !1969)
!1969 = !{!1970, !1971, !1977}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1968, file: !122, line: 245, baseType: !1927, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1968, file: !122, line: 246, baseType: !1972, size: 32, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !1973)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1974, size: 32)
!1974 = !DISubroutineType(types: !1975)
!1975 = !{null, !1976}
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !1968, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !1918, file: !156, line: 250, baseType: !1979, size: 288, offset: 384)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !1980)
!1980 = !{!1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1979, file: !209, line: 26, baseType: !110, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1979, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1979, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1979, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !1979, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !1979, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !1979, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !1979, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !1979, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !1918, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !1918, file: !156, line: 256, baseType: !1949, size: 64, offset: 704)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1918, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !1918, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !1918, file: !156, line: 300, baseType: !1995, size: 96, offset: 1056)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !1996)
!1996 = !{!1997, !1998, !1999}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1995, file: !156, line: 153, baseType: !22, size: 32)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1995, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !1995, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !1918, file: !156, line: 325, baseType: !2001, size: 32, offset: 1152)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 32)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2003)
!2003 = !{!2004, !2010, !2011}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2002, file: !118, line: 5074, baseType: !2005, size: 96)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2006)
!2006 = !{!2007, !2008, !2009}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2005, file: !241, line: 57, baseType: !244, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2005, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2005, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2002, file: !118, line: 5075, baseType: !1949, size: 64, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2002, file: !118, line: 5076, baseType: !2012, size: 32, offset: 160)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2013)
!2013 = !{!2014}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2012, file: !251, line: 52, baseType: !22, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1918, file: !156, line: 343, baseType: !2016, size: 64, offset: 1184)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2017)
!2017 = !{!2018, !2019}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2016, file: !209, line: 63, baseType: !110, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2016, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "idle_thread", scope: !1912, file: !122, line: 111, baseType: !1917, size: 32, offset: 96)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "slice_ticks", scope: !1912, file: !122, line: 124, baseType: !109, size: 32, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1912, file: !122, line: 127, baseType: !178, size: 8, offset: 160)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1912, file: !122, line: 153, baseType: !2024, offset: 168)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_cpu_arch", file: !2025, line: 33, elements: !2026)
!2025 = !DIFile(filename: "zephyr/include/zephyr/arch/structs.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2026 = !{}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "ready_q", scope: !1908, file: !122, line: 170, baseType: !2028, size: 96, offset: 192)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2028, file: !122, line: 86, baseType: !1917, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !2028, file: !122, line: 90, baseType: !1953, size: 64, offset: 32)
!2032 = !DIGlobalVariableExpression(var: !2033, expr: !DIExpression())
!2033 = distinct !DIGlobalVariable(name: "z_main_stack", scope: !1821, file: !1825, line: 43, type: !2034, isLocal: false, isDefinition: true, align: 512)
!2034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 8704, elements: !2038)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !2036)
!2036 = !{!2037}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2035, file: !145, line: 48, baseType: !148, size: 8)
!2038 = !{!151}
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "z_main_thread", scope: !1821, file: !1825, line: 44, type: !1918, isLocal: false, isDefinition: true)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "z_idle_threads", scope: !1821, file: !1825, line: 48, type: !2043, isLocal: false, isDefinition: true)
!2043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1918, size: 1280, elements: !517)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "z_interrupt_stacks", scope: !1821, file: !1825, line: 86, type: !2046, isLocal: false, isDefinition: true, align: 512)
!2046 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 16896, elements: !2047)
!2047 = !{!518, !2048}
!2048 = !DISubrange(count: 2112)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "z_sys_post_kernel", scope: !1821, file: !1825, line: 217, type: !347, isLocal: false, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "z_idle_stacks", scope: !1821, file: !1825, line: 50, type: !2053, isLocal: true, isDefinition: true, align: 512)
!2053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 3072, elements: !2054)
!2054 = !{!518, !2055}
!2055 = !DISubrange(count: 384)
!2056 = !DIGlobalVariableExpression(var: !2057, expr: !DIExpression())
!2057 = distinct !DIGlobalVariable(name: "levels", scope: !2058, file: !1825, line: 232, type: !2078, isLocal: true, isDefinition: true)
!2058 = distinct !DISubprogram(name: "z_sys_init_run_level", scope: !1825, file: !1825, line: 230, type: !2059, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !2061)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{null, !1824}
!2061 = !{!2062, !2063, !2073, !2077}
!2062 = !DILocalVariable(name: "level", arg: 1, scope: !2058, file: !1825, line: 230, type: !1824)
!2063 = !DILocalVariable(name: "entry", scope: !2058, file: !1825, line: 244, type: !2064)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "init_entry", file: !327, line: 51, size: 64, elements: !2067)
!2067 = !{!2068, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2066, file: !327, line: 60, baseType: !2069, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 32)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{!109, !1843}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2066, file: !327, line: 65, baseType: !1843, size: 32, offset: 32)
!2073 = !DILocalVariable(name: "dev", scope: !2074, file: !1825, line: 247, type: !1843)
!2074 = distinct !DILexicalBlock(scope: !2075, file: !1825, line: 246, column: 64)
!2075 = distinct !DILexicalBlock(scope: !2076, file: !1825, line: 246, column: 2)
!2076 = distinct !DILexicalBlock(scope: !2058, file: !1825, line: 246, column: 2)
!2077 = !DILocalVariable(name: "rc", scope: !2074, file: !1825, line: 248, type: !109)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2064, size: 192, elements: !1224)
!2079 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2080)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "log_source_const_data", file: !291, line: 16, size: 64, elements: !2081)
!2081 = !{!2082, !2083}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2080, file: !291, line: 17, baseType: !279, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2080, file: !291, line: 18, baseType: !178, size: 8, offset: 32)
!2084 = !DIGlobalVariableExpression(var: !2085, expr: !DIExpression())
!2085 = distinct !DIGlobalVariable(name: "states_str", scope: !2086, file: !2087, line: 276, type: !2211, isLocal: true, isDefinition: true)
!2086 = distinct !DISubprogram(name: "k_thread_state_str", scope: !2087, file: !2087, line: 271, type: !2088, scopeLine: 272, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !2202)
!2087 = !DIFile(filename: "zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!279, !2090, !285, !232}
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2091)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2093)
!2093 = !{!2094, !2152, !2164, !2165, !2166, !2167, !2168, !2174, !2189}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2092, file: !156, line: 247, baseType: !2095, size: 384)
!2095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2096)
!2096 = !{!2097, !2121, !2128, !2129, !2130, !2139, !2140, !2141}
!2097 = !DIDerivedType(tag: DW_TAG_member, scope: !2095, file: !156, line: 60, baseType: !2098, size: 64)
!2098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2095, file: !156, line: 60, size: 64, elements: !2099)
!2099 = !{!2100, !2115}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2098, file: !156, line: 61, baseType: !2101, size: 64)
!2101 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2102)
!2102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2103)
!2103 = !{!2104, !2110}
!2104 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !127, line: 38, baseType: !2105, size: 32)
!2105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !127, line: 38, size: 32, elements: !2106)
!2106 = !{!2107, !2109}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2105, file: !127, line: 39, baseType: !2108, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2102, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2105, file: !127, line: 40, baseType: !2108, size: 32)
!2110 = !DIDerivedType(tag: DW_TAG_member, scope: !2102, file: !127, line: 42, baseType: !2111, size: 32, offset: 32)
!2111 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2102, file: !127, line: 42, size: 32, elements: !2112)
!2112 = !{!2113, !2114}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2111, file: !127, line: 43, baseType: !2108, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2111, file: !127, line: 44, baseType: !2108, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2098, file: !156, line: 62, baseType: !2116, size: 64)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2117)
!2117 = !{!2118}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2116, file: !168, line: 50, baseType: !2119, size: 64)
!2119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2120, size: 64, elements: !173)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2095, file: !156, line: 68, baseType: !2122, size: 32, offset: 64)
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2124)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2125)
!2125 = !{!2126}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2124, file: !122, line: 232, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2102)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2095, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2095, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2130 = !DIDerivedType(tag: DW_TAG_member, scope: !2095, file: !156, line: 90, baseType: !2131, size: 16, offset: 112)
!2131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2095, file: !156, line: 90, size: 16, elements: !2132)
!2132 = !{!2133, !2138}
!2133 = !DIDerivedType(tag: DW_TAG_member, scope: !2131, file: !156, line: 91, baseType: !2134, size: 16)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2131, file: !156, line: 91, size: 16, elements: !2135)
!2135 = !{!2136, !2137}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2134, file: !156, line: 96, baseType: !188, size: 8)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2134, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2131, file: !156, line: 100, baseType: !192, size: 16)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2095, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2095, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2095, file: !156, line: 131, baseType: !2142, size: 192, offset: 192)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2143)
!2143 = !{!2144, !2145, !2151}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2142, file: !122, line: 245, baseType: !2101, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2142, file: !122, line: 246, baseType: !2146, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2147)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 32)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{null, !2150}
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2142, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2092, file: !156, line: 250, baseType: !2153, size: 288, offset: 384)
!2153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2154)
!2154 = !{!2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2153, file: !209, line: 26, baseType: !110, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2153, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2153, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2153, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2153, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2153, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2153, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2153, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2153, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2092, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2092, file: !156, line: 256, baseType: !2123, size: 64, offset: 704)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2092, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2092, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2092, file: !156, line: 300, baseType: !2169, size: 96, offset: 1056)
!2169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2170)
!2170 = !{!2171, !2172, !2173}
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2169, file: !156, line: 153, baseType: !22, size: 32)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2169, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2169, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2092, file: !156, line: 325, baseType: !2175, size: 32, offset: 1152)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 32)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2177)
!2177 = !{!2178, !2184, !2185}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2176, file: !118, line: 5074, baseType: !2179, size: 96)
!2179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2180)
!2180 = !{!2181, !2182, !2183}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2179, file: !241, line: 57, baseType: !244, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2179, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2179, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2176, file: !118, line: 5075, baseType: !2123, size: 64, offset: 96)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2176, file: !118, line: 5076, baseType: !2186, size: 32, offset: 160)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2187)
!2187 = !{!2188}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2186, file: !251, line: 52, baseType: !22, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2092, file: !156, line: 343, baseType: !2190, size: 64, offset: 1184)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2191)
!2191 = !{!2192, !2193}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2190, file: !209, line: 63, baseType: !110, size: 32)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2190, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2195, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2196, globals: !2198, splitDebugInlining: false, nameTableKind: None)
!2195 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2196 = !{!107, !279, !103, !178, !22, !109, !2197, !24, !232, !285, !110, !111}
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 32)
!2198 = !{!2084, !2199}
!2199 = !DIGlobalVariableExpression(var: !2200, expr: !DIExpression())
!2200 = distinct !DIGlobalVariable(name: "states_sz", scope: !2086, file: !2087, line: 279, type: !2201, isLocal: true, isDefinition: true)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1756, size: 256, elements: !1477)
!2202 = !{!2203, !2204, !2205, !2206, !2207, !2208, !2209}
!2203 = !DILocalVariable(name: "thread_id", arg: 1, scope: !2086, file: !2087, line: 271, type: !2090)
!2204 = !DILocalVariable(name: "buf", arg: 2, scope: !2086, file: !2087, line: 271, type: !285)
!2205 = !DILocalVariable(name: "buf_size", arg: 3, scope: !2086, file: !2087, line: 271, type: !232)
!2206 = !DILocalVariable(name: "off", scope: !2086, file: !2087, line: 273, type: !232)
!2207 = !DILocalVariable(name: "bit", scope: !2086, file: !2087, line: 274, type: !178)
!2208 = !DILocalVariable(name: "thread_state", scope: !2086, file: !2087, line: 275, type: !178)
!2209 = !DILocalVariable(name: "index", scope: !2210, file: !2087, line: 293, type: !178)
!2210 = distinct !DILexicalBlock(scope: !2086, file: !2087, line: 293, column: 2)
!2211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !279, size: 256, elements: !1477)
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "lock", scope: !2214, file: !2322, line: 47, type: !2313, isLocal: true, isDefinition: true)
!2214 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2215, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2216, globals: !2321, splitDebugInlining: false, nameTableKind: None)
!2215 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2216 = !{!347, !107, !109, !2217, !2232}
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 32)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2220)
!2220 = !{!2221, !2227}
!2221 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !127, line: 38, baseType: !2222, size: 32)
!2222 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !127, line: 38, size: 32, elements: !2223)
!2223 = !{!2224, !2226}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2222, file: !127, line: 39, baseType: !2225, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 32)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2222, file: !127, line: 40, baseType: !2225, size: 32)
!2227 = !DIDerivedType(tag: DW_TAG_member, scope: !2219, file: !127, line: 42, baseType: !2228, size: 32, offset: 32)
!2228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2219, file: !127, line: 42, size: 32, elements: !2229)
!2229 = !{!2230, !2231}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2228, file: !127, line: 43, baseType: !2225, size: 32)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2228, file: !127, line: 44, baseType: !2225, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2234)
!2234 = !{!2235, !2279, !2291, !2292, !2293, !2294, !2295, !2301, !2316}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2233, file: !156, line: 247, baseType: !2236, size: 384)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2237)
!2237 = !{!2238, !2248, !2255, !2256, !2257, !2266, !2267, !2268}
!2238 = !DIDerivedType(tag: DW_TAG_member, scope: !2236, file: !156, line: 60, baseType: !2239, size: 64)
!2239 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2236, file: !156, line: 60, size: 64, elements: !2240)
!2240 = !{!2241, !2242}
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2239, file: !156, line: 61, baseType: !2218, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2239, file: !156, line: 62, baseType: !2243, size: 64)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2244)
!2244 = !{!2245}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2243, file: !168, line: 50, baseType: !2246, size: 64)
!2246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2247, size: 64, elements: !173)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2243, size: 32)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2236, file: !156, line: 68, baseType: !2249, size: 32, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2250, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2251)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2252)
!2252 = !{!2253}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2251, file: !122, line: 232, baseType: !2254, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2219)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2236, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2236, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2257 = !DIDerivedType(tag: DW_TAG_member, scope: !2236, file: !156, line: 90, baseType: !2258, size: 16, offset: 112)
!2258 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2236, file: !156, line: 90, size: 16, elements: !2259)
!2259 = !{!2260, !2265}
!2260 = !DIDerivedType(tag: DW_TAG_member, scope: !2258, file: !156, line: 91, baseType: !2261, size: 16)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2258, file: !156, line: 91, size: 16, elements: !2262)
!2262 = !{!2263, !2264}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2261, file: !156, line: 96, baseType: !188, size: 8)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2261, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2258, file: !156, line: 100, baseType: !192, size: 16)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2236, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2236, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2236, file: !156, line: 131, baseType: !2269, size: 192, offset: 192)
!2269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2270)
!2270 = !{!2271, !2272, !2278}
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2269, file: !122, line: 245, baseType: !2218, size: 64)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2269, file: !122, line: 246, baseType: !2273, size: 32, offset: 64)
!2273 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2274)
!2274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 32)
!2275 = !DISubroutineType(types: !2276)
!2276 = !{null, !2277}
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 32)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2269, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2233, file: !156, line: 250, baseType: !2280, size: 288, offset: 384)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2280, file: !209, line: 26, baseType: !110, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2280, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2280, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2280, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2280, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2280, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2280, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2280, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2280, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2233, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2233, file: !156, line: 256, baseType: !2250, size: 64, offset: 704)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2233, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2233, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2233, file: !156, line: 300, baseType: !2296, size: 96, offset: 1056)
!2296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2297)
!2297 = !{!2298, !2299, !2300}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2296, file: !156, line: 153, baseType: !22, size: 32)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2296, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2296, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2233, file: !156, line: 325, baseType: !2302, size: 32, offset: 1152)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 32)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2304)
!2304 = !{!2305, !2311, !2312}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2303, file: !118, line: 5074, baseType: !2306, size: 96)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2307)
!2307 = !{!2308, !2309, !2310}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2306, file: !241, line: 57, baseType: !244, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2306, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2306, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2303, file: !118, line: 5075, baseType: !2250, size: 64, offset: 96)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2303, file: !118, line: 5076, baseType: !2313, size: 32, offset: 160)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2314)
!2314 = !{!2315}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2313, file: !251, line: 52, baseType: !22, size: 32)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2233, file: !156, line: 343, baseType: !2317, size: 64, offset: 1184)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2318)
!2318 = !{!2319, !2320}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2317, file: !209, line: 63, baseType: !110, size: 32)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2317, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2321 = !{!2212}
!2322 = !DIFile(filename: "zephyr/kernel/mutex.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2323 = !DIGlobalVariableExpression(var: !2324, expr: !DIExpression())
!2324 = distinct !DIGlobalVariable(name: "sched_spinlock", scope: !2325, file: !2436, line: 56, type: !2423, isLocal: false, isDefinition: true)
!2325 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2326, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2327, globals: !2433, splitDebugInlining: false, nameTableKind: None)
!2326 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2327 = !{!2328, !285, !107, !2431, !286, !103, !765, !109, !110, !111, !2432}
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 32)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !2330)
!2330 = !{!2331, !2389, !2401, !2402, !2403, !2404, !2405, !2411, !2426}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2329, file: !156, line: 247, baseType: !2332, size: 384)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !2333)
!2333 = !{!2334, !2358, !2365, !2366, !2367, !2376, !2377, !2378}
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !156, line: 60, baseType: !2335, size: 64)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !156, line: 60, size: 64, elements: !2336)
!2336 = !{!2337, !2352}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2335, file: !156, line: 61, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2339)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2340)
!2340 = !{!2341, !2347}
!2341 = !DIDerivedType(tag: DW_TAG_member, scope: !2339, file: !127, line: 38, baseType: !2342, size: 32)
!2342 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2339, file: !127, line: 38, size: 32, elements: !2343)
!2343 = !{!2344, !2346}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2342, file: !127, line: 39, baseType: !2345, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2339, size: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2342, file: !127, line: 40, baseType: !2345, size: 32)
!2347 = !DIDerivedType(tag: DW_TAG_member, scope: !2339, file: !127, line: 42, baseType: !2348, size: 32, offset: 32)
!2348 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2339, file: !127, line: 42, size: 32, elements: !2349)
!2349 = !{!2350, !2351}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2348, file: !127, line: 43, baseType: !2345, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2348, file: !127, line: 44, baseType: !2345, size: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2335, file: !156, line: 62, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !2354)
!2354 = !{!2355}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2353, file: !168, line: 50, baseType: !2356, size: 64)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2357, size: 64, elements: !173)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2332, file: !156, line: 68, baseType: !2359, size: 32, offset: 64)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !2361)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !2362)
!2362 = !{!2363}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2361, file: !122, line: 232, baseType: !2364, size: 64)
!2364 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2339)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2332, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2332, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!2367 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !156, line: 90, baseType: !2368, size: 16, offset: 112)
!2368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !156, line: 90, size: 16, elements: !2369)
!2369 = !{!2370, !2375}
!2370 = !DIDerivedType(tag: DW_TAG_member, scope: !2368, file: !156, line: 91, baseType: !2371, size: 16)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2368, file: !156, line: 91, size: 16, elements: !2372)
!2372 = !{!2373, !2374}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2371, file: !156, line: 96, baseType: !188, size: 8)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2371, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2368, file: !156, line: 100, baseType: !192, size: 16)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2332, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2332, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2332, file: !156, line: 131, baseType: !2379, size: 192, offset: 192)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2380)
!2380 = !{!2381, !2382, !2388}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2379, file: !122, line: 245, baseType: !2338, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2379, file: !122, line: 246, baseType: !2383, size: 32, offset: 64)
!2383 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2384)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 32)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{null, !2387}
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2379, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2329, file: !156, line: 250, baseType: !2390, size: 288, offset: 384)
!2390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !2391)
!2391 = !{!2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2390, file: !209, line: 26, baseType: !110, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2390, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2390, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2390, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2390, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2390, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2390, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2390, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2390, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2329, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !2329, file: !156, line: 256, baseType: !2360, size: 64, offset: 704)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2329, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2329, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2329, file: !156, line: 300, baseType: !2406, size: 96, offset: 1056)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !2407)
!2407 = !{!2408, !2409, !2410}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2406, file: !156, line: 153, baseType: !22, size: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2406, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2406, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2329, file: !156, line: 325, baseType: !2412, size: 32, offset: 1152)
!2412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !2414)
!2414 = !{!2415, !2421, !2422}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2413, file: !118, line: 5074, baseType: !2416, size: 96)
!2416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !2417)
!2417 = !{!2418, !2419, !2420}
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2416, file: !241, line: 57, baseType: !244, size: 32)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2416, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2416, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2413, file: !118, line: 5075, baseType: !2360, size: 64, offset: 96)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2413, file: !118, line: 5076, baseType: !2423, size: 32, offset: 160)
!2423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2424)
!2424 = !{!2425}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2423, file: !251, line: 52, baseType: !22, size: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2329, file: !156, line: 343, baseType: !2427, size: 64, offset: 1184)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !2428)
!2428 = !{!2429, !2430}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2427, file: !209, line: 63, baseType: !110, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2427, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2357, size: 32)
!2432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2433 = !{!2323, !2434, !2437, !2439}
!2434 = !DIGlobalVariableExpression(var: !2435, expr: !DIExpression())
!2435 = distinct !DIGlobalVariable(name: "slice_ticks", scope: !2325, file: !2436, line: 404, type: !109, isLocal: true, isDefinition: true)
!2436 = !DIFile(filename: "zephyr/kernel/sched.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2437 = !DIGlobalVariableExpression(var: !2438, expr: !DIExpression())
!2438 = distinct !DIGlobalVariable(name: "slice_max_prio", scope: !2325, file: !2436, line: 405, type: !109, isLocal: true, isDefinition: true)
!2439 = !DIGlobalVariableExpression(var: !2440, expr: !DIExpression())
!2440 = distinct !DIGlobalVariable(name: "pending_current", scope: !2325, file: !2436, line: 425, type: !2328, isLocal: true, isDefinition: true)
!2441 = !DIGlobalVariableExpression(var: !2442, expr: !DIExpression())
!2442 = distinct !DIGlobalVariable(name: "lock", scope: !2443, file: !2462, line: 14, type: !2463, isLocal: true, isDefinition: true)
!2443 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2444, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2445, globals: !2461, splitDebugInlining: false, nameTableKind: None)
!2444 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2445 = !{!107, !103, !109, !2446}
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2448)
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2449)
!2449 = !{!2450, !2456}
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !127, line: 38, baseType: !2451, size: 32)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2448, file: !127, line: 38, size: 32, elements: !2452)
!2452 = !{!2453, !2455}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2451, file: !127, line: 39, baseType: !2454, size: 32)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2451, file: !127, line: 40, baseType: !2454, size: 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, scope: !2448, file: !127, line: 42, baseType: !2457, size: 32, offset: 32)
!2457 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2448, file: !127, line: 42, size: 32, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2457, file: !127, line: 43, baseType: !2454, size: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2457, file: !127, line: 44, baseType: !2454, size: 32)
!2461 = !{!2441}
!2462 = !DIFile(filename: "zephyr/kernel/condvar.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2464)
!2464 = !{!2465}
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2463, file: !251, line: 52, baseType: !22, size: 32)
!2466 = !DIGlobalVariableExpression(var: !2467, expr: !DIExpression())
!2467 = distinct !DIGlobalVariable(name: "timeout_lock", scope: !2468, file: !2498, line: 19, type: !2504, isLocal: true, isDefinition: true)
!2468 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2469, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2470, globals: !2495, splitDebugInlining: false, nameTableKind: None)
!2469 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2470 = !{!103, !107, !765, !110, !111, !109, !2471, !285, !105}
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 32)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !2473)
!2473 = !{!2474, !2489, !2494}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2472, file: !122, line: 245, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !2476)
!2476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !2477)
!2477 = !{!2478, !2484}
!2478 = !DIDerivedType(tag: DW_TAG_member, scope: !2476, file: !127, line: 38, baseType: !2479, size: 32)
!2479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2476, file: !127, line: 38, size: 32, elements: !2480)
!2480 = !{!2481, !2483}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2479, file: !127, line: 39, baseType: !2482, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 32)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2479, file: !127, line: 40, baseType: !2482, size: 32)
!2484 = !DIDerivedType(tag: DW_TAG_member, scope: !2476, file: !127, line: 42, baseType: !2485, size: 32, offset: 32)
!2485 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2476, file: !127, line: 42, size: 32, elements: !2486)
!2486 = !{!2487, !2488}
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2485, file: !127, line: 43, baseType: !2482, size: 32)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2485, file: !127, line: 44, baseType: !2482, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2472, file: !122, line: 246, baseType: !2490, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !2491)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 32)
!2492 = !DISubroutineType(types: !2493)
!2493 = !{null, !2471}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2472, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!2495 = !{!2496, !2466, !2499, !2501}
!2496 = !DIGlobalVariableExpression(var: !2497, expr: !DIExpression())
!2497 = distinct !DIGlobalVariable(name: "curr_tick", scope: !2468, file: !2498, line: 15, type: !111, isLocal: true, isDefinition: true)
!2498 = !DIFile(filename: "zephyr/kernel/timeout.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2499 = !DIGlobalVariableExpression(var: !2500, expr: !DIExpression())
!2500 = distinct !DIGlobalVariable(name: "announce_remaining", scope: !2468, file: !2498, line: 25, type: !109, isLocal: true, isDefinition: true)
!2501 = !DIGlobalVariableExpression(var: !2502, expr: !DIExpression())
!2502 = distinct !DIGlobalVariable(name: "timeout_list", scope: !2468, file: !2498, line: 17, type: !2503, isLocal: true, isDefinition: true)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2476)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !2505)
!2505 = !{!2506}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2504, file: !251, line: 52, baseType: !22, size: 32)
!2507 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2508, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2508 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2509 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2510, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2510 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2513, retainedTypes: !2533, splitDebugInlining: false, nameTableKind: None)
!2512 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2513 = !{!2514, !2522}
!2514 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "specifier_cat_enum", file: !2515, line: 69, baseType: !32, size: 32, elements: !2516)
!2515 = !DIFile(filename: "zephyr/lib/os/cbprintf_complete.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2516 = !{!2517, !2518, !2519, !2520, !2521}
!2517 = !DIEnumerator(name: "SPECIFIER_INVALID", value: 0)
!2518 = !DIEnumerator(name: "SPECIFIER_SINT", value: 1)
!2519 = !DIEnumerator(name: "SPECIFIER_UINT", value: 2)
!2520 = !DIEnumerator(name: "SPECIFIER_PTR", value: 3)
!2521 = !DIEnumerator(name: "SPECIFIER_FP", value: 4)
!2522 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "length_mod_enum", file: !2515, line: 56, baseType: !32, size: 32, elements: !2523)
!2523 = !{!2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532}
!2524 = !DIEnumerator(name: "LENGTH_NONE", value: 0)
!2525 = !DIEnumerator(name: "LENGTH_HH", value: 1)
!2526 = !DIEnumerator(name: "LENGTH_H", value: 2)
!2527 = !DIEnumerator(name: "LENGTH_L", value: 3)
!2528 = !DIEnumerator(name: "LENGTH_LL", value: 4)
!2529 = !DIEnumerator(name: "LENGTH_J", value: 5)
!2530 = !DIEnumerator(name: "LENGTH_Z", value: 6)
!2531 = !DIEnumerator(name: "LENGTH_T", value: 7)
!2532 = !DIEnumerator(name: "LENGTH_UPPER_L", value: 8)
!2533 = !{!109, !2514, !2522, !2534, !189, !354, !2536, !2537, !179, !193, !279, !232, !107, !22, !32, !281, !2539, !2540, !102, !282, !106, !283, !2535, !2541, !2542, !2543, !2544}
!2534 = !DIDerivedType(tag: DW_TAG_typedef, name: "sint_value_type", file: !2515, line: 31, baseType: !2535)
!2535 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !23, line: 76, baseType: !106)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !233, line: 329, baseType: !32)
!2537 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_value_type", file: !2515, line: 32, baseType: !2538)
!2538 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !23, line: 92, baseType: !112)
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 32)
!2541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2535, size: 32)
!2542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !232, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !233, line: 145, baseType: !109)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2543, size: 32)
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2546 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2548 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple/zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2550, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2551, splitDebugInlining: false, nameTableKind: None)
!2550 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2551 = !{!279, !179, !109, !32}
!2552 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2553, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2554, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2553 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2554 = !{!2555, !30}
!2555 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_fatal_error_reason", file: !2556, line: 27, baseType: !32, size: 32, elements: !2557)
!2556 = !DIFile(filename: "zephyr/include/zephyr/fatal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2557 = !{!2558, !2559, !2560, !2561, !2562}
!2558 = !DIEnumerator(name: "K_ERR_CPU_EXCEPTION", value: 0)
!2559 = !DIEnumerator(name: "K_ERR_SPURIOUS_IRQ", value: 1)
!2560 = !DIEnumerator(name: "K_ERR_STACK_CHK_FAIL", value: 2)
!2561 = !DIEnumerator(name: "K_ERR_KERNEL_OOPS", value: 3)
!2562 = !DIEnumerator(name: "K_ERR_KERNEL_PANIC", value: 4)
!2563 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2564, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2565, retainedTypes: !2566, splitDebugInlining: false, nameTableKind: None)
!2564 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2565 = !{!604, !2555, !30}
!2566 = !{!791, !2567, !107, !109, !765, !110, !178, !2584}
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 32)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2569)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2570)
!2570 = !{!2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2569, file: !535, line: 413, baseType: !1577, size: 256)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2569, file: !535, line: 414, baseType: !1579, size: 768, offset: 256)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2569, file: !535, line: 415, baseType: !1577, size: 256, offset: 1024)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2569, file: !535, line: 416, baseType: !1579, size: 768, offset: 1280)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2569, file: !535, line: 417, baseType: !1577, size: 256, offset: 2048)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2569, file: !535, line: 418, baseType: !1579, size: 768, offset: 2304)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2569, file: !535, line: 419, baseType: !1577, size: 256, offset: 3072)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2569, file: !535, line: 420, baseType: !1579, size: 768, offset: 3328)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2569, file: !535, line: 421, baseType: !1577, size: 256, offset: 4096)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2569, file: !535, line: 422, baseType: !1590, size: 1792, offset: 4352)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2569, file: !535, line: 423, baseType: !1594, size: 1920, offset: 6144)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2569, file: !535, line: 424, baseType: !1599, size: 20608, offset: 8064)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2569, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2585, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2586)
!2586 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2587)
!2587 = !{!2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2586, file: !535, line: 447, baseType: !539, size: 32)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2586, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2586, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2586, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2586, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2586, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2586, file: !535, line: 453, baseType: !1614, size: 96, offset: 192)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2586, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2586, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2586, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2586, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2586, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2586, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2586, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2586, file: !535, line: 461, baseType: !1623, size: 64, offset: 512)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2586, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2586, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2586, file: !535, line: 464, baseType: !1627, size: 128, offset: 640)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2586, file: !535, line: 465, baseType: !1629, size: 160, offset: 768)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2586, file: !535, line: 466, baseType: !1631, size: 160, offset: 928)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2586, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2610, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!2610 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2611 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2612, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2613, splitDebugInlining: false, nameTableKind: None)
!2612 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2613 = !{!107, !109, !22, !2614}
!2614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2615, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2616)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2617)
!2617 = !{!2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2616, file: !535, line: 447, baseType: !539, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2616, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2616, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2616, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2616, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2616, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2616, file: !535, line: 453, baseType: !1614, size: 96, offset: 192)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2616, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2616, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2616, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2616, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2616, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2616, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2616, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2616, file: !535, line: 461, baseType: !1623, size: 64, offset: 512)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2616, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2616, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2616, file: !535, line: 464, baseType: !1627, size: 128, offset: 640)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2616, file: !535, line: 465, baseType: !1629, size: 160, offset: 768)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2616, file: !535, line: 466, baseType: !1631, size: 160, offset: 928)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2616, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2639 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2640, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2641, splitDebugInlining: false, nameTableKind: None)
!2640 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2641 = !{!2642, !107, !109}
!2642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2643, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2644)
!2644 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2644, file: !535, line: 447, baseType: !539, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2644, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2644, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2644, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2644, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2644, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2644, file: !535, line: 453, baseType: !1614, size: 96, offset: 192)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2644, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2644, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2644, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2644, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2644, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2644, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2644, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2644, file: !535, line: 461, baseType: !1623, size: 64, offset: 512)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2644, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2644, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2644, file: !535, line: 464, baseType: !1627, size: 128, offset: 640)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2644, file: !535, line: 465, baseType: !1629, size: 160, offset: 768)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2644, file: !535, line: 466, baseType: !1631, size: 160, offset: 928)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2644, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2668, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2669, splitDebugInlining: false, nameTableKind: None)
!2668 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2669 = !{!2670, !110, !107, !109}
!2670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2671, size: 32)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2672, line: 98, size: 256, elements: !2673)
!2672 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2673 = !{!2674, !2679, !2684, !2689, !2694, !2699, !2704, !2709}
!2674 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !2672, line: 99, baseType: !2675, size: 32)
!2675 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !2672, line: 99, size: 32, elements: !2676)
!2676 = !{!2677, !2678}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2675, file: !2672, line: 99, baseType: !110, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2675, file: !2672, line: 99, baseType: !110, size: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !2672, line: 100, baseType: !2680, size: 32, offset: 32)
!2680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !2672, line: 100, size: 32, elements: !2681)
!2681 = !{!2682, !2683}
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2680, file: !2672, line: 100, baseType: !110, size: 32)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2680, file: !2672, line: 100, baseType: !110, size: 32)
!2684 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !2672, line: 101, baseType: !2685, size: 32, offset: 64)
!2685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !2672, line: 101, size: 32, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2685, file: !2672, line: 101, baseType: !110, size: 32)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2685, file: !2672, line: 101, baseType: !110, size: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !2672, line: 102, baseType: !2690, size: 32, offset: 96)
!2690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !2672, line: 102, size: 32, elements: !2691)
!2691 = !{!2692, !2693}
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2690, file: !2672, line: 102, baseType: !110, size: 32)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2690, file: !2672, line: 102, baseType: !110, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !2672, line: 103, baseType: !2695, size: 32, offset: 128)
!2695 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !2672, line: 103, size: 32, elements: !2696)
!2696 = !{!2697, !2698}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2695, file: !2672, line: 103, baseType: !110, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2695, file: !2672, line: 103, baseType: !110, size: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !2672, line: 104, baseType: !2700, size: 32, offset: 160)
!2700 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !2672, line: 104, size: 32, elements: !2701)
!2701 = !{!2702, !2703}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2700, file: !2672, line: 104, baseType: !110, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2700, file: !2672, line: 104, baseType: !110, size: 32)
!2704 = !DIDerivedType(tag: DW_TAG_member, scope: !2671, file: !2672, line: 105, baseType: !2705, size: 32, offset: 192)
!2705 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2671, file: !2672, line: 105, size: 32, elements: !2706)
!2706 = !{!2707, !2708}
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2705, file: !2672, line: 105, baseType: !110, size: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2705, file: !2672, line: 105, baseType: !110, size: 32)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2671, file: !2672, line: 106, baseType: !110, size: 32, offset: 224)
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2554, retainedTypes: !2712, splitDebugInlining: false, nameTableKind: None)
!2711 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2712 = !{!2713, !107, !109, !2738, !2781, !110}
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 32)
!2714 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2715)
!2715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2716)
!2716 = !{!2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737}
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2715, file: !535, line: 447, baseType: !539, size: 32)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2715, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2715, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2715, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2715, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2715, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2715, file: !535, line: 453, baseType: !1614, size: 96, offset: 192)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2715, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2715, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2715, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2715, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2715, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2715, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2715, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2715, file: !535, line: 461, baseType: !1623, size: 64, offset: 512)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2715, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2715, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2715, file: !535, line: 464, baseType: !1627, size: 128, offset: 640)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2715, file: !535, line: 465, baseType: !1629, size: 160, offset: 768)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2715, file: !535, line: 466, baseType: !1631, size: 160, offset: 928)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2715, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2739, size: 32)
!2739 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2672, line: 141, baseType: !2740)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2672, line: 97, size: 256, elements: !2741)
!2741 = !{!2742}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !2740, file: !2672, line: 107, baseType: !2743, size: 256)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2672, line: 98, size: 256, elements: !2744)
!2744 = !{!2745, !2750, !2755, !2760, !2765, !2770, !2775, !2780}
!2745 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2672, line: 99, baseType: !2746, size: 32)
!2746 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !2672, line: 99, size: 32, elements: !2747)
!2747 = !{!2748, !2749}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !2746, file: !2672, line: 99, baseType: !110, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !2746, file: !2672, line: 99, baseType: !110, size: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2672, line: 100, baseType: !2751, size: 32, offset: 32)
!2751 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !2672, line: 100, size: 32, elements: !2752)
!2752 = !{!2753, !2754}
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !2751, file: !2672, line: 100, baseType: !110, size: 32)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !2751, file: !2672, line: 100, baseType: !110, size: 32)
!2755 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2672, line: 101, baseType: !2756, size: 32, offset: 64)
!2756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !2672, line: 101, size: 32, elements: !2757)
!2757 = !{!2758, !2759}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !2756, file: !2672, line: 101, baseType: !110, size: 32)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !2756, file: !2672, line: 101, baseType: !110, size: 32)
!2760 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2672, line: 102, baseType: !2761, size: 32, offset: 96)
!2761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !2672, line: 102, size: 32, elements: !2762)
!2762 = !{!2763, !2764}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !2761, file: !2672, line: 102, baseType: !110, size: 32)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !2761, file: !2672, line: 102, baseType: !110, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2672, line: 103, baseType: !2766, size: 32, offset: 128)
!2766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !2672, line: 103, size: 32, elements: !2767)
!2767 = !{!2768, !2769}
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2766, file: !2672, line: 103, baseType: !110, size: 32)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2766, file: !2672, line: 103, baseType: !110, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2672, line: 104, baseType: !2771, size: 32, offset: 160)
!2771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !2672, line: 104, size: 32, elements: !2772)
!2772 = !{!2773, !2774}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !2771, file: !2672, line: 104, baseType: !110, size: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2771, file: !2672, line: 104, baseType: !110, size: 32)
!2775 = !DIDerivedType(tag: DW_TAG_member, scope: !2743, file: !2672, line: 105, baseType: !2776, size: 32, offset: 192)
!2776 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2743, file: !2672, line: 105, size: 32, elements: !2777)
!2777 = !{!2778, !2779}
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !2776, file: !2672, line: 105, baseType: !110, size: 32)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2776, file: !2672, line: 105, baseType: !110, size: 32)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !2743, file: !2672, line: 106, baseType: !110, size: 32, offset: 224)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 32)
!2782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1562, retainedTypes: !2784, splitDebugInlining: false, nameTableKind: None)
!2783 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2784 = !{!791, !765, !178, !110, !2785, !2802}
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 32)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !535, line: 426, baseType: !2787)
!2787 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 411, size: 28704, elements: !2788)
!2788 = !{!2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2787, file: !535, line: 413, baseType: !1577, size: 256)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2787, file: !535, line: 414, baseType: !1579, size: 768, offset: 256)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2787, file: !535, line: 415, baseType: !1577, size: 256, offset: 1024)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2787, file: !535, line: 416, baseType: !1579, size: 768, offset: 1280)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2787, file: !535, line: 417, baseType: !1577, size: 256, offset: 2048)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2787, file: !535, line: 418, baseType: !1579, size: 768, offset: 2304)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2787, file: !535, line: 419, baseType: !1577, size: 256, offset: 3072)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2787, file: !535, line: 420, baseType: !1579, size: 768, offset: 3328)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2787, file: !535, line: 421, baseType: !1577, size: 256, offset: 4096)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2787, file: !535, line: 422, baseType: !1590, size: 1792, offset: 4352)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2787, file: !535, line: 423, baseType: !1594, size: 1920, offset: 6144)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2787, file: !535, line: 424, baseType: !1599, size: 20608, offset: 8064)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2787, file: !535, line: 425, baseType: !316, size: 32, offset: 28672)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 32)
!2803 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2804)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2805)
!2805 = !{!2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2804, file: !535, line: 447, baseType: !539, size: 32)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2804, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2804, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2804, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2804, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2804, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2804, file: !535, line: 453, baseType: !1614, size: 96, offset: 192)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2804, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2804, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2804, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2804, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2804, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2804, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2804, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2804, file: !535, line: 461, baseType: !1623, size: 64, offset: 512)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2804, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2804, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2804, file: !535, line: 464, baseType: !1627, size: 128, offset: 640)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2804, file: !535, line: 465, baseType: !1629, size: 160, offset: 768)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2804, file: !535, line: 466, baseType: !1631, size: 160, offset: 928)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2804, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2827 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2828, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !2829, splitDebugInlining: false, nameTableKind: None)
!2828 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2829 = !{!2830, !107, !109}
!2830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2831, size: 32)
!2831 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !535, line: 468, baseType: !2832)
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 445, size: 1120, elements: !2833)
!2833 = !{!2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2832, file: !535, line: 447, baseType: !539, size: 32)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2832, file: !535, line: 448, baseType: !316, size: 32, offset: 32)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2832, file: !535, line: 449, baseType: !316, size: 32, offset: 64)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2832, file: !535, line: 450, baseType: !316, size: 32, offset: 96)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2832, file: !535, line: 451, baseType: !316, size: 32, offset: 128)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2832, file: !535, line: 452, baseType: !316, size: 32, offset: 160)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2832, file: !535, line: 453, baseType: !1614, size: 96, offset: 192)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2832, file: !535, line: 454, baseType: !316, size: 32, offset: 288)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2832, file: !535, line: 455, baseType: !316, size: 32, offset: 320)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2832, file: !535, line: 456, baseType: !316, size: 32, offset: 352)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2832, file: !535, line: 457, baseType: !316, size: 32, offset: 384)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2832, file: !535, line: 458, baseType: !316, size: 32, offset: 416)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2832, file: !535, line: 459, baseType: !316, size: 32, offset: 448)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2832, file: !535, line: 460, baseType: !316, size: 32, offset: 480)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2832, file: !535, line: 461, baseType: !1623, size: 64, offset: 512)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2832, file: !535, line: 462, baseType: !539, size: 32, offset: 576)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2832, file: !535, line: 463, baseType: !539, size: 32, offset: 608)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2832, file: !535, line: 464, baseType: !1627, size: 128, offset: 640)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2832, file: !535, line: 465, baseType: !1629, size: 160, offset: 768)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2832, file: !535, line: 466, baseType: !1631, size: 160, offset: 928)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2832, file: !535, line: 467, baseType: !316, size: 32, offset: 1088)
!2855 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2856, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2857, splitDebugInlining: false, nameTableKind: None)
!2856 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2857 = !{!148, !285, !232, !989, !2858, !179, !107}
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 32)
!2859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !179)
!2860 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2861, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2862, splitDebugInlining: false, nameTableKind: None)
!2861 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2862 = !{!2863}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 32)
!2864 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !2865)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2865, file: !312, line: 479, baseType: !316, size: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2865, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2865, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2865, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2865, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2865, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2865, file: !312, line: 485, baseType: !853, size: 64, offset: 192)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2865, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2865, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2865, file: !312, line: 488, baseType: !853, size: 64, offset: 320)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2865, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2865, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2865, file: !312, line: 491, baseType: !853, size: 64, offset: 448)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2865, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2865, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2865, file: !312, line: 494, baseType: !853, size: 64, offset: 576)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2865, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2865, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2865, file: !312, line: 497, baseType: !853, size: 64, offset: 704)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2865, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2865, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2865, file: !312, line: 500, baseType: !853, size: 64, offset: 832)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2865, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2865, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2865, file: !312, line: 503, baseType: !853, size: 64, offset: 960)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2865, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2865, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2865, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2865, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2865, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2865, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!2898 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2899, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2899 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2902, retainedTypes: !2918, splitDebugInlining: false, nameTableKind: None)
!2901 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2902 = !{!2903, !2910, !2914}
!2903 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2904, line: 38, baseType: !32, size: 32, elements: !2905)
!2904 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_def.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!2905 = !{!2906, !2907, !2908, !2909}
!2906 = !DIEnumerator(name: "HAL_OK", value: 0)
!2907 = !DIEnumerator(name: "HAL_ERROR", value: 1)
!2908 = !DIEnumerator(name: "HAL_BUSY", value: 2)
!2909 = !DIEnumerator(name: "HAL_TIMEOUT", value: 3)
!2910 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !830, line: 184, baseType: !32, size: 32, elements: !2911)
!2911 = !{!2912, !2913}
!2912 = !DIEnumerator(name: "RESET", value: 0)
!2913 = !DIEnumerator(name: "SET", value: 1)
!2914 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !830, line: 190, baseType: !32, size: 32, elements: !2915)
!2915 = !{!2916, !2917}
!2916 = !DIEnumerator(name: "DISABLE", value: 0)
!2917 = !DIEnumerator(name: "ENABLE", value: 1)
!2918 = !{!107, !2919, !178, !110, !1471, !2954, !2960, !2971, !192, !2972, !111}
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !2922)
!2922 = !{!2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2921, file: !312, line: 479, baseType: !316, size: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !2921, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !2921, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !2921, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !2921, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !2921, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2921, file: !312, line: 485, baseType: !853, size: 64, offset: 192)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !2921, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !2921, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2921, file: !312, line: 488, baseType: !853, size: 64, offset: 320)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !2921, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !2921, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2921, file: !312, line: 491, baseType: !853, size: 64, offset: 448)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !2921, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !2921, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2921, file: !312, line: 494, baseType: !853, size: 64, offset: 576)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !2921, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !2921, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2921, file: !312, line: 497, baseType: !853, size: 64, offset: 704)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !2921, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !2921, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2921, file: !312, line: 500, baseType: !853, size: 64, offset: 832)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !2921, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2921, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2921, file: !312, line: 503, baseType: !853, size: 64, offset: 960)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !2921, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !2921, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2921, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !2921, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !2921, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !2921, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 32)
!2955 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 471, baseType: !2956)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 467, size: 64, elements: !2957)
!2957 = !{!2958, !2959}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2956, file: !312, line: 469, baseType: !316, size: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2956, file: !312, line: 470, baseType: !316, size: 32, offset: 32)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 32)
!2961 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 379, baseType: !2962)
!2962 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 224, elements: !2963)
!2963 = !{!2964, !2965, !2966, !2967, !2968, !2969, !2970}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !2962, file: !312, line: 372, baseType: !316, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !2962, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !2962, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !2962, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2962, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !2962, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !2962, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 32)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 32)
!2973 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TypeDef", file: !312, line: 396, baseType: !2974)
!2974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 385, size: 320, elements: !2975)
!2975 = !{!2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "MODER", scope: !2974, file: !312, line: 387, baseType: !316, size: 32)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "OTYPER", scope: !2974, file: !312, line: 388, baseType: !316, size: 32, offset: 32)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "OSPEEDR", scope: !2974, file: !312, line: 389, baseType: !316, size: 32, offset: 64)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "PUPDR", scope: !2974, file: !312, line: 390, baseType: !316, size: 32, offset: 96)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "IDR", scope: !2974, file: !312, line: 391, baseType: !316, size: 32, offset: 128)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "ODR", scope: !2974, file: !312, line: 392, baseType: !316, size: 32, offset: 160)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "BSRR", scope: !2974, file: !312, line: 393, baseType: !316, size: 32, offset: 192)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "LCKR", scope: !2974, file: !312, line: 394, baseType: !316, size: 32, offset: 224)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "AFR", scope: !2974, file: !312, line: 395, baseType: !1143, size: 64, offset: 256)
!2985 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2986, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2987, retainedTypes: !2988, splitDebugInlining: false, nameTableKind: None)
!2986 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!2987 = !{!829}
!2988 = !{!2989, !110, !2997, !3003, !3014}
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 32)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !535, line: 770, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !535, line: 764, size: 128, elements: !2992)
!2992 = !{!2993, !2994, !2995, !2996}
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2991, file: !535, line: 766, baseType: !316, size: 32)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2991, file: !535, line: 767, baseType: !316, size: 32, offset: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2991, file: !535, line: 768, baseType: !316, size: 32, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2991, file: !535, line: 769, baseType: !539, size: 32, offset: 96)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 32)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "PWR_TypeDef", file: !312, line: 471, baseType: !2999)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 467, size: 64, elements: !3000)
!3000 = !{!3001, !3002}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !2999, file: !312, line: 469, baseType: !316, size: 32)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !2999, file: !312, line: 470, baseType: !316, size: 32, offset: 32)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 32)
!3004 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_TypeDef", file: !312, line: 379, baseType: !3005)
!3005 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 370, size: 224, elements: !3006)
!3006 = !{!3007, !3008, !3009, !3010, !3011, !3012, !3013}
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ACR", scope: !3005, file: !312, line: 372, baseType: !316, size: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "KEYR", scope: !3005, file: !312, line: 373, baseType: !316, size: 32, offset: 32)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "OPTKEYR", scope: !3005, file: !312, line: 374, baseType: !316, size: 32, offset: 64)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "SR", scope: !3005, file: !312, line: 375, baseType: !316, size: 32, offset: 96)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3005, file: !312, line: 376, baseType: !316, size: 32, offset: 128)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR", scope: !3005, file: !312, line: 377, baseType: !316, size: 32, offset: 160)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "OPTCR1", scope: !3005, file: !312, line: 378, baseType: !316, size: 32, offset: 192)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 32)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_TypeDef", file: !312, line: 510, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !312, line: 477, size: 1216, elements: !3017)
!3017 = !{!3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "CR", scope: !3016, file: !312, line: 479, baseType: !316, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "PLLCFGR", scope: !3016, file: !312, line: 480, baseType: !316, size: 32, offset: 32)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "CFGR", scope: !3016, file: !312, line: 481, baseType: !316, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "CIR", scope: !3016, file: !312, line: 482, baseType: !316, size: 32, offset: 96)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1RSTR", scope: !3016, file: !312, line: 483, baseType: !316, size: 32, offset: 128)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2RSTR", scope: !3016, file: !312, line: 484, baseType: !316, size: 32, offset: 160)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !3016, file: !312, line: 485, baseType: !853, size: 64, offset: 192)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "APB1RSTR", scope: !3016, file: !312, line: 486, baseType: !316, size: 32, offset: 256)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "APB2RSTR", scope: !3016, file: !312, line: 487, baseType: !316, size: 32, offset: 288)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !3016, file: !312, line: 488, baseType: !853, size: 64, offset: 320)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1ENR", scope: !3016, file: !312, line: 489, baseType: !316, size: 32, offset: 384)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2ENR", scope: !3016, file: !312, line: 490, baseType: !316, size: 32, offset: 416)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !3016, file: !312, line: 491, baseType: !853, size: 64, offset: 448)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "APB1ENR", scope: !3016, file: !312, line: 492, baseType: !316, size: 32, offset: 512)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "APB2ENR", scope: !3016, file: !312, line: 493, baseType: !316, size: 32, offset: 544)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !3016, file: !312, line: 494, baseType: !853, size: 64, offset: 576)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "AHB1LPENR", scope: !3016, file: !312, line: 495, baseType: !316, size: 32, offset: 640)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "AHB2LPENR", scope: !3016, file: !312, line: 496, baseType: !316, size: 32, offset: 672)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !3016, file: !312, line: 497, baseType: !853, size: 64, offset: 704)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "APB1LPENR", scope: !3016, file: !312, line: 498, baseType: !316, size: 32, offset: 768)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "APB2LPENR", scope: !3016, file: !312, line: 499, baseType: !316, size: 32, offset: 800)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !3016, file: !312, line: 500, baseType: !853, size: 64, offset: 832)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "BDCR", scope: !3016, file: !312, line: 501, baseType: !316, size: 32, offset: 896)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "CSR", scope: !3016, file: !312, line: 502, baseType: !316, size: 32, offset: 928)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !3016, file: !312, line: 503, baseType: !853, size: 64, offset: 960)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "SSCGR", scope: !3016, file: !312, line: 504, baseType: !316, size: 32, offset: 1024)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "PLLI2SCFGR", scope: !3016, file: !312, line: 505, baseType: !316, size: 32, offset: 1056)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !3016, file: !312, line: 506, baseType: !110, size: 32, offset: 1088)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR", scope: !3016, file: !312, line: 507, baseType: !316, size: 32, offset: 1120)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "CKGATENR", scope: !3016, file: !312, line: 508, baseType: !316, size: 32, offset: 1152)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "DCKCFGR2", scope: !3016, file: !312, line: 509, baseType: !316, size: 32, offset: 1184)
!3049 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3050, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3051, splitDebugInlining: false, nameTableKind: None)
!3050 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!3051 = !{!107, !232}
!3052 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3053, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !3054, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3053 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!3054 = !{!3055, !3062, !2555, !30}
!3055 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_query_id", file: !3056, line: 14, baseType: !32, size: 32, elements: !3057)
!3056 = !DIFile(filename: "zephyr/include/zephyr/debug/coredump.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3057 = !{!3058, !3059, !3060, !3061}
!3058 = !DIEnumerator(name: "COREDUMP_QUERY_GET_ERROR", value: 0)
!3059 = !DIEnumerator(name: "COREDUMP_QUERY_HAS_STORED_DUMP", value: 1)
!3060 = !DIEnumerator(name: "COREDUMP_QUERY_GET_STORED_DUMP_SIZE", value: 2)
!3061 = !DIEnumerator(name: "COREDUMP_QUERY_MAX", value: 3)
!3062 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "coredump_cmd_id", file: !3056, line: 42, baseType: !32, size: 32, elements: !3063)
!3063 = !{!3064, !3065, !3066, !3067, !3068, !3069}
!3064 = !DIEnumerator(name: "COREDUMP_CMD_CLEAR_ERROR", value: 0)
!3065 = !DIEnumerator(name: "COREDUMP_CMD_VERIFY_STORED_DUMP", value: 1)
!3066 = !DIEnumerator(name: "COREDUMP_CMD_ERASE_STORED_DUMP", value: 2)
!3067 = !DIEnumerator(name: "COREDUMP_CMD_COPY_STORED_DUMP", value: 3)
!3068 = !DIEnumerator(name: "COREDUMP_CMD_INVALIDATE_STORED_DUMP", value: 4)
!3069 = !DIEnumerator(name: "COREDUMP_CMD_MAX", value: 5)
!3070 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3071, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3071 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!3072 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3073, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !3074, splitDebugInlining: false, nameTableKind: None)
!3073 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!3074 = !{!22, !107, !109}
!3075 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3076, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !29, retainedTypes: !299, splitDebugInlining: false, nameTableKind: None)
!3076 = !DIFile(filename: "/home/mjshen/RTOSExploration/zephyrproject/zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!3077 = !{!"Ubuntu clang version 14.0.6"}
!3078 = !{i32 7, !"Dwarf Version", i32 4}
!3079 = !{i32 2, !"Debug Info Version", i32 3}
!3080 = !{i32 1, !"wchar_size", i32 4}
!3081 = !{i32 1, !"min_enum_size", i32 4}
!3082 = !{i32 1, !"branch-target-enforcement", i32 0}
!3083 = !{i32 1, !"sign-return-address", i32 0}
!3084 = !{i32 1, !"sign-return-address-all", i32 0}
!3085 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!3086 = !{i32 7, !"frame-pointer", i32 2}
!3087 = distinct !DISubprogram(name: "_OffsetAbsSyms", scope: !3088, file: !3088, line: 26, type: !3089, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2507, retainedNodes: !2026)
!3088 = !DIFile(filename: "zephyr/kernel/include/kernel_offsets.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3089 = !DISubroutineType(types: !3090)
!3090 = !{null}
!3091 = !DILocation(line: 28, column: 1, scope: !3087)
!3092 = !{i64 2155037096, i64 2155037116, i64 2155037179}
!3093 = !DILocation(line: 29, column: 1, scope: !3087)
!3094 = !{i64 2155037511, i64 2155037531, i64 2155037594}
!3095 = !DILocation(line: 30, column: 1, scope: !3087)
!3096 = !{i64 2155037930, i64 2155037950, i64 2155038013}
!3097 = !DILocation(line: 31, column: 1, scope: !3087)
!3098 = !{i64 2155038349, i64 2155038369, i64 2155038432}
!3099 = !DILocation(line: 33, column: 1, scope: !3087)
!3100 = !{i64 2155038641, i64 2155038661, i64 2155038724}
!3101 = !DILocation(line: 35, column: 1, scope: !3087)
!3102 = !{i64 2155038966, i64 2155038986, i64 2155039049}
!3103 = !DILocation(line: 50, column: 1, scope: !3087)
!3104 = !{i64 2155039393, i64 2155039413, i64 2155039476}
!3105 = !DILocation(line: 54, column: 1, scope: !3087)
!3106 = !{i64 2155039832, i64 2155039852, i64 2155039915}
!3107 = !DILocation(line: 61, column: 1, scope: !3087)
!3108 = !{i64 2155040149, i64 2155040169, i64 2155040232}
!3109 = !DILocation(line: 63, column: 1, scope: !3087)
!3110 = !{i64 2155040529, i64 2155040549, i64 2155040612}
!3111 = !DILocation(line: 64, column: 1, scope: !3087)
!3112 = !{i64 2155041051, i64 2155041071, i64 2155041134}
!3113 = !DILocation(line: 65, column: 1, scope: !3087)
!3114 = !{i64 2155045610, i64 2155045630, i64 2155045693}
!3115 = !DILocation(line: 66, column: 1, scope: !3087)
!3116 = !{i64 2155046092, i64 2155046112, i64 2155046175}
!3117 = !DILocation(line: 67, column: 1, scope: !3087)
!3118 = !{i64 2155046599, i64 2155046619, i64 2155046682}
!3119 = !DILocation(line: 68, column: 1, scope: !3087)
!3120 = !{i64 2155047087, i64 2155047107, i64 2155047170}
!3121 = !DILocation(line: 70, column: 1, scope: !3087)
!3122 = !{i64 2155047555, i64 2155047575, i64 2155047638}
!3123 = !DILocation(line: 71, column: 1, scope: !3087)
!3124 = !{i64 2155047997, i64 2155048017, i64 2155048080}
!3125 = !DILocation(line: 72, column: 1, scope: !3087)
!3126 = !{i64 2155048455, i64 2155048475, i64 2155048538}
!3127 = !DILocation(line: 79, column: 1, scope: !3087)
!3128 = !{i64 2155048909, i64 2155048929, i64 2155048992}
!3129 = !DILocation(line: 80, column: 1, scope: !3087)
!3130 = !{i64 2155049420, i64 2155049440, i64 2155049503}
!3131 = !DILocation(line: 82, column: 1, scope: !3087)
!3132 = !{i64 2155049911, i64 2155049931, i64 2155049994}
!3133 = !DILocation(line: 97, column: 1, scope: !3087)
!3134 = !{i64 2155050248, i64 2155050268, i64 2155050331}
!3135 = !DILocation(line: 99, column: 1, scope: !3087)
!3136 = !{i64 2155050466, i64 2155050486, i64 2155050549}
!3137 = !DILocation(line: 102, column: 1, scope: !3087)
!3138 = !{i64 2155050723, i64 2155050743, i64 2155050806}
!3139 = !DILocation(line: 105, column: 1, scope: !3087)
!3140 = !{i64 2155050963, i64 2155050983, i64 2155051046}
!3141 = !DILocation(line: 115, column: 1, scope: !3087)
!3142 = !{i64 2155051302, i64 2155051322, i64 2155051385}
!3143 = !DILocation(line: 118, column: 1, scope: !3087)
!3144 = !{i64 2155051646, i64 2155051666, i64 2155051729}
!3145 = !DILocation(line: 32, column: 1, scope: !3146)
!3146 = !DILexicalBlockFile(scope: !3087, file: !3147, discriminator: 0)
!3147 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets_aarch32.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3148 = !{i64 2155052002, i64 2155052022, i64 2155052085}
!3149 = !DILocation(line: 33, column: 1, scope: !3146)
!3150 = !{i64 2155052514, i64 2155052534, i64 2155052597}
!3151 = !DILocation(line: 53, column: 1, scope: !3146)
!3152 = !{i64 2155053022, i64 2155053042, i64 2155053105}
!3153 = !DILocation(line: 54, column: 1, scope: !3146)
!3154 = !{i64 2155053440, i64 2155053460, i64 2155053523}
!3155 = !DILocation(line: 55, column: 1, scope: !3146)
!3156 = !{i64 2155053858, i64 2155053878, i64 2155053941}
!3157 = !DILocation(line: 56, column: 1, scope: !3146)
!3158 = !{i64 2155054276, i64 2155054296, i64 2155054359}
!3159 = !DILocation(line: 57, column: 1, scope: !3146)
!3160 = !{i64 2155054694, i64 2155054714, i64 2155054777}
!3161 = !DILocation(line: 58, column: 1, scope: !3146)
!3162 = !{i64 2155059173, i64 2155059193, i64 2155059256}
!3163 = !DILocation(line: 59, column: 1, scope: !3146)
!3164 = !{i64 2155059591, i64 2155059611, i64 2155059674}
!3165 = !DILocation(line: 60, column: 1, scope: !3146)
!3166 = !{i64 2155060015, i64 2155060035, i64 2155060098}
!3167 = !DILocation(line: 61, column: 1, scope: !3146)
!3168 = !{i64 2155060332, i64 2155060352, i64 2155060415}
!3169 = !DILocation(line: 70, column: 1, scope: !3146)
!3170 = !{i64 2155060561, i64 2155060581, i64 2155060644}
!3171 = !DILocation(line: 72, column: 1, scope: !3146)
!3172 = !{i64 2155060893, i64 2155060913, i64 2155060976}
!3173 = !DILocation(line: 73, column: 1, scope: !3146)
!3174 = !{i64 2155061343, i64 2155061363, i64 2155061426}
!3175 = !DILocation(line: 74, column: 1, scope: !3146)
!3176 = !{i64 2155061793, i64 2155061813, i64 2155061876}
!3177 = !DILocation(line: 75, column: 1, scope: !3146)
!3178 = !{i64 2155062243, i64 2155062263, i64 2155062326}
!3179 = !DILocation(line: 76, column: 1, scope: !3146)
!3180 = !{i64 2155062693, i64 2155062713, i64 2155062776}
!3181 = !DILocation(line: 77, column: 1, scope: !3146)
!3182 = !{i64 2155063143, i64 2155063163, i64 2155063226}
!3183 = !DILocation(line: 78, column: 1, scope: !3146)
!3184 = !{i64 2155063593, i64 2155063613, i64 2155063676}
!3185 = !DILocation(line: 79, column: 1, scope: !3146)
!3186 = !{i64 2155064043, i64 2155064063, i64 2155064126}
!3187 = !DILocation(line: 80, column: 1, scope: !3146)
!3188 = !{i64 2155064496, i64 2155064516, i64 2155064579}
!3189 = !DILocation(line: 84, column: 1, scope: !3146)
!3190 = !{i64 2155064828, i64 2155064848, i64 2155064911}
!3191 = !DILocation(line: 91, column: 1, scope: !3146)
!3192 = !{i64 2155065225, i64 2155065245, i64 2155065308}
!3193 = !DILocation(line: 93, column: 1, scope: !3146)
!3194 = !{i64 2155065592, i64 2155065612, i64 2155065675}
!3195 = !DILocation(line: 106, column: 1, scope: !3146)
!3196 = !{i64 2155065862, i64 2155065882, i64 2155065945}
!3197 = !DILocation(line: 11, column: 1, scope: !3198)
!3198 = !DILexicalBlockFile(scope: !3087, file: !3199, discriminator: 0)
!3199 = !DIFile(filename: "zephyr/arch/arm/core/offsets/offsets.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3200 = distinct !DISubprogram(name: "worker_thread", scope: !116, file: !116, line: 23, type: !3201, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3203)
!3201 = !DISubroutineType(types: !3202)
!3202 = !{null, !107, !107, !107}
!3203 = !{!3204, !3205, !3206, !3207, !3208, !3209}
!3204 = !DILocalVariable(name: "p1", arg: 1, scope: !3200, file: !116, line: 23, type: !107)
!3205 = !DILocalVariable(name: "p2", arg: 2, scope: !3200, file: !116, line: 23, type: !107)
!3206 = !DILocalVariable(name: "p3", arg: 3, scope: !3200, file: !116, line: 23, type: !107)
!3207 = !DILocalVariable(name: "myid", scope: !3200, file: !116, line: 25, type: !1818)
!3208 = !DILocalVariable(name: "workloops", scope: !3200, file: !116, line: 26, type: !1818)
!3209 = !DILocalVariable(name: "i", scope: !3210, file: !116, line: 28, type: !109)
!3210 = distinct !DILexicalBlock(scope: !3200, file: !116, line: 28, column: 2)
!3211 = !DILocation(line: 0, scope: !3200)
!3212 = !DILocation(line: 25, column: 19, scope: !3200)
!3213 = !DILocation(line: 0, scope: !3210)
!3214 = !DILocation(line: 28, column: 2, scope: !3210)
!3215 = !DILocation(line: 36, column: 2, scope: !3200)
!3216 = !DILocation(line: 41, column: 6, scope: !3200)
!3217 = !DILocation(line: 42, column: 2, scope: !3200)
!3218 = !DILocation(line: 44, column: 2, scope: !3200)
!3219 = !DILocation(line: 45, column: 2, scope: !3200)
!3220 = !DILocation(line: 46, column: 1, scope: !3200)
!3221 = !DILocation(line: 29, column: 3, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3223, file: !116, line: 28, column: 38)
!3223 = distinct !DILexicalBlock(scope: !3210, file: !116, line: 28, column: 2)
!3224 = !DILocation(line: 30, column: 11, scope: !3222)
!3225 = !DILocation(line: 30, column: 3, scope: !3222)
!3226 = !DILocation(line: 28, column: 34, scope: !3223)
!3227 = !DILocation(line: 28, column: 20, scope: !3223)
!3228 = distinct !{!3228, !3214, !3229}
!3229 = !DILocation(line: 31, column: 2, scope: !3210)
!3230 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3231, file: !3231, line: 927, type: !3232, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3239)
!3231 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!3232 = !DISubroutineType(types: !3233)
!3233 = !{!109, !3234, !3235}
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 32)
!3235 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !3236)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !3237)
!3237 = !{!3238}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3236, file: !104, line: 66, baseType: !103, size: 64)
!3239 = !{!3240, !3241}
!3240 = !DILocalVariable(name: "mutex", arg: 1, scope: !3230, file: !3231, line: 927, type: !3234)
!3241 = !DILocalVariable(name: "timeout", arg: 2, scope: !3230, file: !3231, line: 927, type: !3235)
!3242 = !DILocation(line: 0, scope: !3230)
!3243 = !DILocation(line: 936, column: 2, scope: !3244)
!3244 = distinct !DILexicalBlock(scope: !3230, file: !3231, line: 936, column: 2)
!3245 = !{i64 2154750161}
!3246 = !DILocation(line: 937, column: 9, scope: !3230)
!3247 = !DILocation(line: 937, column: 2, scope: !3230)
!3248 = distinct !DISubprogram(name: "k_condvar_signal", scope: !3231, file: !3231, line: 976, type: !3249, scopeLine: 977, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3252)
!3249 = !DISubroutineType(types: !3250)
!3250 = !{!109, !3251}
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!3252 = !{!3253}
!3253 = !DILocalVariable(name: "condvar", arg: 1, scope: !3248, file: !3231, line: 976, type: !3251)
!3254 = !DILocation(line: 0, scope: !3248)
!3255 = !DILocation(line: 984, column: 2, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3248, file: !3231, line: 984, column: 2)
!3257 = !{i64 2154750365}
!3258 = !DILocation(line: 985, column: 9, scope: !3248)
!3259 = !DILocation(line: 985, column: 2, scope: !3248)
!3260 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3231, file: !3231, line: 944, type: !3261, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3263)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!109, !3234}
!3263 = !{!3264}
!3264 = !DILocalVariable(name: "mutex", arg: 1, scope: !3260, file: !3231, line: 944, type: !3234)
!3265 = !DILocation(line: 0, scope: !3260)
!3266 = !DILocation(line: 952, column: 2, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3260, file: !3231, line: 952, column: 2)
!3268 = !{i64 2154750229}
!3269 = !DILocation(line: 953, column: 9, scope: !3260)
!3270 = !DILocation(line: 953, column: 2, scope: !3260)
!3271 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3272, file: !3272, line: 403, type: !3273, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3275)
!3272 = !DIFile(filename: "zephyr/include/zephyr/sys/time_units.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!111, !111}
!3275 = !{!3276}
!3276 = !DILocalVariable(name: "t", arg: 1, scope: !3271, file: !3272, line: 403, type: !111)
!3277 = !DILocation(line: 0, scope: !3271)
!3278 = !DILocalVariable(name: "t", arg: 1, scope: !3279, file: !3272, line: 102, type: !111)
!3279 = distinct !DISubprogram(name: "z_tmcvt", scope: !3272, file: !3272, line: 102, type: !3280, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3282)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!111, !111, !110, !110, !347, !347, !347, !347}
!3282 = !{!3278, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292}
!3283 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3279, file: !3272, line: 102, type: !110)
!3284 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3279, file: !3272, line: 103, type: !110)
!3285 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3279, file: !3272, line: 103, type: !347)
!3286 = !DILocalVariable(name: "result32", arg: 5, scope: !3279, file: !3272, line: 104, type: !347)
!3287 = !DILocalVariable(name: "round_up", arg: 6, scope: !3279, file: !3272, line: 104, type: !347)
!3288 = !DILocalVariable(name: "round_off", arg: 7, scope: !3279, file: !3272, line: 105, type: !347)
!3289 = !DILocalVariable(name: "mul_ratio", scope: !3279, file: !3272, line: 107, type: !347)
!3290 = !DILocalVariable(name: "div_ratio", scope: !3279, file: !3272, line: 109, type: !347)
!3291 = !DILocalVariable(name: "off", scope: !3279, file: !3272, line: 116, type: !111)
!3292 = !DILocalVariable(name: "rdivisor", scope: !3293, file: !3272, line: 119, type: !110)
!3293 = distinct !DILexicalBlock(scope: !3294, file: !3272, line: 118, column: 18)
!3294 = distinct !DILexicalBlock(scope: !3279, file: !3272, line: 118, column: 6)
!3295 = !DILocation(line: 0, scope: !3279, inlinedAt: !3296)
!3296 = distinct !DILocation(line: 406, column: 9, scope: !3271)
!3297 = !DILocation(line: 145, column: 13, scope: !3298, inlinedAt: !3296)
!3298 = distinct !DILexicalBlock(scope: !3299, file: !3272, line: 144, column: 10)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !3272, line: 142, column: 7)
!3300 = distinct !DILexicalBlock(scope: !3301, file: !3272, line: 141, column: 24)
!3301 = distinct !DILexicalBlock(scope: !3302, file: !3272, line: 141, column: 13)
!3302 = distinct !DILexicalBlock(scope: !3279, file: !3272, line: 134, column: 6)
!3303 = !DILocation(line: 406, column: 2, scope: !3271)
!3304 = distinct !DISubprogram(name: "k_sleep", scope: !3231, file: !3231, line: 91, type: !3305, scopeLine: 92, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3307)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!765, !3235}
!3307 = !{!3308}
!3308 = !DILocalVariable(name: "timeout", arg: 1, scope: !3304, file: !3231, line: 91, type: !3235)
!3309 = !DILocation(line: 0, scope: !3304)
!3310 = !DILocation(line: 99, column: 2, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3304, file: !3231, line: 99, column: 2)
!3312 = !{i64 2154746793}
!3313 = !DILocation(line: 100, column: 9, scope: !3304)
!3314 = !DILocation(line: 100, column: 2, scope: !3304)
!3315 = distinct !DISubprogram(name: "main", scope: !116, file: !116, line: 48, type: !3089, scopeLine: 49, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3316)
!3316 = !{!3317, !3320}
!3317 = !DILocalVariable(name: "tid", scope: !3315, file: !116, line: 50, type: !3318)
!3318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3319, size: 640, elements: !259)
!3319 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !266)
!3320 = !DILocalVariable(name: "i", scope: !3321, file: !116, line: 54, type: !109)
!3321 = distinct !DILexicalBlock(scope: !3315, file: !116, line: 54, column: 2)
!3322 = !DILocation(line: 52, column: 7, scope: !3315)
!3323 = !DILocation(line: 0, scope: !3321)
!3324 = !DILocation(line: 54, column: 2, scope: !3321)
!3325 = !DILocation(line: 60, column: 10, scope: !3315)
!3326 = !DILocation(line: 60, column: 2, scope: !3315)
!3327 = !DILocation(line: 62, column: 2, scope: !3315)
!3328 = !DILocation(line: 67, column: 9, scope: !3315)
!3329 = !DILocation(line: 67, column: 14, scope: !3315)
!3330 = !DILocation(line: 67, column: 2, scope: !3315)
!3331 = !DILocation(line: 56, column: 21, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3333, file: !116, line: 54, column: 40)
!3333 = distinct !DILexicalBlock(scope: !3321, file: !116, line: 54, column: 2)
!3334 = !DILocation(line: 56, column: 27, scope: !3332)
!3335 = !DILocation(line: 57, column: 21, scope: !3332)
!3336 = !DILocation(line: 56, column: 4, scope: !3332)
!3337 = !DILocation(line: 0, scope: !3315)
!3338 = !DILocation(line: 54, column: 36, scope: !3333)
!3339 = !DILocation(line: 54, column: 20, scope: !3333)
!3340 = distinct !{!3340, !3324, !3341}
!3341 = !DILocation(line: 59, column: 2, scope: !3321)
!3342 = !DILocation(line: 68, column: 3, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3315, file: !116, line: 67, column: 29)
!3344 = !DILocation(line: 75, column: 3, scope: !3343)
!3345 = !DILocation(line: 77, column: 3, scope: !3343)
!3346 = distinct !{!3346, !3330, !3347}
!3347 = !DILocation(line: 80, column: 2, scope: !3315)
!3348 = !DILocation(line: 82, column: 2, scope: !3315)
!3349 = !DILocation(line: 85, column: 2, scope: !3315)
!3350 = !DILocation(line: 86, column: 1, scope: !3315)
!3351 = distinct !DISubprogram(name: "k_thread_create", scope: !3231, file: !3231, line: 24, type: !3352, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3359)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!3319, !266, !3354, !232, !3357, !107, !107, !107, !109, !110, !3235}
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 32)
!3355 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3356, line: 44, baseType: !144)
!3356 = !DIFile(filename: "zephyr/include/zephyr/sys/arch_interface.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3357 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !3356, line: 46, baseType: !3358)
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 32)
!3359 = !{!3360, !3361, !3362, !3363, !3364, !3365, !3366, !3367, !3368, !3369}
!3360 = !DILocalVariable(name: "new_thread", arg: 1, scope: !3351, file: !3231, line: 24, type: !266)
!3361 = !DILocalVariable(name: "stack", arg: 2, scope: !3351, file: !3231, line: 24, type: !3354)
!3362 = !DILocalVariable(name: "stack_size", arg: 3, scope: !3351, file: !3231, line: 24, type: !232)
!3363 = !DILocalVariable(name: "entry", arg: 4, scope: !3351, file: !3231, line: 24, type: !3357)
!3364 = !DILocalVariable(name: "p1", arg: 5, scope: !3351, file: !3231, line: 24, type: !107)
!3365 = !DILocalVariable(name: "p2", arg: 6, scope: !3351, file: !3231, line: 24, type: !107)
!3366 = !DILocalVariable(name: "p3", arg: 7, scope: !3351, file: !3231, line: 24, type: !107)
!3367 = !DILocalVariable(name: "prio", arg: 8, scope: !3351, file: !3231, line: 24, type: !109)
!3368 = !DILocalVariable(name: "options", arg: 9, scope: !3351, file: !3231, line: 24, type: !110)
!3369 = !DILocalVariable(name: "delay", arg: 10, scope: !3351, file: !3231, line: 24, type: !3235)
!3370 = !DILocation(line: 0, scope: !3351)
!3371 = !DILocation(line: 49, column: 2, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3351, file: !3231, line: 49, column: 2)
!3373 = !{i64 2154746589}
!3374 = !DILocation(line: 50, column: 9, scope: !3351)
!3375 = !DILocation(line: 50, column: 2, scope: !3351)
!3376 = distinct !DISubprogram(name: "k_condvar_wait", scope: !3231, file: !3231, line: 1008, type: !3377, scopeLine: 1009, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !27, retainedNodes: !3379)
!3377 = !DISubroutineType(types: !3378)
!3378 = !{!109, !3251, !3234, !3235}
!3379 = !{!3380, !3381, !3382}
!3380 = !DILocalVariable(name: "condvar", arg: 1, scope: !3376, file: !3231, line: 1008, type: !3251)
!3381 = !DILocalVariable(name: "mutex", arg: 2, scope: !3376, file: !3231, line: 1008, type: !3234)
!3382 = !DILocalVariable(name: "timeout", arg: 3, scope: !3376, file: !3231, line: 1008, type: !3235)
!3383 = !DILocation(line: 0, scope: !3376)
!3384 = !DILocation(line: 1018, column: 2, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3376, file: !3231, line: 1018, column: 2)
!3386 = !{i64 2154750501}
!3387 = !DILocation(line: 1019, column: 9, scope: !3376)
!3388 = !DILocation(line: 1019, column: 2, scope: !3376)
!3389 = distinct !DISubprogram(name: "cbvprintf_package", scope: !288, file: !288, line: 233, type: !3390, scopeLine: 235, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3399)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{!109, !107, !232, !110, !279, !3392}
!3392 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3393, line: 99, baseType: !3394)
!3393 = !DIFile(filename: "zephyr-sdk-0.15.2/arm-zephyr-eabi/bin/../lib/gcc/arm-zephyr-eabi/12.1.0/include/stdarg.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3394 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3393, line: 40, baseType: !3395)
!3395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !288, baseType: !3396)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !3397)
!3397 = !{!3398}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !3396, file: !288, line: 18, baseType: !107, size: 32)
!3399 = !{!3400, !3401, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3411, !3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3435, !3444, !3447, !3448, !3451, !3454, !3457, !3460, !3466}
!3400 = !DILocalVariable(name: "packaged", arg: 1, scope: !3389, file: !288, line: 233, type: !107)
!3401 = !DILocalVariable(name: "len", arg: 2, scope: !3389, file: !288, line: 233, type: !232)
!3402 = !DILocalVariable(name: "flags", arg: 3, scope: !3389, file: !288, line: 233, type: !110)
!3403 = !DILocalVariable(name: "fmt", arg: 4, scope: !3389, file: !288, line: 234, type: !279)
!3404 = !DILocalVariable(name: "ap", arg: 5, scope: !3389, file: !288, line: 234, type: !3392)
!3405 = !DILocalVariable(name: "buf0", scope: !3389, file: !288, line: 247, type: !286)
!3406 = !DILocalVariable(name: "buf", scope: !3389, file: !288, line: 248, type: !286)
!3407 = !DILocalVariable(name: "size", scope: !3389, file: !288, line: 249, type: !32)
!3408 = !DILocalVariable(name: "align", scope: !3389, file: !288, line: 250, type: !32)
!3409 = !DILocalVariable(name: "str_ptr_pos", scope: !3389, file: !288, line: 251, type: !3410)
!3410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 128, elements: !1809)
!3411 = !DILocalVariable(name: "str_ptr_arg", scope: !3389, file: !288, line: 252, type: !3410)
!3412 = !DILocalVariable(name: "s_idx", scope: !3389, file: !288, line: 253, type: !32)
!3413 = !DILocalVariable(name: "s_rw_cnt", scope: !3389, file: !288, line: 254, type: !32)
!3414 = !DILocalVariable(name: "s_ro_cnt", scope: !3389, file: !288, line: 255, type: !32)
!3415 = !DILocalVariable(name: "arg_idx", scope: !3389, file: !288, line: 256, type: !109)
!3416 = !DILocalVariable(name: "i", scope: !3389, file: !288, line: 257, type: !32)
!3417 = !DILocalVariable(name: "s", scope: !3389, file: !288, line: 258, type: !279)
!3418 = !DILocalVariable(name: "parsing", scope: !3389, file: !288, line: 259, type: !347)
!3419 = !DILocalVariable(name: "rws_pos_en", scope: !3389, file: !288, line: 263, type: !347)
!3420 = !DILocalVariable(name: "fros_cnt", scope: !3389, file: !288, line: 268, type: !109)
!3421 = !DILocalVariable(name: "is_str_arg", scope: !3389, file: !288, line: 269, type: !347)
!3422 = !DILocalVariable(name: "pkg_hdr", scope: !3389, file: !288, line: 270, type: !3423)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 32)
!3424 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "cbprintf_package_hdr", file: !3425, line: 78, size: 32, elements: !3426)
!3425 = !DIFile(filename: "zephyr/include/zephyr/sys/cbprintf.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3426 = !{!3427, !3434}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3424, file: !3425, line: 80, baseType: !3428, size: 32)
!3428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_desc", file: !3425, line: 45, size: 32, elements: !3429)
!3429 = !{!3430, !3431, !3432, !3433}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3428, file: !3425, line: 47, baseType: !178, size: 8)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "str_cnt", scope: !3428, file: !3425, line: 50, baseType: !178, size: 8, offset: 8)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "ro_str_cnt", scope: !3428, file: !3425, line: 53, baseType: !178, size: 8, offset: 16)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "rw_str_cnt", scope: !3428, file: !3425, line: 56, baseType: !178, size: 8, offset: 24)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !3424, file: !3425, line: 82, baseType: !107, size: 32)
!3435 = !DILocalVariable(name: "v", scope: !3436, file: !288, line: 567, type: !3440)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !288, line: 562, column: 14)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !288, line: 481, column: 18)
!3438 = distinct !DILexicalBlock(scope: !3439, file: !288, line: 466, column: 3)
!3439 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 343, column: 15)
!3440 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3389, file: !288, line: 567, size: 64, elements: !3441)
!3441 = !{!3442, !3443}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3440, file: !288, line: 567, baseType: !277, size: 64)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "ld", scope: !3440, file: !288, line: 567, baseType: !275, size: 64)
!3444 = !DILocalVariable(name: "is_ro", scope: !3445, file: !288, line: 620, type: !347)
!3445 = distinct !DILexicalBlock(scope: !3446, file: !288, line: 613, column: 19)
!3446 = distinct !DILexicalBlock(scope: !3439, file: !288, line: 613, column: 7)
!3447 = !DILocalVariable(name: "do_ro", scope: !3445, file: !288, line: 621, type: !347)
!3448 = !DILocalVariable(name: "s_ptr_idx", scope: !3449, file: !288, line: 626, type: !110)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !288, line: 625, column: 11)
!3450 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 623, column: 8)
!3451 = !DILocalVariable(name: "v", scope: !3452, file: !288, line: 684, type: !109)
!3452 = distinct !DILexicalBlock(scope: !3453, file: !288, line: 683, column: 35)
!3453 = distinct !DILexicalBlock(scope: !3446, file: !288, line: 683, column: 14)
!3454 = !DILocalVariable(name: "v", scope: !3455, file: !288, line: 691, type: !102)
!3455 = distinct !DILexicalBlock(scope: !3456, file: !288, line: 690, column: 36)
!3456 = distinct !DILexicalBlock(scope: !3453, file: !288, line: 690, column: 14)
!3457 = !DILocalVariable(name: "v", scope: !3458, file: !288, line: 698, type: !106)
!3458 = distinct !DILexicalBlock(scope: !3459, file: !288, line: 697, column: 41)
!3459 = distinct !DILexicalBlock(scope: !3456, file: !288, line: 697, column: 14)
!3460 = !DILocalVariable(name: "pos", scope: !3461, file: !288, line: 762, type: !178)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !288, line: 757, column: 31)
!3462 = distinct !DILexicalBlock(scope: !3463, file: !288, line: 757, column: 3)
!3463 = distinct !DILexicalBlock(scope: !3464, file: !288, line: 757, column: 3)
!3464 = distinct !DILexicalBlock(scope: !3465, file: !288, line: 756, column: 16)
!3465 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 756, column: 6)
!3466 = !DILabel(scope: !3445, name: "process_string", file: !288, line: 615)
!3467 = !DILocation(line: 0, scope: !3389)
!3468 = !DILocation(line: 251, column: 2, scope: !3389)
!3469 = !DILocation(line: 251, column: 10, scope: !3389)
!3470 = !DILocation(line: 252, column: 2, scope: !3389)
!3471 = !DILocation(line: 252, column: 10, scope: !3389)
!3472 = !DILocation(line: 263, column: 29, scope: !3389)
!3473 = !DILocation(line: 263, column: 21, scope: !3389)
!3474 = !DILocation(line: 268, column: 21, scope: !3389)
!3475 = !DILocation(line: 268, column: 19, scope: !3389)
!3476 = !DILocation(line: 273, column: 6, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 273, column: 6)
!3478 = !DILocation(line: 273, column: 26, scope: !3477)
!3479 = !DILocation(line: 273, column: 6, scope: !3389)
!3480 = !DILocation(line: 297, column: 6, scope: !3389)
!3481 = !DILocation(line: 305, column: 11, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 305, column: 6)
!3483 = !DILocation(line: 305, column: 6, scope: !3389)
!3484 = !DILocation(line: 327, column: 19, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 327, column: 6)
!3486 = !DILocation(line: 327, column: 22, scope: !3485)
!3487 = !DILocation(line: 327, column: 33, scope: !3485)
!3488 = !DILocation(line: 327, column: 50, scope: !3485)
!3489 = !DILocation(line: 327, column: 6, scope: !3389)
!3490 = !DILocation(line: 338, column: 9, scope: !3389)
!3491 = !DILocation(line: 341, column: 2, scope: !3389)
!3492 = !DILocation(line: 472, column: 8, scope: !3438)
!3493 = !DILocation(line: 473, column: 14, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3495, file: !288, line: 473, column: 9)
!3495 = distinct !DILexicalBlock(scope: !3496, file: !288, line: 472, column: 18)
!3496 = distinct !DILexicalBlock(scope: !3438, file: !288, line: 472, column: 8)
!3497 = !DILocation(line: 473, column: 9, scope: !3495)
!3498 = !DILocation(line: 479, column: 5, scope: !3495)
!3499 = !DILocation(line: 468, column: 9, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3438, file: !288, line: 468, column: 8)
!3501 = !DILocation(line: 468, column: 8, scope: !3500)
!3502 = !DILocation(line: 468, column: 15, scope: !3500)
!3503 = !DILocation(line: 468, column: 8, scope: !3438)
!3504 = distinct !{!3504, !3505, !3506}
!3505 = !DILocation(line: 343, column: 2, scope: !3389)
!3506 = !DILocation(line: 712, column: 2, scope: !3389)
!3507 = !DILocation(line: 481, column: 4, scope: !3438)
!3508 = !DILocation(line: 484, column: 12, scope: !3437)
!3509 = !DILocation(line: 485, column: 5, scope: !3437)
!3510 = !DILocation(line: 505, column: 5, scope: !3437)
!3511 = !DILocation(line: 518, column: 5, scope: !3437)
!3512 = !DILocation(line: 523, column: 5, scope: !3437)
!3513 = !DILocation(line: 532, column: 9, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3437, file: !288, line: 532, column: 9)
!3515 = !DILocation(line: 532, column: 17, scope: !3514)
!3516 = !DILocation(line: 532, column: 9, scope: !3437)
!3517 = !DILocation(line: 533, column: 10, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3519, file: !288, line: 533, column: 10)
!3519 = distinct !DILexicalBlock(scope: !3514, file: !288, line: 532, column: 25)
!3520 = !DILocation(line: 533, column: 18, scope: !3518)
!3521 = !DILocation(line: 0, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3436, file: !288, line: 569, column: 9)
!3523 = !DILocation(line: 0, scope: !3436)
!3524 = !DILocation(line: 579, column: 20, scope: !3436)
!3525 = !DILocation(line: 579, column: 11, scope: !3436)
!3526 = !DILocation(line: 580, column: 9, scope: !3436)
!3527 = !DILocation(line: 582, column: 21, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3529, file: !288, line: 582, column: 10)
!3529 = distinct !DILexicalBlock(scope: !3530, file: !288, line: 580, column: 23)
!3530 = distinct !DILexicalBlock(scope: !3436, file: !288, line: 580, column: 9)
!3531 = !DILocation(line: 582, column: 28, scope: !3528)
!3532 = !DILocation(line: 582, column: 10, scope: !3529)
!3533 = !DILocation(line: 0, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3535, file: !288, line: 587, column: 17)
!3535 = distinct !DILexicalBlock(scope: !3529, file: !288, line: 585, column: 10)
!3536 = !DILocation(line: 593, column: 9, scope: !3436)
!3537 = !DILocation(line: 600, column: 5, scope: !3437)
!3538 = !DILocation(line: 605, column: 18, scope: !3439)
!3539 = !DILocation(line: 605, column: 9, scope: !3439)
!3540 = !DILocation(line: 608, column: 20, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3439, file: !288, line: 608, column: 7)
!3542 = !DILocation(line: 608, column: 23, scope: !3541)
!3543 = !DILocation(line: 608, column: 34, scope: !3541)
!3544 = !DILocation(line: 608, column: 41, scope: !3541)
!3545 = !DILocation(line: 608, column: 7, scope: !3439)
!3546 = !DILocation(line: 613, column: 7, scope: !3439)
!3547 = !DILocation(line: 614, column: 8, scope: !3445)
!3548 = !DILocation(line: 614, column: 4, scope: !3445)
!3549 = !DILocation(line: 256, column: 6, scope: !3389)
!3550 = !DILocation(line: 254, column: 15, scope: !3389)
!3551 = !DILocation(line: 320, column: 7, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3482, file: !288, line: 305, column: 20)
!3553 = !DILocation(line: 615, column: 1, scope: !3445)
!3554 = !DILocation(line: 616, column: 8, scope: !3445)
!3555 = !DILocation(line: 617, column: 5, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3557, file: !288, line: 616, column: 22)
!3557 = distinct !DILexicalBlock(scope: !3445, file: !288, line: 616, column: 8)
!3558 = !DILocation(line: 617, column: 25, scope: !3556)
!3559 = !DILocation(line: 618, column: 4, scope: !3556)
!3560 = !DILocation(line: 620, column: 26, scope: !3445)
!3561 = !DILocation(line: 620, column: 29, scope: !3445)
!3562 = !DILocation(line: 620, column: 17, scope: !3445)
!3563 = !DILocation(line: 620, column: 43, scope: !3445)
!3564 = !DILocation(line: 0, scope: !3445)
!3565 = !DILocation(line: 623, column: 14, scope: !3450)
!3566 = !DILocation(line: 626, column: 26, scope: !3449)
!3567 = !DILocation(line: 626, column: 37, scope: !3449)
!3568 = !DILocation(line: 0, scope: !3449)
!3569 = !DILocation(line: 634, column: 15, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3449, file: !288, line: 634, column: 9)
!3571 = !DILocation(line: 635, column: 6, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3573, file: !288, line: 635, column: 6)
!3573 = distinct !DILexicalBlock(scope: !3574, file: !288, line: 635, column: 6)
!3574 = distinct !DILexicalBlock(scope: !3575, file: !288, line: 635, column: 6)
!3575 = distinct !DILexicalBlock(scope: !3570, file: !288, line: 634, column: 44)
!3576 = !DILocation(line: 639, column: 15, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3449, file: !288, line: 639, column: 9)
!3578 = !DILocation(line: 639, column: 9, scope: !3449)
!3579 = !DILocation(line: 640, column: 6, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3581, file: !288, line: 640, column: 6)
!3581 = distinct !DILexicalBlock(scope: !3582, file: !288, line: 640, column: 6)
!3582 = distinct !DILexicalBlock(scope: !3583, file: !288, line: 640, column: 6)
!3583 = distinct !DILexicalBlock(scope: !3577, file: !288, line: 639, column: 43)
!3584 = !DILocation(line: 644, column: 9, scope: !3449)
!3585 = !DILocation(line: 649, column: 27, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3587, file: !288, line: 644, column: 23)
!3587 = distinct !DILexicalBlock(scope: !3449, file: !288, line: 644, column: 9)
!3588 = !DILocation(line: 649, column: 6, scope: !3586)
!3589 = !DILocation(line: 649, column: 25, scope: !3586)
!3590 = !DILocation(line: 650, column: 27, scope: !3586)
!3591 = !DILocation(line: 650, column: 6, scope: !3586)
!3592 = !DILocation(line: 650, column: 25, scope: !3586)
!3593 = !DILocation(line: 651, column: 10, scope: !3586)
!3594 = !DILocation(line: 653, column: 26, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !288, line: 651, column: 17)
!3596 = distinct !DILexicalBlock(scope: !3586, file: !288, line: 651, column: 10)
!3597 = !DILocation(line: 654, column: 15, scope: !3595)
!3598 = !DILocation(line: 655, column: 6, scope: !3595)
!3599 = !DILocation(line: 656, column: 15, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3596, file: !288, line: 655, column: 13)
!3601 = !DILocation(line: 658, column: 16, scope: !3587)
!3602 = !DILocation(line: 663, column: 10, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3604, file: !288, line: 658, column: 23)
!3604 = distinct !DILexicalBlock(scope: !3587, file: !288, line: 658, column: 16)
!3605 = !DILocation(line: 664, column: 5, scope: !3603)
!3606 = !DILocation(line: 664, column: 16, scope: !3604)
!3607 = !DILocation(line: 669, column: 10, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !288, line: 664, column: 28)
!3609 = distinct !DILexicalBlock(scope: !3604, file: !288, line: 664, column: 16)
!3610 = !DILocation(line: 670, column: 5, scope: !3608)
!3611 = !DILocation(line: 675, column: 13, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3609, file: !288, line: 670, column: 12)
!3613 = !DILocation(line: 675, column: 27, scope: !3612)
!3614 = !DILocation(line: 675, column: 10, scope: !3612)
!3615 = !DILocation(line: 678, column: 10, scope: !3449)
!3616 = !DILocation(line: 680, column: 8, scope: !3445)
!3617 = !DILocation(line: 683, column: 14, scope: !3446)
!3618 = !DILocation(line: 684, column: 12, scope: !3452)
!3619 = !DILocation(line: 0, scope: !3452)
!3620 = !DILocation(line: 686, column: 8, scope: !3452)
!3621 = !DILocation(line: 687, column: 5, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3623, file: !288, line: 686, column: 22)
!3623 = distinct !DILexicalBlock(scope: !3452, file: !288, line: 686, column: 8)
!3624 = !DILocation(line: 687, column: 17, scope: !3622)
!3625 = !DILocation(line: 688, column: 4, scope: !3622)
!3626 = !DILocation(line: 698, column: 18, scope: !3458)
!3627 = !DILocation(line: 0, scope: !3458)
!3628 = !DILocation(line: 700, column: 8, scope: !3458)
!3629 = !DILocation(line: 704, column: 6, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3631, file: !288, line: 703, column: 12)
!3631 = distinct !DILexicalBlock(scope: !3632, file: !288, line: 701, column: 9)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !288, line: 700, column: 22)
!3633 = distinct !DILexicalBlock(scope: !3458, file: !288, line: 700, column: 8)
!3634 = !DILocation(line: 704, column: 24, scope: !3630)
!3635 = !DILocation(line: 706, column: 4, scope: !3632)
!3636 = !DILocation(line: 709, column: 4, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3638, file: !288, line: 709, column: 4)
!3638 = distinct !DILexicalBlock(scope: !3639, file: !288, line: 709, column: 4)
!3639 = distinct !DILexicalBlock(scope: !3640, file: !288, line: 709, column: 4)
!3640 = distinct !DILexicalBlock(scope: !3459, file: !288, line: 708, column: 10)
!3641 = !DILocation(line: 0, scope: !3453)
!3642 = !DILocation(line: 0, scope: !3439)
!3643 = !DILocation(line: 720, column: 6, scope: !3644)
!3644 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 720, column: 6)
!3645 = !DILocation(line: 720, column: 17, scope: !3644)
!3646 = !DILocation(line: 720, column: 31, scope: !3644)
!3647 = !DILocation(line: 720, column: 6, scope: !3389)
!3648 = !DILocation(line: 721, column: 3, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3650, file: !288, line: 721, column: 3)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !288, line: 721, column: 3)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !288, line: 721, column: 3)
!3652 = distinct !DILexicalBlock(scope: !3644, file: !288, line: 720, column: 38)
!3653 = !DILocation(line: 729, column: 6, scope: !3389)
!3654 = !DILocation(line: 730, column: 21, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !288, line: 729, column: 20)
!3656 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 729, column: 6)
!3657 = !DILocation(line: 730, column: 27, scope: !3655)
!3658 = !DILocation(line: 730, column: 3, scope: !3655)
!3659 = !DILocation(line: 737, column: 22, scope: !3389)
!3660 = !DILocation(line: 737, column: 20, scope: !3389)
!3661 = !DILocation(line: 0, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 739, column: 6)
!3663 = !DILocation(line: 745, column: 17, scope: !3664)
!3664 = distinct !DILexicalBlock(scope: !3662, file: !288, line: 743, column: 9)
!3665 = !DILocation(line: 745, column: 25, scope: !3664)
!3666 = !DILocation(line: 746, column: 17, scope: !3664)
!3667 = !DILocation(line: 746, column: 28, scope: !3664)
!3668 = !DILocation(line: 749, column: 29, scope: !3389)
!3669 = !DILocation(line: 749, column: 16, scope: !3389)
!3670 = !DILocation(line: 749, column: 27, scope: !3389)
!3671 = !DILocation(line: 756, column: 6, scope: !3465)
!3672 = !DILocation(line: 756, column: 6, scope: !3389)
!3673 = !DILocation(line: 757, column: 3, scope: !3463)
!3674 = !DILocation(line: 758, column: 10, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3461, file: !288, line: 758, column: 8)
!3676 = !DILocation(line: 758, column: 25, scope: !3675)
!3677 = !DILocation(line: 758, column: 8, scope: !3461)
!3678 = !DILocation(line: 0, scope: !3461)
!3679 = !DILocation(line: 765, column: 8, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3461, file: !288, line: 765, column: 8)
!3681 = !DILocation(line: 765, column: 19, scope: !3680)
!3682 = !DILocation(line: 765, column: 23, scope: !3680)
!3683 = !DILocation(line: 765, column: 8, scope: !3461)
!3684 = !DILocation(line: 762, column: 33, scope: !3461)
!3685 = !DILocation(line: 769, column: 8, scope: !3461)
!3686 = !DILocation(line: 769, column: 11, scope: !3461)
!3687 = !DILocation(line: 757, column: 27, scope: !3462)
!3688 = !DILocation(line: 757, column: 17, scope: !3462)
!3689 = distinct !{!3689, !3673, !3690}
!3690 = !DILocation(line: 770, column: 3, scope: !3463)
!3691 = !DILocation(line: 774, column: 16, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3693, file: !288, line: 774, column: 2)
!3693 = distinct !DILexicalBlock(scope: !3389, file: !288, line: 774, column: 2)
!3694 = !DILocation(line: 774, column: 2, scope: !3693)
!3695 = !DILocation(line: 776, column: 16, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3697, file: !288, line: 776, column: 7)
!3697 = distinct !DILexicalBlock(scope: !3692, file: !288, line: 774, column: 30)
!3698 = !DILocation(line: 776, column: 19, scope: !3696)
!3699 = !DILocation(line: 776, column: 34, scope: !3696)
!3700 = !DILocation(line: 776, column: 7, scope: !3697)
!3701 = !DILocation(line: 780, column: 7, scope: !3697)
!3702 = !DILocation(line: 782, column: 13, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3704, file: !288, line: 780, column: 19)
!3704 = distinct !DILexicalBlock(scope: !3697, file: !288, line: 780, column: 7)
!3705 = !DILocation(line: 782, column: 8, scope: !3703)
!3706 = !DILocation(line: 782, column: 11, scope: !3703)
!3707 = !DILocation(line: 783, column: 3, scope: !3703)
!3708 = !DILocation(line: 785, column: 26, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3704, file: !288, line: 783, column: 10)
!3710 = !DILocation(line: 785, column: 41, scope: !3709)
!3711 = !DILocation(line: 785, column: 24, scope: !3709)
!3712 = !DILocation(line: 785, column: 8, scope: !3709)
!3713 = !DILocation(line: 787, column: 52, scope: !3709)
!3714 = !DILocation(line: 789, column: 11, scope: !3709)
!3715 = !DILocation(line: 789, column: 21, scope: !3709)
!3716 = !DILocation(line: 0, scope: !3704)
!3717 = !DILocation(line: 793, column: 7, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3697, file: !288, line: 793, column: 7)
!3719 = !DILocation(line: 793, column: 18, scope: !3718)
!3720 = !DILocation(line: 793, column: 22, scope: !3718)
!3721 = !DILocation(line: 793, column: 29, scope: !3718)
!3722 = !DILocation(line: 793, column: 7, scope: !3697)
!3723 = !DILocation(line: 797, column: 12, scope: !3697)
!3724 = !DILocation(line: 797, column: 7, scope: !3697)
!3725 = !DILocation(line: 797, column: 10, scope: !3697)
!3726 = !DILocation(line: 799, column: 3, scope: !3697)
!3727 = !DILocation(line: 800, column: 7, scope: !3697)
!3728 = !DILocation(line: 801, column: 2, scope: !3697)
!3729 = !DILocation(line: 338, column: 4, scope: !3389)
!3730 = !DILocation(line: 774, column: 26, scope: !3692)
!3731 = distinct !{!3731, !3694, !3732}
!3732 = !DILocation(line: 801, column: 2, scope: !3693)
!3733 = !DILocation(line: 808, column: 9, scope: !3389)
!3734 = !DILocation(line: 808, column: 2, scope: !3389)
!3735 = !DILocation(line: 813, column: 1, scope: !3389)
!3736 = distinct !DISubprogram(name: "ptr_in_rodata", scope: !288, file: !288, line: 33, type: !3737, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3739)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{!347, !279}
!3739 = !{!3740}
!3740 = !DILocalVariable(name: "addr", arg: 1, scope: !3736, file: !288, line: 33, type: !279)
!3741 = !DILocation(line: 0, scope: !3736)
!3742 = !DILocation(line: 41, column: 9, scope: !3736)
!3743 = !DILocation(line: 41, column: 2, scope: !3736)
!3744 = distinct !DISubprogram(name: "linker_is_in_rodata", scope: !3745, file: !3745, line: 24, type: !3746, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3748)
!3745 = !DIFile(filename: "zephyr/include/zephyr/linker/utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!3746 = !DISubroutineType(types: !3747)
!3747 = !{!347, !13}
!3748 = !{!3749}
!3749 = !DILocalVariable(name: "addr", arg: 1, scope: !3744, file: !3745, line: 24, type: !13)
!3750 = !DILocation(line: 0, scope: !3744)
!3751 = !DILocation(line: 49, column: 30, scope: !3744)
!3752 = !DILocation(line: 49, column: 57, scope: !3744)
!3753 = !DILocation(line: 49, column: 2, scope: !3744)
!3754 = distinct !DISubprogram(name: "cbprintf_package", scope: !288, file: !288, line: 815, type: !3755, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3757)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{!109, !107, !232, !110, !279, null}
!3757 = !{!3758, !3759, !3760, !3761, !3762, !3763}
!3758 = !DILocalVariable(name: "packaged", arg: 1, scope: !3754, file: !288, line: 815, type: !107)
!3759 = !DILocalVariable(name: "len", arg: 2, scope: !3754, file: !288, line: 815, type: !232)
!3760 = !DILocalVariable(name: "flags", arg: 3, scope: !3754, file: !288, line: 815, type: !110)
!3761 = !DILocalVariable(name: "format", arg: 4, scope: !3754, file: !288, line: 816, type: !279)
!3762 = !DILocalVariable(name: "ap", scope: !3754, file: !288, line: 818, type: !3392)
!3763 = !DILocalVariable(name: "ret", scope: !3754, file: !288, line: 819, type: !109)
!3764 = !DILocation(line: 0, scope: !3754)
!3765 = !DILocation(line: 818, column: 2, scope: !3754)
!3766 = !DILocation(line: 818, column: 10, scope: !3754)
!3767 = !DILocation(line: 821, column: 2, scope: !3754)
!3768 = !DILocation(line: 822, column: 8, scope: !3754)
!3769 = !DILocation(line: 823, column: 2, scope: !3754)
!3770 = !DILocation(line: 825, column: 1, scope: !3754)
!3771 = !DILocation(line: 824, column: 2, scope: !3754)
!3772 = distinct !DISubprogram(name: "cbpprintf_external", scope: !288, file: !288, line: 827, type: !3773, scopeLine: 830, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3783)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!109, !3775, !3779, !107, !107}
!3775 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_cb", file: !3425, line: 297, baseType: !3776)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 32)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!109, null}
!3779 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbvprintf_external_formatter_func", file: !3425, line: 328, baseType: !3780)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 32)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!109, !3775, !107, !279, !3392}
!3783 = !{!3784, !3785, !3786, !3787, !3788, !3789, !3795, !3796, !3797, !3798, !3799, !3800, !3801, !3802}
!3784 = !DILocalVariable(name: "out", arg: 1, scope: !3772, file: !288, line: 827, type: !3775)
!3785 = !DILocalVariable(name: "formatter", arg: 2, scope: !3772, file: !288, line: 828, type: !3779)
!3786 = !DILocalVariable(name: "ctx", arg: 3, scope: !3772, file: !288, line: 829, type: !107)
!3787 = !DILocalVariable(name: "packaged", arg: 4, scope: !3772, file: !288, line: 829, type: !107)
!3788 = !DILocalVariable(name: "buf", scope: !3772, file: !288, line: 831, type: !286)
!3789 = !DILocalVariable(name: "hdr", scope: !3772, file: !288, line: 832, type: !3790)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3791, size: 32)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cbprintf_package_hdr_ext", file: !3425, line: 96, size: 64, elements: !3792)
!3792 = !{!3793, !3794}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !3791, file: !3425, line: 98, baseType: !3424, size: 32)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !3791, file: !3425, line: 101, baseType: !285, size: 32, offset: 32)
!3795 = !DILocalVariable(name: "s", scope: !3772, file: !288, line: 833, type: !285)
!3796 = !DILocalVariable(name: "ps", scope: !3772, file: !288, line: 833, type: !284)
!3797 = !DILocalVariable(name: "i", scope: !3772, file: !288, line: 834, type: !32)
!3798 = !DILocalVariable(name: "args_size", scope: !3772, file: !288, line: 834, type: !32)
!3799 = !DILocalVariable(name: "s_nbr", scope: !3772, file: !288, line: 834, type: !32)
!3800 = !DILocalVariable(name: "ros_nbr", scope: !3772, file: !288, line: 834, type: !32)
!3801 = !DILocalVariable(name: "rws_nbr", scope: !3772, file: !288, line: 834, type: !32)
!3802 = !DILocalVariable(name: "s_idx", scope: !3772, file: !288, line: 834, type: !32)
!3803 = !DILocation(line: 0, scope: !3772)
!3804 = !DILocation(line: 836, column: 10, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3772, file: !288, line: 836, column: 6)
!3806 = !DILocation(line: 836, column: 6, scope: !3772)
!3807 = !DILocation(line: 842, column: 28, scope: !3772)
!3808 = !DILocation(line: 842, column: 14, scope: !3772)
!3809 = !DILocation(line: 852, column: 16, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3811, file: !288, line: 852, column: 2)
!3811 = distinct !DILexicalBlock(scope: !3772, file: !288, line: 852, column: 2)
!3812 = !DILocation(line: 852, column: 2, scope: !3811)
!3813 = !DILocation(line: 841, column: 28, scope: !3772)
!3814 = !DILocation(line: 841, column: 14, scope: !3772)
!3815 = !DILocation(line: 841, column: 32, scope: !3772)
!3816 = !DILocation(line: 847, column: 19, scope: !3772)
!3817 = !DILocation(line: 843, column: 28, scope: !3772)
!3818 = !DILocation(line: 843, column: 14, scope: !3772)
!3819 = !DILocation(line: 847, column: 31, scope: !3772)
!3820 = !DILocation(line: 844, column: 28, scope: !3772)
!3821 = !DILocation(line: 844, column: 14, scope: !3772)
!3822 = !DILocation(line: 847, column: 45, scope: !3772)
!3823 = !DILocation(line: 847, column: 41, scope: !3772)
!3824 = !DILocation(line: 854, column: 24, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3810, file: !288, line: 852, column: 30)
!3826 = !DILocation(line: 854, column: 11, scope: !3825)
!3827 = !DILocation(line: 855, column: 30, scope: !3825)
!3828 = !DILocation(line: 855, column: 22, scope: !3825)
!3829 = !DILocation(line: 855, column: 8, scope: !3825)
!3830 = !DILocation(line: 857, column: 7, scope: !3825)
!3831 = !DILocation(line: 859, column: 8, scope: !3825)
!3832 = !DILocation(line: 859, column: 18, scope: !3825)
!3833 = !DILocation(line: 859, column: 5, scope: !3825)
!3834 = !DILocation(line: 852, column: 26, scope: !3810)
!3835 = distinct !{!3835, !3812, !3836}
!3836 = !DILocation(line: 860, column: 2, scope: !3811)
!3837 = !DILocation(line: 863, column: 6, scope: !3772)
!3838 = !DILocation(line: 866, column: 56, scope: !3772)
!3839 = !DILocation(line: 866, column: 9, scope: !3772)
!3840 = !DILocation(line: 866, column: 2, scope: !3772)
!3841 = !DILocation(line: 867, column: 1, scope: !3772)
!3842 = distinct !DISubprogram(name: "cbprintf_via_va_list", scope: !288, file: !288, line: 179, type: !3843, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3845)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{!109, !3775, !3779, !107, !279, !107}
!3845 = !{!3846, !3847, !3848, !3849, !3850, !3851}
!3846 = !DILocalVariable(name: "out", arg: 1, scope: !3842, file: !288, line: 179, type: !3775)
!3847 = !DILocalVariable(name: "formatter", arg: 2, scope: !3842, file: !288, line: 180, type: !3779)
!3848 = !DILocalVariable(name: "ctx", arg: 3, scope: !3842, file: !288, line: 181, type: !107)
!3849 = !DILocalVariable(name: "fmt", arg: 4, scope: !3842, file: !288, line: 182, type: !279)
!3850 = !DILocalVariable(name: "buf", arg: 5, scope: !3842, file: !288, line: 182, type: !107)
!3851 = !DILocalVariable(name: "u", scope: !3842, file: !288, line: 187, type: !3852)
!3852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3842, file: !288, line: 184, size: 32, elements: !3853)
!3853 = !{!3854, !3855}
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "ap", scope: !3852, file: !288, line: 185, baseType: !3392, size: 32)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3852, file: !288, line: 186, baseType: !107, size: 32)
!3856 = !DILocation(line: 0, scope: !3842)
!3857 = !DILocation(line: 191, column: 9, scope: !3842)
!3858 = !DILocation(line: 191, column: 2, scope: !3842)
!3859 = distinct !DISubprogram(name: "is_ptr", scope: !288, file: !288, line: 881, type: !3860, scopeLine: 882, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3862)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!347, !279, !109}
!3862 = !{!3863, !3864, !3865, !3866, !3867}
!3863 = !DILocalVariable(name: "fmt", arg: 1, scope: !3859, file: !288, line: 881, type: !279)
!3864 = !DILocalVariable(name: "n", arg: 2, scope: !3859, file: !288, line: 881, type: !109)
!3865 = !DILocalVariable(name: "c", scope: !3859, file: !288, line: 883, type: !148)
!3866 = !DILocalVariable(name: "mod", scope: !3859, file: !288, line: 884, type: !347)
!3867 = !DILocalVariable(name: "cnt", scope: !3859, file: !288, line: 885, type: !109)
!3868 = !DILocation(line: 0, scope: !3859)
!3869 = !DILocation(line: 887, column: 14, scope: !3859)
!3870 = !DILocation(line: 887, column: 22, scope: !3859)
!3871 = !DILocation(line: 887, column: 2, scope: !3859)
!3872 = !DILocation(line: 887, column: 18, scope: !3859)
!3873 = !DILocation(line: 888, column: 7, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3859, file: !288, line: 887, column: 31)
!3875 = !DILocation(line: 889, column: 12, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !288, line: 889, column: 8)
!3877 = distinct !DILexicalBlock(scope: !3878, file: !288, line: 888, column: 12)
!3878 = distinct !DILexicalBlock(scope: !3874, file: !288, line: 888, column: 7)
!3879 = !DILocation(line: 889, column: 8, scope: !3877)
!3880 = !DILocation(line: 890, column: 11, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !288, line: 890, column: 9)
!3882 = distinct !DILexicalBlock(scope: !3876, file: !288, line: 889, column: 18)
!3883 = !DILocation(line: 890, column: 9, scope: !3882)
!3884 = !DILocation(line: 892, column: 16, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !288, line: 892, column: 16)
!3886 = !DILocation(line: 892, column: 16, scope: !3881)
!3887 = !DILocation(line: 895, column: 15, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3876, file: !288, line: 895, column: 15)
!3889 = !DILocation(line: 895, column: 15, scope: !3876)
!3890 = !DILocation(line: 900, column: 9, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3874, file: !288, line: 900, column: 7)
!3892 = !DILocation(line: 900, column: 7, scope: !3874)
!3893 = distinct !{!3893, !3871, !3894}
!3894 = !DILocation(line: 903, column: 2, scope: !3859)
!3895 = !DILocation(line: 906, column: 1, scope: !3859)
!3896 = distinct !DISubprogram(name: "is_fmt_spec", scope: !288, file: !288, line: 873, type: !3897, scopeLine: 874, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3899)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{!347, !148}
!3899 = !{!3900}
!3900 = !DILocalVariable(name: "c", arg: 1, scope: !3896, file: !288, line: 873, type: !148)
!3901 = !DILocation(line: 0, scope: !3896)
!3902 = !DILocation(line: 875, column: 19, scope: !3896)
!3903 = !DILocation(line: 875, column: 2, scope: !3896)
!3904 = distinct !DISubprogram(name: "cbprintf_package_convert", scope: !288, file: !288, line: 908, type: !3905, scopeLine: 915, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !3911)
!3905 = !DISubroutineType(types: !3906)
!3906 = !{!109, !107, !232, !3907, !107, !110, !2781, !232}
!3907 = !DIDerivedType(tag: DW_TAG_typedef, name: "cbprintf_convert_cb", file: !3425, line: 308, baseType: !3908)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 32)
!3909 = !DISubroutineType(types: !3910)
!3910 = !{!109, !13, !232, !107}
!3911 = !{!3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3929, !3930, !3931, !3932, !3933, !3939, !3942, !3943, !3944, !3946, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3962, !3965, !3966, !3967, !3968, !3969, !3970, !3972, !3975, !3976, !3977}
!3912 = !DILocalVariable(name: "in_packaged", arg: 1, scope: !3904, file: !288, line: 908, type: !107)
!3913 = !DILocalVariable(name: "in_len", arg: 2, scope: !3904, file: !288, line: 909, type: !232)
!3914 = !DILocalVariable(name: "cb", arg: 3, scope: !3904, file: !288, line: 910, type: !3907)
!3915 = !DILocalVariable(name: "ctx", arg: 4, scope: !3904, file: !288, line: 911, type: !107)
!3916 = !DILocalVariable(name: "flags", arg: 5, scope: !3904, file: !288, line: 912, type: !110)
!3917 = !DILocalVariable(name: "strl", arg: 6, scope: !3904, file: !288, line: 913, type: !2781)
!3918 = !DILocalVariable(name: "strl_len", arg: 7, scope: !3904, file: !288, line: 914, type: !232)
!3919 = !DILocalVariable(name: "buf", scope: !3904, file: !288, line: 918, type: !286)
!3920 = !DILocalVariable(name: "buf32", scope: !3904, file: !288, line: 919, type: !884)
!3921 = !DILocalVariable(name: "args_size", scope: !3904, file: !288, line: 920, type: !32)
!3922 = !DILocalVariable(name: "ros_nbr", scope: !3904, file: !288, line: 920, type: !32)
!3923 = !DILocalVariable(name: "rws_nbr", scope: !3904, file: !288, line: 920, type: !32)
!3924 = !DILocalVariable(name: "fmt_present", scope: !3904, file: !288, line: 921, type: !347)
!3925 = !DILocalVariable(name: "rw_cpy", scope: !3904, file: !288, line: 922, type: !347)
!3926 = !DILocalVariable(name: "ro_cpy", scope: !3904, file: !288, line: 923, type: !347)
!3927 = !DILocalVariable(name: "in_desc", scope: !3904, file: !288, line: 924, type: !3928)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 32)
!3929 = !DILocalVariable(name: "out_len", scope: !3904, file: !288, line: 960, type: !109)
!3930 = !DILocalVariable(name: "fmt", scope: !3904, file: !288, line: 965, type: !279)
!3931 = !DILocalVariable(name: "str_pos", scope: !3904, file: !288, line: 966, type: !286)
!3932 = !DILocalVariable(name: "strl_cnt", scope: !3904, file: !288, line: 967, type: !232)
!3933 = !DILocalVariable(name: "i", scope: !3934, file: !288, line: 973, type: !109)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !288, line: 973, column: 4)
!3935 = distinct !DILexicalBlock(scope: !3936, file: !288, line: 972, column: 15)
!3936 = distinct !DILexicalBlock(scope: !3937, file: !288, line: 972, column: 7)
!3937 = distinct !DILexicalBlock(scope: !3938, file: !288, line: 970, column: 18)
!3938 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 970, column: 6)
!3939 = !DILocalVariable(name: "str", scope: !3940, file: !288, line: 974, type: !279)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !288, line: 973, column: 38)
!3941 = distinct !DILexicalBlock(scope: !3934, file: !288, line: 973, column: 4)
!3942 = !DILocalVariable(name: "len", scope: !3940, file: !288, line: 975, type: !109)
!3943 = !DILocalVariable(name: "drop_ro_str_pos", scope: !3937, file: !288, line: 990, type: !347)
!3944 = !DILocalVariable(name: "i", scope: !3945, file: !288, line: 995, type: !109)
!3945 = distinct !DILexicalBlock(scope: !3937, file: !288, line: 995, column: 3)
!3946 = !DILocalVariable(name: "arg_idx", scope: !3947, file: !288, line: 996, type: !178)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !288, line: 995, column: 37)
!3948 = distinct !DILexicalBlock(scope: !3945, file: !288, line: 995, column: 3)
!3949 = !DILocalVariable(name: "arg_pos", scope: !3947, file: !288, line: 997, type: !178)
!3950 = !DILocalVariable(name: "str", scope: !3947, file: !288, line: 998, type: !279)
!3951 = !DILocalVariable(name: "is_ro", scope: !3947, file: !288, line: 999, type: !347)
!3952 = !DILocalVariable(name: "len", scope: !3947, file: !288, line: 1000, type: !109)
!3953 = !DILocalVariable(name: "out_desc", scope: !3904, file: !288, line: 1038, type: !3428)
!3954 = !DILocalVariable(name: "cpy_str_pos", scope: !3904, file: !288, line: 1040, type: !3410)
!3955 = !DILocalVariable(name: "keep_str_pos", scope: !3904, file: !288, line: 1042, type: !3410)
!3956 = !DILocalVariable(name: "scpy_cnt", scope: !3904, file: !288, line: 1043, type: !178)
!3957 = !DILocalVariable(name: "keep_cnt", scope: !3904, file: !288, line: 1044, type: !178)
!3958 = !DILocalVariable(name: "dst", scope: !3904, file: !288, line: 1045, type: !286)
!3959 = !DILocalVariable(name: "rv", scope: !3904, file: !288, line: 1046, type: !109)
!3960 = !DILocalVariable(name: "i", scope: !3961, file: !288, line: 1074, type: !109)
!3961 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 1074, column: 2)
!3962 = !DILocalVariable(name: "arg_idx", scope: !3963, file: !288, line: 1075, type: !178)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !288, line: 1074, column: 36)
!3964 = distinct !DILexicalBlock(scope: !3961, file: !288, line: 1074, column: 2)
!3965 = !DILocalVariable(name: "arg_pos", scope: !3963, file: !288, line: 1076, type: !178)
!3966 = !DILocalVariable(name: "str", scope: !3963, file: !288, line: 1077, type: !279)
!3967 = !DILocalVariable(name: "is_ro", scope: !3963, file: !288, line: 1078, type: !347)
!3968 = !DILocalVariable(name: "in_desc_backup", scope: !3904, file: !288, line: 1114, type: !3428)
!3969 = !DILocalVariable(name: "strs_len", scope: !3904, file: !288, line: 1134, type: !232)
!3970 = !DILocalVariable(name: "i", scope: !3971, file: !288, line: 1143, type: !109)
!3971 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 1143, column: 2)
!3972 = !DILocalVariable(name: "loc", scope: !3973, file: !288, line: 1144, type: !178)
!3973 = distinct !DILexicalBlock(scope: !3974, file: !288, line: 1143, column: 37)
!3974 = distinct !DILexicalBlock(scope: !3971, file: !288, line: 1143, column: 2)
!3975 = !DILocalVariable(name: "str", scope: !3973, file: !288, line: 1145, type: !279)
!3976 = !DILocalVariable(name: "str_len", scope: !3973, file: !288, line: 1146, type: !192)
!3977 = !DILabel(scope: !3978, name: "calculate_string_length", file: !288, line: 1021)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !288, line: 1020, column: 56)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !288, line: 1020, column: 15)
!3980 = distinct !DILexicalBlock(scope: !3947, file: !288, line: 1014, column: 8)
!3981 = !DILocation(line: 0, scope: !3904)
!3982 = !DILocation(line: 916, column: 2, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3984, file: !288, line: 916, column: 2)
!3984 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 916, column: 2)
!3985 = !DILocation(line: 916, column: 2, scope: !3984)
!3986 = !DILocation(line: 916, column: 2, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3983, file: !288, line: 916, column: 2)
!3988 = !DILocation(line: 919, column: 20, scope: !3904)
!3989 = !DILocation(line: 921, column: 27, scope: !3904)
!3990 = !DILocation(line: 921, column: 21, scope: !3904)
!3991 = !DILocation(line: 926, column: 18, scope: !3904)
!3992 = !DILocation(line: 926, column: 11, scope: !3904)
!3993 = !DILocation(line: 926, column: 34, scope: !3904)
!3994 = !DILocation(line: 931, column: 21, scope: !3904)
!3995 = !DILocation(line: 931, column: 12, scope: !3904)
!3996 = !DILocation(line: 932, column: 11, scope: !3904)
!3997 = !DILocation(line: 932, column: 19, scope: !3904)
!3998 = !DILocation(line: 938, column: 21, scope: !3904)
!3999 = !DILocation(line: 938, column: 12, scope: !3904)
!4000 = !DILocation(line: 939, column: 19, scope: !3904)
!4001 = !DILocation(line: 939, column: 23, scope: !3904)
!4002 = !DILocation(line: 946, column: 14, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 946, column: 6)
!4004 = !DILocation(line: 947, column: 7, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !288, line: 947, column: 7)
!4006 = distinct !DILexicalBlock(scope: !4003, file: !288, line: 946, column: 26)
!4007 = !DILocation(line: 947, column: 7, scope: !4006)
!4008 = !DILocation(line: 948, column: 4, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4005, file: !288, line: 947, column: 11)
!4010 = !DILocation(line: 949, column: 3, scope: !4009)
!4011 = !DILocation(line: 958, column: 23, scope: !3904)
!4012 = !DILocation(line: 958, column: 14, scope: !3904)
!4013 = !DILocation(line: 958, column: 27, scope: !3904)
!4014 = !DILocation(line: 965, column: 41, scope: !3904)
!4015 = !DILocation(line: 965, column: 20, scope: !3904)
!4016 = !DILocation(line: 966, column: 22, scope: !3904)
!4017 = !DILocation(line: 970, column: 9, scope: !3938)
!4018 = !DILocation(line: 970, column: 6, scope: !3904)
!4019 = !DILocation(line: 972, column: 7, scope: !3937)
!4020 = !DILocation(line: 0, scope: !3934)
!4021 = !DILocation(line: 973, column: 4, scope: !3934)
!4022 = !DILocation(line: 974, column: 46, scope: !3940)
!4023 = !DILocation(line: 974, column: 40, scope: !3940)
!4024 = !DILocation(line: 974, column: 23, scope: !3940)
!4025 = !DILocation(line: 0, scope: !3940)
!4026 = !DILocation(line: 975, column: 15, scope: !3940)
!4027 = !DILocation(line: 978, column: 14, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !3940, file: !288, line: 978, column: 9)
!4029 = !DILocation(line: 979, column: 25, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4028, file: !288, line: 978, column: 38)
!4031 = !DILocation(line: 979, column: 19, scope: !4030)
!4032 = !DILocation(line: 979, column: 6, scope: !4030)
!4033 = !DILocation(line: 979, column: 23, scope: !4030)
!4034 = !DILocation(line: 980, column: 5, scope: !4030)
!4035 = !DILocation(line: 981, column: 13, scope: !3940)
!4036 = !DILocation(line: 982, column: 12, scope: !3940)
!4037 = !DILocation(line: 973, column: 34, scope: !3941)
!4038 = !DILocation(line: 973, column: 22, scope: !3941)
!4039 = distinct !{!4039, !4021, !4040}
!4040 = !DILocation(line: 983, column: 4, scope: !3934)
!4041 = !DILocation(line: 985, column: 16, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !4043, file: !288, line: 985, column: 8)
!4043 = distinct !DILexicalBlock(scope: !3936, file: !288, line: 984, column: 10)
!4044 = !DILocation(line: 967, column: 9, scope: !3904)
!4045 = !DILocation(line: 971, column: 11, scope: !3937)
!4046 = !DILocation(line: 0, scope: !3937)
!4047 = !DILocation(line: 0, scope: !3945)
!4048 = !DILocation(line: 995, column: 21, scope: !3948)
!4049 = !DILocation(line: 995, column: 3, scope: !3945)
!4050 = !DILocation(line: 990, column: 34, scope: !3937)
!4051 = !DILocation(line: 990, column: 26, scope: !3937)
!4052 = !DILocation(line: 996, column: 30, scope: !3947)
!4053 = !DILocation(line: 0, scope: !3947)
!4054 = !DILocation(line: 997, column: 30, scope: !3947)
!4055 = !DILocation(line: 997, column: 22, scope: !3947)
!4056 = !DILocation(line: 998, column: 39, scope: !3947)
!4057 = !DILocation(line: 998, column: 22, scope: !3947)
!4058 = !DILocation(line: 999, column: 17, scope: !3947)
!4059 = !DILocation(line: 1002, column: 20, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !3947, file: !288, line: 1002, column: 8)
!4061 = !DILocation(line: 996, column: 22, scope: !3947)
!4062 = !DILocation(line: 1002, column: 35, scope: !4060)
!4063 = !DILocation(line: 1002, column: 23, scope: !4060)
!4064 = !DILocation(line: 1002, column: 8, scope: !3947)
!4065 = !DILocation(line: 1003, column: 5, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !288, line: 1003, column: 5)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !288, line: 1003, column: 5)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !288, line: 1003, column: 5)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !288, line: 1003, column: 5)
!4070 = distinct !DILexicalBlock(scope: !4060, file: !288, line: 1002, column: 45)
!4071 = !DILocation(line: 1010, column: 13, scope: !4070)
!4072 = !DILocation(line: 1011, column: 5, scope: !4070)
!4073 = !DILocation(line: 1014, column: 8, scope: !3947)
!4074 = !DILocation(line: 1015, column: 9, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !3980, file: !288, line: 1014, column: 15)
!4076 = !DILocation(line: 1018, column: 14, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !288, line: 1017, column: 12)
!4078 = distinct !DILexicalBlock(scope: !4075, file: !288, line: 1015, column: 9)
!4079 = !DILocation(line: 1020, column: 4, scope: !4075)
!4080 = !DILocation(line: 1020, column: 15, scope: !3980)
!4081 = !DILocation(line: 1021, column: 1, scope: !3978)
!4082 = !DILocation(line: 1022, column: 11, scope: !3978)
!4083 = !DILocation(line: 1025, column: 14, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !3978, file: !288, line: 1025, column: 9)
!4085 = !DILocation(line: 1026, column: 25, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !4084, file: !288, line: 1025, column: 38)
!4087 = !DILocation(line: 1026, column: 19, scope: !4086)
!4088 = !DILocation(line: 1026, column: 6, scope: !4086)
!4089 = !DILocation(line: 1026, column: 23, scope: !4086)
!4090 = !DILocation(line: 1027, column: 5, scope: !4086)
!4091 = !DILocation(line: 1031, column: 21, scope: !3978)
!4092 = !DILocation(line: 1031, column: 13, scope: !3978)
!4093 = !DILocation(line: 1032, column: 4, scope: !3978)
!4094 = !DILocation(line: 995, column: 33, scope: !3948)
!4095 = distinct !{!4095, !4049, !4096}
!4096 = !DILocation(line: 1033, column: 3, scope: !3945)
!4097 = !DILocation(line: 1040, column: 10, scope: !3904)
!4098 = !DILocation(line: 1042, column: 10, scope: !3904)
!4099 = !DILocation(line: 1052, column: 6, scope: !3904)
!4100 = !DILocation(line: 1055, column: 9, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4102, file: !288, line: 1052, column: 14)
!4102 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 1052, column: 6)
!4103 = !DILocation(line: 1056, column: 2, scope: !4101)
!4104 = !DILocation(line: 1056, column: 21, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4102, file: !288, line: 1056, column: 13)
!4106 = !DILocation(line: 1066, column: 3, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4108, file: !288, line: 1065, column: 11)
!4108 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 1065, column: 6)
!4109 = !DILocation(line: 1067, column: 2, scope: !4107)
!4110 = !DILocation(line: 1068, column: 10, scope: !3904)
!4111 = !DILocation(line: 0, scope: !3961)
!4112 = !DILocation(line: 1074, column: 20, scope: !3964)
!4113 = !DILocation(line: 1074, column: 2, scope: !3961)
!4114 = !DILocation(line: 1110, column: 24, scope: !3904)
!4115 = !DILocation(line: 1053, column: 12, scope: !4101)
!4116 = !DILocation(line: 1054, column: 12, scope: !4101)
!4117 = !DILocation(line: 1108, column: 30, scope: !3904)
!4118 = !DILocation(line: 1108, column: 40, scope: !3904)
!4119 = !DILocation(line: 1108, column: 38, scope: !3904)
!4120 = !DILocation(line: 1109, column: 31, scope: !3904)
!4121 = !DILocation(line: 1109, column: 24, scope: !3904)
!4122 = !DILocation(line: 1110, column: 31, scope: !3904)
!4123 = !DILocation(line: 1114, column: 31, scope: !3904)
!4124 = !DILocation(line: 1114, column: 48, scope: !3904)
!4125 = !DILocation(line: 1115, column: 13, scope: !3904)
!4126 = !DILocation(line: 1118, column: 7, scope: !3904)
!4127 = !DILocation(line: 1119, column: 9, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 1119, column: 6)
!4129 = !DILocation(line: 1119, column: 6, scope: !3904)
!4130 = !DILocation(line: 1075, column: 29, scope: !3963)
!4131 = !DILocation(line: 1075, column: 21, scope: !3963)
!4132 = !DILocation(line: 0, scope: !3963)
!4133 = !DILocation(line: 1076, column: 29, scope: !3963)
!4134 = !DILocation(line: 1076, column: 21, scope: !3963)
!4135 = !DILocation(line: 1077, column: 38, scope: !3963)
!4136 = !DILocation(line: 1077, column: 21, scope: !3963)
!4137 = !DILocation(line: 1078, column: 16, scope: !3963)
!4138 = !DILocation(line: 1080, column: 19, scope: !4139)
!4139 = distinct !DILexicalBlock(scope: !3963, file: !288, line: 1080, column: 7)
!4140 = !DILocation(line: 1080, column: 34, scope: !4139)
!4141 = !DILocation(line: 1080, column: 22, scope: !4139)
!4142 = !DILocation(line: 1080, column: 7, scope: !3963)
!4143 = !DILocation(line: 1084, column: 7, scope: !3963)
!4144 = !DILocation(line: 1085, column: 8, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4146, file: !288, line: 1084, column: 14)
!4146 = distinct !DILexicalBlock(scope: !3963, file: !288, line: 1084, column: 7)
!4147 = !DILocation(line: 1086, column: 5, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !4149, file: !288, line: 1086, column: 5)
!4149 = distinct !DILexicalBlock(scope: !4150, file: !288, line: 1086, column: 5)
!4150 = distinct !DILexicalBlock(scope: !4151, file: !288, line: 1085, column: 49)
!4151 = distinct !DILexicalBlock(scope: !4145, file: !288, line: 1085, column: 8)
!4152 = !DILocation(line: 1086, column: 5, scope: !4149)
!4153 = !DILocation(line: 1086, column: 5, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4148, file: !288, line: 1086, column: 5)
!4155 = !DILocation(line: 1087, column: 25, scope: !4150)
!4156 = !DILocation(line: 1087, column: 5, scope: !4150)
!4157 = !DILocation(line: 1088, column: 4, scope: !4150)
!4158 = !DILocation(line: 1088, column: 15, scope: !4151)
!4159 = !DILocation(line: 1089, column: 5, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4161, file: !288, line: 1089, column: 5)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !288, line: 1089, column: 5)
!4162 = distinct !DILexicalBlock(scope: !4163, file: !288, line: 1088, column: 61)
!4163 = distinct !DILexicalBlock(scope: !4151, file: !288, line: 1088, column: 15)
!4164 = !DILocation(line: 1089, column: 5, scope: !4161)
!4165 = !DILocation(line: 1089, column: 5, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4160, file: !288, line: 1089, column: 5)
!4167 = !DILocation(line: 1090, column: 26, scope: !4162)
!4168 = !DILocation(line: 1090, column: 5, scope: !4162)
!4169 = !DILocation(line: 1091, column: 4, scope: !4162)
!4170 = !DILocation(line: 1095, column: 8, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4146, file: !288, line: 1094, column: 10)
!4172 = !DILocation(line: 1096, column: 5, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4174, file: !288, line: 1096, column: 5)
!4174 = distinct !DILexicalBlock(scope: !4175, file: !288, line: 1096, column: 5)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !288, line: 1095, column: 49)
!4176 = distinct !DILexicalBlock(scope: !4171, file: !288, line: 1095, column: 8)
!4177 = !DILocation(line: 1096, column: 5, scope: !4174)
!4178 = !DILocation(line: 1096, column: 5, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4173, file: !288, line: 1096, column: 5)
!4180 = !DILocation(line: 1097, column: 25, scope: !4175)
!4181 = !DILocation(line: 1097, column: 5, scope: !4175)
!4182 = !DILocation(line: 1098, column: 4, scope: !4175)
!4183 = !DILocation(line: 1099, column: 5, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4185, file: !288, line: 1099, column: 5)
!4185 = distinct !DILexicalBlock(scope: !4186, file: !288, line: 1099, column: 5)
!4186 = distinct !DILexicalBlock(scope: !4176, file: !288, line: 1098, column: 11)
!4187 = !DILocation(line: 1099, column: 5, scope: !4185)
!4188 = !DILocation(line: 1099, column: 5, scope: !4189)
!4189 = distinct !DILexicalBlock(scope: !4184, file: !288, line: 1099, column: 5)
!4190 = !DILocation(line: 1100, column: 26, scope: !4186)
!4191 = !DILocation(line: 1100, column: 5, scope: !4186)
!4192 = !DILocation(line: 1100, column: 30, scope: !4186)
!4193 = !DILocation(line: 1101, column: 26, scope: !4186)
!4194 = !DILocation(line: 1101, column: 5, scope: !4186)
!4195 = !DILocation(line: 0, scope: !4146)
!4196 = !DILocation(line: 1074, column: 32, scope: !3964)
!4197 = distinct !{!4197, !4113, !4198}
!4198 = !DILocation(line: 1104, column: 2, scope: !3961)
!4199 = !DILocation(line: 1124, column: 13, scope: !3904)
!4200 = !DILocation(line: 1127, column: 10, scope: !3904)
!4201 = !DILocation(line: 1127, column: 7, scope: !3904)
!4202 = !DILocation(line: 1128, column: 9, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 1128, column: 6)
!4204 = !DILocation(line: 1128, column: 6, scope: !3904)
!4205 = !DILocation(line: 1134, column: 27, scope: !3904)
!4206 = !DILocation(line: 1136, column: 7, scope: !3904)
!4207 = !DILocation(line: 1137, column: 9, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !3904, file: !288, line: 1137, column: 6)
!4209 = !DILocation(line: 1137, column: 6, scope: !3904)
!4210 = !DILocation(line: 1131, column: 10, scope: !3904)
!4211 = !DILocation(line: 1140, column: 10, scope: !3904)
!4212 = !DILocation(line: 0, scope: !3971)
!4213 = !DILocation(line: 1143, column: 20, scope: !3974)
!4214 = !DILocation(line: 1143, column: 2, scope: !3971)
!4215 = !DILocation(line: 1144, column: 3, scope: !3973)
!4216 = !DILocation(line: 1144, column: 17, scope: !3973)
!4217 = !DILocation(line: 0, scope: !3973)
!4218 = !DILocation(line: 1144, column: 11, scope: !3973)
!4219 = !DILocation(line: 1145, column: 38, scope: !3973)
!4220 = !DILocation(line: 1145, column: 21, scope: !3973)
!4221 = !DILocation(line: 1146, column: 22, scope: !3973)
!4222 = !DILocation(line: 1146, column: 29, scope: !3973)
!4223 = !DILocation(line: 1148, column: 8, scope: !3973)
!4224 = !DILocation(line: 1149, column: 10, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !3973, file: !288, line: 1149, column: 7)
!4226 = !DILocation(line: 1149, column: 7, scope: !3973)
!4227 = !DILocation(line: 1154, column: 8, scope: !3973)
!4228 = !DILocation(line: 1155, column: 10, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !3973, file: !288, line: 1155, column: 7)
!4230 = !DILocation(line: 1155, column: 7, scope: !3973)
!4231 = !DILocation(line: 1159, column: 2, scope: !3974)
!4232 = !DILocation(line: 1152, column: 11, scope: !3973)
!4233 = !DILocation(line: 1158, column: 11, scope: !3973)
!4234 = !DILocation(line: 1143, column: 33, scope: !3974)
!4235 = distinct !{!4235, !4214, !4236}
!4236 = !DILocation(line: 1159, column: 2, scope: !3971)
!4237 = !DILocation(line: 1162, column: 8, scope: !3904)
!4238 = !DILocation(line: 1164, column: 2, scope: !3904)
!4239 = !DILocation(line: 1165, column: 1, scope: !3904)
!4240 = distinct !DISubprogram(name: "get_package_len", scope: !288, file: !288, line: 196, type: !4241, scopeLine: 197, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4243)
!4241 = !DISubroutineType(types: !4242)
!4242 = !{!232, !107}
!4243 = !{!4244, !4245, !4246, !4247, !4248, !4249, !4250}
!4244 = !DILocalVariable(name: "packaged", arg: 1, scope: !4240, file: !288, line: 196, type: !107)
!4245 = !DILocalVariable(name: "buf", scope: !4240, file: !288, line: 200, type: !286)
!4246 = !DILocalVariable(name: "start", scope: !4240, file: !288, line: 201, type: !286)
!4247 = !DILocalVariable(name: "args_size", scope: !4240, file: !288, line: 202, type: !32)
!4248 = !DILocalVariable(name: "s_nbr", scope: !4240, file: !288, line: 202, type: !32)
!4249 = !DILocalVariable(name: "ros_nbr", scope: !4240, file: !288, line: 202, type: !32)
!4250 = !DILocalVariable(name: "i", scope: !4251, file: !288, line: 215, type: !109)
!4251 = distinct !DILexicalBlock(scope: !4240, file: !288, line: 215, column: 2)
!4252 = !DILocation(line: 0, scope: !4240)
!4253 = !DILocation(line: 198, column: 2, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4255, file: !288, line: 198, column: 2)
!4255 = distinct !DILexicalBlock(scope: !4240, file: !288, line: 198, column: 2)
!4256 = !DILocation(line: 198, column: 2, scope: !4255)
!4257 = !DILocation(line: 198, column: 2, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4254, file: !288, line: 198, column: 2)
!4259 = !DILocation(line: 204, column: 14, scope: !4240)
!4260 = !DILocation(line: 204, column: 21, scope: !4240)
!4261 = !DILocation(line: 205, column: 14, scope: !4240)
!4262 = !DILocation(line: 206, column: 14, scope: !4240)
!4263 = !DILocation(line: 209, column: 6, scope: !4240)
!4264 = !DILocation(line: 212, column: 6, scope: !4240)
!4265 = !DILocation(line: 0, scope: !4251)
!4266 = !DILocation(line: 215, column: 20, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4251, file: !288, line: 215, column: 2)
!4268 = !DILocation(line: 215, column: 2, scope: !4251)
!4269 = !DILocation(line: 220, column: 33, scope: !4240)
!4270 = !DILocation(line: 220, column: 2, scope: !4240)
!4271 = !DILocation(line: 216, column: 6, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4267, file: !288, line: 215, column: 34)
!4273 = !DILocation(line: 217, column: 10, scope: !4272)
!4274 = !DILocation(line: 217, column: 36, scope: !4272)
!4275 = !DILocation(line: 217, column: 7, scope: !4272)
!4276 = !DILocation(line: 215, column: 30, scope: !4267)
!4277 = distinct !{!4277, !4268, !4278}
!4278 = !DILocation(line: 218, column: 2, scope: !4251)
!4279 = distinct !DISubprogram(name: "append_string", scope: !288, file: !288, line: 223, type: !4280, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !271, retainedNodes: !4282)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{!109, !3907, !107, !279, !192}
!4282 = !{!4283, !4284, !4285, !4286}
!4283 = !DILocalVariable(name: "cb", arg: 1, scope: !4279, file: !288, line: 223, type: !3907)
!4284 = !DILocalVariable(name: "ctx", arg: 2, scope: !4279, file: !288, line: 223, type: !107)
!4285 = !DILocalVariable(name: "str", arg: 3, scope: !4279, file: !288, line: 223, type: !279)
!4286 = !DILocalVariable(name: "strl", arg: 4, scope: !4279, file: !288, line: 223, type: !192)
!4287 = !DILocation(line: 0, scope: !4279)
!4288 = !DILocation(line: 225, column: 9, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4279, file: !288, line: 225, column: 6)
!4290 = !DILocation(line: 225, column: 6, scope: !4279)
!4291 = !DILocation(line: 226, column: 14, scope: !4292)
!4292 = distinct !DILexicalBlock(scope: !4289, file: !288, line: 225, column: 18)
!4293 = !DILocation(line: 226, column: 12, scope: !4292)
!4294 = !DILocation(line: 226, column: 3, scope: !4292)
!4295 = !DILocation(line: 229, column: 14, scope: !4279)
!4296 = !DILocation(line: 229, column: 9, scope: !4279)
!4297 = !DILocation(line: 229, column: 27, scope: !4279)
!4298 = !DILocation(line: 229, column: 39, scope: !4279)
!4299 = !DILocation(line: 230, column: 17, scope: !4279)
!4300 = !DILocation(line: 230, column: 9, scope: !4279)
!4301 = !DILocation(line: 230, column: 2, scope: !4279)
!4302 = !DILocation(line: 231, column: 1, scope: !4279)
!4303 = distinct !DISubprogram(name: "arch_printk_char_out", scope: !301, file: !301, line: 45, type: !303, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4304)
!4304 = !{!4305}
!4305 = !DILocalVariable(name: "c", arg: 1, scope: !4303, file: !301, line: 45, type: !109)
!4306 = !DILocation(line: 0, scope: !4303)
!4307 = !DILocation(line: 50, column: 2, scope: !4303)
!4308 = distinct !DISubprogram(name: "__printk_hook_install", scope: !301, file: !301, line: 63, type: !4309, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4311)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{null, !302}
!4311 = !{!4312}
!4312 = !DILocalVariable(name: "fn", arg: 1, scope: !4308, file: !301, line: 63, type: !302)
!4313 = !DILocation(line: 0, scope: !4308)
!4314 = !DILocation(line: 65, column: 12, scope: !4308)
!4315 = !DILocation(line: 66, column: 1, scope: !4308)
!4316 = distinct !DISubprogram(name: "__printk_get_hook", scope: !301, file: !301, line: 76, type: !4317, scopeLine: 77, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !2026)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!107}
!4319 = !DILocation(line: 78, column: 9, scope: !4316)
!4320 = !DILocation(line: 78, column: 2, scope: !4316)
!4321 = distinct !DISubprogram(name: "vprintk", scope: !301, file: !301, line: 113, type: !4322, scopeLine: 114, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4330)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{null, !279, !4324}
!4324 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3393, line: 99, baseType: !4325)
!4325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3393, line: 40, baseType: !4326)
!4326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !301, baseType: !4327)
!4327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4328)
!4328 = !{!4329}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4327, file: !301, line: 79, baseType: !107, size: 32)
!4330 = !{!4331, !4332, !4333}
!4331 = !DILocalVariable(name: "fmt", arg: 1, scope: !4321, file: !301, line: 113, type: !279)
!4332 = !DILocalVariable(name: "ap", arg: 2, scope: !4321, file: !301, line: 113, type: !4324)
!4333 = !DILocalVariable(name: "ctx", scope: !4334, file: !301, line: 121, type: !4336)
!4334 = distinct !DILexicalBlock(scope: !4335, file: !301, line: 120, column: 27)
!4335 = distinct !DILexicalBlock(scope: !4321, file: !301, line: 120, column: 6)
!4336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "buf_out_context", file: !301, line: 81, size: 32, elements: !4337)
!4337 = !{!4338, !4339}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "buf_count", scope: !4336, file: !301, line: 85, baseType: !32, size: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4336, file: !301, line: 86, baseType: !4340, offset: 32)
!4340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, elements: !4341)
!4341 = !{!4342}
!4342 = !DISubrange(count: 0)
!4343 = !DILocation(line: 0, scope: !4321)
!4344 = !DILocation(line: 148, column: 3, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4335, file: !301, line: 138, column: 9)
!4346 = !DILocation(line: 155, column: 1, scope: !4321)
!4347 = distinct !DISubprogram(name: "char_out", scope: !301, file: !301, line: 107, type: !4348, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4350)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!109, !109, !107}
!4350 = !{!4351, !4352}
!4351 = !DILocalVariable(name: "c", arg: 1, scope: !4347, file: !301, line: 107, type: !109)
!4352 = !DILocalVariable(name: "ctx_p", arg: 2, scope: !4347, file: !301, line: 107, type: !107)
!4353 = !DILocation(line: 0, scope: !4347)
!4354 = !DILocation(line: 110, column: 9, scope: !4347)
!4355 = !DILocation(line: 110, column: 2, scope: !4347)
!4356 = distinct !DISubprogram(name: "cbvprintf", scope: !3425, file: !3425, line: 739, type: !4357, scopeLine: 740, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4359)
!4357 = !DISubroutineType(types: !4358)
!4358 = !{!109, !3775, !107, !279, !4324}
!4359 = !{!4360, !4361, !4362, !4363}
!4360 = !DILocalVariable(name: "out", arg: 1, scope: !4356, file: !3425, line: 739, type: !3775)
!4361 = !DILocalVariable(name: "ctx", arg: 2, scope: !4356, file: !3425, line: 739, type: !107)
!4362 = !DILocalVariable(name: "format", arg: 3, scope: !4356, file: !3425, line: 739, type: !279)
!4363 = !DILocalVariable(name: "ap", arg: 4, scope: !4356, file: !3425, line: 739, type: !4324)
!4364 = !DILocation(line: 0, scope: !4356)
!4365 = !DILocation(line: 741, column: 9, scope: !4356)
!4366 = !DILocation(line: 741, column: 2, scope: !4356)
!4367 = distinct !DISubprogram(name: "z_impl_k_str_out", scope: !301, file: !301, line: 157, type: !4368, scopeLine: 158, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4370)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{null, !285, !232}
!4370 = !{!4371, !4372, !4373}
!4371 = !DILocalVariable(name: "c", arg: 1, scope: !4367, file: !301, line: 157, type: !285)
!4372 = !DILocalVariable(name: "n", arg: 2, scope: !4367, file: !301, line: 157, type: !232)
!4373 = !DILocalVariable(name: "i", scope: !4367, file: !301, line: 159, type: !232)
!4374 = !DILocation(line: 0, scope: !4367)
!4375 = !DILocation(line: 164, column: 16, scope: !4376)
!4376 = distinct !DILexicalBlock(scope: !4377, file: !301, line: 164, column: 2)
!4377 = distinct !DILexicalBlock(scope: !4367, file: !301, line: 164, column: 2)
!4378 = !DILocation(line: 164, column: 2, scope: !4377)
!4379 = !DILocation(line: 165, column: 3, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4376, file: !301, line: 164, column: 26)
!4381 = !DILocation(line: 165, column: 13, scope: !4380)
!4382 = !DILocation(line: 164, column: 22, scope: !4376)
!4383 = distinct !{!4383, !4378, !4384}
!4384 = !DILocation(line: 166, column: 2, scope: !4377)
!4385 = !DILocation(line: 171, column: 1, scope: !4367)
!4386 = distinct !DISubprogram(name: "printk", scope: !301, file: !301, line: 203, type: !4387, scopeLine: 204, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4389)
!4387 = !DISubroutineType(types: !4388)
!4388 = !{null, !279, null}
!4389 = !{!4390, !4391}
!4390 = !DILocalVariable(name: "fmt", arg: 1, scope: !4386, file: !301, line: 203, type: !279)
!4391 = !DILocalVariable(name: "ap", scope: !4386, file: !301, line: 205, type: !4324)
!4392 = !DILocation(line: 0, scope: !4386)
!4393 = !DILocation(line: 205, column: 2, scope: !4386)
!4394 = !DILocation(line: 205, column: 10, scope: !4386)
!4395 = !DILocation(line: 207, column: 2, scope: !4386)
!4396 = !DILocation(line: 209, column: 2, scope: !4386)
!4397 = !DILocation(line: 211, column: 2, scope: !4386)
!4398 = !DILocation(line: 212, column: 1, scope: !4386)
!4399 = distinct !DISubprogram(name: "snprintk", scope: !301, file: !301, line: 239, type: !4400, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4402)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{!109, !285, !232, !279, null}
!4402 = !{!4403, !4404, !4405, !4406, !4407}
!4403 = !DILocalVariable(name: "str", arg: 1, scope: !4399, file: !301, line: 239, type: !285)
!4404 = !DILocalVariable(name: "size", arg: 2, scope: !4399, file: !301, line: 239, type: !232)
!4405 = !DILocalVariable(name: "fmt", arg: 3, scope: !4399, file: !301, line: 239, type: !279)
!4406 = !DILocalVariable(name: "ap", scope: !4399, file: !301, line: 241, type: !4324)
!4407 = !DILocalVariable(name: "ret", scope: !4399, file: !301, line: 242, type: !109)
!4408 = !DILocation(line: 0, scope: !4399)
!4409 = !DILocation(line: 241, column: 2, scope: !4399)
!4410 = !DILocation(line: 241, column: 10, scope: !4399)
!4411 = !DILocation(line: 244, column: 2, scope: !4399)
!4412 = !DILocation(line: 245, column: 8, scope: !4399)
!4413 = !DILocation(line: 246, column: 2, scope: !4399)
!4414 = !DILocation(line: 249, column: 1, scope: !4399)
!4415 = !DILocation(line: 248, column: 2, scope: !4399)
!4416 = distinct !DISubprogram(name: "vsnprintk", scope: !301, file: !301, line: 251, type: !4417, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4419)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!109, !285, !232, !279, !4324}
!4419 = !{!4420, !4421, !4422, !4423, !4424}
!4420 = !DILocalVariable(name: "str", arg: 1, scope: !4416, file: !301, line: 251, type: !285)
!4421 = !DILocalVariable(name: "size", arg: 2, scope: !4416, file: !301, line: 251, type: !232)
!4422 = !DILocalVariable(name: "fmt", arg: 3, scope: !4416, file: !301, line: 251, type: !279)
!4423 = !DILocalVariable(name: "ap", arg: 4, scope: !4416, file: !301, line: 251, type: !4324)
!4424 = !DILocalVariable(name: "ctx", scope: !4416, file: !301, line: 253, type: !4425)
!4425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "str_context", file: !301, line: 217, size: 96, elements: !4426)
!4426 = !{!4427, !4428, !4429}
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4425, file: !301, line: 218, baseType: !285, size: 32)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4425, file: !301, line: 219, baseType: !109, size: 32, offset: 32)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4425, file: !301, line: 220, baseType: !109, size: 32, offset: 64)
!4430 = !DILocation(line: 0, scope: !4416)
!4431 = !DILocation(line: 253, column: 2, scope: !4416)
!4432 = !DILocation(line: 253, column: 21, scope: !4416)
!4433 = !DILocation(line: 253, column: 27, scope: !4416)
!4434 = !DILocation(line: 255, column: 2, scope: !4416)
!4435 = !DILocation(line: 257, column: 10, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4416, file: !301, line: 257, column: 6)
!4437 = !DILocation(line: 257, column: 22, scope: !4436)
!4438 = !DILocation(line: 257, column: 16, scope: !4436)
!4439 = !DILocation(line: 257, column: 6, scope: !4416)
!4440 = !DILocation(line: 258, column: 3, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4436, file: !301, line: 257, column: 27)
!4442 = !DILocation(line: 258, column: 18, scope: !4441)
!4443 = !DILocation(line: 259, column: 2, scope: !4441)
!4444 = !DILocation(line: 262, column: 1, scope: !4416)
!4445 = !DILocation(line: 261, column: 2, scope: !4416)
!4446 = distinct !DISubprogram(name: "str_out", scope: !301, file: !301, line: 223, type: !4447, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !297, retainedNodes: !4450)
!4447 = !DISubroutineType(types: !4448)
!4448 = !{!109, !109, !4449}
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 32)
!4450 = !{!4451, !4452}
!4451 = !DILocalVariable(name: "c", arg: 1, scope: !4446, file: !301, line: 223, type: !109)
!4452 = !DILocalVariable(name: "ctx", arg: 2, scope: !4446, file: !301, line: 223, type: !4449)
!4453 = !DILocation(line: 0, scope: !4446)
!4454 = !DILocation(line: 225, column: 11, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4446, file: !301, line: 225, column: 6)
!4456 = !DILocation(line: 225, column: 15, scope: !4455)
!4457 = !DILocation(line: 0, scope: !4455)
!4458 = !DILocation(line: 225, column: 23, scope: !4455)
!4459 = !DILocation(line: 225, column: 45, scope: !4455)
!4460 = !DILocation(line: 225, column: 37, scope: !4455)
!4461 = !DILocation(line: 225, column: 6, scope: !4446)
!4462 = !DILocation(line: 226, column: 8, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4455, file: !301, line: 225, column: 50)
!4464 = !DILocation(line: 226, column: 13, scope: !4463)
!4465 = !DILocation(line: 227, column: 3, scope: !4463)
!4466 = !DILocation(line: 230, column: 29, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4446, file: !301, line: 230, column: 6)
!4468 = !DILocation(line: 230, column: 17, scope: !4467)
!4469 = !DILocation(line: 230, column: 6, scope: !4446)
!4470 = !DILocation(line: 231, column: 22, scope: !4471)
!4471 = distinct !DILexicalBlock(scope: !4467, file: !301, line: 230, column: 34)
!4472 = !DILocation(line: 231, column: 3, scope: !4471)
!4473 = !DILocation(line: 231, column: 26, scope: !4471)
!4474 = !DILocation(line: 232, column: 2, scope: !4471)
!4475 = !DILocation(line: 233, column: 28, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4467, file: !301, line: 232, column: 9)
!4477 = !DILocation(line: 233, column: 22, scope: !4476)
!4478 = !DILocation(line: 233, column: 3, scope: !4476)
!4479 = !DILocation(line: 233, column: 26, scope: !4476)
!4480 = !DILocation(line: 237, column: 1, scope: !4446)
!4481 = distinct !DISubprogram(name: "z_thread_entry", scope: !4482, file: !4482, line: 30, type: !4483, scopeLine: 32, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4485)
!4482 = !DIFile(filename: "zephyr/lib/os/thread_entry.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!4483 = !DISubroutineType(types: !4484)
!4484 = !{null, !3357, !107, !107, !107}
!4485 = !{!4486, !4487, !4488, !4489}
!4486 = !DILocalVariable(name: "entry", arg: 1, scope: !4481, file: !4482, line: 30, type: !3357)
!4487 = !DILocalVariable(name: "p1", arg: 2, scope: !4481, file: !4482, line: 31, type: !107)
!4488 = !DILocalVariable(name: "p2", arg: 3, scope: !4481, file: !4482, line: 31, type: !107)
!4489 = !DILocalVariable(name: "p3", arg: 4, scope: !4481, file: !4482, line: 31, type: !107)
!4490 = !DILocation(line: 0, scope: !4481)
!4491 = !DILocation(line: 36, column: 2, scope: !4481)
!4492 = !DILocation(line: 38, column: 17, scope: !4481)
!4493 = !DILocation(line: 38, column: 2, scope: !4481)
!4494 = !DILocation(line: 45, column: 2, scope: !4481)
!4495 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !4496, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !2026)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!4498}
!4498 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !4499)
!4499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4500, size: 32)
!4500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !4501)
!4501 = !{!4502, !4560, !4572, !4573, !4574, !4575, !4576, !4582, !4597}
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4500, file: !156, line: 247, baseType: !4503, size: 384)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !4504)
!4504 = !{!4505, !4529, !4536, !4537, !4538, !4547, !4548, !4549}
!4505 = !DIDerivedType(tag: DW_TAG_member, scope: !4503, file: !156, line: 60, baseType: !4506, size: 64)
!4506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4503, file: !156, line: 60, size: 64, elements: !4507)
!4507 = !{!4508, !4523}
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4506, file: !156, line: 61, baseType: !4509, size: 64)
!4509 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !4510)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !4511)
!4511 = !{!4512, !4518}
!4512 = !DIDerivedType(tag: DW_TAG_member, scope: !4510, file: !127, line: 38, baseType: !4513, size: 32)
!4513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4510, file: !127, line: 38, size: 32, elements: !4514)
!4514 = !{!4515, !4517}
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4513, file: !127, line: 39, baseType: !4516, size: 32)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4510, size: 32)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4513, file: !127, line: 40, baseType: !4516, size: 32)
!4518 = !DIDerivedType(tag: DW_TAG_member, scope: !4510, file: !127, line: 42, baseType: !4519, size: 32, offset: 32)
!4519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4510, file: !127, line: 42, size: 32, elements: !4520)
!4520 = !{!4521, !4522}
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4519, file: !127, line: 43, baseType: !4516, size: 32)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4519, file: !127, line: 44, baseType: !4516, size: 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4506, file: !156, line: 62, baseType: !4524, size: 64)
!4524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !4525)
!4525 = !{!4526}
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4524, file: !168, line: 50, baseType: !4527, size: 64)
!4527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4528, size: 64, elements: !173)
!4528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4524, size: 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4503, file: !156, line: 68, baseType: !4530, size: 32, offset: 64)
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 32)
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !4532)
!4532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !4533)
!4533 = !{!4534}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4532, file: !122, line: 232, baseType: !4535, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !4510)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4503, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4503, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!4538 = !DIDerivedType(tag: DW_TAG_member, scope: !4503, file: !156, line: 90, baseType: !4539, size: 16, offset: 112)
!4539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4503, file: !156, line: 90, size: 16, elements: !4540)
!4540 = !{!4541, !4546}
!4541 = !DIDerivedType(tag: DW_TAG_member, scope: !4539, file: !156, line: 91, baseType: !4542, size: 16)
!4542 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4539, file: !156, line: 91, size: 16, elements: !4543)
!4543 = !{!4544, !4545}
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4542, file: !156, line: 96, baseType: !188, size: 8)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4542, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4539, file: !156, line: 100, baseType: !192, size: 16)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4503, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4503, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4503, file: !156, line: 131, baseType: !4550, size: 192, offset: 192)
!4550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !4551)
!4551 = !{!4552, !4553, !4559}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4550, file: !122, line: 245, baseType: !4509, size: 64)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4550, file: !122, line: 246, baseType: !4554, size: 32, offset: 64)
!4554 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !4555)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 32)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{null, !4558}
!4558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 32)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4550, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4500, file: !156, line: 250, baseType: !4561, size: 288, offset: 384)
!4561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !4562)
!4562 = !{!4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571}
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4561, file: !209, line: 26, baseType: !110, size: 32)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4561, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4561, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4561, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4561, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4561, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4561, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4561, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4561, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4500, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !4500, file: !156, line: 256, baseType: !4531, size: 64, offset: 704)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4500, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4500, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4500, file: !156, line: 300, baseType: !4577, size: 96, offset: 1056)
!4577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !4578)
!4578 = !{!4579, !4580, !4581}
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4577, file: !156, line: 153, baseType: !22, size: 32)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4577, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4577, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4500, file: !156, line: 325, baseType: !4583, size: 32, offset: 1152)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 32)
!4584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !4585)
!4585 = !{!4586, !4592, !4593}
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4584, file: !118, line: 5074, baseType: !4587, size: 96)
!4587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !4588)
!4588 = !{!4589, !4590, !4591}
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4587, file: !241, line: 57, baseType: !244, size: 32)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4587, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4587, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4584, file: !118, line: 5075, baseType: !4531, size: 64, offset: 96)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4584, file: !118, line: 5076, baseType: !4594, size: 32, offset: 160)
!4594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !4595)
!4595 = !{!4596}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4594, file: !251, line: 52, baseType: !22, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4500, file: !156, line: 343, baseType: !4598, size: 64, offset: 1184)
!4598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !4599)
!4599 = !{!4600, !4601}
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4598, file: !209, line: 63, baseType: !110, size: 32)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4598, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!4602 = !DILocation(line: 535, column: 9, scope: !4495)
!4603 = !DILocation(line: 535, column: 2, scope: !4495)
!4604 = distinct !DISubprogram(name: "k_thread_abort", scope: !3231, file: !3231, line: 188, type: !4605, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !4607)
!4605 = !DISubroutineType(types: !4606)
!4606 = !{null, !4498}
!4607 = !{!4608}
!4608 = !DILocalVariable(name: "thread", arg: 1, scope: !4604, file: !3231, line: 188, type: !4498)
!4609 = !DILocation(line: 0, scope: !4604)
!4610 = !DILocation(line: 197, column: 2, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4604, file: !3231, line: 197, column: 2)
!4612 = !{i64 2154746386}
!4613 = !DILocation(line: 198, column: 2, scope: !4604)
!4614 = !DILocation(line: 199, column: 1, scope: !4604)
!4615 = distinct !DISubprogram(name: "z_current_get", scope: !3231, file: !3231, line: 173, type: !4496, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2509, retainedNodes: !2026)
!4616 = !DILocation(line: 180, column: 2, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4615, file: !3231, line: 180, column: 2)
!4618 = !{i64 2154746318}
!4619 = !DILocation(line: 181, column: 9, scope: !4615)
!4620 = !DILocation(line: 181, column: 2, scope: !4615)
!4621 = distinct !DISubprogram(name: "z_cbvprintf_impl", scope: !2515, file: !2515, line: 1338, type: !4622, scopeLine: 1340, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !4630)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!109, !3775, !107, !279, !4624, !110}
!4624 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3393, line: 99, baseType: !4625)
!4625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3393, line: 40, baseType: !4626)
!4626 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2515, baseType: !4627)
!4627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4628)
!4628 = !{!4629}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4627, file: !2515, baseType: !107, size: 32)
!4630 = !{!4631, !4632, !4633, !4634, !4635, !4636, !4640, !4641, !4642, !4644, !4649, !4692, !4695, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4707, !4708, !4709, !4713, !4716, !4718, !4721, !4722, !4723, !4728, !4734, !4737, !4741, !4747, !4751, !4754, !4756, !4759}
!4631 = !DILocalVariable(name: "out", arg: 1, scope: !4621, file: !2515, line: 1338, type: !3775)
!4632 = !DILocalVariable(name: "ctx", arg: 2, scope: !4621, file: !2515, line: 1338, type: !107)
!4633 = !DILocalVariable(name: "fp", arg: 3, scope: !4621, file: !2515, line: 1338, type: !279)
!4634 = !DILocalVariable(name: "ap", arg: 4, scope: !4621, file: !2515, line: 1339, type: !4624)
!4635 = !DILocalVariable(name: "flags", arg: 5, scope: !4621, file: !2515, line: 1339, type: !110)
!4636 = !DILocalVariable(name: "buf", scope: !4621, file: !2515, line: 1341, type: !4637)
!4637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !148, size: 176, elements: !4638)
!4638 = !{!4639}
!4639 = !DISubrange(count: 22)
!4640 = !DILocalVariable(name: "count", scope: !4621, file: !2515, line: 1342, type: !232)
!4641 = !DILocalVariable(name: "sint", scope: !4621, file: !2515, line: 1343, type: !2534)
!4642 = !DILocalVariable(name: "tagged_ap", scope: !4621, file: !2515, line: 1345, type: !4643)
!4643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !347)
!4644 = !DILocalVariable(name: "rc", scope: !4645, file: !2515, line: 1377, type: !109)
!4645 = distinct !DILexicalBlock(scope: !4646, file: !2515, line: 1377, column: 4)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !2515, line: 1376, column: 19)
!4647 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1376, column: 7)
!4648 = distinct !DILexicalBlock(scope: !4621, file: !2515, line: 1375, column: 19)
!4649 = !DILocalVariable(name: "state", scope: !4648, file: !2515, line: 1395, type: !4650)
!4650 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4621, file: !2515, line: 1392, size: 192, elements: !4651)
!4651 = !{!4652, !4660}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4650, file: !2515, line: 1393, baseType: !4653, size: 64)
!4653 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "argument_value", file: !2515, line: 166, size: 64, elements: !4654)
!4654 = !{!4655, !4656, !4657, !4658, !4659}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "sint", scope: !4653, file: !2515, line: 168, baseType: !2534, size: 64)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "uint", scope: !4653, file: !2515, line: 171, baseType: !2537, size: 64)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "dbl", scope: !4653, file: !2515, line: 174, baseType: !277, size: 64)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "ldbl", scope: !4653, file: !2515, line: 177, baseType: !275, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4653, file: !2515, line: 180, baseType: !107, size: 32)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "conv", scope: !4650, file: !2515, line: 1394, baseType: !4661, size: 96, offset: 64)
!4661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "conversion", file: !2515, line: 189, size: 96, elements: !4662)
!4662 = !{!4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4687}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "invalid", scope: !4661, file: !2515, line: 191, baseType: !347, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "unsupported", scope: !4661, file: !2515, line: 194, baseType: !347, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dash", scope: !4661, file: !2515, line: 197, baseType: !347, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "flag_plus", scope: !4661, file: !2515, line: 200, baseType: !347, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "flag_space", scope: !4661, file: !2515, line: 203, baseType: !347, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "flag_hash", scope: !4661, file: !2515, line: 206, baseType: !347, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "flag_zero", scope: !4661, file: !2515, line: 209, baseType: !347, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "width_present", scope: !4661, file: !2515, line: 212, baseType: !347, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "width_star", scope: !4661, file: !2515, line: 219, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "prec_present", scope: !4661, file: !2515, line: 222, baseType: !347, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "prec_star", scope: !4661, file: !2515, line: 229, baseType: !347, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "length_mod", scope: !4661, file: !2515, line: 232, baseType: !32, size: 4, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_a", scope: !4661, file: !2515, line: 238, baseType: !347, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "specifier_cat", scope: !4661, file: !2515, line: 241, baseType: !32, size: 3, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0", scope: !4661, file: !2515, line: 244, baseType: !347, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "altform_0c", scope: !4661, file: !2515, line: 247, baseType: !347, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "pad_postdp", scope: !4661, file: !2515, line: 252, baseType: !347, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "pad_fp", scope: !4661, file: !2515, line: 257, baseType: !347, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "specifier", scope: !4661, file: !2515, line: 260, baseType: !179, size: 8, offset: 24)
!4682 = !DIDerivedType(tag: DW_TAG_member, scope: !4661, file: !2515, line: 262, baseType: !4683, size: 32, offset: 32)
!4683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4661, file: !2515, line: 262, size: 32, elements: !4684)
!4684 = !{!4685, !4686}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "width_value", scope: !4683, file: !2515, line: 267, baseType: !109, size: 32)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_value", scope: !4683, file: !2515, line: 289, baseType: !109, size: 32)
!4687 = !DIDerivedType(tag: DW_TAG_member, scope: !4661, file: !2515, line: 292, baseType: !4688, size: 32, offset: 64)
!4688 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4661, file: !2515, line: 292, size: 32, elements: !4689)
!4689 = !{!4690, !4691}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "prec_value", scope: !4688, file: !2515, line: 297, baseType: !109, size: 32)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "pad0_pre_exp", scope: !4688, file: !2515, line: 306, baseType: !109, size: 32)
!4692 = !DILocalVariable(name: "conv", scope: !4648, file: !2515, line: 1400, type: !4693)
!4693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4694)
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 32)
!4695 = !DILocalVariable(name: "value", scope: !4648, file: !2515, line: 1401, type: !4696)
!4696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4697)
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4653, size: 32)
!4698 = !DILocalVariable(name: "sp", scope: !4648, file: !2515, line: 1402, type: !279)
!4699 = !DILocalVariable(name: "width", scope: !4648, file: !2515, line: 1403, type: !109)
!4700 = !DILocalVariable(name: "precision", scope: !4648, file: !2515, line: 1404, type: !109)
!4701 = !DILocalVariable(name: "bps", scope: !4648, file: !2515, line: 1405, type: !279)
!4702 = !DILocalVariable(name: "bpe", scope: !4648, file: !2515, line: 1406, type: !279)
!4703 = !DILocalVariable(name: "sign", scope: !4648, file: !2515, line: 1407, type: !148)
!4704 = !DILocalVariable(name: "arg", scope: !4705, file: !2515, line: 1432, type: !109)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !2515, line: 1431, column: 24)
!4706 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1431, column: 7)
!4707 = !DILocalVariable(name: "specifier_cat", scope: !4648, file: !2515, line: 1468, type: !2514)
!4708 = !DILocalVariable(name: "length_mod", scope: !4648, file: !2515, line: 1470, type: !2522)
!4709 = !DILocalVariable(name: "rc", scope: !4710, file: !2515, line: 1575, type: !109)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !2515, line: 1575, column: 4)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !2515, line: 1574, column: 43)
!4712 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1574, column: 7)
!4713 = !DILocalVariable(name: "rc", scope: !4714, file: !2515, line: 1584, type: !109)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !2515, line: 1584, column: 4)
!4715 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1582, column: 28)
!4716 = !DILocalVariable(name: "len", scope: !4717, file: !2515, line: 1589, type: !232)
!4717 = distinct !DILexicalBlock(scope: !4715, file: !2515, line: 1586, column: 13)
!4718 = !DILocalVariable(name: "len", scope: !4719, file: !2515, line: 1641, type: !232)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !2515, line: 1640, column: 24)
!4720 = distinct !DILexicalBlock(scope: !4715, file: !2515, line: 1640, column: 8)
!4721 = !DILocalVariable(name: "nj_len", scope: !4648, file: !2515, line: 1722, type: !232)
!4722 = !DILocalVariable(name: "pad_len", scope: !4648, file: !2515, line: 1723, type: !109)
!4723 = !DILocalVariable(name: "pad", scope: !4724, file: !2515, line: 1751, type: !148)
!4724 = distinct !DILexicalBlock(scope: !4725, file: !2515, line: 1750, column: 26)
!4725 = distinct !DILexicalBlock(scope: !4726, file: !2515, line: 1750, column: 8)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !2515, line: 1747, column: 18)
!4727 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1747, column: 7)
!4728 = !DILocalVariable(name: "rc", scope: !4729, file: !2515, line: 1758, type: !109)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !2515, line: 1758, column: 7)
!4730 = distinct !DILexicalBlock(scope: !4731, file: !2515, line: 1757, column: 21)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !2515, line: 1757, column: 10)
!4732 = distinct !DILexicalBlock(scope: !4733, file: !2515, line: 1756, column: 26)
!4733 = distinct !DILexicalBlock(scope: !4724, file: !2515, line: 1756, column: 9)
!4734 = !DILocalVariable(name: "rc", scope: !4735, file: !2515, line: 1765, type: !109)
!4735 = distinct !DILexicalBlock(scope: !4736, file: !2515, line: 1765, column: 6)
!4736 = distinct !DILexicalBlock(scope: !4724, file: !2515, line: 1764, column: 25)
!4737 = !DILocalVariable(name: "rc", scope: !4738, file: !2515, line: 1774, type: !109)
!4738 = distinct !DILexicalBlock(scope: !4739, file: !2515, line: 1774, column: 4)
!4739 = distinct !DILexicalBlock(scope: !4740, file: !2515, line: 1773, column: 18)
!4740 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1773, column: 7)
!4741 = !DILocalVariable(name: "rc", scope: !4742, file: !2515, line: 1819, type: !109)
!4742 = distinct !DILexicalBlock(scope: !4743, file: !2515, line: 1819, column: 5)
!4743 = distinct !DILexicalBlock(scope: !4744, file: !2515, line: 1818, column: 44)
!4744 = distinct !DILexicalBlock(scope: !4745, file: !2515, line: 1818, column: 8)
!4745 = distinct !DILexicalBlock(scope: !4746, file: !2515, line: 1817, column: 10)
!4746 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1777, column: 7)
!4747 = !DILocalVariable(name: "rc", scope: !4748, file: !2515, line: 1823, type: !109)
!4748 = distinct !DILexicalBlock(scope: !4749, file: !2515, line: 1823, column: 5)
!4749 = distinct !DILexicalBlock(scope: !4750, file: !2515, line: 1822, column: 26)
!4750 = distinct !DILexicalBlock(scope: !4745, file: !2515, line: 1822, column: 8)
!4751 = !DILocalVariable(name: "rc", scope: !4752, file: !2515, line: 1828, type: !109)
!4752 = distinct !DILexicalBlock(scope: !4753, file: !2515, line: 1828, column: 5)
!4753 = distinct !DILexicalBlock(scope: !4745, file: !2515, line: 1827, column: 26)
!4754 = !DILocalVariable(name: "rc", scope: !4755, file: !2515, line: 1831, type: !109)
!4755 = distinct !DILexicalBlock(scope: !4745, file: !2515, line: 1831, column: 4)
!4756 = !DILocalVariable(name: "rc", scope: !4757, file: !2515, line: 1836, type: !109)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !2515, line: 1836, column: 4)
!4758 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1835, column: 21)
!4759 = !DILabel(scope: !4715, name: "prec_int_pad0", file: !2515, line: 1634)
!4760 = !DILocation(line: 0, scope: !4621)
!4761 = !DILocation(line: 1341, column: 2, scope: !4621)
!4762 = !DILocation(line: 1341, column: 7, scope: !4621)
!4763 = !DILocation(line: 1375, column: 2, scope: !4621)
!4764 = !DILocation(line: 1342, column: 9, scope: !4621)
!4765 = !DILocation(line: 1375, column: 9, scope: !4621)
!4766 = !DILocation(line: 1377, column: 4, scope: !4645)
!4767 = !DILocation(line: 0, scope: !4645)
!4768 = !DILocation(line: 1377, column: 4, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4645, file: !2515, line: 1377, column: 4)
!4770 = distinct !{!4770, !4763, !4771}
!4771 = !DILocation(line: 1839, column: 2, scope: !4621)
!4772 = !DILocation(line: 1392, column: 3, scope: !4648)
!4773 = !DILocation(line: 1395, column: 5, scope: !4648)
!4774 = !DILocation(line: 0, scope: !4648)
!4775 = !DILocation(line: 1409, column: 8, scope: !4648)
!4776 = !DILocation(line: 1414, column: 13, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1414, column: 7)
!4778 = !DILocation(line: 1414, column: 7, scope: !4648)
!4779 = !DILocation(line: 1415, column: 12, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4777, file: !2515, line: 1414, column: 25)
!4781 = !DILocation(line: 1417, column: 14, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4780, file: !2515, line: 1417, column: 8)
!4783 = !DILocation(line: 1417, column: 8, scope: !4780)
!4784 = !DILocation(line: 1418, column: 21, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4782, file: !2515, line: 1417, column: 19)
!4786 = !DILocation(line: 1419, column: 13, scope: !4785)
!4787 = !DILocation(line: 1420, column: 4, scope: !4785)
!4788 = !DILocation(line: 1421, column: 20, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4777, file: !2515, line: 1421, column: 14)
!4790 = !DILocation(line: 1421, column: 14, scope: !4777)
!4791 = !DILocation(line: 1431, column: 13, scope: !4706)
!4792 = !DILocation(line: 1431, column: 7, scope: !4648)
!4793 = !DILocation(line: 1432, column: 14, scope: !4705)
!4794 = !DILocation(line: 0, scope: !4705)
!4795 = !DILocation(line: 1434, column: 12, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4705, file: !2515, line: 1434, column: 8)
!4797 = !DILocation(line: 1434, column: 8, scope: !4705)
!4798 = !DILocation(line: 1435, column: 24, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4796, file: !2515, line: 1434, column: 17)
!4800 = !DILocation(line: 1436, column: 4, scope: !4799)
!4801 = !DILocation(line: 1439, column: 20, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4706, file: !2515, line: 1439, column: 14)
!4803 = !DILocation(line: 1439, column: 14, scope: !4706)
!4804 = !DILocation(line: 1469, column: 37, scope: !4648)
!4805 = !DILocation(line: 1448, column: 20, scope: !4648)
!4806 = !DILocation(line: 1449, column: 22, scope: !4648)
!4807 = !DILocation(line: 1471, column: 34, scope: !4648)
!4808 = !DILocation(line: 1478, column: 7, scope: !4648)
!4809 = !DILocation(line: 1479, column: 4, scope: !4810)
!4810 = distinct !DILexicalBlock(scope: !4811, file: !2515, line: 1478, column: 40)
!4811 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1478, column: 7)
!4812 = !DILocation(line: 1484, column: 19, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4810, file: !2515, line: 1479, column: 24)
!4814 = !DILocation(line: 1484, column: 17, scope: !4813)
!4815 = !DILocation(line: 1485, column: 5, scope: !4813)
!4816 = !DILocation(line: 1492, column: 20, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !2515, line: 1491, column: 12)
!4818 = distinct !DILexicalBlock(scope: !4813, file: !2515, line: 1487, column: 9)
!4819 = !DILocation(line: 1492, column: 18, scope: !4817)
!4820 = !DILocation(line: 1494, column: 5, scope: !4813)
!4821 = !DILocation(line: 1497, column: 23, scope: !4813)
!4822 = !DILocation(line: 1496, column: 17, scope: !4813)
!4823 = !DILocation(line: 1498, column: 5, scope: !4813)
!4824 = !DILocation(line: 1501, column: 23, scope: !4813)
!4825 = !DILocation(line: 1500, column: 17, scope: !4813)
!4826 = !DILocation(line: 1502, column: 5, scope: !4813)
!4827 = !DILocation(line: 1513, column: 23, scope: !4813)
!4828 = !DILocation(line: 1513, column: 6, scope: !4813)
!4829 = !DILocation(line: 1512, column: 17, scope: !4813)
!4830 = !DILocation(line: 1514, column: 5, scope: !4813)
!4831 = !DILocation(line: 0, scope: !4813)
!4832 = !DILocation(line: 1516, column: 8, scope: !4810)
!4833 = !DILocation(line: 1517, column: 19, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4835, file: !2515, line: 1516, column: 33)
!4835 = distinct !DILexicalBlock(scope: !4810, file: !2515, line: 1516, column: 8)
!4836 = !DILocation(line: 1517, column: 17, scope: !4834)
!4837 = !DILocation(line: 1518, column: 4, scope: !4834)
!4838 = !DILocation(line: 1519, column: 19, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4840, file: !2515, line: 1518, column: 39)
!4840 = distinct !DILexicalBlock(scope: !4835, file: !2515, line: 1518, column: 15)
!4841 = !DILocation(line: 1519, column: 17, scope: !4839)
!4842 = !DILocation(line: 1520, column: 4, scope: !4839)
!4843 = !DILocation(line: 1522, column: 4, scope: !4844)
!4844 = distinct !DILexicalBlock(scope: !4845, file: !2515, line: 1521, column: 47)
!4845 = distinct !DILexicalBlock(scope: !4811, file: !2515, line: 1521, column: 14)
!4846 = !DILocation(line: 1527, column: 19, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4844, file: !2515, line: 1522, column: 24)
!4848 = !DILocation(line: 1527, column: 17, scope: !4847)
!4849 = !DILocation(line: 1528, column: 5, scope: !4847)
!4850 = !DILocation(line: 0, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4847, file: !2515, line: 1530, column: 9)
!4852 = !DILocation(line: 1540, column: 23, scope: !4847)
!4853 = !DILocation(line: 1539, column: 17, scope: !4847)
!4854 = !DILocation(line: 1542, column: 5, scope: !4847)
!4855 = !DILocation(line: 1545, column: 23, scope: !4847)
!4856 = !DILocation(line: 1544, column: 17, scope: !4847)
!4857 = !DILocation(line: 1547, column: 5, scope: !4847)
!4858 = !DILocation(line: 1551, column: 23, scope: !4847)
!4859 = !DILocation(line: 1551, column: 6, scope: !4847)
!4860 = !DILocation(line: 1550, column: 17, scope: !4847)
!4861 = !DILocation(line: 1552, column: 5, scope: !4847)
!4862 = !DILocation(line: 0, scope: !4847)
!4863 = !DILocation(line: 1554, column: 8, scope: !4844)
!4864 = !DILocation(line: 1555, column: 19, scope: !4865)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !2515, line: 1554, column: 33)
!4866 = distinct !DILexicalBlock(scope: !4844, file: !2515, line: 1554, column: 8)
!4867 = !DILocation(line: 1555, column: 17, scope: !4865)
!4868 = !DILocation(line: 1556, column: 4, scope: !4865)
!4869 = !DILocation(line: 1557, column: 19, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4871, file: !2515, line: 1556, column: 39)
!4871 = distinct !DILexicalBlock(scope: !4866, file: !2515, line: 1556, column: 15)
!4872 = !DILocation(line: 1557, column: 17, scope: !4870)
!4873 = !DILocation(line: 1558, column: 4, scope: !4870)
!4874 = !DILocation(line: 0, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4876, file: !2515, line: 1560, column: 8)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !2515, line: 1559, column: 45)
!4877 = distinct !DILexicalBlock(scope: !4845, file: !2515, line: 1559, column: 14)
!4878 = !DILocation(line: 1566, column: 17, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4880, file: !2515, line: 1565, column: 46)
!4880 = distinct !DILexicalBlock(scope: !4877, file: !2515, line: 1565, column: 14)
!4881 = !DILocation(line: 1566, column: 15, scope: !4879)
!4882 = !DILocation(line: 1567, column: 3, scope: !4879)
!4883 = !DILocation(line: 1574, column: 21, scope: !4712)
!4884 = !DILocation(line: 1575, column: 4, scope: !4710)
!4885 = !DILocation(line: 0, scope: !4710)
!4886 = !DILocation(line: 1575, column: 4, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4710, file: !2515, line: 1575, column: 4)
!4888 = !DILocation(line: 1582, column: 17, scope: !4648)
!4889 = !DILocation(line: 1582, column: 3, scope: !4648)
!4890 = !DILocation(line: 1584, column: 4, scope: !4714)
!4891 = !DILocation(line: 0, scope: !4714)
!4892 = !DILocation(line: 1584, column: 4, scope: !4893)
!4893 = distinct !DILexicalBlock(scope: !4714, file: !2515, line: 1584, column: 4)
!4894 = !DILocation(line: 1587, column: 31, scope: !4717)
!4895 = !DILocation(line: 1591, column: 18, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4717, file: !2515, line: 1591, column: 8)
!4897 = !DILocation(line: 1591, column: 8, scope: !4717)
!4898 = !DILocation(line: 1592, column: 11, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4896, file: !2515, line: 1591, column: 24)
!4900 = !DILocation(line: 0, scope: !4717)
!4901 = !DILocation(line: 1593, column: 4, scope: !4899)
!4902 = !DILocation(line: 1594, column: 11, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4896, file: !2515, line: 1593, column: 11)
!4904 = !DILocation(line: 1604, column: 51, scope: !4715)
!4905 = !DILocation(line: 1604, column: 13, scope: !4715)
!4906 = !DILocation(line: 1604, column: 11, scope: !4715)
!4907 = !DILocation(line: 1606, column: 4, scope: !4715)
!4908 = !DILocation(line: 1609, column: 14, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4715, file: !2515, line: 1609, column: 8)
!4910 = !DILocation(line: 1609, column: 8, scope: !4715)
!4911 = !DILocation(line: 1619, column: 18, scope: !4715)
!4912 = !DILocation(line: 1620, column: 13, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4715, file: !2515, line: 1620, column: 8)
!4914 = !DILocation(line: 1620, column: 8, scope: !4715)
!4915 = !DILocation(line: 1622, column: 36, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4913, file: !2515, line: 1620, column: 18)
!4917 = !DILocation(line: 1622, column: 17, scope: !4916)
!4918 = !DILocation(line: 1623, column: 4, scope: !4916)
!4919 = !DILocation(line: 1632, column: 29, scope: !4715)
!4920 = !DILocation(line: 1632, column: 10, scope: !4715)
!4921 = !DILocation(line: 1632, column: 4, scope: !4715)
!4922 = !DILocation(line: 1407, column: 8, scope: !4648)
!4923 = !DILocation(line: 0, scope: !4715)
!4924 = !DILocation(line: 1634, column: 3, scope: !4715)
!4925 = !DILocation(line: 1640, column: 18, scope: !4720)
!4926 = !DILocation(line: 1640, column: 8, scope: !4715)
!4927 = !DILocation(line: 1729, column: 13, scope: !4928)
!4928 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1729, column: 7)
!4929 = !DILocation(line: 1641, column: 22, scope: !4719)
!4930 = !DILocation(line: 0, scope: !4719)
!4931 = !DILocation(line: 1646, column: 21, scope: !4719)
!4932 = !DILocation(line: 1649, column: 13, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4719, file: !2515, line: 1649, column: 9)
!4934 = !DILocation(line: 1649, column: 9, scope: !4719)
!4935 = !DILocation(line: 1650, column: 35, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !2515, line: 1649, column: 34)
!4937 = !DILocation(line: 1650, column: 23, scope: !4936)
!4938 = !DILocation(line: 1651, column: 5, scope: !4936)
!4939 = !DILocation(line: 1660, column: 15, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4715, file: !2515, line: 1660, column: 8)
!4941 = !DILocation(line: 1660, column: 19, scope: !4940)
!4942 = !DILocation(line: 1660, column: 8, scope: !4715)
!4943 = !DILocation(line: 1661, column: 23, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4940, file: !2515, line: 1660, column: 28)
!4945 = !DILocation(line: 1661, column: 11, scope: !4944)
!4946 = !DILocation(line: 1665, column: 22, scope: !4944)
!4947 = !DILocation(line: 1666, column: 21, scope: !4944)
!4948 = !DILocation(line: 1668, column: 5, scope: !4944)
!4949 = !DILocation(line: 1677, column: 30, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !2515, line: 1676, column: 49)
!4951 = distinct !DILexicalBlock(scope: !4715, file: !2515, line: 1676, column: 8)
!4952 = !DILocation(line: 1677, column: 5, scope: !4950)
!4953 = !DILocation(line: 1680, column: 4, scope: !4715)
!4954 = !DILocation(line: 0, scope: !4896)
!4955 = !DILocation(line: 1597, column: 14, scope: !4717)
!4956 = !DILocation(line: 1699, column: 11, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1699, column: 7)
!4958 = !DILocation(line: 1699, column: 7, scope: !4648)
!4959 = !DILocation(line: 1725, column: 7, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1725, column: 7)
!4961 = !DILocation(line: 1725, column: 12, scope: !4960)
!4962 = !DILocation(line: 1747, column: 13, scope: !4727)
!4963 = !DILocation(line: 1747, column: 7, scope: !4648)
!4964 = !DILocation(line: 1722, column: 24, scope: !4648)
!4965 = !DILocation(line: 1725, column: 7, scope: !4648)
!4966 = !DILocation(line: 1729, column: 7, scope: !4648)
!4967 = !DILocation(line: 1736, column: 13, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4648, file: !2515, line: 1736, column: 7)
!4969 = !DILocation(line: 1735, column: 19, scope: !4648)
!4970 = !DILocation(line: 1736, column: 7, scope: !4648)
!4971 = !DILocation(line: 1748, column: 10, scope: !4726)
!4972 = !DILocation(line: 1750, column: 15, scope: !4725)
!4973 = !DILocation(line: 1750, column: 8, scope: !4726)
!4974 = !DILocation(line: 0, scope: !4724)
!4975 = !DILocation(line: 1756, column: 15, scope: !4733)
!4976 = !DILocation(line: 1756, column: 9, scope: !4724)
!4977 = !DILocation(line: 1758, column: 7, scope: !4729)
!4978 = !DILocation(line: 0, scope: !4729)
!4979 = !DILocation(line: 1758, column: 7, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4729, file: !2515, line: 1758, column: 7)
!4981 = !DILocation(line: 1764, column: 5, scope: !4724)
!4982 = !DILocation(line: 0, scope: !4726)
!4983 = !DILocation(line: 1764, column: 20, scope: !4724)
!4984 = !DILocation(line: 1764, column: 17, scope: !4724)
!4985 = !DILocation(line: 1765, column: 6, scope: !4735)
!4986 = !DILocation(line: 0, scope: !4735)
!4987 = !DILocation(line: 1765, column: 6, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4735, file: !2515, line: 1765, column: 6)
!4989 = distinct !{!4989, !4981, !4990}
!4990 = !DILocation(line: 1766, column: 5, scope: !4724)
!4991 = !DILocation(line: 1773, column: 12, scope: !4740)
!4992 = !DILocation(line: 1773, column: 7, scope: !4648)
!4993 = !DILocation(line: 1773, column: 7, scope: !4740)
!4994 = !DILocation(line: 1774, column: 4, scope: !4738)
!4995 = !DILocation(line: 0, scope: !4738)
!4996 = !DILocation(line: 1774, column: 4, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4738, file: !2515, line: 1774, column: 4)
!4998 = !DILocation(line: 1818, column: 8, scope: !4744)
!4999 = !DILocation(line: 1818, column: 27, scope: !4744)
!5000 = !DILocation(line: 1818, column: 25, scope: !4744)
!5001 = !DILocation(line: 1818, column: 8, scope: !4745)
!5002 = !DILocation(line: 1819, column: 5, scope: !4742)
!5003 = !DILocation(line: 0, scope: !4742)
!5004 = !DILocation(line: 1819, column: 5, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !4742, file: !2515, line: 1819, column: 5)
!5006 = !DILocation(line: 1822, column: 14, scope: !4750)
!5007 = !DILocation(line: 1822, column: 8, scope: !4745)
!5008 = !DILocation(line: 1823, column: 5, scope: !4748)
!5009 = !DILocation(line: 0, scope: !4748)
!5010 = !DILocation(line: 1823, column: 5, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4748, file: !2515, line: 1823, column: 5)
!5012 = !DILocation(line: 1826, column: 20, scope: !4745)
!5013 = !DILocation(line: 1827, column: 4, scope: !4745)
!5014 = !DILocation(line: 0, scope: !4745)
!5015 = !DILocation(line: 1827, column: 21, scope: !4745)
!5016 = !DILocation(line: 1827, column: 18, scope: !4745)
!5017 = !DILocation(line: 1828, column: 5, scope: !4752)
!5018 = !DILocation(line: 0, scope: !4752)
!5019 = !DILocation(line: 1828, column: 5, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4752, file: !2515, line: 1828, column: 5)
!5021 = distinct !{!5021, !5013, !5022}
!5022 = !DILocation(line: 1829, column: 4, scope: !4745)
!5023 = !DILocation(line: 1831, column: 4, scope: !4755)
!5024 = !DILocation(line: 0, scope: !4755)
!5025 = !DILocation(line: 1831, column: 4, scope: !5026)
!5026 = distinct !DILexicalBlock(scope: !4755, file: !2515, line: 1831, column: 4)
!5027 = !DILocation(line: 1835, column: 16, scope: !4648)
!5028 = !DILocation(line: 1835, column: 3, scope: !4648)
!5029 = !DILocation(line: 1836, column: 4, scope: !4757)
!5030 = !DILocation(line: 0, scope: !4757)
!5031 = !DILocation(line: 1836, column: 4, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !4757, file: !2515, line: 1836, column: 4)
!5033 = !DILocation(line: 1837, column: 4, scope: !4758)
!5034 = distinct !{!5034, !5028, !5035}
!5035 = !DILocation(line: 1838, column: 3, scope: !4648)
!5036 = !DILocation(line: 1844, column: 1, scope: !4621)
!5037 = distinct !DISubprogram(name: "extract_conversion", scope: !2515, file: !2515, line: 642, type: !5038, scopeLine: 644, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5040)
!5038 = !DISubroutineType(types: !5039)
!5039 = !{!279, !4694, !279}
!5040 = !{!5041, !5042}
!5041 = !DILocalVariable(name: "conv", arg: 1, scope: !5037, file: !2515, line: 642, type: !4694)
!5042 = !DILocalVariable(name: "sp", arg: 2, scope: !5037, file: !2515, line: 643, type: !279)
!5043 = !DILocation(line: 0, scope: !5037)
!5044 = !DILocation(line: 645, column: 10, scope: !5037)
!5045 = !DILocation(line: 653, column: 2, scope: !5037)
!5046 = !DILocation(line: 654, column: 6, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5037, file: !2515, line: 654, column: 6)
!5048 = !DILocation(line: 654, column: 10, scope: !5047)
!5049 = !DILocation(line: 654, column: 6, scope: !5037)
!5050 = !DILocation(line: 655, column: 24, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5047, file: !2515, line: 654, column: 18)
!5052 = !DILocation(line: 655, column: 19, scope: !5051)
!5053 = !DILocation(line: 656, column: 3, scope: !5051)
!5054 = !DILocation(line: 659, column: 7, scope: !5037)
!5055 = !DILocation(line: 660, column: 7, scope: !5037)
!5056 = !DILocation(line: 661, column: 7, scope: !5037)
!5057 = !DILocation(line: 662, column: 7, scope: !5037)
!5058 = !DILocation(line: 663, column: 7, scope: !5037)
!5059 = !DILocation(line: 665, column: 2, scope: !5037)
!5060 = !DILocation(line: 666, column: 1, scope: !5037)
!5061 = distinct !DISubprogram(name: "outs", scope: !2515, file: !2515, line: 1319, type: !5062, scopeLine: 1323, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5064)
!5062 = !DISubroutineType(types: !5063)
!5063 = !{!109, !3775, !107, !279, !279}
!5064 = !{!5065, !5066, !5067, !5068, !5069, !5070}
!5065 = !DILocalVariable(name: "out", arg: 1, scope: !5061, file: !2515, line: 1319, type: !3775)
!5066 = !DILocalVariable(name: "ctx", arg: 2, scope: !5061, file: !2515, line: 1320, type: !107)
!5067 = !DILocalVariable(name: "sp", arg: 3, scope: !5061, file: !2515, line: 1321, type: !279)
!5068 = !DILocalVariable(name: "ep", arg: 4, scope: !5061, file: !2515, line: 1322, type: !279)
!5069 = !DILocalVariable(name: "count", scope: !5061, file: !2515, line: 1324, type: !232)
!5070 = !DILocalVariable(name: "rc", scope: !5071, file: !2515, line: 1327, type: !109)
!5071 = distinct !DILexicalBlock(scope: !5061, file: !2515, line: 1326, column: 45)
!5072 = !DILocation(line: 0, scope: !5061)
!5073 = !DILocation(line: 1326, column: 2, scope: !5061)
!5074 = !DILocation(line: 1324, column: 9, scope: !5061)
!5075 = !DILocation(line: 1326, column: 13, scope: !5061)
!5076 = !DILocation(line: 1326, column: 19, scope: !5061)
!5077 = !DILocation(line: 1327, column: 21, scope: !5071)
!5078 = !DILocation(line: 1326, column: 36, scope: !5061)
!5079 = !DILocation(line: 1326, column: 39, scope: !5061)
!5080 = !DILocation(line: 1327, column: 24, scope: !5071)
!5081 = !DILocation(line: 1327, column: 16, scope: !5071)
!5082 = !DILocation(line: 1327, column: 12, scope: !5071)
!5083 = !DILocation(line: 0, scope: !5071)
!5084 = !DILocation(line: 1329, column: 10, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5071, file: !2515, line: 1329, column: 7)
!5086 = !DILocation(line: 1329, column: 7, scope: !5071)
!5087 = distinct !{!5087, !5073, !5088}
!5088 = !DILocation(line: 1333, column: 2, scope: !5061)
!5089 = !DILocation(line: 1336, column: 1, scope: !5061)
!5090 = distinct !DISubprogram(name: "encode_uint", scope: !2515, file: !2515, line: 788, type: !5091, scopeLine: 792, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5093)
!5091 = !DISubroutineType(types: !5092)
!5092 = !{!285, !2537, !4694, !285, !279}
!5093 = !{!5094, !5095, !5096, !5097, !5098, !5099, !5101, !5102}
!5094 = !DILocalVariable(name: "value", arg: 1, scope: !5090, file: !2515, line: 788, type: !2537)
!5095 = !DILocalVariable(name: "conv", arg: 2, scope: !5090, file: !2515, line: 789, type: !4694)
!5096 = !DILocalVariable(name: "bps", arg: 3, scope: !5090, file: !2515, line: 790, type: !285)
!5097 = !DILocalVariable(name: "bpe", arg: 4, scope: !5090, file: !2515, line: 791, type: !279)
!5098 = !DILocalVariable(name: "upcase", scope: !5090, file: !2515, line: 793, type: !347)
!5099 = !DILocalVariable(name: "radix", scope: !5090, file: !2515, line: 794, type: !5100)
!5100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !32)
!5101 = !DILocalVariable(name: "bp", scope: !5090, file: !2515, line: 795, type: !285)
!5102 = !DILocalVariable(name: "lsv", scope: !5103, file: !2515, line: 798, type: !32)
!5103 = distinct !DILexicalBlock(scope: !5090, file: !2515, line: 797, column: 5)
!5104 = !DILocation(line: 0, scope: !5090)
!5105 = !DILocation(line: 793, column: 35, scope: !5090)
!5106 = !DILocation(line: 793, column: 24, scope: !5090)
!5107 = !DILocation(line: 793, column: 16, scope: !5090)
!5108 = !DILocation(line: 794, column: 29, scope: !5090)
!5109 = !DILocation(line: 795, column: 24, scope: !5090)
!5110 = !DILocation(line: 795, column: 17, scope: !5090)
!5111 = !DILocation(line: 797, column: 2, scope: !5090)
!5112 = !DILocation(line: 802, column: 9, scope: !5103)
!5113 = !DILocation(line: 798, column: 22, scope: !5103)
!5114 = !DILocation(line: 0, scope: !5103)
!5115 = !DILocation(line: 800, column: 16, scope: !5103)
!5116 = !DILocation(line: 800, column: 11, scope: !5103)
!5117 = !DILocation(line: 800, column: 4, scope: !5103)
!5118 = !DILocation(line: 800, column: 9, scope: !5103)
!5119 = !DILocation(line: 803, column: 18, scope: !5090)
!5120 = !DILocation(line: 803, column: 24, scope: !5090)
!5121 = !DILocation(line: 803, column: 2, scope: !5103)
!5122 = distinct !{!5122, !5111, !5123}
!5123 = !DILocation(line: 803, column: 37, scope: !5090)
!5124 = !DILocation(line: 808, column: 12, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5090, file: !2515, line: 808, column: 6)
!5126 = !DILocation(line: 808, column: 6, scope: !5090)
!5127 = !DILocation(line: 809, column: 7, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5125, file: !2515, line: 808, column: 23)
!5129 = !DILocation(line: 813, column: 3, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5131, file: !2515, line: 811, column: 27)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !2515, line: 811, column: 14)
!5132 = distinct !DILexicalBlock(scope: !5128, file: !2515, line: 809, column: 7)
!5133 = !DILocation(line: 0, scope: !5132)
!5134 = !DILocation(line: 818, column: 2, scope: !5090)
!5135 = distinct !DISubprogram(name: "store_count", scope: !2515, file: !2515, line: 1280, type: !5136, scopeLine: 1283, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5140)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{null, !5138, !107, !109}
!5138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5139, size: 32)
!5139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4661)
!5140 = !{!5141, !5142, !5143}
!5141 = !DILocalVariable(name: "conv", arg: 1, scope: !5135, file: !2515, line: 1280, type: !5138)
!5142 = !DILocalVariable(name: "dp", arg: 2, scope: !5135, file: !2515, line: 1281, type: !107)
!5143 = !DILocalVariable(name: "count", arg: 3, scope: !5135, file: !2515, line: 1282, type: !109)
!5144 = !DILocation(line: 0, scope: !5135)
!5145 = !DILocation(line: 1284, column: 38, scope: !5135)
!5146 = !DILocation(line: 1284, column: 2, scope: !5135)
!5147 = !DILocation(line: 1286, column: 4, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5135, file: !2515, line: 1284, column: 50)
!5149 = !DILocation(line: 1286, column: 14, scope: !5148)
!5150 = !DILocation(line: 1287, column: 3, scope: !5148)
!5151 = !DILocation(line: 1289, column: 24, scope: !5148)
!5152 = !DILocation(line: 1289, column: 22, scope: !5148)
!5153 = !DILocation(line: 1290, column: 3, scope: !5148)
!5154 = !DILocation(line: 1292, column: 18, scope: !5148)
!5155 = !DILocation(line: 1292, column: 4, scope: !5148)
!5156 = !DILocation(line: 1292, column: 16, scope: !5148)
!5157 = !DILocation(line: 1293, column: 3, scope: !5148)
!5158 = !DILocation(line: 1295, column: 4, scope: !5148)
!5159 = !DILocation(line: 1295, column: 15, scope: !5148)
!5160 = !DILocation(line: 1296, column: 3, scope: !5148)
!5161 = !DILocation(line: 1298, column: 22, scope: !5148)
!5162 = !DILocation(line: 1298, column: 4, scope: !5148)
!5163 = !DILocation(line: 1298, column: 20, scope: !5148)
!5164 = !DILocation(line: 1299, column: 3, scope: !5148)
!5165 = !DILocation(line: 1301, column: 21, scope: !5148)
!5166 = !DILocation(line: 1301, column: 4, scope: !5148)
!5167 = !DILocation(line: 1301, column: 19, scope: !5148)
!5168 = !DILocation(line: 1302, column: 3, scope: !5148)
!5169 = !DILocation(line: 1304, column: 4, scope: !5148)
!5170 = !DILocation(line: 1304, column: 17, scope: !5148)
!5171 = !DILocation(line: 1305, column: 3, scope: !5148)
!5172 = !DILocation(line: 1307, column: 4, scope: !5148)
!5173 = !DILocation(line: 1307, column: 20, scope: !5148)
!5174 = !DILocation(line: 1308, column: 3, scope: !5148)
!5175 = !DILocation(line: 1316, column: 1, scope: !5135)
!5176 = distinct !DISubprogram(name: "isupper", scope: !5177, file: !5177, line: 16, type: !303, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5178)
!5177 = !DIFile(filename: "zephyr/lib/libc/minimal/include/ctype.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5178 = !{!5179}
!5179 = !DILocalVariable(name: "a", arg: 1, scope: !5176, file: !5177, line: 16, type: !109)
!5180 = !DILocation(line: 0, scope: !5176)
!5181 = !DILocation(line: 18, column: 29, scope: !5176)
!5182 = !DILocation(line: 18, column: 45, scope: !5176)
!5183 = !DILocation(line: 18, column: 2, scope: !5176)
!5184 = distinct !DISubprogram(name: "conversion_radix", scope: !2515, file: !2515, line: 761, type: !5185, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5187)
!5185 = !DISubroutineType(types: !5186)
!5186 = !{!232, !148}
!5187 = !{!5188}
!5188 = !DILocalVariable(name: "specifier", arg: 1, scope: !5184, file: !2515, line: 761, type: !148)
!5189 = !DILocation(line: 0, scope: !5184)
!5190 = !DILocation(line: 763, column: 2, scope: !5184)
!5191 = !DILocation(line: 770, column: 3, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5184, file: !2515, line: 763, column: 21)
!5193 = !DILocation(line: 774, column: 3, scope: !5192)
!5194 = !DILocation(line: 0, scope: !5192)
!5195 = !DILocation(line: 776, column: 1, scope: !5184)
!5196 = distinct !DISubprogram(name: "extract_flags", scope: !2515, file: !2515, line: 339, type: !5038, scopeLine: 341, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5197)
!5197 = !{!5198, !5199, !5200}
!5198 = !DILocalVariable(name: "conv", arg: 1, scope: !5196, file: !2515, line: 339, type: !4694)
!5199 = !DILocalVariable(name: "sp", arg: 2, scope: !5196, file: !2515, line: 340, type: !279)
!5200 = !DILocalVariable(name: "loop", scope: !5196, file: !2515, line: 342, type: !347)
!5201 = !DILocation(line: 0, scope: !5196)
!5202 = !DILocation(line: 344, column: 2, scope: !5196)
!5203 = !DILocation(line: 345, column: 11, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5196, file: !2515, line: 344, column: 5)
!5205 = !DILocation(line: 345, column: 3, scope: !5204)
!5206 = !DILocation(line: 351, column: 4, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5204, file: !2515, line: 345, column: 16)
!5208 = !DILocation(line: 354, column: 4, scope: !5207)
!5209 = !DILocation(line: 357, column: 4, scope: !5207)
!5210 = !DILocation(line: 360, column: 4, scope: !5207)
!5211 = !DILocation(line: 0, scope: !5207)
!5212 = !DILocation(line: 370, column: 12, scope: !5213)
!5213 = distinct !DILexicalBlock(scope: !5196, file: !2515, line: 370, column: 6)
!5214 = !DILocation(line: 370, column: 22, scope: !5213)
!5215 = !DILocation(line: 371, column: 19, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5213, file: !2515, line: 370, column: 42)
!5217 = !DILocation(line: 372, column: 2, scope: !5216)
!5218 = !DILocation(line: 376, column: 2, scope: !5196)
!5219 = distinct !DISubprogram(name: "extract_width", scope: !2515, file: !2515, line: 388, type: !5038, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5220)
!5220 = !{!5221, !5222, !5223, !5224}
!5221 = !DILocalVariable(name: "conv", arg: 1, scope: !5219, file: !2515, line: 388, type: !4694)
!5222 = !DILocalVariable(name: "sp", arg: 2, scope: !5219, file: !2515, line: 389, type: !279)
!5223 = !DILocalVariable(name: "wp", scope: !5219, file: !2515, line: 398, type: !279)
!5224 = !DILocalVariable(name: "width", scope: !5219, file: !2515, line: 399, type: !232)
!5225 = !DILocation(line: 0, scope: !5219)
!5226 = !DILocation(line: 391, column: 8, scope: !5219)
!5227 = !DILocation(line: 391, column: 22, scope: !5219)
!5228 = !DILocation(line: 393, column: 6, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5219, file: !2515, line: 393, column: 6)
!5230 = !DILocation(line: 393, column: 10, scope: !5229)
!5231 = !DILocation(line: 393, column: 6, scope: !5219)
!5232 = !DILocation(line: 394, column: 20, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5229, file: !2515, line: 393, column: 18)
!5234 = !DILocation(line: 395, column: 10, scope: !5233)
!5235 = !DILocation(line: 395, column: 3, scope: !5233)
!5236 = !DILocation(line: 399, column: 17, scope: !5219)
!5237 = !DILocation(line: 401, column: 6, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5219, file: !2515, line: 401, column: 6)
!5239 = !DILocation(line: 401, column: 9, scope: !5238)
!5240 = !DILocation(line: 401, column: 6, scope: !5219)
!5241 = !DILocation(line: 402, column: 23, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5238, file: !2515, line: 401, column: 16)
!5243 = !DILocation(line: 403, column: 9, scope: !5242)
!5244 = !DILocation(line: 403, column: 21, scope: !5242)
!5245 = !DILocation(line: 405, column: 11, scope: !5242)
!5246 = !DILocation(line: 404, column: 21, scope: !5242)
!5247 = !DILocation(line: 406, column: 2, scope: !5242)
!5248 = !DILocation(line: 409, column: 1, scope: !5219)
!5249 = distinct !DISubprogram(name: "extract_prec", scope: !2515, file: !2515, line: 420, type: !5038, scopeLine: 422, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5250)
!5250 = !{!5251, !5252, !5253}
!5251 = !DILocalVariable(name: "conv", arg: 1, scope: !5249, file: !2515, line: 420, type: !4694)
!5252 = !DILocalVariable(name: "sp", arg: 2, scope: !5249, file: !2515, line: 421, type: !279)
!5253 = !DILocalVariable(name: "prec", scope: !5249, file: !2515, line: 435, type: !232)
!5254 = !DILocation(line: 0, scope: !5249)
!5255 = !DILocation(line: 423, column: 24, scope: !5249)
!5256 = !DILocation(line: 423, column: 28, scope: !5249)
!5257 = !DILocation(line: 423, column: 8, scope: !5249)
!5258 = !DILocation(line: 423, column: 21, scope: !5249)
!5259 = !DILocation(line: 425, column: 6, scope: !5249)
!5260 = !DILocation(line: 428, column: 2, scope: !5249)
!5261 = !DILocation(line: 430, column: 6, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5249, file: !2515, line: 430, column: 6)
!5263 = !DILocation(line: 430, column: 10, scope: !5262)
!5264 = !DILocation(line: 430, column: 6, scope: !5249)
!5265 = !DILocation(line: 431, column: 19, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !5262, file: !2515, line: 430, column: 18)
!5267 = !DILocation(line: 432, column: 10, scope: !5266)
!5268 = !DILocation(line: 432, column: 3, scope: !5266)
!5269 = !DILocation(line: 435, column: 16, scope: !5249)
!5270 = !DILocation(line: 437, column: 8, scope: !5249)
!5271 = !DILocation(line: 437, column: 19, scope: !5249)
!5272 = !DILocation(line: 439, column: 10, scope: !5249)
!5273 = !DILocation(line: 438, column: 20, scope: !5249)
!5274 = !DILocation(line: 441, column: 9, scope: !5249)
!5275 = !DILocation(line: 442, column: 1, scope: !5249)
!5276 = distinct !DISubprogram(name: "extract_length", scope: !2515, file: !2515, line: 453, type: !5038, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5277)
!5277 = !{!5278, !5279}
!5278 = !DILocalVariable(name: "conv", arg: 1, scope: !5276, file: !2515, line: 453, type: !4694)
!5279 = !DILocalVariable(name: "sp", arg: 2, scope: !5276, file: !2515, line: 454, type: !279)
!5280 = !DILocation(line: 0, scope: !5276)
!5281 = !DILocation(line: 456, column: 10, scope: !5276)
!5282 = !DILocation(line: 456, column: 2, scope: !5276)
!5283 = !DILocation(line: 458, column: 8, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5285, file: !2515, line: 458, column: 7)
!5285 = distinct !DILexicalBlock(scope: !5276, file: !2515, line: 456, column: 15)
!5286 = !DILocation(line: 458, column: 7, scope: !5284)
!5287 = !DILocation(line: 458, column: 13, scope: !5284)
!5288 = !DILocation(line: 0, scope: !5284)
!5289 = !DILocation(line: 458, column: 7, scope: !5285)
!5290 = !DILocation(line: 459, column: 21, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5284, file: !2515, line: 458, column: 21)
!5292 = !DILocation(line: 460, column: 4, scope: !5291)
!5293 = !DILocation(line: 461, column: 3, scope: !5291)
!5294 = !DILocation(line: 462, column: 21, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5284, file: !2515, line: 461, column: 10)
!5296 = !DILocation(line: 466, column: 8, scope: !5297)
!5297 = distinct !DILexicalBlock(scope: !5285, file: !2515, line: 466, column: 7)
!5298 = !DILocation(line: 466, column: 7, scope: !5297)
!5299 = !DILocation(line: 466, column: 13, scope: !5297)
!5300 = !DILocation(line: 0, scope: !5297)
!5301 = !DILocation(line: 466, column: 7, scope: !5285)
!5302 = !DILocation(line: 467, column: 21, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5297, file: !2515, line: 466, column: 21)
!5304 = !DILocation(line: 468, column: 4, scope: !5303)
!5305 = !DILocation(line: 469, column: 3, scope: !5303)
!5306 = !DILocation(line: 470, column: 21, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5297, file: !2515, line: 469, column: 10)
!5308 = !DILocation(line: 474, column: 9, scope: !5285)
!5309 = !DILocation(line: 474, column: 20, scope: !5285)
!5310 = !DILocation(line: 475, column: 3, scope: !5285)
!5311 = !DILocation(line: 476, column: 3, scope: !5285)
!5312 = !DILocation(line: 478, column: 9, scope: !5285)
!5313 = !DILocation(line: 478, column: 20, scope: !5285)
!5314 = !DILocation(line: 479, column: 3, scope: !5285)
!5315 = !DILocation(line: 480, column: 3, scope: !5285)
!5316 = !DILocation(line: 482, column: 9, scope: !5285)
!5317 = !DILocation(line: 482, column: 20, scope: !5285)
!5318 = !DILocation(line: 483, column: 3, scope: !5285)
!5319 = !DILocation(line: 484, column: 3, scope: !5285)
!5320 = !DILocation(line: 486, column: 9, scope: !5285)
!5321 = !DILocation(line: 486, column: 20, scope: !5285)
!5322 = !DILocation(line: 487, column: 3, scope: !5285)
!5323 = !DILocation(line: 492, column: 21, scope: !5285)
!5324 = !DILocation(line: 493, column: 3, scope: !5285)
!5325 = !DILocation(line: 495, column: 9, scope: !5285)
!5326 = !DILocation(line: 495, column: 20, scope: !5285)
!5327 = !DILocation(line: 496, column: 3, scope: !5285)
!5328 = !DILocation(line: 498, column: 2, scope: !5276)
!5329 = distinct !DISubprogram(name: "extract_specifier", scope: !2515, file: !2515, line: 513, type: !5038, scopeLine: 515, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5330)
!5330 = !{!5331, !5332, !5333, !5334}
!5331 = !DILocalVariable(name: "conv", arg: 1, scope: !5329, file: !2515, line: 513, type: !4694)
!5332 = !DILocalVariable(name: "sp", arg: 2, scope: !5329, file: !2515, line: 514, type: !279)
!5333 = !DILocalVariable(name: "unsupported", scope: !5329, file: !2515, line: 516, type: !347)
!5334 = !DILabel(scope: !5335, name: "int_conv", file: !2515, line: 526)
!5335 = distinct !DILexicalBlock(scope: !5329, file: !2515, line: 520, column: 27)
!5336 = !DILocation(line: 0, scope: !5329)
!5337 = !DILocation(line: 518, column: 20, scope: !5329)
!5338 = !DILocation(line: 518, column: 8, scope: !5329)
!5339 = !DILocation(line: 518, column: 18, scope: !5329)
!5340 = !DILocation(line: 520, column: 2, scope: !5329)
!5341 = !DILocation(line: 525, column: 3, scope: !5335)
!5342 = !DILocation(line: 0, scope: !5335)
!5343 = !DILocation(line: 526, column: 1, scope: !5335)
!5344 = !DILocation(line: 528, column: 24, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5335, file: !2515, line: 528, column: 7)
!5346 = !DILocation(line: 528, column: 7, scope: !5335)
!5347 = !DILocation(line: 535, column: 23, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5335, file: !2515, line: 535, column: 7)
!5349 = !DILocation(line: 535, column: 7, scope: !5335)
!5350 = !DILocation(line: 536, column: 36, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5348, file: !2515, line: 535, column: 31)
!5352 = !DILocation(line: 537, column: 3, scope: !5351)
!5353 = !DILocation(line: 570, column: 9, scope: !5335)
!5354 = !DILocation(line: 570, column: 23, scope: !5335)
!5355 = !DILocation(line: 575, column: 4, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5357, file: !2515, line: 573, column: 48)
!5357 = distinct !DILexicalBlock(scope: !5335, file: !2515, line: 573, column: 7)
!5358 = !DILocation(line: 603, column: 9, scope: !5335)
!5359 = !DILocation(line: 603, column: 23, scope: !5335)
!5360 = !DILocation(line: 605, column: 24, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5335, file: !2515, line: 605, column: 7)
!5362 = !DILocation(line: 605, column: 7, scope: !5335)
!5363 = !DILocation(line: 612, column: 9, scope: !5335)
!5364 = !DILocation(line: 612, column: 23, scope: !5335)
!5365 = !DILocation(line: 619, column: 24, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5335, file: !2515, line: 619, column: 7)
!5367 = !DILocation(line: 619, column: 7, scope: !5335)
!5368 = !DILocation(line: 625, column: 9, scope: !5335)
!5369 = !DILocation(line: 625, column: 17, scope: !5335)
!5370 = !DILocation(line: 626, column: 3, scope: !5335)
!5371 = !DILocation(line: 629, column: 20, scope: !5329)
!5372 = !DILocation(line: 629, column: 8, scope: !5329)
!5373 = !DILocation(line: 518, column: 23, scope: !5329)
!5374 = !DILocation(line: 631, column: 2, scope: !5329)
!5375 = distinct !DISubprogram(name: "extract_decimal", scope: !2515, file: !2515, line: 318, type: !5376, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5378)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{!232, !278}
!5378 = !{!5379, !5380, !5381}
!5379 = !DILocalVariable(name: "str", arg: 1, scope: !5375, file: !2515, line: 318, type: !278)
!5380 = !DILocalVariable(name: "sp", scope: !5375, file: !2515, line: 320, type: !279)
!5381 = !DILocalVariable(name: "val", scope: !5375, file: !2515, line: 321, type: !232)
!5382 = !DILocation(line: 0, scope: !5375)
!5383 = !DILocation(line: 320, column: 19, scope: !5375)
!5384 = !DILocation(line: 323, column: 37, scope: !5375)
!5385 = !DILocation(line: 323, column: 17, scope: !5375)
!5386 = !DILocation(line: 323, column: 9, scope: !5375)
!5387 = !DILocation(line: 323, column: 2, scope: !5375)
!5388 = !DILocation(line: 324, column: 13, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5375, file: !2515, line: 323, column: 43)
!5390 = !DILocation(line: 324, column: 24, scope: !5389)
!5391 = !DILocation(line: 324, column: 19, scope: !5389)
!5392 = !DILocation(line: 324, column: 27, scope: !5389)
!5393 = distinct !{!5393, !5387, !5394}
!5394 = !DILocation(line: 325, column: 2, scope: !5375)
!5395 = !DILocation(line: 326, column: 7, scope: !5375)
!5396 = !DILocation(line: 327, column: 2, scope: !5375)
!5397 = distinct !DISubprogram(name: "isdigit", scope: !5177, file: !5177, line: 43, type: !303, scopeLine: 44, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !5398)
!5398 = !{!5399}
!5399 = !DILocalVariable(name: "a", arg: 1, scope: !5397, file: !5177, line: 43, type: !109)
!5400 = !DILocation(line: 0, scope: !5397)
!5401 = !DILocation(line: 45, column: 29, scope: !5397)
!5402 = !DILocation(line: 45, column: 45, scope: !5397)
!5403 = !DILocation(line: 45, column: 2, scope: !5397)
!5404 = distinct !DISubprogram(name: "assert_post_action", scope: !5405, file: !5405, line: 26, type: !5406, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !5408)
!5405 = !DIFile(filename: "zephyr/lib/os/assert.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!5406 = !DISubroutineType(types: !5407)
!5407 = !{null, !279, !32}
!5408 = !{!5409, !5410}
!5409 = !DILocalVariable(name: "file", arg: 1, scope: !5404, file: !5405, line: 26, type: !279)
!5410 = !DILocalVariable(name: "line", arg: 2, scope: !5404, file: !5405, line: 26, type: !32)
!5411 = !DILocation(line: 0, scope: !5404)
!5412 = !DILocation(line: 43, column: 2, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5404, file: !5405, line: 43, column: 2)
!5414 = !{i64 2154751730, i64 2154751746, i64 2154751772, i64 2154751800, i64 2154751820}
!5415 = !DILocation(line: 44, column: 1, scope: !5404)
!5416 = distinct !DISubprogram(name: "assert_print", scope: !5405, file: !5405, line: 46, type: !4387, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2545, retainedNodes: !5417)
!5417 = !{!5418, !5419}
!5418 = !DILocalVariable(name: "fmt", arg: 1, scope: !5416, file: !5405, line: 46, type: !279)
!5419 = !DILocalVariable(name: "ap", scope: !5416, file: !5405, line: 48, type: !5420)
!5420 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3393, line: 99, baseType: !5421)
!5421 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3393, line: 40, baseType: !5422)
!5422 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !5405, baseType: !5423)
!5423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !5424)
!5424 = !{!5425}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !5423, file: !5405, line: 48, baseType: !107, size: 32)
!5426 = !DILocation(line: 0, scope: !5416)
!5427 = !DILocation(line: 48, column: 2, scope: !5416)
!5428 = !DILocation(line: 48, column: 10, scope: !5416)
!5429 = !DILocation(line: 50, column: 2, scope: !5416)
!5430 = !DILocation(line: 52, column: 2, scope: !5416)
!5431 = !DILocation(line: 54, column: 2, scope: !5416)
!5432 = !DILocation(line: 55, column: 1, scope: !5416)
!5433 = distinct !DISubprogram(name: "_ConfigAbsSyms", scope: !5434, file: !5434, line: 9, type: !3089, scopeLine: 9, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2547, retainedNodes: !2026)
!5434 = !DIFile(filename: "zephyr/misc/generated/configs.c", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!5435 = !DILocation(line: 11, column: 1, scope: !5433)
!5436 = !{i64 2147565780, i64 2147565823, i64 2147565863}
!5437 = !DILocation(line: 12, column: 1, scope: !5433)
!5438 = !{i64 2147570007, i64 2147570050, i64 2147570090}
!5439 = !DILocation(line: 13, column: 1, scope: !5433)
!5440 = !{i64 2147570216, i64 2147570259, i64 2147570299}
!5441 = !DILocation(line: 14, column: 1, scope: !5433)
!5442 = !{i64 2147570385, i64 2147570428, i64 2147570468}
!5443 = !DILocation(line: 15, column: 1, scope: !5433)
!5444 = !{i64 2147570548, i64 2147570591, i64 2147570631}
!5445 = !DILocation(line: 16, column: 1, scope: !5433)
!5446 = !{i64 2147570732, i64 2147570775, i64 2147570815}
!5447 = !DILocation(line: 17, column: 1, scope: !5433)
!5448 = !{i64 2147570911, i64 2147570954, i64 2147570994}
!5449 = !DILocation(line: 18, column: 1, scope: !5433)
!5450 = !{i64 2147571153, i64 2147571196, i64 2147571236}
!5451 = !DILocation(line: 19, column: 1, scope: !5433)
!5452 = !{i64 2147571388, i64 2147571431, i64 2147571471}
!5453 = !DILocation(line: 20, column: 1, scope: !5433)
!5454 = !{i64 2147571575, i64 2147571618, i64 2147571658}
!5455 = !DILocation(line: 21, column: 1, scope: !5433)
!5456 = !{i64 2147571791, i64 2147571834, i64 2147571874}
!5457 = !DILocation(line: 22, column: 1, scope: !5433)
!5458 = !{i64 2147571994, i64 2147572037, i64 2147572077}
!5459 = !DILocation(line: 23, column: 1, scope: !5433)
!5460 = !{i64 2147572197, i64 2147572240, i64 2147572280}
!5461 = !DILocation(line: 24, column: 1, scope: !5433)
!5462 = !{i64 2147572372, i64 2147572415, i64 2147572455}
!5463 = !DILocation(line: 25, column: 1, scope: !5433)
!5464 = !{i64 2147572580, i64 2147572623, i64 2147572663}
!5465 = !DILocation(line: 26, column: 1, scope: !5433)
!5466 = !{i64 2147572784, i64 2147572827, i64 2147572867}
!5467 = !DILocation(line: 27, column: 1, scope: !5433)
!5468 = !{i64 2147572977, i64 2147573020, i64 2147573060}
!5469 = !DILocation(line: 28, column: 1, scope: !5433)
!5470 = !{i64 2147573179, i64 2147573222, i64 2147573262}
!5471 = !DILocation(line: 29, column: 1, scope: !5433)
!5472 = !{i64 2147573378, i64 2147573421, i64 2147573461}
!5473 = !DILocation(line: 30, column: 1, scope: !5433)
!5474 = !{i64 2147573605, i64 2147573648, i64 2147573688}
!5475 = !DILocation(line: 31, column: 1, scope: !5433)
!5476 = !{i64 2147573807, i64 2147573850, i64 2147573890}
!5477 = !DILocation(line: 32, column: 1, scope: !5433)
!5478 = !{i64 2147574022, i64 2147574065, i64 2147574105}
!5479 = !DILocation(line: 33, column: 1, scope: !5433)
!5480 = !{i64 2147574239, i64 2147574282, i64 2147574322}
!5481 = !DILocation(line: 34, column: 1, scope: !5433)
!5482 = !{i64 2147574411, i64 2147574454, i64 2147574494}
!5483 = !DILocation(line: 35, column: 1, scope: !5433)
!5484 = !{i64 2147574613, i64 2147574656, i64 2147574696}
!5485 = !DILocation(line: 36, column: 1, scope: !5433)
!5486 = !{i64 2147574839, i64 2147574882, i64 2147574922}
!5487 = !DILocation(line: 37, column: 1, scope: !5433)
!5488 = !{i64 2147575038, i64 2147575081, i64 2147575121}
!5489 = !DILocation(line: 38, column: 1, scope: !5433)
!5490 = !{i64 2147575213, i64 2147575256, i64 2147575296}
!5491 = !DILocation(line: 39, column: 1, scope: !5433)
!5492 = !{i64 2147575466, i64 2147575509, i64 2147575549}
!5493 = !DILocation(line: 40, column: 1, scope: !5433)
!5494 = !{i64 2147575707, i64 2147575750, i64 2147575790}
!5495 = !DILocation(line: 41, column: 1, scope: !5433)
!5496 = !{i64 2147575942, i64 2147575985, i64 2147576025}
!5497 = !DILocation(line: 42, column: 1, scope: !5433)
!5498 = !{i64 2147576174, i64 2147576217, i64 2147576257}
!5499 = !DILocation(line: 43, column: 1, scope: !5433)
!5500 = !{i64 2147576400, i64 2147576443, i64 2147576483}
!5501 = !DILocation(line: 44, column: 1, scope: !5433)
!5502 = !{i64 2147576626, i64 2147576669, i64 2147576709}
!5503 = !DILocation(line: 45, column: 1, scope: !5433)
!5504 = !{i64 2147576852, i64 2147576895, i64 2147576935}
!5505 = !DILocation(line: 46, column: 1, scope: !5433)
!5506 = !{i64 2147577087, i64 2147577130, i64 2147577170}
!5507 = !DILocation(line: 47, column: 1, scope: !5433)
!5508 = !{i64 2147577313, i64 2147577356, i64 2147577396}
!5509 = !DILocation(line: 48, column: 1, scope: !5433)
!5510 = !{i64 2147577560, i64 2147577603, i64 2147577643}
!5511 = !DILocation(line: 49, column: 1, scope: !5433)
!5512 = !{i64 2147577789, i64 2147577832, i64 2147577872}
!5513 = !DILocation(line: 50, column: 1, scope: !5433)
!5514 = !{i64 2147578021, i64 2147578064, i64 2147578104}
!5515 = !DILocation(line: 51, column: 1, scope: !5433)
!5516 = !{i64 2147578265, i64 2147578308, i64 2147578348}
!5517 = !DILocation(line: 52, column: 1, scope: !5433)
!5518 = !{i64 2147578503, i64 2147578546, i64 2147578586}
!5519 = !DILocation(line: 53, column: 1, scope: !5433)
!5520 = !{i64 2147582838, i64 2147582881, i64 2147582921}
!5521 = !DILocation(line: 54, column: 1, scope: !5433)
!5522 = !{i64 2147583076, i64 2147583119, i64 2147583159}
!5523 = !DILocation(line: 55, column: 1, scope: !5433)
!5524 = !{i64 2147583329, i64 2147583372, i64 2147583412}
!5525 = !DILocation(line: 56, column: 1, scope: !5433)
!5526 = !{i64 2147583573, i64 2147583616, i64 2147583656}
!5527 = !DILocation(line: 57, column: 1, scope: !5433)
!5528 = !{i64 2147583808, i64 2147583851, i64 2147583891}
!5529 = !DILocation(line: 58, column: 1, scope: !5433)
!5530 = !{i64 2147584058, i64 2147584101, i64 2147584141}
!5531 = !DILocation(line: 59, column: 1, scope: !5433)
!5532 = !{i64 2147584305, i64 2147584348, i64 2147584388}
!5533 = !DILocation(line: 60, column: 1, scope: !5433)
!5534 = !{i64 2147584540, i64 2147584583, i64 2147584623}
!5535 = !DILocation(line: 61, column: 1, scope: !5433)
!5536 = !{i64 2147584775, i64 2147584818, i64 2147584858}
!5537 = !DILocation(line: 62, column: 1, scope: !5433)
!5538 = !{i64 2147585010, i64 2147585053, i64 2147585093}
!5539 = !DILocation(line: 63, column: 1, scope: !5433)
!5540 = !{i64 2147585248, i64 2147585291, i64 2147585331}
!5541 = !DILocation(line: 64, column: 1, scope: !5433)
!5542 = !{i64 2147585489, i64 2147585532, i64 2147585572}
!5543 = !DILocation(line: 65, column: 1, scope: !5433)
!5544 = !{i64 2147585769, i64 2147585812, i64 2147585852}
!5545 = !DILocation(line: 66, column: 1, scope: !5433)
!5546 = !{i64 2147586028, i64 2147586071, i64 2147586111}
!5547 = !DILocation(line: 67, column: 1, scope: !5433)
!5548 = !{i64 2147586257, i64 2147586300, i64 2147586340}
!5549 = !DILocation(line: 68, column: 1, scope: !5433)
!5550 = !{i64 2147586483, i64 2147586526, i64 2147586566}
!5551 = !DILocation(line: 69, column: 1, scope: !5433)
!5552 = !{i64 2147586721, i64 2147586764, i64 2147586804}
!5553 = !DILocation(line: 70, column: 1, scope: !5433)
!5554 = !{i64 2147586950, i64 2147586993, i64 2147587033}
!5555 = !DILocation(line: 71, column: 1, scope: !5433)
!5556 = !{i64 2147587158, i64 2147587201, i64 2147587241}
!5557 = !DILocation(line: 72, column: 1, scope: !5433)
!5558 = !{i64 2147587369, i64 2147587412, i64 2147587452}
!5559 = !DILocation(line: 73, column: 1, scope: !5433)
!5560 = !{i64 2147587604, i64 2147587647, i64 2147587687}
!5561 = !DILocation(line: 74, column: 1, scope: !5433)
!5562 = !{i64 2147587833, i64 2147587876, i64 2147587916}
!5563 = !DILocation(line: 75, column: 1, scope: !5433)
!5564 = !{i64 2147588050, i64 2147588093, i64 2147588133}
!5565 = !DILocation(line: 76, column: 1, scope: !5433)
!5566 = !{i64 2147588279, i64 2147588322, i64 2147588362}
!5567 = !DILocation(line: 77, column: 1, scope: !5433)
!5568 = !{i64 2147588517, i64 2147588560, i64 2147588600}
!5569 = !DILocation(line: 78, column: 1, scope: !5433)
!5570 = !{i64 2147588749, i64 2147588792, i64 2147588832}
!5571 = !DILocation(line: 79, column: 1, scope: !5433)
!5572 = !{i64 2147588975, i64 2147589018, i64 2147589058}
!5573 = !DILocation(line: 80, column: 1, scope: !5433)
!5574 = !{i64 2147589192, i64 2147589235, i64 2147589275}
!5575 = !DILocation(line: 81, column: 1, scope: !5433)
!5576 = !{i64 2147589424, i64 2147589467, i64 2147589507}
!5577 = !DILocation(line: 82, column: 1, scope: !5433)
!5578 = !{i64 2147589650, i64 2147589693, i64 2147589733}
!5579 = !DILocation(line: 83, column: 1, scope: !5433)
!5580 = !{i64 2147589864, i64 2147589907, i64 2147589947}
!5581 = !DILocation(line: 84, column: 1, scope: !5433)
!5582 = !{i64 2147590084, i64 2147590127, i64 2147590167}
!5583 = !DILocation(line: 85, column: 1, scope: !5433)
!5584 = !{i64 2147590316, i64 2147590359, i64 2147590399}
!5585 = !DILocation(line: 86, column: 1, scope: !5433)
!5586 = !{i64 2147590524, i64 2147590567, i64 2147590607}
!5587 = !DILocation(line: 87, column: 1, scope: !5433)
!5588 = !{i64 2147590729, i64 2147590772, i64 2147590812}
!5589 = !DILocation(line: 88, column: 1, scope: !5433)
!5590 = !{i64 2147595007, i64 2147595050, i64 2147595090}
!5591 = !DILocation(line: 89, column: 1, scope: !5433)
!5592 = !{i64 2147595221, i64 2147595264, i64 2147595304}
!5593 = !DILocation(line: 90, column: 1, scope: !5433)
!5594 = !{i64 2147595447, i64 2147595490, i64 2147595530}
!5595 = !DILocation(line: 91, column: 1, scope: !5433)
!5596 = !{i64 2147595667, i64 2147595710, i64 2147595750}
!5597 = !DILocation(line: 92, column: 1, scope: !5433)
!5598 = !{i64 2147595872, i64 2147595915, i64 2147595955}
!5599 = !DILocation(line: 93, column: 1, scope: !5433)
!5600 = !{i64 2147596104, i64 2147596147, i64 2147596187}
!5601 = !DILocation(line: 94, column: 1, scope: !5433)
!5602 = !{i64 2147596339, i64 2147596382, i64 2147596422}
!5603 = !DILocation(line: 95, column: 1, scope: !5433)
!5604 = !{i64 2147596589, i64 2147596632, i64 2147596672}
!5605 = !DILocation(line: 96, column: 1, scope: !5433)
!5606 = !{i64 2147596839, i64 2147596882, i64 2147596922}
!5607 = !DILocation(line: 97, column: 1, scope: !5433)
!5608 = !{i64 2147597077, i64 2147597120, i64 2147597160}
!5609 = !DILocation(line: 98, column: 1, scope: !5433)
!5610 = !{i64 2147597288, i64 2147597331, i64 2147597371}
!5611 = !DILocation(line: 99, column: 1, scope: !5433)
!5612 = !{i64 2147597505, i64 2147597548, i64 2147597588}
!5613 = !DILocation(line: 100, column: 1, scope: !5433)
!5614 = !{i64 2147597701, i64 2147597744, i64 2147597784}
!5615 = !DILocation(line: 101, column: 1, scope: !5433)
!5616 = !{i64 2147597903, i64 2147597946, i64 2147597986}
!5617 = !DILocation(line: 102, column: 1, scope: !5433)
!5618 = !{i64 2147598096, i64 2147598139, i64 2147598179}
!5619 = !DILocation(line: 103, column: 1, scope: !5433)
!5620 = !{i64 2147598304, i64 2147598347, i64 2147598387}
!5621 = !DILocation(line: 104, column: 1, scope: !5433)
!5622 = !{i64 2147598500, i64 2147598543, i64 2147598583}
!5623 = !DILocation(line: 105, column: 1, scope: !5433)
!5624 = !{i64 2147598708, i64 2147598751, i64 2147598791}
!5625 = !DILocation(line: 106, column: 1, scope: !5433)
!5626 = !{i64 2147598919, i64 2147598962, i64 2147599002}
!5627 = !DILocation(line: 107, column: 1, scope: !5433)
!5628 = !{i64 2147599118, i64 2147599161, i64 2147599201}
!5629 = !DILocation(line: 108, column: 1, scope: !5433)
!5630 = !{i64 2147599293, i64 2147599336, i64 2147599376}
!5631 = !DILocation(line: 109, column: 1, scope: !5433)
!5632 = !{i64 2147599477, i64 2147599520, i64 2147599560}
!5633 = !DILocation(line: 110, column: 1, scope: !5433)
!5634 = !{i64 2147599679, i64 2147599722, i64 2147599762}
!5635 = !DILocation(line: 111, column: 1, scope: !5433)
!5636 = !{i64 2147599878, i64 2147599921, i64 2147599961}
!5637 = !DILocation(line: 112, column: 1, scope: !5433)
!5638 = !{i64 2147600083, i64 2147600126, i64 2147600166}
!5639 = !DILocation(line: 113, column: 1, scope: !5433)
!5640 = !{i64 2147600276, i64 2147600319, i64 2147600359}
!5641 = !DILocation(line: 114, column: 1, scope: !5433)
!5642 = !{i64 2147600442, i64 2147600485, i64 2147600525}
!5643 = !DILocation(line: 115, column: 1, scope: !5433)
!5644 = !{i64 2147600626, i64 2147600669, i64 2147600709}
!5645 = !DILocation(line: 116, column: 1, scope: !5433)
!5646 = !{i64 2147600816, i64 2147600859, i64 2147600899}
!5647 = !DILocation(line: 117, column: 1, scope: !5433)
!5648 = !{i64 2147601000, i64 2147601043, i64 2147601083}
!5649 = !DILocation(line: 118, column: 1, scope: !5433)
!5650 = !{i64 2147601214, i64 2147601257, i64 2147601297}
!5651 = !DILocation(line: 119, column: 1, scope: !5433)
!5652 = !{i64 2147601425, i64 2147601468, i64 2147601508}
!5653 = !DILocation(line: 120, column: 1, scope: !5433)
!5654 = !{i64 2147601648, i64 2147601691, i64 2147601731}
!5655 = !DILocation(line: 121, column: 1, scope: !5433)
!5656 = !{i64 2147601832, i64 2147601875, i64 2147601915}
!5657 = !DILocation(line: 122, column: 1, scope: !5433)
!5658 = !{i64 2147602046, i64 2147602089, i64 2147602129}
!5659 = !DILocation(line: 123, column: 1, scope: !5433)
!5660 = !{i64 2147602212, i64 2147602255, i64 2147602295}
!5661 = !DILocation(line: 124, column: 1, scope: !5433)
!5662 = !{i64 2147602393, i64 2147602436, i64 2147602476}
!5663 = !DILocation(line: 125, column: 1, scope: !5433)
!5664 = !{i64 2147602586, i64 2147602629, i64 2147602669}
!5665 = !DILocation(line: 126, column: 1, scope: !5433)
!5666 = !{i64 2147602812, i64 2147602855, i64 2147602895}
!5667 = !DILocation(line: 127, column: 1, scope: !5433)
!5668 = !{i64 2147603026, i64 2147603069, i64 2147603109}
!5669 = !DILocation(line: 128, column: 1, scope: !5433)
!5670 = !{i64 2147603252, i64 2147603295, i64 2147603335}
!5671 = !DILocation(line: 129, column: 1, scope: !5433)
!5672 = !{i64 2147603469, i64 2147603512, i64 2147603552}
!5673 = !DILocation(line: 130, column: 1, scope: !5433)
!5674 = !{i64 2147603746, i64 2147603789, i64 2147603829}
!5675 = !DILocation(line: 131, column: 1, scope: !5433)
!5676 = !{i64 2147603972, i64 2147604015, i64 2147604055}
!5677 = !DILocation(line: 132, column: 1, scope: !5433)
!5678 = !{i64 2147608241, i64 2147608284, i64 2147608324}
!5679 = !DILocation(line: 133, column: 1, scope: !5433)
!5680 = !{i64 2147608437, i64 2147608480, i64 2147608520}
!5681 = !DILocation(line: 134, column: 1, scope: !5433)
!5682 = !{i64 2147608702, i64 2147608745, i64 2147608785}
!5683 = !DILocation(line: 135, column: 1, scope: !5433)
!5684 = !{i64 2147608916, i64 2147608959, i64 2147608999}
!5685 = !DILocation(line: 136, column: 1, scope: !5433)
!5686 = !{i64 2147609091, i64 2147609134, i64 2147609174}
!5687 = !DILocation(line: 137, column: 1, scope: !5433)
!5688 = !{i64 2147609345, i64 2147609388, i64 2147609428}
!5689 = !DILocation(line: 138, column: 1, scope: !5433)
!5690 = !{i64 2147609544, i64 2147609587, i64 2147609627}
!5691 = !DILocation(line: 139, column: 1, scope: !5433)
!5692 = !{i64 2147609786, i64 2147609829, i64 2147609869}
!5693 = !DILocation(line: 140, column: 1, scope: !5433)
!5694 = !{i64 2147609949, i64 2147609992, i64 2147610032}
!5695 = !DILocation(line: 141, column: 1, scope: !5433)
!5696 = !{i64 2147610136, i64 2147610179, i64 2147610219}
!5697 = !DILocation(line: 142, column: 1, scope: !5433)
!5698 = !{i64 2147610344, i64 2147610387, i64 2147610427}
!5699 = !DILocation(line: 143, column: 1, scope: !5433)
!5700 = !{i64 2147610540, i64 2147610583, i64 2147610623}
!5701 = !DILocation(line: 144, column: 1, scope: !5433)
!5702 = !{i64 2147610733, i64 2147610776, i64 2147610816}
!5703 = !DILocation(line: 145, column: 1, scope: !5433)
!5704 = !{i64 2147610916, i64 2147610959, i64 2147610999}
!5705 = !DILocation(line: 146, column: 1, scope: !5433)
!5706 = !{i64 2147611130, i64 2147611173, i64 2147611213}
!5707 = !DILocation(line: 147, column: 1, scope: !5433)
!5708 = !{i64 2147611341, i64 2147611384, i64 2147611424}
!5709 = !DILocation(line: 148, column: 1, scope: !5433)
!5710 = !{i64 2147611561, i64 2147611604, i64 2147611644}
!5711 = !DILocation(line: 149, column: 1, scope: !5433)
!5712 = !{i64 2147611768, i64 2147611811, i64 2147611851}
!5713 = !DILocation(line: 150, column: 1, scope: !5433)
!5714 = !{i64 2147612041, i64 2147612084, i64 2147612124}
!5715 = !DILocation(line: 151, column: 1, scope: !5433)
!5716 = !{i64 2147612289, i64 2147612332, i64 2147612372}
!5717 = !DILocation(line: 152, column: 1, scope: !5433)
!5718 = !{i64 2147612488, i64 2147612531, i64 2147612571}
!5719 = !DILocation(line: 153, column: 1, scope: !5433)
!5720 = !{i64 2147612723, i64 2147612766, i64 2147612806}
!5721 = !DILocation(line: 154, column: 1, scope: !5433)
!5722 = !{i64 2147612973, i64 2147613016, i64 2147613056}
!5723 = !DILocation(line: 155, column: 1, scope: !5433)
!5724 = !{i64 2147613175, i64 2147613218, i64 2147613258}
!5725 = !DILocation(line: 156, column: 1, scope: !5433)
!5726 = !{i64 2147613398, i64 2147613441, i64 2147613481}
!5727 = !DILocation(line: 157, column: 1, scope: !5433)
!5728 = !{i64 2147613612, i64 2147613655, i64 2147613695}
!5729 = !DILocation(line: 158, column: 1, scope: !5433)
!5730 = !{i64 2147613856, i64 2147613899, i64 2147613939}
!5731 = !DILocation(line: 159, column: 1, scope: !5433)
!5732 = !{i64 2147614085, i64 2147614128, i64 2147614168}
!5733 = !DILocation(line: 160, column: 1, scope: !5433)
!5734 = !{i64 2147614314, i64 2147614357, i64 2147614397}
!5735 = !DILocation(line: 161, column: 1, scope: !5433)
!5736 = !{i64 2147614522, i64 2147614565, i64 2147614605}
!5737 = !DILocation(line: 162, column: 1, scope: !5433)
!5738 = !{i64 2147614760, i64 2147614803, i64 2147614843}
!5739 = !DILocation(line: 163, column: 1, scope: !5433)
!5740 = !{i64 2147614986, i64 2147615029, i64 2147615069}
!5741 = !DILocation(line: 164, column: 1, scope: !5433)
!5742 = !{i64 2147615245, i64 2147615288, i64 2147615328}
!5743 = !DILocation(line: 165, column: 1, scope: !5433)
!5744 = !{i64 2147615465, i64 2147615508, i64 2147615548}
!5745 = !DILocation(line: 166, column: 1, scope: !5433)
!5746 = !{i64 2147615697, i64 2147615740, i64 2147615780}
!5747 = !DILocation(line: 167, column: 1, scope: !5433)
!5748 = !{i64 2147615938, i64 2147615981, i64 2147616021}
!5749 = !DILocation(line: 168, column: 1, scope: !5433)
!5750 = !{i64 2147616179, i64 2147616222, i64 2147616262}
!5751 = !DILocation(line: 169, column: 1, scope: !5433)
!5752 = !{i64 2147616402, i64 2147616445, i64 2147616485}
!5753 = !DILocation(line: 170, column: 1, scope: !5433)
!5754 = !{i64 2147620680, i64 2147620723, i64 2147620763}
!5755 = !DILocation(line: 171, column: 1, scope: !5433)
!5756 = !{i64 2147620921, i64 2147620964, i64 2147621004}
!5757 = !DILocation(line: 172, column: 1, scope: !5433)
!5758 = !{i64 2147621108, i64 2147621151, i64 2147621191}
!5759 = !DILocation(line: 173, column: 1, scope: !5433)
!5760 = !{i64 2147621295, i64 2147621338, i64 2147621378}
!5761 = !DILocation(line: 174, column: 1, scope: !5433)
!5762 = !{i64 2147621458, i64 2147621501, i64 2147621541}
!5763 = !DILocation(line: 175, column: 1, scope: !5433)
!5764 = !{i64 2147621663, i64 2147621706, i64 2147621746}
!5765 = !DILocation(line: 176, column: 1, scope: !5433)
!5766 = !{i64 2147621856, i64 2147621899, i64 2147621939}
!5767 = !DILocation(line: 177, column: 1, scope: !5433)
!5768 = !{i64 2147622115, i64 2147622158, i64 2147622198}
!5769 = !DILocation(line: 178, column: 1, scope: !5433)
!5770 = !{i64 2147622338, i64 2147622381, i64 2147622421}
!5771 = !DILocation(line: 179, column: 1, scope: !5433)
!5772 = !{i64 2147622567, i64 2147622610, i64 2147622650}
!5773 = !DILocation(line: 180, column: 1, scope: !5433)
!5774 = !{i64 2147622781, i64 2147622824, i64 2147622864}
!5775 = !DILocation(line: 181, column: 1, scope: !5433)
!5776 = !{i64 2147622983, i64 2147623026, i64 2147623066}
!5777 = !DILocation(line: 182, column: 1, scope: !5433)
!5778 = !{i64 2147623179, i64 2147623222, i64 2147623262}
!5779 = !DILocation(line: 183, column: 1, scope: !5433)
!5780 = !{i64 2147623391, i64 2147623434, i64 2147623474}
!5781 = !DILocation(line: 184, column: 1, scope: !5433)
!5782 = !{i64 2147623612, i64 2147623655, i64 2147623695}
!5783 = !DILocation(line: 185, column: 1, scope: !5433)
!5784 = !{i64 2147623826, i64 2147623869, i64 2147623909}
!5785 = !DILocation(line: 186, column: 1, scope: !5433)
!5786 = !{i64 2147624016, i64 2147624059, i64 2147624099}
!5787 = !DILocation(line: 187, column: 1, scope: !5433)
!5788 = !{i64 2147624215, i64 2147624258, i64 2147624298}
!5789 = !DILocation(line: 188, column: 1, scope: !5433)
!5790 = !{i64 2147624420, i64 2147624463, i64 2147624503}
!5791 = !DILocation(line: 189, column: 1, scope: !5433)
!5792 = !{i64 2147624640, i64 2147624683, i64 2147624723}
!5793 = !DILocation(line: 190, column: 1, scope: !5433)
!5794 = !{i64 2147624841, i64 2147624884, i64 2147624924}
!5795 = !DILocation(line: 191, column: 1, scope: !5433)
!5796 = !{i64 2147625040, i64 2147625083, i64 2147625123}
!5797 = !DILocation(line: 192, column: 1, scope: !5433)
!5798 = !{i64 2147625245, i64 2147625288, i64 2147625328}
!5799 = !DILocation(line: 193, column: 1, scope: !5433)
!5800 = !{i64 2147625414, i64 2147625457, i64 2147625497}
!5801 = !DILocation(line: 194, column: 1, scope: !5433)
!5802 = !{i64 2147625598, i64 2147625641, i64 2147625681}
!5803 = !DILocation(line: 195, column: 1, scope: !5433)
!5804 = !{i64 2147625782, i64 2147625825, i64 2147625865}
!5805 = !DILocation(line: 196, column: 1, scope: !5433)
!5806 = !{i64 2147625969, i64 2147626012, i64 2147626052}
!5807 = !DILocation(line: 197, column: 1, scope: !5433)
!5808 = !{i64 2147626153, i64 2147626196, i64 2147626236}
!5809 = !DILocation(line: 198, column: 1, scope: !5433)
!5810 = !{i64 2147626340, i64 2147626383, i64 2147626423}
!5811 = !DILocation(line: 199, column: 1, scope: !5433)
!5812 = !{i64 2147626552, i64 2147626595, i64 2147626635}
!5813 = !DILocation(line: 200, column: 1, scope: !5433)
!5814 = !{i64 2147626790, i64 2147626833, i64 2147626873}
!5815 = !DILocation(line: 201, column: 1, scope: !5433)
!5816 = !{i64 2147627020, i64 2147627063, i64 2147627103}
!5817 = !DILocation(line: 202, column: 1, scope: !5433)
!5818 = !{i64 2147627249, i64 2147627292, i64 2147627332}
!5819 = !DILocation(line: 203, column: 1, scope: !5433)
!5820 = !{i64 2147627436, i64 2147627479, i64 2147627519}
!5821 = !DILocation(line: 204, column: 1, scope: !5433)
!5822 = !{i64 2147627632, i64 2147627675, i64 2147627715}
!5823 = !DILocation(line: 205, column: 1, scope: !5433)
!5824 = !{i64 2147627840, i64 2147627883, i64 2147627923}
!5825 = !DILocation(line: 206, column: 1, scope: !5433)
!5826 = !{i64 2147628052, i64 2147628095, i64 2147628135}
!5827 = !DILocation(line: 207, column: 1, scope: !5433)
!5828 = !{i64 2147628251, i64 2147628294, i64 2147628334}
!5829 = !DILocation(line: 208, column: 1, scope: !5433)
!5830 = !{i64 2147628489, i64 2147628532, i64 2147628572}
!5831 = !DILocation(line: 209, column: 1, scope: !5433)
!5832 = !{i64 2147628685, i64 2147628728, i64 2147628768}
!5833 = !DILocation(line: 210, column: 1, scope: !5433)
!5834 = !{i64 2147628887, i64 2147628930, i64 2147628970}
!5835 = !DILocation(line: 211, column: 1, scope: !5433)
!5836 = !{i64 2147629080, i64 2147629123, i64 2147629163}
!5837 = !DILocation(line: 212, column: 1, scope: !5433)
!5838 = !{i64 2147629314, i64 2147629357, i64 2147629397}
!5839 = !DILocation(line: 213, column: 1, scope: !5433)
!5840 = !{i64 2147629477, i64 2147629520, i64 2147629560}
!5841 = !DILocation(line: 214, column: 1, scope: !5433)
!5842 = !{i64 2147629716, i64 2147629759, i64 2147629799}
!5843 = !DILocation(line: 215, column: 1, scope: !5433)
!5844 = !{i64 2147634016, i64 2147634059, i64 2147634099}
!5845 = !DILocation(line: 216, column: 1, scope: !5433)
!5846 = !{i64 2147634252, i64 2147634295, i64 2147634335}
!5847 = !DILocation(line: 217, column: 1, scope: !5433)
!5848 = !{i64 2147634482, i64 2147634525, i64 2147634565}
!5849 = !DILocation(line: 218, column: 1, scope: !5433)
!5850 = !{i64 2147634669, i64 2147634712, i64 2147634752}
!5851 = !DILocation(line: 219, column: 1, scope: !5433)
!5852 = !{i64 2147634868, i64 2147634911, i64 2147634951}
!5853 = !DILocation(line: 220, column: 1, scope: !5433)
!5854 = !{i64 2147635139, i64 2147635182, i64 2147635222}
!5855 = !DILocation(line: 221, column: 1, scope: !5433)
!5856 = !{i64 2147635314, i64 2147635357, i64 2147635397}
!5857 = !DILocation(line: 222, column: 1, scope: !5433)
!5858 = !{i64 2147635548, i64 2147635591, i64 2147635631}
!5859 = !DILocation(line: 223, column: 1, scope: !5433)
!5860 = !{i64 2147635756, i64 2147635799, i64 2147635839}
!5861 = !DILocation(line: 224, column: 1, scope: !5433)
!5862 = !{i64 2147635974, i64 2147636017, i64 2147636057}
!5863 = !DILocation(line: 225, column: 1, scope: !5433)
!5864 = !{i64 2147636164, i64 2147636207, i64 2147636247}
!5865 = !DILocation(line: 226, column: 1, scope: !5433)
!5866 = !{i64 2147636396, i64 2147636439, i64 2147636479}
!5867 = !DILocation(line: 227, column: 1, scope: !5433)
!5868 = !{i64 2147636616, i64 2147636659, i64 2147636699}
!5869 = !DILocation(line: 228, column: 1, scope: !5433)
!5870 = !{i64 2147636812, i64 2147636855, i64 2147636895}
!5871 = !DILocation(line: 229, column: 1, scope: !5433)
!5872 = !{i64 2147637018, i64 2147637061, i64 2147637101}
!5873 = !DILocation(line: 230, column: 1, scope: !5433)
!5874 = !{i64 2147637223, i64 2147637266, i64 2147637306}
!5875 = !DILocation(line: 231, column: 1, scope: !5433)
!5876 = !{i64 2147637437, i64 2147637480, i64 2147637520}
!5877 = !DILocation(line: 232, column: 1, scope: !5433)
!5878 = !{i64 2147637663, i64 2147637706, i64 2147637746}
!5879 = !DILocation(line: 233, column: 1, scope: !5433)
!5880 = !{i64 2147637871, i64 2147637914, i64 2147637954}
!5881 = !DILocation(line: 234, column: 1, scope: !5433)
!5882 = !{i64 2147638067, i64 2147638110, i64 2147638150}
!5883 = !DILocation(line: 235, column: 1, scope: !5433)
!5884 = !{i64 2147638299, i64 2147638342, i64 2147638382}
!5885 = !DILocation(line: 236, column: 1, scope: !5433)
!5886 = !{i64 2147638483, i64 2147638526, i64 2147638566}
!5887 = !DILocation(line: 237, column: 1, scope: !5433)
!5888 = !{i64 2147638692, i64 2147638735, i64 2147638775}
!5889 = !DILocation(line: 238, column: 1, scope: !5433)
!5890 = !{i64 2147638900, i64 2147638943, i64 2147638983}
!5891 = !DILocation(line: 239, column: 1, scope: !5433)
!5892 = !{i64 2147639096, i64 2147639139, i64 2147639179}
!5893 = !DILocation(line: 240, column: 1, scope: !5433)
!5894 = !{i64 2147639280, i64 2147639323, i64 2147639363}
!5895 = !DILocation(line: 241, column: 1, scope: !5433)
!5896 = !{i64 2147639506, i64 2147639549, i64 2147639589}
!5897 = !DILocation(line: 242, column: 1, scope: !5433)
!5898 = !{i64 2147639732, i64 2147639775, i64 2147639815}
!5899 = !DILocation(line: 243, column: 1, scope: !5433)
!5900 = !{i64 2147639958, i64 2147640001, i64 2147640041}
!5901 = !DILocation(line: 244, column: 1, scope: !5433)
!5902 = !{i64 2147640184, i64 2147640227, i64 2147640267}
!5903 = !DILocation(line: 245, column: 1, scope: !5433)
!5904 = !{i64 2147640410, i64 2147640453, i64 2147640493}
!5905 = !DILocation(line: 246, column: 1, scope: !5433)
!5906 = !{i64 2147640642, i64 2147640685, i64 2147640725}
!5907 = !DILocation(line: 247, column: 1, scope: !5433)
!5908 = !{i64 2147640880, i64 2147640923, i64 2147640963}
!5909 = !DILocation(line: 248, column: 1, scope: !5433)
!5910 = !{i64 2147641100, i64 2147641143, i64 2147641183}
!5911 = !DILocation(line: 249, column: 1, scope: !5433)
!5912 = !{i64 2147641344, i64 2147641387, i64 2147641427}
!5913 = !DILocation(line: 250, column: 1, scope: !5433)
!5914 = !{i64 2147641585, i64 2147641628, i64 2147641668}
!5915 = !DILocation(line: 251, column: 1, scope: !5433)
!5916 = !{i64 2147641820, i64 2147641863, i64 2147641903}
!5917 = !DILocation(line: 252, column: 1, scope: !5433)
!5918 = !{i64 2147642052, i64 2147642095, i64 2147642135}
!5919 = !DILocation(line: 253, column: 1, scope: !5433)
!5920 = !{i64 2147642254, i64 2147642297, i64 2147642337}
!5921 = !DILocation(line: 254, column: 1, scope: !5433)
!5922 = !{i64 2147642504, i64 2147642547, i64 2147642587}
!5923 = !DILocation(line: 255, column: 1, scope: !5433)
!5924 = !{i64 2147646803, i64 2147646846, i64 2147646886}
!5925 = !DILocation(line: 256, column: 1, scope: !5433)
!5926 = !{i64 2147647011, i64 2147647054, i64 2147647094}
!5927 = !DILocation(line: 257, column: 1, scope: !5433)
!5928 = !{i64 2147647207, i64 2147647250, i64 2147647290}
!5929 = !DILocation(line: 258, column: 1, scope: !5433)
!5930 = !{i64 2147647391, i64 2147647434, i64 2147647474}
!5931 = !DILocation(line: 259, column: 1, scope: !5433)
!5932 = !{i64 2147647608, i64 2147647651, i64 2147647691}
!5933 = !DILocation(line: 260, column: 1, scope: !5433)
!5934 = !{i64 2147647813, i64 2147647856, i64 2147647896}
!5935 = !DILocation(line: 261, column: 1, scope: !5433)
!5936 = !{i64 2147648048, i64 2147648091, i64 2147648131}
!5937 = !DILocation(line: 262, column: 1, scope: !5433)
!5938 = !{i64 2147648271, i64 2147648314, i64 2147648354}
!5939 = !DILocation(line: 263, column: 1, scope: !5433)
!5940 = !{i64 2147648495, i64 2147648538, i64 2147648578}
!5941 = !DILocation(line: 264, column: 1, scope: !5433)
!5942 = !{i64 2147648733, i64 2147648776, i64 2147648816}
!5943 = !DILocation(line: 265, column: 1, scope: !5433)
!5944 = !{i64 2147648971, i64 2147649014, i64 2147649054}
!5945 = !DILocation(line: 266, column: 1, scope: !5433)
!5946 = !{i64 2147649188, i64 2147649231, i64 2147649271}
!5947 = !DILocation(line: 267, column: 1, scope: !5433)
!5948 = !{i64 2147649393, i64 2147649436, i64 2147649476}
!5949 = !DILocation(line: 268, column: 1, scope: !5433)
!5950 = !{i64 2147649586, i64 2147649629, i64 2147649669}
!5951 = !DILocation(line: 269, column: 1, scope: !5433)
!5952 = !{i64 2147649839, i64 2147649882, i64 2147649922}
!5953 = !DILocation(line: 270, column: 1, scope: !5433)
!5954 = !{i64 2147650047, i64 2147650090, i64 2147650130}
!5955 = !DILocation(line: 271, column: 1, scope: !5433)
!5956 = !{i64 2147650243, i64 2147650286, i64 2147650326}
!5957 = !DILocation(line: 272, column: 1, scope: !5433)
!5958 = !{i64 2147650457, i64 2147650500, i64 2147650540}
!5959 = !DILocation(line: 273, column: 1, scope: !5433)
!5960 = !{i64 2147650665, i64 2147650708, i64 2147650748}
!5961 = !DILocation(line: 274, column: 1, scope: !5433)
!5962 = !{i64 2147650855, i64 2147650898, i64 2147650938}
!5963 = !DILocation(line: 275, column: 1, scope: !5433)
!5964 = !{i64 2147651069, i64 2147651112, i64 2147651152}
!5965 = !DILocation(line: 276, column: 1, scope: !5433)
!5966 = !{i64 2147651331, i64 2147651374, i64 2147651414}
!5967 = !DILocation(line: 277, column: 1, scope: !5433)
!5968 = !{i64 2147651542, i64 2147651585, i64 2147651625}
!5969 = !DILocation(line: 278, column: 1, scope: !5433)
!5970 = !{i64 2147651786, i64 2147651829, i64 2147651869}
!5971 = !DILocation(line: 279, column: 1, scope: !5433)
!5972 = !{i64 2147651997, i64 2147652040, i64 2147652080}
!5973 = !DILocation(line: 280, column: 1, scope: !5433)
!5974 = !{i64 2147652226, i64 2147652269, i64 2147652309}
!5975 = !DILocation(line: 281, column: 1, scope: !5433)
!5976 = !{i64 2147652491, i64 2147652534, i64 2147652574}
!5977 = !DILocation(line: 282, column: 1, scope: !5433)
!5978 = !{i64 2147652696, i64 2147652739, i64 2147652779}
!5979 = !DILocation(line: 283, column: 1, scope: !5433)
!5980 = !{i64 2147652892, i64 2147652935, i64 2147652975}
!5981 = !DILocation(line: 284, column: 1, scope: !5433)
!5982 = !{i64 2147653115, i64 2147653158, i64 2147653198}
!5983 = !DILocation(line: 285, column: 1, scope: !5433)
!5984 = !{i64 2147653278, i64 2147653321, i64 2147653361}
!5985 = !DILocation(line: 286, column: 1, scope: !5433)
!5986 = !{i64 2147653483, i64 2147653526, i64 2147653566}
!5987 = !DILocation(line: 287, column: 1, scope: !5433)
!5988 = !{i64 2147653703, i64 2147653746, i64 2147653786}
!5989 = !DILocation(line: 288, column: 1, scope: !5433)
!5990 = !{i64 2147653917, i64 2147653960, i64 2147654000}
!5991 = !DILocation(line: 289, column: 1, scope: !5433)
!5992 = !{i64 2147654161, i64 2147654204, i64 2147654244}
!5993 = !DILocation(line: 290, column: 1, scope: !5433)
!5994 = !{i64 2147654393, i64 2147654436, i64 2147654476}
!5995 = !DILocation(line: 291, column: 1, scope: !5433)
!5996 = !{i64 2147654607, i64 2147654650, i64 2147654690}
!5997 = !DILocation(line: 292, column: 1, scope: !5433)
!5998 = !{i64 2147654818, i64 2147654861, i64 2147654901}
!5999 = !DILocation(line: 293, column: 1, scope: !5433)
!6000 = !{i64 2147655011, i64 2147655054, i64 2147655094}
!6001 = !DILocation(line: 294, column: 1, scope: !5433)
!6002 = !{i64 2147655210, i64 2147655253, i64 2147655293}
!6003 = !DILocation(line: 295, column: 1, scope: !5433)
!6004 = !{i64 2147655382, i64 2147655425, i64 2147655465}
!6005 = !DILocation(line: 296, column: 1, scope: !5433)
!6006 = !{i64 2147659636, i64 2147659679, i64 2147659719}
!6007 = !DILocation(line: 297, column: 1, scope: !5433)
!6008 = !{i64 2147659808, i64 2147659851, i64 2147659891}
!6009 = !DILocation(line: 298, column: 1, scope: !5433)
!6010 = !{i64 2147659998, i64 2147660041, i64 2147660081}
!6011 = !DILocation(line: 299, column: 1, scope: !5433)
!6012 = !{i64 2147660191, i64 2147660234, i64 2147660274}
!6013 = !DILocation(line: 300, column: 1, scope: !5433)
!6014 = !{i64 2147660387, i64 2147660430, i64 2147660470}
!6015 = !DILocation(line: 301, column: 1, scope: !5433)
!6016 = !{i64 2147660550, i64 2147660593, i64 2147660633}
!6017 = !DILocation(line: 302, column: 1, scope: !5433)
!6018 = !{i64 2147660752, i64 2147660795, i64 2147660835}
!6019 = !DILocation(line: 303, column: 1, scope: !5433)
!6020 = !{i64 2147660963, i64 2147661006, i64 2147661046}
!6021 = !DILocation(line: 304, column: 1, scope: !5433)
!6022 = !{i64 2147661168, i64 2147661211, i64 2147661251}
!6023 = !DILocation(line: 305, column: 1, scope: !5433)
!6024 = !{i64 2147661376, i64 2147661419, i64 2147661459}
!6025 = !DILocation(line: 306, column: 1, scope: !5433)
!6026 = !{i64 2147661569, i64 2147661612, i64 2147661652}
!6027 = !DILocation(line: 307, column: 1, scope: !5433)
!6028 = !{i64 2147661756, i64 2147661799, i64 2147661839}
!6029 = !DILocation(line: 308, column: 1, scope: !5433)
!6030 = !{i64 2147661922, i64 2147661965, i64 2147662005}
!6031 = !DILocation(line: 309, column: 1, scope: !5433)
!6032 = !{i64 2147662149, i64 2147662192, i64 2147662232}
!6033 = !DILocation(line: 310, column: 1, scope: !5433)
!6034 = !{i64 2147662366, i64 2147662409, i64 2147662449}
!6035 = !DILocation(line: 311, column: 1, scope: !5433)
!6036 = !{i64 2147662592, i64 2147662635, i64 2147662675}
!6037 = !DILocation(line: 312, column: 1, scope: !5433)
!6038 = !{i64 2147662797, i64 2147662840, i64 2147662880}
!6039 = !DILocation(line: 313, column: 1, scope: !5433)
!6040 = !{i64 2147663014, i64 2147663057, i64 2147663097}
!6041 = !DILocation(line: 314, column: 1, scope: !5433)
!6042 = !{i64 2147663306, i64 2147663349, i64 2147663389}
!6043 = !DILocation(line: 315, column: 1, scope: !5433)
!6044 = !{i64 2147663538, i64 2147663581, i64 2147663621}
!6045 = !DILocation(line: 316, column: 1, scope: !5433)
!6046 = !{i64 2147663755, i64 2147663798, i64 2147663838}
!6047 = !DILocation(line: 317, column: 1, scope: !5433)
!6048 = !{i64 2147663962, i64 2147664005, i64 2147664045}
!6049 = !DILocation(line: 318, column: 1, scope: !5433)
!6050 = !{i64 2147664163, i64 2147664206, i64 2147664246}
!6051 = !DILocation(line: 319, column: 1, scope: !5433)
!6052 = !{i64 2147664395, i64 2147664438, i64 2147664478}
!6053 = !DILocation(line: 320, column: 1, scope: !5433)
!6054 = !{i64 2147664603, i64 2147664646, i64 2147664686}
!6055 = !DILocation(line: 321, column: 1, scope: !5433)
!6056 = !{i64 2147664793, i64 2147664836, i64 2147664876}
!6057 = !DILocation(line: 322, column: 1, scope: !5433)
!6058 = !{i64 2147665019, i64 2147665062, i64 2147665102}
!6059 = !DILocation(line: 323, column: 1, scope: !5433)
!6060 = !{i64 2147665208, i64 2147665251, i64 2147665291}
!6061 = !DILocation(line: 324, column: 1, scope: !5433)
!6062 = !{i64 2147665479, i64 2147665522, i64 2147665562}
!6063 = !DILocation(line: 325, column: 1, scope: !5433)
!6064 = !{i64 2147665699, i64 2147665742, i64 2147665782}
!6065 = !DILocation(line: 326, column: 1, scope: !5433)
!6066 = !{i64 2147665952, i64 2147665995, i64 2147666035}
!6067 = !DILocation(line: 327, column: 1, scope: !5433)
!6068 = !{i64 2147666160, i64 2147666203, i64 2147666243}
!6069 = !DILocation(line: 328, column: 1, scope: !5433)
!6070 = !{i64 2147666392, i64 2147666435, i64 2147666475}
!6071 = !DILocation(line: 329, column: 1, scope: !5433)
!6072 = !{i64 2147666603, i64 2147666646, i64 2147666686}
!6073 = !DILocation(line: 330, column: 1, scope: !5433)
!6074 = !{i64 2147666793, i64 2147666836, i64 2147666876}
!6075 = !DILocation(line: 331, column: 1, scope: !5433)
!6076 = !{i64 2147667007, i64 2147667050, i64 2147667090}
!6077 = !DILocation(line: 332, column: 1, scope: !5433)
!6078 = !{i64 2147667206, i64 2147667249, i64 2147667289}
!6079 = !DILocation(line: 333, column: 1, scope: !5433)
!6080 = !{i64 2147667393, i64 2147667436, i64 2147667476}
!6081 = !DILocation(line: 334, column: 1, scope: !5433)
!6082 = !{i64 2147667601, i64 2147667644, i64 2147667684}
!6083 = !DILocation(line: 335, column: 1, scope: !5433)
!6084 = !{i64 2147667830, i64 2147667873, i64 2147667913}
!6085 = !DILocation(line: 336, column: 1, scope: !5433)
!6086 = !{i64 2147668032, i64 2147668075, i64 2147668115}
!6087 = !DILocation(line: 337, column: 1, scope: !5433)
!6088 = !{i64 2147668231, i64 2147668274, i64 2147668314}
!6089 = !DILocation(line: 338, column: 1, scope: !5433)
!6090 = !{i64 2147668448, i64 2147668491, i64 2147668531}
!6091 = !DILocation(line: 340, column: 1, scope: !5433)
!6092 = distinct !DISubprogram(name: "st_stm32f4_init", scope: !324, file: !324, line: 30, type: !331, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6093)
!6093 = !{!6094, !6095}
!6094 = !DILocalVariable(name: "arg", arg: 1, scope: !6092, file: !324, line: 30, type: !333)
!6095 = !DILocalVariable(name: "key", scope: !6092, file: !324, line: 32, type: !110)
!6096 = !DILocation(line: 0, scope: !6092)
!6097 = !DILocation(line: 37, column: 2, scope: !6092)
!6098 = !DILocation(line: 38, column: 2, scope: !6092)
!6099 = !DILocation(line: 55, column: 2, scope: !6100, inlinedAt: !6107)
!6100 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6104)
!6101 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/asm_inline_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6102 = !DISubroutineType(types: !6103)
!6103 = !{!32}
!6104 = !{!6105, !6106}
!6105 = !DILocalVariable(name: "key", scope: !6100, file: !6101, line: 44, type: !32)
!6106 = !DILocalVariable(name: "tmp", scope: !6100, file: !6101, line: 53, type: !32)
!6107 = distinct !DILocation(line: 40, column: 8, scope: !6092)
!6108 = !{i64 2135214}
!6109 = !DILocation(line: 0, scope: !6100, inlinedAt: !6107)
!6110 = !DILocalVariable(name: "key", arg: 1, scope: !6111, file: !6101, line: 84, type: !32)
!6111 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !6114)
!6112 = !DISubroutineType(types: !6113)
!6113 = !{null, !32}
!6114 = !{!6110}
!6115 = !DILocation(line: 0, scope: !6111, inlinedAt: !6116)
!6116 = distinct !DILocation(line: 47, column: 2, scope: !6092)
!6117 = !DILocation(line: 95, column: 2, scope: !6111, inlinedAt: !6116)
!6118 = !{i64 2136031}
!6119 = !DILocation(line: 51, column: 18, scope: !6092)
!6120 = !DILocation(line: 53, column: 2, scope: !6092)
!6121 = distinct !DISubprogram(name: "LL_FLASH_EnableInstCache", scope: !6122, file: !6122, line: 1609, type: !3089, scopeLine: 1610, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2026)
!6122 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_system.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6123 = !DILocation(line: 1611, column: 3, scope: !6121)
!6124 = !DILocation(line: 1612, column: 1, scope: !6121)
!6125 = distinct !DISubprogram(name: "LL_FLASH_EnableDataCache", scope: !6122, file: !6122, line: 1629, type: !3089, scopeLine: 1630, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !307, retainedNodes: !2026)
!6126 = !DILocation(line: 1631, column: 3, scope: !6125)
!6127 = !DILocation(line: 1632, column: 1, scope: !6125)
!6128 = distinct !DISubprogram(name: "st_stm32_common_config", scope: !361, file: !361, line: 26, type: !367, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !6129)
!6129 = !{!6130}
!6130 = !DILocalVariable(name: "dev", arg: 1, scope: !6128, file: !361, line: 26, type: !369)
!6131 = !DILocation(line: 0, scope: !6128)
!6132 = !DILocation(line: 68, column: 2, scope: !6128)
!6133 = distinct !DISubprogram(name: "z_log_minimal_printk", scope: !6134, file: !6134, line: 14, type: !4387, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6135)
!6134 = !DIFile(filename: "zephyr/subsys/logging/log_minimal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6135 = !{!6136, !6137}
!6136 = !DILocalVariable(name: "fmt", arg: 1, scope: !6133, file: !6134, line: 14, type: !279)
!6137 = !DILocalVariable(name: "ap", scope: !6133, file: !6134, line: 16, type: !6138)
!6138 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3393, line: 99, baseType: !6139)
!6139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3393, line: 40, baseType: !6140)
!6140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !6134, baseType: !6141)
!6141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !6142)
!6142 = !{!6143}
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !6141, file: !6134, line: 16, baseType: !107, size: 32)
!6144 = !DILocation(line: 0, scope: !6133)
!6145 = !DILocation(line: 16, column: 2, scope: !6133)
!6146 = !DILocation(line: 16, column: 10, scope: !6133)
!6147 = !DILocation(line: 18, column: 2, scope: !6133)
!6148 = !DILocation(line: 19, column: 2, scope: !6133)
!6149 = !DILocation(line: 20, column: 2, scope: !6133)
!6150 = !DILocation(line: 21, column: 1, scope: !6133)
!6151 = distinct !DISubprogram(name: "z_log_minimal_vprintk", scope: !6134, file: !6134, line: 23, type: !6152, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6154)
!6152 = !DISubroutineType(types: !6153)
!6153 = !{null, !279, !6138}
!6154 = !{!6155, !6156}
!6155 = !DILocalVariable(name: "fmt", arg: 1, scope: !6151, file: !6134, line: 23, type: !279)
!6156 = !DILocalVariable(name: "ap", arg: 2, scope: !6151, file: !6134, line: 23, type: !6138)
!6157 = !DILocation(line: 0, scope: !6151)
!6158 = !DILocation(line: 25, column: 2, scope: !6151)
!6159 = !DILocation(line: 26, column: 1, scope: !6151)
!6160 = distinct !DISubprogram(name: "z_log_minimal_hexdump_print", scope: !6134, file: !6134, line: 52, type: !6161, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6163)
!6161 = !DISubroutineType(types: !6162)
!6162 = !{null, !109, !13, !232}
!6163 = !{!6164, !6165, !6166, !6167}
!6164 = !DILocalVariable(name: "level", arg: 1, scope: !6160, file: !6134, line: 52, type: !109)
!6165 = !DILocalVariable(name: "data", arg: 2, scope: !6160, file: !6134, line: 52, type: !13)
!6166 = !DILocalVariable(name: "size", arg: 3, scope: !6160, file: !6134, line: 52, type: !232)
!6167 = !DILocalVariable(name: "data_buffer", scope: !6160, file: !6134, line: 54, type: !279)
!6168 = !DILocation(line: 0, scope: !6160)
!6169 = !DILocation(line: 55, column: 14, scope: !6160)
!6170 = !DILocation(line: 55, column: 2, scope: !6160)
!6171 = !DILocation(line: 56, column: 3, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6160, file: !6134, line: 55, column: 20)
!6173 = !DILocation(line: 57, column: 3, scope: !6172)
!6174 = !DILocation(line: 59, column: 7, scope: !6172)
!6175 = distinct !{!6175, !6170, !6176}
!6176 = !DILocation(line: 65, column: 2, scope: !6160)
!6177 = !DILocation(line: 66, column: 1, scope: !6160)
!6178 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6179, file: !6179, line: 175, type: !6180, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6182)
!6179 = !DIFile(filename: "zephyr/include/zephyr/logging/log_core.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6180 = !DISubroutineType(types: !6181)
!6181 = !{!148, !109}
!6182 = !{!6183}
!6183 = !DILocalVariable(name: "level", arg: 1, scope: !6178, file: !6179, line: 175, type: !109)
!6184 = !DILocation(line: 0, scope: !6178)
!6185 = !DILocation(line: 177, column: 2, scope: !6178)
!6186 = !DILocation(line: 189, column: 1, scope: !6178)
!6187 = distinct !DISubprogram(name: "minimal_hexdump_line_print", scope: !6134, file: !6134, line: 28, type: !6188, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6190)
!6188 = !DISubroutineType(types: !6189)
!6189 = !{null, !279, !232}
!6190 = !{!6191, !6192, !6193, !6195, !6197}
!6191 = !DILocalVariable(name: "data", arg: 1, scope: !6187, file: !6134, line: 28, type: !279)
!6192 = !DILocalVariable(name: "length", arg: 2, scope: !6187, file: !6134, line: 28, type: !232)
!6193 = !DILocalVariable(name: "i", scope: !6194, file: !6134, line: 30, type: !232)
!6194 = distinct !DILexicalBlock(scope: !6187, file: !6134, line: 30, column: 2)
!6195 = !DILocalVariable(name: "i", scope: !6196, file: !6134, line: 40, type: !232)
!6196 = distinct !DILexicalBlock(scope: !6187, file: !6134, line: 40, column: 2)
!6197 = !DILocalVariable(name: "c", scope: !6198, file: !6134, line: 42, type: !179)
!6198 = distinct !DILexicalBlock(scope: !6199, file: !6134, line: 41, column: 19)
!6199 = distinct !DILexicalBlock(scope: !6200, file: !6134, line: 41, column: 7)
!6200 = distinct !DILexicalBlock(scope: !6201, file: !6134, line: 40, column: 54)
!6201 = distinct !DILexicalBlock(scope: !6196, file: !6134, line: 40, column: 2)
!6202 = !DILocation(line: 0, scope: !6187)
!6203 = !DILocation(line: 0, scope: !6194)
!6204 = !DILocation(line: 30, column: 2, scope: !6194)
!6205 = !DILocation(line: 38, column: 2, scope: !6187)
!6206 = !DILocation(line: 0, scope: !6196)
!6207 = !DILocation(line: 40, column: 2, scope: !6196)
!6208 = !DILocation(line: 31, column: 9, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !6134, line: 31, column: 7)
!6210 = distinct !DILexicalBlock(scope: !6211, file: !6134, line: 30, column: 54)
!6211 = distinct !DILexicalBlock(scope: !6194, file: !6134, line: 30, column: 2)
!6212 = !DILocation(line: 31, column: 7, scope: !6210)
!6213 = !DILocation(line: 32, column: 35, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6209, file: !6134, line: 31, column: 19)
!6215 = !DILocation(line: 32, column: 20, scope: !6214)
!6216 = !DILocation(line: 32, column: 4, scope: !6214)
!6217 = !DILocation(line: 33, column: 3, scope: !6214)
!6218 = !DILocation(line: 34, column: 4, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6209, file: !6134, line: 33, column: 10)
!6220 = !DILocation(line: 30, column: 50, scope: !6211)
!6221 = !DILocation(line: 30, column: 24, scope: !6211)
!6222 = distinct !{!6222, !6204, !6223}
!6223 = !DILocation(line: 36, column: 2, scope: !6194)
!6224 = !DILocation(line: 49, column: 2, scope: !6187)
!6225 = !DILocation(line: 50, column: 1, scope: !6187)
!6226 = !DILocation(line: 41, column: 9, scope: !6199)
!6227 = !DILocation(line: 41, column: 7, scope: !6200)
!6228 = !DILocation(line: 42, column: 22, scope: !6198)
!6229 = !DILocation(line: 0, scope: !6198)
!6230 = !DILocation(line: 44, column: 25, scope: !6198)
!6231 = !DILocation(line: 44, column: 17, scope: !6198)
!6232 = !DILocation(line: 44, column: 33, scope: !6198)
!6233 = !DILocation(line: 44, column: 4, scope: !6198)
!6234 = !DILocation(line: 45, column: 3, scope: !6198)
!6235 = !DILocation(line: 46, column: 4, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6199, file: !6134, line: 45, column: 10)
!6237 = !DILocation(line: 40, column: 50, scope: !6201)
!6238 = !DILocation(line: 40, column: 24, scope: !6201)
!6239 = distinct !{!6239, !6207, !6240}
!6240 = !DILocation(line: 48, column: 2, scope: !6196)
!6241 = distinct !DISubprogram(name: "isprint", scope: !5177, file: !5177, line: 37, type: !303, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2549, retainedNodes: !6242)
!6242 = !{!6243}
!6243 = !DILocalVariable(name: "c", arg: 1, scope: !6241, file: !5177, line: 37, type: !109)
!6244 = !DILocation(line: 0, scope: !6241)
!6245 = !DILocation(line: 39, column: 38, scope: !6241)
!6246 = !DILocation(line: 39, column: 2, scope: !6241)
!6247 = distinct !DISubprogram(name: "z_arm_fatal_error", scope: !6248, file: !6248, line: 57, type: !6249, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6295)
!6248 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6249 = !DISubroutineType(types: !6250)
!6250 = !{null, !32, !6251}
!6251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6252, size: 32)
!6252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6253)
!6253 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2672, line: 141, baseType: !6254)
!6254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2672, line: 97, size: 256, elements: !6255)
!6255 = !{!6256}
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !6254, file: !2672, line: 107, baseType: !6257, size: 256)
!6257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2672, line: 98, size: 256, elements: !6258)
!6258 = !{!6259, !6264, !6269, !6274, !6279, !6284, !6289, !6294}
!6259 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !2672, line: 99, baseType: !6260, size: 32)
!6260 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !2672, line: 99, size: 32, elements: !6261)
!6261 = !{!6262, !6263}
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !6260, file: !2672, line: 99, baseType: !110, size: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !6260, file: !2672, line: 99, baseType: !110, size: 32)
!6264 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !2672, line: 100, baseType: !6265, size: 32, offset: 32)
!6265 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !2672, line: 100, size: 32, elements: !6266)
!6266 = !{!6267, !6268}
!6267 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !6265, file: !2672, line: 100, baseType: !110, size: 32)
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !6265, file: !2672, line: 100, baseType: !110, size: 32)
!6269 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !2672, line: 101, baseType: !6270, size: 32, offset: 64)
!6270 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !2672, line: 101, size: 32, elements: !6271)
!6271 = !{!6272, !6273}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !6270, file: !2672, line: 101, baseType: !110, size: 32)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !6270, file: !2672, line: 101, baseType: !110, size: 32)
!6274 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !2672, line: 102, baseType: !6275, size: 32, offset: 96)
!6275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !2672, line: 102, size: 32, elements: !6276)
!6276 = !{!6277, !6278}
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !6275, file: !2672, line: 102, baseType: !110, size: 32)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !6275, file: !2672, line: 102, baseType: !110, size: 32)
!6279 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !2672, line: 103, baseType: !6280, size: 32, offset: 128)
!6280 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !2672, line: 103, size: 32, elements: !6281)
!6281 = !{!6282, !6283}
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !6280, file: !2672, line: 103, baseType: !110, size: 32)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !6280, file: !2672, line: 103, baseType: !110, size: 32)
!6284 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !2672, line: 104, baseType: !6285, size: 32, offset: 160)
!6285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !2672, line: 104, size: 32, elements: !6286)
!6286 = !{!6287, !6288}
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !6285, file: !2672, line: 104, baseType: !110, size: 32)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !6285, file: !2672, line: 104, baseType: !110, size: 32)
!6289 = !DIDerivedType(tag: DW_TAG_member, scope: !6257, file: !2672, line: 105, baseType: !6290, size: 32, offset: 192)
!6290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6257, file: !2672, line: 105, size: 32, elements: !6291)
!6291 = !{!6292, !6293}
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !6290, file: !2672, line: 105, baseType: !110, size: 32)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !6290, file: !2672, line: 105, baseType: !110, size: 32)
!6294 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !6257, file: !2672, line: 106, baseType: !110, size: 32, offset: 224)
!6295 = !{!6296, !6297}
!6296 = !DILocalVariable(name: "reason", arg: 1, scope: !6247, file: !6248, line: 57, type: !32)
!6297 = !DILocalVariable(name: "esf", arg: 2, scope: !6247, file: !6248, line: 57, type: !6251)
!6298 = !DILocation(line: 0, scope: !6247)
!6299 = !DILocation(line: 60, column: 10, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6247, file: !6248, line: 60, column: 6)
!6301 = !DILocation(line: 60, column: 6, scope: !6247)
!6302 = !DILocation(line: 61, column: 3, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6300, file: !6248, line: 60, column: 19)
!6304 = !DILocation(line: 62, column: 2, scope: !6303)
!6305 = !DILocation(line: 63, column: 2, scope: !6247)
!6306 = !DILocation(line: 64, column: 1, scope: !6247)
!6307 = distinct !DISubprogram(name: "esf_dump", scope: !6248, file: !6248, line: 20, type: !6308, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6310)
!6308 = !DISubroutineType(types: !6309)
!6309 = !{null, !6251}
!6310 = !{!6311}
!6311 = !DILocalVariable(name: "esf", arg: 1, scope: !6307, file: !6248, line: 20, type: !6251)
!6312 = !DILocation(line: 0, scope: !6307)
!6313 = !DILocation(line: 22, column: 2, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !6248, line: 22, column: 2)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !6248, line: 22, column: 2)
!6316 = distinct !DILexicalBlock(scope: !6317, file: !6248, line: 22, column: 2)
!6317 = distinct !DILexicalBlock(scope: !6307, file: !6248, line: 22, column: 2)
!6318 = !DILocation(line: 24, column: 2, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6320, file: !6248, line: 24, column: 2)
!6320 = distinct !DILexicalBlock(scope: !6321, file: !6248, line: 24, column: 2)
!6321 = distinct !DILexicalBlock(scope: !6322, file: !6248, line: 24, column: 2)
!6322 = distinct !DILexicalBlock(scope: !6307, file: !6248, line: 24, column: 2)
!6323 = !DILocation(line: 26, column: 2, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6325, file: !6248, line: 26, column: 2)
!6325 = distinct !DILexicalBlock(scope: !6326, file: !6248, line: 26, column: 2)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !6248, line: 26, column: 2)
!6327 = distinct !DILexicalBlock(scope: !6307, file: !6248, line: 26, column: 2)
!6328 = !DILocation(line: 53, column: 2, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6330, file: !6248, line: 53, column: 2)
!6330 = distinct !DILexicalBlock(scope: !6331, file: !6248, line: 53, column: 2)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !6248, line: 53, column: 2)
!6332 = distinct !DILexicalBlock(scope: !6307, file: !6248, line: 53, column: 2)
!6333 = !DILocation(line: 55, column: 1, scope: !6307)
!6334 = distinct !DISubprogram(name: "z_do_kernel_oops", scope: !6248, file: !6248, line: 82, type: !6335, scopeLine: 83, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6350)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{null, !6251, !6337}
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6338, size: 32)
!6338 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6339)
!6339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6340)
!6340 = !{!6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349}
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6339, file: !209, line: 26, baseType: !110, size: 32)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6339, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6339, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6339, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6339, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6339, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6339, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6339, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6339, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6350 = !{!6351, !6352, !6353}
!6351 = !DILocalVariable(name: "esf", arg: 1, scope: !6334, file: !6248, line: 82, type: !6251)
!6352 = !DILocalVariable(name: "callee_regs", arg: 2, scope: !6334, file: !6248, line: 82, type: !6337)
!6353 = !DILocalVariable(name: "reason", scope: !6334, file: !6248, line: 88, type: !32)
!6354 = !DILocation(line: 0, scope: !6334)
!6355 = !DILocation(line: 88, column: 35, scope: !6334)
!6356 = !DILocation(line: 108, column: 2, scope: !6334)
!6357 = !DILocation(line: 131, column: 1, scope: !6334)
!6358 = distinct !DISubprogram(name: "arch_syscall_oops", scope: !6248, file: !6248, line: 133, type: !6359, scopeLine: 134, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2552, retainedNodes: !6361)
!6359 = !DISubroutineType(types: !6360)
!6360 = !{null, !107}
!6361 = !{!6362, !6363, !6364}
!6362 = !DILocalVariable(name: "ssf_ptr", arg: 1, scope: !6358, file: !6248, line: 133, type: !107)
!6363 = !DILocalVariable(name: "ssf_contents", scope: !6358, file: !6248, line: 135, type: !884)
!6364 = !DILocalVariable(name: "oops_esf", scope: !6358, file: !6248, line: 136, type: !6253)
!6365 = !DILocation(line: 0, scope: !6358)
!6366 = !DILocation(line: 136, column: 2, scope: !6358)
!6367 = !DILocation(line: 136, column: 15, scope: !6358)
!6368 = !DILocation(line: 139, column: 22, scope: !6358)
!6369 = !DILocation(line: 139, column: 17, scope: !6358)
!6370 = !DILocation(line: 139, column: 20, scope: !6358)
!6371 = !DILocation(line: 141, column: 2, scope: !6358)
!6372 = !DILocation(line: 142, column: 2, scope: !6358)
!6373 = distinct !DISubprogram(name: "arch_irq_enable", scope: !6374, file: !6374, line: 40, type: !6112, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6375)
!6374 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/irq_manage.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6375 = !{!6376}
!6376 = !DILocalVariable(name: "irq", arg: 1, scope: !6373, file: !6374, line: 40, type: !32)
!6377 = !DILocation(line: 0, scope: !6373)
!6378 = !DILocation(line: 42, column: 2, scope: !6373)
!6379 = !DILocation(line: 43, column: 1, scope: !6373)
!6380 = distinct !DISubprogram(name: "__NVIC_EnableIRQ", scope: !535, file: !535, line: 1684, type: !6381, scopeLine: 1685, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6383)
!6381 = !DISubroutineType(types: !6382)
!6382 = !{null, !791}
!6383 = !{!6384}
!6384 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6380, file: !535, line: 1684, type: !791)
!6385 = !DILocation(line: 0, scope: !6380)
!6386 = !DILocation(line: 1686, column: 23, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6380, file: !535, line: 1686, column: 7)
!6388 = !DILocation(line: 1686, column: 7, scope: !6380)
!6389 = !DILocation(line: 1688, column: 5, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6387, file: !535, line: 1687, column: 3)
!6391 = !{i64 2151027440}
!6392 = !DILocation(line: 1689, column: 81, scope: !6390)
!6393 = !DILocation(line: 1689, column: 60, scope: !6390)
!6394 = !DILocation(line: 1689, column: 34, scope: !6390)
!6395 = !DILocation(line: 1689, column: 5, scope: !6390)
!6396 = !DILocation(line: 1689, column: 43, scope: !6390)
!6397 = !DILocation(line: 1690, column: 5, scope: !6390)
!6398 = !{i64 2151027554}
!6399 = !DILocation(line: 1691, column: 3, scope: !6390)
!6400 = !DILocation(line: 1692, column: 1, scope: !6380)
!6401 = distinct !DISubprogram(name: "arch_irq_disable", scope: !6374, file: !6374, line: 45, type: !6112, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6402)
!6402 = !{!6403}
!6403 = !DILocalVariable(name: "irq", arg: 1, scope: !6401, file: !6374, line: 45, type: !32)
!6404 = !DILocation(line: 0, scope: !6401)
!6405 = !DILocation(line: 47, column: 2, scope: !6401)
!6406 = !DILocation(line: 48, column: 1, scope: !6401)
!6407 = distinct !DISubprogram(name: "__NVIC_DisableIRQ", scope: !535, file: !535, line: 1722, type: !6381, scopeLine: 1723, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6408)
!6408 = !{!6409}
!6409 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6407, file: !535, line: 1722, type: !791)
!6410 = !DILocation(line: 0, scope: !6407)
!6411 = !DILocation(line: 1724, column: 23, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6407, file: !535, line: 1724, column: 7)
!6413 = !DILocation(line: 1724, column: 7, scope: !6407)
!6414 = !DILocation(line: 1726, column: 81, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6412, file: !535, line: 1725, column: 3)
!6416 = !DILocation(line: 1726, column: 60, scope: !6415)
!6417 = !DILocation(line: 1726, column: 34, scope: !6415)
!6418 = !DILocation(line: 1726, column: 5, scope: !6415)
!6419 = !DILocation(line: 1726, column: 43, scope: !6415)
!6420 = !DILocation(line: 271, column: 3, scope: !6421, inlinedAt: !6423)
!6421 = distinct !DISubprogram(name: "__DSB", scope: !6422, file: !6422, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !2026)
!6422 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6423 = distinct !DILocation(line: 1727, column: 5, scope: !6415)
!6424 = !{i64 3481823}
!6425 = !DILocation(line: 260, column: 3, scope: !6426, inlinedAt: !6427)
!6426 = distinct !DISubprogram(name: "__ISB", scope: !6422, file: !6422, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !2026)
!6427 = distinct !DILocation(line: 1728, column: 5, scope: !6415)
!6428 = !{i64 3481540}
!6429 = !DILocation(line: 1729, column: 3, scope: !6415)
!6430 = !DILocation(line: 1730, column: 1, scope: !6407)
!6431 = distinct !DISubprogram(name: "arch_irq_is_enabled", scope: !6374, file: !6374, line: 50, type: !6432, scopeLine: 51, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6434)
!6432 = !DISubroutineType(types: !6433)
!6433 = !{!109, !32}
!6434 = !{!6435}
!6435 = !DILocalVariable(name: "irq", arg: 1, scope: !6431, file: !6374, line: 50, type: !32)
!6436 = !DILocation(line: 0, scope: !6431)
!6437 = !DILocation(line: 52, column: 20, scope: !6431)
!6438 = !DILocation(line: 52, column: 9, scope: !6431)
!6439 = !DILocation(line: 52, column: 41, scope: !6431)
!6440 = !DILocation(line: 52, column: 39, scope: !6431)
!6441 = !DILocation(line: 52, column: 2, scope: !6431)
!6442 = distinct !DISubprogram(name: "z_arm_irq_priority_set", scope: !6374, file: !6374, line: 64, type: !6443, scopeLine: 65, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6445)
!6443 = !DISubroutineType(types: !6444)
!6444 = !{null, !32, !32, !110}
!6445 = !{!6446, !6447, !6448}
!6446 = !DILocalVariable(name: "irq", arg: 1, scope: !6442, file: !6374, line: 64, type: !32)
!6447 = !DILocalVariable(name: "prio", arg: 2, scope: !6442, file: !6374, line: 64, type: !32)
!6448 = !DILocalVariable(name: "flags", arg: 3, scope: !6442, file: !6374, line: 64, type: !110)
!6449 = !DILocation(line: 0, scope: !6442)
!6450 = !DILocation(line: 83, column: 8, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6452, file: !6374, line: 82, column: 9)
!6452 = distinct !DILexicalBlock(scope: !6442, file: !6374, line: 76, column: 6)
!6453 = !DILocation(line: 91, column: 2, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !6374, line: 91, column: 2)
!6455 = distinct !DILexicalBlock(scope: !6442, file: !6374, line: 91, column: 2)
!6456 = !DILocation(line: 91, column: 2, scope: !6455)
!6457 = !DILocation(line: 91, column: 2, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6454, file: !6374, line: 91, column: 2)
!6459 = !DILocation(line: 95, column: 2, scope: !6442)
!6460 = !DILocation(line: 96, column: 1, scope: !6442)
!6461 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6462, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6464)
!6462 = !DISubroutineType(types: !6463)
!6463 = !{null, !791, !110}
!6464 = !{!6465, !6466}
!6465 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6461, file: !535, line: 1814, type: !791)
!6466 = !DILocalVariable(name: "priority", arg: 2, scope: !6461, file: !535, line: 1814, type: !110)
!6467 = !DILocation(line: 0, scope: !6461)
!6468 = !DILocation(line: 0, scope: !6469)
!6469 = distinct !DILexicalBlock(scope: !6461, file: !535, line: 1816, column: 7)
!6470 = !DILocation(line: 1816, column: 7, scope: !6461)
!6471 = !DILocation(line: 1824, column: 1, scope: !6461)
!6472 = distinct !DISubprogram(name: "z_irq_spurious", scope: !6374, file: !6374, line: 155, type: !17, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2563, retainedNodes: !6473)
!6473 = !{!6474}
!6474 = !DILocalVariable(name: "unused", arg: 1, scope: !6472, file: !6374, line: 155, type: !13)
!6475 = !DILocation(line: 0, scope: !6472)
!6476 = !DILocation(line: 159, column: 2, scope: !6472)
!6477 = !DILocation(line: 160, column: 1, scope: !6472)
!6478 = distinct !DISubprogram(name: "z_arm_nmi", scope: !6479, file: !6479, line: 87, type: !3089, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2609, retainedNodes: !2026)
!6479 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/nmi.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6480 = !DILocation(line: 89, column: 2, scope: !6478)
!6481 = !DILocation(line: 90, column: 2, scope: !6478)
!6482 = !DILocation(line: 91, column: 1, scope: !6478)
!6483 = !DISubprogram(name: "z_SysNmiOnReset", scope: !6479, file: !6479, line: 23, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!6484 = !DISubprogram(name: "z_arm_int_exit", scope: !6485, file: !6485, line: 153, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!6485 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/irq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6486 = distinct !DISubprogram(name: "z_arm_prep_c", scope: !6487, file: !6487, line: 256, type: !3089, scopeLine: 257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !2026)
!6487 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/prep_c.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6488 = !DILocation(line: 258, column: 2, scope: !6486)
!6489 = !DILocation(line: 260, column: 2, scope: !6486)
!6490 = !DILocation(line: 262, column: 2, scope: !6486)
!6491 = !DILocation(line: 263, column: 2, scope: !6486)
!6492 = !DILocation(line: 267, column: 2, scope: !6486)
!6493 = !DILocation(line: 268, column: 2, scope: !6486)
!6494 = distinct !DISubprogram(name: "relocate_vector_table", scope: !6487, file: !6487, line: 53, type: !3089, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !2026)
!6495 = !DILocation(line: 55, column: 12, scope: !6494)
!6496 = !DILocation(line: 271, column: 3, scope: !6497, inlinedAt: !6498)
!6497 = distinct !DISubprogram(name: "__DSB", scope: !6422, file: !6422, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !2026)
!6498 = distinct !DILocation(line: 56, column: 2, scope: !6494)
!6499 = !{i64 3480494}
!6500 = !DILocation(line: 260, column: 3, scope: !6501, inlinedAt: !6502)
!6501 = distinct !DISubprogram(name: "__ISB", scope: !6422, file: !6422, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !2026)
!6502 = distinct !DILocation(line: 57, column: 2, scope: !6494)
!6503 = !{i64 3480211}
!6504 = !DILocation(line: 58, column: 1, scope: !6494)
!6505 = distinct !DISubprogram(name: "z_arm_floating_point_init", scope: !6487, file: !6487, line: 96, type: !3089, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !2026)
!6506 = !DILocation(line: 103, column: 13, scope: !6505)
!6507 = !DILocation(line: 975, column: 3, scope: !6508, inlinedAt: !6513)
!6508 = distinct !DISubprogram(name: "__get_CONTROL", scope: !6422, file: !6422, line: 971, type: !6509, scopeLine: 972, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6511)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{!110}
!6511 = !{!6512}
!6512 = !DILocalVariable(name: "result", scope: !6508, file: !6422, line: 973, type: !110)
!6513 = distinct !DILocation(line: 189, column: 16, scope: !6505)
!6514 = !{i64 3501324}
!6515 = !DILocation(line: 0, scope: !6508, inlinedAt: !6513)
!6516 = !DILocation(line: 189, column: 32, scope: !6505)
!6517 = !DILocalVariable(name: "control", arg: 1, scope: !6518, file: !6422, line: 1001, type: !110)
!6518 = distinct !DISubprogram(name: "__set_CONTROL", scope: !6422, file: !6422, line: 1001, type: !6519, scopeLine: 1002, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2611, retainedNodes: !6521)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{null, !110}
!6521 = !{!6517}
!6522 = !DILocation(line: 0, scope: !6518, inlinedAt: !6523)
!6523 = distinct !DILocation(line: 189, column: 2, scope: !6505)
!6524 = !DILocation(line: 1003, column: 3, scope: !6518, inlinedAt: !6523)
!6525 = !{i64 3502044}
!6526 = !DILocation(line: 260, column: 3, scope: !6501, inlinedAt: !6527)
!6527 = distinct !DILocation(line: 1004, column: 3, scope: !6518, inlinedAt: !6523)
!6528 = !DILocation(line: 191, column: 1, scope: !6505)
!6529 = distinct !DISubprogram(name: "arch_swap", scope: !6530, file: !6530, line: 33, type: !6432, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !6531)
!6530 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/swap.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6531 = !{!6532}
!6532 = !DILocalVariable(name: "key", arg: 1, scope: !6529, file: !6530, line: 33, type: !32)
!6533 = !DILocation(line: 0, scope: !6529)
!6534 = !DILocation(line: 36, column: 2, scope: !6529)
!6535 = !DILocation(line: 36, column: 17, scope: !6529)
!6536 = !DILocation(line: 36, column: 25, scope: !6529)
!6537 = !DILocation(line: 37, column: 37, scope: !6529)
!6538 = !DILocation(line: 37, column: 17, scope: !6529)
!6539 = !DILocation(line: 37, column: 35, scope: !6529)
!6540 = !DILocation(line: 41, column: 12, scope: !6529)
!6541 = !DILocalVariable(name: "key", arg: 1, scope: !6542, file: !6101, line: 84, type: !32)
!6542 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2639, retainedNodes: !6543)
!6543 = !{!6541}
!6544 = !DILocation(line: 0, scope: !6542, inlinedAt: !6545)
!6545 = distinct !DILocation(line: 44, column: 2, scope: !6529)
!6546 = !DILocation(line: 95, column: 2, scope: !6542, inlinedAt: !6545)
!6547 = !{i64 2242558}
!6548 = !DILocation(line: 53, column: 9, scope: !6529)
!6549 = !DILocation(line: 53, column: 24, scope: !6529)
!6550 = !DILocation(line: 53, column: 2, scope: !6529)
!6551 = distinct !DISubprogram(name: "arch_new_thread", scope: !6552, file: !6552, line: 56, type: !6553, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !6663)
!6552 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/thread.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6553 = !DISubroutineType(types: !6554)
!6554 = !{null, !6555, !6658, !285, !3357, !107, !107, !107}
!6555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6556, size: 32)
!6556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !6557)
!6557 = !{!6558, !6616, !6628, !6629, !6630, !6631, !6632, !6638, !6653}
!6558 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !6556, file: !156, line: 247, baseType: !6559, size: 384)
!6559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !6560)
!6560 = !{!6561, !6585, !6592, !6593, !6594, !6603, !6604, !6605}
!6561 = !DIDerivedType(tag: DW_TAG_member, scope: !6559, file: !156, line: 60, baseType: !6562, size: 64)
!6562 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6559, file: !156, line: 60, size: 64, elements: !6563)
!6563 = !{!6564, !6579}
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !6562, file: !156, line: 61, baseType: !6565, size: 64)
!6565 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !6566)
!6566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !6567)
!6567 = !{!6568, !6574}
!6568 = !DIDerivedType(tag: DW_TAG_member, scope: !6566, file: !127, line: 38, baseType: !6569, size: 32)
!6569 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6566, file: !127, line: 38, size: 32, elements: !6570)
!6570 = !{!6571, !6573}
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6569, file: !127, line: 39, baseType: !6572, size: 32)
!6572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6566, size: 32)
!6573 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6569, file: !127, line: 40, baseType: !6572, size: 32)
!6574 = !DIDerivedType(tag: DW_TAG_member, scope: !6566, file: !127, line: 42, baseType: !6575, size: 32, offset: 32)
!6575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6566, file: !127, line: 42, size: 32, elements: !6576)
!6576 = !{!6577, !6578}
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6575, file: !127, line: 43, baseType: !6572, size: 32)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6575, file: !127, line: 44, baseType: !6572, size: 32)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !6562, file: !156, line: 62, baseType: !6580, size: 64)
!6580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !6581)
!6581 = !{!6582}
!6582 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !6580, file: !168, line: 50, baseType: !6583, size: 64)
!6583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6584, size: 64, elements: !173)
!6584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6580, size: 32)
!6585 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !6559, file: !156, line: 68, baseType: !6586, size: 32, offset: 64)
!6586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6587, size: 32)
!6587 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !6588)
!6588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !6589)
!6589 = !{!6590}
!6590 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6588, file: !122, line: 232, baseType: !6591, size: 64)
!6591 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !6566)
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !6559, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!6593 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !6559, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!6594 = !DIDerivedType(tag: DW_TAG_member, scope: !6559, file: !156, line: 90, baseType: !6595, size: 16, offset: 112)
!6595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6559, file: !156, line: 90, size: 16, elements: !6596)
!6596 = !{!6597, !6602}
!6597 = !DIDerivedType(tag: DW_TAG_member, scope: !6595, file: !156, line: 91, baseType: !6598, size: 16)
!6598 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6595, file: !156, line: 91, size: 16, elements: !6599)
!6599 = !{!6600, !6601}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !6598, file: !156, line: 96, baseType: !188, size: 8)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !6598, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!6602 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !6595, file: !156, line: 100, baseType: !192, size: 16)
!6603 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !6559, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !6559, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6559, file: !156, line: 131, baseType: !6606, size: 192, offset: 192)
!6606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !6607)
!6607 = !{!6608, !6609, !6615}
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6606, file: !122, line: 245, baseType: !6565, size: 64)
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6606, file: !122, line: 246, baseType: !6610, size: 32, offset: 64)
!6610 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !6611)
!6611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6612, size: 32)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{null, !6614}
!6614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6606, size: 32)
!6615 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !6606, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !6556, file: !156, line: 250, baseType: !6617, size: 288, offset: 384)
!6617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6618)
!6618 = !{!6619, !6620, !6621, !6622, !6623, !6624, !6625, !6626, !6627}
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6617, file: !209, line: 26, baseType: !110, size: 32)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6617, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6617, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6622 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6617, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6623 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6617, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6617, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6617, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6617, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6617, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !6556, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !6556, file: !156, line: 256, baseType: !6587, size: 64, offset: 704)
!6630 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6556, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!6631 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !6556, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!6632 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !6556, file: !156, line: 300, baseType: !6633, size: 96, offset: 1056)
!6633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !6634)
!6634 = !{!6635, !6636, !6637}
!6635 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6633, file: !156, line: 153, baseType: !22, size: 32)
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6633, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !6633, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !6556, file: !156, line: 325, baseType: !6639, size: 32, offset: 1152)
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6640, size: 32)
!6640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !6641)
!6641 = !{!6642, !6648, !6649}
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6640, file: !118, line: 5074, baseType: !6643, size: 96)
!6643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !6644)
!6644 = !{!6645, !6646, !6647}
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !6643, file: !241, line: 57, baseType: !244, size: 32)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !6643, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !6643, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6640, file: !118, line: 5075, baseType: !6587, size: 64, offset: 96)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6640, file: !118, line: 5076, baseType: !6650, size: 32, offset: 160)
!6650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !6651)
!6651 = !{!6652}
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !6650, file: !251, line: 52, baseType: !22, size: 32)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !6556, file: !156, line: 343, baseType: !6654, size: 64, offset: 1184)
!6654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !6655)
!6655 = !{!6656, !6657}
!6656 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !6654, file: !209, line: 63, baseType: !110, size: 32)
!6657 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !6654, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!6658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6659, size: 32)
!6659 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3356, line: 44, baseType: !6660)
!6660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !6661)
!6661 = !{!6662}
!6662 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6660, file: !145, line: 48, baseType: !148, size: 8)
!6663 = !{!6664, !6665, !6666, !6667, !6668, !6669, !6670, !6671}
!6664 = !DILocalVariable(name: "thread", arg: 1, scope: !6551, file: !6552, line: 56, type: !6555)
!6665 = !DILocalVariable(name: "stack", arg: 2, scope: !6551, file: !6552, line: 56, type: !6658)
!6666 = !DILocalVariable(name: "stack_ptr", arg: 3, scope: !6551, file: !6552, line: 57, type: !285)
!6667 = !DILocalVariable(name: "entry", arg: 4, scope: !6551, file: !6552, line: 57, type: !3357)
!6668 = !DILocalVariable(name: "p1", arg: 5, scope: !6551, file: !6552, line: 58, type: !107)
!6669 = !DILocalVariable(name: "p2", arg: 6, scope: !6551, file: !6552, line: 58, type: !107)
!6670 = !DILocalVariable(name: "p3", arg: 7, scope: !6551, file: !6552, line: 58, type: !107)
!6671 = !DILocalVariable(name: "iframe", scope: !6551, file: !6552, line: 60, type: !2670)
!6672 = !DILocation(line: 0, scope: !6551)
!6673 = !DILocation(line: 85, column: 11, scope: !6551)
!6674 = !DILocation(line: 93, column: 10, scope: !6551)
!6675 = !DILocation(line: 98, column: 13, scope: !6551)
!6676 = !DILocation(line: 100, column: 15, scope: !6551)
!6677 = !DILocation(line: 100, column: 10, scope: !6551)
!6678 = !DILocation(line: 100, column: 13, scope: !6551)
!6679 = !DILocation(line: 101, column: 15, scope: !6551)
!6680 = !DILocation(line: 101, column: 10, scope: !6551)
!6681 = !DILocation(line: 101, column: 13, scope: !6551)
!6682 = !DILocation(line: 102, column: 15, scope: !6551)
!6683 = !DILocation(line: 102, column: 10, scope: !6551)
!6684 = !DILocation(line: 102, column: 13, scope: !6551)
!6685 = !DILocation(line: 103, column: 15, scope: !6551)
!6686 = !DILocation(line: 103, column: 10, scope: !6551)
!6687 = !DILocation(line: 103, column: 13, scope: !6551)
!6688 = !DILocation(line: 106, column: 10, scope: !6551)
!6689 = !DILocation(line: 106, column: 15, scope: !6551)
!6690 = !DILocation(line: 122, column: 29, scope: !6551)
!6691 = !DILocation(line: 122, column: 23, scope: !6551)
!6692 = !DILocation(line: 122, column: 27, scope: !6551)
!6693 = !DILocation(line: 123, column: 15, scope: !6551)
!6694 = !DILocation(line: 123, column: 23, scope: !6551)
!6695 = !DILocation(line: 143, column: 1, scope: !6551)
!6696 = distinct !DISubprogram(name: "z_check_thread_stack_fail", scope: !6552, file: !6552, line: 385, type: !6697, scopeLine: 386, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !6700)
!6697 = !DISubroutineType(types: !6698)
!6698 = !{!110, !6699, !6699}
!6699 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !110)
!6700 = !{!6701, !6702, !6703, !6706}
!6701 = !DILocalVariable(name: "fault_addr", arg: 1, scope: !6696, file: !6552, line: 385, type: !6699)
!6702 = !DILocalVariable(name: "psp", arg: 2, scope: !6696, file: !6552, line: 385, type: !6699)
!6703 = !DILocalVariable(name: "thread", scope: !6696, file: !6552, line: 388, type: !6704)
!6704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6705, size: 32)
!6705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6556)
!6706 = !DILocalVariable(name: "guard_len", scope: !6696, file: !6552, line: 405, type: !110)
!6707 = !DILocation(line: 0, scope: !6696)
!6708 = !DILocation(line: 388, column: 34, scope: !6696)
!6709 = !DILocation(line: 390, column: 13, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6696, file: !6552, line: 390, column: 6)
!6711 = !DILocation(line: 390, column: 6, scope: !6696)
!6712 = !DILocation(line: 438, column: 6, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6696, file: !6552, line: 438, column: 6)
!6714 = !DILocation(line: 438, column: 6, scope: !6696)
!6715 = !DILocation(line: 442, column: 3, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6713, file: !6552, line: 440, column: 22)
!6717 = !DILocation(line: 455, column: 1, scope: !6696)
!6718 = distinct !DISubprogram(name: "arch_switch_to_main_thread", scope: !6552, file: !6552, line: 530, type: !6719, scopeLine: 532, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2667, retainedNodes: !6721)
!6719 = !DISubroutineType(types: !6720)
!6720 = !{null, !6555, !285, !3357}
!6721 = !{!6722, !6723, !6724}
!6722 = !DILocalVariable(name: "main_thread", arg: 1, scope: !6718, file: !6552, line: 530, type: !6555)
!6723 = !DILocalVariable(name: "stack_ptr", arg: 2, scope: !6718, file: !6552, line: 530, type: !285)
!6724 = !DILocalVariable(name: "_main", arg: 3, scope: !6718, file: !6552, line: 531, type: !3357)
!6725 = !DILocation(line: 0, scope: !6718)
!6726 = !DILocation(line: 535, column: 11, scope: !6718)
!6727 = !DILocation(line: 560, column: 2, scope: !6718)
!6728 = !DILocation(line: 576, column: 2, scope: !6718)
!6729 = !{i64 18049, i64 18065, i64 18143, i64 18197, i64 18440, i64 18509, i64 18626, i64 18645, i64 18664, i64 18689}
!6730 = !DILocation(line: 603, column: 2, scope: !6718)
!6731 = distinct !DISubprogram(name: "z_arm_fault", scope: !6732, file: !6732, line: 1036, type: !6733, scopeLine: 1038, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6748)
!6732 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/fault.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!6733 = !DISubroutineType(types: !6734)
!6734 = !{null, !110, !110, !110, !6735}
!6735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6736, size: 32)
!6736 = !DIDerivedType(tag: DW_TAG_typedef, name: "_callee_saved_t", file: !209, line: 37, baseType: !6737)
!6737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !6738)
!6738 = !{!6739, !6740, !6741, !6742, !6743, !6744, !6745, !6746, !6747}
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !6737, file: !209, line: 26, baseType: !110, size: 32)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !6737, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !6737, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6737, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !6737, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6737, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !6737, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !6737, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !6737, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!6748 = !{!6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757, !6758}
!6749 = !DILocalVariable(name: "msp", arg: 1, scope: !6731, file: !6732, line: 1036, type: !110)
!6750 = !DILocalVariable(name: "psp", arg: 2, scope: !6731, file: !6732, line: 1036, type: !110)
!6751 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6731, file: !6732, line: 1036, type: !110)
!6752 = !DILocalVariable(name: "callee_regs", arg: 4, scope: !6731, file: !6732, line: 1037, type: !6735)
!6753 = !DILocalVariable(name: "reason", scope: !6731, file: !6732, line: 1039, type: !110)
!6754 = !DILocalVariable(name: "fault", scope: !6731, file: !6732, line: 1040, type: !109)
!6755 = !DILocalVariable(name: "recoverable", scope: !6731, file: !6732, line: 1041, type: !347)
!6756 = !DILocalVariable(name: "nested_exc", scope: !6731, file: !6732, line: 1041, type: !347)
!6757 = !DILocalVariable(name: "esf", scope: !6731, file: !6732, line: 1042, type: !2738)
!6758 = !DILocalVariable(name: "esf_copy", scope: !6731, file: !6732, line: 1047, type: !2739)
!6759 = !DILocation(line: 0, scope: !6731)
!6760 = !DILocation(line: 1040, column: 19, scope: !6731)
!6761 = !DILocation(line: 1041, column: 2, scope: !6731)
!6762 = !DILocation(line: 1047, column: 2, scope: !6731)
!6763 = !DILocation(line: 1047, column: 15, scope: !6731)
!6764 = !DILocalVariable(name: "key", arg: 1, scope: !6765, file: !6101, line: 84, type: !32)
!6765 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6766)
!6766 = !{!6764}
!6767 = !DILocation(line: 0, scope: !6765, inlinedAt: !6768)
!6768 = distinct !DILocation(line: 1050, column: 2, scope: !6731)
!6769 = !DILocation(line: 95, column: 2, scope: !6765, inlinedAt: !6768)
!6770 = !{i64 2275802}
!6771 = !DILocation(line: 1055, column: 9, scope: !6731)
!6772 = !DILocation(line: 1056, column: 2, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !6732, line: 1056, column: 2)
!6774 = distinct !DILexicalBlock(scope: !6731, file: !6732, line: 1056, column: 2)
!6775 = !DILocation(line: 1056, column: 2, scope: !6774)
!6776 = !DILocation(line: 1056, column: 2, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6773, file: !6732, line: 1056, column: 2)
!6778 = !DILocation(line: 1040, column: 24, scope: !6731)
!6779 = !DILocation(line: 1063, column: 11, scope: !6731)
!6780 = !DILocation(line: 1064, column: 6, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6731, file: !6732, line: 1064, column: 6)
!6782 = !{i8 0, i8 2}
!6783 = !DILocation(line: 1064, column: 6, scope: !6731)
!6784 = !DILocation(line: 1070, column: 20, scope: !6731)
!6785 = !DILocation(line: 1070, column: 2, scope: !6731)
!6786 = !DILocation(line: 1089, column: 6, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6731, file: !6732, line: 1089, column: 6)
!6788 = !DILocation(line: 0, scope: !6787)
!6789 = !DILocation(line: 1089, column: 6, scope: !6731)
!6790 = !DILocation(line: 1090, column: 28, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6792, file: !6732, line: 1090, column: 7)
!6792 = distinct !DILexicalBlock(scope: !6787, file: !6732, line: 1089, column: 18)
!6793 = !DILocation(line: 1090, column: 44, scope: !6791)
!6794 = !DILocation(line: 1090, column: 7, scope: !6792)
!6795 = !DILocation(line: 1091, column: 24, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6791, file: !6732, line: 1090, column: 50)
!6797 = !DILocation(line: 1092, column: 3, scope: !6796)
!6798 = !DILocation(line: 1094, column: 23, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6787, file: !6732, line: 1093, column: 9)
!6800 = !DILocation(line: 1097, column: 2, scope: !6731)
!6801 = !DILocation(line: 1098, column: 1, scope: !6731)
!6802 = distinct !DISubprogram(name: "get_esf", scope: !6732, file: !6732, line: 894, type: !6803, scopeLine: 896, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6806)
!6803 = !DISubroutineType(types: !6804)
!6804 = !{!2738, !110, !110, !110, !6805}
!6805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 32)
!6806 = !{!6807, !6808, !6809, !6810, !6811, !6812}
!6807 = !DILocalVariable(name: "msp", arg: 1, scope: !6802, file: !6732, line: 894, type: !110)
!6808 = !DILocalVariable(name: "psp", arg: 2, scope: !6802, file: !6732, line: 894, type: !110)
!6809 = !DILocalVariable(name: "exc_return", arg: 3, scope: !6802, file: !6732, line: 894, type: !110)
!6810 = !DILocalVariable(name: "nested_exc", arg: 4, scope: !6802, file: !6732, line: 895, type: !6805)
!6811 = !DILocalVariable(name: "alternative_state_exc", scope: !6802, file: !6732, line: 897, type: !347)
!6812 = !DILocalVariable(name: "ptr_esf", scope: !6802, file: !6732, line: 898, type: !2738)
!6813 = !DILocation(line: 0, scope: !6802)
!6814 = !DILocation(line: 900, column: 14, scope: !6802)
!6815 = !DILocation(line: 902, column: 49, scope: !6816)
!6816 = distinct !DILexicalBlock(scope: !6802, file: !6732, line: 902, column: 6)
!6817 = !DILocation(line: 902, column: 6, scope: !6802)
!6818 = !DILocation(line: 983, column: 44, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6802, file: !6732, line: 983, column: 6)
!6820 = !DILocation(line: 985, column: 3, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !6732, line: 985, column: 3)
!6822 = distinct !DILexicalBlock(scope: !6823, file: !6732, line: 985, column: 3)
!6823 = distinct !DILexicalBlock(scope: !6824, file: !6732, line: 985, column: 3)
!6824 = distinct !DILexicalBlock(scope: !6825, file: !6732, line: 985, column: 3)
!6825 = distinct !DILexicalBlock(scope: !6819, file: !6732, line: 984, column: 47)
!6826 = !DILocation(line: 986, column: 3, scope: !6825)
!6827 = !DILocation(line: 983, column: 18, scope: !6819)
!6828 = !DILocation(line: 991, column: 7, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6830, file: !6732, line: 990, column: 30)
!6830 = distinct !DILexicalBlock(scope: !6802, file: !6732, line: 990, column: 6)
!6831 = !DILocation(line: 998, column: 16, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !6732, line: 995, column: 10)
!6833 = distinct !DILexicalBlock(scope: !6829, file: !6732, line: 991, column: 7)
!6834 = !DILocation(line: 1002, column: 2, scope: !6802)
!6835 = !DILocation(line: 1003, column: 1, scope: !6802)
!6836 = distinct !DISubprogram(name: "fault_handle", scope: !6732, file: !6732, line: 786, type: !6837, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6839)
!6837 = !DISubroutineType(types: !6838)
!6838 = !{!110, !2738, !109, !6805}
!6839 = !{!6840, !6841, !6842, !6843}
!6840 = !DILocalVariable(name: "esf", arg: 1, scope: !6836, file: !6732, line: 786, type: !2738)
!6841 = !DILocalVariable(name: "fault", arg: 2, scope: !6836, file: !6732, line: 786, type: !109)
!6842 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6836, file: !6732, line: 786, type: !6805)
!6843 = !DILocalVariable(name: "reason", scope: !6836, file: !6732, line: 788, type: !110)
!6844 = !DILocation(line: 0, scope: !6836)
!6845 = !DILocation(line: 790, column: 15, scope: !6836)
!6846 = !DILocation(line: 792, column: 2, scope: !6836)
!6847 = !DILocation(line: 794, column: 12, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6836, file: !6732, line: 792, column: 17)
!6849 = !DILocation(line: 795, column: 3, scope: !6848)
!6850 = !DILocation(line: 800, column: 12, scope: !6848)
!6851 = !DILocation(line: 801, column: 3, scope: !6848)
!6852 = !DILocation(line: 803, column: 12, scope: !6848)
!6853 = !DILocation(line: 804, column: 3, scope: !6848)
!6854 = !DILocation(line: 806, column: 12, scope: !6848)
!6855 = !DILocation(line: 807, column: 3, scope: !6848)
!6856 = !DILocation(line: 814, column: 3, scope: !6848)
!6857 = !DILocation(line: 815, column: 3, scope: !6848)
!6858 = !DILocation(line: 820, column: 3, scope: !6848)
!6859 = !DILocation(line: 821, column: 3, scope: !6848)
!6860 = !DILocation(line: 829, column: 2, scope: !6836)
!6861 = distinct !DISubprogram(name: "hard_fault", scope: !6732, file: !6732, line: 709, type: !6862, scopeLine: 710, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6864)
!6862 = !DISubroutineType(types: !6863)
!6863 = !{!110, !2738, !6805}
!6864 = !{!6865, !6866, !6867}
!6865 = !DILocalVariable(name: "esf", arg: 1, scope: !6861, file: !6732, line: 709, type: !2738)
!6866 = !DILocalVariable(name: "recoverable", arg: 2, scope: !6861, file: !6732, line: 709, type: !6805)
!6867 = !DILocalVariable(name: "reason", scope: !6861, file: !6732, line: 711, type: !110)
!6868 = !DILocation(line: 0, scope: !6861)
!6869 = !DILocation(line: 713, column: 2, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6871, file: !6732, line: 713, column: 2)
!6871 = distinct !DILexicalBlock(scope: !6872, file: !6732, line: 713, column: 2)
!6872 = distinct !DILexicalBlock(scope: !6873, file: !6732, line: 713, column: 2)
!6873 = distinct !DILexicalBlock(scope: !6861, file: !6732, line: 713, column: 2)
!6874 = !DILocation(line: 732, column: 15, scope: !6861)
!6875 = !DILocation(line: 734, column: 12, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6861, file: !6732, line: 734, column: 6)
!6877 = !DILocation(line: 734, column: 17, scope: !6876)
!6878 = !DILocation(line: 734, column: 41, scope: !6876)
!6879 = !DILocation(line: 734, column: 6, scope: !6861)
!6880 = !DILocation(line: 735, column: 3, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !6732, line: 735, column: 3)
!6882 = distinct !DILexicalBlock(scope: !6883, file: !6732, line: 735, column: 3)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !6732, line: 735, column: 3)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !6732, line: 735, column: 3)
!6885 = distinct !DILexicalBlock(scope: !6876, file: !6732, line: 734, column: 47)
!6886 = !DILocation(line: 736, column: 2, scope: !6885)
!6887 = !DILocation(line: 736, column: 19, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6876, file: !6732, line: 736, column: 13)
!6889 = !DILocation(line: 736, column: 49, scope: !6888)
!6890 = !DILocation(line: 736, column: 13, scope: !6876)
!6891 = !DILocation(line: 737, column: 3, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6893, file: !6732, line: 737, column: 3)
!6893 = distinct !DILexicalBlock(scope: !6894, file: !6732, line: 737, column: 3)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !6732, line: 737, column: 3)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !6732, line: 737, column: 3)
!6896 = distinct !DILexicalBlock(scope: !6888, file: !6732, line: 736, column: 55)
!6897 = !DILocation(line: 738, column: 2, scope: !6896)
!6898 = !DILocation(line: 738, column: 19, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6888, file: !6732, line: 738, column: 13)
!6900 = !DILocation(line: 738, column: 24, scope: !6899)
!6901 = !DILocation(line: 738, column: 47, scope: !6899)
!6902 = !DILocation(line: 738, column: 13, scope: !6888)
!6903 = !DILocation(line: 739, column: 3, scope: !6904)
!6904 = distinct !DILexicalBlock(scope: !6905, file: !6732, line: 739, column: 3)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !6732, line: 739, column: 3)
!6906 = distinct !DILexicalBlock(scope: !6907, file: !6732, line: 739, column: 3)
!6907 = distinct !DILexicalBlock(scope: !6908, file: !6732, line: 739, column: 3)
!6908 = distinct !DILexicalBlock(scope: !6899, file: !6732, line: 738, column: 53)
!6909 = !DILocation(line: 740, column: 7, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6908, file: !6732, line: 740, column: 7)
!6911 = !DILocation(line: 740, column: 7, scope: !6908)
!6912 = !DILocation(line: 741, column: 4, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6914, file: !6732, line: 741, column: 4)
!6914 = distinct !DILexicalBlock(scope: !6915, file: !6732, line: 741, column: 4)
!6915 = distinct !DILexicalBlock(scope: !6916, file: !6732, line: 741, column: 4)
!6916 = distinct !DILexicalBlock(scope: !6917, file: !6732, line: 741, column: 4)
!6917 = distinct !DILexicalBlock(scope: !6910, file: !6732, line: 740, column: 38)
!6918 = !DILocation(line: 742, column: 24, scope: !6917)
!6919 = !DILocation(line: 743, column: 3, scope: !6917)
!6920 = !DILocation(line: 743, column: 20, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6910, file: !6732, line: 743, column: 14)
!6922 = !DILocation(line: 743, column: 25, scope: !6921)
!6923 = !DILocation(line: 743, column: 52, scope: !6921)
!6924 = !DILocation(line: 743, column: 14, scope: !6910)
!6925 = !DILocation(line: 744, column: 13, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6921, file: !6732, line: 743, column: 58)
!6927 = !DILocation(line: 745, column: 3, scope: !6926)
!6928 = !DILocation(line: 745, column: 20, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6921, file: !6732, line: 745, column: 14)
!6930 = !DILocation(line: 745, column: 25, scope: !6929)
!6931 = !DILocation(line: 745, column: 52, scope: !6929)
!6932 = !DILocation(line: 745, column: 14, scope: !6921)
!6933 = !DILocation(line: 746, column: 13, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6929, file: !6732, line: 745, column: 58)
!6935 = !DILocation(line: 747, column: 3, scope: !6934)
!6936 = !DILocation(line: 747, column: 20, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6929, file: !6732, line: 747, column: 14)
!6938 = !DILocation(line: 747, column: 52, scope: !6937)
!6939 = !DILocation(line: 747, column: 14, scope: !6929)
!6940 = !DILocation(line: 748, column: 13, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6937, file: !6732, line: 747, column: 58)
!6942 = !DILocation(line: 754, column: 4, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !6732, line: 754, column: 4)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !6732, line: 754, column: 4)
!6945 = distinct !DILexicalBlock(scope: !6946, file: !6732, line: 754, column: 4)
!6946 = distinct !DILexicalBlock(scope: !6937, file: !6732, line: 753, column: 10)
!6947 = !DILocation(line: 758, column: 3, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6949, file: !6732, line: 758, column: 3)
!6949 = distinct !DILexicalBlock(scope: !6950, file: !6732, line: 758, column: 3)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !6732, line: 758, column: 3)
!6951 = distinct !DILexicalBlock(scope: !6899, file: !6732, line: 757, column: 9)
!6952 = !DILocation(line: 766, column: 2, scope: !6861)
!6953 = distinct !DISubprogram(name: "mem_manage_fault", scope: !6732, file: !6732, line: 229, type: !6837, scopeLine: 231, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !6954)
!6954 = !{!6955, !6956, !6957, !6958, !6959, !6960, !6963}
!6955 = !DILocalVariable(name: "esf", arg: 1, scope: !6953, file: !6732, line: 229, type: !2738)
!6956 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !6953, file: !6732, line: 229, type: !109)
!6957 = !DILocalVariable(name: "recoverable", arg: 3, scope: !6953, file: !6732, line: 230, type: !6805)
!6958 = !DILocalVariable(name: "reason", scope: !6953, file: !6732, line: 232, type: !110)
!6959 = !DILocalVariable(name: "mmfar", scope: !6953, file: !6732, line: 233, type: !110)
!6960 = !DILocalVariable(name: "temp", scope: !6961, file: !6732, line: 254, type: !110)
!6961 = distinct !DILexicalBlock(scope: !6962, file: !6732, line: 244, column: 48)
!6962 = distinct !DILexicalBlock(scope: !6953, file: !6732, line: 244, column: 6)
!6963 = !DILocalVariable(name: "min_stack_ptr", scope: !6964, file: !6732, line: 309, type: !110)
!6964 = distinct !DILexicalBlock(scope: !6965, file: !6732, line: 308, column: 43)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !6732, line: 308, column: 7)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !6732, line: 289, column: 40)
!6967 = distinct !DILexicalBlock(scope: !6953, file: !6732, line: 288, column: 6)
!6968 = !DILocation(line: 0, scope: !6953)
!6969 = !DILocation(line: 235, column: 2, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !6732, line: 235, column: 2)
!6971 = distinct !DILexicalBlock(scope: !6972, file: !6732, line: 235, column: 2)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !6732, line: 235, column: 2)
!6973 = distinct !DILexicalBlock(scope: !6953, file: !6732, line: 235, column: 2)
!6974 = !DILocation(line: 237, column: 12, scope: !6975)
!6975 = distinct !DILexicalBlock(scope: !6953, file: !6732, line: 237, column: 6)
!6976 = !DILocation(line: 237, column: 17, scope: !6975)
!6977 = !DILocation(line: 237, column: 41, scope: !6975)
!6978 = !DILocation(line: 237, column: 6, scope: !6953)
!6979 = !DILocation(line: 238, column: 3, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6981, file: !6732, line: 238, column: 3)
!6981 = distinct !DILexicalBlock(scope: !6982, file: !6732, line: 238, column: 3)
!6982 = distinct !DILexicalBlock(scope: !6983, file: !6732, line: 238, column: 3)
!6983 = distinct !DILexicalBlock(scope: !6984, file: !6732, line: 238, column: 3)
!6984 = distinct !DILexicalBlock(scope: !6975, file: !6732, line: 237, column: 47)
!6985 = !DILocation(line: 240, column: 2, scope: !6984)
!6986 = !DILocation(line: 241, column: 12, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6953, file: !6732, line: 241, column: 6)
!6988 = !DILocation(line: 241, column: 17, scope: !6987)
!6989 = !DILocation(line: 241, column: 43, scope: !6987)
!6990 = !DILocation(line: 241, column: 6, scope: !6953)
!6991 = !DILocation(line: 242, column: 3, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !6732, line: 242, column: 3)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !6732, line: 242, column: 3)
!6994 = distinct !DILexicalBlock(scope: !6995, file: !6732, line: 242, column: 3)
!6995 = distinct !DILexicalBlock(scope: !6996, file: !6732, line: 242, column: 3)
!6996 = distinct !DILexicalBlock(scope: !6987, file: !6732, line: 241, column: 49)
!6997 = !DILocation(line: 243, column: 2, scope: !6996)
!6998 = !DILocation(line: 244, column: 12, scope: !6962)
!6999 = !DILocation(line: 244, column: 17, scope: !6962)
!7000 = !DILocation(line: 244, column: 42, scope: !6962)
!7001 = !DILocation(line: 244, column: 6, scope: !6953)
!7002 = !DILocation(line: 245, column: 3, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7004, file: !6732, line: 245, column: 3)
!7004 = distinct !DILexicalBlock(scope: !7005, file: !6732, line: 245, column: 3)
!7005 = distinct !DILexicalBlock(scope: !7006, file: !6732, line: 245, column: 3)
!7006 = distinct !DILexicalBlock(scope: !6961, file: !6732, line: 245, column: 3)
!7007 = !DILocation(line: 254, column: 24, scope: !6961)
!7008 = !DILocation(line: 0, scope: !6961)
!7009 = !DILocation(line: 256, column: 13, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !6961, file: !6732, line: 256, column: 7)
!7011 = !DILocation(line: 256, column: 18, scope: !7010)
!7012 = !DILocation(line: 256, column: 44, scope: !7010)
!7013 = !DILocation(line: 256, column: 7, scope: !6961)
!7014 = !DILocation(line: 258, column: 4, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7016, file: !6732, line: 258, column: 4)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !6732, line: 258, column: 4)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !6732, line: 258, column: 4)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !6732, line: 258, column: 4)
!7019 = distinct !DILexicalBlock(scope: !7010, file: !6732, line: 256, column: 50)
!7020 = !DILocation(line: 259, column: 24, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7019, file: !6732, line: 259, column: 8)
!7022 = !DILocation(line: 259, column: 8, scope: !7019)
!7023 = !DILocation(line: 261, column: 15, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7021, file: !6732, line: 259, column: 30)
!7025 = !DILocation(line: 262, column: 4, scope: !7024)
!7026 = !DILocation(line: 265, column: 12, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !6953, file: !6732, line: 265, column: 6)
!7028 = !DILocation(line: 265, column: 17, scope: !7027)
!7029 = !DILocation(line: 265, column: 42, scope: !7027)
!7030 = !DILocation(line: 265, column: 6, scope: !6953)
!7031 = !DILocation(line: 266, column: 3, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !6732, line: 266, column: 3)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !6732, line: 266, column: 3)
!7034 = distinct !DILexicalBlock(scope: !7035, file: !6732, line: 266, column: 3)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !6732, line: 266, column: 3)
!7036 = distinct !DILexicalBlock(scope: !7027, file: !6732, line: 265, column: 48)
!7037 = !DILocation(line: 267, column: 2, scope: !7036)
!7038 = !DILocation(line: 269, column: 12, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !6953, file: !6732, line: 269, column: 6)
!7040 = !DILocation(line: 269, column: 17, scope: !7039)
!7041 = !DILocation(line: 269, column: 41, scope: !7039)
!7042 = !DILocation(line: 269, column: 6, scope: !6953)
!7043 = !DILocation(line: 270, column: 3, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7045, file: !6732, line: 270, column: 3)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !6732, line: 270, column: 3)
!7046 = distinct !DILexicalBlock(scope: !7047, file: !6732, line: 270, column: 3)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !6732, line: 270, column: 3)
!7048 = distinct !DILexicalBlock(scope: !7039, file: !6732, line: 269, column: 47)
!7049 = !DILocation(line: 272, column: 2, scope: !7048)
!7050 = !DILocation(line: 288, column: 12, scope: !6967)
!7051 = !DILocation(line: 288, column: 17, scope: !6967)
!7052 = !DILocation(line: 288, column: 41, scope: !6967)
!7053 = !DILocation(line: 289, column: 9, scope: !6967)
!7054 = !DILocation(line: 289, column: 14, scope: !6967)
!7055 = !DILocation(line: 288, column: 6, scope: !6953)
!7056 = !DILocation(line: 308, column: 12, scope: !6965)
!7057 = !DILocation(line: 308, column: 17, scope: !6965)
!7058 = !DILocation(line: 308, column: 7, scope: !6966)
!7059 = !DILocation(line: 310, column: 6, scope: !6964)
!7060 = !DILocation(line: 309, column: 29, scope: !6964)
!7061 = !DILocation(line: 0, scope: !6964)
!7062 = !DILocation(line: 312, column: 8, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !6964, file: !6732, line: 312, column: 8)
!7064 = !DILocation(line: 312, column: 8, scope: !6964)
!7065 = !DILocalVariable(name: "topOfProcStack", arg: 1, scope: !7066, file: !6422, line: 1099, type: !110)
!7066 = distinct !DISubprogram(name: "__set_PSP", scope: !6422, file: !6422, line: 1099, type: !6519, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7067)
!7067 = !{!7065}
!7068 = !DILocation(line: 0, scope: !7066, inlinedAt: !7069)
!7069 = distinct !DILocation(line: 338, column: 5, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7063, file: !6732, line: 312, column: 23)
!7071 = !DILocation(line: 1101, column: 3, scope: !7066, inlinedAt: !7069)
!7072 = !{i64 3531463}
!7073 = !DILocation(line: 341, column: 4, scope: !7070)
!7074 = !DILocation(line: 342, column: 5, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !6732, line: 342, column: 5)
!7076 = distinct !DILexicalBlock(scope: !7077, file: !6732, line: 342, column: 5)
!7077 = distinct !DILexicalBlock(scope: !7063, file: !6732, line: 341, column: 11)
!7078 = !DILocation(line: 342, column: 5, scope: !7076)
!7079 = !DILocation(line: 342, column: 5, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !6732, line: 342, column: 5)
!7081 = !DILocation(line: 360, column: 12, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !6953, file: !6732, line: 360, column: 6)
!7083 = !DILocation(line: 360, column: 17, scope: !7082)
!7084 = !DILocation(line: 360, column: 41, scope: !7082)
!7085 = !DILocation(line: 360, column: 6, scope: !6953)
!7086 = !DILocation(line: 361, column: 14, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7082, file: !6732, line: 360, column: 47)
!7088 = !DILocation(line: 362, column: 2, scope: !7087)
!7089 = !DILocation(line: 366, column: 12, scope: !6953)
!7090 = !DILocation(line: 369, column: 15, scope: !6953)
!7091 = !DILocation(line: 371, column: 2, scope: !6953)
!7092 = distinct !DISubprogram(name: "bus_fault", scope: !6732, file: !6732, line: 383, type: !7093, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7095)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!109, !2738, !109, !6805}
!7095 = !{!7096, !7097, !7098, !7099, !7100}
!7096 = !DILocalVariable(name: "esf", arg: 1, scope: !7092, file: !6732, line: 383, type: !2738)
!7097 = !DILocalVariable(name: "from_hard_fault", arg: 2, scope: !7092, file: !6732, line: 383, type: !109)
!7098 = !DILocalVariable(name: "recoverable", arg: 3, scope: !7092, file: !6732, line: 383, type: !6805)
!7099 = !DILocalVariable(name: "reason", scope: !7092, file: !6732, line: 385, type: !110)
!7100 = !DILocalVariable(name: "bfar", scope: !7101, file: !6732, line: 405, type: !110)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !6732, line: 395, column: 42)
!7102 = distinct !DILexicalBlock(scope: !7092, file: !6732, line: 395, column: 6)
!7103 = !DILocation(line: 0, scope: !7092)
!7104 = !DILocation(line: 387, column: 2, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !6732, line: 387, column: 2)
!7106 = distinct !DILexicalBlock(scope: !7107, file: !6732, line: 387, column: 2)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !6732, line: 387, column: 2)
!7108 = distinct !DILexicalBlock(scope: !7092, file: !6732, line: 387, column: 2)
!7109 = !DILocation(line: 389, column: 11, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !7092, file: !6732, line: 389, column: 6)
!7111 = !DILocation(line: 389, column: 16, scope: !7110)
!7112 = !DILocation(line: 389, column: 6, scope: !7092)
!7113 = !DILocation(line: 390, column: 3, scope: !7114)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !6732, line: 390, column: 3)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !6732, line: 390, column: 3)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !6732, line: 390, column: 3)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !6732, line: 390, column: 3)
!7118 = distinct !DILexicalBlock(scope: !7110, file: !6732, line: 389, column: 39)
!7119 = !DILocation(line: 391, column: 2, scope: !7118)
!7120 = !DILocation(line: 392, column: 11, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7092, file: !6732, line: 392, column: 6)
!7122 = !DILocation(line: 392, column: 16, scope: !7121)
!7123 = !DILocation(line: 392, column: 6, scope: !7092)
!7124 = !DILocation(line: 393, column: 3, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !6732, line: 393, column: 3)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !6732, line: 393, column: 3)
!7127 = distinct !DILexicalBlock(scope: !7128, file: !6732, line: 393, column: 3)
!7128 = distinct !DILexicalBlock(scope: !7129, file: !6732, line: 393, column: 3)
!7129 = distinct !DILexicalBlock(scope: !7121, file: !6732, line: 392, column: 41)
!7130 = !DILocation(line: 394, column: 2, scope: !7129)
!7131 = !DILocation(line: 395, column: 11, scope: !7102)
!7132 = !DILocation(line: 395, column: 16, scope: !7102)
!7133 = !DILocation(line: 395, column: 6, scope: !7092)
!7134 = !DILocation(line: 396, column: 3, scope: !7135)
!7135 = distinct !DILexicalBlock(scope: !7136, file: !6732, line: 396, column: 3)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !6732, line: 396, column: 3)
!7137 = distinct !DILexicalBlock(scope: !7138, file: !6732, line: 396, column: 3)
!7138 = distinct !DILexicalBlock(scope: !7101, file: !6732, line: 396, column: 3)
!7139 = !DILocation(line: 405, column: 3, scope: !7101)
!7140 = !DILocation(line: 0, scope: !7101)
!7141 = !DILocation(line: 407, column: 13, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7101, file: !6732, line: 407, column: 7)
!7143 = !DILocation(line: 407, column: 18, scope: !7142)
!7144 = !DILocation(line: 407, column: 44, scope: !7142)
!7145 = !DILocation(line: 407, column: 7, scope: !7101)
!7146 = !DILocation(line: 408, column: 4, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !6732, line: 408, column: 4)
!7148 = distinct !DILexicalBlock(scope: !7149, file: !6732, line: 408, column: 4)
!7149 = distinct !DILexicalBlock(scope: !7150, file: !6732, line: 408, column: 4)
!7150 = distinct !DILexicalBlock(scope: !7151, file: !6732, line: 408, column: 4)
!7151 = distinct !DILexicalBlock(scope: !7142, file: !6732, line: 407, column: 50)
!7152 = !DILocation(line: 409, column: 24, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7151, file: !6732, line: 409, column: 8)
!7154 = !DILocation(line: 409, column: 8, scope: !7151)
!7155 = !DILocation(line: 411, column: 15, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7153, file: !6732, line: 409, column: 30)
!7157 = !DILocation(line: 412, column: 4, scope: !7156)
!7158 = !DILocation(line: 415, column: 11, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7092, file: !6732, line: 415, column: 6)
!7160 = !DILocation(line: 415, column: 16, scope: !7159)
!7161 = !DILocation(line: 415, column: 6, scope: !7092)
!7162 = !DILocation(line: 416, column: 3, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7164, file: !6732, line: 416, column: 3)
!7164 = distinct !DILexicalBlock(scope: !7165, file: !6732, line: 416, column: 3)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !6732, line: 416, column: 3)
!7166 = distinct !DILexicalBlock(scope: !7167, file: !6732, line: 416, column: 3)
!7167 = distinct !DILexicalBlock(scope: !7159, file: !6732, line: 415, column: 44)
!7168 = !DILocation(line: 417, column: 2, scope: !7167)
!7169 = !DILocation(line: 418, column: 12, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7092, file: !6732, line: 418, column: 6)
!7171 = !DILocation(line: 418, column: 17, scope: !7170)
!7172 = !DILocation(line: 418, column: 41, scope: !7170)
!7173 = !DILocation(line: 418, column: 6, scope: !7092)
!7174 = !DILocation(line: 423, column: 18, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7170, file: !6732, line: 423, column: 13)
!7176 = !DILocation(line: 423, column: 23, scope: !7175)
!7177 = !DILocation(line: 423, column: 13, scope: !7170)
!7178 = !DILocation(line: 0, scope: !7170)
!7179 = !DILocation(line: 524, column: 12, scope: !7092)
!7180 = !DILocation(line: 526, column: 15, scope: !7092)
!7181 = !DILocation(line: 528, column: 2, scope: !7092)
!7182 = distinct !DISubprogram(name: "usage_fault", scope: !6732, file: !6732, line: 539, type: !7183, scopeLine: 540, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7187)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{!110, !7185}
!7185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7186, size: 32)
!7186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2739)
!7187 = !{!7188, !7189}
!7188 = !DILocalVariable(name: "esf", arg: 1, scope: !7182, file: !6732, line: 539, type: !7185)
!7189 = !DILocalVariable(name: "reason", scope: !7182, file: !6732, line: 541, type: !110)
!7190 = !DILocation(line: 0, scope: !7182)
!7191 = !DILocation(line: 543, column: 2, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !6732, line: 543, column: 2)
!7193 = distinct !DILexicalBlock(scope: !7194, file: !6732, line: 543, column: 2)
!7194 = distinct !DILexicalBlock(scope: !7195, file: !6732, line: 543, column: 2)
!7195 = distinct !DILexicalBlock(scope: !7182, file: !6732, line: 543, column: 2)
!7196 = !DILocation(line: 546, column: 12, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7182, file: !6732, line: 546, column: 6)
!7198 = !DILocation(line: 546, column: 17, scope: !7197)
!7199 = !DILocation(line: 546, column: 43, scope: !7197)
!7200 = !DILocation(line: 546, column: 6, scope: !7182)
!7201 = !DILocation(line: 547, column: 3, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7203, file: !6732, line: 547, column: 3)
!7203 = distinct !DILexicalBlock(scope: !7204, file: !6732, line: 547, column: 3)
!7204 = distinct !DILexicalBlock(scope: !7205, file: !6732, line: 547, column: 3)
!7205 = distinct !DILexicalBlock(scope: !7206, file: !6732, line: 547, column: 3)
!7206 = distinct !DILexicalBlock(scope: !7197, file: !6732, line: 546, column: 49)
!7207 = !DILocation(line: 548, column: 2, scope: !7206)
!7208 = !DILocation(line: 549, column: 12, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7182, file: !6732, line: 549, column: 6)
!7210 = !DILocation(line: 549, column: 17, scope: !7209)
!7211 = !DILocation(line: 549, column: 43, scope: !7209)
!7212 = !DILocation(line: 549, column: 6, scope: !7182)
!7213 = !DILocation(line: 550, column: 3, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7215, file: !6732, line: 550, column: 3)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !6732, line: 550, column: 3)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !6732, line: 550, column: 3)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !6732, line: 550, column: 3)
!7218 = distinct !DILexicalBlock(scope: !7209, file: !6732, line: 549, column: 49)
!7219 = !DILocation(line: 551, column: 2, scope: !7218)
!7220 = !DILocation(line: 567, column: 12, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7182, file: !6732, line: 567, column: 6)
!7222 = !DILocation(line: 567, column: 17, scope: !7221)
!7223 = !DILocation(line: 567, column: 38, scope: !7221)
!7224 = !DILocation(line: 567, column: 6, scope: !7182)
!7225 = !DILocation(line: 568, column: 3, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7227, file: !6732, line: 568, column: 3)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !6732, line: 568, column: 3)
!7228 = distinct !DILexicalBlock(scope: !7229, file: !6732, line: 568, column: 3)
!7229 = distinct !DILexicalBlock(scope: !7230, file: !6732, line: 568, column: 3)
!7230 = distinct !DILexicalBlock(scope: !7221, file: !6732, line: 567, column: 44)
!7231 = !DILocation(line: 569, column: 2, scope: !7230)
!7232 = !DILocation(line: 570, column: 12, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7182, file: !6732, line: 570, column: 6)
!7234 = !DILocation(line: 570, column: 17, scope: !7233)
!7235 = !DILocation(line: 570, column: 39, scope: !7233)
!7236 = !DILocation(line: 570, column: 6, scope: !7182)
!7237 = !DILocation(line: 571, column: 3, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !6732, line: 571, column: 3)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !6732, line: 571, column: 3)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !6732, line: 571, column: 3)
!7241 = distinct !DILexicalBlock(scope: !7242, file: !6732, line: 571, column: 3)
!7242 = distinct !DILexicalBlock(scope: !7233, file: !6732, line: 570, column: 45)
!7243 = !DILocation(line: 572, column: 2, scope: !7242)
!7244 = !DILocation(line: 573, column: 12, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7182, file: !6732, line: 573, column: 6)
!7246 = !DILocation(line: 573, column: 17, scope: !7245)
!7247 = !DILocation(line: 573, column: 42, scope: !7245)
!7248 = !DILocation(line: 573, column: 6, scope: !7182)
!7249 = !DILocation(line: 574, column: 3, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7251, file: !6732, line: 574, column: 3)
!7251 = distinct !DILexicalBlock(scope: !7252, file: !6732, line: 574, column: 3)
!7252 = distinct !DILexicalBlock(scope: !7253, file: !6732, line: 574, column: 3)
!7253 = distinct !DILexicalBlock(scope: !7254, file: !6732, line: 574, column: 3)
!7254 = distinct !DILexicalBlock(scope: !7245, file: !6732, line: 573, column: 48)
!7255 = !DILocation(line: 575, column: 2, scope: !7254)
!7256 = !DILocation(line: 576, column: 12, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7182, file: !6732, line: 576, column: 6)
!7258 = !DILocation(line: 576, column: 17, scope: !7257)
!7259 = !DILocation(line: 576, column: 44, scope: !7257)
!7260 = !DILocation(line: 576, column: 6, scope: !7182)
!7261 = !DILocation(line: 577, column: 3, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !6732, line: 577, column: 3)
!7263 = distinct !DILexicalBlock(scope: !7264, file: !6732, line: 577, column: 3)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !6732, line: 577, column: 3)
!7265 = distinct !DILexicalBlock(scope: !7266, file: !6732, line: 577, column: 3)
!7266 = distinct !DILexicalBlock(scope: !7257, file: !6732, line: 576, column: 50)
!7267 = !DILocation(line: 578, column: 2, scope: !7266)
!7268 = !DILocation(line: 581, column: 12, scope: !7182)
!7269 = !DILocation(line: 583, column: 2, scope: !7182)
!7270 = distinct !DISubprogram(name: "debug_monitor", scope: !6732, file: !6732, line: 632, type: !7271, scopeLine: 633, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7273)
!7271 = !DISubroutineType(types: !7272)
!7272 = !{null, !2738, !6805}
!7273 = !{!7274, !7275}
!7274 = !DILocalVariable(name: "esf", arg: 1, scope: !7270, file: !6732, line: 632, type: !2738)
!7275 = !DILocalVariable(name: "recoverable", arg: 2, scope: !7270, file: !6732, line: 632, type: !6805)
!7276 = !DILocation(line: 0, scope: !7270)
!7277 = !DILocation(line: 634, column: 15, scope: !7270)
!7278 = !DILocation(line: 636, column: 2, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !6732, line: 636, column: 2)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !6732, line: 636, column: 2)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !6732, line: 636, column: 2)
!7282 = distinct !DILexicalBlock(scope: !7270, file: !6732, line: 636, column: 2)
!7283 = !DILocation(line: 652, column: 1, scope: !7270)
!7284 = distinct !DISubprogram(name: "reserved_exception", scope: !6732, file: !6732, line: 776, type: !7285, scopeLine: 777, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7287)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{null, !7185, !109}
!7287 = !{!7288, !7289}
!7288 = !DILocalVariable(name: "esf", arg: 1, scope: !7284, file: !6732, line: 776, type: !7185)
!7289 = !DILocalVariable(name: "fault", arg: 2, scope: !7284, file: !6732, line: 776, type: !109)
!7290 = !DILocation(line: 0, scope: !7284)
!7291 = !DILocation(line: 780, column: 2, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7293, file: !6732, line: 780, column: 2)
!7293 = distinct !DILexicalBlock(scope: !7294, file: !6732, line: 780, column: 2)
!7294 = distinct !DILexicalBlock(scope: !7295, file: !6732, line: 780, column: 2)
!7295 = distinct !DILexicalBlock(scope: !7284, file: !6732, line: 780, column: 2)
!7296 = !DILocation(line: 783, column: 1, scope: !7284)
!7297 = distinct !DISubprogram(name: "z_arm_is_synchronous_svc", scope: !6732, file: !6732, line: 658, type: !7298, scopeLine: 659, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !7300)
!7298 = !DISubroutineType(types: !7299)
!7299 = !{!347, !2738}
!7300 = !{!7301, !7302, !7303}
!7301 = !DILocalVariable(name: "esf", arg: 1, scope: !7297, file: !6732, line: 658, type: !2738)
!7302 = !DILocalVariable(name: "ret_addr", scope: !7297, file: !6732, line: 660, type: !2781)
!7303 = !DILocalVariable(name: "fault_insn", scope: !7297, file: !6732, line: 686, type: !192)
!7304 = !DILocation(line: 0, scope: !7297)
!7305 = !DILocation(line: 660, column: 46, scope: !7297)
!7306 = !DILocation(line: 660, column: 23, scope: !7297)
!7307 = !DILocation(line: 682, column: 11, scope: !7297)
!7308 = !DILocation(line: 271, column: 3, scope: !7309, inlinedAt: !7310)
!7309 = distinct !DISubprogram(name: "__DSB", scope: !6422, file: !6422, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !2026)
!7310 = distinct !DILocation(line: 683, column: 2, scope: !7297)
!7311 = !{i64 3507598}
!7312 = !DILocation(line: 260, column: 3, scope: !7313, inlinedAt: !7314)
!7313 = distinct !DISubprogram(name: "__ISB", scope: !6422, file: !6422, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !2026)
!7314 = distinct !DILocation(line: 684, column: 2, scope: !7297)
!7315 = !{i64 3507315}
!7316 = !DILocation(line: 686, column: 35, scope: !7297)
!7317 = !DILocation(line: 686, column: 24, scope: !7297)
!7318 = !DILocation(line: 688, column: 11, scope: !7297)
!7319 = !DILocation(line: 271, column: 3, scope: !7309, inlinedAt: !7320)
!7320 = distinct !DILocation(line: 689, column: 2, scope: !7297)
!7321 = !DILocation(line: 260, column: 3, scope: !7313, inlinedAt: !7322)
!7322 = distinct !DILocation(line: 690, column: 2, scope: !7297)
!7323 = !DILocation(line: 693, column: 45, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7297, file: !6732, line: 693, column: 6)
!7325 = !DILocation(line: 699, column: 1, scope: !7297)
!7326 = distinct !DISubprogram(name: "z_arm_fault_init", scope: !6732, file: !6732, line: 1107, type: !3089, scopeLine: 1108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2710, retainedNodes: !2026)
!7327 = !DILocation(line: 1111, column: 11, scope: !7326)
!7328 = !DILocation(line: 1136, column: 1, scope: !7326)
!7329 = distinct !DISubprogram(name: "z_arm_interrupt_init", scope: !7330, file: !7330, line: 26, type: !3089, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !7331)
!7330 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/irq_init.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7331 = !{!7332}
!7332 = !DILocalVariable(name: "irq", scope: !7329, file: !7330, line: 28, type: !109)
!7333 = !DILocation(line: 0, scope: !7329)
!7334 = !DILocation(line: 30, column: 2, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !7329, file: !7330, line: 30, column: 2)
!7336 = !DILocation(line: 31, column: 3, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7338, file: !7330, line: 30, column: 39)
!7338 = distinct !DILexicalBlock(scope: !7335, file: !7330, line: 30, column: 2)
!7339 = !DILocation(line: 30, column: 35, scope: !7338)
!7340 = !DILocation(line: 30, column: 13, scope: !7338)
!7341 = distinct !{!7341, !7334, !7342}
!7342 = !DILocation(line: 32, column: 2, scope: !7335)
!7343 = !DILocation(line: 33, column: 1, scope: !7329)
!7344 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6462, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2782, retainedNodes: !7345)
!7345 = !{!7346, !7347}
!7346 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7344, file: !535, line: 1814, type: !791)
!7347 = !DILocalVariable(name: "priority", arg: 2, scope: !7344, file: !535, line: 1814, type: !110)
!7348 = !DILocation(line: 0, scope: !7344)
!7349 = !DILocation(line: 1816, column: 7, scope: !7344)
!7350 = !DILocation(line: 0, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7344, file: !535, line: 1816, column: 7)
!7352 = !DILocation(line: 1824, column: 1, scope: !7344)
!7353 = distinct !DISubprogram(name: "z_impl_k_thread_abort", scope: !7354, file: !7354, line: 27, type: !7355, scopeLine: 28, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !7461)
!7354 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/cortex_m/thread_abort.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7355 = !DISubroutineType(types: !7356)
!7356 = !{null, !7357}
!7357 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !7358)
!7358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7359, size: 32)
!7359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !7360)
!7360 = !{!7361, !7419, !7431, !7432, !7433, !7434, !7435, !7441, !7456}
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !7359, file: !156, line: 247, baseType: !7362, size: 384)
!7362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !7363)
!7363 = !{!7364, !7388, !7395, !7396, !7397, !7406, !7407, !7408}
!7364 = !DIDerivedType(tag: DW_TAG_member, scope: !7362, file: !156, line: 60, baseType: !7365, size: 64)
!7365 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7362, file: !156, line: 60, size: 64, elements: !7366)
!7366 = !{!7367, !7382}
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !7365, file: !156, line: 61, baseType: !7368, size: 64)
!7368 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !7369)
!7369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !7370)
!7370 = !{!7371, !7377}
!7371 = !DIDerivedType(tag: DW_TAG_member, scope: !7369, file: !127, line: 38, baseType: !7372, size: 32)
!7372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7369, file: !127, line: 38, size: 32, elements: !7373)
!7373 = !{!7374, !7376}
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7372, file: !127, line: 39, baseType: !7375, size: 32)
!7375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7369, size: 32)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7372, file: !127, line: 40, baseType: !7375, size: 32)
!7377 = !DIDerivedType(tag: DW_TAG_member, scope: !7369, file: !127, line: 42, baseType: !7378, size: 32, offset: 32)
!7378 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7369, file: !127, line: 42, size: 32, elements: !7379)
!7379 = !{!7380, !7381}
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7378, file: !127, line: 43, baseType: !7375, size: 32)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7378, file: !127, line: 44, baseType: !7375, size: 32)
!7382 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !7365, file: !156, line: 62, baseType: !7383, size: 64)
!7383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !7384)
!7384 = !{!7385}
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !7383, file: !168, line: 50, baseType: !7386, size: 64)
!7386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7387, size: 64, elements: !173)
!7387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7383, size: 32)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !7362, file: !156, line: 68, baseType: !7389, size: 32, offset: 64)
!7389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7390, size: 32)
!7390 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !7391)
!7391 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !7392)
!7392 = !{!7393}
!7393 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !7391, file: !122, line: 232, baseType: !7394, size: 64)
!7394 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !7369)
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !7362, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!7396 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !7362, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!7397 = !DIDerivedType(tag: DW_TAG_member, scope: !7362, file: !156, line: 90, baseType: !7398, size: 16, offset: 112)
!7398 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7362, file: !156, line: 90, size: 16, elements: !7399)
!7399 = !{!7400, !7405}
!7400 = !DIDerivedType(tag: DW_TAG_member, scope: !7398, file: !156, line: 91, baseType: !7401, size: 16)
!7401 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7398, file: !156, line: 91, size: 16, elements: !7402)
!7402 = !{!7403, !7404}
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !7401, file: !156, line: 96, baseType: !188, size: 8)
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !7401, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !7398, file: !156, line: 100, baseType: !192, size: 16)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !7362, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!7407 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !7362, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!7408 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7362, file: !156, line: 131, baseType: !7409, size: 192, offset: 192)
!7409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !7410)
!7410 = !{!7411, !7412, !7418}
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7409, file: !122, line: 245, baseType: !7368, size: 64)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !7409, file: !122, line: 246, baseType: !7413, size: 32, offset: 64)
!7413 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !7414)
!7414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7415, size: 32)
!7415 = !DISubroutineType(types: !7416)
!7416 = !{null, !7417}
!7417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7409, size: 32)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !7409, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !7359, file: !156, line: 250, baseType: !7420, size: 288, offset: 384)
!7420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !7421)
!7421 = !{!7422, !7423, !7424, !7425, !7426, !7427, !7428, !7429, !7430}
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !7420, file: !209, line: 26, baseType: !110, size: 32)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !7420, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !7420, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !7420, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !7420, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !7420, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !7420, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !7420, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !7420, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !7359, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!7432 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !7359, file: !156, line: 256, baseType: !7390, size: 64, offset: 704)
!7433 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7359, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !7359, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !7359, file: !156, line: 300, baseType: !7436, size: 96, offset: 1056)
!7436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !7437)
!7437 = !{!7438, !7439, !7440}
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7436, file: !156, line: 153, baseType: !22, size: 32)
!7439 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7436, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!7440 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !7436, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !7359, file: !156, line: 325, baseType: !7442, size: 32, offset: 1152)
!7442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7443, size: 32)
!7443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !7444)
!7444 = !{!7445, !7451, !7452}
!7445 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7443, file: !118, line: 5074, baseType: !7446, size: 96)
!7446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !7447)
!7447 = !{!7448, !7449, !7450}
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !7446, file: !241, line: 57, baseType: !244, size: 32)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !7446, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !7446, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !7443, file: !118, line: 5075, baseType: !7390, size: 64, offset: 96)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7443, file: !118, line: 5076, baseType: !7453, size: 32, offset: 160)
!7453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !7454)
!7454 = !{!7455}
!7455 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !7453, file: !251, line: 52, baseType: !22, size: 32)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !7359, file: !156, line: 343, baseType: !7457, size: 64, offset: 1184)
!7457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !7458)
!7458 = !{!7459, !7460}
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !7457, file: !209, line: 63, baseType: !110, size: 32)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !7457, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!7461 = !{!7462}
!7462 = !DILocalVariable(name: "thread", arg: 1, scope: !7353, file: !7354, line: 27, type: !7357)
!7463 = !DILocation(line: 0, scope: !7353)
!7464 = !DILocation(line: 29, column: 6, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7353, file: !7354, line: 29, column: 6)
!7466 = !DILocation(line: 29, column: 15, scope: !7465)
!7467 = !DILocation(line: 29, column: 6, scope: !7353)
!7468 = !DILocation(line: 1031, column: 3, scope: !7469, inlinedAt: !7472)
!7469 = distinct !DISubprogram(name: "__get_IPSR", scope: !6422, file: !6422, line: 1027, type: !6509, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !7470)
!7470 = !{!7471}
!7471 = !DILocalVariable(name: "result", scope: !7469, file: !6422, line: 1029, type: !110)
!7472 = distinct !DILocation(line: 48, column: 10, scope: !7473, inlinedAt: !7477)
!7473 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7474, file: !7474, line: 46, type: !7475, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2827, retainedNodes: !2026)
!7474 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/exc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7475 = !DISubroutineType(types: !7476)
!7476 = !{!347}
!7477 = distinct !DILocation(line: 30, column: 7, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7479, file: !7354, line: 30, column: 7)
!7479 = distinct !DILexicalBlock(scope: !7465, file: !7354, line: 29, column: 26)
!7480 = !{i64 3496446}
!7481 = !DILocation(line: 0, scope: !7469, inlinedAt: !7472)
!7482 = !DILocation(line: 48, column: 9, scope: !7473, inlinedAt: !7477)
!7483 = !DILocation(line: 30, column: 7, scope: !7479)
!7484 = !DILocation(line: 42, column: 14, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7478, file: !7354, line: 30, column: 25)
!7486 = !DILocation(line: 48, column: 15, scope: !7485)
!7487 = !DILocation(line: 49, column: 3, scope: !7485)
!7488 = !DILocation(line: 52, column: 2, scope: !7353)
!7489 = !DILocation(line: 53, column: 1, scope: !7353)
!7490 = distinct !DISubprogram(name: "z_arm_configure_static_mpu_regions", scope: !394, file: !394, line: 127, type: !3089, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !387, retainedNodes: !2026)
!7491 = !DILocation(line: 134, column: 2, scope: !7490)
!7492 = !DILocation(line: 156, column: 1, scope: !7490)
!7493 = !DILocation(line: 0, scope: !393)
!7494 = !DILocation(line: 289, column: 36, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !393, file: !394, line: 285, column: 2)
!7496 = !DILocation(line: 289, column: 42, scope: !7495)
!7497 = !DILocation(line: 300, column: 36, scope: !393)
!7498 = !DILocation(line: 301, column: 35, scope: !393)
!7499 = !DILocation(line: 302, column: 37, scope: !393)
!7500 = !DILocation(line: 311, column: 2, scope: !393)
!7501 = !DILocation(line: 316, column: 1, scope: !393)
!7502 = distinct !DISubprogram(name: "arm_core_mpu_enable", scope: !563, file: !563, line: 180, type: !3089, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2026)
!7503 = !DILocation(line: 188, column: 12, scope: !7502)
!7504 = !DILocation(line: 271, column: 3, scope: !7505, inlinedAt: !7506)
!7505 = distinct !DISubprogram(name: "__DSB", scope: !6422, file: !6422, line: 269, type: !3089, scopeLine: 270, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2026)
!7506 = distinct !DILocation(line: 192, column: 2, scope: !7502)
!7507 = !{i64 3668262}
!7508 = !DILocation(line: 260, column: 3, scope: !7509, inlinedAt: !7510)
!7509 = distinct !DISubprogram(name: "__ISB", scope: !6422, file: !6422, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2026)
!7510 = distinct !DILocation(line: 193, column: 2, scope: !7502)
!7511 = !{i64 3667979}
!7512 = !DILocation(line: 194, column: 1, scope: !7502)
!7513 = distinct !DISubprogram(name: "arm_core_mpu_disable", scope: !563, file: !563, line: 199, type: !3089, scopeLine: 200, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2026)
!7514 = !DILocation(line: 282, column: 3, scope: !7515, inlinedAt: !7516)
!7515 = distinct !DISubprogram(name: "__DMB", scope: !6422, file: !6422, line: 280, type: !3089, scopeLine: 281, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !2026)
!7516 = distinct !DILocation(line: 202, column: 2, scope: !7513)
!7517 = !{i64 3668538}
!7518 = !DILocation(line: 205, column: 12, scope: !7513)
!7519 = !DILocation(line: 206, column: 1, scope: !7513)
!7520 = distinct !DISubprogram(name: "arm_core_mpu_configure_static_mpu_regions", scope: !563, file: !563, line: 275, type: !7521, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7534)
!7521 = !DISubroutineType(types: !7522)
!7522 = !{null, !7523, !1808, !6699, !6699}
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7524, size: 32)
!7524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7525)
!7525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_arm_mpu_partition", file: !507, line: 52, size: 96, elements: !7526)
!7526 = !{!7527, !7528, !7529}
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7525, file: !507, line: 53, baseType: !22, size: 32)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7525, file: !507, line: 54, baseType: !232, size: 32, offset: 32)
!7529 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7525, file: !507, line: 55, baseType: !7530, size: 32, offset: 64)
!7530 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_mem_partition_attr_t", file: !513, line: 151, baseType: !7531)
!7531 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 149, size: 32, elements: !7532)
!7532 = !{!7533}
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "rasr_attr", scope: !7531, file: !513, line: 150, baseType: !110, size: 32)
!7534 = !{!7535, !7536, !7537, !7538}
!7535 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7520, file: !563, line: 276, type: !7523)
!7536 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7520, file: !563, line: 276, type: !1808)
!7537 = !DILocalVariable(name: "background_area_start", arg: 3, scope: !7520, file: !563, line: 277, type: !6699)
!7538 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7520, file: !563, line: 277, type: !6699)
!7539 = !DILocation(line: 0, scope: !7520)
!7540 = !DILocation(line: 279, column: 6, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7520, file: !563, line: 279, column: 6)
!7542 = !DILocation(line: 280, column: 57, scope: !7541)
!7543 = !DILocation(line: 279, column: 6, scope: !7520)
!7544 = !DILocation(line: 282, column: 3, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !563, line: 282, column: 3)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !563, line: 282, column: 3)
!7547 = distinct !DILexicalBlock(scope: !7548, file: !563, line: 282, column: 3)
!7548 = distinct !DILexicalBlock(scope: !7541, file: !563, line: 280, column: 69)
!7549 = !DILocation(line: 285, column: 1, scope: !7520)
!7550 = distinct !DISubprogram(name: "mpu_configure_static_mpu_regions", scope: !7551, file: !7551, line: 220, type: !7552, scopeLine: 224, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7554)
!7551 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/arm_mpu_v7_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7552 = !DISubroutineType(types: !7553)
!7553 = !{!109, !7523, !1808, !6699, !6699}
!7554 = !{!7555, !7556, !7557, !7558, !7559}
!7555 = !DILocalVariable(name: "static_regions", arg: 1, scope: !7550, file: !7551, line: 221, type: !7523)
!7556 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7550, file: !7551, line: 221, type: !1808)
!7557 = !DILocalVariable(name: "background_area_base", arg: 3, scope: !7550, file: !7551, line: 222, type: !6699)
!7558 = !DILocalVariable(name: "background_area_end", arg: 4, scope: !7550, file: !7551, line: 223, type: !6699)
!7559 = !DILocalVariable(name: "mpu_reg_index", scope: !7550, file: !7551, line: 225, type: !109)
!7560 = !DILocation(line: 0, scope: !7550)
!7561 = !DILocation(line: 225, column: 22, scope: !7550)
!7562 = !DILocation(line: 233, column: 18, scope: !7550)
!7563 = !DILocation(line: 236, column: 23, scope: !7550)
!7564 = !DILocation(line: 236, column: 21, scope: !7550)
!7565 = !DILocation(line: 238, column: 2, scope: !7550)
!7566 = distinct !DISubprogram(name: "mpu_configure_regions", scope: !563, file: !563, line: 105, type: !7567, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7569)
!7567 = !DISubroutineType(types: !7568)
!7568 = !{!109, !7523, !178, !178, !347}
!7569 = !{!7570, !7571, !7572, !7573, !7574, !7575}
!7570 = !DILocalVariable(name: "regions", arg: 1, scope: !7566, file: !563, line: 106, type: !7523)
!7571 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7566, file: !563, line: 106, type: !178)
!7572 = !DILocalVariable(name: "start_reg_index", arg: 3, scope: !7566, file: !563, line: 106, type: !178)
!7573 = !DILocalVariable(name: "do_sanity_check", arg: 4, scope: !7566, file: !563, line: 107, type: !347)
!7574 = !DILocalVariable(name: "i", scope: !7566, file: !563, line: 109, type: !109)
!7575 = !DILocalVariable(name: "reg_index", scope: !7566, file: !563, line: 110, type: !109)
!7576 = !DILocation(line: 0, scope: !7566)
!7577 = !DILocation(line: 110, column: 18, scope: !7566)
!7578 = !DILocation(line: 112, column: 16, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7580, file: !563, line: 112, column: 2)
!7580 = distinct !DILexicalBlock(scope: !7566, file: !563, line: 112, column: 2)
!7581 = !DILocation(line: 112, column: 2, scope: !7580)
!7582 = !DILocation(line: 113, column: 7, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !563, line: 113, column: 7)
!7584 = distinct !DILexicalBlock(scope: !7579, file: !563, line: 112, column: 36)
!7585 = !DILocation(line: 113, column: 18, scope: !7583)
!7586 = !DILocation(line: 113, column: 23, scope: !7583)
!7587 = !DILocation(line: 113, column: 7, scope: !7584)
!7588 = !DILocation(line: 118, column: 23, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7584, file: !563, line: 118, column: 7)
!7590 = !DILocation(line: 119, column: 7, scope: !7589)
!7591 = !DILocation(line: 118, column: 7, scope: !7584)
!7592 = !DILocation(line: 120, column: 4, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7594, file: !563, line: 120, column: 4)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !563, line: 120, column: 4)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !563, line: 120, column: 4)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !563, line: 120, column: 4)
!7597 = distinct !DILexicalBlock(scope: !7589, file: !563, line: 119, column: 45)
!7598 = !DILocation(line: 121, column: 4, scope: !7597)
!7599 = !DILocation(line: 124, column: 36, scope: !7584)
!7600 = !DILocation(line: 124, column: 15, scope: !7584)
!7601 = !DILocation(line: 126, column: 17, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7584, file: !563, line: 126, column: 7)
!7603 = !DILocation(line: 126, column: 7, scope: !7584)
!7604 = !DILocation(line: 131, column: 12, scope: !7584)
!7605 = !DILocation(line: 132, column: 2, scope: !7584)
!7606 = !DILocation(line: 112, column: 32, scope: !7579)
!7607 = distinct !{!7607, !7581, !7608}
!7608 = !DILocation(line: 132, column: 2, scope: !7580)
!7609 = !DILocation(line: 135, column: 1, scope: !7566)
!7610 = distinct !DISubprogram(name: "mpu_partition_is_valid", scope: !7551, file: !7551, line: 63, type: !7611, scopeLine: 64, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7613)
!7611 = !DISubroutineType(types: !7612)
!7612 = !{!109, !7523}
!7613 = !{!7614, !7615}
!7614 = !DILocalVariable(name: "part", arg: 1, scope: !7610, file: !7551, line: 63, type: !7523)
!7615 = !DILocalVariable(name: "partition_is_valid", scope: !7610, file: !7551, line: 70, type: !109)
!7616 = !DILocation(line: 0, scope: !7610)
!7617 = !DILocation(line: 71, column: 11, scope: !7610)
!7618 = !DILocation(line: 71, column: 37, scope: !7610)
!7619 = !{i32 0, i32 33}
!7620 = !DILocation(line: 72, column: 3, scope: !7610)
!7621 = !DILocation(line: 71, column: 30, scope: !7610)
!7622 = !DILocation(line: 75, column: 11, scope: !7610)
!7623 = !DILocation(line: 75, column: 17, scope: !7610)
!7624 = !DILocation(line: 75, column: 38, scope: !7610)
!7625 = !DILocation(line: 77, column: 2, scope: !7610)
!7626 = distinct !DISubprogram(name: "mpu_configure_region", scope: !563, file: !563, line: 79, type: !7627, scopeLine: 81, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7629)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{!109, !1808, !7523}
!7629 = !{!7630, !7631, !7632}
!7630 = !DILocalVariable(name: "index", arg: 1, scope: !7626, file: !563, line: 79, type: !1808)
!7631 = !DILocalVariable(name: "new_region", arg: 2, scope: !7626, file: !563, line: 80, type: !7523)
!7632 = !DILocalVariable(name: "region_conf", scope: !7626, file: !563, line: 82, type: !552)
!7633 = !DILocation(line: 0, scope: !7626)
!7634 = !DILocation(line: 82, column: 2, scope: !7626)
!7635 = !DILocation(line: 82, column: 24, scope: !7626)
!7636 = !DILocation(line: 87, column: 33, scope: !7626)
!7637 = !DILocation(line: 87, column: 14, scope: !7626)
!7638 = !DILocation(line: 87, column: 19, scope: !7626)
!7639 = !DILocation(line: 91, column: 55, scope: !7626)
!7640 = !DILocation(line: 92, column: 16, scope: !7626)
!7641 = !DILocation(line: 92, column: 53, scope: !7626)
!7642 = !DILocation(line: 91, column: 2, scope: !7626)
!7643 = !DILocation(line: 95, column: 9, scope: !7626)
!7644 = !DILocation(line: 97, column: 1, scope: !7626)
!7645 = !DILocation(line: 95, column: 2, scope: !7626)
!7646 = distinct !DISubprogram(name: "get_region_attr_from_mpu_partition_info", scope: !7551, file: !7551, line: 113, type: !7647, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7652)
!7647 = !DISubroutineType(types: !7648)
!7648 = !{null, !7649, !7650, !110, !110}
!7649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 32)
!7650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7651, size: 32)
!7651 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7530)
!7652 = !{!7653, !7654, !7655, !7656}
!7653 = !DILocalVariable(name: "p_attr", arg: 1, scope: !7646, file: !7551, line: 114, type: !7649)
!7654 = !DILocalVariable(name: "attr", arg: 2, scope: !7646, file: !7551, line: 115, type: !7650)
!7655 = !DILocalVariable(name: "base", arg: 3, scope: !7646, file: !7551, line: 115, type: !110)
!7656 = !DILocalVariable(name: "size", arg: 4, scope: !7646, file: !7551, line: 115, type: !110)
!7657 = !DILocation(line: 0, scope: !7646)
!7658 = !DILocation(line: 127, column: 23, scope: !7646)
!7659 = !DILocation(line: 127, column: 35, scope: !7646)
!7660 = !DILocation(line: 127, column: 33, scope: !7646)
!7661 = !DILocation(line: 127, column: 10, scope: !7646)
!7662 = !DILocation(line: 127, column: 15, scope: !7646)
!7663 = !DILocation(line: 129, column: 1, scope: !7646)
!7664 = distinct !DISubprogram(name: "region_allocate_and_init", scope: !563, file: !563, line: 57, type: !7665, scopeLine: 59, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7667)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{!109, !1808, !550}
!7667 = !{!7668, !7669}
!7668 = !DILocalVariable(name: "index", arg: 1, scope: !7664, file: !563, line: 57, type: !1808)
!7669 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7664, file: !563, line: 58, type: !550)
!7670 = !DILocation(line: 0, scope: !7664)
!7671 = !DILocation(line: 61, column: 6, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7664, file: !563, line: 61, column: 6)
!7673 = !DILocation(line: 61, column: 12, scope: !7672)
!7674 = !DILocation(line: 61, column: 6, scope: !7664)
!7675 = !DILocation(line: 64, column: 3, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !563, line: 64, column: 3)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !563, line: 64, column: 3)
!7678 = distinct !DILexicalBlock(scope: !7679, file: !563, line: 64, column: 3)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !563, line: 64, column: 3)
!7680 = distinct !DILexicalBlock(scope: !7672, file: !563, line: 61, column: 40)
!7681 = !DILocation(line: 65, column: 3, scope: !7680)
!7682 = !DILocation(line: 71, column: 2, scope: !7664)
!7683 = !DILocation(line: 73, column: 2, scope: !7664)
!7684 = !DILocation(line: 74, column: 1, scope: !7664)
!7685 = distinct !DISubprogram(name: "region_init", scope: !7551, file: !7551, line: 29, type: !7686, scopeLine: 31, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7688)
!7686 = !DISubroutineType(types: !7687)
!7687 = !{null, !6699, !550}
!7688 = !{!7689, !7690}
!7689 = !DILocalVariable(name: "index", arg: 1, scope: !7685, file: !7551, line: 29, type: !6699)
!7690 = !DILocalVariable(name: "region_conf", arg: 2, scope: !7685, file: !7551, line: 30, type: !550)
!7691 = !DILocation(line: 0, scope: !7685)
!7692 = !DILocation(line: 33, column: 2, scope: !7685)
!7693 = !DILocation(line: 47, column: 28, scope: !7685)
!7694 = !DILocation(line: 47, column: 33, scope: !7685)
!7695 = !DILocation(line: 48, column: 26, scope: !7685)
!7696 = !DILocation(line: 47, column: 12, scope: !7685)
!7697 = !DILocation(line: 49, column: 32, scope: !7685)
!7698 = !DILocation(line: 49, column: 37, scope: !7685)
!7699 = !DILocation(line: 49, column: 12, scope: !7685)
!7700 = !DILocation(line: 53, column: 1, scope: !7685)
!7701 = distinct !DISubprogram(name: "set_region_number", scope: !7702, file: !7702, line: 32, type: !6519, scopeLine: 33, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7703)
!7702 = !DIFile(filename: "zephyr/arch/arm/core/aarch32/mpu/cortex_m/arm_mpu_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7703 = !{!7704}
!7704 = !DILocalVariable(name: "index", arg: 1, scope: !7701, file: !7702, line: 32, type: !110)
!7705 = !DILocation(line: 0, scope: !7701)
!7706 = !DILocation(line: 34, column: 11, scope: !7701)
!7707 = !DILocation(line: 35, column: 1, scope: !7701)
!7708 = distinct !DISubprogram(name: "size_to_mpu_rasr_size", scope: !7551, file: !7551, line: 88, type: !7709, scopeLine: 89, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7711)
!7709 = !DISubroutineType(types: !7710)
!7710 = !{!110, !110}
!7711 = !{!7712}
!7712 = !DILocalVariable(name: "size", arg: 1, scope: !7708, file: !7551, line: 88, type: !110)
!7713 = !DILocation(line: 0, scope: !7708)
!7714 = !DILocation(line: 91, column: 11, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7708, file: !7551, line: 91, column: 6)
!7716 = !DILocation(line: 91, column: 6, scope: !7708)
!7717 = !DILocation(line: 100, column: 11, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7708, file: !7551, line: 100, column: 6)
!7719 = !DILocation(line: 100, column: 6, scope: !7708)
!7720 = !DILocation(line: 104, column: 35, scope: !7708)
!7721 = !DILocation(line: 104, column: 16, scope: !7708)
!7722 = !DILocation(line: 104, column: 50, scope: !7708)
!7723 = !DILocation(line: 104, column: 72, scope: !7708)
!7724 = !DILocation(line: 104, column: 2, scope: !7708)
!7725 = !DILocation(line: 106, column: 1, scope: !7708)
!7726 = distinct !DISubprogram(name: "arm_core_mpu_configure_dynamic_mpu_regions", scope: !563, file: !563, line: 307, type: !7727, scopeLine: 309, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7729)
!7727 = !DISubroutineType(types: !7728)
!7728 = !{null, !7523, !178}
!7729 = !{!7730, !7731}
!7730 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7726, file: !563, line: 308, type: !7523)
!7731 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7726, file: !563, line: 308, type: !178)
!7732 = !DILocation(line: 0, scope: !7726)
!7733 = !DILocation(line: 310, column: 6, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7726, file: !563, line: 310, column: 6)
!7735 = !DILocation(line: 311, column: 3, scope: !7734)
!7736 = !DILocation(line: 310, column: 6, scope: !7726)
!7737 = !DILocation(line: 313, column: 3, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7739, file: !563, line: 313, column: 3)
!7739 = distinct !DILexicalBlock(scope: !7740, file: !563, line: 313, column: 3)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !563, line: 313, column: 3)
!7741 = distinct !DILexicalBlock(scope: !7734, file: !563, line: 311, column: 15)
!7742 = !DILocation(line: 316, column: 1, scope: !7726)
!7743 = distinct !DISubprogram(name: "mpu_configure_dynamic_mpu_regions", scope: !7551, file: !7551, line: 249, type: !7744, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7746)
!7744 = !DISubroutineType(types: !7745)
!7745 = !{!109, !7523, !178}
!7746 = !{!7747, !7748, !7749, !7750}
!7747 = !DILocalVariable(name: "dynamic_regions", arg: 1, scope: !7743, file: !7551, line: 250, type: !7523)
!7748 = !DILocalVariable(name: "regions_num", arg: 2, scope: !7743, file: !7551, line: 250, type: !178)
!7749 = !DILocalVariable(name: "mpu_reg_index", scope: !7743, file: !7551, line: 252, type: !109)
!7750 = !DILocalVariable(name: "i", scope: !7751, file: !7551, line: 264, type: !109)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !7551, line: 264, column: 3)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !7551, line: 261, column: 32)
!7753 = distinct !DILexicalBlock(scope: !7743, file: !7551, line: 261, column: 6)
!7754 = !DILocation(line: 0, scope: !7743)
!7755 = !DILocation(line: 252, column: 22, scope: !7743)
!7756 = !DILocation(line: 258, column: 18, scope: !7743)
!7757 = !DILocation(line: 261, column: 20, scope: !7753)
!7758 = !DILocation(line: 261, column: 6, scope: !7743)
!7759 = !DILocation(line: 0, scope: !7751)
!7760 = !DILocation(line: 265, column: 4, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7762, file: !7551, line: 264, column: 59)
!7762 = distinct !DILexicalBlock(scope: !7751, file: !7551, line: 264, column: 3)
!7763 = !DILocation(line: 264, column: 55, scope: !7762)
!7764 = !DILocation(line: 264, column: 33, scope: !7762)
!7765 = !DILocation(line: 264, column: 3, scope: !7751)
!7766 = distinct !{!7766, !7765, !7767}
!7767 = !DILocation(line: 266, column: 3, scope: !7751)
!7768 = !DILocation(line: 269, column: 2, scope: !7743)
!7769 = distinct !DISubprogram(name: "ARM_MPU_ClrRegion", scope: !7770, file: !7770, line: 218, type: !6519, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7771)
!7770 = !DIFile(filename: "modules/hal/cmsis/CMSIS/Core/Include/mpu_armv7.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7771 = !{!7772}
!7772 = !DILocalVariable(name: "rnr", arg: 1, scope: !7769, file: !7770, line: 218, type: !110)
!7773 = !DILocation(line: 0, scope: !7769)
!7774 = !DILocation(line: 220, column: 12, scope: !7769)
!7775 = !DILocation(line: 221, column: 13, scope: !7769)
!7776 = !DILocation(line: 222, column: 1, scope: !7769)
!7777 = distinct !DISubprogram(name: "z_arm_mpu_init", scope: !563, file: !563, line: 326, type: !7778, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !530, retainedNodes: !7780)
!7778 = !DISubroutineType(types: !7779)
!7779 = !{!109}
!7780 = !{!7781}
!7781 = !DILocalVariable(name: "r_index", scope: !7777, file: !563, line: 328, type: !110)
!7782 = !DILocation(line: 330, column: 17, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7777, file: !563, line: 330, column: 6)
!7784 = !DILocation(line: 330, column: 29, scope: !7783)
!7785 = !DILocation(line: 330, column: 6, scope: !7777)
!7786 = !DILocation(line: 337, column: 3, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7788, file: !563, line: 337, column: 3)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !563, line: 337, column: 3)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !563, line: 337, column: 3)
!7790 = distinct !DILexicalBlock(scope: !7783, file: !563, line: 330, column: 50)
!7791 = !DILocation(line: 347, column: 2, scope: !7777)
!7792 = !DILocation(line: 0, scope: !7777)
!7793 = !DILocation(line: 364, column: 29, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !563, line: 364, column: 2)
!7795 = distinct !DILexicalBlock(scope: !7777, file: !563, line: 364, column: 2)
!7796 = !DILocation(line: 364, column: 2, scope: !7795)
!7797 = !DILocation(line: 365, column: 25, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7794, file: !563, line: 364, column: 66)
!7799 = !DILocation(line: 365, column: 3, scope: !7798)
!7800 = !DILocation(line: 364, column: 62, scope: !7794)
!7801 = distinct !{!7801, !7796, !7802}
!7802 = !DILocation(line: 366, column: 2, scope: !7795)
!7803 = !DILocation(line: 369, column: 23, scope: !7777)
!7804 = !DILocation(line: 369, column: 21, scope: !7777)
!7805 = !DILocation(line: 372, column: 2, scope: !7777)
!7806 = !DILocation(line: 433, column: 2, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !563, line: 433, column: 2)
!7808 = distinct !DILexicalBlock(scope: !7777, file: !563, line: 433, column: 2)
!7809 = !DILocation(line: 433, column: 2, scope: !7808)
!7810 = !DILocation(line: 433, column: 2, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7807, file: !563, line: 433, column: 2)
!7812 = !DILocation(line: 444, column: 1, scope: !7777)
!7813 = distinct !DISubprogram(name: "strcpy", scope: !7814, file: !7814, line: 20, type: !7815, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7819)
!7814 = !DIFile(filename: "zephyr/lib/libc/minimal/source/string/string.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!7815 = !DISubroutineType(types: !7816)
!7816 = !{!285, !7817, !7818}
!7817 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !285)
!7818 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !279)
!7819 = !{!7820, !7821, !7822}
!7820 = !DILocalVariable(name: "d", arg: 1, scope: !7813, file: !7814, line: 20, type: !7817)
!7821 = !DILocalVariable(name: "s", arg: 2, scope: !7813, file: !7814, line: 20, type: !7818)
!7822 = !DILocalVariable(name: "dest", scope: !7813, file: !7814, line: 22, type: !285)
!7823 = !DILocation(line: 0, scope: !7813)
!7824 = !DILocation(line: 24, column: 9, scope: !7813)
!7825 = !DILocation(line: 24, column: 12, scope: !7813)
!7826 = !DILocation(line: 24, column: 2, scope: !7813)
!7827 = !DILocation(line: 25, column: 6, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7813, file: !7814, line: 24, column: 21)
!7829 = !DILocation(line: 26, column: 4, scope: !7828)
!7830 = !DILocation(line: 27, column: 4, scope: !7828)
!7831 = distinct !{!7831, !7826, !7832}
!7832 = !DILocation(line: 28, column: 2, scope: !7813)
!7833 = !DILocation(line: 30, column: 5, scope: !7813)
!7834 = !DILocation(line: 32, column: 2, scope: !7813)
!7835 = distinct !DISubprogram(name: "strncpy", scope: !7814, file: !7814, line: 42, type: !7836, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7838)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{!285, !7817, !7818, !232}
!7838 = !{!7839, !7840, !7841, !7842}
!7839 = !DILocalVariable(name: "d", arg: 1, scope: !7835, file: !7814, line: 42, type: !7817)
!7840 = !DILocalVariable(name: "s", arg: 2, scope: !7835, file: !7814, line: 42, type: !7818)
!7841 = !DILocalVariable(name: "n", arg: 3, scope: !7835, file: !7814, line: 42, type: !232)
!7842 = !DILocalVariable(name: "dest", scope: !7835, file: !7814, line: 44, type: !285)
!7843 = !DILocation(line: 0, scope: !7835)
!7844 = !DILocation(line: 46, column: 12, scope: !7835)
!7845 = !DILocation(line: 46, column: 17, scope: !7835)
!7846 = !DILocation(line: 46, column: 20, scope: !7835)
!7847 = !DILocation(line: 46, column: 23, scope: !7835)
!7848 = !DILocation(line: 46, column: 2, scope: !7835)
!7849 = !DILocation(line: 47, column: 6, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7835, file: !7814, line: 46, column: 32)
!7851 = !DILocation(line: 48, column: 4, scope: !7850)
!7852 = !DILocation(line: 49, column: 4, scope: !7850)
!7853 = !DILocation(line: 50, column: 4, scope: !7850)
!7854 = distinct !{!7854, !7848, !7855}
!7855 = !DILocation(line: 51, column: 2, scope: !7835)
!7856 = !DILocation(line: 54, column: 6, scope: !7857)
!7857 = distinct !DILexicalBlock(scope: !7835, file: !7814, line: 53, column: 16)
!7858 = !DILocation(line: 55, column: 4, scope: !7857)
!7859 = !DILocation(line: 56, column: 4, scope: !7857)
!7860 = !DILocation(line: 53, column: 11, scope: !7835)
!7861 = !DILocation(line: 53, column: 2, scope: !7835)
!7862 = distinct !{!7862, !7861, !7863}
!7863 = !DILocation(line: 57, column: 2, scope: !7835)
!7864 = !DILocation(line: 59, column: 2, scope: !7835)
!7865 = distinct !DISubprogram(name: "strchr", scope: !7814, file: !7814, line: 69, type: !7866, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7868)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!285, !279, !109}
!7868 = !{!7869, !7870, !7871}
!7869 = !DILocalVariable(name: "s", arg: 1, scope: !7865, file: !7814, line: 69, type: !279)
!7870 = !DILocalVariable(name: "c", arg: 2, scope: !7865, file: !7814, line: 69, type: !109)
!7871 = !DILocalVariable(name: "tmp", scope: !7865, file: !7814, line: 71, type: !148)
!7872 = !DILocation(line: 0, scope: !7865)
!7873 = !DILocation(line: 73, column: 2, scope: !7865)
!7874 = !DILocation(line: 73, column: 10, scope: !7865)
!7875 = !DILocation(line: 73, column: 13, scope: !7865)
!7876 = !DILocation(line: 73, column: 21, scope: !7865)
!7877 = !DILocation(line: 74, column: 4, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7865, file: !7814, line: 73, column: 38)
!7879 = distinct !{!7879, !7873, !7880}
!7880 = !DILocation(line: 75, column: 2, scope: !7865)
!7881 = !DILocation(line: 77, column: 9, scope: !7865)
!7882 = !DILocation(line: 77, column: 2, scope: !7865)
!7883 = distinct !DISubprogram(name: "strrchr", scope: !7814, file: !7814, line: 87, type: !7866, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7884)
!7884 = !{!7885, !7886, !7887}
!7885 = !DILocalVariable(name: "s", arg: 1, scope: !7883, file: !7814, line: 87, type: !279)
!7886 = !DILocalVariable(name: "c", arg: 2, scope: !7883, file: !7814, line: 87, type: !109)
!7887 = !DILocalVariable(name: "match", scope: !7883, file: !7814, line: 89, type: !285)
!7888 = !DILocation(line: 0, scope: !7883)
!7889 = !DILocation(line: 91, column: 2, scope: !7883)
!7890 = !DILocation(line: 92, column: 7, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7892, file: !7814, line: 92, column: 7)
!7892 = distinct !DILexicalBlock(scope: !7883, file: !7814, line: 91, column: 5)
!7893 = !DILocation(line: 92, column: 10, scope: !7891)
!7894 = !DILocation(line: 92, column: 7, scope: !7892)
!7895 = !DILocation(line: 95, column: 13, scope: !7883)
!7896 = !DILocation(line: 95, column: 2, scope: !7892)
!7897 = distinct !{!7897, !7889, !7898}
!7898 = !DILocation(line: 95, column: 15, scope: !7883)
!7899 = !DILocation(line: 97, column: 2, scope: !7883)
!7900 = distinct !DISubprogram(name: "strlen", scope: !7814, file: !7814, line: 107, type: !7901, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7903)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!232, !279}
!7903 = !{!7904, !7905}
!7904 = !DILocalVariable(name: "s", arg: 1, scope: !7900, file: !7814, line: 107, type: !279)
!7905 = !DILocalVariable(name: "n", scope: !7900, file: !7814, line: 109, type: !232)
!7906 = !DILocation(line: 0, scope: !7900)
!7907 = !DILocation(line: 111, column: 9, scope: !7900)
!7908 = !DILocation(line: 111, column: 12, scope: !7900)
!7909 = !DILocation(line: 111, column: 2, scope: !7900)
!7910 = !DILocation(line: 112, column: 4, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7900, file: !7814, line: 111, column: 21)
!7912 = !DILocation(line: 113, column: 4, scope: !7911)
!7913 = distinct !{!7913, !7909, !7914}
!7914 = !DILocation(line: 114, column: 2, scope: !7900)
!7915 = !DILocation(line: 116, column: 2, scope: !7900)
!7916 = distinct !DISubprogram(name: "strnlen", scope: !7814, file: !7814, line: 126, type: !7917, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7919)
!7917 = !DISubroutineType(types: !7918)
!7918 = !{!232, !279, !232}
!7919 = !{!7920, !7921, !7922}
!7920 = !DILocalVariable(name: "s", arg: 1, scope: !7916, file: !7814, line: 126, type: !279)
!7921 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7916, file: !7814, line: 126, type: !232)
!7922 = !DILocalVariable(name: "n", scope: !7916, file: !7814, line: 128, type: !232)
!7923 = !DILocation(line: 0, scope: !7916)
!7924 = !DILocation(line: 130, column: 9, scope: !7916)
!7925 = !DILocation(line: 130, column: 12, scope: !7916)
!7926 = !DILocation(line: 130, column: 20, scope: !7916)
!7927 = !DILocation(line: 130, column: 2, scope: !7916)
!7928 = !DILocation(line: 131, column: 4, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7916, file: !7814, line: 130, column: 35)
!7930 = !DILocation(line: 132, column: 4, scope: !7929)
!7931 = distinct !{!7931, !7927, !7932}
!7932 = !DILocation(line: 133, column: 2, scope: !7916)
!7933 = !DILocation(line: 135, column: 2, scope: !7916)
!7934 = distinct !DISubprogram(name: "strcmp", scope: !7814, file: !7814, line: 145, type: !7935, scopeLine: 146, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7937)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!109, !279, !279}
!7937 = !{!7938, !7939}
!7938 = !DILocalVariable(name: "s1", arg: 1, scope: !7934, file: !7814, line: 145, type: !279)
!7939 = !DILocalVariable(name: "s2", arg: 2, scope: !7934, file: !7814, line: 145, type: !279)
!7940 = !DILocation(line: 0, scope: !7934)
!7941 = !DILocation(line: 147, column: 10, scope: !7934)
!7942 = !DILocation(line: 147, column: 17, scope: !7934)
!7943 = !DILocation(line: 147, column: 14, scope: !7934)
!7944 = !DILocation(line: 147, column: 22, scope: !7934)
!7945 = !DILocation(line: 148, column: 5, scope: !7946)
!7946 = distinct !DILexicalBlock(scope: !7934, file: !7814, line: 147, column: 40)
!7947 = !DILocation(line: 149, column: 5, scope: !7946)
!7948 = distinct !{!7948, !7949, !7950}
!7949 = !DILocation(line: 147, column: 2, scope: !7934)
!7950 = !DILocation(line: 150, column: 2, scope: !7934)
!7951 = !DILocation(line: 152, column: 9, scope: !7934)
!7952 = !DILocation(line: 152, column: 15, scope: !7934)
!7953 = !DILocation(line: 152, column: 13, scope: !7934)
!7954 = !DILocation(line: 152, column: 2, scope: !7934)
!7955 = distinct !DISubprogram(name: "strncmp", scope: !7814, file: !7814, line: 162, type: !7956, scopeLine: 163, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7958)
!7956 = !DISubroutineType(types: !7957)
!7957 = !{!109, !279, !279, !232}
!7958 = !{!7959, !7960, !7961}
!7959 = !DILocalVariable(name: "s1", arg: 1, scope: !7955, file: !7814, line: 162, type: !279)
!7960 = !DILocalVariable(name: "s2", arg: 2, scope: !7955, file: !7814, line: 162, type: !279)
!7961 = !DILocalVariable(name: "n", arg: 3, scope: !7955, file: !7814, line: 162, type: !232)
!7962 = !DILocation(line: 0, scope: !7955)
!7963 = !DILocation(line: 164, column: 17, scope: !7955)
!7964 = !DILocation(line: 164, column: 21, scope: !7955)
!7965 = !DILocation(line: 164, column: 28, scope: !7955)
!7966 = !DILocation(line: 164, column: 25, scope: !7955)
!7967 = !DILocation(line: 164, column: 33, scope: !7955)
!7968 = !DILocation(line: 165, column: 5, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7955, file: !7814, line: 164, column: 51)
!7970 = !DILocation(line: 166, column: 5, scope: !7969)
!7971 = !DILocation(line: 167, column: 4, scope: !7969)
!7972 = distinct !{!7972, !7973, !7974}
!7973 = !DILocation(line: 164, column: 2, scope: !7955)
!7974 = !DILocation(line: 168, column: 2, scope: !7955)
!7975 = !DILocation(line: 170, column: 25, scope: !7955)
!7976 = !DILocation(line: 170, column: 31, scope: !7955)
!7977 = !DILocation(line: 170, column: 29, scope: !7955)
!7978 = !DILocation(line: 170, column: 9, scope: !7955)
!7979 = !DILocation(line: 170, column: 2, scope: !7955)
!7980 = distinct !DISubprogram(name: "strtok_r", scope: !7814, file: !7814, line: 180, type: !7981, scopeLine: 181, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !7983)
!7981 = !DISubroutineType(types: !7982)
!7982 = !{!285, !285, !279, !284}
!7983 = !{!7984, !7985, !7986, !7987, !7988}
!7984 = !DILocalVariable(name: "str", arg: 1, scope: !7980, file: !7814, line: 180, type: !285)
!7985 = !DILocalVariable(name: "sep", arg: 2, scope: !7980, file: !7814, line: 180, type: !279)
!7986 = !DILocalVariable(name: "state", arg: 3, scope: !7980, file: !7814, line: 180, type: !284)
!7987 = !DILocalVariable(name: "start", scope: !7980, file: !7814, line: 182, type: !285)
!7988 = !DILocalVariable(name: "end", scope: !7980, file: !7814, line: 182, type: !285)
!7989 = !DILocation(line: 0, scope: !7980)
!7990 = !DILocation(line: 184, column: 10, scope: !7980)
!7991 = !DILocation(line: 184, column: 22, scope: !7980)
!7992 = !DILocation(line: 187, column: 9, scope: !7980)
!7993 = !DILocation(line: 187, column: 16, scope: !7980)
!7994 = !DILocation(line: 187, column: 19, scope: !7980)
!7995 = !DILocation(line: 187, column: 2, scope: !7980)
!7996 = !DILocation(line: 188, column: 8, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7980, file: !7814, line: 187, column: 40)
!7998 = distinct !{!7998, !7995, !7999}
!7999 = !DILocation(line: 189, column: 2, scope: !7980)
!8000 = !DILocation(line: 198, column: 9, scope: !7980)
!8001 = !DILocation(line: 198, column: 18, scope: !7980)
!8002 = !DILocation(line: 198, column: 17, scope: !7980)
!8003 = !DILocation(line: 198, column: 2, scope: !7980)
!8004 = !DILocation(line: 199, column: 6, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7980, file: !7814, line: 198, column: 37)
!8006 = !DILocation(line: 198, column: 14, scope: !7980)
!8007 = distinct !{!8007, !8003, !8008}
!8008 = !DILocation(line: 200, column: 2, scope: !7980)
!8009 = !DILocation(line: 203, column: 8, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8011, file: !7814, line: 202, column: 20)
!8011 = distinct !DILexicalBlock(scope: !7980, file: !7814, line: 202, column: 6)
!8012 = !DILocation(line: 204, column: 16, scope: !8010)
!8013 = !DILocation(line: 205, column: 2, scope: !8010)
!8014 = !DILocation(line: 210, column: 1, scope: !7980)
!8015 = distinct !DISubprogram(name: "strcat", scope: !7814, file: !7814, line: 212, type: !7815, scopeLine: 213, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !8016)
!8016 = !{!8017, !8018}
!8017 = !DILocalVariable(name: "dest", arg: 1, scope: !8015, file: !7814, line: 212, type: !7817)
!8018 = !DILocalVariable(name: "src", arg: 2, scope: !8015, file: !7814, line: 212, type: !7818)
!8019 = !DILocation(line: 0, scope: !8015)
!8020 = !DILocation(line: 214, column: 16, scope: !8015)
!8021 = !DILocation(line: 214, column: 14, scope: !8015)
!8022 = !DILocation(line: 214, column: 2, scope: !8015)
!8023 = !DILocation(line: 215, column: 2, scope: !8015)
!8024 = distinct !DISubprogram(name: "strncat", scope: !7814, file: !7814, line: 218, type: !7836, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !8025)
!8025 = !{!8026, !8027, !8028, !8029, !8030}
!8026 = !DILocalVariable(name: "dest", arg: 1, scope: !8024, file: !7814, line: 218, type: !7817)
!8027 = !DILocalVariable(name: "src", arg: 2, scope: !8024, file: !7814, line: 218, type: !7818)
!8028 = !DILocalVariable(name: "n", arg: 3, scope: !8024, file: !7814, line: 219, type: !232)
!8029 = !DILocalVariable(name: "orig_dest", scope: !8024, file: !7814, line: 221, type: !285)
!8030 = !DILocalVariable(name: "len", scope: !8024, file: !7814, line: 222, type: !232)
!8031 = !DILocation(line: 0, scope: !8024)
!8032 = !DILocation(line: 222, column: 15, scope: !8024)
!8033 = !DILocation(line: 224, column: 7, scope: !8024)
!8034 = !DILocation(line: 225, column: 14, scope: !8024)
!8035 = !DILocation(line: 225, column: 19, scope: !8024)
!8036 = !DILocation(line: 225, column: 11, scope: !8024)
!8037 = !DILocation(line: 225, column: 23, scope: !8024)
!8038 = !DILocation(line: 225, column: 28, scope: !8024)
!8039 = !DILocation(line: 225, column: 2, scope: !8024)
!8040 = !DILocation(line: 226, column: 17, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8024, file: !7814, line: 225, column: 38)
!8042 = !DILocation(line: 226, column: 8, scope: !8041)
!8043 = !DILocation(line: 226, column: 11, scope: !8041)
!8044 = distinct !{!8044, !8039, !8045}
!8045 = !DILocation(line: 227, column: 2, scope: !8024)
!8046 = !DILocation(line: 228, column: 8, scope: !8024)
!8047 = !DILocation(line: 230, column: 2, scope: !8024)
!8048 = distinct !DISubprogram(name: "memcmp", scope: !7814, file: !7814, line: 239, type: !8049, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !8051)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!109, !13, !13, !232}
!8051 = !{!8052, !8053, !8054, !8055, !8056}
!8052 = !DILocalVariable(name: "m1", arg: 1, scope: !8048, file: !7814, line: 239, type: !13)
!8053 = !DILocalVariable(name: "m2", arg: 2, scope: !8048, file: !7814, line: 239, type: !13)
!8054 = !DILocalVariable(name: "n", arg: 3, scope: !8048, file: !7814, line: 239, type: !232)
!8055 = !DILocalVariable(name: "c1", scope: !8048, file: !7814, line: 241, type: !279)
!8056 = !DILocalVariable(name: "c2", scope: !8048, file: !7814, line: 242, type: !279)
!8057 = !DILocation(line: 0, scope: !8048)
!8058 = !DILocation(line: 244, column: 7, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8048, file: !7814, line: 244, column: 6)
!8060 = !DILocation(line: 244, column: 6, scope: !8048)
!8061 = !DILocation(line: 248, column: 10, scope: !8048)
!8062 = !DILocation(line: 248, column: 14, scope: !8048)
!8063 = !DILocation(line: 248, column: 19, scope: !8048)
!8064 = !DILocation(line: 248, column: 2, scope: !8048)
!8065 = !DILocation(line: 248, column: 23, scope: !8048)
!8066 = !DILocation(line: 248, column: 30, scope: !8048)
!8067 = !DILocation(line: 248, column: 27, scope: !8048)
!8068 = !DILocation(line: 249, column: 5, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8048, file: !7814, line: 248, column: 36)
!8070 = !DILocation(line: 250, column: 5, scope: !8069)
!8071 = distinct !{!8071, !8064, !8072}
!8072 = !DILocation(line: 251, column: 2, scope: !8048)
!8073 = !DILocation(line: 253, column: 9, scope: !8048)
!8074 = !DILocation(line: 253, column: 15, scope: !8048)
!8075 = !DILocation(line: 253, column: 13, scope: !8048)
!8076 = !DILocation(line: 253, column: 2, scope: !8048)
!8077 = !DILocation(line: 254, column: 1, scope: !8048)
!8078 = distinct !DISubprogram(name: "memmove", scope: !7814, file: !7814, line: 263, type: !8079, scopeLine: 264, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!107, !107, !13, !232}
!8081 = !{!8082, !8083, !8084, !8085, !8086}
!8082 = !DILocalVariable(name: "d", arg: 1, scope: !8078, file: !7814, line: 263, type: !107)
!8083 = !DILocalVariable(name: "s", arg: 2, scope: !8078, file: !7814, line: 263, type: !13)
!8084 = !DILocalVariable(name: "n", arg: 3, scope: !8078, file: !7814, line: 263, type: !232)
!8085 = !DILocalVariable(name: "dest", scope: !8078, file: !7814, line: 265, type: !285)
!8086 = !DILocalVariable(name: "src", scope: !8078, file: !7814, line: 266, type: !279)
!8087 = !DILocation(line: 0, scope: !8078)
!8088 = !DILocation(line: 268, column: 21, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8078, file: !7814, line: 268, column: 6)
!8090 = !DILocation(line: 268, column: 28, scope: !8089)
!8091 = !DILocation(line: 268, column: 6, scope: !8078)
!8092 = !DILocation(line: 280, column: 12, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8089, file: !7814, line: 278, column: 9)
!8094 = !DILocation(line: 280, column: 3, scope: !8093)
!8095 = !DILocation(line: 275, column: 5, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !7814, line: 274, column: 17)
!8097 = distinct !DILexicalBlock(scope: !8089, file: !7814, line: 268, column: 33)
!8098 = !DILocation(line: 276, column: 14, scope: !8096)
!8099 = !DILocation(line: 276, column: 4, scope: !8096)
!8100 = !DILocation(line: 276, column: 12, scope: !8096)
!8101 = !DILocation(line: 274, column: 12, scope: !8097)
!8102 = !DILocation(line: 274, column: 3, scope: !8097)
!8103 = distinct !{!8103, !8102, !8104}
!8104 = !DILocation(line: 277, column: 3, scope: !8097)
!8105 = !DILocation(line: 281, column: 12, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8093, file: !7814, line: 280, column: 17)
!8107 = !DILocation(line: 281, column: 10, scope: !8106)
!8108 = !DILocation(line: 282, column: 8, scope: !8106)
!8109 = !DILocation(line: 283, column: 7, scope: !8106)
!8110 = !DILocation(line: 284, column: 5, scope: !8106)
!8111 = distinct !{!8111, !8094, !8112}
!8112 = !DILocation(line: 285, column: 3, scope: !8093)
!8113 = !DILocation(line: 288, column: 2, scope: !8078)
!8114 = distinct !DISubprogram(name: "memcpy", scope: !7814, file: !7814, line: 298, type: !8115, scopeLine: 299, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !8119)
!8115 = !DISubroutineType(types: !8116)
!8116 = !{!107, !8117, !8118, !232}
!8117 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !107)
!8118 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !13)
!8119 = !{!8120, !8121, !8122, !8123, !8124}
!8120 = !DILocalVariable(name: "d", arg: 1, scope: !8114, file: !7814, line: 298, type: !8117)
!8121 = !DILocalVariable(name: "s", arg: 2, scope: !8114, file: !7814, line: 298, type: !8118)
!8122 = !DILocalVariable(name: "n", arg: 3, scope: !8114, file: !7814, line: 298, type: !232)
!8123 = !DILocalVariable(name: "d_byte", scope: !8114, file: !7814, line: 302, type: !989)
!8124 = !DILocalVariable(name: "s_byte", scope: !8114, file: !7814, line: 303, type: !2858)
!8125 = !DILocation(line: 0, scope: !8114)
!8126 = !DILocation(line: 337, column: 11, scope: !8114)
!8127 = !DILocation(line: 337, column: 2, scope: !8114)
!8128 = !DILocation(line: 338, column: 25, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8114, file: !7814, line: 337, column: 16)
!8130 = !DILocation(line: 338, column: 17, scope: !8129)
!8131 = !DILocation(line: 338, column: 11, scope: !8129)
!8132 = !DILocation(line: 338, column: 15, scope: !8129)
!8133 = !DILocation(line: 339, column: 4, scope: !8129)
!8134 = distinct !{!8134, !8127, !8135}
!8135 = !DILocation(line: 340, column: 2, scope: !8114)
!8136 = !DILocation(line: 342, column: 2, scope: !8114)
!8137 = distinct !DISubprogram(name: "memset", scope: !7814, file: !7814, line: 352, type: !8138, scopeLine: 353, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !8140)
!8138 = !DISubroutineType(types: !8139)
!8139 = !{!107, !107, !109, !232}
!8140 = !{!8141, !8142, !8143, !8144, !8145}
!8141 = !DILocalVariable(name: "buf", arg: 1, scope: !8137, file: !7814, line: 352, type: !107)
!8142 = !DILocalVariable(name: "c", arg: 2, scope: !8137, file: !7814, line: 352, type: !109)
!8143 = !DILocalVariable(name: "n", arg: 3, scope: !8137, file: !7814, line: 352, type: !232)
!8144 = !DILocalVariable(name: "d_byte", scope: !8137, file: !7814, line: 356, type: !989)
!8145 = !DILocalVariable(name: "c_byte", scope: !8137, file: !7814, line: 357, type: !179)
!8146 = !DILocation(line: 0, scope: !8137)
!8147 = !DILocation(line: 357, column: 25, scope: !8137)
!8148 = !DILocation(line: 389, column: 11, scope: !8137)
!8149 = !DILocation(line: 389, column: 2, scope: !8137)
!8150 = !DILocation(line: 390, column: 11, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8137, file: !7814, line: 389, column: 16)
!8152 = !DILocation(line: 390, column: 15, scope: !8151)
!8153 = !DILocation(line: 391, column: 4, scope: !8151)
!8154 = distinct !{!8154, !8149, !8155}
!8155 = !DILocation(line: 392, column: 2, scope: !8137)
!8156 = !DILocation(line: 394, column: 2, scope: !8137)
!8157 = distinct !DISubprogram(name: "memchr", scope: !7814, file: !7814, line: 404, type: !8158, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2855, retainedNodes: !8160)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!107, !13, !109, !232}
!8160 = !{!8161, !8162, !8163, !8164}
!8161 = !DILocalVariable(name: "s", arg: 1, scope: !8157, file: !7814, line: 404, type: !13)
!8162 = !DILocalVariable(name: "c", arg: 2, scope: !8157, file: !7814, line: 404, type: !109)
!8163 = !DILocalVariable(name: "n", arg: 3, scope: !8157, file: !7814, line: 404, type: !232)
!8164 = !DILocalVariable(name: "p", scope: !8165, file: !7814, line: 407, type: !2858)
!8165 = distinct !DILexicalBlock(scope: !8166, file: !7814, line: 406, column: 14)
!8166 = distinct !DILexicalBlock(scope: !8157, file: !7814, line: 406, column: 6)
!8167 = !DILocation(line: 0, scope: !8157)
!8168 = !DILocation(line: 406, column: 8, scope: !8166)
!8169 = !DILocation(line: 406, column: 6, scope: !8157)
!8170 = !DILocation(line: 409, column: 3, scope: !8165)
!8171 = !DILocation(line: 0, scope: !8165)
!8172 = !DILocation(line: 410, column: 8, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !7814, line: 410, column: 8)
!8174 = distinct !DILexicalBlock(scope: !8165, file: !7814, line: 409, column: 6)
!8175 = !DILocation(line: 410, column: 13, scope: !8173)
!8176 = !DILocation(line: 410, column: 8, scope: !8174)
!8177 = distinct !{!8177, !8170, !8178}
!8178 = !DILocation(line: 414, column: 20, scope: !8165)
!8179 = !DILocation(line: 417, column: 2, scope: !8157)
!8180 = !DILocation(line: 418, column: 1, scope: !8157)
!8181 = distinct !DISubprogram(name: "__stdout_hook_install", scope: !573, file: !573, line: 23, type: !4309, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8182)
!8182 = !{!8183}
!8183 = !DILocalVariable(name: "hook", arg: 1, scope: !8181, file: !573, line: 23, type: !302)
!8184 = !DILocation(line: 0, scope: !8181)
!8185 = !DILocation(line: 25, column: 15, scope: !8181)
!8186 = !DILocation(line: 26, column: 1, scope: !8181)
!8187 = distinct !DISubprogram(name: "_stdout_hook_default", scope: !573, file: !573, line: 14, type: !303, scopeLine: 15, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8188)
!8188 = !{!8189}
!8189 = !DILocalVariable(name: "c", arg: 1, scope: !8187, file: !573, line: 14, type: !109)
!8190 = !DILocation(line: 0, scope: !8187)
!8191 = !DILocation(line: 18, column: 2, scope: !8187)
!8192 = distinct !DISubprogram(name: "z_impl_zephyr_fputc", scope: !573, file: !573, line: 28, type: !8193, scopeLine: 29, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8195)
!8193 = !DISubroutineType(types: !8194)
!8194 = !{!109, !109, !569}
!8195 = !{!8196, !8197}
!8196 = !DILocalVariable(name: "c", arg: 1, scope: !8192, file: !573, line: 28, type: !109)
!8197 = !DILocalVariable(name: "stream", arg: 2, scope: !8192, file: !573, line: 28, type: !569)
!8198 = !DILocation(line: 0, scope: !8192)
!8199 = !DILocation(line: 30, column: 27, scope: !8192)
!8200 = !DILocation(line: 30, column: 50, scope: !8192)
!8201 = !DILocation(line: 30, column: 9, scope: !8192)
!8202 = !DILocation(line: 30, column: 2, scope: !8192)
!8203 = distinct !DISubprogram(name: "fputc", scope: !573, file: !573, line: 41, type: !8193, scopeLine: 42, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8204)
!8204 = !{!8205, !8206}
!8205 = !DILocalVariable(name: "c", arg: 1, scope: !8203, file: !573, line: 41, type: !109)
!8206 = !DILocalVariable(name: "stream", arg: 2, scope: !8203, file: !573, line: 41, type: !569)
!8207 = !DILocation(line: 0, scope: !8203)
!8208 = !DILocation(line: 43, column: 9, scope: !8203)
!8209 = !DILocation(line: 43, column: 2, scope: !8203)
!8210 = distinct !DISubprogram(name: "zephyr_fputc", scope: !8211, file: !8211, line: 72, type: !8193, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8212)
!8211 = !DIFile(filename: "zephyr/include/generated/syscalls/libc-hooks.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!8212 = !{!8213, !8214}
!8213 = !DILocalVariable(name: "c", arg: 1, scope: !8210, file: !8211, line: 72, type: !109)
!8214 = !DILocalVariable(name: "stream", arg: 2, scope: !8210, file: !8211, line: 72, type: !569)
!8215 = !DILocation(line: 0, scope: !8210)
!8216 = !DILocation(line: 81, column: 2, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !8210, file: !8211, line: 81, column: 2)
!8218 = !{i64 2154811935}
!8219 = !DILocation(line: 82, column: 9, scope: !8210)
!8220 = !DILocation(line: 82, column: 2, scope: !8210)
!8221 = distinct !DISubprogram(name: "fputs", scope: !573, file: !573, line: 46, type: !8222, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8225)
!8222 = !DISubroutineType(types: !8223)
!8223 = !{!109, !7818, !8224}
!8224 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !569)
!8225 = !{!8226, !8227, !8228, !8229}
!8226 = !DILocalVariable(name: "s", arg: 1, scope: !8221, file: !573, line: 46, type: !7818)
!8227 = !DILocalVariable(name: "stream", arg: 2, scope: !8221, file: !573, line: 46, type: !8224)
!8228 = !DILocalVariable(name: "len", scope: !8221, file: !573, line: 48, type: !109)
!8229 = !DILocalVariable(name: "ret", scope: !8221, file: !573, line: 49, type: !109)
!8230 = !DILocation(line: 0, scope: !8221)
!8231 = !DILocation(line: 48, column: 12, scope: !8221)
!8232 = !DILocation(line: 51, column: 8, scope: !8221)
!8233 = !DILocation(line: 53, column: 13, scope: !8221)
!8234 = !DILocation(line: 53, column: 9, scope: !8221)
!8235 = !DILocation(line: 53, column: 2, scope: !8221)
!8236 = distinct !DISubprogram(name: "fwrite", scope: !573, file: !573, line: 99, type: !8237, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8239)
!8237 = !DISubroutineType(types: !8238)
!8238 = !{!232, !8118, !232, !232, !8224}
!8239 = !{!8240, !8241, !8242, !8243}
!8240 = !DILocalVariable(name: "ptr", arg: 1, scope: !8236, file: !573, line: 99, type: !8118)
!8241 = !DILocalVariable(name: "size", arg: 2, scope: !8236, file: !573, line: 99, type: !232)
!8242 = !DILocalVariable(name: "nitems", arg: 3, scope: !8236, file: !573, line: 99, type: !232)
!8243 = !DILocalVariable(name: "stream", arg: 4, scope: !8236, file: !573, line: 100, type: !8224)
!8244 = !DILocation(line: 0, scope: !8236)
!8245 = !DILocation(line: 102, column: 9, scope: !8236)
!8246 = !DILocation(line: 102, column: 2, scope: !8236)
!8247 = distinct !DISubprogram(name: "zephyr_fwrite", scope: !8211, file: !8211, line: 96, type: !8237, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8248)
!8248 = !{!8249, !8250, !8251, !8252}
!8249 = !DILocalVariable(name: "ptr", arg: 1, scope: !8247, file: !8211, line: 96, type: !8118)
!8250 = !DILocalVariable(name: "size", arg: 2, scope: !8247, file: !8211, line: 96, type: !232)
!8251 = !DILocalVariable(name: "nitems", arg: 3, scope: !8247, file: !8211, line: 96, type: !232)
!8252 = !DILocalVariable(name: "stream", arg: 4, scope: !8247, file: !8211, line: 96, type: !8224)
!8253 = !DILocation(line: 0, scope: !8247)
!8254 = !DILocation(line: 107, column: 2, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8247, file: !8211, line: 107, column: 2)
!8256 = !{i64 2154812039}
!8257 = !DILocation(line: 108, column: 9, scope: !8247)
!8258 = !DILocation(line: 108, column: 2, scope: !8247)
!8259 = distinct !DISubprogram(name: "z_impl_zephyr_fwrite", scope: !573, file: !573, line: 56, type: !8237, scopeLine: 58, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8260)
!8260 = !{!8261, !8262, !8263, !8264, !8265, !8266, !8267, !8268}
!8261 = !DILocalVariable(name: "ptr", arg: 1, scope: !8259, file: !573, line: 56, type: !8118)
!8262 = !DILocalVariable(name: "size", arg: 2, scope: !8259, file: !573, line: 56, type: !232)
!8263 = !DILocalVariable(name: "nitems", arg: 3, scope: !8259, file: !573, line: 57, type: !232)
!8264 = !DILocalVariable(name: "stream", arg: 4, scope: !8259, file: !573, line: 57, type: !8224)
!8265 = !DILocalVariable(name: "i", scope: !8259, file: !573, line: 59, type: !232)
!8266 = !DILocalVariable(name: "j", scope: !8259, file: !573, line: 60, type: !232)
!8267 = !DILocalVariable(name: "p", scope: !8259, file: !573, line: 61, type: !2858)
!8268 = !DILabel(scope: !8259, name: "done", file: !573, line: 82)
!8269 = !DILocation(line: 0, scope: !8259)
!8270 = !DILocation(line: 63, column: 14, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8259, file: !573, line: 63, column: 6)
!8272 = !DILocation(line: 63, column: 24, scope: !8271)
!8273 = !DILocation(line: 72, column: 3, scope: !8274)
!8274 = distinct !DILexicalBlock(scope: !8259, file: !573, line: 70, column: 5)
!8275 = !DILocation(line: 0, scope: !8274)
!8276 = !DILocation(line: 73, column: 8, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8278, file: !573, line: 73, column: 8)
!8278 = distinct !DILexicalBlock(scope: !8274, file: !573, line: 72, column: 6)
!8279 = !DILocation(line: 73, column: 29, scope: !8277)
!8280 = !DILocation(line: 73, column: 27, scope: !8277)
!8281 = !DILocation(line: 73, column: 21, scope: !8277)
!8282 = !DILocation(line: 73, column: 33, scope: !8277)
!8283 = !DILocation(line: 73, column: 8, scope: !8278)
!8284 = !DILocation(line: 76, column: 5, scope: !8278)
!8285 = !DILocation(line: 77, column: 14, scope: !8274)
!8286 = !DILocation(line: 77, column: 3, scope: !8278)
!8287 = distinct !{!8287, !8273, !8288}
!8288 = !DILocation(line: 77, column: 17, scope: !8274)
!8289 = !DILocation(line: 79, column: 4, scope: !8274)
!8290 = !DILocation(line: 80, column: 13, scope: !8259)
!8291 = !DILocation(line: 80, column: 2, scope: !8274)
!8292 = distinct !{!8292, !8293, !8294}
!8293 = !DILocation(line: 70, column: 2, scope: !8259)
!8294 = !DILocation(line: 80, column: 16, scope: !8259)
!8295 = !DILocation(line: 82, column: 1, scope: !8259)
!8296 = !DILocation(line: 83, column: 17, scope: !8259)
!8297 = !DILocation(line: 83, column: 2, scope: !8259)
!8298 = !DILocation(line: 84, column: 1, scope: !8259)
!8299 = distinct !DISubprogram(name: "puts", scope: !573, file: !573, line: 106, type: !8300, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !566, retainedNodes: !8302)
!8300 = !DISubroutineType(types: !8301)
!8301 = !{!109, !279}
!8302 = !{!8303}
!8303 = !DILocalVariable(name: "s", arg: 1, scope: !8299, file: !573, line: 106, type: !279)
!8304 = !DILocation(line: 0, scope: !8299)
!8305 = !DILocation(line: 108, column: 6, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8299, file: !573, line: 108, column: 6)
!8307 = !DILocation(line: 108, column: 23, scope: !8306)
!8308 = !DILocation(line: 108, column: 6, scope: !8299)
!8309 = !DILocation(line: 112, column: 9, scope: !8299)
!8310 = !DILocation(line: 112, column: 29, scope: !8299)
!8311 = !DILocation(line: 112, column: 2, scope: !8299)
!8312 = !DILocation(line: 113, column: 1, scope: !8299)
!8313 = distinct !DISubprogram(name: "__stm32_exti_isr_9_5", scope: !705, file: !705, line: 368, type: !758, scopeLine: 369, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8314)
!8314 = !{!8315}
!8315 = !DILocalVariable(name: "dev", arg: 1, scope: !8313, file: !705, line: 368, type: !734)
!8316 = !DILocation(line: 0, scope: !8313)
!8317 = !DILocation(line: 370, column: 2, scope: !8313)
!8318 = !DILocation(line: 371, column: 1, scope: !8313)
!8319 = distinct !DISubprogram(name: "__stm32_exti_isr", scope: !705, file: !705, line: 243, type: !8320, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8322)
!8320 = !DISubroutineType(types: !8321)
!8321 = !{null, !109, !109, !734}
!8322 = !{!8323, !8324, !8325, !8326, !8328}
!8323 = !DILocalVariable(name: "min", arg: 1, scope: !8319, file: !705, line: 243, type: !109)
!8324 = !DILocalVariable(name: "max", arg: 2, scope: !8319, file: !705, line: 243, type: !109)
!8325 = !DILocalVariable(name: "dev", arg: 3, scope: !8319, file: !705, line: 243, type: !734)
!8326 = !DILocalVariable(name: "data", scope: !8319, file: !705, line: 245, type: !8327)
!8327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 32)
!8328 = !DILocalVariable(name: "line", scope: !8319, file: !705, line: 246, type: !109)
!8329 = !DILocation(line: 0, scope: !8319)
!8330 = !DILocation(line: 245, column: 38, scope: !8319)
!8331 = !DILocation(line: 249, column: 24, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !705, line: 249, column: 2)
!8333 = distinct !DILexicalBlock(scope: !8319, file: !705, line: 249, column: 2)
!8334 = !DILocation(line: 249, column: 2, scope: !8333)
!8335 = !DILocation(line: 251, column: 7, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8337, file: !705, line: 251, column: 7)
!8337 = distinct !DILexicalBlock(scope: !8332, file: !705, line: 249, column: 39)
!8338 = !DILocation(line: 251, column: 7, scope: !8337)
!8339 = !DILocation(line: 253, column: 4, scope: !8340)
!8340 = distinct !DILexicalBlock(scope: !8336, file: !705, line: 251, column: 36)
!8341 = !DILocation(line: 256, column: 24, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8340, file: !705, line: 256, column: 8)
!8343 = !DILocation(line: 256, column: 9, scope: !8342)
!8344 = !DILocation(line: 256, column: 8, scope: !8340)
!8345 = !DILocation(line: 260, column: 43, scope: !8340)
!8346 = !DILocation(line: 260, column: 4, scope: !8340)
!8347 = !DILocation(line: 261, column: 3, scope: !8340)
!8348 = !DILocation(line: 249, column: 35, scope: !8332)
!8349 = distinct !{!8349, !8334, !8350}
!8350 = !DILocation(line: 262, column: 2, scope: !8333)
!8351 = !DILocation(line: 263, column: 1, scope: !8319)
!8352 = distinct !DISubprogram(name: "stm32_exti_is_pending", scope: !705, file: !705, line: 158, type: !303, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8353)
!8353 = !{!8354}
!8354 = !DILocalVariable(name: "line", arg: 1, scope: !8352, file: !705, line: 158, type: !109)
!8355 = !DILocation(line: 0, scope: !8352)
!8356 = !DILocation(line: 170, column: 38, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8358, file: !705, line: 160, column: 17)
!8358 = distinct !DILexicalBlock(scope: !8352, file: !705, line: 160, column: 6)
!8359 = !DILocation(line: 170, column: 10, scope: !8357)
!8360 = !DILocation(line: 176, column: 1, scope: !8352)
!8361 = distinct !DISubprogram(name: "stm32_exti_clear_pending", scope: !705, file: !705, line: 183, type: !8362, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8364)
!8362 = !DISubroutineType(types: !8363)
!8363 = !{null, !109}
!8364 = !{!8365}
!8365 = !DILocalVariable(name: "line", arg: 1, scope: !8361, file: !705, line: 183, type: !109)
!8366 = !DILocation(line: 0, scope: !8361)
!8367 = !DILocation(line: 195, column: 28, scope: !8368)
!8368 = distinct !DILexicalBlock(scope: !8369, file: !705, line: 185, column: 17)
!8369 = distinct !DILexicalBlock(scope: !8361, file: !705, line: 185, column: 6)
!8370 = !DILocation(line: 195, column: 3, scope: !8368)
!8371 = !DILocation(line: 200, column: 1, scope: !8361)
!8372 = distinct !DISubprogram(name: "LL_EXTI_ClearFlag_0_31", scope: !8373, file: !8373, line: 910, type: !6519, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8374)
!8373 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_exti.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8374 = !{!8375}
!8375 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8372, file: !8373, line: 910, type: !110)
!8376 = !DILocation(line: 0, scope: !8372)
!8377 = !DILocation(line: 912, column: 3, scope: !8372)
!8378 = !DILocation(line: 913, column: 1, scope: !8372)
!8379 = distinct !DISubprogram(name: "LL_EXTI_IsActiveFlag_0_31", scope: !8373, file: !8373, line: 834, type: !7709, scopeLine: 835, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8380)
!8380 = !{!8381}
!8381 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8379, file: !8373, line: 834, type: !110)
!8382 = !DILocation(line: 0, scope: !8379)
!8383 = !DILocation(line: 836, column: 11, scope: !8379)
!8384 = !DILocation(line: 836, column: 40, scope: !8379)
!8385 = !DILocation(line: 836, column: 3, scope: !8379)
!8386 = distinct !DISubprogram(name: "__stm32_exti_isr_4", scope: !705, file: !705, line: 304, type: !758, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8387)
!8387 = !{!8388}
!8388 = !DILocalVariable(name: "dev", arg: 1, scope: !8386, file: !705, line: 304, type: !734)
!8389 = !DILocation(line: 0, scope: !8386)
!8390 = !DILocation(line: 306, column: 2, scope: !8386)
!8391 = !DILocation(line: 307, column: 1, scope: !8386)
!8392 = distinct !DISubprogram(name: "__stm32_exti_isr_3", scope: !705, file: !705, line: 299, type: !758, scopeLine: 300, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8393)
!8393 = !{!8394}
!8394 = !DILocalVariable(name: "dev", arg: 1, scope: !8392, file: !705, line: 299, type: !734)
!8395 = !DILocation(line: 0, scope: !8392)
!8396 = !DILocation(line: 301, column: 2, scope: !8392)
!8397 = !DILocation(line: 302, column: 1, scope: !8392)
!8398 = distinct !DISubprogram(name: "__stm32_exti_isr_2", scope: !705, file: !705, line: 294, type: !758, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8399)
!8399 = !{!8400}
!8400 = !DILocalVariable(name: "dev", arg: 1, scope: !8398, file: !705, line: 294, type: !734)
!8401 = !DILocation(line: 0, scope: !8398)
!8402 = !DILocation(line: 296, column: 2, scope: !8398)
!8403 = !DILocation(line: 297, column: 1, scope: !8398)
!8404 = distinct !DISubprogram(name: "__stm32_exti_isr_22", scope: !705, file: !705, line: 397, type: !758, scopeLine: 398, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8405)
!8405 = !{!8406}
!8406 = !DILocalVariable(name: "dev", arg: 1, scope: !8404, file: !705, line: 397, type: !734)
!8407 = !DILocation(line: 0, scope: !8404)
!8408 = !DILocation(line: 399, column: 2, scope: !8404)
!8409 = !DILocation(line: 400, column: 1, scope: !8404)
!8410 = distinct !DISubprogram(name: "__stm32_exti_isr_21", scope: !705, file: !705, line: 392, type: !758, scopeLine: 393, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8411)
!8411 = !{!8412}
!8412 = !DILocalVariable(name: "dev", arg: 1, scope: !8410, file: !705, line: 392, type: !734)
!8413 = !DILocation(line: 0, scope: !8410)
!8414 = !DILocation(line: 394, column: 2, scope: !8410)
!8415 = !DILocation(line: 395, column: 1, scope: !8410)
!8416 = distinct !DISubprogram(name: "__stm32_exti_isr_1", scope: !705, file: !705, line: 289, type: !758, scopeLine: 290, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8417)
!8417 = !{!8418}
!8418 = !DILocalVariable(name: "dev", arg: 1, scope: !8416, file: !705, line: 289, type: !734)
!8419 = !DILocation(line: 0, scope: !8416)
!8420 = !DILocation(line: 291, column: 2, scope: !8416)
!8421 = !DILocation(line: 292, column: 1, scope: !8416)
!8422 = distinct !DISubprogram(name: "__stm32_exti_isr_18", scope: !705, file: !705, line: 387, type: !758, scopeLine: 388, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8423)
!8423 = !{!8424}
!8424 = !DILocalVariable(name: "dev", arg: 1, scope: !8422, file: !705, line: 387, type: !734)
!8425 = !DILocation(line: 0, scope: !8422)
!8426 = !DILocation(line: 389, column: 2, scope: !8422)
!8427 = !DILocation(line: 390, column: 1, scope: !8422)
!8428 = distinct !DISubprogram(name: "__stm32_exti_isr_16", scope: !705, file: !705, line: 382, type: !758, scopeLine: 383, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8429)
!8429 = !{!8430}
!8430 = !DILocalVariable(name: "dev", arg: 1, scope: !8428, file: !705, line: 382, type: !734)
!8431 = !DILocation(line: 0, scope: !8428)
!8432 = !DILocation(line: 384, column: 2, scope: !8428)
!8433 = !DILocation(line: 385, column: 1, scope: !8428)
!8434 = distinct !DISubprogram(name: "__stm32_exti_isr_15_10", scope: !705, file: !705, line: 373, type: !758, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8435)
!8435 = !{!8436}
!8436 = !DILocalVariable(name: "dev", arg: 1, scope: !8434, file: !705, line: 373, type: !734)
!8437 = !DILocation(line: 0, scope: !8434)
!8438 = !DILocation(line: 375, column: 2, scope: !8434)
!8439 = !DILocation(line: 376, column: 1, scope: !8434)
!8440 = distinct !DISubprogram(name: "__stm32_exti_isr_0", scope: !705, file: !705, line: 284, type: !758, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8441)
!8441 = !{!8442}
!8442 = !DILocalVariable(name: "dev", arg: 1, scope: !8440, file: !705, line: 284, type: !734)
!8443 = !DILocation(line: 0, scope: !8440)
!8444 = !DILocation(line: 286, column: 2, scope: !8440)
!8445 = !DILocation(line: 287, column: 1, scope: !8440)
!8446 = distinct !DISubprogram(name: "stm32_exti_init", scope: !705, file: !705, line: 416, type: !732, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8447)
!8447 = !{!8448}
!8448 = !DILocalVariable(name: "dev", arg: 1, scope: !8446, file: !705, line: 416, type: !734)
!8449 = !DILocation(line: 0, scope: !8446)
!8450 = !DILocation(line: 418, column: 2, scope: !8446)
!8451 = !DILocation(line: 420, column: 2, scope: !8446)
!8452 = !DILocation(line: 0, scope: !757)
!8453 = !DILocation(line: 493, column: 2, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !757, file: !705, line: 493, column: 2)
!8455 = !DILocation(line: 497, column: 2, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !757, file: !705, line: 497, column: 2)
!8457 = !DILocation(line: 507, column: 2, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !757, file: !705, line: 507, column: 2)
!8459 = !DILocation(line: 512, column: 2, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !757, file: !705, line: 512, column: 2)
!8461 = !DILocation(line: 516, column: 2, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !757, file: !705, line: 516, column: 2)
!8463 = !DILocation(line: 523, column: 2, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !757, file: !705, line: 523, column: 2)
!8465 = !DILocation(line: 527, column: 2, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !757, file: !705, line: 527, column: 2)
!8467 = !DILocation(line: 581, column: 2, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !757, file: !705, line: 581, column: 2)
!8469 = !DILocation(line: 586, column: 2, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !757, file: !705, line: 586, column: 2)
!8471 = !DILocation(line: 591, column: 2, scope: !8472)
!8472 = distinct !DILexicalBlock(scope: !757, file: !705, line: 591, column: 2)
!8473 = !DILocation(line: 595, column: 2, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !757, file: !705, line: 595, column: 2)
!8475 = !DILocation(line: 607, column: 1, scope: !757)
!8476 = distinct !DISubprogram(name: "stm32_exti_enable", scope: !705, file: !705, line: 112, type: !8362, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8477)
!8477 = !{!8478, !8479}
!8478 = !DILocalVariable(name: "line", arg: 1, scope: !8476, file: !705, line: 112, type: !109)
!8479 = !DILocalVariable(name: "irqnum", scope: !8476, file: !705, line: 114, type: !109)
!8480 = !DILocation(line: 0, scope: !8476)
!8481 = !DILocation(line: 122, column: 13, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8476, file: !705, line: 122, column: 6)
!8483 = !DILocation(line: 122, column: 6, scope: !8476)
!8484 = !DILocation(line: 123, column: 3, scope: !8485)
!8485 = distinct !DILexicalBlock(scope: !8486, file: !705, line: 123, column: 3)
!8486 = distinct !DILexicalBlock(scope: !8487, file: !705, line: 123, column: 3)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !705, line: 123, column: 3)
!8488 = distinct !DILexicalBlock(scope: !8482, file: !705, line: 122, column: 22)
!8489 = !DILocation(line: 121, column: 11, scope: !8476)
!8490 = !DILocation(line: 130, column: 26, scope: !8476)
!8491 = !DILocation(line: 130, column: 2, scope: !8476)
!8492 = !DILocation(line: 134, column: 2, scope: !8476)
!8493 = !DILocation(line: 135, column: 1, scope: !8476)
!8494 = distinct !DISubprogram(name: "LL_EXTI_EnableIT_0_31", scope: !8373, file: !8373, line: 268, type: !6519, scopeLine: 269, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8495)
!8495 = !{!8496}
!8496 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8494, file: !8373, line: 268, type: !110)
!8497 = !DILocation(line: 0, scope: !8494)
!8498 = !DILocation(line: 270, column: 3, scope: !8494)
!8499 = !DILocation(line: 271, column: 1, scope: !8494)
!8500 = distinct !DISubprogram(name: "stm32_exti_disable", scope: !705, file: !705, line: 137, type: !8362, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8501)
!8501 = !{!8502}
!8502 = !DILocalVariable(name: "line", arg: 1, scope: !8500, file: !705, line: 137, type: !109)
!8503 = !DILocation(line: 0, scope: !8500)
!8504 = !DILocation(line: 141, column: 11, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8500, file: !705, line: 141, column: 6)
!8506 = !DILocation(line: 141, column: 6, scope: !8500)
!8507 = !DILocation(line: 145, column: 28, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8505, file: !705, line: 141, column: 17)
!8509 = !DILocation(line: 145, column: 3, scope: !8508)
!8510 = !DILocation(line: 147, column: 2, scope: !8508)
!8511 = !DILocation(line: 151, column: 1, scope: !8500)
!8512 = distinct !DISubprogram(name: "LL_EXTI_DisableIT_0_31", scope: !8373, file: !8373, line: 309, type: !6519, scopeLine: 310, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8513)
!8513 = !{!8514}
!8514 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8512, file: !8373, line: 309, type: !110)
!8515 = !DILocation(line: 0, scope: !8512)
!8516 = !DILocation(line: 311, column: 3, scope: !8512)
!8517 = !DILocation(line: 312, column: 1, scope: !8512)
!8518 = distinct !DISubprogram(name: "stm32_exti_trigger", scope: !705, file: !705, line: 202, type: !8519, scopeLine: 203, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8521)
!8519 = !DISubroutineType(types: !8520)
!8520 = !{null, !109, !109}
!8521 = !{!8522, !8523}
!8522 = !DILocalVariable(name: "line", arg: 1, scope: !8518, file: !705, line: 202, type: !109)
!8523 = !DILocalVariable(name: "trigger", arg: 2, scope: !8518, file: !705, line: 202, type: !109)
!8524 = !DILocation(line: 0, scope: !8518)
!8525 = !DILocation(line: 211, column: 2, scope: !8518)
!8526 = !DILocation(line: 213, column: 36, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8518, file: !705, line: 211, column: 19)
!8528 = !DILocation(line: 213, column: 3, scope: !8527)
!8529 = !DILocation(line: 214, column: 3, scope: !8527)
!8530 = !DILocation(line: 215, column: 3, scope: !8527)
!8531 = !DILocation(line: 217, column: 35, scope: !8527)
!8532 = !DILocation(line: 217, column: 3, scope: !8527)
!8533 = !DILocation(line: 218, column: 3, scope: !8527)
!8534 = !DILocation(line: 219, column: 3, scope: !8527)
!8535 = !DILocation(line: 221, column: 36, scope: !8527)
!8536 = !DILocation(line: 221, column: 3, scope: !8527)
!8537 = !DILocation(line: 222, column: 3, scope: !8527)
!8538 = !DILocation(line: 223, column: 3, scope: !8527)
!8539 = !DILocation(line: 225, column: 35, scope: !8527)
!8540 = !DILocation(line: 225, column: 3, scope: !8527)
!8541 = !DILocation(line: 226, column: 3, scope: !8527)
!8542 = !DILocation(line: 227, column: 3, scope: !8527)
!8543 = !DILocation(line: 232, column: 1, scope: !8518)
!8544 = distinct !DISubprogram(name: "LL_EXTI_DisableRisingTrig_0_31", scope: !8373, file: !8373, line: 573, type: !6519, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8545)
!8545 = !{!8546}
!8546 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8544, file: !8373, line: 573, type: !110)
!8547 = !DILocation(line: 0, scope: !8544)
!8548 = !DILocation(line: 575, column: 3, scope: !8544)
!8549 = !DILocation(line: 577, column: 1, scope: !8544)
!8550 = distinct !DISubprogram(name: "LL_EXTI_DisableFallingTrig_0_31", scope: !8373, file: !8373, line: 703, type: !6519, scopeLine: 704, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8551)
!8551 = !{!8552}
!8552 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8550, file: !8373, line: 703, type: !110)
!8553 = !DILocation(line: 0, scope: !8550)
!8554 = !DILocation(line: 705, column: 3, scope: !8550)
!8555 = !DILocation(line: 706, column: 1, scope: !8550)
!8556 = distinct !DISubprogram(name: "LL_EXTI_EnableRisingTrig_0_31", scope: !8373, file: !8373, line: 529, type: !6519, scopeLine: 530, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8557)
!8557 = !{!8558}
!8558 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8556, file: !8373, line: 529, type: !110)
!8559 = !DILocation(line: 0, scope: !8556)
!8560 = !DILocation(line: 531, column: 3, scope: !8556)
!8561 = !DILocation(line: 533, column: 1, scope: !8556)
!8562 = distinct !DISubprogram(name: "LL_EXTI_EnableFallingTrig_0_31", scope: !8373, file: !8373, line: 661, type: !6519, scopeLine: 662, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8563)
!8563 = !{!8564}
!8564 = !DILocalVariable(name: "ExtiLine", arg: 1, scope: !8562, file: !8373, line: 661, type: !110)
!8565 = !DILocation(line: 0, scope: !8562)
!8566 = !DILocation(line: 663, column: 3, scope: !8562)
!8567 = !DILocation(line: 664, column: 1, scope: !8562)
!8568 = distinct !DISubprogram(name: "stm32_exti_set_callback", scope: !705, file: !705, line: 433, type: !8569, scopeLine: 434, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8571)
!8569 = !DISubroutineType(types: !8570)
!8570 = !{!109, !109, !745, !107}
!8571 = !{!8572, !8573, !8574, !8575, !8577}
!8572 = !DILocalVariable(name: "line", arg: 1, scope: !8568, file: !705, line: 433, type: !109)
!8573 = !DILocalVariable(name: "cb", arg: 2, scope: !8568, file: !705, line: 433, type: !745)
!8574 = !DILocalVariable(name: "arg", arg: 3, scope: !8568, file: !705, line: 433, type: !107)
!8575 = !DILocalVariable(name: "dev", scope: !8568, file: !705, line: 435, type: !8576)
!8576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!8577 = !DILocalVariable(name: "data", scope: !8568, file: !705, line: 436, type: !8327)
!8578 = !DILocation(line: 0, scope: !8568)
!8579 = !DILocation(line: 438, column: 21, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8568, file: !705, line: 438, column: 6)
!8581 = !DILocation(line: 438, column: 6, scope: !8580)
!8582 = !DILocation(line: 438, column: 6, scope: !8568)
!8583 = !DILocation(line: 442, column: 20, scope: !8568)
!8584 = !DILocation(line: 443, column: 17, scope: !8568)
!8585 = !DILocation(line: 443, column: 22, scope: !8568)
!8586 = !DILocation(line: 445, column: 2, scope: !8568)
!8587 = !DILocation(line: 446, column: 1, scope: !8568)
!8588 = distinct !DISubprogram(name: "stm32_exti_unset_callback", scope: !705, file: !705, line: 448, type: !8362, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !601, retainedNodes: !8589)
!8589 = !{!8590, !8591, !8592}
!8590 = !DILocalVariable(name: "line", arg: 1, scope: !8588, file: !705, line: 448, type: !109)
!8591 = !DILocalVariable(name: "dev", scope: !8588, file: !705, line: 450, type: !8576)
!8592 = !DILocalVariable(name: "data", scope: !8588, file: !705, line: 451, type: !8327)
!8593 = !DILocation(line: 0, scope: !8588)
!8594 = !DILocation(line: 453, column: 17, scope: !8588)
!8595 = !DILocation(line: 453, column: 20, scope: !8588)
!8596 = !DILocation(line: 454, column: 17, scope: !8588)
!8597 = !DILocation(line: 454, column: 22, scope: !8588)
!8598 = !DILocation(line: 455, column: 1, scope: !8588)
!8599 = distinct !DISubprogram(name: "stm32_clock_control_on", scope: !888, file: !888, line: 183, type: !926, scopeLine: 185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8600)
!8600 = !{!8601, !8602, !8603, !8604, !8605}
!8601 = !DILocalVariable(name: "dev", arg: 1, scope: !8599, file: !888, line: 183, type: !917)
!8602 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8599, file: !888, line: 184, type: !928)
!8603 = !DILocalVariable(name: "pclken", scope: !8599, file: !888, line: 186, type: !878)
!8604 = !DILocalVariable(name: "reg", scope: !8599, file: !888, line: 187, type: !1471)
!8605 = !DILocalVariable(name: "reg_val", scope: !8599, file: !888, line: 188, type: !110)
!8606 = !DILocation(line: 0, scope: !8599)
!8607 = !DILocation(line: 192, column: 6, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8599, file: !888, line: 192, column: 6)
!8609 = !DILocation(line: 192, column: 6, scope: !8599)
!8610 = !DILocation(line: 197, column: 52, scope: !8599)
!8611 = !DILocation(line: 197, column: 8, scope: !8599)
!8612 = !DILocation(line: 198, column: 12, scope: !8599)
!8613 = !DILocation(line: 199, column: 21, scope: !8599)
!8614 = !DILocation(line: 199, column: 10, scope: !8599)
!8615 = !DILocation(line: 200, column: 7, scope: !8599)
!8616 = !DILocation(line: 202, column: 2, scope: !8599)
!8617 = !DILocation(line: 203, column: 1, scope: !8599)
!8618 = distinct !DISubprogram(name: "stm32_clock_control_off", scope: !888, file: !888, line: 205, type: !926, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8619)
!8619 = !{!8620, !8621, !8622, !8623, !8624}
!8620 = !DILocalVariable(name: "dev", arg: 1, scope: !8618, file: !888, line: 205, type: !917)
!8621 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8618, file: !888, line: 206, type: !928)
!8622 = !DILocalVariable(name: "pclken", scope: !8618, file: !888, line: 208, type: !878)
!8623 = !DILocalVariable(name: "reg", scope: !8618, file: !888, line: 209, type: !1471)
!8624 = !DILocalVariable(name: "reg_val", scope: !8618, file: !888, line: 210, type: !110)
!8625 = !DILocation(line: 0, scope: !8618)
!8626 = !DILocation(line: 214, column: 6, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8618, file: !888, line: 214, column: 6)
!8628 = !DILocation(line: 214, column: 6, scope: !8618)
!8629 = !DILocation(line: 219, column: 52, scope: !8618)
!8630 = !DILocation(line: 219, column: 8, scope: !8618)
!8631 = !DILocation(line: 220, column: 12, scope: !8618)
!8632 = !DILocation(line: 221, column: 22, scope: !8618)
!8633 = !DILocation(line: 221, column: 13, scope: !8618)
!8634 = !DILocation(line: 221, column: 10, scope: !8618)
!8635 = !DILocation(line: 222, column: 7, scope: !8618)
!8636 = !DILocation(line: 224, column: 2, scope: !8618)
!8637 = !DILocation(line: 225, column: 1, scope: !8618)
!8638 = distinct !DISubprogram(name: "stm32_clock_control_get_subsys_rate", scope: !888, file: !888, line: 262, type: !942, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8639)
!8639 = !{!8640, !8641, !8642, !8643, !8644, !8645, !8646, !8647}
!8640 = !DILocalVariable(name: "clock", arg: 1, scope: !8638, file: !888, line: 262, type: !917)
!8641 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8638, file: !888, line: 263, type: !928)
!8642 = !DILocalVariable(name: "rate", arg: 3, scope: !8638, file: !888, line: 264, type: !884)
!8643 = !DILocalVariable(name: "pclken", scope: !8638, file: !888, line: 266, type: !878)
!8644 = !DILocalVariable(name: "ahb_clock", scope: !8638, file: !888, line: 273, type: !110)
!8645 = !DILocalVariable(name: "apb1_clock", scope: !8638, file: !888, line: 274, type: !110)
!8646 = !DILocalVariable(name: "apb2_clock", scope: !8638, file: !888, line: 276, type: !110)
!8647 = !DILocalVariable(name: "ahb3_clock", scope: !8638, file: !888, line: 286, type: !110)
!8648 = !DILocation(line: 0, scope: !8638)
!8649 = !DILocation(line: 273, column: 23, scope: !8638)
!8650 = !DILocation(line: 274, column: 24, scope: !8638)
!8651 = !DILocation(line: 299, column: 18, scope: !8638)
!8652 = !DILocation(line: 299, column: 2, scope: !8638)
!8653 = !DILocation(line: 319, column: 3, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8638, file: !888, line: 299, column: 23)
!8655 = !DILocation(line: 323, column: 3, scope: !8654)
!8656 = !DILocation(line: 346, column: 33, scope: !8654)
!8657 = !DILocation(line: 346, column: 11, scope: !8654)
!8658 = !DILocation(line: 350, column: 3, scope: !8654)
!8659 = !DILocation(line: 354, column: 33, scope: !8654)
!8660 = !DILocation(line: 354, column: 11, scope: !8654)
!8661 = !DILocation(line: 358, column: 3, scope: !8654)
!8662 = !DILocation(line: 374, column: 3, scope: !8654)
!8663 = !DILocation(line: 379, column: 3, scope: !8654)
!8664 = !DILocation(line: 0, scope: !8654)
!8665 = !DILocation(line: 396, column: 1, scope: !8638)
!8666 = distinct !DISubprogram(name: "stm32_clock_control_configure", scope: !888, file: !888, line: 227, type: !958, scopeLine: 230, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8667)
!8667 = !{!8668, !8669, !8670, !8671, !8672, !8673, !8674, !8675}
!8668 = !DILocalVariable(name: "dev", arg: 1, scope: !8666, file: !888, line: 227, type: !917)
!8669 = !DILocalVariable(name: "sub_system", arg: 2, scope: !8666, file: !888, line: 228, type: !928)
!8670 = !DILocalVariable(name: "data", arg: 3, scope: !8666, file: !888, line: 229, type: !107)
!8671 = !DILocalVariable(name: "pclken", scope: !8666, file: !888, line: 233, type: !878)
!8672 = !DILocalVariable(name: "reg", scope: !8666, file: !888, line: 234, type: !1471)
!8673 = !DILocalVariable(name: "reg_val", scope: !8666, file: !888, line: 235, type: !110)
!8674 = !DILocalVariable(name: "dt_val", scope: !8666, file: !888, line: 235, type: !110)
!8675 = !DILocalVariable(name: "err", scope: !8666, file: !888, line: 236, type: !109)
!8676 = !DILocation(line: 0, scope: !8666)
!8677 = !DILocation(line: 241, column: 30, scope: !8666)
!8678 = !DILocation(line: 241, column: 8, scope: !8666)
!8679 = !DILocation(line: 242, column: 10, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8666, file: !888, line: 242, column: 6)
!8681 = !DILocation(line: 242, column: 6, scope: !8666)
!8682 = !DILocation(line: 247, column: 11, scope: !8666)
!8683 = !DILocation(line: 248, column: 6, scope: !8666)
!8684 = !DILocation(line: 247, column: 44, scope: !8666)
!8685 = !DILocation(line: 250, column: 6, scope: !8666)
!8686 = !DILocation(line: 249, column: 52, scope: !8666)
!8687 = !DILocation(line: 249, column: 8, scope: !8666)
!8688 = !DILocation(line: 251, column: 12, scope: !8666)
!8689 = !DILocation(line: 252, column: 10, scope: !8666)
!8690 = !DILocation(line: 253, column: 7, scope: !8666)
!8691 = !DILocation(line: 255, column: 2, scope: !8666)
!8692 = !DILocation(line: 260, column: 1, scope: !8666)
!8693 = distinct !DISubprogram(name: "enabled_clock", scope: !888, file: !888, line: 100, type: !8694, scopeLine: 101, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8696)
!8694 = !DISubroutineType(types: !8695)
!8695 = !{!109, !110}
!8696 = !{!8697, !8698}
!8697 = !DILocalVariable(name: "src_clk", arg: 1, scope: !8693, file: !888, line: 100, type: !110)
!8698 = !DILocalVariable(name: "r", scope: !8693, file: !888, line: 102, type: !109)
!8699 = !DILocation(line: 0, scope: !8693)
!8700 = !DILocation(line: 104, column: 2, scope: !8693)
!8701 = !DILocation(line: 180, column: 2, scope: !8693)
!8702 = !DILocation(line: 181, column: 1, scope: !8693)
!8703 = distinct !DISubprogram(name: "get_bus_clock", scope: !888, file: !888, line: 79, type: !8704, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8706)
!8704 = !DISubroutineType(types: !8705)
!8705 = !{!110, !110, !110}
!8706 = !{!8707, !8708}
!8707 = !DILocalVariable(name: "clock", arg: 1, scope: !8703, file: !888, line: 79, type: !110)
!8708 = !DILocalVariable(name: "prescaler", arg: 2, scope: !8703, file: !888, line: 79, type: !110)
!8709 = !DILocation(line: 0, scope: !8703)
!8710 = !DILocation(line: 81, column: 15, scope: !8703)
!8711 = !DILocation(line: 81, column: 2, scope: !8703)
!8712 = distinct !DISubprogram(name: "get_pll_div_frequency", scope: !888, file: !888, line: 68, type: !8713, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8715)
!8713 = !DISubroutineType(types: !8714)
!8714 = !{!110, !110, !109, !109, !109}
!8715 = !{!8716, !8717, !8718, !8719}
!8716 = !DILocalVariable(name: "pllsrc_freq", arg: 1, scope: !8712, file: !888, line: 68, type: !110)
!8717 = !DILocalVariable(name: "pllm_div", arg: 2, scope: !8712, file: !888, line: 69, type: !109)
!8718 = !DILocalVariable(name: "plln_mul", arg: 3, scope: !8712, file: !888, line: 70, type: !109)
!8719 = !DILocalVariable(name: "pllout_div", arg: 4, scope: !8712, file: !888, line: 71, type: !109)
!8720 = !DILocation(line: 0, scope: !8712)
!8721 = !DILocation(line: 75, column: 22, scope: !8712)
!8722 = !DILocation(line: 76, column: 13, scope: !8712)
!8723 = !DILocation(line: 75, column: 34, scope: !8712)
!8724 = !DILocation(line: 75, column: 2, scope: !8712)
!8725 = distinct !DISubprogram(name: "stm32_clock_control_init", scope: !888, file: !888, line: 641, type: !915, scopeLine: 642, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8726)
!8726 = !{!8727, !8728, !8729}
!8727 = !DILocalVariable(name: "dev", arg: 1, scope: !8725, file: !888, line: 641, type: !917)
!8728 = !DILocalVariable(name: "old_flash_freq", scope: !8725, file: !888, line: 664, type: !110)
!8729 = !DILocalVariable(name: "new_flash_freq", scope: !8725, file: !888, line: 665, type: !110)
!8730 = !DILocation(line: 0, scope: !8725)
!8731 = !DILocation(line: 646, column: 2, scope: !8725)
!8732 = !DILocation(line: 667, column: 19, scope: !8725)
!8733 = !DILocation(line: 674, column: 21, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8725, file: !888, line: 674, column: 6)
!8735 = !DILocation(line: 674, column: 6, scope: !8725)
!8736 = !DILocation(line: 675, column: 3, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !8734, file: !888, line: 674, column: 59)
!8738 = !DILocation(line: 676, column: 2, scope: !8737)
!8739 = !DILocation(line: 680, column: 2, scope: !8725)
!8740 = !DILocation(line: 683, column: 2, scope: !8725)
!8741 = !DILocation(line: 690, column: 3, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !888, line: 689, column: 9)
!8743 = distinct !DILexicalBlock(scope: !8725, file: !888, line: 685, column: 6)
!8744 = !DILocation(line: 695, column: 2, scope: !8725)
!8745 = !DILocation(line: 696, column: 2, scope: !8725)
!8746 = !DILocation(line: 696, column: 9, scope: !8725)
!8747 = !DILocation(line: 696, column: 34, scope: !8725)
!8748 = distinct !{!8748, !8745, !8749}
!8749 = !DILocation(line: 697, column: 2, scope: !8725)
!8750 = !DILocation(line: 720, column: 21, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8725, file: !888, line: 720, column: 6)
!8752 = !DILocation(line: 720, column: 6, scope: !8725)
!8753 = !DILocation(line: 721, column: 3, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8751, file: !888, line: 720, column: 60)
!8755 = !DILocation(line: 722, column: 2, scope: !8754)
!8756 = !DILocation(line: 725, column: 18, scope: !8725)
!8757 = !DILocation(line: 728, column: 2, scope: !8725)
!8758 = !DILocation(line: 730, column: 2, scope: !8725)
!8759 = !DILocation(line: 745, column: 2, scope: !8725)
!8760 = distinct !DISubprogram(name: "LL_RCC_GetAHBPrescaler", scope: !8761, file: !8761, line: 3275, type: !6509, scopeLine: 3276, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8761 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8762 = !DILocation(line: 3277, column: 21, scope: !8760)
!8763 = !DILocation(line: 3277, column: 3, scope: !8760)
!8764 = distinct !DISubprogram(name: "set_up_fixed_clock_sources", scope: !888, file: !888, line: 507, type: !3089, scopeLine: 508, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8765 = !DILocation(line: 516, column: 4, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8767, file: !888, line: 515, column: 10)
!8767 = distinct !DILexicalBlock(scope: !8768, file: !888, line: 513, column: 7)
!8768 = distinct !DILexicalBlock(scope: !8769, file: !888, line: 510, column: 37)
!8769 = distinct !DILexicalBlock(scope: !8764, file: !888, line: 510, column: 6)
!8770 = !DILocation(line: 526, column: 3, scope: !8768)
!8771 = !DILocation(line: 527, column: 3, scope: !8768)
!8772 = !DILocation(line: 527, column: 10, scope: !8768)
!8773 = !DILocation(line: 527, column: 31, scope: !8768)
!8774 = distinct !{!8774, !8771, !8775}
!8775 = !DILocation(line: 529, column: 3, scope: !8768)
!8776 = !DILocation(line: 583, column: 3, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8778, file: !888, line: 577, column: 37)
!8778 = distinct !DILexicalBlock(scope: !8764, file: !888, line: 577, column: 6)
!8779 = !DILocation(line: 584, column: 3, scope: !8777)
!8780 = !DILocation(line: 584, column: 10, scope: !8777)
!8781 = !DILocation(line: 584, column: 31, scope: !8777)
!8782 = distinct !{!8782, !8779, !8783}
!8783 = !DILocation(line: 585, column: 3, scope: !8777)
!8784 = !DILocation(line: 627, column: 1, scope: !8764)
!8785 = distinct !DISubprogram(name: "set_up_plls", scope: !888, file: !888, line: 448, type: !3089, scopeLine: 449, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8786 = !DILocation(line: 460, column: 6, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8785, file: !888, line: 460, column: 6)
!8788 = !DILocation(line: 460, column: 31, scope: !8787)
!8789 = !DILocation(line: 460, column: 6, scope: !8785)
!8790 = !DILocation(line: 461, column: 3, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8787, file: !888, line: 460, column: 67)
!8792 = !DILocation(line: 462, column: 3, scope: !8791)
!8793 = !DILocation(line: 463, column: 2, scope: !8791)
!8794 = !DILocation(line: 464, column: 2, scope: !8785)
!8795 = !DILocation(line: 488, column: 2, scope: !8785)
!8796 = !DILocation(line: 492, column: 2, scope: !8785)
!8797 = !DILocation(line: 496, column: 2, scope: !8785)
!8798 = !DILocation(line: 499, column: 2, scope: !8785)
!8799 = !DILocation(line: 500, column: 2, scope: !8785)
!8800 = !DILocation(line: 500, column: 9, scope: !8785)
!8801 = !DILocation(line: 500, column: 30, scope: !8785)
!8802 = distinct !{!8802, !8799, !8803}
!8803 = !DILocation(line: 502, column: 2, scope: !8785)
!8804 = !DILocation(line: 505, column: 1, scope: !8785)
!8805 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8761, file: !8761, line: 3224, type: !6519, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8806)
!8806 = !{!8807}
!8807 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8805, file: !8761, line: 3224, type: !110)
!8808 = !DILocation(line: 0, scope: !8805)
!8809 = !DILocation(line: 3226, column: 3, scope: !8805)
!8810 = !DILocation(line: 3227, column: 1, scope: !8805)
!8811 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8761, file: !8761, line: 3188, type: !6519, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8812)
!8812 = !{!8813}
!8813 = !DILocalVariable(name: "Source", arg: 1, scope: !8811, file: !8761, line: 3188, type: !110)
!8814 = !DILocation(line: 0, scope: !8811)
!8815 = !DILocation(line: 3190, column: 3, scope: !8811)
!8816 = !DILocation(line: 3191, column: 1, scope: !8811)
!8817 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8761, file: !8761, line: 3204, type: !6509, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8818 = !DILocation(line: 3206, column: 21, scope: !8817)
!8819 = !DILocation(line: 3206, column: 3, scope: !8817)
!8820 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8761, file: !8761, line: 3240, type: !6519, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8821)
!8821 = !{!8822}
!8822 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8820, file: !8761, line: 3240, type: !110)
!8823 = !DILocation(line: 0, scope: !8820)
!8824 = !DILocation(line: 3242, column: 3, scope: !8820)
!8825 = !DILocation(line: 3243, column: 1, scope: !8820)
!8826 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8761, file: !8761, line: 3256, type: !6519, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !8827)
!8827 = !{!8828}
!8828 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !8826, file: !8761, line: 3256, type: !110)
!8829 = !DILocation(line: 0, scope: !8826)
!8830 = !DILocation(line: 3258, column: 3, scope: !8826)
!8831 = !DILocation(line: 3259, column: 1, scope: !8826)
!8832 = distinct !DISubprogram(name: "stm32_clock_switch_to_hsi", scope: !888, file: !888, line: 409, type: !3089, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8833 = !DILocation(line: 412, column: 6, scope: !8834)
!8834 = distinct !DILexicalBlock(scope: !8832, file: !888, line: 412, column: 6)
!8835 = !DILocation(line: 412, column: 27, scope: !8834)
!8836 = !DILocation(line: 412, column: 6, scope: !8832)
!8837 = !DILocation(line: 414, column: 3, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8834, file: !888, line: 412, column: 33)
!8839 = !DILocation(line: 415, column: 3, scope: !8838)
!8840 = !DILocation(line: 415, column: 10, scope: !8838)
!8841 = !DILocation(line: 415, column: 31, scope: !8838)
!8842 = distinct !{!8842, !8839, !8843}
!8843 = !DILocation(line: 417, column: 3, scope: !8838)
!8844 = !DILocation(line: 421, column: 2, scope: !8832)
!8845 = !DILocation(line: 422, column: 2, scope: !8832)
!8846 = !DILocation(line: 422, column: 9, scope: !8832)
!8847 = !DILocation(line: 422, column: 34, scope: !8832)
!8848 = distinct !{!8848, !8845, !8849}
!8849 = !DILocation(line: 423, column: 2, scope: !8832)
!8850 = !DILocation(line: 424, column: 1, scope: !8832)
!8851 = distinct !DISubprogram(name: "LL_RCC_PLL_Disable", scope: !8761, file: !8761, line: 4195, type: !3089, scopeLine: 4196, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8852 = !DILocation(line: 4197, column: 3, scope: !8851)
!8853 = !DILocation(line: 4198, column: 1, scope: !8851)
!8854 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8761, file: !8761, line: 4184, type: !3089, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8855 = !DILocation(line: 4186, column: 3, scope: !8854)
!8856 = !DILocation(line: 4187, column: 1, scope: !8854)
!8857 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8761, file: !8761, line: 4205, type: !6509, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8858 = !DILocation(line: 4207, column: 11, scope: !8857)
!8859 = !DILocation(line: 4207, column: 44, scope: !8857)
!8860 = !DILocation(line: 4207, column: 3, scope: !8857)
!8861 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8761, file: !8761, line: 3007, type: !6509, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8862 = !DILocation(line: 3009, column: 11, scope: !8861)
!8863 = !DILocation(line: 3009, column: 44, scope: !8861)
!8864 = !DILocation(line: 3009, column: 3, scope: !8861)
!8865 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8761, file: !8761, line: 2987, type: !3089, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8866 = !DILocation(line: 2989, column: 3, scope: !8865)
!8867 = !DILocation(line: 2990, column: 1, scope: !8865)
!8868 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8761, file: !8761, line: 2939, type: !3089, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8869 = !DILocation(line: 2941, column: 3, scope: !8868)
!8870 = !DILocation(line: 2942, column: 1, scope: !8868)
!8871 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8761, file: !8761, line: 2949, type: !3089, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8872 = !DILocation(line: 2951, column: 3, scope: !8871)
!8873 = !DILocation(line: 2952, column: 1, scope: !8871)
!8874 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8761, file: !8761, line: 2969, type: !6509, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8875 = !DILocation(line: 2971, column: 11, scope: !8874)
!8876 = !DILocation(line: 2971, column: 44, scope: !8874)
!8877 = !DILocation(line: 2971, column: 3, scope: !8874)
!8878 = distinct !DISubprogram(name: "LL_RCC_LSI_Enable", scope: !8761, file: !8761, line: 3143, type: !3089, scopeLine: 3144, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8879 = !DILocation(line: 3145, column: 3, scope: !8878)
!8880 = !DILocation(line: 3146, column: 1, scope: !8878)
!8881 = distinct !DISubprogram(name: "LL_RCC_LSI_IsReady", scope: !8761, file: !8761, line: 3163, type: !6509, scopeLine: 3164, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !826, retainedNodes: !2026)
!8882 = !DILocation(line: 3165, column: 11, scope: !8881)
!8883 = !DILocation(line: 3165, column: 46, scope: !8881)
!8884 = !DILocation(line: 3165, column: 3, scope: !8881)
!8885 = distinct !DISubprogram(name: "get_pllsrc_frequency", scope: !8886, file: !8886, line: 40, type: !6509, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !2026)
!8886 = !DIFile(filename: "zephyr/drivers/clock_control/clock_stm32f2_f4_f7.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8887 = !DILocation(line: 45, column: 3, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8889, file: !8886, line: 44, column: 44)
!8889 = distinct !DILexicalBlock(scope: !8890, file: !8886, line: 44, column: 13)
!8890 = distinct !DILexicalBlock(scope: !8885, file: !8886, line: 42, column: 6)
!8891 = distinct !DISubprogram(name: "config_pll_sysclock", scope: !8886, file: !8886, line: 56, type: !3089, scopeLine: 57, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !2026)
!8892 = !DILocation(line: 58, column: 2, scope: !8891)
!8893 = !DILocation(line: 62, column: 1, scope: !8891)
!8894 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8761, file: !8761, line: 4304, type: !8895, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !8897)
!8895 = !DISubroutineType(types: !8896)
!8896 = !{null, !110, !110, !110, !110}
!8897 = !{!8898, !8899, !8900, !8901}
!8898 = !DILocalVariable(name: "Source", arg: 1, scope: !8894, file: !8761, line: 4304, type: !110)
!8899 = !DILocalVariable(name: "PLLM", arg: 2, scope: !8894, file: !8761, line: 4304, type: !110)
!8900 = !DILocalVariable(name: "PLLN", arg: 3, scope: !8894, file: !8761, line: 4304, type: !110)
!8901 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !8894, file: !8761, line: 4304, type: !110)
!8902 = !DILocation(line: 0, scope: !8894)
!8903 = !DILocation(line: 4306, column: 3, scope: !8894)
!8904 = !DILocation(line: 4308, column: 3, scope: !8894)
!8905 = !DILocation(line: 4312, column: 1, scope: !8894)
!8906 = distinct !DISubprogram(name: "config_enable_default_clocks", scope: !8886, file: !8886, line: 69, type: !3089, scopeLine: 70, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !2026)
!8907 = !DILocation(line: 72, column: 2, scope: !8906)
!8908 = !DILocation(line: 73, column: 1, scope: !8906)
!8909 = distinct !DISubprogram(name: "LL_APB1_GRP1_EnableClock", scope: !8910, file: !8910, line: 1185, type: !6519, scopeLine: 1186, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2860, retainedNodes: !8911)
!8910 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_bus.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!8911 = !{!8912, !8913}
!8912 = !DILocalVariable(name: "Periphs", arg: 1, scope: !8909, file: !8910, line: 1185, type: !110)
!8913 = !DILocalVariable(name: "tmpreg", scope: !8909, file: !8910, line: 1187, type: !316)
!8914 = !DILocation(line: 0, scope: !8909)
!8915 = !DILocation(line: 1187, column: 3, scope: !8909)
!8916 = !DILocation(line: 1187, column: 17, scope: !8909)
!8917 = !DILocation(line: 1188, column: 3, scope: !8909)
!8918 = !DILocation(line: 1190, column: 12, scope: !8909)
!8919 = !DILocation(line: 1190, column: 10, scope: !8909)
!8920 = !DILocation(line: 1191, column: 9, scope: !8909)
!8921 = !DILocation(line: 1192, column: 1, scope: !8909)
!8922 = distinct !DISubprogram(name: "uart_console_init", scope: !1019, file: !1019, line: 588, type: !996, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8923)
!8923 = !{!8924}
!8924 = !DILocalVariable(name: "arg", arg: 1, scope: !8922, file: !1019, line: 588, type: !974)
!8925 = !DILocation(line: 0, scope: !8922)
!8926 = !DILocation(line: 593, column: 7, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !8922, file: !1019, line: 593, column: 6)
!8928 = !DILocation(line: 593, column: 6, scope: !8922)
!8929 = !DILocation(line: 597, column: 2, scope: !8922)
!8930 = !DILocation(line: 599, column: 2, scope: !8922)
!8931 = !DILocation(line: 600, column: 1, scope: !8922)
!8932 = distinct !DISubprogram(name: "device_is_ready", scope: !8933, file: !8933, line: 47, type: !8934, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8936)
!8933 = !DIFile(filename: "zephyr/include/generated/syscalls/device.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!8934 = !DISubroutineType(types: !8935)
!8935 = !{!347, !974}
!8936 = !{!8937}
!8937 = !DILocalVariable(name: "dev", arg: 1, scope: !8932, file: !8933, line: 47, type: !974)
!8938 = !DILocation(line: 0, scope: !8932)
!8939 = !DILocation(line: 55, column: 2, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8932, file: !8933, line: 55, column: 2)
!8941 = !{i64 2154963003}
!8942 = !DILocation(line: 56, column: 9, scope: !8932)
!8943 = !DILocation(line: 56, column: 2, scope: !8932)
!8944 = distinct !DISubprogram(name: "uart_console_hook_install", scope: !1019, file: !1019, line: 573, type: !3089, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !2026)
!8945 = !DILocation(line: 576, column: 2, scope: !8944)
!8946 = !DILocation(line: 579, column: 2, scope: !8944)
!8947 = !DILocation(line: 581, column: 1, scope: !8944)
!8948 = distinct !DISubprogram(name: "console_out", scope: !1019, file: !1019, line: 77, type: !303, scopeLine: 78, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8949)
!8949 = !{!8950}
!8950 = !DILocalVariable(name: "c", arg: 1, scope: !8948, file: !1019, line: 77, type: !109)
!8951 = !DILocation(line: 0, scope: !8948)
!8952 = !DILocation(line: 89, column: 11, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8948, file: !1019, line: 89, column: 6)
!8954 = !DILocation(line: 89, column: 6, scope: !8948)
!8955 = !DILocation(line: 90, column: 3, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8953, file: !1019, line: 89, column: 17)
!8957 = !DILocation(line: 91, column: 2, scope: !8956)
!8958 = !DILocation(line: 92, column: 34, scope: !8948)
!8959 = !DILocation(line: 92, column: 2, scope: !8948)
!8960 = !DILocation(line: 94, column: 2, scope: !8948)
!8961 = distinct !DISubprogram(name: "uart_poll_out", scope: !8962, file: !8962, line: 95, type: !992, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8963)
!8962 = !DIFile(filename: "zephyr/include/generated/syscalls/uart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject/build/96b_argonkey/simple")
!8963 = !{!8964, !8965}
!8964 = !DILocalVariable(name: "dev", arg: 1, scope: !8961, file: !8962, line: 95, type: !974)
!8965 = !DILocalVariable(name: "out_char", arg: 2, scope: !8961, file: !8962, line: 95, type: !179)
!8966 = !DILocation(line: 0, scope: !8961)
!8967 = !DILocation(line: 105, column: 2, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8961, file: !8962, line: 105, column: 2)
!8969 = !{i64 2155046394}
!8970 = !DILocation(line: 106, column: 2, scope: !8961)
!8971 = !DILocation(line: 107, column: 1, scope: !8961)
!8972 = distinct !DISubprogram(name: "z_impl_uart_poll_out", scope: !968, file: !968, line: 574, type: !992, scopeLine: 576, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8973)
!8973 = !{!8974, !8975, !8976}
!8974 = !DILocalVariable(name: "dev", arg: 1, scope: !8972, file: !968, line: 574, type: !974)
!8975 = !DILocalVariable(name: "out_char", arg: 2, scope: !8972, file: !968, line: 575, type: !179)
!8976 = !DILocalVariable(name: "api", scope: !8972, file: !968, line: 577, type: !965)
!8977 = !DILocation(line: 0, scope: !8972)
!8978 = !DILocation(line: 578, column: 40, scope: !8972)
!8979 = !DILocation(line: 580, column: 7, scope: !8972)
!8980 = !DILocation(line: 580, column: 2, scope: !8972)
!8981 = !DILocation(line: 581, column: 1, scope: !8972)
!8982 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !8934, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !8983)
!8983 = !{!8984}
!8984 = !DILocalVariable(name: "dev", arg: 1, scope: !8982, file: !336, line: 730, type: !974)
!8985 = !DILocation(line: 0, scope: !8982)
!8986 = !DILocation(line: 732, column: 9, scope: !8982)
!8987 = !DILocation(line: 732, column: 2, scope: !8982)
!8988 = distinct !DISubprogram(name: "uart_register_input", scope: !1019, file: !1019, line: 560, type: !8989, scopeLine: 562, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !962, retainedNodes: !9036)
!8989 = !DISubroutineType(types: !8990)
!8990 = !{null, !8991, !8991, !9033}
!8991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8992, size: 32)
!8992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_fifo", file: !118, line: 2208, size: 160, elements: !8993)
!8993 = !{!8994}
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "_queue", scope: !8992, file: !118, line: 2209, baseType: !8995, size: 160)
!8995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_queue", file: !118, line: 1709, size: 160, elements: !8996)
!8996 = !{!8997, !9010, !9014}
!8997 = !DIDerivedType(tag: DW_TAG_member, name: "data_q", scope: !8995, file: !118, line: 1710, baseType: !8998, size: 64)
!8998 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sflist_t", file: !8999, line: 46, baseType: !9000)
!8999 = !DIFile(filename: "zephyr/include/zephyr/sys/sflist.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sflist", file: !8999, line: 41, size: 64, elements: !9001)
!9001 = !{!9002, !9009}
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9000, file: !8999, line: 42, baseType: !9003, size: 32)
!9003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9004, size: 32)
!9004 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_sfnode_t", file: !8999, line: 39, baseType: !9005)
!9005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_sfnode", file: !8999, line: 35, size: 32, elements: !9006)
!9006 = !{!9007}
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "next_and_flags", scope: !9005, file: !8999, line: 36, baseType: !9008, size: 32)
!9008 = !DIDerivedType(tag: DW_TAG_typedef, name: "unative_t", file: !8999, line: 32, baseType: !110)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9000, file: !8999, line: 43, baseType: !9003, size: 32, offset: 32)
!9010 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8995, file: !118, line: 1711, baseType: !9011, size: 32, offset: 64)
!9011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !9012)
!9012 = !{!9013}
!9013 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !9011, file: !251, line: 52, baseType: !22, size: 32)
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !8995, file: !118, line: 1712, baseType: !9015, size: 64, offset: 96)
!9015 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !9016)
!9016 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !9017)
!9017 = !{!9018}
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !9016, file: !122, line: 232, baseType: !9019, size: 64)
!9019 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !9020)
!9020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !9021)
!9021 = !{!9022, !9028}
!9022 = !DIDerivedType(tag: DW_TAG_member, scope: !9020, file: !127, line: 38, baseType: !9023, size: 32)
!9023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9020, file: !127, line: 38, size: 32, elements: !9024)
!9024 = !{!9025, !9027}
!9025 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9023, file: !127, line: 39, baseType: !9026, size: 32)
!9026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9020, size: 32)
!9027 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9023, file: !127, line: 40, baseType: !9026, size: 32)
!9028 = !DIDerivedType(tag: DW_TAG_member, scope: !9020, file: !127, line: 42, baseType: !9029, size: 32, offset: 32)
!9029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9020, file: !127, line: 42, size: 32, elements: !9030)
!9030 = !{!9031, !9032}
!9031 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9029, file: !127, line: 43, baseType: !9026, size: 32)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9029, file: !127, line: 44, baseType: !9026, size: 32)
!9033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9034, size: 32)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{!178, !285, !178}
!9036 = !{!9037, !9038, !9039}
!9037 = !DILocalVariable(name: "avail", arg: 1, scope: !8988, file: !1019, line: 560, type: !8991)
!9038 = !DILocalVariable(name: "lines", arg: 2, scope: !8988, file: !1019, line: 560, type: !8991)
!9039 = !DILocalVariable(name: "completion", arg: 3, scope: !8988, file: !1019, line: 561, type: !9033)
!9040 = !DILocation(line: 0, scope: !8988)
!9041 = !DILocation(line: 566, column: 1, scope: !8988)
!9042 = distinct !DISubprogram(name: "gpio_stm32_config", scope: !1199, file: !1199, line: 523, type: !1055, scopeLine: 525, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9043)
!9043 = !{!9044, !9045, !9046, !9047, !9048}
!9044 = !DILocalVariable(name: "dev", arg: 1, scope: !9042, file: !1199, line: 523, type: !1057)
!9045 = !DILocalVariable(name: "pin", arg: 2, scope: !9042, file: !1199, line: 524, type: !1072)
!9046 = !DILocalVariable(name: "flags", arg: 3, scope: !9042, file: !1199, line: 524, type: !1073)
!9047 = !DILocalVariable(name: "err", scope: !9042, file: !1199, line: 526, type: !109)
!9048 = !DILocalVariable(name: "pincfg", scope: !9042, file: !1199, line: 527, type: !109)
!9049 = !DILocation(line: 0, scope: !9042)
!9050 = !DILocation(line: 527, column: 2, scope: !9042)
!9051 = !DILocation(line: 532, column: 8, scope: !9042)
!9052 = !DILocation(line: 533, column: 10, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9042, file: !1199, line: 533, column: 6)
!9054 = !DILocation(line: 533, column: 6, scope: !9042)
!9055 = !DILocation(line: 543, column: 13, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9042, file: !1199, line: 543, column: 6)
!9057 = !DILocation(line: 543, column: 28, scope: !9056)
!9058 = !DILocation(line: 543, column: 6, scope: !9042)
!9059 = !DILocation(line: 544, column: 14, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9061, file: !1199, line: 544, column: 7)
!9061 = distinct !DILexicalBlock(scope: !9056, file: !1199, line: 543, column: 34)
!9062 = !DILocation(line: 544, column: 39, scope: !9060)
!9063 = !DILocation(line: 544, column: 7, scope: !9061)
!9064 = !DILocation(line: 545, column: 38, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9060, file: !1199, line: 544, column: 45)
!9066 = !DILocation(line: 545, column: 4, scope: !9065)
!9067 = !DILocation(line: 546, column: 3, scope: !9065)
!9068 = !DILocation(line: 546, column: 21, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9060, file: !1199, line: 546, column: 14)
!9070 = !DILocation(line: 546, column: 45, scope: !9069)
!9071 = !DILocation(line: 546, column: 14, scope: !9060)
!9072 = !DILocation(line: 547, column: 40, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9069, file: !1199, line: 546, column: 51)
!9074 = !DILocation(line: 547, column: 4, scope: !9073)
!9075 = !DILocation(line: 548, column: 3, scope: !9073)
!9076 = !DILocation(line: 551, column: 32, scope: !9042)
!9077 = !DILocation(line: 551, column: 37, scope: !9042)
!9078 = !DILocation(line: 551, column: 2, scope: !9042)
!9079 = !DILocation(line: 554, column: 6, scope: !9042)
!9080 = !DILocation(line: 562, column: 1, scope: !9042)
!9081 = distinct !DISubprogram(name: "gpio_stm32_port_get_raw", scope: !1199, file: !1199, line: 410, type: !9082, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9084)
!9082 = !DISubroutineType(types: !9083)
!9083 = !{!109, !1057, !884}
!9084 = !{!9085, !9086, !9087, !9089}
!9085 = !DILocalVariable(name: "dev", arg: 1, scope: !9081, file: !1199, line: 410, type: !1057)
!9086 = !DILocalVariable(name: "value", arg: 2, scope: !9081, file: !1199, line: 410, type: !884)
!9087 = !DILocalVariable(name: "cfg", scope: !9081, file: !1199, line: 412, type: !9088)
!9088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 32)
!9089 = !DILocalVariable(name: "gpio", scope: !9081, file: !1199, line: 413, type: !1130)
!9090 = !DILocation(line: 0, scope: !9081)
!9091 = !DILocation(line: 412, column: 45, scope: !9081)
!9092 = !DILocation(line: 413, column: 44, scope: !9081)
!9093 = !DILocation(line: 415, column: 11, scope: !9081)
!9094 = !DILocation(line: 415, column: 9, scope: !9081)
!9095 = !DILocation(line: 417, column: 2, scope: !9081)
!9096 = distinct !DISubprogram(name: "gpio_stm32_port_set_masked_raw", scope: !1199, file: !1199, line: 420, type: !1082, scopeLine: 423, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9097)
!9097 = !{!9098, !9099, !9100, !9101, !9102, !9103}
!9098 = !DILocalVariable(name: "dev", arg: 1, scope: !9096, file: !1199, line: 420, type: !1057)
!9099 = !DILocalVariable(name: "mask", arg: 2, scope: !9096, file: !1199, line: 421, type: !1084)
!9100 = !DILocalVariable(name: "value", arg: 3, scope: !9096, file: !1199, line: 422, type: !1079)
!9101 = !DILocalVariable(name: "cfg", scope: !9096, file: !1199, line: 424, type: !9088)
!9102 = !DILocalVariable(name: "gpio", scope: !9096, file: !1199, line: 425, type: !1130)
!9103 = !DILocalVariable(name: "port_value", scope: !9096, file: !1199, line: 426, type: !110)
!9104 = !DILocation(line: 0, scope: !9096)
!9105 = !DILocation(line: 424, column: 45, scope: !9096)
!9106 = !DILocation(line: 425, column: 44, scope: !9096)
!9107 = !DILocation(line: 430, column: 15, scope: !9096)
!9108 = !DILocation(line: 431, column: 46, scope: !9096)
!9109 = !DILocation(line: 431, column: 44, scope: !9096)
!9110 = !DILocation(line: 431, column: 61, scope: !9096)
!9111 = !DILocation(line: 431, column: 53, scope: !9096)
!9112 = !DILocation(line: 431, column: 2, scope: !9096)
!9113 = !DILocation(line: 435, column: 2, scope: !9096)
!9114 = distinct !DISubprogram(name: "gpio_stm32_port_set_bits_raw", scope: !1199, file: !1199, line: 438, type: !1087, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9115)
!9115 = !{!9116, !9117, !9118, !9119}
!9116 = !DILocalVariable(name: "dev", arg: 1, scope: !9114, file: !1199, line: 438, type: !1057)
!9117 = !DILocalVariable(name: "pins", arg: 2, scope: !9114, file: !1199, line: 439, type: !1084)
!9118 = !DILocalVariable(name: "cfg", scope: !9114, file: !1199, line: 441, type: !9088)
!9119 = !DILocalVariable(name: "gpio", scope: !9114, file: !1199, line: 442, type: !1130)
!9120 = !DILocation(line: 0, scope: !9114)
!9121 = !DILocation(line: 441, column: 45, scope: !9114)
!9122 = !DILocation(line: 442, column: 44, scope: !9114)
!9123 = !DILocation(line: 448, column: 2, scope: !9114)
!9124 = !DILocation(line: 450, column: 2, scope: !9114)
!9125 = distinct !DISubprogram(name: "gpio_stm32_port_clear_bits_raw", scope: !1199, file: !1199, line: 453, type: !1087, scopeLine: 455, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9126)
!9126 = !{!9127, !9128, !9129, !9130}
!9127 = !DILocalVariable(name: "dev", arg: 1, scope: !9125, file: !1199, line: 453, type: !1057)
!9128 = !DILocalVariable(name: "pins", arg: 2, scope: !9125, file: !1199, line: 454, type: !1084)
!9129 = !DILocalVariable(name: "cfg", scope: !9125, file: !1199, line: 456, type: !9088)
!9130 = !DILocalVariable(name: "gpio", scope: !9125, file: !1199, line: 457, type: !1130)
!9131 = !DILocation(line: 0, scope: !9125)
!9132 = !DILocation(line: 456, column: 45, scope: !9125)
!9133 = !DILocation(line: 457, column: 44, scope: !9125)
!9134 = !DILocation(line: 467, column: 2, scope: !9125)
!9135 = !DILocation(line: 470, column: 2, scope: !9125)
!9136 = distinct !DISubprogram(name: "gpio_stm32_port_toggle_bits", scope: !1199, file: !1199, line: 473, type: !1087, scopeLine: 475, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9137)
!9137 = !{!9138, !9139, !9140, !9141}
!9138 = !DILocalVariable(name: "dev", arg: 1, scope: !9136, file: !1199, line: 473, type: !1057)
!9139 = !DILocalVariable(name: "pins", arg: 2, scope: !9136, file: !1199, line: 474, type: !1084)
!9140 = !DILocalVariable(name: "cfg", scope: !9136, file: !1199, line: 476, type: !9088)
!9141 = !DILocalVariable(name: "gpio", scope: !9136, file: !1199, line: 477, type: !1130)
!9142 = !DILocation(line: 0, scope: !9136)
!9143 = !DILocation(line: 476, column: 45, scope: !9136)
!9144 = !DILocation(line: 477, column: 44, scope: !9136)
!9145 = !DILocation(line: 484, column: 2, scope: !9136)
!9146 = !DILocation(line: 487, column: 2, scope: !9136)
!9147 = distinct !DISubprogram(name: "gpio_stm32_pin_interrupt_configure", scope: !1199, file: !1199, line: 594, type: !1093, scopeLine: 598, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9148)
!9148 = !{!9149, !9150, !9151, !9152, !9153, !9154, !9156, !9157, !9158}
!9149 = !DILocalVariable(name: "dev", arg: 1, scope: !9147, file: !1199, line: 594, type: !1057)
!9150 = !DILocalVariable(name: "pin", arg: 2, scope: !9147, file: !1199, line: 595, type: !1072)
!9151 = !DILocalVariable(name: "mode", arg: 3, scope: !9147, file: !1199, line: 596, type: !1031)
!9152 = !DILocalVariable(name: "trig", arg: 4, scope: !9147, file: !1199, line: 597, type: !1037)
!9153 = !DILocalVariable(name: "cfg", scope: !9147, file: !1199, line: 599, type: !9088)
!9154 = !DILocalVariable(name: "data", scope: !9147, file: !1199, line: 600, type: !9155)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 32)
!9156 = !DILocalVariable(name: "edge", scope: !9147, file: !1199, line: 601, type: !109)
!9157 = !DILocalVariable(name: "err", scope: !9147, file: !1199, line: 602, type: !109)
!9158 = !DILabel(scope: !9147, name: "exit", file: !1199, line: 643)
!9159 = !DILocation(line: 0, scope: !9147)
!9160 = !DILocation(line: 599, column: 45, scope: !9147)
!9161 = !DILocation(line: 604, column: 6, scope: !9147)
!9162 = !DILocation(line: 605, column: 34, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9164, file: !1199, line: 605, column: 7)
!9164 = distinct !DILexicalBlock(scope: !9165, file: !1199, line: 604, column: 38)
!9165 = distinct !DILexicalBlock(scope: !9147, file: !1199, line: 604, column: 6)
!9166 = !DILocation(line: 605, column: 7, scope: !9163)
!9167 = !DILocation(line: 605, column: 47, scope: !9163)
!9168 = !DILocation(line: 605, column: 39, scope: !9163)
!9169 = !DILocation(line: 605, column: 7, scope: !9164)
!9170 = !DILocation(line: 606, column: 4, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9163, file: !1199, line: 605, column: 53)
!9172 = !DILocation(line: 607, column: 4, scope: !9171)
!9173 = !DILocation(line: 608, column: 4, scope: !9171)
!9174 = !DILocation(line: 609, column: 3, scope: !9171)
!9175 = !DILocation(line: 600, column: 38, scope: !9147)
!9176 = !DILocation(line: 620, column: 30, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9147, file: !1199, line: 620, column: 6)
!9178 = !DILocation(line: 620, column: 6, scope: !9177)
!9179 = !DILocation(line: 620, column: 57, scope: !9177)
!9180 = !DILocation(line: 620, column: 6, scope: !9147)
!9181 = !DILocation(line: 625, column: 29, scope: !9147)
!9182 = !DILocation(line: 625, column: 2, scope: !9147)
!9183 = !DILocation(line: 627, column: 2, scope: !9147)
!9184 = !DILocation(line: 630, column: 3, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9147, file: !1199, line: 627, column: 16)
!9186 = !DILocation(line: 633, column: 3, scope: !9185)
!9187 = !DILocation(line: 636, column: 3, scope: !9185)
!9188 = !DILocation(line: 639, column: 2, scope: !9147)
!9189 = !DILocation(line: 641, column: 2, scope: !9147)
!9190 = !DILocation(line: 643, column: 1, scope: !9147)
!9191 = !DILocation(line: 644, column: 2, scope: !9147)
!9192 = distinct !DISubprogram(name: "gpio_stm32_manage_callback", scope: !1199, file: !1199, line: 647, type: !1097, scopeLine: 650, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9193)
!9193 = !{!9194, !9195, !9196, !9197}
!9194 = !DILocalVariable(name: "dev", arg: 1, scope: !9192, file: !1199, line: 647, type: !1057)
!9195 = !DILocalVariable(name: "callback", arg: 2, scope: !9192, file: !1199, line: 648, type: !1099)
!9196 = !DILocalVariable(name: "set", arg: 3, scope: !9192, file: !1199, line: 649, type: !347)
!9197 = !DILocalVariable(name: "data", scope: !9192, file: !1199, line: 651, type: !9155)
!9198 = !DILocation(line: 0, scope: !9192)
!9199 = !DILocation(line: 651, column: 38, scope: !9192)
!9200 = !DILocation(line: 653, column: 37, scope: !9192)
!9201 = !DILocation(line: 653, column: 9, scope: !9192)
!9202 = !DILocation(line: 653, column: 2, scope: !9192)
!9203 = distinct !DISubprogram(name: "gpio_manage_callback", scope: !9204, file: !9204, line: 38, type: !9205, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9208)
!9204 = !DIFile(filename: "zephyr/include/zephyr/drivers/gpio/gpio_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9205 = !DISubroutineType(types: !9206)
!9206 = !{!109, !9207, !1099, !347}
!9207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 32)
!9208 = !{!9209, !9210, !9211}
!9209 = !DILocalVariable(name: "callbacks", arg: 1, scope: !9203, file: !9204, line: 38, type: !9207)
!9210 = !DILocalVariable(name: "callback", arg: 2, scope: !9203, file: !9204, line: 39, type: !1099)
!9211 = !DILocalVariable(name: "set", arg: 3, scope: !9203, file: !9204, line: 40, type: !347)
!9212 = !DILocation(line: 0, scope: !9203)
!9213 = !DILocation(line: 42, column: 2, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9215, file: !9204, line: 42, column: 2)
!9215 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 42, column: 2)
!9216 = !DILocation(line: 42, column: 2, scope: !9215)
!9217 = !DILocation(line: 42, column: 2, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9214, file: !9204, line: 42, column: 2)
!9219 = !DILocation(line: 43, column: 2, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9221, file: !9204, line: 43, column: 2)
!9221 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 43, column: 2)
!9222 = !DILocation(line: 43, column: 2, scope: !9221)
!9223 = !DILocation(line: 43, column: 2, scope: !9224)
!9224 = distinct !DILexicalBlock(scope: !9220, file: !9204, line: 43, column: 2)
!9225 = !DILocation(line: 45, column: 7, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 45, column: 6)
!9227 = !DILocation(line: 45, column: 6, scope: !9203)
!9228 = !DILocation(line: 46, column: 56, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !9204, line: 46, column: 7)
!9230 = distinct !DILexicalBlock(scope: !9226, file: !9204, line: 45, column: 38)
!9231 = !DILocation(line: 46, column: 8, scope: !9229)
!9232 = !DILocation(line: 46, column: 7, scope: !9230)
!9233 = !DILocation(line: 51, column: 13, scope: !9226)
!9234 = !DILocation(line: 56, column: 43, scope: !9235)
!9235 = distinct !DILexicalBlock(scope: !9236, file: !9204, line: 55, column: 11)
!9236 = distinct !DILexicalBlock(scope: !9203, file: !9204, line: 55, column: 6)
!9237 = !DILocation(line: 56, column: 3, scope: !9235)
!9238 = !DILocation(line: 57, column: 2, scope: !9235)
!9239 = !DILocation(line: 60, column: 1, scope: !9203)
!9240 = distinct !DISubprogram(name: "sys_slist_is_empty", scope: !1104, file: !1104, line: 261, type: !9241, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9243)
!9241 = !DISubroutineType(types: !9242)
!9242 = !{!347, !9207}
!9243 = !{!9244}
!9244 = !DILocalVariable(name: "list", arg: 1, scope: !9240, file: !1104, line: 261, type: !9207)
!9245 = !DILocation(line: 0, scope: !9240)
!9246 = !DILocation(line: 261, column: 1, scope: !9240)
!9247 = distinct !DISubprogram(name: "sys_slist_find_and_remove", scope: !1104, file: !1104, line: 417, type: !9248, scopeLine: 417, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9250)
!9248 = !DISubroutineType(types: !9249)
!9249 = !{!347, !9207, !1275}
!9250 = !{!9251, !9252, !9253, !9254}
!9251 = !DILocalVariable(name: "list", arg: 1, scope: !9247, file: !1104, line: 417, type: !9207)
!9252 = !DILocalVariable(name: "node", arg: 2, scope: !9247, file: !1104, line: 417, type: !1275)
!9253 = !DILocalVariable(name: "prev", scope: !9247, file: !1104, line: 417, type: !1275)
!9254 = !DILocalVariable(name: "test", scope: !9247, file: !1104, line: 417, type: !1275)
!9255 = !DILocation(line: 0, scope: !9247)
!9256 = !DILocation(line: 417, column: 1, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9247, file: !1104, line: 417, column: 1)
!9258 = !DILocation(line: 417, column: 1, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9257, file: !1104, line: 417, column: 1)
!9260 = !DILocation(line: 417, column: 1, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9262, file: !1104, line: 417, column: 1)
!9262 = distinct !DILexicalBlock(scope: !9259, file: !1104, line: 417, column: 1)
!9263 = !DILocation(line: 417, column: 1, scope: !9262)
!9264 = distinct !{!9264, !9256, !9256}
!9265 = !DILocation(line: 417, column: 1, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9261, file: !1104, line: 417, column: 1)
!9267 = !DILocation(line: 417, column: 1, scope: !9247)
!9268 = distinct !DISubprogram(name: "sys_slist_prepend", scope: !1104, file: !1104, line: 298, type: !9269, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9271)
!9269 = !DISubroutineType(types: !9270)
!9270 = !{null, !9207, !1275}
!9271 = !{!9272, !9273}
!9272 = !DILocalVariable(name: "list", arg: 1, scope: !9268, file: !1104, line: 298, type: !9207)
!9273 = !DILocalVariable(name: "node", arg: 2, scope: !9268, file: !1104, line: 298, type: !1275)
!9274 = !DILocation(line: 0, scope: !9268)
!9275 = !DILocation(line: 298, column: 1, scope: !9268)
!9276 = !DILocation(line: 298, column: 1, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9268, file: !1104, line: 298, column: 1)
!9278 = !DILocation(line: 298, column: 1, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9277, file: !1104, line: 298, column: 1)
!9280 = distinct !DISubprogram(name: "sys_slist_peek_head", scope: !1104, file: !1104, line: 231, type: !9281, scopeLine: 232, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9283)
!9281 = !DISubroutineType(types: !9282)
!9282 = !{!1275, !9207}
!9283 = !{!9284}
!9284 = !DILocalVariable(name: "list", arg: 1, scope: !9280, file: !1104, line: 231, type: !9207)
!9285 = !DILocation(line: 0, scope: !9280)
!9286 = !DILocation(line: 233, column: 15, scope: !9280)
!9287 = !DILocation(line: 233, column: 2, scope: !9280)
!9288 = distinct !DISubprogram(name: "z_snode_next_set", scope: !1104, file: !1104, line: 209, type: !9289, scopeLine: 210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9291)
!9289 = !DISubroutineType(types: !9290)
!9290 = !{null, !1275, !1275}
!9291 = !{!9292, !9293}
!9292 = !DILocalVariable(name: "parent", arg: 1, scope: !9288, file: !1104, line: 209, type: !1275)
!9293 = !DILocalVariable(name: "child", arg: 2, scope: !9288, file: !1104, line: 209, type: !1275)
!9294 = !DILocation(line: 0, scope: !9288)
!9295 = !DILocation(line: 211, column: 10, scope: !9288)
!9296 = !DILocation(line: 211, column: 15, scope: !9288)
!9297 = !DILocation(line: 212, column: 1, scope: !9288)
!9298 = distinct !DISubprogram(name: "z_slist_head_set", scope: !1104, file: !1104, line: 214, type: !9269, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9299)
!9299 = !{!9300, !9301}
!9300 = !DILocalVariable(name: "list", arg: 1, scope: !9298, file: !1104, line: 214, type: !9207)
!9301 = !DILocalVariable(name: "node", arg: 2, scope: !9298, file: !1104, line: 214, type: !1275)
!9302 = !DILocation(line: 0, scope: !9298)
!9303 = !DILocation(line: 216, column: 8, scope: !9298)
!9304 = !DILocation(line: 216, column: 13, scope: !9298)
!9305 = !DILocation(line: 217, column: 1, scope: !9298)
!9306 = distinct !DISubprogram(name: "sys_slist_peek_tail", scope: !1104, file: !1104, line: 243, type: !9281, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9307)
!9307 = !{!9308}
!9308 = !DILocalVariable(name: "list", arg: 1, scope: !9306, file: !1104, line: 243, type: !9207)
!9309 = !DILocation(line: 0, scope: !9306)
!9310 = !DILocation(line: 245, column: 15, scope: !9306)
!9311 = !DILocation(line: 245, column: 2, scope: !9306)
!9312 = distinct !DISubprogram(name: "z_slist_tail_set", scope: !1104, file: !1104, line: 219, type: !9269, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9313)
!9313 = !{!9314, !9315}
!9314 = !DILocalVariable(name: "list", arg: 1, scope: !9312, file: !1104, line: 219, type: !9207)
!9315 = !DILocalVariable(name: "node", arg: 2, scope: !9312, file: !1104, line: 219, type: !1275)
!9316 = !DILocation(line: 0, scope: !9312)
!9317 = !DILocation(line: 221, column: 8, scope: !9312)
!9318 = !DILocation(line: 221, column: 13, scope: !9312)
!9319 = !DILocation(line: 222, column: 1, scope: !9312)
!9320 = distinct !DISubprogram(name: "sys_slist_remove", scope: !1104, file: !1104, line: 401, type: !9321, scopeLine: 401, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9323)
!9321 = !DISubroutineType(types: !9322)
!9322 = !{null, !9207, !1275, !1275}
!9323 = !{!9324, !9325, !9326}
!9324 = !DILocalVariable(name: "list", arg: 1, scope: !9320, file: !1104, line: 401, type: !9207)
!9325 = !DILocalVariable(name: "prev_node", arg: 2, scope: !9320, file: !1104, line: 401, type: !1275)
!9326 = !DILocalVariable(name: "node", arg: 3, scope: !9320, file: !1104, line: 401, type: !1275)
!9327 = !DILocation(line: 0, scope: !9320)
!9328 = !DILocation(line: 401, column: 1, scope: !9329)
!9329 = distinct !DILexicalBlock(scope: !9320, file: !1104, line: 401, column: 1)
!9330 = !DILocation(line: 0, scope: !9329)
!9331 = !DILocation(line: 401, column: 1, scope: !9320)
!9332 = !DILocation(line: 401, column: 1, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9329, file: !1104, line: 401, column: 1)
!9334 = !DILocation(line: 401, column: 1, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9333, file: !1104, line: 401, column: 1)
!9336 = !DILocation(line: 401, column: 1, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9335, file: !1104, line: 401, column: 1)
!9338 = !DILocation(line: 401, column: 1, scope: !9339)
!9339 = distinct !DILexicalBlock(scope: !9329, file: !1104, line: 401, column: 1)
!9340 = !DILocation(line: 401, column: 1, scope: !9341)
!9341 = distinct !DILexicalBlock(scope: !9339, file: !1104, line: 401, column: 1)
!9342 = !DILocation(line: 401, column: 1, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9341, file: !1104, line: 401, column: 1)
!9344 = distinct !DISubprogram(name: "sys_slist_peek_next", scope: !1104, file: !1104, line: 285, type: !9345, scopeLine: 285, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9347)
!9345 = !DISubroutineType(types: !9346)
!9346 = !{!1275, !1275}
!9347 = !{!9348}
!9348 = !DILocalVariable(name: "node", arg: 1, scope: !9344, file: !1104, line: 285, type: !1275)
!9349 = !DILocation(line: 0, scope: !9344)
!9350 = !DILocation(line: 285, column: 1, scope: !9344)
!9351 = distinct !DISubprogram(name: "sys_slist_peek_next_no_check", scope: !1104, file: !1104, line: 274, type: !9345, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9352)
!9352 = !{!9353}
!9353 = !DILocalVariable(name: "node", arg: 1, scope: !9351, file: !1104, line: 274, type: !1275)
!9354 = !DILocation(line: 0, scope: !9351)
!9355 = !DILocation(line: 274, column: 1, scope: !9351)
!9356 = distinct !DISubprogram(name: "z_snode_next_peek", scope: !1104, file: !1104, line: 204, type: !9345, scopeLine: 205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9357)
!9357 = !{!9358}
!9358 = !DILocalVariable(name: "node", arg: 1, scope: !9356, file: !1104, line: 204, type: !1275)
!9359 = !DILocation(line: 0, scope: !9356)
!9360 = !DILocation(line: 206, column: 15, scope: !9356)
!9361 = !DILocation(line: 206, column: 2, scope: !9356)
!9362 = distinct !DISubprogram(name: "gpio_stm32_get_exti_source", scope: !1199, file: !1199, line: 342, type: !303, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9363)
!9363 = !{!9364, !9365, !9366}
!9364 = !DILocalVariable(name: "pin", arg: 1, scope: !9362, file: !1199, line: 342, type: !109)
!9365 = !DILocalVariable(name: "line", scope: !9362, file: !1199, line: 344, type: !110)
!9366 = !DILocalVariable(name: "port", scope: !9362, file: !1199, line: 345, type: !109)
!9367 = !DILocation(line: 0, scope: !9362)
!9368 = !DILocation(line: 344, column: 18, scope: !9362)
!9369 = !{i32 983040, i32 0}
!9370 = !DILocation(line: 356, column: 9, scope: !9362)
!9371 = !DILocation(line: 370, column: 2, scope: !9362)
!9372 = distinct !DISubprogram(name: "gpio_stm32_isr", scope: !1199, file: !1199, line: 37, type: !748, scopeLine: 38, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9373)
!9373 = !{!9374, !9375, !9376}
!9374 = !DILocalVariable(name: "line", arg: 1, scope: !9372, file: !1199, line: 37, type: !109)
!9375 = !DILocalVariable(name: "arg", arg: 2, scope: !9372, file: !1199, line: 37, type: !107)
!9376 = !DILocalVariable(name: "data", scope: !9372, file: !1199, line: 39, type: !9155)
!9377 = !DILocation(line: 0, scope: !9372)
!9378 = !DILocation(line: 41, column: 29, scope: !9372)
!9379 = !DILocation(line: 41, column: 39, scope: !9372)
!9380 = !DILocation(line: 41, column: 44, scope: !9372)
!9381 = !DILocation(line: 41, column: 2, scope: !9372)
!9382 = !DILocation(line: 42, column: 1, scope: !9372)
!9383 = distinct !DISubprogram(name: "gpio_stm32_enable_int", scope: !1199, file: !1199, line: 376, type: !9384, scopeLine: 377, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9386)
!9384 = !DISubroutineType(types: !9385)
!9385 = !{!109, !109, !109}
!9386 = !{!9387, !9388, !9389, !9391, !9392}
!9387 = !DILocalVariable(name: "port", arg: 1, scope: !9383, file: !1199, line: 376, type: !109)
!9388 = !DILocalVariable(name: "pin", arg: 2, scope: !9383, file: !1199, line: 376, type: !109)
!9389 = !DILocalVariable(name: "clk", scope: !9383, file: !1199, line: 386, type: !9390)
!9390 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!9391 = !DILocalVariable(name: "pclken", scope: !9383, file: !1199, line: 387, type: !1318)
!9392 = !DILocalVariable(name: "ret", scope: !9383, file: !1199, line: 396, type: !109)
!9393 = !DILocation(line: 0, scope: !9383)
!9394 = !DILocation(line: 387, column: 2, scope: !9383)
!9395 = !DILocation(line: 387, column: 22, scope: !9383)
!9396 = !DILocation(line: 399, column: 8, scope: !9383)
!9397 = !DILocation(line: 400, column: 10, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9383, file: !1199, line: 400, column: 6)
!9399 = !DILocation(line: 400, column: 6, scope: !9383)
!9400 = !DILocation(line: 405, column: 2, scope: !9383)
!9401 = !DILocation(line: 407, column: 2, scope: !9383)
!9402 = !DILocation(line: 408, column: 1, scope: !9383)
!9403 = distinct !DISubprogram(name: "clock_control_on", scope: !835, file: !835, line: 123, type: !1164, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9404)
!9404 = !{!9405, !9406, !9407}
!9405 = !DILocalVariable(name: "dev", arg: 1, scope: !9403, file: !835, line: 123, type: !1057)
!9406 = !DILocalVariable(name: "sys", arg: 2, scope: !9403, file: !835, line: 124, type: !928)
!9407 = !DILocalVariable(name: "api", scope: !9403, file: !835, line: 126, type: !1157)
!9408 = !DILocation(line: 0, scope: !9403)
!9409 = !DILocation(line: 127, column: 49, scope: !9403)
!9410 = !DILocation(line: 129, column: 14, scope: !9403)
!9411 = !DILocation(line: 129, column: 9, scope: !9403)
!9412 = !DILocation(line: 129, column: 2, scope: !9403)
!9413 = distinct !DISubprogram(name: "gpio_stm32_set_exti_source", scope: !1199, file: !1199, line: 311, type: !8519, scopeLine: 312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9414)
!9414 = !{!9415, !9416, !9417}
!9415 = !DILocalVariable(name: "port", arg: 1, scope: !9413, file: !1199, line: 311, type: !109)
!9416 = !DILocalVariable(name: "pin", arg: 2, scope: !9413, file: !1199, line: 311, type: !109)
!9417 = !DILocalVariable(name: "line", scope: !9413, file: !1199, line: 313, type: !110)
!9418 = !DILocation(line: 0, scope: !9413)
!9419 = !DILocation(line: 313, column: 18, scope: !9413)
!9420 = !DILocation(line: 337, column: 2, scope: !9413)
!9421 = !DILocation(line: 340, column: 1, scope: !9413)
!9422 = distinct !DISubprogram(name: "gpio_stm32_pin_to_exti_line", scope: !1199, file: !1199, line: 295, type: !9423, scopeLine: 296, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{!110, !109}
!9425 = !{!9426}
!9426 = !DILocalVariable(name: "pin", arg: 1, scope: !9422, file: !1199, line: 295, type: !109)
!9427 = !DILocation(line: 0, scope: !9422)
!9428 = !DILocation(line: 307, column: 46, scope: !9422)
!9429 = !DILocation(line: 307, column: 27, scope: !9422)
!9430 = !DILocation(line: 307, column: 32, scope: !9422)
!9431 = !DILocation(line: 307, column: 14, scope: !9422)
!9432 = !DILocation(line: 307, column: 39, scope: !9422)
!9433 = !DILocation(line: 307, column: 2, scope: !9422)
!9434 = distinct !DISubprogram(name: "LL_SYSCFG_SetEXTISource", scope: !6122, file: !6122, line: 671, type: !9435, scopeLine: 672, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9437)
!9435 = !DISubroutineType(types: !9436)
!9436 = !{null, !110, !110}
!9437 = !{!9438, !9439}
!9438 = !DILocalVariable(name: "Port", arg: 1, scope: !9434, file: !6122, line: 671, type: !110)
!9439 = !DILocalVariable(name: "Line", arg: 2, scope: !9434, file: !6122, line: 671, type: !110)
!9440 = !DILocation(line: 0, scope: !9434)
!9441 = !DILocation(line: 673, column: 3, scope: !9434)
!9442 = !DILocalVariable(name: "value", arg: 1, scope: !9443, file: !6422, line: 373, type: !110)
!9443 = distinct !DISubprogram(name: "__RBIT", scope: !6422, file: !6422, line: 373, type: !7709, scopeLine: 374, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9444)
!9444 = !{!9442, !9445}
!9445 = !DILocalVariable(name: "result", scope: !9443, file: !6422, line: 375, type: !110)
!9446 = !DILocation(line: 0, scope: !9443, inlinedAt: !9447)
!9447 = distinct !DILocation(line: 673, column: 3, scope: !9434)
!9448 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9447)
!9449 = !{i64 3503746}
!9450 = !DILocalVariable(name: "value", arg: 1, scope: !9451, file: !6422, line: 403, type: !110)
!9451 = distinct !DISubprogram(name: "__CLZ", scope: !6422, file: !6422, line: 403, type: !9452, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9454)
!9452 = !DISubroutineType(types: !9453)
!9453 = !{!178, !110}
!9454 = !{!9450}
!9455 = !DILocation(line: 0, scope: !9451, inlinedAt: !9456)
!9456 = distinct !DILocation(line: 673, column: 3, scope: !9434)
!9457 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9456)
!9458 = !DILocation(line: 674, column: 1, scope: !9434)
!9459 = distinct !DISubprogram(name: "gpio_fire_callbacks", scope: !9204, file: !9204, line: 69, type: !9460, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9462)
!9460 = !DISubroutineType(types: !9461)
!9461 = !{null, !9207, !1057, !110}
!9462 = !{!9463, !9464, !9465, !9466, !9467}
!9463 = !DILocalVariable(name: "list", arg: 1, scope: !9459, file: !9204, line: 69, type: !9207)
!9464 = !DILocalVariable(name: "port", arg: 2, scope: !9459, file: !9204, line: 70, type: !1057)
!9465 = !DILocalVariable(name: "pins", arg: 3, scope: !9459, file: !9204, line: 71, type: !110)
!9466 = !DILocalVariable(name: "cb", scope: !9459, file: !9204, line: 73, type: !1099)
!9467 = !DILocalVariable(name: "tmp", scope: !9459, file: !9204, line: 73, type: !1099)
!9468 = !DILocation(line: 0, scope: !9459)
!9469 = !DILocation(line: 75, column: 2, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9459, file: !9204, line: 75, column: 2)
!9471 = !DILocation(line: 0, scope: !9470)
!9472 = !DILocation(line: 76, column: 11, scope: !9473)
!9473 = distinct !DILexicalBlock(scope: !9474, file: !9204, line: 76, column: 7)
!9474 = distinct !DILexicalBlock(scope: !9475, file: !9204, line: 75, column: 57)
!9475 = distinct !DILexicalBlock(scope: !9470, file: !9204, line: 75, column: 2)
!9476 = !DILocation(line: 76, column: 20, scope: !9473)
!9477 = !DILocation(line: 76, column: 7, scope: !9474)
!9478 = !DILocation(line: 77, column: 4, scope: !9479)
!9479 = distinct !DILexicalBlock(scope: !9480, file: !9204, line: 77, column: 4)
!9480 = distinct !DILexicalBlock(scope: !9481, file: !9204, line: 77, column: 4)
!9481 = distinct !DILexicalBlock(scope: !9473, file: !9204, line: 76, column: 28)
!9482 = !DILocation(line: 77, column: 4, scope: !9480)
!9483 = !DILocation(line: 77, column: 4, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9479, file: !9204, line: 77, column: 4)
!9485 = !DILocation(line: 78, column: 4, scope: !9481)
!9486 = !DILocation(line: 79, column: 3, scope: !9481)
!9487 = !DILocation(line: 75, column: 2, scope: !9475)
!9488 = !DILocation(line: 81, column: 1, scope: !9459)
!9489 = distinct !DISubprogram(name: "LL_SYSCFG_GetEXTISource", scope: !6122, file: !6122, line: 710, type: !7709, scopeLine: 711, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9490)
!9490 = !{!9491}
!9491 = !DILocalVariable(name: "Line", arg: 1, scope: !9489, file: !6122, line: 710, type: !110)
!9492 = !DILocation(line: 0, scope: !9489)
!9493 = !DILocation(line: 712, column: 21, scope: !9489)
!9494 = !DILocation(line: 0, scope: !9443, inlinedAt: !9495)
!9495 = distinct !DILocation(line: 712, column: 76, scope: !9489)
!9496 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9495)
!9497 = !DILocation(line: 0, scope: !9451, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 712, column: 76, scope: !9489)
!9499 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9498)
!9500 = !DILocation(line: 712, column: 73, scope: !9489)
!9501 = !DILocation(line: 712, column: 3, scope: !9489)
!9502 = distinct !DISubprogram(name: "LL_GPIO_ResetOutputPin", scope: !9503, file: !9503, line: 910, type: !9504, scopeLine: 911, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9506)
!9503 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!9504 = !DISubroutineType(types: !9505)
!9505 = !{null, !1130, !110}
!9506 = !{!9507, !9508}
!9507 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9502, file: !9503, line: 910, type: !1130)
!9508 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9502, file: !9503, line: 910, type: !110)
!9509 = !DILocation(line: 0, scope: !9502)
!9510 = !DILocation(line: 912, column: 3, scope: !9502)
!9511 = !DILocation(line: 913, column: 1, scope: !9502)
!9512 = distinct !DISubprogram(name: "LL_GPIO_ReadOutputPort", scope: !9503, file: !9503, line: 823, type: !9513, scopeLine: 824, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9515)
!9513 = !DISubroutineType(types: !9514)
!9514 = !{!110, !1130}
!9515 = !{!9516}
!9516 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9512, file: !9503, line: 823, type: !1130)
!9517 = !DILocation(line: 0, scope: !9512)
!9518 = !DILocation(line: 825, column: 21, scope: !9512)
!9519 = !DILocation(line: 825, column: 3, scope: !9512)
!9520 = distinct !DISubprogram(name: "LL_GPIO_WriteOutputPort", scope: !9503, file: !9503, line: 812, type: !9504, scopeLine: 813, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9521)
!9521 = !{!9522, !9523}
!9522 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9520, file: !9503, line: 812, type: !1130)
!9523 = !DILocalVariable(name: "PortValue", arg: 2, scope: !9520, file: !9503, line: 812, type: !110)
!9524 = !DILocation(line: 0, scope: !9520)
!9525 = !DILocation(line: 814, column: 3, scope: !9520)
!9526 = !DILocation(line: 815, column: 1, scope: !9520)
!9527 = distinct !DISubprogram(name: "LL_GPIO_ReadInputPort", scope: !9503, file: !9503, line: 771, type: !9513, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9528)
!9528 = !{!9529}
!9529 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9527, file: !9503, line: 771, type: !1130)
!9530 = !DILocation(line: 0, scope: !9527)
!9531 = !DILocation(line: 773, column: 21, scope: !9527)
!9532 = !DILocation(line: 773, column: 3, scope: !9527)
!9533 = distinct !DISubprogram(name: "gpio_stm32_flags_to_conf", scope: !1199, file: !1199, line: 47, type: !9534, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9536)
!9534 = !DISubroutineType(types: !9535)
!9535 = !{!109, !1073, !281}
!9536 = !{!9537, !9538}
!9537 = !DILocalVariable(name: "flags", arg: 1, scope: !9533, file: !1199, line: 47, type: !1073)
!9538 = !DILocalVariable(name: "pincfg", arg: 2, scope: !9533, file: !1199, line: 47, type: !281)
!9539 = !DILocation(line: 0, scope: !9533)
!9540 = !DILocation(line: 50, column: 13, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9533, file: !1199, line: 50, column: 6)
!9542 = !DILocation(line: 50, column: 28, scope: !9541)
!9543 = !DILocation(line: 50, column: 6, scope: !9533)
!9544 = !DILocation(line: 53, column: 11, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9541, file: !1199, line: 50, column: 34)
!9546 = !DILocation(line: 55, column: 14, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9545, file: !1199, line: 55, column: 7)
!9548 = !DILocation(line: 55, column: 35, scope: !9547)
!9549 = !DILocation(line: 55, column: 7, scope: !9545)
!9550 = !DILocation(line: 56, column: 14, scope: !9551)
!9551 = distinct !DILexicalBlock(scope: !9552, file: !1199, line: 56, column: 8)
!9552 = distinct !DILexicalBlock(scope: !9547, file: !1199, line: 55, column: 41)
!9553 = !DILocation(line: 56, column: 8, scope: !9552)
!9554 = !DILocation(line: 0, scope: !9547)
!9555 = !DILocation(line: 66, column: 14, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9545, file: !1199, line: 66, column: 7)
!9557 = !DILocation(line: 66, column: 30, scope: !9556)
!9558 = !DILocation(line: 66, column: 7, scope: !9545)
!9559 = !DILocation(line: 67, column: 12, scope: !9560)
!9560 = distinct !DILexicalBlock(scope: !9556, file: !1199, line: 66, column: 36)
!9561 = !DILocation(line: 68, column: 3, scope: !9560)
!9562 = !DILocation(line: 68, column: 21, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9556, file: !1199, line: 68, column: 14)
!9564 = !DILocation(line: 68, column: 39, scope: !9563)
!9565 = !DILocation(line: 68, column: 14, scope: !9556)
!9566 = !DILocation(line: 69, column: 12, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9563, file: !1199, line: 68, column: 45)
!9568 = !DILocation(line: 70, column: 3, scope: !9567)
!9569 = !DILocation(line: 72, column: 21, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9541, file: !1199, line: 72, column: 14)
!9571 = !DILocation(line: 72, column: 35, scope: !9570)
!9572 = !DILocation(line: 72, column: 14, scope: !9541)
!9573 = !DILocation(line: 77, column: 14, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !1199, line: 77, column: 7)
!9575 = distinct !DILexicalBlock(scope: !9570, file: !1199, line: 72, column: 41)
!9576 = !DILocation(line: 77, column: 30, scope: !9574)
!9577 = !DILocation(line: 77, column: 7, scope: !9575)
!9578 = !DILocation(line: 0, scope: !9541)
!9579 = !DILocation(line: 90, column: 1, scope: !9533)
!9580 = distinct !DISubprogram(name: "gpio_stm32_configure_raw", scope: !1199, file: !1199, line: 157, type: !9581, scopeLine: 159, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9583)
!9581 = !DISubroutineType(types: !9582)
!9582 = !{null, !1057, !109, !109, !109}
!9583 = !{!9584, !9585, !9586, !9587, !9588, !9589, !9590, !9591, !9592, !9593, !9594}
!9584 = !DILocalVariable(name: "dev", arg: 1, scope: !9580, file: !1199, line: 157, type: !1057)
!9585 = !DILocalVariable(name: "pin", arg: 2, scope: !9580, file: !1199, line: 157, type: !109)
!9586 = !DILocalVariable(name: "conf", arg: 3, scope: !9580, file: !1199, line: 158, type: !109)
!9587 = !DILocalVariable(name: "func", arg: 4, scope: !9580, file: !1199, line: 158, type: !109)
!9588 = !DILocalVariable(name: "cfg", scope: !9580, file: !1199, line: 160, type: !9088)
!9589 = !DILocalVariable(name: "gpio", scope: !9580, file: !1199, line: 161, type: !1130)
!9590 = !DILocalVariable(name: "pin_ll", scope: !9580, file: !1199, line: 163, type: !109)
!9591 = !DILocalVariable(name: "mode", scope: !9580, file: !1199, line: 227, type: !32)
!9592 = !DILocalVariable(name: "otype", scope: !9580, file: !1199, line: 227, type: !32)
!9593 = !DILocalVariable(name: "ospeed", scope: !9580, file: !1199, line: 227, type: !32)
!9594 = !DILocalVariable(name: "pupd", scope: !9580, file: !1199, line: 227, type: !32)
!9595 = !DILocation(line: 0, scope: !9580)
!9596 = !DILocation(line: 160, column: 45, scope: !9580)
!9597 = !DILocation(line: 161, column: 44, scope: !9580)
!9598 = !DILocation(line: 163, column: 15, scope: !9580)
!9599 = !DILocation(line: 229, column: 14, scope: !9580)
!9600 = !DILocation(line: 246, column: 47, scope: !9580)
!9601 = !DILocation(line: 246, column: 2, scope: !9580)
!9602 = !DILocation(line: 248, column: 43, scope: !9580)
!9603 = !DILocation(line: 248, column: 2, scope: !9580)
!9604 = !DILocation(line: 250, column: 40, scope: !9580)
!9605 = !DILocation(line: 250, column: 2, scope: !9580)
!9606 = !DILocation(line: 252, column: 11, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9580, file: !1199, line: 252, column: 6)
!9608 = !DILocation(line: 252, column: 6, scope: !9580)
!9609 = !DILocation(line: 253, column: 11, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !1199, line: 253, column: 7)
!9611 = distinct !DILexicalBlock(scope: !9607, file: !1199, line: 252, column: 36)
!9612 = !DILocation(line: 253, column: 7, scope: !9611)
!9613 = !DILocation(line: 254, column: 4, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9610, file: !1199, line: 253, column: 16)
!9615 = !DILocation(line: 255, column: 3, scope: !9614)
!9616 = !DILocation(line: 256, column: 4, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9610, file: !1199, line: 255, column: 10)
!9618 = !DILocation(line: 260, column: 40, scope: !9580)
!9619 = !DILocation(line: 260, column: 2, scope: !9580)
!9620 = !DILocation(line: 265, column: 1, scope: !9580)
!9621 = distinct !DISubprogram(name: "stm32_pinval_get", scope: !1199, file: !1199, line: 137, type: !9423, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9622)
!9622 = !{!9623, !9624}
!9623 = !DILocalVariable(name: "pin", arg: 1, scope: !9621, file: !1199, line: 137, type: !109)
!9624 = !DILocalVariable(name: "pinval", scope: !9621, file: !1199, line: 139, type: !110)
!9625 = !DILocation(line: 0, scope: !9621)
!9626 = !DILocation(line: 149, column: 13, scope: !9621)
!9627 = !DILocation(line: 151, column: 2, scope: !9621)
!9628 = distinct !DISubprogram(name: "LL_GPIO_SetPinOutputType", scope: !9503, file: !9503, line: 342, type: !9629, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9631)
!9629 = !DISubroutineType(types: !9630)
!9630 = !{null, !1130, !110, !110}
!9631 = !{!9632, !9633, !9634}
!9632 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9628, file: !9503, line: 342, type: !1130)
!9633 = !DILocalVariable(name: "PinMask", arg: 2, scope: !9628, file: !9503, line: 342, type: !110)
!9634 = !DILocalVariable(name: "OutputType", arg: 3, scope: !9628, file: !9503, line: 342, type: !110)
!9635 = !DILocation(line: 0, scope: !9628)
!9636 = !DILocation(line: 344, column: 3, scope: !9628)
!9637 = !DILocation(line: 345, column: 1, scope: !9628)
!9638 = distinct !DISubprogram(name: "LL_GPIO_SetPinSpeed", scope: !9503, file: !9503, line: 413, type: !9629, scopeLine: 414, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9639)
!9639 = !{!9640, !9641, !9642}
!9640 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9638, file: !9503, line: 413, type: !1130)
!9641 = !DILocalVariable(name: "Pin", arg: 2, scope: !9638, file: !9503, line: 413, type: !110)
!9642 = !DILocalVariable(name: "Speed", arg: 3, scope: !9638, file: !9503, line: 413, type: !110)
!9643 = !DILocation(line: 0, scope: !9638)
!9644 = !DILocation(line: 415, column: 3, scope: !9638)
!9645 = !DILocation(line: 0, scope: !9443, inlinedAt: !9646)
!9646 = distinct !DILocation(line: 415, column: 3, scope: !9638)
!9647 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9646)
!9648 = !DILocation(line: 0, scope: !9451, inlinedAt: !9649)
!9649 = distinct !DILocation(line: 415, column: 3, scope: !9638)
!9650 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9649)
!9651 = !DILocation(line: 0, scope: !9443, inlinedAt: !9652)
!9652 = distinct !DILocation(line: 415, column: 3, scope: !9638)
!9653 = !DILocation(line: 0, scope: !9451, inlinedAt: !9654)
!9654 = distinct !DILocation(line: 415, column: 3, scope: !9638)
!9655 = !DILocation(line: 417, column: 1, scope: !9638)
!9656 = distinct !DISubprogram(name: "LL_GPIO_SetPinPull", scope: !9503, file: !9503, line: 484, type: !9629, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9657)
!9657 = !{!9658, !9659, !9660}
!9658 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9656, file: !9503, line: 484, type: !1130)
!9659 = !DILocalVariable(name: "Pin", arg: 2, scope: !9656, file: !9503, line: 484, type: !110)
!9660 = !DILocalVariable(name: "Pull", arg: 3, scope: !9656, file: !9503, line: 484, type: !110)
!9661 = !DILocation(line: 0, scope: !9656)
!9662 = !DILocation(line: 486, column: 3, scope: !9656)
!9663 = !DILocation(line: 0, scope: !9443, inlinedAt: !9664)
!9664 = distinct !DILocation(line: 486, column: 3, scope: !9656)
!9665 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9664)
!9666 = !DILocation(line: 0, scope: !9451, inlinedAt: !9667)
!9667 = distinct !DILocation(line: 486, column: 3, scope: !9656)
!9668 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9667)
!9669 = !DILocation(line: 0, scope: !9443, inlinedAt: !9670)
!9670 = distinct !DILocation(line: 486, column: 3, scope: !9656)
!9671 = !DILocation(line: 0, scope: !9451, inlinedAt: !9672)
!9672 = distinct !DILocation(line: 486, column: 3, scope: !9656)
!9673 = !DILocation(line: 487, column: 1, scope: !9656)
!9674 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_0_7", scope: !9503, file: !9503, line: 556, type: !9629, scopeLine: 557, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9675)
!9675 = !{!9676, !9677, !9678}
!9676 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9674, file: !9503, line: 556, type: !1130)
!9677 = !DILocalVariable(name: "Pin", arg: 2, scope: !9674, file: !9503, line: 556, type: !110)
!9678 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9674, file: !9503, line: 556, type: !110)
!9679 = !DILocation(line: 0, scope: !9674)
!9680 = !DILocation(line: 558, column: 3, scope: !9674)
!9681 = !DILocation(line: 0, scope: !9443, inlinedAt: !9682)
!9682 = distinct !DILocation(line: 558, column: 3, scope: !9674)
!9683 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9682)
!9684 = !DILocation(line: 0, scope: !9451, inlinedAt: !9685)
!9685 = distinct !DILocation(line: 558, column: 3, scope: !9674)
!9686 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9685)
!9687 = !DILocation(line: 0, scope: !9443, inlinedAt: !9688)
!9688 = distinct !DILocation(line: 558, column: 3, scope: !9674)
!9689 = !DILocation(line: 0, scope: !9451, inlinedAt: !9690)
!9690 = distinct !DILocation(line: 558, column: 3, scope: !9674)
!9691 = !DILocation(line: 560, column: 1, scope: !9674)
!9692 = distinct !DISubprogram(name: "LL_GPIO_SetAFPin_8_15", scope: !9503, file: !9503, line: 633, type: !9629, scopeLine: 634, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9693)
!9693 = !{!9694, !9695, !9696}
!9694 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9692, file: !9503, line: 633, type: !1130)
!9695 = !DILocalVariable(name: "Pin", arg: 2, scope: !9692, file: !9503, line: 633, type: !110)
!9696 = !DILocalVariable(name: "Alternate", arg: 3, scope: !9692, file: !9503, line: 633, type: !110)
!9697 = !DILocation(line: 0, scope: !9692)
!9698 = !DILocation(line: 635, column: 3, scope: !9692)
!9699 = !DILocation(line: 0, scope: !9443, inlinedAt: !9700)
!9700 = distinct !DILocation(line: 635, column: 3, scope: !9692)
!9701 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9700)
!9702 = !DILocation(line: 0, scope: !9451, inlinedAt: !9703)
!9703 = distinct !DILocation(line: 635, column: 3, scope: !9692)
!9704 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9703)
!9705 = !DILocation(line: 0, scope: !9443, inlinedAt: !9706)
!9706 = distinct !DILocation(line: 635, column: 3, scope: !9692)
!9707 = !DILocation(line: 0, scope: !9451, inlinedAt: !9708)
!9708 = distinct !DILocation(line: 635, column: 3, scope: !9692)
!9709 = !DILocation(line: 637, column: 1, scope: !9692)
!9710 = distinct !DISubprogram(name: "LL_GPIO_SetPinMode", scope: !9503, file: !9503, line: 273, type: !9629, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9711)
!9711 = !{!9712, !9713, !9714}
!9712 = !DILocalVariable(name: "GPIOx", arg: 1, scope: !9710, file: !9503, line: 273, type: !1130)
!9713 = !DILocalVariable(name: "Pin", arg: 2, scope: !9710, file: !9503, line: 273, type: !110)
!9714 = !DILocalVariable(name: "Mode", arg: 3, scope: !9710, file: !9503, line: 273, type: !110)
!9715 = !DILocation(line: 0, scope: !9710)
!9716 = !DILocation(line: 275, column: 3, scope: !9710)
!9717 = !DILocation(line: 0, scope: !9443, inlinedAt: !9718)
!9718 = distinct !DILocation(line: 275, column: 3, scope: !9710)
!9719 = !DILocation(line: 380, column: 4, scope: !9443, inlinedAt: !9718)
!9720 = !DILocation(line: 0, scope: !9451, inlinedAt: !9721)
!9721 = distinct !DILocation(line: 275, column: 3, scope: !9710)
!9722 = !DILocation(line: 414, column: 7, scope: !9451, inlinedAt: !9721)
!9723 = !DILocation(line: 0, scope: !9443, inlinedAt: !9724)
!9724 = distinct !DILocation(line: 275, column: 3, scope: !9710)
!9725 = !DILocation(line: 0, scope: !9451, inlinedAt: !9726)
!9726 = distinct !DILocation(line: 275, column: 3, scope: !9710)
!9727 = !DILocation(line: 276, column: 1, scope: !9710)
!9728 = distinct !DISubprogram(name: "gpio_stm32_init", scope: !1199, file: !1199, line: 698, type: !1212, scopeLine: 699, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9729)
!9729 = !{!9730, !9731, !9732}
!9730 = !DILocalVariable(name: "dev", arg: 1, scope: !9728, file: !1199, line: 698, type: !1057)
!9731 = !DILocalVariable(name: "data", scope: !9728, file: !1199, line: 700, type: !9155)
!9732 = !DILocalVariable(name: "ret", scope: !9728, file: !1199, line: 701, type: !109)
!9733 = !DILocation(line: 0, scope: !9728)
!9734 = !DILocation(line: 700, column: 38, scope: !9728)
!9735 = !DILocation(line: 703, column: 8, scope: !9728)
!9736 = !DILocation(line: 703, column: 12, scope: !9728)
!9737 = !DILocation(line: 705, column: 7, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9728, file: !1199, line: 705, column: 6)
!9739 = !DILocation(line: 705, column: 6, scope: !9728)
!9740 = !DILocation(line: 722, column: 8, scope: !9728)
!9741 = !DILocation(line: 723, column: 10, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9728, file: !1199, line: 723, column: 6)
!9743 = !DILocation(line: 723, column: 6, scope: !9728)
!9744 = !DILocation(line: 731, column: 1, scope: !9728)
!9745 = distinct !DISubprogram(name: "device_is_ready", scope: !8933, file: !8933, line: 47, type: !9746, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9748)
!9746 = !DISubroutineType(types: !9747)
!9747 = !{!347, !1057}
!9748 = !{!9749}
!9749 = !DILocalVariable(name: "dev", arg: 1, scope: !9745, file: !8933, line: 47, type: !1057)
!9750 = !DILocation(line: 0, scope: !9745)
!9751 = !DILocation(line: 55, column: 2, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9745, file: !8933, line: 55, column: 2)
!9753 = !{i64 2154954210}
!9754 = !DILocation(line: 56, column: 9, scope: !9745)
!9755 = !DILocation(line: 56, column: 2, scope: !9745)
!9756 = distinct !DISubprogram(name: "gpio_stm32_clock_request", scope: !1199, file: !1199, line: 270, type: !9757, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9759)
!9757 = !DISubroutineType(types: !9758)
!9758 = !{!109, !1057, !347}
!9759 = !{!9760, !9761, !9762, !9763, !9764}
!9760 = !DILocalVariable(name: "dev", arg: 1, scope: !9756, file: !1199, line: 270, type: !1057)
!9761 = !DILocalVariable(name: "on", arg: 2, scope: !9756, file: !1199, line: 270, type: !347)
!9762 = !DILocalVariable(name: "cfg", scope: !9756, file: !1199, line: 272, type: !9088)
!9763 = !DILocalVariable(name: "ret", scope: !9756, file: !1199, line: 273, type: !109)
!9764 = !DILocalVariable(name: "clk", scope: !9756, file: !1199, line: 278, type: !9390)
!9765 = !DILocation(line: 0, scope: !9756)
!9766 = !DILocation(line: 272, column: 45, scope: !9756)
!9767 = !DILocation(line: 282, column: 38, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !1199, line: 280, column: 10)
!9769 = distinct !DILexicalBlock(scope: !9756, file: !1199, line: 280, column: 6)
!9770 = !DILocation(line: 282, column: 6, scope: !9768)
!9771 = !DILocation(line: 281, column: 9, scope: !9768)
!9772 = !DILocation(line: 293, column: 1, scope: !9756)
!9773 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !9746, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9774)
!9774 = !{!9775}
!9775 = !DILocalVariable(name: "dev", arg: 1, scope: !9773, file: !336, line: 730, type: !1057)
!9776 = !DILocation(line: 0, scope: !9773)
!9777 = !DILocation(line: 732, column: 9, scope: !9773)
!9778 = !DILocation(line: 732, column: 2, scope: !9773)
!9779 = distinct !DISubprogram(name: "gpio_stm32_configure", scope: !1199, file: !1199, line: 496, type: !9780, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1028, retainedNodes: !9782)
!9780 = !DISubroutineType(types: !9781)
!9781 = !{!109, !1057, !109, !109, !109}
!9782 = !{!9783, !9784, !9785, !9786, !9787, !9788}
!9783 = !DILocalVariable(name: "dev", arg: 1, scope: !9779, file: !1199, line: 496, type: !1057)
!9784 = !DILocalVariable(name: "pin", arg: 2, scope: !9779, file: !1199, line: 496, type: !109)
!9785 = !DILocalVariable(name: "conf", arg: 3, scope: !9779, file: !1199, line: 496, type: !109)
!9786 = !DILocalVariable(name: "func", arg: 4, scope: !9779, file: !1199, line: 496, type: !109)
!9787 = !DILocalVariable(name: "ret", scope: !9779, file: !1199, line: 498, type: !109)
!9788 = !DILocalVariable(name: "gpio_out", scope: !9789, file: !1199, line: 508, type: !110)
!9789 = distinct !DILexicalBlock(scope: !9790, file: !1199, line: 507, column: 27)
!9790 = distinct !DILexicalBlock(scope: !9779, file: !1199, line: 507, column: 6)
!9791 = !DILocation(line: 0, scope: !9779)
!9792 = !DILocation(line: 505, column: 2, scope: !9779)
!9793 = !DILocation(line: 507, column: 11, scope: !9790)
!9794 = !DILocation(line: 507, column: 6, scope: !9779)
!9795 = !DILocation(line: 508, column: 28, scope: !9789)
!9796 = !DILocation(line: 0, scope: !9789)
!9797 = !DILocation(line: 510, column: 16, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9789, file: !1199, line: 510, column: 7)
!9799 = !DILocation(line: 0, scope: !9798)
!9800 = !DILocation(line: 510, column: 7, scope: !9789)
!9801 = !DILocation(line: 511, column: 4, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9798, file: !1199, line: 510, column: 32)
!9803 = !DILocation(line: 512, column: 3, scope: !9802)
!9804 = !DILocation(line: 513, column: 4, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !1199, line: 512, column: 39)
!9806 = distinct !DILexicalBlock(scope: !9798, file: !1199, line: 512, column: 14)
!9807 = !DILocation(line: 514, column: 3, scope: !9805)
!9808 = !DILocation(line: 518, column: 1, scope: !9779)
!9809 = distinct !DISubprogram(name: "uart_stm32_poll_in", scope: !1475, file: !1475, line: 526, type: !1378, scopeLine: 527, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !9810)
!9810 = !{!9811, !9812, !9813}
!9811 = !DILocalVariable(name: "dev", arg: 1, scope: !9809, file: !1475, line: 526, type: !1380)
!9812 = !DILocalVariable(name: "c", arg: 2, scope: !9809, file: !1475, line: 526, type: !989)
!9813 = !DILocalVariable(name: "config", scope: !9809, file: !1475, line: 528, type: !9814)
!9814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 32)
!9815 = !DILocation(line: 0, scope: !9809)
!9816 = !DILocation(line: 528, column: 48, scope: !9809)
!9817 = !DILocation(line: 531, column: 40, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !9809, file: !1475, line: 531, column: 6)
!9819 = !DILocation(line: 531, column: 6, scope: !9818)
!9820 = !DILocation(line: 531, column: 6, scope: !9809)
!9821 = !DILocation(line: 532, column: 34, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9818, file: !1475, line: 531, column: 48)
!9823 = !DILocation(line: 532, column: 3, scope: !9822)
!9824 = !DILocation(line: 533, column: 2, scope: !9822)
!9825 = !DILocation(line: 539, column: 42, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9809, file: !1475, line: 539, column: 6)
!9827 = !DILocation(line: 539, column: 7, scope: !9826)
!9828 = !DILocation(line: 539, column: 6, scope: !9809)
!9829 = !DILocation(line: 543, column: 52, scope: !9809)
!9830 = !DILocation(line: 543, column: 22, scope: !9809)
!9831 = !DILocation(line: 543, column: 5, scope: !9809)
!9832 = !DILocation(line: 545, column: 2, scope: !9809)
!9833 = !DILocation(line: 546, column: 1, scope: !9809)
!9834 = distinct !DISubprogram(name: "uart_stm32_poll_out", scope: !1475, file: !1475, line: 548, type: !1397, scopeLine: 550, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !9835)
!9835 = !{!9836, !9837, !9838, !9839}
!9836 = !DILocalVariable(name: "dev", arg: 1, scope: !9834, file: !1475, line: 548, type: !1380)
!9837 = !DILocalVariable(name: "c", arg: 2, scope: !9834, file: !1475, line: 549, type: !179)
!9838 = !DILocalVariable(name: "config", scope: !9834, file: !1475, line: 551, type: !9814)
!9839 = !DILocalVariable(name: "key", scope: !9834, file: !1475, line: 555, type: !32)
!9840 = !DILocation(line: 0, scope: !9834)
!9841 = !DILocation(line: 551, column: 48, scope: !9834)
!9842 = !DILocation(line: 562, column: 2, scope: !9834)
!9843 = !DILocation(line: 563, column: 41, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !9845, file: !1475, line: 563, column: 7)
!9845 = distinct !DILexicalBlock(scope: !9834, file: !1475, line: 562, column: 12)
!9846 = !DILocation(line: 563, column: 7, scope: !9844)
!9847 = !DILocation(line: 563, column: 7, scope: !9845)
!9848 = !DILocation(line: 55, column: 2, scope: !9849, inlinedAt: !9853)
!9849 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !9850)
!9850 = !{!9851, !9852}
!9851 = !DILocalVariable(name: "key", scope: !9849, file: !6101, line: 44, type: !32)
!9852 = !DILocalVariable(name: "tmp", scope: !9849, file: !6101, line: 53, type: !32)
!9853 = distinct !DILocation(line: 564, column: 10, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9844, file: !1475, line: 563, column: 49)
!9855 = !{i64 2292159}
!9856 = !DILocation(line: 0, scope: !9849, inlinedAt: !9853)
!9857 = !DILocation(line: 565, column: 42, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9854, file: !1475, line: 565, column: 8)
!9859 = !DILocation(line: 565, column: 8, scope: !9858)
!9860 = !DILocation(line: 565, column: 8, scope: !9854)
!9861 = !DILocalVariable(name: "key", arg: 1, scope: !9862, file: !6101, line: 84, type: !32)
!9862 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !9863)
!9863 = !{!9861}
!9864 = !DILocation(line: 0, scope: !9862, inlinedAt: !9865)
!9865 = distinct !DILocation(line: 568, column: 4, scope: !9854)
!9866 = !DILocation(line: 95, column: 2, scope: !9862, inlinedAt: !9865)
!9867 = !{i64 2292976}
!9868 = !DILocation(line: 569, column: 3, scope: !9854)
!9869 = distinct !{!9869, !9842, !9870}
!9870 = !DILocation(line: 570, column: 2, scope: !9834)
!9871 = !DILocation(line: 592, column: 33, scope: !9834)
!9872 = !DILocation(line: 592, column: 2, scope: !9834)
!9873 = !DILocation(line: 0, scope: !9862, inlinedAt: !9874)
!9874 = distinct !DILocation(line: 593, column: 2, scope: !9834)
!9875 = !DILocation(line: 95, column: 2, scope: !9862, inlinedAt: !9874)
!9876 = !DILocation(line: 594, column: 1, scope: !9834)
!9877 = distinct !DISubprogram(name: "uart_stm32_err_check", scope: !1475, file: !1475, line: 596, type: !1401, scopeLine: 597, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !9878)
!9878 = !{!9879, !9880, !9881}
!9879 = !DILocalVariable(name: "dev", arg: 1, scope: !9877, file: !1475, line: 596, type: !1380)
!9880 = !DILocalVariable(name: "config", scope: !9877, file: !1475, line: 598, type: !9814)
!9881 = !DILocalVariable(name: "err", scope: !9877, file: !1475, line: 599, type: !110)
!9882 = !DILocation(line: 0, scope: !9877)
!9883 = !DILocation(line: 598, column: 48, scope: !9877)
!9884 = !DILocation(line: 606, column: 40, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9877, file: !1475, line: 606, column: 6)
!9886 = !DILocation(line: 606, column: 6, scope: !9885)
!9887 = !DILocation(line: 606, column: 6, scope: !9877)
!9888 = !DILocation(line: 610, column: 39, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9877, file: !1475, line: 610, column: 6)
!9890 = !DILocation(line: 610, column: 6, scope: !9889)
!9891 = !DILocation(line: 610, column: 6, scope: !9877)
!9892 = !DILocation(line: 614, column: 39, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9877, file: !1475, line: 614, column: 6)
!9894 = !DILocation(line: 614, column: 6, scope: !9893)
!9895 = !DILocation(line: 614, column: 6, scope: !9877)
!9896 = !DILocation(line: 619, column: 40, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9877, file: !1475, line: 619, column: 6)
!9898 = !DILocation(line: 619, column: 6, scope: !9897)
!9899 = !DILocation(line: 619, column: 6, scope: !9877)
!9900 = !DILocation(line: 623, column: 10, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9877, file: !1475, line: 623, column: 6)
!9902 = !DILocation(line: 623, column: 6, scope: !9877)
!9903 = !DILocation(line: 624, column: 34, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9901, file: !1475, line: 623, column: 24)
!9905 = !DILocation(line: 624, column: 3, scope: !9904)
!9906 = !DILocation(line: 625, column: 2, scope: !9904)
!9907 = !DILocation(line: 632, column: 10, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9877, file: !1475, line: 632, column: 6)
!9909 = !DILocation(line: 632, column: 6, scope: !9877)
!9910 = !DILocation(line: 633, column: 34, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9908, file: !1475, line: 632, column: 32)
!9912 = !DILocation(line: 633, column: 3, scope: !9911)
!9913 = !DILocation(line: 634, column: 2, scope: !9911)
!9914 = !DILocation(line: 636, column: 10, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9877, file: !1475, line: 636, column: 6)
!9916 = !DILocation(line: 636, column: 6, scope: !9877)
!9917 = !DILocation(line: 637, column: 33, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9915, file: !1475, line: 636, column: 31)
!9919 = !DILocation(line: 637, column: 3, scope: !9918)
!9920 = !DILocation(line: 638, column: 2, scope: !9918)
!9921 = !DILocation(line: 640, column: 10, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9877, file: !1475, line: 640, column: 6)
!9923 = !DILocation(line: 640, column: 6, scope: !9877)
!9924 = !DILocation(line: 641, column: 33, scope: !9925)
!9925 = distinct !DILexicalBlock(scope: !9922, file: !1475, line: 640, column: 32)
!9926 = !DILocation(line: 641, column: 3, scope: !9925)
!9927 = !DILocation(line: 642, column: 2, scope: !9925)
!9928 = !DILocation(line: 646, column: 32, scope: !9877)
!9929 = !DILocation(line: 646, column: 2, scope: !9877)
!9930 = !DILocation(line: 648, column: 2, scope: !9877)
!9931 = distinct !DISubprogram(name: "uart_stm32_configure", scope: !1475, file: !1475, line: 419, type: !1405, scopeLine: 421, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !9932)
!9932 = !{!9933, !9934, !9935, !9936, !9938, !9939, !9940, !9941}
!9933 = !DILocalVariable(name: "dev", arg: 1, scope: !9931, file: !1475, line: 419, type: !1380)
!9934 = !DILocalVariable(name: "cfg", arg: 2, scope: !9931, file: !1475, line: 420, type: !1407)
!9935 = !DILocalVariable(name: "config", scope: !9931, file: !1475, line: 422, type: !9814)
!9936 = !DILocalVariable(name: "data", scope: !9931, file: !1475, line: 423, type: !9937)
!9937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 32)
!9938 = !DILocalVariable(name: "parity", scope: !9931, file: !1475, line: 424, type: !6699)
!9939 = !DILocalVariable(name: "stopbits", scope: !9931, file: !1475, line: 425, type: !6699)
!9940 = !DILocalVariable(name: "databits", scope: !9931, file: !1475, line: 426, type: !6699)
!9941 = !DILocalVariable(name: "flowctrl", scope: !9931, file: !1475, line: 428, type: !6699)
!9942 = !DILocation(line: 0, scope: !9931)
!9943 = !DILocation(line: 422, column: 48, scope: !9931)
!9944 = !DILocation(line: 423, column: 38, scope: !9931)
!9945 = !DILocation(line: 424, column: 56, scope: !9931)
!9946 = !DILocation(line: 424, column: 51, scope: !9931)
!9947 = !DILocation(line: 424, column: 26, scope: !9931)
!9948 = !DILocation(line: 425, column: 60, scope: !9931)
!9949 = !DILocation(line: 425, column: 55, scope: !9931)
!9950 = !DILocation(line: 425, column: 28, scope: !9931)
!9951 = !DILocation(line: 426, column: 60, scope: !9931)
!9952 = !DILocation(line: 426, column: 55, scope: !9931)
!9953 = !DILocation(line: 426, column: 28, scope: !9931)
!9954 = !DILocation(line: 428, column: 58, scope: !9931)
!9955 = !DILocation(line: 428, column: 53, scope: !9931)
!9956 = !DILocation(line: 428, column: 28, scope: !9931)
!9957 = !DILocation(line: 431, column: 44, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 431, column: 6)
!9959 = !DILocation(line: 438, column: 22, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 437, column: 6)
!9961 = !DILocation(line: 437, column: 6, scope: !9931)
!9962 = !DILocation(line: 448, column: 6, scope: !9931)
!9963 = !DILocation(line: 465, column: 47, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 465, column: 6)
!9965 = !DILocation(line: 475, column: 21, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 475, column: 6)
!9967 = !DILocation(line: 475, column: 6, scope: !9931)
!9968 = !DILocation(line: 476, column: 8, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9970, file: !1475, line: 476, column: 7)
!9970 = distinct !DILexicalBlock(scope: !9966, file: !1475, line: 475, column: 49)
!9971 = !DILocation(line: 477, column: 34, scope: !9969)
!9972 = !DILocation(line: 476, column: 7, scope: !9970)
!9973 = !DILocation(line: 482, column: 27, scope: !9931)
!9974 = !DILocation(line: 482, column: 2, scope: !9931)
!9975 = !DILocation(line: 484, column: 16, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 484, column: 6)
!9977 = !DILocation(line: 484, column: 13, scope: !9976)
!9978 = !DILocation(line: 484, column: 6, scope: !9931)
!9979 = !DILocation(line: 485, column: 3, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9976, file: !1475, line: 484, column: 44)
!9981 = !DILocation(line: 486, column: 2, scope: !9980)
!9982 = !DILocation(line: 488, column: 18, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 488, column: 6)
!9984 = !DILocation(line: 488, column: 15, scope: !9983)
!9985 = !DILocation(line: 488, column: 6, scope: !9931)
!9986 = !DILocation(line: 489, column: 3, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9983, file: !1475, line: 488, column: 48)
!9988 = !DILocation(line: 490, column: 2, scope: !9987)
!9989 = !DILocation(line: 492, column: 18, scope: !9990)
!9990 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 492, column: 6)
!9991 = !DILocation(line: 492, column: 15, scope: !9990)
!9992 = !DILocation(line: 492, column: 6, scope: !9931)
!9993 = !DILocation(line: 493, column: 3, scope: !9994)
!9994 = distinct !DILexicalBlock(scope: !9990, file: !1475, line: 492, column: 48)
!9995 = !DILocation(line: 494, column: 2, scope: !9994)
!9996 = !DILocation(line: 496, column: 18, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 496, column: 6)
!9998 = !DILocation(line: 496, column: 15, scope: !9997)
!9999 = !DILocation(line: 496, column: 6, scope: !9931)
!10000 = !DILocation(line: 497, column: 3, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9997, file: !1475, line: 496, column: 46)
!10002 = !DILocation(line: 498, column: 2, scope: !10001)
!10003 = !DILocation(line: 500, column: 11, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9931, file: !1475, line: 500, column: 6)
!10005 = !DILocation(line: 500, column: 29, scope: !10004)
!10006 = !DILocation(line: 500, column: 20, scope: !10004)
!10007 = !DILocation(line: 500, column: 6, scope: !9931)
!10008 = !DILocation(line: 501, column: 3, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10004, file: !1475, line: 500, column: 40)
!10010 = !DILocation(line: 502, column: 26, scope: !10009)
!10011 = !DILocation(line: 502, column: 19, scope: !10009)
!10012 = !DILocation(line: 503, column: 2, scope: !10009)
!10013 = !DILocation(line: 505, column: 26, scope: !9931)
!10014 = !DILocation(line: 505, column: 2, scope: !9931)
!10015 = !DILocation(line: 506, column: 2, scope: !9931)
!10016 = !DILocation(line: 507, column: 1, scope: !9931)
!10017 = distinct !DISubprogram(name: "uart_stm32_config_get", scope: !1475, file: !1475, line: 509, type: !1418, scopeLine: 511, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10018)
!10018 = !{!10019, !10020, !10021}
!10019 = !DILocalVariable(name: "dev", arg: 1, scope: !10017, file: !1475, line: 509, type: !1380)
!10020 = !DILocalVariable(name: "cfg", arg: 2, scope: !10017, file: !1475, line: 510, type: !1420)
!10021 = !DILocalVariable(name: "data", scope: !10017, file: !1475, line: 512, type: !9937)
!10022 = !DILocation(line: 0, scope: !10017)
!10023 = !DILocation(line: 512, column: 38, scope: !10017)
!10024 = !DILocation(line: 514, column: 24, scope: !10017)
!10025 = !DILocation(line: 514, column: 7, scope: !10017)
!10026 = !DILocation(line: 514, column: 16, scope: !10017)
!10027 = !DILocation(line: 515, column: 41, scope: !10017)
!10028 = !{i32 0, i32 1537}
!10029 = !DILocation(line: 515, column: 16, scope: !10017)
!10030 = !DILocation(line: 515, column: 7, scope: !10017)
!10031 = !DILocation(line: 515, column: 14, scope: !10017)
!10032 = !DILocation(line: 517, column: 3, scope: !10017)
!10033 = !{i32 0, i32 12289}
!10034 = !DILocation(line: 516, column: 19, scope: !10017)
!10035 = !DILocation(line: 516, column: 7, scope: !10017)
!10036 = !DILocation(line: 516, column: 17, scope: !10017)
!10037 = !DILocation(line: 519, column: 3, scope: !10017)
!10038 = !DILocation(line: 519, column: 33, scope: !10017)
!10039 = !DILocation(line: 518, column: 19, scope: !10017)
!10040 = !DILocation(line: 518, column: 7, scope: !10017)
!10041 = !DILocation(line: 518, column: 17, scope: !10017)
!10042 = !DILocation(line: 521, column: 3, scope: !10017)
!10043 = !{i32 0, i32 769}
!10044 = !DILocation(line: 520, column: 19, scope: !10017)
!10045 = !DILocation(line: 520, column: 7, scope: !10017)
!10046 = !DILocation(line: 520, column: 17, scope: !10017)
!10047 = !DILocation(line: 522, column: 2, scope: !10017)
!10048 = distinct !DISubprogram(name: "uart_stm32_get_parity", scope: !1475, file: !1475, line: 205, type: !10049, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10051)
!10049 = !DISubroutineType(types: !10050)
!10050 = !{!110, !1380}
!10051 = !{!10052, !10053}
!10052 = !DILocalVariable(name: "dev", arg: 1, scope: !10048, file: !1475, line: 205, type: !1380)
!10053 = !DILocalVariable(name: "config", scope: !10048, file: !1475, line: 207, type: !9814)
!10054 = !DILocation(line: 0, scope: !10048)
!10055 = !DILocation(line: 207, column: 48, scope: !10048)
!10056 = !DILocation(line: 209, column: 36, scope: !10048)
!10057 = !DILocation(line: 209, column: 9, scope: !10048)
!10058 = !DILocation(line: 209, column: 2, scope: !10048)
!10059 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_parity", scope: !1475, file: !1475, line: 270, type: !10060, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10062)
!10060 = !DISubroutineType(types: !10061)
!10061 = !{!1346, !110}
!10062 = !{!10063}
!10063 = !DILocalVariable(name: "parity", arg: 1, scope: !10059, file: !1475, line: 270, type: !110)
!10064 = !DILocation(line: 0, scope: !10059)
!10065 = !DILocation(line: 272, column: 2, scope: !10059)
!10066 = !DILocation(line: 281, column: 1, scope: !10059)
!10067 = distinct !DISubprogram(name: "uart_stm32_get_stopbits", scope: !1475, file: !1475, line: 220, type: !10049, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10068)
!10068 = !{!10069, !10070}
!10069 = !DILocalVariable(name: "dev", arg: 1, scope: !10067, file: !1475, line: 220, type: !1380)
!10070 = !DILocalVariable(name: "config", scope: !10067, file: !1475, line: 222, type: !9814)
!10071 = !DILocation(line: 0, scope: !10067)
!10072 = !DILocation(line: 222, column: 48, scope: !10067)
!10073 = !DILocation(line: 224, column: 44, scope: !10067)
!10074 = !DILocation(line: 224, column: 9, scope: !10067)
!10075 = !DILocation(line: 224, column: 2, scope: !10067)
!10076 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_stopbits", scope: !1475, file: !1475, line: 304, type: !10077, scopeLine: 305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10079)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{!1360, !110}
!10079 = !{!10080}
!10080 = !DILocalVariable(name: "sb", arg: 1, scope: !10076, file: !1475, line: 304, type: !110)
!10081 = !DILocation(line: 0, scope: !10076)
!10082 = !DILocation(line: 306, column: 2, scope: !10076)
!10083 = !DILocation(line: 0, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10076, file: !1475, line: 306, column: 14)
!10085 = !DILocation(line: 323, column: 1, scope: !10076)
!10086 = distinct !DISubprogram(name: "uart_stm32_get_databits", scope: !1475, file: !1475, line: 235, type: !10049, scopeLine: 236, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10087)
!10087 = !{!10088, !10089}
!10088 = !DILocalVariable(name: "dev", arg: 1, scope: !10086, file: !1475, line: 235, type: !1380)
!10089 = !DILocalVariable(name: "config", scope: !10086, file: !1475, line: 237, type: !9814)
!10090 = !DILocation(line: 0, scope: !10086)
!10091 = !DILocation(line: 237, column: 48, scope: !10086)
!10092 = !DILocation(line: 239, column: 39, scope: !10086)
!10093 = !DILocation(line: 239, column: 9, scope: !10086)
!10094 = !DILocation(line: 239, column: 2, scope: !10086)
!10095 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_databits", scope: !1475, file: !1475, line: 355, type: !10096, scopeLine: 357, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10098)
!10096 = !DISubroutineType(types: !10097)
!10097 = !{!1353, !110, !110}
!10098 = !{!10099, !10100}
!10099 = !DILocalVariable(name: "db", arg: 1, scope: !10095, file: !1475, line: 355, type: !110)
!10100 = !DILocalVariable(name: "p", arg: 2, scope: !10095, file: !1475, line: 356, type: !110)
!10101 = !DILocation(line: 0, scope: !10095)
!10102 = !DILocation(line: 358, column: 2, scope: !10095)
!10103 = !DILocation(line: 384, column: 1, scope: !10095)
!10104 = distinct !DISubprogram(name: "uart_stm32_get_hwctrl", scope: !1475, file: !1475, line: 250, type: !10049, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10105)
!10105 = !{!10106, !10107}
!10106 = !DILocalVariable(name: "dev", arg: 1, scope: !10104, file: !1475, line: 250, type: !1380)
!10107 = !DILocalVariable(name: "config", scope: !10104, file: !1475, line: 252, type: !9814)
!10108 = !DILocation(line: 0, scope: !10104)
!10109 = !DILocation(line: 252, column: 48, scope: !10104)
!10110 = !DILocation(line: 254, column: 40, scope: !10104)
!10111 = !DILocation(line: 254, column: 9, scope: !10104)
!10112 = !DILocation(line: 254, column: 2, scope: !10104)
!10113 = distinct !DISubprogram(name: "uart_stm32_ll2cfg_hwctrl", scope: !1475, file: !1475, line: 409, type: !10114, scopeLine: 410, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10116)
!10114 = !DISubroutineType(types: !10115)
!10115 = !{!1366, !110}
!10116 = !{!10117}
!10117 = !DILocalVariable(name: "fc", arg: 1, scope: !10113, file: !1475, line: 409, type: !110)
!10118 = !DILocation(line: 0, scope: !10113)
!10119 = !DILocation(line: 411, column: 9, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10113, file: !1475, line: 411, column: 6)
!10121 = !DILocation(line: 416, column: 1, scope: !10113)
!10122 = distinct !DISubprogram(name: "LL_USART_GetHWFlowCtrl", scope: !10123, file: !10123, line: 967, type: !10124, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10126)
!10123 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_usart.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10124 = !DISubroutineType(types: !10125)
!10125 = !{!110, !1421}
!10126 = !{!10127}
!10127 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10122, file: !10123, line: 967, type: !1421)
!10128 = !DILocation(line: 0, scope: !10122)
!10129 = !DILocation(line: 969, column: 21, scope: !10122)
!10130 = !DILocation(line: 969, column: 3, scope: !10122)
!10131 = distinct !DISubprogram(name: "LL_USART_GetDataWidth", scope: !10123, file: !10123, line: 601, type: !10124, scopeLine: 602, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10132)
!10132 = !{!10133}
!10133 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10131, file: !10123, line: 601, type: !1421)
!10134 = !DILocation(line: 0, scope: !10131)
!10135 = !DILocation(line: 603, column: 21, scope: !10131)
!10136 = !DILocation(line: 603, column: 3, scope: !10131)
!10137 = distinct !DISubprogram(name: "LL_USART_GetStopBitsLength", scope: !10123, file: !10123, line: 820, type: !10124, scopeLine: 821, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10138)
!10138 = !{!10139}
!10139 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10137, file: !10123, line: 820, type: !1421)
!10140 = !DILocation(line: 0, scope: !10137)
!10141 = !DILocation(line: 822, column: 21, scope: !10137)
!10142 = !DILocation(line: 822, column: 3, scope: !10137)
!10143 = distinct !DISubprogram(name: "LL_USART_GetParity", scope: !10123, file: !10123, line: 547, type: !10124, scopeLine: 548, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10144)
!10144 = !{!10145}
!10145 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10143, file: !10123, line: 547, type: !1421)
!10146 = !DILocation(line: 0, scope: !10143)
!10147 = !DILocation(line: 549, column: 21, scope: !10143)
!10148 = !DILocation(line: 549, column: 3, scope: !10143)
!10149 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_parity", scope: !1475, file: !1475, line: 257, type: !10150, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{!110, !1346}
!10152 = !{!10153}
!10153 = !DILocalVariable(name: "parity", arg: 1, scope: !10149, file: !1475, line: 257, type: !1346)
!10154 = !DILocation(line: 0, scope: !10149)
!10155 = !DILocation(line: 259, column: 2, scope: !10149)
!10156 = !DILocation(line: 268, column: 1, scope: !10149)
!10157 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_stopbits", scope: !1475, file: !1475, line: 283, type: !10158, scopeLine: 284, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10160)
!10158 = !DISubroutineType(types: !10159)
!10159 = !{!110, !1360}
!10160 = !{!10161}
!10161 = !DILocalVariable(name: "sb", arg: 1, scope: !10157, file: !1475, line: 283, type: !1360)
!10162 = !DILocation(line: 0, scope: !10157)
!10163 = !DILocation(line: 285, column: 2, scope: !10157)
!10164 = !DILocation(line: 0, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10157, file: !1475, line: 285, column: 14)
!10166 = !DILocation(line: 302, column: 1, scope: !10157)
!10167 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_databits", scope: !1475, file: !1475, line: 325, type: !10168, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10170)
!10168 = !DISubroutineType(types: !10169)
!10169 = !{!110, !1353, !1346}
!10170 = !{!10171, !10172}
!10171 = !DILocalVariable(name: "db", arg: 1, scope: !10167, file: !1475, line: 325, type: !1353)
!10172 = !DILocalVariable(name: "p", arg: 2, scope: !10167, file: !1475, line: 326, type: !1346)
!10173 = !DILocation(line: 0, scope: !10167)
!10174 = !DILocation(line: 328, column: 2, scope: !10167)
!10175 = !DILocation(line: 353, column: 1, scope: !10167)
!10176 = distinct !DISubprogram(name: "uart_stm32_cfg2ll_hwctrl", scope: !1475, file: !1475, line: 393, type: !10177, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10179)
!10177 = !DISubroutineType(types: !10178)
!10178 = !{!110, !1366}
!10179 = !{!10180}
!10180 = !DILocalVariable(name: "fc", arg: 1, scope: !10176, file: !1475, line: 393, type: !1366)
!10181 = !DILocation(line: 0, scope: !10176)
!10182 = !DILocation(line: 395, column: 9, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10176, file: !1475, line: 395, column: 6)
!10184 = !DILocation(line: 400, column: 1, scope: !10176)
!10185 = distinct !DISubprogram(name: "LL_USART_Disable", scope: !10123, file: !10123, line: 424, type: !10186, scopeLine: 425, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10188)
!10186 = !DISubroutineType(types: !10187)
!10187 = !{null, !1421}
!10188 = !{!10189}
!10189 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10185, file: !10123, line: 424, type: !1421)
!10190 = !DILocation(line: 0, scope: !10185)
!10191 = !DILocation(line: 426, column: 3, scope: !10185)
!10192 = !DILocation(line: 427, column: 1, scope: !10185)
!10193 = distinct !DISubprogram(name: "uart_stm32_set_parity", scope: !1475, file: !1475, line: 197, type: !10194, scopeLine: 199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10196)
!10194 = !DISubroutineType(types: !10195)
!10195 = !{null, !1380, !110}
!10196 = !{!10197, !10198, !10199}
!10197 = !DILocalVariable(name: "dev", arg: 1, scope: !10193, file: !1475, line: 197, type: !1380)
!10198 = !DILocalVariable(name: "parity", arg: 2, scope: !10193, file: !1475, line: 198, type: !110)
!10199 = !DILocalVariable(name: "config", scope: !10193, file: !1475, line: 200, type: !9814)
!10200 = !DILocation(line: 0, scope: !10193)
!10201 = !DILocation(line: 200, column: 48, scope: !10193)
!10202 = !DILocation(line: 202, column: 29, scope: !10193)
!10203 = !DILocation(line: 202, column: 2, scope: !10193)
!10204 = !DILocation(line: 203, column: 1, scope: !10193)
!10205 = distinct !DISubprogram(name: "uart_stm32_set_stopbits", scope: !1475, file: !1475, line: 212, type: !10194, scopeLine: 214, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10206)
!10206 = !{!10207, !10208, !10209}
!10207 = !DILocalVariable(name: "dev", arg: 1, scope: !10205, file: !1475, line: 212, type: !1380)
!10208 = !DILocalVariable(name: "stopbits", arg: 2, scope: !10205, file: !1475, line: 213, type: !110)
!10209 = !DILocalVariable(name: "config", scope: !10205, file: !1475, line: 215, type: !9814)
!10210 = !DILocation(line: 0, scope: !10205)
!10211 = !DILocation(line: 215, column: 48, scope: !10205)
!10212 = !DILocation(line: 217, column: 37, scope: !10205)
!10213 = !DILocation(line: 217, column: 2, scope: !10205)
!10214 = !DILocation(line: 218, column: 1, scope: !10205)
!10215 = distinct !DISubprogram(name: "uart_stm32_set_databits", scope: !1475, file: !1475, line: 227, type: !10194, scopeLine: 229, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10216)
!10216 = !{!10217, !10218, !10219}
!10217 = !DILocalVariable(name: "dev", arg: 1, scope: !10215, file: !1475, line: 227, type: !1380)
!10218 = !DILocalVariable(name: "databits", arg: 2, scope: !10215, file: !1475, line: 228, type: !110)
!10219 = !DILocalVariable(name: "config", scope: !10215, file: !1475, line: 230, type: !9814)
!10220 = !DILocation(line: 0, scope: !10215)
!10221 = !DILocation(line: 230, column: 48, scope: !10215)
!10222 = !DILocation(line: 232, column: 32, scope: !10215)
!10223 = !DILocation(line: 232, column: 2, scope: !10215)
!10224 = !DILocation(line: 233, column: 1, scope: !10215)
!10225 = distinct !DISubprogram(name: "uart_stm32_set_hwctrl", scope: !1475, file: !1475, line: 242, type: !10194, scopeLine: 244, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10226)
!10226 = !{!10227, !10228, !10229}
!10227 = !DILocalVariable(name: "dev", arg: 1, scope: !10225, file: !1475, line: 242, type: !1380)
!10228 = !DILocalVariable(name: "hwctrl", arg: 2, scope: !10225, file: !1475, line: 243, type: !110)
!10229 = !DILocalVariable(name: "config", scope: !10225, file: !1475, line: 245, type: !9814)
!10230 = !DILocation(line: 0, scope: !10225)
!10231 = !DILocation(line: 245, column: 48, scope: !10225)
!10232 = !DILocation(line: 247, column: 33, scope: !10225)
!10233 = !DILocation(line: 247, column: 2, scope: !10225)
!10234 = !DILocation(line: 248, column: 1, scope: !10225)
!10235 = distinct !DISubprogram(name: "uart_stm32_set_baudrate", scope: !1475, file: !1475, line: 107, type: !10194, scopeLine: 108, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10236)
!10236 = !{!10237, !10238, !10239, !10240, !10241}
!10237 = !DILocalVariable(name: "dev", arg: 1, scope: !10235, file: !1475, line: 107, type: !1380)
!10238 = !DILocalVariable(name: "baud_rate", arg: 2, scope: !10235, file: !1475, line: 107, type: !110)
!10239 = !DILocalVariable(name: "config", scope: !10235, file: !1475, line: 109, type: !9814)
!10240 = !DILocalVariable(name: "data", scope: !10235, file: !1475, line: 110, type: !9937)
!10241 = !DILocalVariable(name: "clock_rate", scope: !10235, file: !1475, line: 112, type: !110)
!10242 = !DILocation(line: 0, scope: !10235)
!10243 = !DILocation(line: 109, column: 48, scope: !10235)
!10244 = !DILocation(line: 110, column: 38, scope: !10235)
!10245 = !DILocation(line: 112, column: 2, scope: !10235)
!10246 = !DILocation(line: 123, column: 36, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10248, file: !1475, line: 123, column: 7)
!10248 = distinct !DILexicalBlock(scope: !10249, file: !1475, line: 122, column: 9)
!10249 = distinct !DILexicalBlock(scope: !10235, file: !1475, line: 115, column: 6)
!10250 = !DILocation(line: 124, column: 42, scope: !10247)
!10251 = !DILocation(line: 123, column: 7, scope: !10247)
!10252 = !DILocation(line: 125, column: 22, scope: !10247)
!10253 = !DILocation(line: 123, column: 7, scope: !10248)
!10254 = !DILocation(line: 126, column: 4, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10256, file: !1475, line: 126, column: 4)
!10256 = distinct !DILexicalBlock(scope: !10257, file: !1475, line: 126, column: 4)
!10257 = distinct !DILexicalBlock(scope: !10258, file: !1475, line: 126, column: 4)
!10258 = distinct !DILexicalBlock(scope: !10259, file: !1475, line: 126, column: 4)
!10259 = distinct !DILexicalBlock(scope: !10247, file: !1475, line: 125, column: 27)
!10260 = !DILocation(line: 127, column: 4, scope: !10259)
!10261 = !DILocation(line: 176, column: 36, scope: !10235)
!10262 = !DILocation(line: 176, column: 3, scope: !10235)
!10263 = !DILocation(line: 179, column: 32, scope: !10235)
!10264 = !DILocation(line: 180, column: 10, scope: !10235)
!10265 = !DILocation(line: 179, column: 3, scope: !10235)
!10266 = !DILocation(line: 189, column: 3, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10268, file: !1475, line: 189, column: 3)
!10268 = distinct !DILexicalBlock(scope: !10235, file: !1475, line: 189, column: 3)
!10269 = !DILocation(line: 189, column: 3, scope: !10268)
!10270 = !DILocation(line: 189, column: 3, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10267, file: !1475, line: 189, column: 3)
!10272 = !DILocation(line: 195, column: 1, scope: !10235)
!10273 = distinct !DISubprogram(name: "LL_USART_Enable", scope: !10123, file: !10123, line: 410, type: !10186, scopeLine: 411, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10274)
!10274 = !{!10275}
!10275 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10273, file: !10123, line: 410, type: !1421)
!10276 = !DILocation(line: 0, scope: !10273)
!10277 = !DILocation(line: 412, column: 3, scope: !10273)
!10278 = !DILocation(line: 413, column: 1, scope: !10273)
!10279 = distinct !DISubprogram(name: "clock_control_get_rate", scope: !835, file: !835, line: 216, type: !1454, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10280)
!10280 = !{!10281, !10282, !10283, !10284}
!10281 = !DILocalVariable(name: "dev", arg: 1, scope: !10279, file: !835, line: 216, type: !1380)
!10282 = !DILocalVariable(name: "sys", arg: 2, scope: !10279, file: !835, line: 217, type: !928)
!10283 = !DILocalVariable(name: "rate", arg: 3, scope: !10279, file: !835, line: 218, type: !884)
!10284 = !DILocalVariable(name: "api", scope: !10279, file: !835, line: 220, type: !1432)
!10285 = !DILocation(line: 0, scope: !10279)
!10286 = !DILocation(line: 221, column: 49, scope: !10279)
!10287 = !DILocation(line: 223, column: 11, scope: !10288)
!10288 = distinct !DILexicalBlock(scope: !10279, file: !835, line: 223, column: 6)
!10289 = !DILocation(line: 223, column: 20, scope: !10288)
!10290 = !DILocation(line: 223, column: 6, scope: !10279)
!10291 = !DILocation(line: 227, column: 9, scope: !10279)
!10292 = !DILocation(line: 227, column: 2, scope: !10279)
!10293 = !DILocation(line: 228, column: 1, scope: !10279)
!10294 = distinct !DISubprogram(name: "z_log_minimal_level_to_char", scope: !6179, file: !6179, line: 175, type: !6180, scopeLine: 176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10295)
!10295 = !{!10296}
!10296 = !DILocalVariable(name: "level", arg: 1, scope: !10294, file: !6179, line: 175, type: !109)
!10297 = !DILocation(line: 0, scope: !10294)
!10298 = !DILocation(line: 177, column: 2, scope: !10294)
!10299 = !DILocation(line: 189, column: 1, scope: !10294)
!10300 = distinct !DISubprogram(name: "LL_USART_SetOverSampling", scope: !10123, file: !10123, line: 615, type: !10301, scopeLine: 616, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10303)
!10301 = !DISubroutineType(types: !10302)
!10302 = !{null, !1421, !110}
!10303 = !{!10304, !10305}
!10304 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10300, file: !10123, line: 615, type: !1421)
!10305 = !DILocalVariable(name: "OverSampling", arg: 2, scope: !10300, file: !10123, line: 615, type: !110)
!10306 = !DILocation(line: 0, scope: !10300)
!10307 = !DILocation(line: 617, column: 3, scope: !10300)
!10308 = !DILocation(line: 618, column: 1, scope: !10300)
!10309 = distinct !DISubprogram(name: "LL_USART_SetBaudRate", scope: !10123, file: !10123, line: 1020, type: !10310, scopeLine: 1022, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10312)
!10310 = !DISubroutineType(types: !10311)
!10311 = !{null, !1421, !110, !110, !110}
!10312 = !{!10313, !10314, !10315, !10316}
!10313 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10309, file: !10123, line: 1020, type: !1421)
!10314 = !DILocalVariable(name: "PeriphClk", arg: 2, scope: !10309, file: !10123, line: 1020, type: !110)
!10315 = !DILocalVariable(name: "OverSampling", arg: 3, scope: !10309, file: !10123, line: 1020, type: !110)
!10316 = !DILocalVariable(name: "BaudRate", arg: 4, scope: !10309, file: !10123, line: 1021, type: !110)
!10317 = !DILocation(line: 0, scope: !10309)
!10318 = !DILocation(line: 1029, column: 30, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10320, file: !10123, line: 1028, column: 3)
!10320 = distinct !DILexicalBlock(scope: !10309, file: !10123, line: 1023, column: 7)
!10321 = !DILocation(line: 1029, column: 19, scope: !10319)
!10322 = !DILocation(line: 1029, column: 13, scope: !10319)
!10323 = !DILocation(line: 1029, column: 17, scope: !10319)
!10324 = !DILocation(line: 1031, column: 1, scope: !10309)
!10325 = distinct !DISubprogram(name: "LL_USART_SetHWFlowCtrl", scope: !10123, file: !10123, line: 949, type: !10301, scopeLine: 950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10326)
!10326 = !{!10327, !10328}
!10327 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10325, file: !10123, line: 949, type: !1421)
!10328 = !DILocalVariable(name: "HardwareFlowControl", arg: 2, scope: !10325, file: !10123, line: 949, type: !110)
!10329 = !DILocation(line: 0, scope: !10325)
!10330 = !DILocation(line: 951, column: 3, scope: !10325)
!10331 = !DILocation(line: 952, column: 1, scope: !10325)
!10332 = distinct !DISubprogram(name: "LL_USART_SetDataWidth", scope: !10123, file: !10123, line: 588, type: !10301, scopeLine: 589, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10333)
!10333 = !{!10334, !10335}
!10334 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10332, file: !10123, line: 588, type: !1421)
!10335 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10332, file: !10123, line: 588, type: !110)
!10336 = !DILocation(line: 0, scope: !10332)
!10337 = !DILocation(line: 590, column: 3, scope: !10332)
!10338 = !DILocation(line: 591, column: 1, scope: !10332)
!10339 = distinct !DISubprogram(name: "LL_USART_SetStopBitsLength", scope: !10123, file: !10123, line: 805, type: !10301, scopeLine: 806, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10340)
!10340 = !{!10341, !10342}
!10341 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10339, file: !10123, line: 805, type: !1421)
!10342 = !DILocalVariable(name: "StopBits", arg: 2, scope: !10339, file: !10123, line: 805, type: !110)
!10343 = !DILocation(line: 0, scope: !10339)
!10344 = !DILocation(line: 807, column: 3, scope: !10339)
!10345 = !DILocation(line: 808, column: 1, scope: !10339)
!10346 = distinct !DISubprogram(name: "LL_USART_SetParity", scope: !10123, file: !10123, line: 532, type: !10301, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10347)
!10347 = !{!10348, !10349}
!10348 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10346, file: !10123, line: 532, type: !1421)
!10349 = !DILocalVariable(name: "Parity", arg: 2, scope: !10346, file: !10123, line: 532, type: !110)
!10350 = !DILocation(line: 0, scope: !10346)
!10351 = !DILocation(line: 534, column: 3, scope: !10346)
!10352 = !DILocation(line: 535, column: 1, scope: !10346)
!10353 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_ORE", scope: !10123, file: !10123, line: 1770, type: !10124, scopeLine: 1771, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10354)
!10354 = !{!10355}
!10355 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10353, file: !10123, line: 1770, type: !1421)
!10356 = !DILocation(line: 0, scope: !10353)
!10357 = !DILocation(line: 1772, column: 11, scope: !10353)
!10358 = !DILocation(line: 1772, column: 46, scope: !10353)
!10359 = !DILocation(line: 1772, column: 3, scope: !10353)
!10360 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_PE", scope: !10123, file: !10123, line: 1737, type: !10124, scopeLine: 1738, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10361)
!10361 = !{!10362}
!10362 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10360, file: !10123, line: 1737, type: !1421)
!10363 = !DILocation(line: 0, scope: !10360)
!10364 = !DILocation(line: 1739, column: 11, scope: !10360)
!10365 = !DILocation(line: 1739, column: 3, scope: !10360)
!10366 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_FE", scope: !10123, file: !10123, line: 1748, type: !10124, scopeLine: 1749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10367)
!10367 = !{!10368}
!10368 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10366, file: !10123, line: 1748, type: !1421)
!10369 = !DILocation(line: 0, scope: !10366)
!10370 = !DILocation(line: 1750, column: 11, scope: !10366)
!10371 = !DILocation(line: 1750, column: 45, scope: !10366)
!10372 = !DILocation(line: 1750, column: 3, scope: !10366)
!10373 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_LBD", scope: !10123, file: !10123, line: 1827, type: !10124, scopeLine: 1828, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10374)
!10374 = !{!10375}
!10375 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10373, file: !10123, line: 1827, type: !1421)
!10376 = !DILocation(line: 0, scope: !10373)
!10377 = !DILocation(line: 1829, column: 11, scope: !10373)
!10378 = !DILocation(line: 1829, column: 46, scope: !10373)
!10379 = !DILocation(line: 1829, column: 3, scope: !10373)
!10380 = distinct !DISubprogram(name: "LL_USART_ClearFlag_LBD", scope: !10123, file: !10123, line: 1992, type: !10186, scopeLine: 1993, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10381)
!10381 = !{!10382}
!10382 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10380, file: !10123, line: 1992, type: !1421)
!10383 = !DILocation(line: 0, scope: !10380)
!10384 = !DILocation(line: 1994, column: 3, scope: !10380)
!10385 = !DILocation(line: 1995, column: 1, scope: !10380)
!10386 = distinct !DISubprogram(name: "LL_USART_ClearFlag_ORE", scope: !10123, file: !10123, line: 1934, type: !10186, scopeLine: 1935, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10387)
!10387 = !{!10388, !10389}
!10388 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10386, file: !10123, line: 1934, type: !1421)
!10389 = !DILocalVariable(name: "tmpreg", scope: !10386, file: !10123, line: 1936, type: !316)
!10390 = !DILocation(line: 0, scope: !10386)
!10391 = !DILocation(line: 1936, column: 3, scope: !10386)
!10392 = !DILocation(line: 1936, column: 17, scope: !10386)
!10393 = !DILocation(line: 1937, column: 20, scope: !10386)
!10394 = !DILocation(line: 1937, column: 10, scope: !10386)
!10395 = !DILocation(line: 1938, column: 10, scope: !10386)
!10396 = !DILocation(line: 1939, column: 20, scope: !10386)
!10397 = !DILocation(line: 1939, column: 10, scope: !10386)
!10398 = !DILocation(line: 1940, column: 10, scope: !10386)
!10399 = !DILocation(line: 1941, column: 1, scope: !10386)
!10400 = distinct !DISubprogram(name: "LL_USART_ClearFlag_PE", scope: !10123, file: !10123, line: 1877, type: !10186, scopeLine: 1878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10401)
!10401 = !{!10402, !10403}
!10402 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10400, file: !10123, line: 1877, type: !1421)
!10403 = !DILocalVariable(name: "tmpreg", scope: !10400, file: !10123, line: 1879, type: !316)
!10404 = !DILocation(line: 0, scope: !10400)
!10405 = !DILocation(line: 1879, column: 3, scope: !10400)
!10406 = !DILocation(line: 1879, column: 17, scope: !10400)
!10407 = !DILocation(line: 1880, column: 20, scope: !10400)
!10408 = !DILocation(line: 1880, column: 10, scope: !10400)
!10409 = !DILocation(line: 1881, column: 10, scope: !10400)
!10410 = !DILocation(line: 1882, column: 20, scope: !10400)
!10411 = !DILocation(line: 1882, column: 10, scope: !10400)
!10412 = !DILocation(line: 1883, column: 10, scope: !10400)
!10413 = !DILocation(line: 1884, column: 1, scope: !10400)
!10414 = distinct !DISubprogram(name: "LL_USART_ClearFlag_FE", scope: !10123, file: !10123, line: 1896, type: !10186, scopeLine: 1897, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10415)
!10415 = !{!10416, !10417}
!10416 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10414, file: !10123, line: 1896, type: !1421)
!10417 = !DILocalVariable(name: "tmpreg", scope: !10414, file: !10123, line: 1898, type: !316)
!10418 = !DILocation(line: 0, scope: !10414)
!10419 = !DILocation(line: 1898, column: 3, scope: !10414)
!10420 = !DILocation(line: 1898, column: 17, scope: !10414)
!10421 = !DILocation(line: 1899, column: 20, scope: !10414)
!10422 = !DILocation(line: 1899, column: 10, scope: !10414)
!10423 = !DILocation(line: 1900, column: 10, scope: !10414)
!10424 = !DILocation(line: 1901, column: 20, scope: !10414)
!10425 = !DILocation(line: 1901, column: 10, scope: !10414)
!10426 = !DILocation(line: 1902, column: 10, scope: !10414)
!10427 = !DILocation(line: 1903, column: 1, scope: !10414)
!10428 = distinct !DISubprogram(name: "LL_USART_ClearFlag_NE", scope: !10123, file: !10123, line: 1915, type: !10186, scopeLine: 1916, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10429)
!10429 = !{!10430, !10431}
!10430 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10428, file: !10123, line: 1915, type: !1421)
!10431 = !DILocalVariable(name: "tmpreg", scope: !10428, file: !10123, line: 1917, type: !316)
!10432 = !DILocation(line: 0, scope: !10428)
!10433 = !DILocation(line: 1917, column: 3, scope: !10428)
!10434 = !DILocation(line: 1917, column: 17, scope: !10428)
!10435 = !DILocation(line: 1918, column: 20, scope: !10428)
!10436 = !DILocation(line: 1918, column: 10, scope: !10428)
!10437 = !DILocation(line: 1919, column: 10, scope: !10428)
!10438 = !DILocation(line: 1920, column: 20, scope: !10428)
!10439 = !DILocation(line: 1920, column: 10, scope: !10428)
!10440 = !DILocation(line: 1921, column: 10, scope: !10428)
!10441 = !DILocation(line: 1922, column: 1, scope: !10428)
!10442 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_TXE", scope: !10123, file: !10123, line: 1814, type: !10124, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10443)
!10443 = !{!10444}
!10444 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10442, file: !10123, line: 1814, type: !1421)
!10445 = !DILocation(line: 0, scope: !10442)
!10446 = !DILocation(line: 1816, column: 11, scope: !10442)
!10447 = !DILocation(line: 1816, column: 46, scope: !10442)
!10448 = !DILocation(line: 1816, column: 3, scope: !10442)
!10449 = distinct !DISubprogram(name: "LL_USART_TransmitData8", scope: !10123, file: !10123, line: 2426, type: !10450, scopeLine: 2427, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10452)
!10450 = !DISubroutineType(types: !10451)
!10451 = !{null, !1421, !178}
!10452 = !{!10453, !10454}
!10453 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10449, file: !10123, line: 2426, type: !1421)
!10454 = !DILocalVariable(name: "Value", arg: 2, scope: !10449, file: !10123, line: 2426, type: !178)
!10455 = !DILocation(line: 0, scope: !10449)
!10456 = !DILocation(line: 2428, column: 16, scope: !10449)
!10457 = !DILocation(line: 2428, column: 11, scope: !10449)
!10458 = !DILocation(line: 2428, column: 14, scope: !10449)
!10459 = !DILocation(line: 2429, column: 1, scope: !10449)
!10460 = distinct !DISubprogram(name: "LL_USART_IsActiveFlag_RXNE", scope: !10123, file: !10123, line: 1792, type: !10124, scopeLine: 1793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10461)
!10461 = !{!10462}
!10462 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10460, file: !10123, line: 1792, type: !1421)
!10463 = !DILocation(line: 0, scope: !10460)
!10464 = !DILocation(line: 1794, column: 11, scope: !10460)
!10465 = !DILocation(line: 1794, column: 47, scope: !10460)
!10466 = !DILocation(line: 1794, column: 3, scope: !10460)
!10467 = distinct !DISubprogram(name: "LL_USART_ReceiveData8", scope: !10123, file: !10123, line: 2403, type: !10468, scopeLine: 2404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10470)
!10468 = !DISubroutineType(types: !10469)
!10469 = !{!178, !1421}
!10470 = !{!10471}
!10471 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10467, file: !10123, line: 2403, type: !1421)
!10472 = !DILocation(line: 0, scope: !10467)
!10473 = !DILocation(line: 2405, column: 20, scope: !10467)
!10474 = !DILocation(line: 2405, column: 10, scope: !10467)
!10475 = !DILocation(line: 2405, column: 3, scope: !10467)
!10476 = distinct !DISubprogram(name: "uart_stm32_init", scope: !1475, file: !1475, line: 1583, type: !1401, scopeLine: 1584, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10477)
!10477 = !{!10478, !10479, !10480, !10481, !10482, !10483}
!10478 = !DILocalVariable(name: "dev", arg: 1, scope: !10476, file: !1475, line: 1583, type: !1380)
!10479 = !DILocalVariable(name: "config", scope: !10476, file: !1475, line: 1585, type: !9814)
!10480 = !DILocalVariable(name: "data", scope: !10476, file: !1475, line: 1586, type: !9937)
!10481 = !DILocalVariable(name: "ll_parity", scope: !10476, file: !1475, line: 1587, type: !110)
!10482 = !DILocalVariable(name: "ll_datawidth", scope: !10476, file: !1475, line: 1588, type: !110)
!10483 = !DILocalVariable(name: "err", scope: !10476, file: !1475, line: 1589, type: !109)
!10484 = !DILocation(line: 0, scope: !10476)
!10485 = !DILocation(line: 1585, column: 48, scope: !10476)
!10486 = !DILocation(line: 1586, column: 38, scope: !10476)
!10487 = !DILocation(line: 1591, column: 2, scope: !10476)
!10488 = !DILocation(line: 1593, column: 29, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10476, file: !1475, line: 1593, column: 6)
!10490 = !DILocation(line: 1593, column: 7, scope: !10489)
!10491 = !DILocation(line: 1593, column: 6, scope: !10476)
!10492 = !DILocation(line: 1594, column: 3, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !1475, line: 1594, column: 3)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !1475, line: 1594, column: 3)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !1475, line: 1594, column: 3)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !1475, line: 1594, column: 3)
!10497 = distinct !DILexicalBlock(scope: !10489, file: !1475, line: 1593, column: 37)
!10498 = !DILocation(line: 1595, column: 3, scope: !10497)
!10499 = !DILocation(line: 1599, column: 31, scope: !10476)
!10500 = !DILocation(line: 1599, column: 71, scope: !10476)
!10501 = !DILocation(line: 1599, column: 8, scope: !10476)
!10502 = !DILocation(line: 1600, column: 10, scope: !10503)
!10503 = distinct !DILexicalBlock(scope: !10476, file: !1475, line: 1600, column: 6)
!10504 = !DILocation(line: 1600, column: 6, scope: !10476)
!10505 = !DILocation(line: 1601, column: 3, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10507, file: !1475, line: 1601, column: 3)
!10507 = distinct !DILexicalBlock(scope: !10508, file: !1475, line: 1601, column: 3)
!10508 = distinct !DILexicalBlock(scope: !10509, file: !1475, line: 1601, column: 3)
!10509 = distinct !DILexicalBlock(scope: !10510, file: !1475, line: 1601, column: 3)
!10510 = distinct !DILexicalBlock(scope: !10503, file: !1475, line: 1600, column: 16)
!10511 = !DILocation(line: 1602, column: 3, scope: !10510)
!10512 = !DILocation(line: 1616, column: 36, scope: !10476)
!10513 = !DILocation(line: 1616, column: 8, scope: !10476)
!10514 = !DILocation(line: 1617, column: 10, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10476, file: !1475, line: 1617, column: 6)
!10516 = !DILocation(line: 1617, column: 6, scope: !10476)
!10517 = !DILocation(line: 1621, column: 27, scope: !10476)
!10518 = !DILocation(line: 1621, column: 2, scope: !10476)
!10519 = !DILocation(line: 1624, column: 40, scope: !10476)
!10520 = !DILocation(line: 1624, column: 2, scope: !10476)
!10521 = !DILocation(line: 1630, column: 14, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10476, file: !1475, line: 1630, column: 6)
!10523 = !DILocation(line: 1630, column: 6, scope: !10476)
!10524 = !DILocation(line: 1640, column: 4, scope: !10525)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !1475, line: 1640, column: 4)
!10526 = distinct !DILexicalBlock(scope: !10527, file: !1475, line: 1640, column: 4)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !1475, line: 1640, column: 4)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !1475, line: 1640, column: 4)
!10529 = distinct !DILexicalBlock(scope: !10530, file: !1475, line: 1639, column: 28)
!10530 = distinct !DILexicalBlock(scope: !10531, file: !1475, line: 1639, column: 7)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1475, line: 1638, column: 9)
!10532 = distinct !DILexicalBlock(scope: !10522, file: !1475, line: 1634, column: 13)
!10533 = !DILocation(line: 0, scope: !10522)
!10534 = !DILocation(line: 1649, column: 35, scope: !10476)
!10535 = !DILocation(line: 1649, column: 2, scope: !10476)
!10536 = !DILocation(line: 1654, column: 14, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10476, file: !1475, line: 1654, column: 6)
!10538 = !DILocation(line: 1654, column: 6, scope: !10476)
!10539 = !DILocation(line: 1655, column: 3, scope: !10540)
!10540 = distinct !DILexicalBlock(scope: !10537, file: !1475, line: 1654, column: 31)
!10541 = !DILocation(line: 1656, column: 2, scope: !10540)
!10542 = !DILocation(line: 1659, column: 37, scope: !10476)
!10543 = !DILocation(line: 1659, column: 2, scope: !10476)
!10544 = !DILocation(line: 1662, column: 14, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10476, file: !1475, line: 1662, column: 6)
!10546 = !DILocation(line: 1662, column: 6, scope: !10476)
!10547 = !DILocation(line: 1663, column: 37, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10545, file: !1475, line: 1662, column: 27)
!10549 = !DILocation(line: 1663, column: 3, scope: !10548)
!10550 = !DILocation(line: 1664, column: 2, scope: !10548)
!10551 = !DILocation(line: 1684, column: 26, scope: !10476)
!10552 = !DILocation(line: 1684, column: 2, scope: !10476)
!10553 = !DILocation(line: 1722, column: 2, scope: !10476)
!10554 = !DILocation(line: 1724, column: 1, scope: !10476)
!10555 = distinct !DISubprogram(name: "__uart_stm32_get_clock", scope: !1475, file: !1475, line: 651, type: !10556, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10558)
!10556 = !DISubroutineType(types: !10557)
!10557 = !{null, !1380}
!10558 = !{!10559, !10560, !10561}
!10559 = !DILocalVariable(name: "dev", arg: 1, scope: !10555, file: !1475, line: 651, type: !1380)
!10560 = !DILocalVariable(name: "data", scope: !10555, file: !1475, line: 653, type: !9937)
!10561 = !DILocalVariable(name: "clk", scope: !10555, file: !1475, line: 654, type: !10562)
!10562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1380)
!10563 = !DILocation(line: 0, scope: !10555)
!10564 = !DILocation(line: 653, column: 38, scope: !10555)
!10565 = !DILocation(line: 656, column: 8, scope: !10555)
!10566 = !DILocation(line: 656, column: 14, scope: !10555)
!10567 = !DILocation(line: 657, column: 1, scope: !10555)
!10568 = distinct !DISubprogram(name: "device_is_ready", scope: !8933, file: !8933, line: 47, type: !10569, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10571)
!10569 = !DISubroutineType(types: !10570)
!10570 = !{!347, !1380}
!10571 = !{!10572}
!10572 = !DILocalVariable(name: "dev", arg: 1, scope: !10568, file: !8933, line: 47, type: !1380)
!10573 = !DILocation(line: 0, scope: !10568)
!10574 = !DILocation(line: 55, column: 2, scope: !10575)
!10575 = distinct !DILexicalBlock(scope: !10568, file: !8933, line: 55, column: 2)
!10576 = !{i64 2155045373}
!10577 = !DILocation(line: 56, column: 9, scope: !10568)
!10578 = !DILocation(line: 56, column: 2, scope: !10568)
!10579 = distinct !DISubprogram(name: "clock_control_on", scope: !835, file: !835, line: 123, type: !1439, scopeLine: 125, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10580)
!10580 = !{!10581, !10582, !10583}
!10581 = !DILocalVariable(name: "dev", arg: 1, scope: !10579, file: !835, line: 123, type: !1380)
!10582 = !DILocalVariable(name: "sys", arg: 2, scope: !10579, file: !835, line: 124, type: !928)
!10583 = !DILocalVariable(name: "api", scope: !10579, file: !835, line: 126, type: !1432)
!10584 = !DILocation(line: 0, scope: !10579)
!10585 = !DILocation(line: 127, column: 49, scope: !10579)
!10586 = !DILocation(line: 129, column: 14, scope: !10579)
!10587 = !DILocation(line: 129, column: 9, scope: !10579)
!10588 = !DILocation(line: 129, column: 2, scope: !10579)
!10589 = distinct !DISubprogram(name: "pinctrl_apply_state", scope: !1515, file: !1515, line: 342, type: !10590, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10592)
!10590 = !DISubroutineType(types: !10591)
!10591 = !{!109, !1512, !178}
!10592 = !{!10593, !10594, !10595, !10596}
!10593 = !DILocalVariable(name: "config", arg: 1, scope: !10589, file: !1515, line: 342, type: !1512)
!10594 = !DILocalVariable(name: "id", arg: 2, scope: !10589, file: !1515, line: 343, type: !178)
!10595 = !DILocalVariable(name: "ret", scope: !10589, file: !1515, line: 345, type: !109)
!10596 = !DILocalVariable(name: "state", scope: !10589, file: !1515, line: 346, type: !1518)
!10597 = !DILocation(line: 0, scope: !10589)
!10598 = !DILocation(line: 346, column: 2, scope: !10589)
!10599 = !DILocation(line: 348, column: 8, scope: !10589)
!10600 = !DILocation(line: 349, column: 10, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10589, file: !1515, line: 349, column: 6)
!10602 = !DILocation(line: 349, column: 6, scope: !10589)
!10603 = !DILocation(line: 353, column: 44, scope: !10589)
!10604 = !DILocation(line: 353, column: 9, scope: !10589)
!10605 = !DILocation(line: 353, column: 2, scope: !10589)
!10606 = !DILocation(line: 354, column: 1, scope: !10589)
!10607 = distinct !DISubprogram(name: "LL_USART_SetTransferDirection", scope: !10123, file: !10123, line: 497, type: !10301, scopeLine: 498, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10608)
!10608 = !{!10609, !10610, !10611}
!10609 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10607, file: !10123, line: 497, type: !1421)
!10610 = !DILocalVariable(name: "TransferDirection", arg: 2, scope: !10607, file: !10123, line: 497, type: !110)
!10611 = !DILocalVariable(name: "val", scope: !10612, file: !10123, line: 499, type: !110)
!10612 = distinct !DILexicalBlock(scope: !10607, file: !10123, line: 499, column: 3)
!10613 = !DILocation(line: 0, scope: !10607)
!10614 = !DILocation(line: 499, column: 3, scope: !10612)
!10615 = !DILocalVariable(name: "addr", arg: 1, scope: !10616, file: !6422, line: 476, type: !1471)
!10616 = distinct !DISubprogram(name: "__LDREXW", scope: !6422, file: !6422, line: 476, type: !10617, scopeLine: 477, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!110, !1471}
!10619 = !{!10615, !10620}
!10620 = !DILocalVariable(name: "result", scope: !10616, file: !6422, line: 478, type: !110)
!10621 = !DILocation(line: 0, scope: !10616, inlinedAt: !10622)
!10622 = distinct !DILocation(line: 499, column: 3, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10612, file: !10123, line: 499, column: 3)
!10624 = !DILocation(line: 480, column: 4, scope: !10616, inlinedAt: !10622)
!10625 = !{i64 3531353}
!10626 = !DILocation(line: 499, column: 3, scope: !10623)
!10627 = !DILocation(line: 0, scope: !10612)
!10628 = !DILocalVariable(name: "value", arg: 1, scope: !10629, file: !6422, line: 527, type: !110)
!10629 = distinct !DISubprogram(name: "__STREXW", scope: !6422, file: !6422, line: 527, type: !10630, scopeLine: 528, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10632)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{!110, !110, !1471}
!10632 = !{!10628, !10633, !10634}
!10633 = !DILocalVariable(name: "addr", arg: 2, scope: !10629, file: !6422, line: 527, type: !1471)
!10634 = !DILocalVariable(name: "result", scope: !10629, file: !6422, line: 529, type: !110)
!10635 = !DILocation(line: 0, scope: !10629, inlinedAt: !10636)
!10636 = distinct !DILocation(line: 499, column: 3, scope: !10612)
!10637 = !DILocation(line: 531, column: 4, scope: !10629, inlinedAt: !10636)
!10638 = !{i64 3532789}
!10639 = distinct !{!10639, !10614, !10614}
!10640 = !DILocation(line: 500, column: 1, scope: !10607)
!10641 = distinct !DISubprogram(name: "LL_USART_ConfigCharacter", scope: !10123, file: !10123, line: 850, type: !10310, scopeLine: 852, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10642)
!10642 = !{!10643, !10644, !10645, !10646}
!10643 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10641, file: !10123, line: 850, type: !1421)
!10644 = !DILocalVariable(name: "DataWidth", arg: 2, scope: !10641, file: !10123, line: 850, type: !110)
!10645 = !DILocalVariable(name: "Parity", arg: 3, scope: !10641, file: !10123, line: 850, type: !110)
!10646 = !DILocalVariable(name: "StopBits", arg: 4, scope: !10641, file: !10123, line: 851, type: !110)
!10647 = !DILocation(line: 0, scope: !10641)
!10648 = !DILocation(line: 853, column: 3, scope: !10641)
!10649 = !DILocation(line: 854, column: 3, scope: !10641)
!10650 = !DILocation(line: 855, column: 1, scope: !10641)
!10651 = distinct !DISubprogram(name: "LL_USART_EnableHalfDuplex", scope: !10123, file: !10123, line: 1337, type: !10186, scopeLine: 1338, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10652)
!10652 = !{!10653}
!10653 = !DILocalVariable(name: "USARTx", arg: 1, scope: !10651, file: !10123, line: 1337, type: !1421)
!10654 = !DILocation(line: 0, scope: !10651)
!10655 = !DILocation(line: 1339, column: 3, scope: !10651)
!10656 = !DILocation(line: 1340, column: 1, scope: !10651)
!10657 = distinct !DISubprogram(name: "pinctrl_apply_state_direct", scope: !1515, file: !1515, line: 316, type: !10658, scopeLine: 319, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10660)
!10658 = !DISubroutineType(types: !10659)
!10659 = !{!109, !1512, !1518}
!10660 = !{!10661, !10662, !10663}
!10661 = !DILocalVariable(name: "config", arg: 1, scope: !10657, file: !1515, line: 317, type: !1512)
!10662 = !DILocalVariable(name: "state", arg: 2, scope: !10657, file: !1515, line: 318, type: !1518)
!10663 = !DILocalVariable(name: "reg", scope: !10657, file: !1515, line: 320, type: !22)
!10664 = !DILocation(line: 0, scope: !10657)
!10665 = !DILocation(line: 329, column: 39, scope: !10657)
!10666 = !DILocation(line: 329, column: 52, scope: !10657)
!10667 = !DILocation(line: 329, column: 9, scope: !10657)
!10668 = !DILocation(line: 329, column: 2, scope: !10657)
!10669 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !10569, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1336, retainedNodes: !10670)
!10670 = !{!10671}
!10671 = !DILocalVariable(name: "dev", arg: 1, scope: !10669, file: !336, line: 730, type: !1380)
!10672 = !DILocation(line: 0, scope: !10669)
!10673 = !DILocation(line: 732, column: 9, scope: !10669)
!10674 = !DILocation(line: 732, column: 2, scope: !10669)
!10675 = distinct !DISubprogram(name: "sys_clock_driver_init", scope: !1636, file: !1636, line: 270, type: !1642, scopeLine: 271, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10676)
!10676 = !{!10677}
!10677 = !DILocalVariable(name: "dev", arg: 1, scope: !10675, file: !1636, line: 270, type: !1644)
!10678 = !DILocation(line: 0, scope: !10675)
!10679 = !DILocation(line: 274, column: 2, scope: !10675)
!10680 = !DILocation(line: 275, column: 12, scope: !10675)
!10681 = !DILocation(line: 276, column: 15, scope: !10675)
!10682 = !DILocation(line: 277, column: 16, scope: !10675)
!10683 = !DILocation(line: 278, column: 15, scope: !10675)
!10684 = !DILocation(line: 279, column: 16, scope: !10675)
!10685 = !DILocation(line: 282, column: 2, scope: !10675)
!10686 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6462, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10687)
!10687 = !{!10688, !10689}
!10688 = !DILocalVariable(name: "IRQn", arg: 1, scope: !10686, file: !535, line: 1814, type: !791)
!10689 = !DILocalVariable(name: "priority", arg: 2, scope: !10686, file: !535, line: 1814, type: !110)
!10690 = !DILocation(line: 0, scope: !10686)
!10691 = !DILocation(line: 1822, column: 46, scope: !10692)
!10692 = distinct !DILexicalBlock(scope: !10693, file: !535, line: 1821, column: 3)
!10693 = distinct !DILexicalBlock(scope: !10686, file: !535, line: 1816, column: 7)
!10694 = !DILocation(line: 1824, column: 1, scope: !10686)
!10695 = distinct !DISubprogram(name: "sys_clock_isr", scope: !1636, file: !1636, line: 118, type: !6359, scopeLine: 119, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10696)
!10696 = !{!10697, !10698}
!10697 = !DILocalVariable(name: "arg", arg: 1, scope: !10695, file: !1636, line: 118, type: !107)
!10698 = !DILocalVariable(name: "dticks", scope: !10695, file: !1636, line: 121, type: !110)
!10699 = !DILocation(line: 0, scope: !10695)
!10700 = !DILocation(line: 124, column: 2, scope: !10695)
!10701 = !DILocation(line: 129, column: 17, scope: !10695)
!10702 = !DILocation(line: 129, column: 14, scope: !10695)
!10703 = !DILocation(line: 130, column: 15, scope: !10695)
!10704 = !DILocation(line: 145, column: 27, scope: !10705)
!10705 = distinct !DILexicalBlock(scope: !10706, file: !1636, line: 132, column: 16)
!10706 = distinct !DILexicalBlock(scope: !10695, file: !1636, line: 132, column: 6)
!10707 = !DILocation(line: 145, column: 25, scope: !10705)
!10708 = !DILocation(line: 145, column: 45, scope: !10705)
!10709 = !DILocation(line: 146, column: 30, scope: !10705)
!10710 = !DILocation(line: 146, column: 20, scope: !10705)
!10711 = !DILocation(line: 147, column: 3, scope: !10705)
!10712 = !DILocation(line: 151, column: 2, scope: !10695)
!10713 = !DILocation(line: 152, column: 1, scope: !10695)
!10714 = distinct !DISubprogram(name: "elapsed", scope: !1636, file: !1636, line: 85, type: !6509, scopeLine: 86, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10715)
!10715 = !{!10716, !10717, !10718}
!10716 = !DILocalVariable(name: "val1", scope: !10714, file: !1636, line: 87, type: !110)
!10717 = !DILocalVariable(name: "ctrl", scope: !10714, file: !1636, line: 88, type: !110)
!10718 = !DILocalVariable(name: "val2", scope: !10714, file: !1636, line: 89, type: !110)
!10719 = !DILocation(line: 87, column: 27, scope: !10714)
!10720 = !DILocation(line: 0, scope: !10714)
!10721 = !DILocation(line: 88, column: 27, scope: !10714)
!10722 = !DILocation(line: 89, column: 27, scope: !10714)
!10723 = !DILocation(line: 105, column: 12, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10714, file: !1636, line: 105, column: 6)
!10725 = !DILocation(line: 106, column: 6, scope: !10724)
!10726 = !DILocation(line: 107, column: 16, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10724, file: !1636, line: 106, column: 24)
!10728 = !DILocation(line: 111, column: 18, scope: !10727)
!10729 = !DILocation(line: 112, column: 2, scope: !10727)
!10730 = !DILocation(line: 114, column: 20, scope: !10714)
!10731 = !DILocation(line: 114, column: 30, scope: !10714)
!10732 = !DILocation(line: 114, column: 28, scope: !10714)
!10733 = !DILocation(line: 114, column: 2, scope: !10714)
!10734 = distinct !DISubprogram(name: "sys_clock_set_timeout", scope: !1636, file: !1636, line: 154, type: !10735, scopeLine: 155, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10737)
!10735 = !DISubroutineType(types: !10736)
!10736 = !{null, !765, !347}
!10737 = !{!10738, !10739, !10740, !10741, !10742, !10743, !10744, !10749, !10750}
!10738 = !DILocalVariable(name: "ticks", arg: 1, scope: !10734, file: !1636, line: 154, type: !765)
!10739 = !DILocalVariable(name: "idle", arg: 2, scope: !10734, file: !1636, line: 154, type: !347)
!10740 = !DILocalVariable(name: "delay", scope: !10734, file: !1636, line: 169, type: !110)
!10741 = !DILocalVariable(name: "val1", scope: !10734, file: !1636, line: 170, type: !110)
!10742 = !DILocalVariable(name: "val2", scope: !10734, file: !1636, line: 170, type: !110)
!10743 = !DILocalVariable(name: "last_load_", scope: !10734, file: !1636, line: 171, type: !110)
!10744 = !DILocalVariable(name: "key", scope: !10734, file: !1636, line: 176, type: !10745)
!10745 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !10746)
!10746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !10747)
!10747 = !{!10748}
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10746, file: !251, line: 33, baseType: !109, size: 32)
!10749 = !DILocalVariable(name: "pending", scope: !10734, file: !1636, line: 178, type: !110)
!10750 = !DILocalVariable(name: "unannounced", scope: !10734, file: !1636, line: 185, type: !110)
!10751 = !DILocation(line: 0, scope: !10734)
!10752 = !DILocation(line: 162, column: 49, scope: !10753)
!10753 = distinct !DILexicalBlock(scope: !10734, file: !1636, line: 162, column: 6)
!10754 = !DILocation(line: 163, column: 17, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10753, file: !1636, line: 162, column: 78)
!10756 = !DILocation(line: 164, column: 13, scope: !10755)
!10757 = !DILocation(line: 165, column: 3, scope: !10755)
!10758 = !DILocation(line: 171, column: 24, scope: !10734)
!10759 = !DILocation(line: 173, column: 10, scope: !10734)
!10760 = !DILocation(line: 174, column: 10, scope: !10734)
!10761 = !DILocalVariable(name: "l", arg: 1, scope: !10762, file: !251, line: 136, type: !10765)
!10762 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !10763, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10766)
!10763 = !DISubroutineType(types: !10764)
!10764 = !{!10745, !10765}
!10765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 32)
!10766 = !{!10761, !10767}
!10767 = !DILocalVariable(name: "k", scope: !10762, file: !251, line: 139, type: !10745)
!10768 = !DILocation(line: 0, scope: !10762, inlinedAt: !10769)
!10769 = distinct !DILocation(line: 176, column: 25, scope: !10734)
!10770 = !DILocation(line: 55, column: 2, scope: !10771, inlinedAt: !10775)
!10771 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10772)
!10772 = !{!10773, !10774}
!10773 = !DILocalVariable(name: "key", scope: !10771, file: !6101, line: 44, type: !32)
!10774 = !DILocalVariable(name: "tmp", scope: !10771, file: !6101, line: 53, type: !32)
!10775 = distinct !DILocation(line: 145, column: 10, scope: !10762, inlinedAt: !10769)
!10776 = !{i64 2225440}
!10777 = !DILocation(line: 0, scope: !10771, inlinedAt: !10775)
!10778 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10769)
!10779 = distinct !DILexicalBlock(scope: !10780, file: !251, line: 148, column: 2)
!10780 = distinct !DILexicalBlock(scope: !10762, file: !251, line: 148, column: 2)
!10781 = !DILocation(line: 148, column: 2, scope: !10780, inlinedAt: !10769)
!10782 = !DILocation(line: 148, column: 2, scope: !10783, inlinedAt: !10769)
!10783 = distinct !DILexicalBlock(scope: !10779, file: !251, line: 148, column: 2)
!10784 = !DILocation(line: 160, column: 2, scope: !10762, inlinedAt: !10769)
!10785 = !DILocation(line: 178, column: 21, scope: !10734)
!10786 = !DILocation(line: 180, column: 18, scope: !10734)
!10787 = !DILocation(line: 182, column: 14, scope: !10734)
!10788 = !DILocation(line: 183, column: 15, scope: !10734)
!10789 = !DILocation(line: 185, column: 39, scope: !10734)
!10790 = !DILocation(line: 185, column: 37, scope: !10734)
!10791 = !DILocation(line: 187, column: 27, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10734, file: !1636, line: 187, column: 6)
!10793 = !DILocation(line: 187, column: 6, scope: !10734)
!10794 = !DILocation(line: 202, column: 27, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10792, file: !1636, line: 195, column: 9)
!10796 = !DILocation(line: 202, column: 48, scope: !10795)
!10797 = !DILocation(line: 203, column: 9, scope: !10795)
!10798 = !DILocation(line: 204, column: 11, scope: !10795)
!10799 = !DILocation(line: 205, column: 13, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10795, file: !1636, line: 205, column: 7)
!10801 = !DILocation(line: 205, column: 7, scope: !10795)
!10802 = !DILocation(line: 0, scope: !10792)
!10803 = !DILocation(line: 212, column: 18, scope: !10734)
!10804 = !DILocation(line: 214, column: 28, scope: !10734)
!10805 = !DILocation(line: 214, column: 16, scope: !10734)
!10806 = !DILocation(line: 215, column: 15, scope: !10734)
!10807 = !DILocation(line: 227, column: 11, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10734, file: !1636, line: 227, column: 6)
!10809 = !DILocation(line: 227, column: 6, scope: !10734)
!10810 = !DILocation(line: 228, column: 15, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10808, file: !1636, line: 227, column: 19)
!10812 = !DILocation(line: 228, column: 38, scope: !10811)
!10813 = !DILocation(line: 228, column: 24, scope: !10811)
!10814 = !DILocation(line: 229, column: 2, scope: !10811)
!10815 = !DILocation(line: 230, column: 24, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10808, file: !1636, line: 229, column: 9)
!10817 = !DILocation(line: 230, column: 15, scope: !10816)
!10818 = !DILocation(line: 0, scope: !10808)
!10819 = !DILocalVariable(name: "key", arg: 2, scope: !10820, file: !251, line: 190, type: !10745)
!10820 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !10821, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10823)
!10821 = !DISubroutineType(types: !10822)
!10822 = !{null, !10765, !10745}
!10823 = !{!10824, !10819}
!10824 = !DILocalVariable(name: "l", arg: 1, scope: !10820, file: !251, line: 189, type: !10765)
!10825 = !DILocation(line: 0, scope: !10820, inlinedAt: !10826)
!10826 = distinct !DILocation(line: 232, column: 2, scope: !10734)
!10827 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10826)
!10828 = distinct !DILexicalBlock(scope: !10829, file: !251, line: 194, column: 2)
!10829 = distinct !DILexicalBlock(scope: !10820, file: !251, line: 194, column: 2)
!10830 = !DILocation(line: 194, column: 2, scope: !10829, inlinedAt: !10826)
!10831 = !DILocation(line: 194, column: 2, scope: !10832, inlinedAt: !10826)
!10832 = distinct !DILexicalBlock(scope: !10828, file: !251, line: 194, column: 2)
!10833 = !DILocalVariable(name: "key", arg: 1, scope: !10834, file: !6101, line: 84, type: !32)
!10834 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10835)
!10835 = !{!10833}
!10836 = !DILocation(line: 0, scope: !10834, inlinedAt: !10837)
!10837 = distinct !DILocation(line: 215, column: 2, scope: !10820, inlinedAt: !10826)
!10838 = !DILocation(line: 95, column: 2, scope: !10834, inlinedAt: !10837)
!10839 = !{i64 2226257}
!10840 = !DILocation(line: 234, column: 1, scope: !10734)
!10841 = distinct !DISubprogram(name: "sys_clock_elapsed", scope: !1636, file: !1636, line: 236, type: !6509, scopeLine: 237, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10842)
!10842 = !{!10843, !10844}
!10843 = !DILocalVariable(name: "key", scope: !10841, file: !1636, line: 242, type: !10745)
!10844 = !DILocalVariable(name: "cyc", scope: !10841, file: !1636, line: 243, type: !110)
!10845 = !DILocation(line: 0, scope: !10762, inlinedAt: !10846)
!10846 = distinct !DILocation(line: 242, column: 25, scope: !10841)
!10847 = !DILocation(line: 55, column: 2, scope: !10771, inlinedAt: !10848)
!10848 = distinct !DILocation(line: 145, column: 10, scope: !10762, inlinedAt: !10846)
!10849 = !DILocation(line: 0, scope: !10771, inlinedAt: !10848)
!10850 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10846)
!10851 = !DILocation(line: 148, column: 2, scope: !10780, inlinedAt: !10846)
!10852 = !DILocation(line: 148, column: 2, scope: !10783, inlinedAt: !10846)
!10853 = !DILocation(line: 160, column: 2, scope: !10762, inlinedAt: !10846)
!10854 = !DILocation(line: 0, scope: !10841)
!10855 = !DILocation(line: 243, column: 17, scope: !10841)
!10856 = !DILocation(line: 243, column: 29, scope: !10841)
!10857 = !DILocation(line: 243, column: 43, scope: !10841)
!10858 = !DILocation(line: 0, scope: !10820, inlinedAt: !10859)
!10859 = distinct !DILocation(line: 245, column: 2, scope: !10841)
!10860 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10859)
!10861 = !DILocation(line: 194, column: 2, scope: !10829, inlinedAt: !10859)
!10862 = !DILocation(line: 194, column: 2, scope: !10832, inlinedAt: !10859)
!10863 = !DILocation(line: 243, column: 27, scope: !10841)
!10864 = !DILocation(line: 243, column: 41, scope: !10841)
!10865 = !DILocation(line: 0, scope: !10834, inlinedAt: !10866)
!10866 = distinct !DILocation(line: 215, column: 2, scope: !10820, inlinedAt: !10859)
!10867 = !DILocation(line: 95, column: 2, scope: !10834, inlinedAt: !10866)
!10868 = !DILocation(line: 246, column: 13, scope: !10841)
!10869 = !DILocation(line: 246, column: 2, scope: !10841)
!10870 = distinct !DISubprogram(name: "sys_clock_cycle_get_32", scope: !1636, file: !1636, line: 249, type: !6509, scopeLine: 250, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !10871)
!10871 = !{!10872, !10873}
!10872 = !DILocalVariable(name: "key", scope: !10870, file: !1636, line: 251, type: !10745)
!10873 = !DILocalVariable(name: "ret", scope: !10870, file: !1636, line: 252, type: !110)
!10874 = !DILocation(line: 0, scope: !10762, inlinedAt: !10875)
!10875 = distinct !DILocation(line: 251, column: 25, scope: !10870)
!10876 = !DILocation(line: 55, column: 2, scope: !10771, inlinedAt: !10877)
!10877 = distinct !DILocation(line: 145, column: 10, scope: !10762, inlinedAt: !10875)
!10878 = !DILocation(line: 0, scope: !10771, inlinedAt: !10877)
!10879 = !DILocation(line: 148, column: 2, scope: !10779, inlinedAt: !10875)
!10880 = !DILocation(line: 148, column: 2, scope: !10780, inlinedAt: !10875)
!10881 = !DILocation(line: 148, column: 2, scope: !10783, inlinedAt: !10875)
!10882 = !DILocation(line: 160, column: 2, scope: !10762, inlinedAt: !10875)
!10883 = !DILocation(line: 0, scope: !10870)
!10884 = !DILocation(line: 252, column: 17, scope: !10870)
!10885 = !DILocation(line: 252, column: 29, scope: !10870)
!10886 = !DILocation(line: 0, scope: !10820, inlinedAt: !10887)
!10887 = distinct !DILocation(line: 254, column: 2, scope: !10870)
!10888 = !DILocation(line: 194, column: 2, scope: !10828, inlinedAt: !10887)
!10889 = !DILocation(line: 194, column: 2, scope: !10829, inlinedAt: !10887)
!10890 = !DILocation(line: 194, column: 2, scope: !10832, inlinedAt: !10887)
!10891 = !DILocation(line: 252, column: 27, scope: !10870)
!10892 = !DILocation(line: 0, scope: !10834, inlinedAt: !10893)
!10893 = distinct !DILocation(line: 215, column: 2, scope: !10820, inlinedAt: !10887)
!10894 = !DILocation(line: 95, column: 2, scope: !10834, inlinedAt: !10893)
!10895 = !DILocation(line: 255, column: 2, scope: !10870)
!10896 = distinct !DISubprogram(name: "sys_clock_idle_exit", scope: !1636, file: !1636, line: 258, type: !3089, scopeLine: 259, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !2026)
!10897 = !DILocation(line: 260, column: 6, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10896, file: !1636, line: 260, column: 6)
!10899 = !DILocation(line: 260, column: 16, scope: !10898)
!10900 = !DILocation(line: 260, column: 6, scope: !10896)
!10901 = !DILocation(line: 261, column: 17, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10898, file: !1636, line: 260, column: 34)
!10903 = !DILocation(line: 262, column: 2, scope: !10902)
!10904 = !DILocation(line: 263, column: 1, scope: !10896)
!10905 = distinct !DISubprogram(name: "sys_clock_disable", scope: !1636, file: !1636, line: 265, type: !3089, scopeLine: 266, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1560, retainedNodes: !2026)
!10906 = !DILocation(line: 267, column: 16, scope: !10905)
!10907 = !DILocation(line: 268, column: 1, scope: !10905)
!10908 = distinct !DISubprogram(name: "pinctrl_lookup_state", scope: !10909, file: !10909, line: 9, type: !10910, scopeLine: 11, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2898, retainedNodes: !10933)
!10909 = !DIFile(filename: "zephyr/drivers/pinctrl/common.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!10910 = !DISubroutineType(types: !10911)
!10911 = !{!109, !10912, !178, !10932}
!10912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10913, size: 32)
!10913 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10914)
!10914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_dev_config", file: !1515, line: 60, size: 64, elements: !10915)
!10915 = !{!10916, !10931}
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !10914, file: !1515, line: 69, baseType: !10917, size: 32)
!10917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10918, size: 32)
!10918 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10919)
!10919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !1515, line: 50, size: 64, elements: !10920)
!10920 = !{!10921, !10929, !10930}
!10921 = !DIDerivedType(tag: DW_TAG_member, name: "pins", scope: !10919, file: !1515, line: 52, baseType: !10922, size: 32)
!10922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10923, size: 32)
!10923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10924)
!10924 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1526, line: 37, baseType: !10925)
!10925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1526, line: 32, size: 64, elements: !10926)
!10926 = !{!10927, !10928}
!10927 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10925, file: !1526, line: 34, baseType: !110, size: 32)
!10928 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10925, file: !1526, line: 36, baseType: !110, size: 32, offset: 32)
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "pin_cnt", scope: !10919, file: !1515, line: 54, baseType: !178, size: 8, offset: 32)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10919, file: !1515, line: 56, baseType: !178, size: 8, offset: 40)
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "state_cnt", scope: !10914, file: !1515, line: 71, baseType: !178, size: 8, offset: 32)
!10932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10917, size: 32)
!10933 = !{!10934, !10935, !10936}
!10934 = !DILocalVariable(name: "config", arg: 1, scope: !10908, file: !10909, line: 9, type: !10912)
!10935 = !DILocalVariable(name: "id", arg: 2, scope: !10908, file: !10909, line: 9, type: !178)
!10936 = !DILocalVariable(name: "state", arg: 3, scope: !10908, file: !10909, line: 10, type: !10932)
!10937 = !DILocation(line: 0, scope: !10908)
!10938 = !DILocation(line: 12, column: 20, scope: !10908)
!10939 = !DILocation(line: 13, column: 27, scope: !10908)
!10940 = !DILocation(line: 13, column: 42, scope: !10908)
!10941 = !DILocation(line: 13, column: 19, scope: !10908)
!10942 = !DILocation(line: 13, column: 16, scope: !10908)
!10943 = !DILocation(line: 13, column: 2, scope: !10908)
!10944 = distinct !{!10944, !10943, !10945}
!10945 = !DILocation(line: 19, column: 2, scope: !10908)
!10946 = !DILocation(line: 14, column: 23, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10948, file: !10909, line: 14, column: 7)
!10948 = distinct !DILexicalBlock(scope: !10908, file: !10909, line: 13, column: 54)
!10949 = !DILocation(line: 14, column: 10, scope: !10947)
!10950 = !DILocation(line: 18, column: 11, scope: !10948)
!10951 = !DILocation(line: 14, column: 7, scope: !10948)
!10952 = !DILocation(line: 22, column: 1, scope: !10908)
!10953 = distinct !DISubprogram(name: "pinctrl_configure_pins", scope: !1755, file: !1755, line: 193, type: !10954, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1673, retainedNodes: !10963)
!10954 = !DISubroutineType(types: !10955)
!10955 = !{!109, !10956, !178, !22}
!10956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10957, size: 32)
!10957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10958)
!10958 = !DIDerivedType(tag: DW_TAG_typedef, name: "pinctrl_soc_pin_t", file: !1526, line: 37, baseType: !10959)
!10959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_soc_pin", file: !1526, line: 32, size: 64, elements: !10960)
!10960 = !{!10961, !10962}
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "pinmux", scope: !10959, file: !1526, line: 34, baseType: !110, size: 32)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "pincfg", scope: !10959, file: !1526, line: 36, baseType: !110, size: 32, offset: 32)
!10963 = !{!10964, !10965, !10966, !10967, !10968, !10969, !10970, !10971, !10973}
!10964 = !DILocalVariable(name: "pins", arg: 1, scope: !10953, file: !1755, line: 193, type: !10956)
!10965 = !DILocalVariable(name: "pin_cnt", arg: 2, scope: !10953, file: !1755, line: 193, type: !178)
!10966 = !DILocalVariable(name: "reg", arg: 3, scope: !10953, file: !1755, line: 194, type: !22)
!10967 = !DILocalVariable(name: "pin", scope: !10953, file: !1755, line: 196, type: !110)
!10968 = !DILocalVariable(name: "mux", scope: !10953, file: !1755, line: 196, type: !110)
!10969 = !DILocalVariable(name: "pin_cgf", scope: !10953, file: !1755, line: 197, type: !110)
!10970 = !DILocalVariable(name: "ret", scope: !10953, file: !1755, line: 198, type: !109)
!10971 = !DILocalVariable(name: "i", scope: !10972, file: !1755, line: 209, type: !178)
!10972 = distinct !DILexicalBlock(scope: !10953, file: !1755, line: 209, column: 2)
!10973 = !DILocalVariable(name: "gpio_out", scope: !10974, file: !1755, line: 239, type: !110)
!10974 = distinct !DILexicalBlock(scope: !10975, file: !1755, line: 238, column: 55)
!10975 = distinct !DILexicalBlock(scope: !10976, file: !1755, line: 238, column: 14)
!10976 = distinct !DILexicalBlock(scope: !10977, file: !1755, line: 236, column: 14)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !1755, line: 234, column: 7)
!10978 = distinct !DILexicalBlock(scope: !10979, file: !1755, line: 209, column: 41)
!10979 = distinct !DILexicalBlock(scope: !10972, file: !1755, line: 209, column: 2)
!10980 = !DILocation(line: 0, scope: !10953)
!10981 = !DILocation(line: 0, scope: !10972)
!10982 = !DILocation(line: 209, column: 25, scope: !10979)
!10983 = !DILocation(line: 209, column: 2, scope: !10972)
!10984 = distinct !{!10984, !10983, !10985}
!10985 = !DILocation(line: 259, column: 2, scope: !10972)
!10986 = !DILocation(line: 210, column: 17, scope: !10978)
!10987 = !DILocation(line: 234, column: 7, scope: !10977)
!10988 = !DILocation(line: 234, column: 33, scope: !10977)
!10989 = !DILocation(line: 234, column: 7, scope: !10978)
!10990 = !DILocation(line: 235, column: 22, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10977, file: !1755, line: 234, column: 49)
!10992 = !DILocation(line: 235, column: 29, scope: !10991)
!10993 = !DILocation(line: 236, column: 3, scope: !10991)
!10994 = !DILocation(line: 236, column: 14, scope: !10977)
!10995 = !DILocation(line: 239, column: 32, scope: !10974)
!10996 = !DILocation(line: 0, scope: !10974)
!10997 = !DILocation(line: 241, column: 8, scope: !10974)
!10998 = !DILocation(line: 246, column: 3, scope: !10974)
!10999 = !DILocation(line: 252, column: 9, scope: !10978)
!11000 = !DILocation(line: 255, column: 9, scope: !10978)
!11001 = !DILocation(line: 256, column: 11, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10978, file: !1755, line: 256, column: 7)
!11003 = !DILocation(line: 209, column: 37, scope: !10979)
!11004 = !DILocation(line: 256, column: 7, scope: !10978)
!11005 = !DILocation(line: 262, column: 1, scope: !10953)
!11006 = distinct !DISubprogram(name: "stm32_pin_configure", scope: !1755, file: !1755, line: 176, type: !11007, scopeLine: 177, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1673, retainedNodes: !11009)
!11007 = !DISubroutineType(types: !11008)
!11008 = !{!109, !110, !110, !110}
!11009 = !{!11010, !11011, !11012, !11013}
!11010 = !DILocalVariable(name: "pin", arg: 1, scope: !11006, file: !1755, line: 176, type: !110)
!11011 = !DILocalVariable(name: "pin_cgf", arg: 2, scope: !11006, file: !1755, line: 176, type: !110)
!11012 = !DILocalVariable(name: "pin_func", arg: 3, scope: !11006, file: !1755, line: 176, type: !110)
!11013 = !DILocalVariable(name: "port_device", scope: !11006, file: !1755, line: 178, type: !1685)
!11014 = !DILocation(line: 0, scope: !11006)
!11015 = !DILocation(line: 180, column: 22, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11006, file: !1755, line: 180, column: 6)
!11017 = !DILocation(line: 180, column: 6, scope: !11006)
!11018 = !DILocation(line: 180, column: 6, scope: !11016)
!11019 = !DILocation(line: 184, column: 16, scope: !11006)
!11020 = !DILocation(line: 186, column: 19, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11006, file: !1755, line: 186, column: 6)
!11022 = !DILocation(line: 186, column: 28, scope: !11021)
!11023 = !DILocation(line: 186, column: 33, scope: !11021)
!11024 = !DILocation(line: 186, column: 6, scope: !11006)
!11025 = !DILocation(line: 190, column: 43, scope: !11006)
!11026 = !DILocation(line: 190, column: 9, scope: !11006)
!11027 = !DILocation(line: 190, column: 2, scope: !11006)
!11028 = !DILocation(line: 191, column: 1, scope: !11006)
!11029 = distinct !DISubprogram(name: "device_is_ready", scope: !8933, file: !8933, line: 47, type: !11030, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1673, retainedNodes: !11032)
!11030 = !DISubroutineType(types: !11031)
!11031 = !{!347, !1685}
!11032 = !{!11033}
!11033 = !DILocalVariable(name: "dev", arg: 1, scope: !11029, file: !8933, line: 47, type: !1685)
!11034 = !DILocation(line: 0, scope: !11029)
!11035 = !DILocation(line: 55, column: 2, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11029, file: !8933, line: 55, column: 2)
!11037 = !{i64 2149463510}
!11038 = !DILocation(line: 56, column: 9, scope: !11029)
!11039 = !DILocation(line: 56, column: 2, scope: !11029)
!11040 = distinct !DISubprogram(name: "z_impl_device_is_ready", scope: !336, file: !336, line: 730, type: !11030, scopeLine: 731, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1673, retainedNodes: !11041)
!11041 = !{!11042}
!11042 = !DILocalVariable(name: "dev", arg: 1, scope: !11040, file: !336, line: 730, type: !1685)
!11043 = !DILocation(line: 0, scope: !11040)
!11044 = !DILocation(line: 732, column: 9, scope: !11040)
!11045 = !DILocation(line: 732, column: 2, scope: !11040)
!11046 = distinct !DISubprogram(name: "SystemInit", scope: !1804, file: !1804, line: 167, type: !3089, scopeLine: 168, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !2026)
!11047 = !DILocation(line: 182, column: 1, scope: !11046)
!11048 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !1804, file: !1804, line: 220, type: !3089, scopeLine: 221, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !11049)
!11049 = !{!11050, !11051, !11052, !11053, !11054}
!11050 = !DILocalVariable(name: "tmp", scope: !11048, file: !1804, line: 222, type: !110)
!11051 = !DILocalVariable(name: "pllvco", scope: !11048, file: !1804, line: 222, type: !110)
!11052 = !DILocalVariable(name: "pllp", scope: !11048, file: !1804, line: 222, type: !110)
!11053 = !DILocalVariable(name: "pllsource", scope: !11048, file: !1804, line: 222, type: !110)
!11054 = !DILocalVariable(name: "pllm", scope: !11048, file: !1804, line: 222, type: !110)
!11055 = !DILocation(line: 0, scope: !11048)
!11056 = !DILocation(line: 225, column: 14, scope: !11048)
!11057 = !DILocation(line: 225, column: 19, scope: !11048)
!11058 = !DILocation(line: 227, column: 3, scope: !11048)
!11059 = !DILocation(line: 240, column: 25, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11048, file: !1804, line: 228, column: 3)
!11061 = !DILocation(line: 241, column: 19, scope: !11060)
!11062 = !DILocation(line: 241, column: 27, scope: !11060)
!11063 = !DILocation(line: 0, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11060, file: !1804, line: 243, column: 11)
!11065 = !DILocation(line: 254, column: 22, scope: !11060)
!11066 = !DILocation(line: 254, column: 62, scope: !11060)
!11067 = !DILocation(line: 255, column: 31, scope: !11060)
!11068 = !DILocation(line: 256, column: 7, scope: !11060)
!11069 = !DILocation(line: 0, scope: !11060)
!11070 = !DILocation(line: 263, column: 30, scope: !11048)
!11071 = !DILocation(line: 263, column: 52, scope: !11048)
!11072 = !DILocation(line: 263, column: 9, scope: !11048)
!11073 = !DILocation(line: 265, column: 19, scope: !11048)
!11074 = !DILocation(line: 266, column: 1, scope: !11048)
!11075 = distinct !DISubprogram(name: "HAL_RCC_DeInit", scope: !11076, file: !11076, line: 200, type: !11077, scopeLine: 201, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2026)
!11076 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_hal_rcc.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11077 = !DISubroutineType(types: !11078)
!11078 = !{!11079}
!11079 = !DIDerivedType(tag: DW_TAG_typedef, name: "HAL_StatusTypeDef", file: !2904, line: 44, baseType: !2903)
!11080 = !DILocation(line: 202, column: 3, scope: !11075)
!11081 = distinct !DISubprogram(name: "HAL_RCC_OscConfig", scope: !11076, file: !11076, line: 219, type: !11082, scopeLine: 220, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11107)
!11082 = !DISubroutineType(types: !11083)
!11083 = !{!11079, !11084}
!11084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11085, size: 32)
!11085 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_OscInitTypeDef", file: !11086, line: 70, baseType: !11087)
!11086 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11087 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11086, line: 49, size: 416, elements: !11088)
!11088 = !{!11089, !11090, !11091, !11092, !11093, !11094, !11095}
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "OscillatorType", scope: !11087, file: !11086, line: 51, baseType: !110, size: 32)
!11090 = !DIDerivedType(tag: DW_TAG_member, name: "HSEState", scope: !11087, file: !11086, line: 54, baseType: !110, size: 32, offset: 32)
!11091 = !DIDerivedType(tag: DW_TAG_member, name: "LSEState", scope: !11087, file: !11086, line: 57, baseType: !110, size: 32, offset: 64)
!11092 = !DIDerivedType(tag: DW_TAG_member, name: "HSIState", scope: !11087, file: !11086, line: 60, baseType: !110, size: 32, offset: 96)
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "HSICalibrationValue", scope: !11087, file: !11086, line: 63, baseType: !110, size: 32, offset: 128)
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "LSIState", scope: !11087, file: !11086, line: 66, baseType: !110, size: 32, offset: 160)
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "PLL", scope: !11087, file: !11086, line: 69, baseType: !11096, size: 224, offset: 192)
!11096 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_PLLInitTypeDef", file: !11097, line: 73, baseType: !11098)
!11097 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_rcc_ex.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11097, line: 45, size: 224, elements: !11099)
!11099 = !{!11100, !11101, !11102, !11103, !11104, !11105, !11106}
!11100 = !DIDerivedType(tag: DW_TAG_member, name: "PLLState", scope: !11098, file: !11097, line: 47, baseType: !110, size: 32)
!11101 = !DIDerivedType(tag: DW_TAG_member, name: "PLLSource", scope: !11098, file: !11097, line: 50, baseType: !110, size: 32, offset: 32)
!11102 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11098, file: !11097, line: 53, baseType: !110, size: 32, offset: 64)
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11098, file: !11097, line: 56, baseType: !110, size: 32, offset: 96)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11098, file: !11097, line: 60, baseType: !110, size: 32, offset: 128)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "PLLQ", scope: !11098, file: !11097, line: 63, baseType: !110, size: 32, offset: 160)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "PLLR", scope: !11098, file: !11097, line: 68, baseType: !110, size: 32, offset: 192)
!11107 = !{!11108, !11109, !11110, !11111, !11115}
!11108 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11081, file: !11076, line: 219, type: !11084)
!11109 = !DILocalVariable(name: "tickstart", scope: !11081, file: !11076, line: 221, type: !110)
!11110 = !DILocalVariable(name: "pll_config", scope: !11081, file: !11076, line: 221, type: !110)
!11111 = !DILocalVariable(name: "pwrclkchanged", scope: !11112, file: !11076, line: 391, type: !11114)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !11076, line: 390, column: 3)
!11113 = distinct !DILexicalBlock(scope: !11081, file: !11076, line: 389, column: 6)
!11114 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlagStatus", file: !830, line: 188, baseType: !2910)
!11115 = !DILocalVariable(name: "tmpreg", scope: !11116, file: !11076, line: 400, type: !316)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !11076, line: 400, column: 7)
!11117 = distinct !DILexicalBlock(scope: !11118, file: !11076, line: 399, column: 5)
!11118 = distinct !DILexicalBlock(scope: !11112, file: !11076, line: 398, column: 8)
!11119 = !DILocation(line: 0, scope: !11081)
!11120 = !DILocation(line: 224, column: 24, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11081, file: !11076, line: 224, column: 6)
!11122 = !DILocation(line: 224, column: 6, scope: !11081)
!11123 = !DILocation(line: 232, column: 27, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11081, file: !11076, line: 232, column: 6)
!11125 = !DILocation(line: 232, column: 43, scope: !11124)
!11126 = !DILocation(line: 232, column: 69, scope: !11124)
!11127 = !DILocation(line: 232, column: 6, scope: !11081)
!11128 = !DILocation(line: 237, column: 9, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11130, file: !11076, line: 237, column: 8)
!11130 = distinct !DILexicalBlock(scope: !11124, file: !11076, line: 233, column: 3)
!11131 = !DILocation(line: 237, column: 39, scope: !11129)
!11132 = !DILocation(line: 237, column: 60, scope: !11129)
!11133 = !DILocation(line: 238, column: 9, scope: !11129)
!11134 = !DILocation(line: 238, column: 39, scope: !11129)
!11135 = !DILocation(line: 238, column: 60, scope: !11129)
!11136 = !DILocation(line: 238, column: 70, scope: !11129)
!11137 = !DILocation(line: 238, column: 78, scope: !11129)
!11138 = !DILocation(line: 238, column: 100, scope: !11129)
!11139 = !DILocation(line: 237, column: 8, scope: !11130)
!11140 = !DILocation(line: 240, column: 11, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !11076, line: 240, column: 10)
!11142 = distinct !DILexicalBlock(scope: !11129, file: !11076, line: 239, column: 5)
!11143 = !DILocation(line: 240, column: 57, scope: !11141)
!11144 = !DILocation(line: 240, column: 80, scope: !11141)
!11145 = !DILocation(line: 240, column: 89, scope: !11141)
!11146 = !DILocation(line: 240, column: 10, scope: !11142)
!11147 = !DILocation(line: 248, column: 7, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !11076, line: 248, column: 7)
!11149 = distinct !DILexicalBlock(scope: !11150, file: !11076, line: 248, column: 7)
!11150 = distinct !DILexicalBlock(scope: !11129, file: !11076, line: 246, column: 5)
!11151 = !DILocation(line: 248, column: 7, scope: !11149)
!11152 = !DILocation(line: 248, column: 7, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11148, file: !11076, line: 248, column: 7)
!11154 = !DILocation(line: 248, column: 7, scope: !11155)
!11155 = distinct !DILexicalBlock(scope: !11156, file: !11076, line: 248, column: 7)
!11156 = distinct !DILexicalBlock(scope: !11148, file: !11076, line: 248, column: 7)
!11157 = !DILocation(line: 248, column: 7, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11156, file: !11076, line: 248, column: 7)
!11159 = !DILocation(line: 0, scope: !11148)
!11160 = !DILocation(line: 251, column: 30, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11150, file: !11076, line: 251, column: 10)
!11162 = !DILocation(line: 251, column: 40, scope: !11161)
!11163 = !DILocation(line: 0, scope: !11161)
!11164 = !DILocation(line: 251, column: 10, scope: !11150)
!11165 = !DILocation(line: 257, column: 15, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11161, file: !11076, line: 252, column: 7)
!11167 = !DILocation(line: 257, column: 51, scope: !11166)
!11168 = !DILocation(line: 257, column: 9, scope: !11166)
!11169 = !DILocation(line: 259, column: 15, scope: !11170)
!11170 = distinct !DILexicalBlock(scope: !11171, file: !11076, line: 259, column: 14)
!11171 = distinct !DILexicalBlock(scope: !11166, file: !11076, line: 258, column: 9)
!11172 = !DILocation(line: 259, column: 29, scope: !11170)
!11173 = !DILocation(line: 259, column: 43, scope: !11170)
!11174 = !DILocation(line: 259, column: 14, scope: !11171)
!11175 = distinct !{!11175, !11168, !11176}
!11176 = !DILocation(line: 263, column: 9, scope: !11166)
!11177 = !DILocation(line: 271, column: 15, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11161, file: !11076, line: 266, column: 7)
!11179 = !DILocation(line: 271, column: 9, scope: !11178)
!11180 = !DILocation(line: 273, column: 15, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11182, file: !11076, line: 273, column: 14)
!11182 = distinct !DILexicalBlock(scope: !11178, file: !11076, line: 272, column: 9)
!11183 = !DILocation(line: 273, column: 29, scope: !11181)
!11184 = !DILocation(line: 273, column: 43, scope: !11181)
!11185 = !DILocation(line: 273, column: 14, scope: !11182)
!11186 = distinct !{!11186, !11179, !11187}
!11187 = !DILocation(line: 277, column: 9, scope: !11178)
!11188 = !DILocation(line: 282, column: 27, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11081, file: !11076, line: 282, column: 6)
!11190 = !DILocation(line: 282, column: 43, scope: !11189)
!11191 = !DILocation(line: 282, column: 69, scope: !11189)
!11192 = !DILocation(line: 282, column: 6, scope: !11081)
!11193 = !DILocation(line: 289, column: 9, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11195, file: !11076, line: 289, column: 8)
!11195 = distinct !DILexicalBlock(scope: !11189, file: !11076, line: 283, column: 3)
!11196 = !DILocation(line: 289, column: 39, scope: !11194)
!11197 = !DILocation(line: 289, column: 60, scope: !11194)
!11198 = !DILocation(line: 290, column: 9, scope: !11194)
!11199 = !DILocation(line: 290, column: 39, scope: !11194)
!11200 = !DILocation(line: 290, column: 60, scope: !11194)
!11201 = !DILocation(line: 290, column: 70, scope: !11194)
!11202 = !DILocation(line: 290, column: 78, scope: !11194)
!11203 = !DILocation(line: 290, column: 100, scope: !11194)
!11204 = !DILocation(line: 289, column: 8, scope: !11195)
!11205 = !DILocation(line: 293, column: 11, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11207, file: !11076, line: 293, column: 10)
!11207 = distinct !DILexicalBlock(scope: !11194, file: !11076, line: 291, column: 5)
!11208 = !DILocation(line: 293, column: 57, scope: !11206)
!11209 = !DILocation(line: 293, column: 80, scope: !11206)
!11210 = !DILocation(line: 293, column: 89, scope: !11206)
!11211 = !DILocation(line: 293, column: 10, scope: !11207)
!11212 = !DILocation(line: 307, column: 30, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11214, file: !11076, line: 307, column: 10)
!11214 = distinct !DILexicalBlock(scope: !11194, file: !11076, line: 305, column: 5)
!11215 = !DILocation(line: 307, column: 39, scope: !11213)
!11216 = !DILocation(line: 307, column: 10, scope: !11214)
!11217 = !DILocation(line: 310, column: 9, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11213, file: !11076, line: 308, column: 7)
!11219 = !DILocation(line: 313, column: 21, scope: !11218)
!11220 = !DILocation(line: 316, column: 9, scope: !11218)
!11221 = !DILocation(line: 316, column: 15, scope: !11218)
!11222 = !DILocation(line: 316, column: 51, scope: !11218)
!11223 = !DILocation(line: 318, column: 15, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11225, file: !11076, line: 318, column: 14)
!11225 = distinct !DILexicalBlock(scope: !11218, file: !11076, line: 317, column: 9)
!11226 = !DILocation(line: 318, column: 29, scope: !11224)
!11227 = !DILocation(line: 318, column: 43, scope: !11224)
!11228 = !DILocation(line: 318, column: 14, scope: !11225)
!11229 = distinct !{!11229, !11220, !11230}
!11230 = !DILocation(line: 322, column: 9, scope: !11218)
!11231 = !DILocation(line: 330, column: 9, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11213, file: !11076, line: 328, column: 7)
!11233 = !DILocation(line: 333, column: 21, scope: !11232)
!11234 = !DILocation(line: 336, column: 9, scope: !11232)
!11235 = !DILocation(line: 336, column: 15, scope: !11232)
!11236 = !DILocation(line: 338, column: 15, scope: !11237)
!11237 = distinct !DILexicalBlock(scope: !11238, file: !11076, line: 338, column: 14)
!11238 = distinct !DILexicalBlock(scope: !11232, file: !11076, line: 337, column: 9)
!11239 = !DILocation(line: 338, column: 29, scope: !11237)
!11240 = !DILocation(line: 338, column: 43, scope: !11237)
!11241 = !DILocation(line: 338, column: 14, scope: !11238)
!11242 = distinct !{!11242, !11234, !11243}
!11243 = !DILocation(line: 342, column: 9, scope: !11232)
!11244 = !DILocation(line: 0, scope: !11194)
!11245 = !DILocation(line: 347, column: 27, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11081, file: !11076, line: 347, column: 6)
!11247 = !DILocation(line: 347, column: 43, scope: !11246)
!11248 = !DILocation(line: 347, column: 69, scope: !11246)
!11249 = !DILocation(line: 347, column: 6, scope: !11081)
!11250 = !DILocation(line: 353, column: 28, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11252, file: !11076, line: 353, column: 8)
!11252 = distinct !DILexicalBlock(scope: !11246, file: !11076, line: 348, column: 3)
!11253 = !DILocation(line: 353, column: 37, scope: !11251)
!11254 = !DILocation(line: 353, column: 8, scope: !11252)
!11255 = !DILocation(line: 356, column: 7, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11251, file: !11076, line: 354, column: 5)
!11257 = !DILocation(line: 359, column: 19, scope: !11256)
!11258 = !DILocation(line: 362, column: 7, scope: !11256)
!11259 = !DILocation(line: 362, column: 13, scope: !11256)
!11260 = !DILocation(line: 362, column: 49, scope: !11256)
!11261 = !DILocation(line: 364, column: 13, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11263, file: !11076, line: 364, column: 12)
!11263 = distinct !DILexicalBlock(scope: !11256, file: !11076, line: 363, column: 7)
!11264 = !DILocation(line: 364, column: 27, scope: !11262)
!11265 = !DILocation(line: 364, column: 41, scope: !11262)
!11266 = !DILocation(line: 364, column: 12, scope: !11263)
!11267 = distinct !{!11267, !11258, !11268}
!11268 = !DILocation(line: 368, column: 7, scope: !11256)
!11269 = !DILocation(line: 373, column: 7, scope: !11270)
!11270 = distinct !DILexicalBlock(scope: !11251, file: !11076, line: 371, column: 5)
!11271 = !DILocation(line: 376, column: 19, scope: !11270)
!11272 = !DILocation(line: 379, column: 7, scope: !11270)
!11273 = !DILocation(line: 379, column: 13, scope: !11270)
!11274 = !DILocation(line: 381, column: 13, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11276, file: !11076, line: 381, column: 12)
!11276 = distinct !DILexicalBlock(scope: !11270, file: !11076, line: 380, column: 7)
!11277 = !DILocation(line: 381, column: 27, scope: !11275)
!11278 = !DILocation(line: 381, column: 41, scope: !11275)
!11279 = !DILocation(line: 381, column: 12, scope: !11276)
!11280 = distinct !{!11280, !11272, !11281}
!11281 = !DILocation(line: 385, column: 7, scope: !11270)
!11282 = !DILocation(line: 389, column: 27, scope: !11113)
!11283 = !DILocation(line: 389, column: 43, scope: !11113)
!11284 = !DILocation(line: 389, column: 69, scope: !11113)
!11285 = !DILocation(line: 389, column: 6, scope: !11081)
!11286 = !DILocation(line: 0, scope: !11112)
!11287 = !DILocation(line: 398, column: 8, scope: !11118)
!11288 = !DILocation(line: 398, column: 8, scope: !11112)
!11289 = !DILocation(line: 400, column: 7, scope: !11116)
!11290 = !DILocation(line: 400, column: 7, scope: !11117)
!11291 = !DILocation(line: 402, column: 5, scope: !11117)
!11292 = !DILocation(line: 404, column: 8, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11112, file: !11076, line: 404, column: 8)
!11294 = !DILocation(line: 404, column: 8, scope: !11112)
!11295 = !DILocation(line: 407, column: 7, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11293, file: !11076, line: 405, column: 5)
!11297 = !DILocation(line: 410, column: 19, scope: !11296)
!11298 = !DILocation(line: 412, column: 7, scope: !11296)
!11299 = !DILocation(line: 412, column: 13, scope: !11296)
!11300 = !DILocation(line: 414, column: 13, scope: !11301)
!11301 = distinct !DILexicalBlock(scope: !11302, file: !11076, line: 414, column: 12)
!11302 = distinct !DILexicalBlock(scope: !11296, file: !11076, line: 413, column: 7)
!11303 = !DILocation(line: 414, column: 27, scope: !11301)
!11304 = !DILocation(line: 414, column: 40, scope: !11301)
!11305 = !DILocation(line: 414, column: 12, scope: !11302)
!11306 = distinct !{!11306, !11298, !11307}
!11307 = !DILocation(line: 418, column: 7, scope: !11296)
!11308 = !DILocation(line: 422, column: 5, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11310, file: !11076, line: 422, column: 5)
!11310 = distinct !DILexicalBlock(scope: !11112, file: !11076, line: 422, column: 5)
!11311 = !DILocation(line: 422, column: 5, scope: !11310)
!11312 = !DILocation(line: 422, column: 5, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11309, file: !11076, line: 422, column: 5)
!11314 = !DILocation(line: 422, column: 5, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !11076, line: 422, column: 5)
!11316 = distinct !DILexicalBlock(scope: !11309, file: !11076, line: 422, column: 5)
!11317 = !DILocation(line: 422, column: 5, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11316, file: !11076, line: 422, column: 5)
!11319 = !DILocation(line: 0, scope: !11309)
!11320 = !DILocation(line: 424, column: 28, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11112, file: !11076, line: 424, column: 8)
!11322 = !DILocation(line: 424, column: 38, scope: !11321)
!11323 = !DILocation(line: 0, scope: !11321)
!11324 = !DILocation(line: 424, column: 8, scope: !11112)
!11325 = !DILocation(line: 430, column: 13, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11321, file: !11076, line: 425, column: 5)
!11327 = !DILocation(line: 430, column: 49, scope: !11326)
!11328 = !DILocation(line: 430, column: 7, scope: !11326)
!11329 = !DILocation(line: 432, column: 13, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11331, file: !11076, line: 432, column: 12)
!11331 = distinct !DILexicalBlock(scope: !11326, file: !11076, line: 431, column: 7)
!11332 = !DILocation(line: 432, column: 27, scope: !11330)
!11333 = !DILocation(line: 432, column: 41, scope: !11330)
!11334 = !DILocation(line: 432, column: 12, scope: !11331)
!11335 = distinct !{!11335, !11328, !11336}
!11336 = !DILocation(line: 436, column: 7, scope: !11326)
!11337 = !DILocation(line: 444, column: 13, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11321, file: !11076, line: 439, column: 5)
!11339 = !DILocation(line: 444, column: 7, scope: !11338)
!11340 = !DILocation(line: 446, column: 13, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11342, file: !11076, line: 446, column: 12)
!11342 = distinct !DILexicalBlock(scope: !11338, file: !11076, line: 445, column: 7)
!11343 = !DILocation(line: 446, column: 27, scope: !11341)
!11344 = !DILocation(line: 446, column: 41, scope: !11341)
!11345 = !DILocation(line: 446, column: 12, scope: !11342)
!11346 = distinct !{!11346, !11339, !11347}
!11347 = !DILocation(line: 450, column: 7, scope: !11338)
!11348 = !DILocation(line: 454, column: 8, scope: !11112)
!11349 = !DILocation(line: 456, column: 7, scope: !11350)
!11350 = distinct !DILexicalBlock(scope: !11351, file: !11076, line: 455, column: 5)
!11351 = distinct !DILexicalBlock(scope: !11112, file: !11076, line: 454, column: 8)
!11352 = !DILocation(line: 457, column: 5, scope: !11350)
!11353 = !DILocation(line: 462, column: 31, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11081, file: !11076, line: 462, column: 7)
!11355 = !DILocation(line: 462, column: 41, scope: !11354)
!11356 = !DILocation(line: 462, column: 7, scope: !11081)
!11357 = !DILocation(line: 465, column: 8, scope: !11358)
!11358 = distinct !DILexicalBlock(scope: !11359, file: !11076, line: 465, column: 8)
!11359 = distinct !DILexicalBlock(scope: !11354, file: !11076, line: 463, column: 3)
!11360 = !DILocation(line: 465, column: 38, scope: !11358)
!11361 = !DILocation(line: 465, column: 8, scope: !11359)
!11362 = !DILocation(line: 467, column: 44, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11364, file: !11076, line: 467, column: 10)
!11364 = distinct !DILexicalBlock(scope: !11358, file: !11076, line: 466, column: 5)
!11365 = !DILocation(line: 0, scope: !11363)
!11366 = !DILocation(line: 467, column: 10, scope: !11364)
!11367 = !DILocation(line: 483, column: 15, scope: !11368)
!11368 = distinct !DILexicalBlock(scope: !11363, file: !11076, line: 468, column: 7)
!11369 = !DILocation(line: 483, column: 9, scope: !11368)
!11370 = !DILocation(line: 485, column: 15, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11372, file: !11076, line: 485, column: 14)
!11372 = distinct !DILexicalBlock(scope: !11368, file: !11076, line: 484, column: 9)
!11373 = !DILocation(line: 485, column: 29, scope: !11371)
!11374 = !DILocation(line: 485, column: 43, scope: !11371)
!11375 = !DILocation(line: 485, column: 14, scope: !11372)
!11376 = distinct !{!11376, !11369, !11377}
!11377 = !DILocation(line: 489, column: 9, scope: !11368)
!11378 = !DILocation(line: 492, column: 9, scope: !11368)
!11379 = !DILocation(line: 498, column: 9, scope: !11368)
!11380 = !DILocation(line: 501, column: 21, scope: !11368)
!11381 = !DILocation(line: 504, column: 9, scope: !11368)
!11382 = !DILocation(line: 504, column: 15, scope: !11368)
!11383 = !DILocation(line: 504, column: 51, scope: !11368)
!11384 = !DILocation(line: 506, column: 15, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11386, file: !11076, line: 506, column: 14)
!11386 = distinct !DILexicalBlock(scope: !11368, file: !11076, line: 505, column: 9)
!11387 = !DILocation(line: 506, column: 29, scope: !11385)
!11388 = !DILocation(line: 506, column: 43, scope: !11385)
!11389 = !DILocation(line: 506, column: 14, scope: !11386)
!11390 = distinct !{!11390, !11381, !11391}
!11391 = !DILocation(line: 510, column: 9, scope: !11368)
!11392 = !DILocation(line: 521, column: 15, scope: !11393)
!11393 = distinct !DILexicalBlock(scope: !11363, file: !11076, line: 513, column: 7)
!11394 = !DILocation(line: 521, column: 9, scope: !11393)
!11395 = !DILocation(line: 523, column: 15, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11397, file: !11076, line: 523, column: 14)
!11397 = distinct !DILexicalBlock(scope: !11393, file: !11076, line: 522, column: 9)
!11398 = !DILocation(line: 523, column: 29, scope: !11396)
!11399 = !DILocation(line: 523, column: 43, scope: !11396)
!11400 = !DILocation(line: 523, column: 14, scope: !11397)
!11401 = distinct !{!11401, !11394, !11402}
!11402 = !DILocation(line: 527, column: 9, scope: !11393)
!11403 = !DILocation(line: 533, column: 44, scope: !11404)
!11404 = distinct !DILexicalBlock(scope: !11405, file: !11076, line: 533, column: 10)
!11405 = distinct !DILexicalBlock(scope: !11358, file: !11076, line: 531, column: 5)
!11406 = !DILocation(line: 533, column: 10, scope: !11405)
!11407 = !DILocation(line: 540, column: 27, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11404, file: !11076, line: 538, column: 7)
!11409 = !DILocation(line: 543, column: 14, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11408, file: !11076, line: 542, column: 13)
!11411 = !DILocation(line: 543, column: 81, scope: !11410)
!11412 = !DILocation(line: 543, column: 55, scope: !11410)
!11413 = !DILocation(line: 543, column: 92, scope: !11410)
!11414 = !DILocation(line: 544, column: 14, scope: !11410)
!11415 = !DILocation(line: 544, column: 80, scope: !11410)
!11416 = !DILocation(line: 544, column: 53, scope: !11410)
!11417 = !DILocation(line: 544, column: 111, scope: !11410)
!11418 = !DILocation(line: 545, column: 14, scope: !11410)
!11419 = !DILocation(line: 545, column: 80, scope: !11410)
!11420 = !DILocation(line: 545, column: 86, scope: !11410)
!11421 = !DILocation(line: 545, column: 53, scope: !11410)
!11422 = !DILocation(line: 545, column: 111, scope: !11410)
!11423 = !DILocation(line: 546, column: 14, scope: !11410)
!11424 = !DILocation(line: 546, column: 82, scope: !11410)
!11425 = !DILocation(line: 546, column: 101, scope: !11410)
!11426 = !DILocation(line: 546, column: 53, scope: !11410)
!11427 = !DILocation(line: 546, column: 126, scope: !11410)
!11428 = !DILocation(line: 547, column: 14, scope: !11410)
!11429 = !DILocation(line: 547, column: 80, scope: !11410)
!11430 = !DILocation(line: 547, column: 85, scope: !11410)
!11431 = !DILocation(line: 547, column: 53, scope: !11410)
!11432 = !DILocation(line: 547, column: 111, scope: !11410)
!11433 = !DILocation(line: 548, column: 14, scope: !11410)
!11434 = !DILocation(line: 548, column: 80, scope: !11410)
!11435 = !DILocation(line: 548, column: 85, scope: !11410)
!11436 = !DILocation(line: 548, column: 53, scope: !11410)
!11437 = !DILocation(line: 542, column: 13, scope: !11408)
!11438 = !DILocation(line: 563, column: 3, scope: !11081)
!11439 = !DILocation(line: 564, column: 1, scope: !11081)
!11440 = !DISubprogram(name: "HAL_GetTick", scope: !11441, file: !11441, line: 234, type: !6509, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!11441 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11442 = distinct !DISubprogram(name: "HAL_RCC_ClockConfig", scope: !11076, file: !11076, line: 591, type: !11443, scopeLine: 592, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11454)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{!11079, !11445, !110}
!11445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11446, size: 32)
!11446 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCC_ClkInitTypeDef", file: !11086, line: 92, baseType: !11447)
!11447 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11086, line: 75, size: 160, elements: !11448)
!11448 = !{!11449, !11450, !11451, !11452, !11453}
!11449 = !DIDerivedType(tag: DW_TAG_member, name: "ClockType", scope: !11447, file: !11086, line: 77, baseType: !110, size: 32)
!11450 = !DIDerivedType(tag: DW_TAG_member, name: "SYSCLKSource", scope: !11447, file: !11086, line: 80, baseType: !110, size: 32, offset: 32)
!11451 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11447, file: !11086, line: 83, baseType: !110, size: 32, offset: 64)
!11452 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11447, file: !11086, line: 86, baseType: !110, size: 32, offset: 96)
!11453 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11447, file: !11086, line: 89, baseType: !110, size: 32, offset: 128)
!11454 = !{!11455, !11456, !11457}
!11455 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11442, file: !11076, line: 591, type: !11445)
!11456 = !DILocalVariable(name: "FLatency", arg: 2, scope: !11442, file: !11076, line: 591, type: !110)
!11457 = !DILocalVariable(name: "tickstart", scope: !11442, file: !11076, line: 593, type: !110)
!11458 = !DILocation(line: 0, scope: !11442)
!11459 = !DILocation(line: 596, column: 24, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11442, file: !11076, line: 596, column: 6)
!11461 = !DILocation(line: 596, column: 6, scope: !11442)
!11462 = !DILocation(line: 610, column: 17, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11442, file: !11076, line: 610, column: 6)
!11464 = !DILocation(line: 610, column: 15, scope: !11463)
!11465 = !DILocation(line: 610, column: 6, scope: !11442)
!11466 = !DILocation(line: 613, column: 5, scope: !11467)
!11467 = distinct !DILexicalBlock(scope: !11463, file: !11076, line: 611, column: 3)
!11468 = !DILocation(line: 617, column: 8, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11467, file: !11076, line: 617, column: 8)
!11470 = !DILocation(line: 617, column: 34, scope: !11469)
!11471 = !DILocation(line: 617, column: 8, scope: !11467)
!11472 = !DILocation(line: 624, column: 27, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11442, file: !11076, line: 624, column: 6)
!11474 = !DILocation(line: 624, column: 38, scope: !11473)
!11475 = !DILocation(line: 624, column: 60, scope: !11473)
!11476 = !DILocation(line: 624, column: 6, scope: !11442)
!11477 = !DILocation(line: 628, column: 40, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11479, file: !11076, line: 628, column: 8)
!11479 = distinct !DILexicalBlock(scope: !11473, file: !11076, line: 625, column: 3)
!11480 = !DILocation(line: 628, column: 63, scope: !11478)
!11481 = !DILocation(line: 628, column: 8, scope: !11479)
!11482 = !DILocation(line: 630, column: 7, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11478, file: !11076, line: 629, column: 5)
!11484 = !DILocation(line: 633, column: 29, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11479, file: !11076, line: 633, column: 8)
!11486 = !DILocation(line: 631, column: 5, scope: !11483)
!11487 = !DILocation(line: 633, column: 40, scope: !11485)
!11488 = !DILocation(line: 633, column: 63, scope: !11485)
!11489 = !DILocation(line: 633, column: 8, scope: !11479)
!11490 = !DILocation(line: 635, column: 7, scope: !11491)
!11491 = distinct !DILexicalBlock(scope: !11485, file: !11076, line: 634, column: 5)
!11492 = !DILocation(line: 636, column: 5, scope: !11491)
!11493 = !DILocation(line: 639, column: 5, scope: !11479)
!11494 = !DILocation(line: 643, column: 27, scope: !11495)
!11495 = distinct !DILexicalBlock(scope: !11442, file: !11076, line: 643, column: 6)
!11496 = !DILocation(line: 640, column: 3, scope: !11479)
!11497 = !DILocation(line: 643, column: 38, scope: !11495)
!11498 = !DILocation(line: 643, column: 62, scope: !11495)
!11499 = !DILocation(line: 643, column: 6, scope: !11442)
!11500 = !DILocation(line: 648, column: 27, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !11076, line: 648, column: 8)
!11502 = distinct !DILexicalBlock(scope: !11495, file: !11076, line: 644, column: 3)
!11503 = !DILocation(line: 648, column: 8, scope: !11502)
!11504 = !DILocation(line: 651, column: 10, scope: !11505)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !11076, line: 651, column: 10)
!11506 = distinct !DILexicalBlock(scope: !11501, file: !11076, line: 649, column: 5)
!11507 = !DILocation(line: 651, column: 46, scope: !11505)
!11508 = !DILocation(line: 651, column: 10, scope: !11506)
!11509 = !DILocation(line: 661, column: 10, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !11076, line: 661, column: 10)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !11076, line: 659, column: 5)
!11512 = distinct !DILexicalBlock(scope: !11501, file: !11076, line: 657, column: 13)
!11513 = !DILocation(line: 661, column: 46, scope: !11510)
!11514 = !DILocation(line: 661, column: 10, scope: !11511)
!11515 = !DILocation(line: 670, column: 10, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11517, file: !11076, line: 670, column: 10)
!11517 = distinct !DILexicalBlock(scope: !11512, file: !11076, line: 668, column: 5)
!11518 = !DILocation(line: 670, column: 46, scope: !11516)
!11519 = !DILocation(line: 670, column: 10, scope: !11517)
!11520 = !DILocation(line: 676, column: 5, scope: !11502)
!11521 = !DILocation(line: 679, column: 17, scope: !11502)
!11522 = !DILocation(line: 681, column: 5, scope: !11502)
!11523 = !DILocation(line: 681, column: 12, scope: !11502)
!11524 = !DILocation(line: 681, column: 65, scope: !11502)
!11525 = !DILocation(line: 681, column: 78, scope: !11502)
!11526 = !DILocation(line: 681, column: 42, scope: !11502)
!11527 = !DILocation(line: 683, column: 12, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11529, file: !11076, line: 683, column: 11)
!11529 = distinct !DILexicalBlock(scope: !11502, file: !11076, line: 682, column: 5)
!11530 = !DILocation(line: 683, column: 26, scope: !11528)
!11531 = !DILocation(line: 683, column: 39, scope: !11528)
!11532 = !DILocation(line: 683, column: 11, scope: !11529)
!11533 = distinct !{!11533, !11522, !11534}
!11534 = !DILocation(line: 687, column: 5, scope: !11502)
!11535 = !DILocation(line: 691, column: 17, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11442, file: !11076, line: 691, column: 6)
!11537 = !DILocation(line: 691, column: 15, scope: !11536)
!11538 = !DILocation(line: 691, column: 6, scope: !11442)
!11539 = !DILocation(line: 694, column: 5, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11536, file: !11076, line: 692, column: 3)
!11541 = !DILocation(line: 698, column: 8, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11540, file: !11076, line: 698, column: 8)
!11543 = !DILocation(line: 698, column: 34, scope: !11542)
!11544 = !DILocation(line: 698, column: 8, scope: !11540)
!11545 = !DILocation(line: 705, column: 27, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11442, file: !11076, line: 705, column: 6)
!11547 = !DILocation(line: 705, column: 38, scope: !11546)
!11548 = !DILocation(line: 705, column: 61, scope: !11546)
!11549 = !DILocation(line: 705, column: 6, scope: !11442)
!11550 = !DILocation(line: 708, column: 5, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11546, file: !11076, line: 706, column: 3)
!11552 = !DILocation(line: 712, column: 27, scope: !11553)
!11553 = distinct !DILexicalBlock(scope: !11442, file: !11076, line: 712, column: 6)
!11554 = !DILocation(line: 709, column: 3, scope: !11551)
!11555 = !DILocation(line: 712, column: 38, scope: !11553)
!11556 = !DILocation(line: 712, column: 61, scope: !11553)
!11557 = !DILocation(line: 712, column: 6, scope: !11442)
!11558 = !DILocation(line: 715, column: 5, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11553, file: !11076, line: 713, column: 3)
!11560 = !DILocation(line: 716, column: 3, scope: !11559)
!11561 = !DILocation(line: 719, column: 21, scope: !11442)
!11562 = !DILocation(line: 719, column: 70, scope: !11442)
!11563 = !DILocation(line: 719, column: 91, scope: !11442)
!11564 = !DILocation(line: 719, column: 50, scope: !11442)
!11565 = !DILocation(line: 719, column: 47, scope: !11442)
!11566 = !DILocation(line: 719, column: 19, scope: !11442)
!11567 = !DILocation(line: 722, column: 17, scope: !11442)
!11568 = !DILocation(line: 722, column: 3, scope: !11442)
!11569 = !DILocation(line: 724, column: 3, scope: !11442)
!11570 = !DILocation(line: 725, column: 1, scope: !11442)
!11571 = distinct !DISubprogram(name: "HAL_RCC_GetSysClockFreq", scope: !11076, file: !11076, line: 885, type: !6509, scopeLine: 886, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11572)
!11572 = !{!11573, !11574, !11575, !11576}
!11573 = !DILocalVariable(name: "pllm", scope: !11571, file: !11076, line: 887, type: !110)
!11574 = !DILocalVariable(name: "pllvco", scope: !11571, file: !11076, line: 887, type: !110)
!11575 = !DILocalVariable(name: "pllp", scope: !11571, file: !11076, line: 887, type: !110)
!11576 = !DILocalVariable(name: "sysclockfreq", scope: !11571, file: !11076, line: 888, type: !110)
!11577 = !DILocation(line: 0, scope: !11571)
!11578 = !DILocation(line: 891, column: 16, scope: !11571)
!11579 = !DILocation(line: 891, column: 21, scope: !11571)
!11580 = !DILocation(line: 891, column: 3, scope: !11571)
!11581 = !DILocation(line: 907, column: 19, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11583, file: !11076, line: 904, column: 5)
!11583 = distinct !DILexicalBlock(scope: !11571, file: !11076, line: 892, column: 3)
!11584 = !DILocation(line: 907, column: 27, scope: !11582)
!11585 = !DILocation(line: 908, column: 10, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11582, file: !11076, line: 908, column: 10)
!11587 = !DILocation(line: 0, scope: !11586)
!11588 = !DILocation(line: 918, column: 23, scope: !11582)
!11589 = !DILocation(line: 918, column: 82, scope: !11582)
!11590 = !DILocation(line: 920, column: 28, scope: !11582)
!11591 = !DILocation(line: 921, column: 7, scope: !11582)
!11592 = !DILocation(line: 0, scope: !11583)
!11593 = !DILocation(line: 929, column: 3, scope: !11571)
!11594 = !DISubprogram(name: "HAL_InitTick", scope: !11441, file: !11441, line: 223, type: !11595, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!11595 = !DISubroutineType(types: !11596)
!11596 = !{!11079, !110}
!11597 = distinct !DISubprogram(name: "HAL_RCC_MCOConfig", scope: !11076, file: !11076, line: 775, type: !11598, scopeLine: 776, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11600)
!11598 = !DISubroutineType(types: !11599)
!11599 = !{null, !110, !110, !110}
!11600 = !{!11601, !11602, !11603, !11604, !11614}
!11601 = !DILocalVariable(name: "RCC_MCOx", arg: 1, scope: !11597, file: !11076, line: 775, type: !110)
!11602 = !DILocalVariable(name: "RCC_MCOSource", arg: 2, scope: !11597, file: !11076, line: 775, type: !110)
!11603 = !DILocalVariable(name: "RCC_MCODiv", arg: 3, scope: !11597, file: !11076, line: 775, type: !110)
!11604 = !DILocalVariable(name: "GPIO_InitStruct", scope: !11597, file: !11076, line: 777, type: !11605)
!11605 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_InitTypeDef", file: !11606, line: 62, baseType: !11607)
!11606 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_hal_gpio.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11606, line: 46, size: 160, elements: !11608)
!11608 = !{!11609, !11610, !11611, !11612, !11613}
!11609 = !DIDerivedType(tag: DW_TAG_member, name: "Pin", scope: !11607, file: !11606, line: 48, baseType: !110, size: 32)
!11610 = !DIDerivedType(tag: DW_TAG_member, name: "Mode", scope: !11607, file: !11606, line: 51, baseType: !110, size: 32, offset: 32)
!11611 = !DIDerivedType(tag: DW_TAG_member, name: "Pull", scope: !11607, file: !11606, line: 54, baseType: !110, size: 32, offset: 64)
!11612 = !DIDerivedType(tag: DW_TAG_member, name: "Speed", scope: !11607, file: !11606, line: 57, baseType: !110, size: 32, offset: 96)
!11613 = !DIDerivedType(tag: DW_TAG_member, name: "Alternate", scope: !11607, file: !11606, line: 60, baseType: !110, size: 32, offset: 128)
!11614 = !DILocalVariable(name: "tmpreg", scope: !11615, file: !11076, line: 787, type: !316)
!11615 = distinct !DILexicalBlock(scope: !11616, file: !11076, line: 787, column: 5)
!11616 = distinct !DILexicalBlock(scope: !11617, file: !11076, line: 783, column: 3)
!11617 = distinct !DILexicalBlock(scope: !11597, file: !11076, line: 782, column: 6)
!11618 = !DILocation(line: 0, scope: !11597)
!11619 = !DILocation(line: 777, column: 3, scope: !11597)
!11620 = !DILocation(line: 777, column: 20, scope: !11597)
!11621 = !DILocation(line: 782, column: 15, scope: !11617)
!11622 = !DILocation(line: 782, column: 6, scope: !11597)
!11623 = !DILocation(line: 787, column: 5, scope: !11615)
!11624 = !DILocation(line: 787, column: 5, scope: !11616)
!11625 = !DILocation(line: 790, column: 21, scope: !11616)
!11626 = !DILocation(line: 790, column: 25, scope: !11616)
!11627 = !DILocation(line: 791, column: 21, scope: !11616)
!11628 = !DILocation(line: 791, column: 26, scope: !11616)
!11629 = !DILocation(line: 792, column: 21, scope: !11616)
!11630 = !DILocation(line: 792, column: 27, scope: !11616)
!11631 = !DILocation(line: 793, column: 21, scope: !11616)
!11632 = !DILocation(line: 793, column: 26, scope: !11616)
!11633 = !DILocation(line: 794, column: 21, scope: !11616)
!11634 = !DILocation(line: 794, column: 31, scope: !11616)
!11635 = !DILocation(line: 795, column: 5, scope: !11616)
!11636 = !DILocation(line: 798, column: 5, scope: !11616)
!11637 = !DILocation(line: 804, column: 3, scope: !11616)
!11638 = !DILocation(line: 830, column: 1, scope: !11597)
!11639 = !DISubprogram(name: "HAL_GPIO_Init", scope: !11606, file: !11606, line: 224, type: !11640, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!11640 = !DISubroutineType(types: !11641)
!11641 = !{null, !2972, !11642}
!11642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11605, size: 32)
!11643 = distinct !DISubprogram(name: "HAL_RCC_EnableCSS", scope: !11076, file: !11076, line: 841, type: !3089, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2026)
!11644 = !DILocation(line: 843, column: 38, scope: !11643)
!11645 = !DILocation(line: 844, column: 1, scope: !11643)
!11646 = distinct !DISubprogram(name: "HAL_RCC_DisableCSS", scope: !11076, file: !11076, line: 850, type: !3089, scopeLine: 851, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2026)
!11647 = !DILocation(line: 852, column: 38, scope: !11646)
!11648 = !DILocation(line: 853, column: 1, scope: !11646)
!11649 = distinct !DISubprogram(name: "HAL_RCC_GetHCLKFreq", scope: !11076, file: !11076, line: 941, type: !6509, scopeLine: 942, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2026)
!11650 = !DILocation(line: 943, column: 10, scope: !11649)
!11651 = !DILocation(line: 943, column: 3, scope: !11649)
!11652 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK1Freq", scope: !11076, file: !11076, line: 952, type: !6509, scopeLine: 953, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2026)
!11653 = !DILocation(line: 955, column: 11, scope: !11652)
!11654 = !DILocation(line: 955, column: 56, scope: !11652)
!11655 = !DILocation(line: 955, column: 78, scope: !11652)
!11656 = !DILocation(line: 955, column: 36, scope: !11652)
!11657 = !DILocation(line: 955, column: 33, scope: !11652)
!11658 = !DILocation(line: 955, column: 3, scope: !11652)
!11659 = distinct !DISubprogram(name: "HAL_RCC_GetPCLK2Freq", scope: !11076, file: !11076, line: 964, type: !6509, scopeLine: 965, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2026)
!11660 = !DILocation(line: 967, column: 11, scope: !11659)
!11661 = !DILocation(line: 967, column: 55, scope: !11659)
!11662 = !DILocation(line: 967, column: 77, scope: !11659)
!11663 = !DILocation(line: 967, column: 35, scope: !11659)
!11664 = !DILocation(line: 967, column: 32, scope: !11659)
!11665 = !DILocation(line: 967, column: 3, scope: !11659)
!11666 = distinct !DISubprogram(name: "HAL_RCC_GetOscConfig", scope: !11076, file: !11076, line: 977, type: !11667, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11669)
!11667 = !DISubroutineType(types: !11668)
!11668 = !{null, !11084}
!11669 = !{!11670}
!11670 = !DILocalVariable(name: "RCC_OscInitStruct", arg: 1, scope: !11666, file: !11076, line: 977, type: !11084)
!11671 = !DILocation(line: 0, scope: !11666)
!11672 = !DILocation(line: 980, column: 22, scope: !11666)
!11673 = !DILocation(line: 980, column: 37, scope: !11666)
!11674 = !DILocation(line: 983, column: 12, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11666, file: !11076, line: 983, column: 6)
!11676 = !DILocation(line: 983, column: 15, scope: !11675)
!11677 = !DILocation(line: 983, column: 31, scope: !11675)
!11678 = !DILocation(line: 983, column: 6, scope: !11666)
!11679 = !DILocation(line: 985, column: 24, scope: !11680)
!11680 = distinct !DILexicalBlock(scope: !11675, file: !11076, line: 984, column: 3)
!11681 = !DILocation(line: 985, column: 33, scope: !11680)
!11682 = !DILocation(line: 986, column: 3, scope: !11680)
!11683 = !DILocation(line: 987, column: 17, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11675, file: !11076, line: 987, column: 11)
!11685 = !DILocation(line: 987, column: 20, scope: !11684)
!11686 = !DILocation(line: 987, column: 35, scope: !11684)
!11687 = !DILocation(line: 0, scope: !11684)
!11688 = !DILocation(line: 987, column: 11, scope: !11675)
!11689 = !DILocation(line: 989, column: 33, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11684, file: !11076, line: 988, column: 3)
!11691 = !DILocation(line: 990, column: 3, scope: !11690)
!11692 = !DILocation(line: 993, column: 33, scope: !11693)
!11693 = distinct !DILexicalBlock(scope: !11684, file: !11076, line: 992, column: 3)
!11694 = !DILocation(line: 997, column: 12, scope: !11695)
!11695 = distinct !DILexicalBlock(scope: !11666, file: !11076, line: 997, column: 6)
!11696 = !DILocation(line: 997, column: 15, scope: !11695)
!11697 = !DILocation(line: 1003, column: 24, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11695, file: !11076, line: 1002, column: 3)
!11699 = !DILocation(line: 1003, column: 33, scope: !11698)
!11700 = !DILocation(line: 1006, column: 61, scope: !11666)
!11701 = !DILocation(line: 1006, column: 81, scope: !11666)
!11702 = !DILocation(line: 1006, column: 22, scope: !11666)
!11703 = !DILocation(line: 1006, column: 42, scope: !11666)
!11704 = !DILocation(line: 1009, column: 12, scope: !11705)
!11705 = distinct !DILexicalBlock(scope: !11666, file: !11076, line: 1009, column: 6)
!11706 = !DILocation(line: 1009, column: 17, scope: !11705)
!11707 = !DILocation(line: 1009, column: 35, scope: !11705)
!11708 = !DILocation(line: 1009, column: 6, scope: !11666)
!11709 = !DILocation(line: 1011, column: 24, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11705, file: !11076, line: 1010, column: 3)
!11711 = !DILocation(line: 1011, column: 33, scope: !11710)
!11712 = !DILocation(line: 1012, column: 3, scope: !11710)
!11713 = !DILocation(line: 1013, column: 17, scope: !11714)
!11714 = distinct !DILexicalBlock(scope: !11705, file: !11076, line: 1013, column: 11)
!11715 = !DILocation(line: 1013, column: 22, scope: !11714)
!11716 = !DILocation(line: 1013, column: 39, scope: !11714)
!11717 = !DILocation(line: 0, scope: !11714)
!11718 = !DILocation(line: 1013, column: 11, scope: !11705)
!11719 = !DILocation(line: 1015, column: 33, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11714, file: !11076, line: 1014, column: 3)
!11721 = !DILocation(line: 1016, column: 3, scope: !11720)
!11722 = !DILocation(line: 1019, column: 33, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11714, file: !11076, line: 1018, column: 3)
!11724 = !DILocation(line: 1023, column: 12, scope: !11725)
!11725 = distinct !DILexicalBlock(scope: !11666, file: !11076, line: 1023, column: 6)
!11726 = !DILocation(line: 1023, column: 16, scope: !11725)
!11727 = !DILocation(line: 1029, column: 24, scope: !11728)
!11728 = distinct !DILexicalBlock(scope: !11725, file: !11076, line: 1028, column: 3)
!11729 = !DILocation(line: 1029, column: 33, scope: !11728)
!11730 = !DILocation(line: 1033, column: 12, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11666, file: !11076, line: 1033, column: 6)
!11732 = !DILocation(line: 1033, column: 15, scope: !11731)
!11733 = !DILocation(line: 1033, column: 30, scope: !11731)
!11734 = !DILocation(line: 1033, column: 6, scope: !11666)
!11735 = !DILocation(line: 1039, column: 28, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11731, file: !11076, line: 1038, column: 3)
!11737 = !DILocation(line: 1039, column: 37, scope: !11736)
!11738 = !DILocation(line: 1041, column: 54, scope: !11666)
!11739 = !DILocation(line: 1041, column: 62, scope: !11666)
!11740 = !DILocation(line: 1041, column: 26, scope: !11666)
!11741 = !DILocation(line: 1041, column: 36, scope: !11666)
!11742 = !DILocation(line: 1042, column: 49, scope: !11666)
!11743 = !DILocation(line: 1042, column: 57, scope: !11666)
!11744 = !DILocation(line: 1042, column: 26, scope: !11666)
!11745 = !DILocation(line: 1042, column: 31, scope: !11666)
!11746 = !DILocation(line: 1043, column: 50, scope: !11666)
!11747 = !DILocation(line: 1043, column: 78, scope: !11666)
!11748 = !DILocation(line: 1043, column: 26, scope: !11666)
!11749 = !DILocation(line: 1043, column: 31, scope: !11666)
!11750 = !DILocation(line: 1044, column: 52, scope: !11666)
!11751 = !DILocation(line: 1044, column: 102, scope: !11666)
!11752 = !DILocation(line: 1044, column: 109, scope: !11666)
!11753 = !DILocation(line: 1044, column: 26, scope: !11666)
!11754 = !DILocation(line: 1044, column: 31, scope: !11666)
!11755 = !DILocation(line: 1045, column: 50, scope: !11666)
!11756 = !DILocation(line: 1045, column: 78, scope: !11666)
!11757 = !DILocation(line: 1045, column: 26, scope: !11666)
!11758 = !DILocation(line: 1045, column: 31, scope: !11666)
!11759 = !DILocation(line: 1046, column: 1, scope: !11666)
!11760 = distinct !DISubprogram(name: "HAL_RCC_GetClockConfig", scope: !11076, file: !11076, line: 1056, type: !11761, scopeLine: 1057, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !11763)
!11761 = !DISubroutineType(types: !11762)
!11762 = !{null, !11445, !884}
!11763 = !{!11764, !11765}
!11764 = !DILocalVariable(name: "RCC_ClkInitStruct", arg: 1, scope: !11760, file: !11076, line: 1056, type: !11445)
!11765 = !DILocalVariable(name: "pFLatency", arg: 2, scope: !11760, file: !11076, line: 1056, type: !884)
!11766 = !DILocation(line: 0, scope: !11760)
!11767 = !DILocation(line: 1059, column: 22, scope: !11760)
!11768 = !DILocation(line: 1059, column: 32, scope: !11760)
!11769 = !DILocation(line: 1062, column: 53, scope: !11760)
!11770 = !DILocation(line: 1062, column: 58, scope: !11760)
!11771 = !DILocation(line: 1062, column: 22, scope: !11760)
!11772 = !DILocation(line: 1062, column: 35, scope: !11760)
!11773 = !DILocation(line: 1065, column: 54, scope: !11760)
!11774 = !DILocation(line: 1065, column: 59, scope: !11760)
!11775 = !DILocation(line: 1065, column: 22, scope: !11760)
!11776 = !DILocation(line: 1065, column: 36, scope: !11760)
!11777 = !DILocation(line: 1068, column: 55, scope: !11760)
!11778 = !DILocation(line: 1068, column: 60, scope: !11760)
!11779 = !DILocation(line: 1068, column: 22, scope: !11760)
!11780 = !DILocation(line: 1068, column: 37, scope: !11760)
!11781 = !DILocation(line: 1071, column: 56, scope: !11760)
!11782 = !DILocation(line: 1071, column: 79, scope: !11760)
!11783 = !DILocation(line: 1071, column: 22, scope: !11760)
!11784 = !DILocation(line: 1071, column: 37, scope: !11760)
!11785 = !DILocation(line: 1074, column: 34, scope: !11760)
!11786 = !DILocation(line: 1074, column: 38, scope: !11760)
!11787 = !DILocation(line: 1074, column: 14, scope: !11760)
!11788 = !DILocation(line: 1075, column: 1, scope: !11760)
!11789 = distinct !DISubprogram(name: "HAL_RCC_NMI_IRQHandler", scope: !11076, file: !11076, line: 1082, type: !3089, scopeLine: 1083, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2026)
!11790 = !DILocation(line: 1085, column: 6, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11789, file: !11076, line: 1085, column: 6)
!11792 = !DILocation(line: 1085, column: 6, scope: !11789)
!11793 = !DILocation(line: 1088, column: 5, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11791, file: !11076, line: 1086, column: 3)
!11795 = !DILocation(line: 1091, column: 5, scope: !11794)
!11796 = !DILocation(line: 1092, column: 3, scope: !11794)
!11797 = !DILocation(line: 1093, column: 1, scope: !11789)
!11798 = distinct !DISubprogram(name: "HAL_RCC_CSSCallback", scope: !11076, file: !11076, line: 1099, type: !3089, scopeLine: 1100, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2900, retainedNodes: !2026)
!11799 = !DILocation(line: 1104, column: 1, scope: !11798)
!11800 = distinct !DISubprogram(name: "LL_Init1msTick", scope: !11801, file: !11801, line: 257, type: !6519, scopeLine: 258, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11802)
!11801 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/src/stm32f4xx_ll_utils.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11802 = !{!11803}
!11803 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11800, file: !11801, line: 257, type: !110)
!11804 = !DILocation(line: 0, scope: !11800)
!11805 = !DILocation(line: 260, column: 3, scope: !11800)
!11806 = !DILocation(line: 261, column: 1, scope: !11800)
!11807 = distinct !DISubprogram(name: "LL_InitTick", scope: !11808, file: !11808, line: 260, type: !9435, scopeLine: 261, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11809)
!11808 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_utils.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11809 = !{!11810, !11811}
!11810 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11807, file: !11808, line: 260, type: !110)
!11811 = !DILocalVariable(name: "Ticks", arg: 2, scope: !11807, file: !11808, line: 260, type: !110)
!11812 = !DILocation(line: 0, scope: !11807)
!11813 = !DILocation(line: 263, column: 46, scope: !11807)
!11814 = !DILocation(line: 263, column: 55, scope: !11807)
!11815 = !DILocation(line: 263, column: 18, scope: !11807)
!11816 = !DILocation(line: 264, column: 18, scope: !11807)
!11817 = !DILocation(line: 265, column: 18, scope: !11807)
!11818 = !DILocation(line: 267, column: 1, scope: !11807)
!11819 = distinct !DISubprogram(name: "LL_mDelay", scope: !11801, file: !11801, line: 273, type: !6519, scopeLine: 274, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11820)
!11820 = !{!11821, !11822}
!11821 = !DILocalVariable(name: "Delay", arg: 1, scope: !11819, file: !11801, line: 273, type: !110)
!11822 = !DILocalVariable(name: "tmp", scope: !11819, file: !11801, line: 275, type: !316)
!11823 = !DILocation(line: 0, scope: !11819)
!11824 = !DILocation(line: 275, column: 3, scope: !11819)
!11825 = !DILocation(line: 275, column: 18, scope: !11819)
!11826 = !DILocation(line: 275, column: 33, scope: !11819)
!11827 = !DILocation(line: 277, column: 10, scope: !11819)
!11828 = !DILocation(line: 280, column: 12, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11819, file: !11801, line: 280, column: 6)
!11830 = !DILocation(line: 285, column: 3, scope: !11819)
!11831 = !DILocation(line: 287, column: 18, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11833, file: !11801, line: 287, column: 8)
!11833 = distinct !DILexicalBlock(scope: !11819, file: !11801, line: 286, column: 3)
!11834 = !DILocation(line: 292, column: 1, scope: !11819)
!11835 = distinct !DISubprogram(name: "LL_SetSystemCoreClock", scope: !11801, file: !11801, line: 323, type: !6519, scopeLine: 324, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11836)
!11836 = !{!11837}
!11837 = !DILocalVariable(name: "HCLKFrequency", arg: 1, scope: !11835, file: !11801, line: 323, type: !110)
!11838 = !DILocation(line: 0, scope: !11835)
!11839 = !DILocation(line: 326, column: 19, scope: !11835)
!11840 = !DILocation(line: 327, column: 1, scope: !11835)
!11841 = distinct !DISubprogram(name: "LL_SetFlashLatency", scope: !11801, file: !11801, line: 338, type: !11842, scopeLine: 339, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11845)
!11842 = !DISubroutineType(types: !11843)
!11843 = !{!11844, !110}
!11844 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorStatus", file: !830, line: 201, baseType: !829)
!11845 = !{!11846, !11847, !11848, !11849, !11850}
!11846 = !DILocalVariable(name: "HCLK_Frequency", arg: 1, scope: !11841, file: !11801, line: 338, type: !110)
!11847 = !DILocalVariable(name: "timeout", scope: !11841, file: !11801, line: 340, type: !110)
!11848 = !DILocalVariable(name: "getlatency", scope: !11841, file: !11801, line: 341, type: !110)
!11849 = !DILocalVariable(name: "latency", scope: !11841, file: !11801, line: 342, type: !110)
!11850 = !DILocalVariable(name: "status", scope: !11841, file: !11801, line: 343, type: !11844)
!11851 = !DILocation(line: 0, scope: !11841)
!11852 = !DILocation(line: 347, column: 21, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11841, file: !11801, line: 347, column: 6)
!11854 = !DILocation(line: 347, column: 6, scope: !11841)
!11855 = !DILocation(line: 353, column: 8, scope: !11856)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !11801, line: 353, column: 8)
!11857 = distinct !DILexicalBlock(scope: !11853, file: !11801, line: 352, column: 3)
!11858 = !DILocation(line: 353, column: 40, scope: !11856)
!11859 = !DILocation(line: 353, column: 8, scope: !11857)
!11860 = !DILocation(line: 374, column: 55, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11862, file: !11801, line: 374, column: 10)
!11862 = distinct !DILexicalBlock(scope: !11856, file: !11801, line: 354, column: 5)
!11863 = !DILocation(line: 368, column: 26, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11862, file: !11801, line: 368, column: 10)
!11865 = !DILocation(line: 368, column: 55, scope: !11864)
!11866 = !DILocation(line: 380, column: 57, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11868, file: !11801, line: 380, column: 12)
!11868 = distinct !DILexicalBlock(scope: !11861, file: !11801, line: 379, column: 7)
!11869 = !DILocation(line: 387, column: 8, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11857, file: !11801, line: 387, column: 8)
!11871 = !DILocation(line: 387, column: 40, scope: !11870)
!11872 = !DILocation(line: 387, column: 8, scope: !11857)
!11873 = !DILocation(line: 407, column: 26, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !11801, line: 407, column: 10)
!11875 = distinct !DILexicalBlock(scope: !11870, file: !11801, line: 388, column: 5)
!11876 = !DILocation(line: 407, column: 55, scope: !11874)
!11877 = !DILocation(line: 413, column: 28, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11879, file: !11801, line: 413, column: 12)
!11879 = distinct !DILexicalBlock(scope: !11874, file: !11801, line: 412, column: 7)
!11880 = !DILocation(line: 413, column: 57, scope: !11878)
!11881 = !DILocation(line: 0, scope: !11857)
!11882 = !DILocation(line: 420, column: 8, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11857, file: !11801, line: 420, column: 8)
!11884 = !DILocation(line: 420, column: 40, scope: !11883)
!11885 = !DILocation(line: 420, column: 8, scope: !11857)
!11886 = !DILocation(line: 429, column: 26, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11888, file: !11801, line: 429, column: 10)
!11888 = distinct !DILexicalBlock(scope: !11883, file: !11801, line: 421, column: 5)
!11889 = !DILocation(line: 429, column: 55, scope: !11887)
!11890 = !DILocation(line: 435, column: 28, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11892, file: !11801, line: 435, column: 12)
!11892 = distinct !DILexicalBlock(scope: !11887, file: !11801, line: 434, column: 7)
!11893 = !DILocation(line: 435, column: 57, scope: !11891)
!11894 = !DILocation(line: 444, column: 5, scope: !11857)
!11895 = !DILocation(line: 448, column: 5, scope: !11857)
!11896 = !DILocation(line: 451, column: 18, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11857, file: !11801, line: 449, column: 5)
!11898 = !DILocation(line: 452, column: 12, scope: !11897)
!11899 = !DILocation(line: 453, column: 26, scope: !11857)
!11900 = !DILocation(line: 453, column: 38, scope: !11857)
!11901 = !DILocation(line: 453, column: 5, scope: !11897)
!11902 = distinct !{!11902, !11895, !11903}
!11903 = !DILocation(line: 453, column: 54, scope: !11857)
!11904 = !DILocation(line: 0, scope: !11853)
!11905 = !DILocation(line: 464, column: 3, scope: !11841)
!11906 = distinct !DISubprogram(name: "LL_PWR_GetRegulVoltageScaling", scope: !11907, file: !11907, line: 519, type: !6509, scopeLine: 520, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!11907 = !DIFile(filename: "modules/hal/stm32/stm32cube/stm32f4xx/drivers/include/stm32f4xx_ll_pwr.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!11908 = !DILocation(line: 521, column: 21, scope: !11906)
!11909 = !DILocation(line: 521, column: 3, scope: !11906)
!11910 = distinct !DISubprogram(name: "LL_FLASH_SetLatency", scope: !6122, file: !6122, line: 1543, type: !6519, scopeLine: 1544, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11911)
!11911 = !{!11912}
!11912 = !DILocalVariable(name: "Latency", arg: 1, scope: !11910, file: !6122, line: 1543, type: !110)
!11913 = !DILocation(line: 0, scope: !11910)
!11914 = !DILocation(line: 1545, column: 3, scope: !11910)
!11915 = !DILocation(line: 1546, column: 1, scope: !11910)
!11916 = distinct !DISubprogram(name: "LL_FLASH_GetLatency", scope: !6122, file: !6122, line: 1569, type: !6509, scopeLine: 1570, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!11917 = !DILocation(line: 1571, column: 21, scope: !11916)
!11918 = !DILocation(line: 1571, column: 3, scope: !11916)
!11919 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSI", scope: !11801, file: !11801, line: 483, type: !11920, scopeLine: 485, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11936)
!11920 = !DISubroutineType(types: !11921)
!11921 = !{!11844, !11922, !11929}
!11922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11923, size: 32)
!11923 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_PLLInitTypeDef", file: !11808, line: 114, baseType: !11924)
!11924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11808, line: 94, size: 96, elements: !11925)
!11925 = !{!11926, !11927, !11928}
!11926 = !DIDerivedType(tag: DW_TAG_member, name: "PLLM", scope: !11924, file: !11808, line: 96, baseType: !110, size: 32)
!11927 = !DIDerivedType(tag: DW_TAG_member, name: "PLLN", scope: !11924, file: !11808, line: 102, baseType: !110, size: 32, offset: 32)
!11928 = !DIDerivedType(tag: DW_TAG_member, name: "PLLP", scope: !11924, file: !11808, line: 109, baseType: !110, size: 32, offset: 64)
!11929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11930, size: 32)
!11930 = !DIDerivedType(tag: DW_TAG_typedef, name: "LL_UTILS_ClkInitTypeDef", file: !11808, line: 139, baseType: !11931)
!11931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !11808, line: 119, size: 96, elements: !11932)
!11932 = !{!11933, !11934, !11935}
!11933 = !DIDerivedType(tag: DW_TAG_member, name: "AHBCLKDivider", scope: !11931, file: !11808, line: 121, baseType: !110, size: 32)
!11934 = !DIDerivedType(tag: DW_TAG_member, name: "APB1CLKDivider", scope: !11931, file: !11808, line: 127, baseType: !110, size: 32, offset: 32)
!11935 = !DIDerivedType(tag: DW_TAG_member, name: "APB2CLKDivider", scope: !11931, file: !11808, line: 133, baseType: !110, size: 32, offset: 64)
!11936 = !{!11937, !11938, !11939, !11940}
!11937 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 1, scope: !11919, file: !11801, line: 483, type: !11922)
!11938 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !11919, file: !11801, line: 484, type: !11929)
!11939 = !DILocalVariable(name: "status", scope: !11919, file: !11801, line: 486, type: !11844)
!11940 = !DILocalVariable(name: "pllfreq", scope: !11919, file: !11801, line: 487, type: !110)
!11941 = !DILocation(line: 0, scope: !11919)
!11942 = !DILocation(line: 490, column: 6, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11919, file: !11801, line: 490, column: 6)
!11944 = !DILocation(line: 490, column: 25, scope: !11943)
!11945 = !DILocation(line: 490, column: 6, scope: !11919)
!11946 = !DILocation(line: 493, column: 15, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11943, file: !11801, line: 491, column: 3)
!11948 = !DILocation(line: 496, column: 8, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11947, file: !11801, line: 496, column: 8)
!11950 = !DILocation(line: 496, column: 29, scope: !11949)
!11951 = !DILocation(line: 496, column: 8, scope: !11947)
!11952 = !DILocation(line: 498, column: 7, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11949, file: !11801, line: 497, column: 5)
!11954 = !DILocation(line: 499, column: 7, scope: !11953)
!11955 = !DILocation(line: 499, column: 14, scope: !11953)
!11956 = !DILocation(line: 499, column: 35, scope: !11953)
!11957 = distinct !{!11957, !11954, !11958}
!11958 = !DILocation(line: 502, column: 7, scope: !11953)
!11959 = !DILocation(line: 506, column: 76, scope: !11947)
!11960 = !DILocation(line: 506, column: 103, scope: !11947)
!11961 = !DILocation(line: 507, column: 54, scope: !11947)
!11962 = !DILocation(line: 506, column: 5, scope: !11947)
!11963 = !DILocation(line: 510, column: 14, scope: !11947)
!11964 = !DILocation(line: 511, column: 3, scope: !11947)
!11965 = !DILocation(line: 0, scope: !11943)
!11966 = !DILocation(line: 518, column: 3, scope: !11919)
!11967 = distinct !DISubprogram(name: "UTILS_PLL_IsBusy", scope: !11801, file: !11801, line: 642, type: !11968, scopeLine: 643, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11970)
!11968 = !DISubroutineType(types: !11969)
!11969 = !{!11844}
!11970 = !{!11971}
!11971 = !DILocalVariable(name: "status", scope: !11967, file: !11801, line: 644, type: !11844)
!11972 = !DILocation(line: 0, scope: !11967)
!11973 = !DILocation(line: 647, column: 6, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11967, file: !11801, line: 647, column: 6)
!11975 = !DILocation(line: 647, column: 27, scope: !11974)
!11976 = !DILocation(line: 663, column: 6, scope: !11977)
!11977 = distinct !DILexicalBlock(scope: !11967, file: !11801, line: 663, column: 6)
!11978 = !DILocation(line: 663, column: 30, scope: !11977)
!11979 = !DILocation(line: 663, column: 6, scope: !11967)
!11980 = !DILocation(line: 669, column: 3, scope: !11967)
!11981 = distinct !DISubprogram(name: "UTILS_GetPLLOutputFrequency", scope: !11801, file: !11801, line: 611, type: !11982, scopeLine: 612, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !11984)
!11982 = !DISubroutineType(types: !11983)
!11983 = !{!110, !110, !11922}
!11984 = !{!11985, !11986, !11987}
!11985 = !DILocalVariable(name: "PLL_InputFrequency", arg: 1, scope: !11981, file: !11801, line: 611, type: !110)
!11986 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 2, scope: !11981, file: !11801, line: 611, type: !11922)
!11987 = !DILocalVariable(name: "pllfreq", scope: !11981, file: !11801, line: 613, type: !110)
!11988 = !DILocation(line: 0, scope: !11981)
!11989 = !DILocation(line: 622, column: 56, scope: !11981)
!11990 = !DILocation(line: 622, column: 61, scope: !11981)
!11991 = !DILocation(line: 622, column: 32, scope: !11981)
!11992 = !DILocation(line: 626, column: 45, scope: !11981)
!11993 = !DILocation(line: 626, column: 50, scope: !11981)
!11994 = !DILocation(line: 626, column: 21, scope: !11981)
!11995 = !DILocation(line: 630, column: 47, scope: !11981)
!11996 = !DILocation(line: 630, column: 82, scope: !11981)
!11997 = !DILocation(line: 630, column: 21, scope: !11981)
!11998 = !DILocation(line: 633, column: 3, scope: !11981)
!11999 = distinct !DISubprogram(name: "LL_RCC_HSI_IsReady", scope: !8761, file: !8761, line: 3007, type: !6509, scopeLine: 3008, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12000 = !DILocation(line: 3009, column: 11, scope: !11999)
!12001 = !DILocation(line: 3009, column: 44, scope: !11999)
!12002 = !DILocation(line: 3009, column: 3, scope: !11999)
!12003 = distinct !DISubprogram(name: "LL_RCC_HSI_Enable", scope: !8761, file: !8761, line: 2987, type: !3089, scopeLine: 2988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12004 = !DILocation(line: 2989, column: 3, scope: !12003)
!12005 = !DILocation(line: 2990, column: 1, scope: !12003)
!12006 = distinct !DISubprogram(name: "LL_RCC_PLL_ConfigDomain_SYS", scope: !8761, file: !8761, line: 4304, type: !8895, scopeLine: 4305, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12007)
!12007 = !{!12008, !12009, !12010, !12011}
!12008 = !DILocalVariable(name: "Source", arg: 1, scope: !12006, file: !8761, line: 4304, type: !110)
!12009 = !DILocalVariable(name: "PLLM", arg: 2, scope: !12006, file: !8761, line: 4304, type: !110)
!12010 = !DILocalVariable(name: "PLLN", arg: 3, scope: !12006, file: !8761, line: 4304, type: !110)
!12011 = !DILocalVariable(name: "PLLP_R", arg: 4, scope: !12006, file: !8761, line: 4304, type: !110)
!12012 = !DILocation(line: 0, scope: !12006)
!12013 = !DILocation(line: 4306, column: 3, scope: !12006)
!12014 = !DILocation(line: 4308, column: 3, scope: !12006)
!12015 = !DILocation(line: 4312, column: 1, scope: !12006)
!12016 = distinct !DISubprogram(name: "UTILS_EnablePLLAndSwitchSystem", scope: !11801, file: !11801, line: 681, type: !12017, scopeLine: 682, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12019)
!12017 = !DISubroutineType(types: !12018)
!12018 = !{!11844, !110, !11929}
!12019 = !{!12020, !12021, !12022, !12023}
!12020 = !DILocalVariable(name: "SYSCLK_Frequency", arg: 1, scope: !12016, file: !11801, line: 681, type: !110)
!12021 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 2, scope: !12016, file: !11801, line: 681, type: !11929)
!12022 = !DILocalVariable(name: "status", scope: !12016, file: !11801, line: 683, type: !11844)
!12023 = !DILocalVariable(name: "hclk_frequency", scope: !12016, file: !11801, line: 684, type: !110)
!12024 = !DILocation(line: 0, scope: !12016)
!12025 = !DILocation(line: 691, column: 20, scope: !12016)
!12026 = !DILocation(line: 694, column: 6, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !12016, file: !11801, line: 694, column: 6)
!12028 = !DILocation(line: 694, column: 22, scope: !12027)
!12029 = !DILocation(line: 694, column: 6, scope: !12016)
!12030 = !DILocation(line: 697, column: 14, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12027, file: !11801, line: 695, column: 3)
!12032 = !DILocation(line: 701, column: 13, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12016, file: !11801, line: 701, column: 6)
!12034 = !DILocation(line: 701, column: 6, scope: !12016)
!12035 = !DILocation(line: 704, column: 5, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12033, file: !11801, line: 702, column: 3)
!12037 = !DILocation(line: 705, column: 5, scope: !12036)
!12038 = !DILocation(line: 705, column: 12, scope: !12036)
!12039 = !DILocation(line: 705, column: 33, scope: !12036)
!12040 = distinct !{!12040, !12037, !12041}
!12041 = !DILocation(line: 708, column: 5, scope: !12036)
!12042 = !DILocation(line: 711, column: 49, scope: !12036)
!12043 = !DILocation(line: 711, column: 5, scope: !12036)
!12044 = !DILocation(line: 712, column: 5, scope: !12036)
!12045 = !DILocation(line: 713, column: 5, scope: !12036)
!12046 = !DILocation(line: 713, column: 12, scope: !12036)
!12047 = !DILocation(line: 713, column: 37, scope: !12036)
!12048 = distinct !{!12048, !12045, !12049}
!12049 = !DILocation(line: 716, column: 5, scope: !12036)
!12050 = !DILocation(line: 719, column: 50, scope: !12036)
!12051 = !DILocation(line: 719, column: 5, scope: !12036)
!12052 = !DILocation(line: 720, column: 50, scope: !12036)
!12053 = !DILocation(line: 720, column: 5, scope: !12036)
!12054 = !DILocation(line: 721, column: 3, scope: !12036)
!12055 = !DILocation(line: 724, column: 6, scope: !12056)
!12056 = distinct !DILexicalBlock(scope: !12016, file: !11801, line: 724, column: 6)
!12057 = !DILocation(line: 724, column: 22, scope: !12056)
!12058 = !DILocation(line: 724, column: 6, scope: !12016)
!12059 = !DILocation(line: 727, column: 14, scope: !12060)
!12060 = distinct !DILexicalBlock(scope: !12056, file: !11801, line: 725, column: 3)
!12061 = !DILocation(line: 728, column: 3, scope: !12060)
!12062 = !DILocation(line: 731, column: 13, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12016, file: !11801, line: 731, column: 6)
!12064 = !DILocation(line: 731, column: 6, scope: !12016)
!12065 = !DILocation(line: 733, column: 5, scope: !12066)
!12066 = distinct !DILexicalBlock(scope: !12063, file: !11801, line: 732, column: 3)
!12067 = !DILocation(line: 734, column: 3, scope: !12066)
!12068 = !DILocation(line: 736, column: 3, scope: !12016)
!12069 = distinct !DISubprogram(name: "LL_RCC_PLL_Enable", scope: !8761, file: !8761, line: 4184, type: !3089, scopeLine: 4185, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12070 = !DILocation(line: 4186, column: 3, scope: !12069)
!12071 = !DILocation(line: 4187, column: 1, scope: !12069)
!12072 = distinct !DISubprogram(name: "LL_RCC_PLL_IsReady", scope: !8761, file: !8761, line: 4205, type: !6509, scopeLine: 4206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12073 = !DILocation(line: 4207, column: 11, scope: !12072)
!12074 = !DILocation(line: 4207, column: 44, scope: !12072)
!12075 = !DILocation(line: 4207, column: 3, scope: !12072)
!12076 = distinct !DISubprogram(name: "LL_RCC_SetAHBPrescaler", scope: !8761, file: !8761, line: 3224, type: !6519, scopeLine: 3225, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12077)
!12077 = !{!12078}
!12078 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12076, file: !8761, line: 3224, type: !110)
!12079 = !DILocation(line: 0, scope: !12076)
!12080 = !DILocation(line: 3226, column: 3, scope: !12076)
!12081 = !DILocation(line: 3227, column: 1, scope: !12076)
!12082 = distinct !DISubprogram(name: "LL_RCC_SetSysClkSource", scope: !8761, file: !8761, line: 3188, type: !6519, scopeLine: 3189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12083)
!12083 = !{!12084}
!12084 = !DILocalVariable(name: "Source", arg: 1, scope: !12082, file: !8761, line: 3188, type: !110)
!12085 = !DILocation(line: 0, scope: !12082)
!12086 = !DILocation(line: 3190, column: 3, scope: !12082)
!12087 = !DILocation(line: 3191, column: 1, scope: !12082)
!12088 = distinct !DISubprogram(name: "LL_RCC_GetSysClkSource", scope: !8761, file: !8761, line: 3204, type: !6509, scopeLine: 3205, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12089 = !DILocation(line: 3206, column: 21, scope: !12088)
!12090 = !DILocation(line: 3206, column: 3, scope: !12088)
!12091 = distinct !DISubprogram(name: "LL_RCC_SetAPB1Prescaler", scope: !8761, file: !8761, line: 3240, type: !6519, scopeLine: 3241, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12092)
!12092 = !{!12093}
!12093 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12091, file: !8761, line: 3240, type: !110)
!12094 = !DILocation(line: 0, scope: !12091)
!12095 = !DILocation(line: 3242, column: 3, scope: !12091)
!12096 = !DILocation(line: 3243, column: 1, scope: !12091)
!12097 = distinct !DISubprogram(name: "LL_RCC_SetAPB2Prescaler", scope: !8761, file: !8761, line: 3256, type: !6519, scopeLine: 3257, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12098)
!12098 = !{!12099}
!12099 = !DILocalVariable(name: "Prescaler", arg: 1, scope: !12097, file: !8761, line: 3256, type: !110)
!12100 = !DILocation(line: 0, scope: !12097)
!12101 = !DILocation(line: 3258, column: 3, scope: !12097)
!12102 = !DILocation(line: 3259, column: 1, scope: !12097)
!12103 = distinct !DISubprogram(name: "LL_RCC_PLLI2S_IsReady", scope: !8761, file: !8761, line: 5153, type: !6509, scopeLine: 5154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12104 = !DILocation(line: 5155, column: 11, scope: !12103)
!12105 = !DILocation(line: 5155, column: 47, scope: !12103)
!12106 = !DILocation(line: 5155, column: 3, scope: !12103)
!12107 = distinct !DISubprogram(name: "LL_PLL_ConfigSystemClock_HSE", scope: !11801, file: !11801, line: 540, type: !12108, scopeLine: 542, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !12110)
!12108 = !DISubroutineType(types: !12109)
!12109 = !{!11844, !110, !110, !11922, !11929}
!12110 = !{!12111, !12112, !12113, !12114, !12115, !12116}
!12111 = !DILocalVariable(name: "HSEFrequency", arg: 1, scope: !12107, file: !11801, line: 540, type: !110)
!12112 = !DILocalVariable(name: "HSEBypass", arg: 2, scope: !12107, file: !11801, line: 540, type: !110)
!12113 = !DILocalVariable(name: "UTILS_PLLInitStruct", arg: 3, scope: !12107, file: !11801, line: 541, type: !11922)
!12114 = !DILocalVariable(name: "UTILS_ClkInitStruct", arg: 4, scope: !12107, file: !11801, line: 541, type: !11929)
!12115 = !DILocalVariable(name: "status", scope: !12107, file: !11801, line: 543, type: !11844)
!12116 = !DILocalVariable(name: "pllfreq", scope: !12107, file: !11801, line: 544, type: !110)
!12117 = !DILocation(line: 0, scope: !12107)
!12118 = !DILocation(line: 551, column: 6, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12107, file: !11801, line: 551, column: 6)
!12120 = !DILocation(line: 551, column: 25, scope: !12119)
!12121 = !DILocation(line: 551, column: 6, scope: !12107)
!12122 = !DILocation(line: 554, column: 15, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !12119, file: !11801, line: 552, column: 3)
!12124 = !DILocation(line: 557, column: 8, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12123, file: !11801, line: 557, column: 8)
!12126 = !DILocation(line: 557, column: 29, scope: !12125)
!12127 = !DILocation(line: 557, column: 8, scope: !12123)
!12128 = !DILocation(line: 560, column: 20, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !12130, file: !11801, line: 560, column: 10)
!12130 = distinct !DILexicalBlock(scope: !12125, file: !11801, line: 558, column: 5)
!12131 = !DILocation(line: 560, column: 10, scope: !12130)
!12132 = !DILocation(line: 562, column: 9, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12129, file: !11801, line: 561, column: 7)
!12134 = !DILocation(line: 563, column: 7, scope: !12133)
!12135 = !DILocation(line: 566, column: 9, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12129, file: !11801, line: 565, column: 7)
!12137 = !DILocation(line: 570, column: 7, scope: !12130)
!12138 = !DILocation(line: 571, column: 7, scope: !12130)
!12139 = !DILocation(line: 571, column: 14, scope: !12130)
!12140 = !DILocation(line: 571, column: 35, scope: !12130)
!12141 = distinct !{!12141, !12138, !12142}
!12142 = !DILocation(line: 574, column: 7, scope: !12130)
!12143 = !DILocation(line: 578, column: 76, scope: !12123)
!12144 = !DILocation(line: 578, column: 103, scope: !12123)
!12145 = !DILocation(line: 579, column: 54, scope: !12123)
!12146 = !DILocation(line: 578, column: 5, scope: !12123)
!12147 = !DILocation(line: 582, column: 14, scope: !12123)
!12148 = !DILocation(line: 583, column: 3, scope: !12123)
!12149 = !DILocation(line: 0, scope: !12119)
!12150 = !DILocation(line: 590, column: 3, scope: !12107)
!12151 = distinct !DISubprogram(name: "LL_RCC_HSE_IsReady", scope: !8761, file: !8761, line: 2969, type: !6509, scopeLine: 2970, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12152 = !DILocation(line: 2971, column: 11, scope: !12151)
!12153 = !DILocation(line: 2971, column: 44, scope: !12151)
!12154 = !DILocation(line: 2971, column: 3, scope: !12151)
!12155 = distinct !DISubprogram(name: "LL_RCC_HSE_EnableBypass", scope: !8761, file: !8761, line: 2929, type: !3089, scopeLine: 2930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12156 = !DILocation(line: 2931, column: 3, scope: !12155)
!12157 = !DILocation(line: 2932, column: 1, scope: !12155)
!12158 = distinct !DISubprogram(name: "LL_RCC_HSE_DisableBypass", scope: !8761, file: !8761, line: 2939, type: !3089, scopeLine: 2940, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12159 = !DILocation(line: 2941, column: 3, scope: !12158)
!12160 = !DILocation(line: 2942, column: 1, scope: !12158)
!12161 = distinct !DISubprogram(name: "LL_RCC_HSE_Enable", scope: !8761, file: !8761, line: 2949, type: !3089, scopeLine: 2950, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2985, retainedNodes: !2026)
!12162 = !DILocation(line: 2951, column: 3, scope: !12161)
!12163 = !DILocation(line: 2952, column: 1, scope: !12161)
!12164 = distinct !DISubprogram(name: "z_device_state_init", scope: !12165, file: !12165, line: 23, type: !3089, scopeLine: 24, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12166)
!12165 = !DIFile(filename: "zephyr/kernel/device.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12166 = !{!12167}
!12167 = !DILocalVariable(name: "dev", scope: !12164, file: !12165, line: 25, type: !12168)
!12168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12169, size: 32)
!12169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12170)
!12170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !336, line: 378, size: 192, elements: !12171)
!12171 = !{!12172, !12173, !12174, !12175, !12181, !12182}
!12172 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12170, file: !336, line: 380, baseType: !279, size: 32)
!12173 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !12170, file: !336, line: 382, baseType: !13, size: 32, offset: 32)
!12174 = !DIDerivedType(tag: DW_TAG_member, name: "api", scope: !12170, file: !336, line: 384, baseType: !13, size: 32, offset: 64)
!12175 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12170, file: !336, line: 386, baseType: !12176, size: 32, offset: 96)
!12176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12177, size: 32)
!12177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_state", file: !336, line: 351, size: 16, elements: !12178)
!12178 = !{!12179, !12180}
!12179 = !DIDerivedType(tag: DW_TAG_member, name: "init_res", scope: !12177, file: !336, line: 359, baseType: !178, size: 8)
!12180 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !12177, file: !336, line: 364, baseType: !347, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!12181 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !12170, file: !336, line: 388, baseType: !107, size: 32, offset: 128)
!12182 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !12170, file: !336, line: 396, baseType: !350, size: 32, offset: 160)
!12183 = !DILocation(line: 0, scope: !12164)
!12184 = !DILocation(line: 31, column: 1, scope: !12164)
!12185 = distinct !DISubprogram(name: "z_impl_device_get_binding", scope: !12165, file: !12165, line: 33, type: !12186, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12188)
!12186 = !DISubroutineType(types: !12187)
!12187 = !{!12168, !279}
!12188 = !{!12189, !12190}
!12189 = !DILocalVariable(name: "name", arg: 1, scope: !12185, file: !12165, line: 33, type: !279)
!12190 = !DILocalVariable(name: "dev", scope: !12185, file: !12165, line: 35, type: !12168)
!12191 = !DILocation(line: 0, scope: !12185)
!12192 = !DILocation(line: 40, column: 12, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12185, file: !12165, line: 40, column: 6)
!12194 = !DILocation(line: 40, column: 21, scope: !12193)
!12195 = !DILocation(line: 40, column: 25, scope: !12193)
!12196 = !DILocation(line: 40, column: 33, scope: !12193)
!12197 = !DILocation(line: 40, column: 6, scope: !12185)
!12198 = !DILocation(line: 55, column: 2, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12185, file: !12165, line: 55, column: 2)
!12200 = !DILocation(line: 50, column: 7, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12202, file: !12165, line: 50, column: 7)
!12202 = distinct !DILexicalBlock(scope: !12203, file: !12165, line: 49, column: 57)
!12203 = distinct !DILexicalBlock(scope: !12204, file: !12165, line: 49, column: 2)
!12204 = distinct !DILexicalBlock(scope: !12185, file: !12165, line: 49, column: 2)
!12205 = !DILocation(line: 50, column: 30, scope: !12201)
!12206 = !DILocation(line: 50, column: 39, scope: !12201)
!12207 = !DILocation(line: 50, column: 44, scope: !12201)
!12208 = !DILocation(line: 50, column: 7, scope: !12202)
!12209 = !DILocation(line: 49, column: 53, scope: !12203)
!12210 = !DILocation(line: 49, column: 33, scope: !12203)
!12211 = !DILocation(line: 49, column: 2, scope: !12204)
!12212 = distinct !{!12212, !12211, !12213}
!12213 = !DILocation(line: 53, column: 2, scope: !12204)
!12214 = !DILocation(line: 56, column: 7, scope: !12215)
!12215 = distinct !DILexicalBlock(scope: !12216, file: !12165, line: 56, column: 7)
!12216 = distinct !DILexicalBlock(scope: !12217, file: !12165, line: 55, column: 57)
!12217 = distinct !DILexicalBlock(scope: !12199, file: !12165, line: 55, column: 2)
!12218 = !DILocation(line: 56, column: 30, scope: !12215)
!12219 = !DILocation(line: 56, column: 52, scope: !12215)
!12220 = !DILocation(line: 56, column: 34, scope: !12215)
!12221 = !DILocation(line: 56, column: 58, scope: !12215)
!12222 = !DILocation(line: 56, column: 7, scope: !12216)
!12223 = !DILocation(line: 55, column: 53, scope: !12217)
!12224 = !DILocation(line: 55, column: 33, scope: !12217)
!12225 = distinct !{!12225, !12198, !12226}
!12226 = !DILocation(line: 59, column: 2, scope: !12199)
!12227 = !DILocation(line: 62, column: 1, scope: !12185)
!12228 = distinct !DISubprogram(name: "z_device_is_ready", scope: !12165, file: !12165, line: 93, type: !12229, scopeLine: 94, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12231)
!12229 = !DISubroutineType(types: !12230)
!12230 = !{!347, !12168}
!12231 = !{!12232}
!12232 = !DILocalVariable(name: "dev", arg: 1, scope: !12228, file: !12165, line: 93, type: !12168)
!12233 = !DILocation(line: 0, scope: !12228)
!12234 = !DILocation(line: 99, column: 10, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12228, file: !12165, line: 99, column: 6)
!12236 = !DILocation(line: 99, column: 6, scope: !12228)
!12237 = !DILocation(line: 103, column: 14, scope: !12228)
!12238 = !DILocation(line: 103, column: 21, scope: !12228)
!12239 = !DILocation(line: 103, column: 33, scope: !12228)
!12240 = !DILocation(line: 103, column: 49, scope: !12228)
!12241 = !DILocation(line: 103, column: 58, scope: !12228)
!12242 = !DILocation(line: 104, column: 1, scope: !12228)
!12243 = distinct !DISubprogram(name: "z_device_get_all_static", scope: !12165, file: !12165, line: 87, type: !12244, scopeLine: 88, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12247)
!12244 = !DISubroutineType(types: !12245)
!12245 = !{!232, !12246}
!12246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12168, size: 32)
!12247 = !{!12248}
!12248 = !DILocalVariable(name: "devices", arg: 1, scope: !12243, file: !12165, line: 87, type: !12246)
!12249 = !DILocation(line: 0, scope: !12243)
!12250 = !DILocation(line: 89, column: 11, scope: !12243)
!12251 = !DILocation(line: 90, column: 2, scope: !12243)
!12252 = distinct !DISubprogram(name: "device_required_foreach", scope: !12165, file: !12165, line: 125, type: !12253, scopeLine: 128, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12259)
!12253 = !DISubroutineType(types: !12254)
!12254 = !{!109, !12168, !12255, !107}
!12255 = !DIDerivedType(tag: DW_TAG_typedef, name: "device_visitor_callback_t", file: !336, line: 471, baseType: !12256)
!12256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12257, size: 32)
!12257 = !DISubroutineType(types: !12258)
!12258 = !{!109, !12168, !107}
!12259 = !{!12260, !12261, !12262, !12263, !12264}
!12260 = !DILocalVariable(name: "dev", arg: 1, scope: !12252, file: !12165, line: 125, type: !12168)
!12261 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12252, file: !12165, line: 126, type: !12255)
!12262 = !DILocalVariable(name: "context", arg: 3, scope: !12252, file: !12165, line: 127, type: !107)
!12263 = !DILocalVariable(name: "handle_count", scope: !12252, file: !12165, line: 129, type: !232)
!12264 = !DILocalVariable(name: "handles", scope: !12252, file: !12165, line: 130, type: !350)
!12265 = !DILocation(line: 0, scope: !12252)
!12266 = !DILocation(line: 129, column: 2, scope: !12252)
!12267 = !DILocation(line: 129, column: 9, scope: !12252)
!12268 = !DILocation(line: 130, column: 35, scope: !12252)
!12269 = !DILocation(line: 132, column: 33, scope: !12252)
!12270 = !DILocation(line: 132, column: 9, scope: !12252)
!12271 = !DILocation(line: 133, column: 1, scope: !12252)
!12272 = !DILocation(line: 132, column: 2, scope: !12252)
!12273 = distinct !DISubprogram(name: "device_required_handles_get", scope: !336, file: !336, line: 493, type: !12274, scopeLine: 494, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12276)
!12274 = !DISubroutineType(types: !12275)
!12275 = !{!350, !12168, !2542}
!12276 = !{!12277, !12278, !12279, !12280}
!12277 = !DILocalVariable(name: "dev", arg: 1, scope: !12273, file: !336, line: 493, type: !12168)
!12278 = !DILocalVariable(name: "count", arg: 2, scope: !12273, file: !336, line: 493, type: !2542)
!12279 = !DILocalVariable(name: "rv", scope: !12273, file: !336, line: 495, type: !350)
!12280 = !DILocalVariable(name: "i", scope: !12281, file: !336, line: 498, type: !232)
!12281 = distinct !DILexicalBlock(scope: !12282, file: !336, line: 497, column: 18)
!12282 = distinct !DILexicalBlock(scope: !12273, file: !336, line: 497, column: 6)
!12283 = !DILocation(line: 0, scope: !12273)
!12284 = !DILocation(line: 495, column: 35, scope: !12273)
!12285 = !DILocation(line: 497, column: 9, scope: !12282)
!12286 = !DILocation(line: 497, column: 6, scope: !12273)
!12287 = !DILocation(line: 0, scope: !12281)
!12288 = !DILocation(line: 500, column: 11, scope: !12281)
!12289 = !DILocation(line: 500, column: 40, scope: !12281)
!12290 = !DILocation(line: 502, column: 4, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12281, file: !336, line: 501, column: 40)
!12292 = distinct !{!12292, !12293, !12294}
!12293 = !DILocation(line: 500, column: 3, scope: !12281)
!12294 = !DILocation(line: 503, column: 3, scope: !12281)
!12295 = !DILocation(line: 504, column: 10, scope: !12281)
!12296 = !DILocation(line: 505, column: 2, scope: !12281)
!12297 = !DILocation(line: 507, column: 2, scope: !12273)
!12298 = distinct !DISubprogram(name: "device_visitor", scope: !12165, file: !12165, line: 106, type: !12299, scopeLine: 110, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12301)
!12299 = !DISubroutineType(types: !12300)
!12300 = !{!109, !350, !232, !12255, !107}
!12301 = !{!12302, !12303, !12304, !12305, !12306, !12308, !12311, !12312}
!12302 = !DILocalVariable(name: "handles", arg: 1, scope: !12298, file: !12165, line: 106, type: !350)
!12303 = !DILocalVariable(name: "handle_count", arg: 2, scope: !12298, file: !12165, line: 107, type: !232)
!12304 = !DILocalVariable(name: "visitor_cb", arg: 3, scope: !12298, file: !12165, line: 108, type: !12255)
!12305 = !DILocalVariable(name: "context", arg: 4, scope: !12298, file: !12165, line: 109, type: !107)
!12306 = !DILocalVariable(name: "i", scope: !12307, file: !12165, line: 112, type: !232)
!12307 = distinct !DILexicalBlock(scope: !12298, file: !12165, line: 112, column: 2)
!12308 = !DILocalVariable(name: "dh", scope: !12309, file: !12165, line: 113, type: !352)
!12309 = distinct !DILexicalBlock(scope: !12310, file: !12165, line: 112, column: 44)
!12310 = distinct !DILexicalBlock(scope: !12307, file: !12165, line: 112, column: 2)
!12311 = !DILocalVariable(name: "rdev", scope: !12309, file: !12165, line: 114, type: !12168)
!12312 = !DILocalVariable(name: "rc", scope: !12309, file: !12165, line: 115, type: !109)
!12313 = !DILocation(line: 0, scope: !12298)
!12314 = !DILocation(line: 0, scope: !12307)
!12315 = !DILocation(line: 112, column: 23, scope: !12310)
!12316 = !DILocation(line: 112, column: 2, scope: !12307)
!12317 = distinct !{!12317, !12316, !12318}
!12318 = !DILocation(line: 120, column: 2, scope: !12307)
!12319 = !DILocation(line: 113, column: 24, scope: !12309)
!12320 = !DILocation(line: 0, scope: !12309)
!12321 = !DILocation(line: 114, column: 31, scope: !12309)
!12322 = !DILocation(line: 115, column: 12, scope: !12309)
!12323 = !DILocation(line: 117, column: 10, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12309, file: !12165, line: 117, column: 7)
!12325 = !DILocation(line: 112, column: 39, scope: !12310)
!12326 = !DILocation(line: 123, column: 1, scope: !12298)
!12327 = distinct !DISubprogram(name: "device_from_handle", scope: !336, file: !336, line: 439, type: !12328, scopeLine: 440, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12330)
!12328 = !DISubroutineType(types: !12329)
!12329 = !{!12168, !352}
!12330 = !{!12331, !12332, !12333}
!12331 = !DILocalVariable(name: "dev_handle", arg: 1, scope: !12327, file: !336, line: 439, type: !352)
!12332 = !DILocalVariable(name: "dev", scope: !12327, file: !336, line: 443, type: !12168)
!12333 = !DILocalVariable(name: "numdev", scope: !12327, file: !336, line: 444, type: !232)
!12334 = !DILocation(line: 0, scope: !12327)
!12335 = !DILocation(line: 446, column: 7, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12327, file: !336, line: 446, column: 6)
!12337 = !DILocation(line: 446, column: 18, scope: !12336)
!12338 = !DILocation(line: 446, column: 23, scope: !12336)
!12339 = !DILocation(line: 450, column: 2, scope: !12327)
!12340 = distinct !DISubprogram(name: "device_supported_foreach", scope: !12165, file: !12165, line: 135, type: !12253, scopeLine: 138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12341)
!12341 = !{!12342, !12343, !12344, !12345, !12346}
!12342 = !DILocalVariable(name: "dev", arg: 1, scope: !12340, file: !12165, line: 135, type: !12168)
!12343 = !DILocalVariable(name: "visitor_cb", arg: 2, scope: !12340, file: !12165, line: 136, type: !12255)
!12344 = !DILocalVariable(name: "context", arg: 3, scope: !12340, file: !12165, line: 137, type: !107)
!12345 = !DILocalVariable(name: "handle_count", scope: !12340, file: !12165, line: 139, type: !232)
!12346 = !DILocalVariable(name: "handles", scope: !12340, file: !12165, line: 140, type: !350)
!12347 = !DILocation(line: 0, scope: !12340)
!12348 = !DILocation(line: 139, column: 2, scope: !12340)
!12349 = !DILocation(line: 139, column: 9, scope: !12340)
!12350 = !DILocation(line: 140, column: 35, scope: !12340)
!12351 = !DILocation(line: 142, column: 33, scope: !12340)
!12352 = !DILocation(line: 142, column: 9, scope: !12340)
!12353 = !DILocation(line: 143, column: 1, scope: !12340)
!12354 = !DILocation(line: 142, column: 2, scope: !12340)
!12355 = distinct !DISubprogram(name: "device_supported_handles_get", scope: !336, file: !336, line: 573, type: !12274, scopeLine: 574, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3049, retainedNodes: !12356)
!12356 = !{!12357, !12358, !12359, !12360, !12361}
!12357 = !DILocalVariable(name: "dev", arg: 1, scope: !12355, file: !336, line: 573, type: !12168)
!12358 = !DILocalVariable(name: "count", arg: 2, scope: !12355, file: !336, line: 573, type: !2542)
!12359 = !DILocalVariable(name: "rv", scope: !12355, file: !336, line: 575, type: !350)
!12360 = !DILocalVariable(name: "region", scope: !12355, file: !336, line: 576, type: !232)
!12361 = !DILocalVariable(name: "i", scope: !12355, file: !336, line: 577, type: !232)
!12362 = !DILocation(line: 0, scope: !12355)
!12363 = !DILocation(line: 575, column: 35, scope: !12355)
!12364 = !DILocation(line: 579, column: 9, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12355, file: !336, line: 579, column: 6)
!12366 = !DILocation(line: 579, column: 6, scope: !12355)
!12367 = !DILocation(line: 582, column: 8, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12369, file: !336, line: 582, column: 8)
!12369 = distinct !DILexicalBlock(scope: !12370, file: !336, line: 581, column: 23)
!12370 = distinct !DILexicalBlock(scope: !12365, file: !336, line: 579, column: 18)
!12371 = !DILocation(line: 582, column: 12, scope: !12368)
!12372 = !DILocation(line: 585, column: 6, scope: !12369)
!12373 = !DILocation(line: 0, scope: !12370)
!12374 = !DILocation(line: 581, column: 17, scope: !12370)
!12375 = !DILocation(line: 581, column: 3, scope: !12370)
!12376 = !DILocation(line: 588, column: 10, scope: !12370)
!12377 = !DILocation(line: 588, column: 16, scope: !12370)
!12378 = !DILocation(line: 589, column: 4, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12370, file: !336, line: 588, column: 39)
!12380 = !DILocation(line: 588, column: 3, scope: !12370)
!12381 = distinct !{!12381, !12380, !12382}
!12382 = !DILocation(line: 590, column: 3, scope: !12370)
!12383 = !DILocation(line: 591, column: 10, scope: !12370)
!12384 = !DILocation(line: 592, column: 2, scope: !12370)
!12385 = !DILocation(line: 575, column: 25, scope: !12355)
!12386 = !DILocation(line: 594, column: 2, scope: !12355)
!12387 = distinct !DISubprogram(name: "z_impl_z_errno", scope: !1817, file: !1817, line: 49, type: !12388, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1814, retainedNodes: !2026)
!12388 = !DISubroutineType(types: !12389)
!12389 = !{!281}
!12390 = !DILocation(line: 51, column: 10, scope: !12387)
!12391 = !DILocation(line: 51, column: 20, scope: !12387)
!12392 = !DILocation(line: 51, column: 2, scope: !12387)
!12393 = distinct !DISubprogram(name: "coredump", scope: !3056, file: !3056, line: 209, type: !12394, scopeLine: 211, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12543)
!12394 = !DISubroutineType(types: !12395)
!12395 = !{null, !32, !12396, !12440}
!12396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12397, size: 32)
!12397 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12398)
!12398 = !DIDerivedType(tag: DW_TAG_typedef, name: "z_arch_esf_t", file: !2672, line: 141, baseType: !12399)
!12399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__esf", file: !2672, line: 97, size: 256, elements: !12400)
!12400 = !{!12401}
!12401 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !12399, file: !2672, line: 107, baseType: !12402, size: 256)
!12402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__basic_sf", file: !2672, line: 98, size: 256, elements: !12403)
!12403 = !{!12404, !12409, !12414, !12419, !12424, !12429, !12434, !12439}
!12404 = !DIDerivedType(tag: DW_TAG_member, scope: !12402, file: !2672, line: 99, baseType: !12405, size: 32)
!12405 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12402, file: !2672, line: 99, size: 32, elements: !12406)
!12406 = !{!12407, !12408}
!12407 = !DIDerivedType(tag: DW_TAG_member, name: "a1", scope: !12405, file: !2672, line: 99, baseType: !110, size: 32)
!12408 = !DIDerivedType(tag: DW_TAG_member, name: "r0", scope: !12405, file: !2672, line: 99, baseType: !110, size: 32)
!12409 = !DIDerivedType(tag: DW_TAG_member, scope: !12402, file: !2672, line: 100, baseType: !12410, size: 32, offset: 32)
!12410 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12402, file: !2672, line: 100, size: 32, elements: !12411)
!12411 = !{!12412, !12413}
!12412 = !DIDerivedType(tag: DW_TAG_member, name: "a2", scope: !12410, file: !2672, line: 100, baseType: !110, size: 32)
!12413 = !DIDerivedType(tag: DW_TAG_member, name: "r1", scope: !12410, file: !2672, line: 100, baseType: !110, size: 32)
!12414 = !DIDerivedType(tag: DW_TAG_member, scope: !12402, file: !2672, line: 101, baseType: !12415, size: 32, offset: 64)
!12415 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12402, file: !2672, line: 101, size: 32, elements: !12416)
!12416 = !{!12417, !12418}
!12417 = !DIDerivedType(tag: DW_TAG_member, name: "a3", scope: !12415, file: !2672, line: 101, baseType: !110, size: 32)
!12418 = !DIDerivedType(tag: DW_TAG_member, name: "r2", scope: !12415, file: !2672, line: 101, baseType: !110, size: 32)
!12419 = !DIDerivedType(tag: DW_TAG_member, scope: !12402, file: !2672, line: 102, baseType: !12420, size: 32, offset: 96)
!12420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12402, file: !2672, line: 102, size: 32, elements: !12421)
!12421 = !{!12422, !12423}
!12422 = !DIDerivedType(tag: DW_TAG_member, name: "a4", scope: !12420, file: !2672, line: 102, baseType: !110, size: 32)
!12423 = !DIDerivedType(tag: DW_TAG_member, name: "r3", scope: !12420, file: !2672, line: 102, baseType: !110, size: 32)
!12424 = !DIDerivedType(tag: DW_TAG_member, scope: !12402, file: !2672, line: 103, baseType: !12425, size: 32, offset: 128)
!12425 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12402, file: !2672, line: 103, size: 32, elements: !12426)
!12426 = !{!12427, !12428}
!12427 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !12425, file: !2672, line: 103, baseType: !110, size: 32)
!12428 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !12425, file: !2672, line: 103, baseType: !110, size: 32)
!12429 = !DIDerivedType(tag: DW_TAG_member, scope: !12402, file: !2672, line: 104, baseType: !12430, size: 32, offset: 160)
!12430 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12402, file: !2672, line: 104, size: 32, elements: !12431)
!12431 = !{!12432, !12433}
!12432 = !DIDerivedType(tag: DW_TAG_member, name: "lr", scope: !12430, file: !2672, line: 104, baseType: !110, size: 32)
!12433 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !12430, file: !2672, line: 104, baseType: !110, size: 32)
!12434 = !DIDerivedType(tag: DW_TAG_member, scope: !12402, file: !2672, line: 105, baseType: !12435, size: 32, offset: 192)
!12435 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12402, file: !2672, line: 105, size: 32, elements: !12436)
!12436 = !{!12437, !12438}
!12437 = !DIDerivedType(tag: DW_TAG_member, name: "pc", scope: !12435, file: !2672, line: 105, baseType: !110, size: 32)
!12438 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !12435, file: !2672, line: 105, baseType: !110, size: 32)
!12439 = !DIDerivedType(tag: DW_TAG_member, name: "xpsr", scope: !12402, file: !2672, line: 106, baseType: !110, size: 32, offset: 224)
!12440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12441, size: 32)
!12441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !12442)
!12442 = !{!12443, !12501, !12513, !12514, !12515, !12516, !12517, !12523, !12538}
!12443 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !12441, file: !156, line: 247, baseType: !12444, size: 384)
!12444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !12445)
!12445 = !{!12446, !12470, !12477, !12478, !12479, !12488, !12489, !12490}
!12446 = !DIDerivedType(tag: DW_TAG_member, scope: !12444, file: !156, line: 60, baseType: !12447, size: 64)
!12447 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12444, file: !156, line: 60, size: 64, elements: !12448)
!12448 = !{!12449, !12464}
!12449 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !12447, file: !156, line: 61, baseType: !12450, size: 64)
!12450 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !127, line: 49, baseType: !12451)
!12451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !127, line: 37, size: 64, elements: !12452)
!12452 = !{!12453, !12459}
!12453 = !DIDerivedType(tag: DW_TAG_member, scope: !12451, file: !127, line: 38, baseType: !12454, size: 32)
!12454 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12451, file: !127, line: 38, size: 32, elements: !12455)
!12455 = !{!12456, !12458}
!12456 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !12454, file: !127, line: 39, baseType: !12457, size: 32)
!12457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12451, size: 32)
!12458 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !12454, file: !127, line: 40, baseType: !12457, size: 32)
!12459 = !DIDerivedType(tag: DW_TAG_member, scope: !12451, file: !127, line: 42, baseType: !12460, size: 32, offset: 32)
!12460 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12451, file: !127, line: 42, size: 32, elements: !12461)
!12461 = !{!12462, !12463}
!12462 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !12460, file: !127, line: 43, baseType: !12457, size: 32)
!12463 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !12460, file: !127, line: 44, baseType: !12457, size: 32)
!12464 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !12447, file: !156, line: 62, baseType: !12465, size: 64)
!12465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !12466)
!12466 = !{!12467}
!12467 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !12465, file: !168, line: 50, baseType: !12468, size: 64)
!12468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12469, size: 64, elements: !173)
!12469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12465, size: 32)
!12470 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !12444, file: !156, line: 68, baseType: !12471, size: 32, offset: 64)
!12471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12472, size: 32)
!12472 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !12473)
!12473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !12474)
!12474 = !{!12475}
!12475 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !12473, file: !122, line: 232, baseType: !12476, size: 64)
!12476 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !12451)
!12477 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !12444, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!12478 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !12444, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!12479 = !DIDerivedType(tag: DW_TAG_member, scope: !12444, file: !156, line: 90, baseType: !12480, size: 16, offset: 112)
!12480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12444, file: !156, line: 90, size: 16, elements: !12481)
!12481 = !{!12482, !12487}
!12482 = !DIDerivedType(tag: DW_TAG_member, scope: !12480, file: !156, line: 91, baseType: !12483, size: 16)
!12483 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12480, file: !156, line: 91, size: 16, elements: !12484)
!12484 = !{!12485, !12486}
!12485 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12483, file: !156, line: 96, baseType: !188, size: 8)
!12486 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !12483, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!12487 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !12480, file: !156, line: 100, baseType: !192, size: 16)
!12488 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !12444, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!12489 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !12444, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!12490 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !12444, file: !156, line: 131, baseType: !12491, size: 192, offset: 192)
!12491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !12492)
!12492 = !{!12493, !12494, !12500}
!12493 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !12491, file: !122, line: 245, baseType: !12450, size: 64)
!12494 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !12491, file: !122, line: 246, baseType: !12495, size: 32, offset: 64)
!12495 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !12496)
!12496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12497, size: 32)
!12497 = !DISubroutineType(types: !12498)
!12498 = !{null, !12499}
!12499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12491, size: 32)
!12500 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !12491, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!12501 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !12441, file: !156, line: 250, baseType: !12502, size: 288, offset: 384)
!12502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !12503)
!12503 = !{!12504, !12505, !12506, !12507, !12508, !12509, !12510, !12511, !12512}
!12504 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !12502, file: !209, line: 26, baseType: !110, size: 32)
!12505 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !12502, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!12506 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !12502, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!12507 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !12502, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!12508 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !12502, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!12509 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !12502, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!12510 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !12502, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!12511 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !12502, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!12512 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !12502, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!12513 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !12441, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!12514 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !12441, file: !156, line: 256, baseType: !12472, size: 64, offset: 704)
!12515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12441, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!12516 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !12441, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!12517 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !12441, file: !156, line: 300, baseType: !12518, size: 96, offset: 1056)
!12518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !12519)
!12519 = !{!12520, !12521, !12522}
!12520 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !12518, file: !156, line: 153, baseType: !22, size: 32)
!12521 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !12518, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!12522 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !12518, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!12523 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !12441, file: !156, line: 325, baseType: !12524, size: 32, offset: 1152)
!12524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12525, size: 32)
!12525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !12526)
!12526 = !{!12527, !12533, !12534}
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12525, file: !118, line: 5074, baseType: !12528, size: 96)
!12528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !12529)
!12529 = !{!12530, !12531, !12532}
!12530 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !12528, file: !241, line: 57, baseType: !244, size: 32)
!12531 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !12528, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!12532 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !12528, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!12533 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !12525, file: !118, line: 5075, baseType: !12472, size: 64, offset: 96)
!12534 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !12525, file: !118, line: 5076, baseType: !12535, size: 32, offset: 160)
!12535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !251, line: 43, size: 32, elements: !12536)
!12536 = !{!12537}
!12537 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !12535, file: !251, line: 52, baseType: !22, size: 32)
!12538 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !12441, file: !156, line: 343, baseType: !12539, size: 64, offset: 1184)
!12539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !12540)
!12540 = !{!12541, !12542}
!12541 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !12539, file: !209, line: 63, baseType: !110, size: 32)
!12542 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !12539, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!12543 = !{!12544, !12545, !12546}
!12544 = !DILocalVariable(name: "reason", arg: 1, scope: !12393, file: !3056, line: 209, type: !32)
!12545 = !DILocalVariable(name: "esf", arg: 2, scope: !12393, file: !3056, line: 209, type: !12396)
!12546 = !DILocalVariable(name: "thread", arg: 3, scope: !12393, file: !3056, line: 210, type: !12440)
!12547 = !DILocation(line: 0, scope: !12393)
!12548 = !DILocation(line: 212, column: 1, scope: !12393)
!12549 = distinct !DISubprogram(name: "coredump_memory_dump", scope: !3056, file: !3056, line: 214, type: !12550, scopeLine: 215, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12552)
!12550 = !DISubroutineType(types: !12551)
!12551 = !{null, !22, !22}
!12552 = !{!12553, !12554}
!12553 = !DILocalVariable(name: "start_addr", arg: 1, scope: !12549, file: !3056, line: 214, type: !22)
!12554 = !DILocalVariable(name: "end_addr", arg: 2, scope: !12549, file: !3056, line: 214, type: !22)
!12555 = !DILocation(line: 0, scope: !12549)
!12556 = !DILocation(line: 216, column: 1, scope: !12549)
!12557 = distinct !DISubprogram(name: "coredump_buffer_output", scope: !3056, file: !3056, line: 218, type: !12558, scopeLine: 219, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12560)
!12558 = !DISubroutineType(types: !12559)
!12559 = !{null, !286, !232}
!12560 = !{!12561, !12562}
!12561 = !DILocalVariable(name: "buf", arg: 1, scope: !12557, file: !3056, line: 218, type: !286)
!12562 = !DILocalVariable(name: "buflen", arg: 2, scope: !12557, file: !3056, line: 218, type: !232)
!12563 = !DILocation(line: 0, scope: !12557)
!12564 = !DILocation(line: 220, column: 1, scope: !12557)
!12565 = distinct !DISubprogram(name: "coredump_query", scope: !3056, file: !3056, line: 222, type: !12566, scopeLine: 223, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12568)
!12566 = !DISubroutineType(types: !12567)
!12567 = !{!109, !3055, !107}
!12568 = !{!12569, !12570}
!12569 = !DILocalVariable(name: "query_id", arg: 1, scope: !12565, file: !3056, line: 222, type: !3055)
!12570 = !DILocalVariable(name: "arg", arg: 2, scope: !12565, file: !3056, line: 222, type: !107)
!12571 = !DILocation(line: 0, scope: !12565)
!12572 = !DILocation(line: 224, column: 2, scope: !12565)
!12573 = distinct !DISubprogram(name: "coredump_cmd", scope: !3056, file: !3056, line: 227, type: !12574, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12576)
!12574 = !DISubroutineType(types: !12575)
!12575 = !{!109, !3062, !107}
!12576 = !{!12577, !12578}
!12577 = !DILocalVariable(name: "query_id", arg: 1, scope: !12573, file: !3056, line: 227, type: !3062)
!12578 = !DILocalVariable(name: "arg", arg: 2, scope: !12573, file: !3056, line: 227, type: !107)
!12579 = !DILocation(line: 0, scope: !12573)
!12580 = !DILocation(line: 229, column: 2, scope: !12573)
!12581 = distinct !DISubprogram(name: "arch_system_halt", scope: !12582, file: !12582, line: 23, type: !6112, scopeLine: 24, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12583)
!12582 = !DIFile(filename: "zephyr/kernel/fatal.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12583 = !{!12584}
!12584 = !DILocalVariable(name: "reason", arg: 1, scope: !12581, file: !12582, line: 23, type: !32)
!12585 = !DILocation(line: 0, scope: !12581)
!12586 = !DILocation(line: 55, column: 2, scope: !12587, inlinedAt: !12591)
!12587 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12588)
!12588 = !{!12589, !12590}
!12589 = !DILocalVariable(name: "key", scope: !12587, file: !6101, line: 44, type: !32)
!12590 = !DILocalVariable(name: "tmp", scope: !12587, file: !6101, line: 53, type: !32)
!12591 = distinct !DILocation(line: 31, column: 8, scope: !12581)
!12592 = !{i64 2244719}
!12593 = !DILocation(line: 0, scope: !12587, inlinedAt: !12591)
!12594 = !DILocation(line: 32, column: 2, scope: !12581)
!12595 = !DILocation(line: 32, column: 2, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12597, file: !12582, line: 32, column: 2)
!12597 = distinct !DILexicalBlock(scope: !12581, file: !12582, line: 32, column: 2)
!12598 = distinct !{!12598, !12599, !12600}
!12599 = !DILocation(line: 32, column: 2, scope: !12597)
!12600 = !DILocation(line: 34, column: 2, scope: !12597)
!12601 = distinct !DISubprogram(name: "k_sys_fatal_error_handler", scope: !12582, file: !12582, line: 39, type: !12602, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12604)
!12602 = !DISubroutineType(types: !12603)
!12603 = !{null, !32, !12396}
!12604 = !{!12605, !12606}
!12605 = !DILocalVariable(name: "reason", arg: 1, scope: !12601, file: !12582, line: 39, type: !32)
!12606 = !DILocalVariable(name: "esf", arg: 2, scope: !12601, file: !12582, line: 40, type: !12396)
!12607 = !DILocation(line: 0, scope: !12601)
!12608 = !DILocation(line: 45, column: 2, scope: !12609)
!12609 = distinct !DILexicalBlock(scope: !12610, file: !12582, line: 45, column: 2)
!12610 = distinct !DILexicalBlock(scope: !12611, file: !12582, line: 45, column: 2)
!12611 = distinct !DILexicalBlock(scope: !12612, file: !12582, line: 45, column: 2)
!12612 = distinct !DILexicalBlock(scope: !12601, file: !12582, line: 45, column: 2)
!12613 = !DILocation(line: 46, column: 2, scope: !12601)
!12614 = distinct !DISubprogram(name: "k_fatal_halt", scope: !12582, file: !12582, line: 81, type: !6112, scopeLine: 82, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12615)
!12615 = !{!12616}
!12616 = !DILocalVariable(name: "reason", arg: 1, scope: !12614, file: !12582, line: 81, type: !32)
!12617 = !DILocation(line: 0, scope: !12614)
!12618 = !DILocation(line: 83, column: 2, scope: !12614)
!12619 = distinct !DISubprogram(name: "z_fatal_error", scope: !12582, file: !12582, line: 96, type: !12602, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12620)
!12620 = !{!12621, !12622, !12623, !12624}
!12621 = !DILocalVariable(name: "reason", arg: 1, scope: !12619, file: !12582, line: 96, type: !32)
!12622 = !DILocalVariable(name: "esf", arg: 2, scope: !12619, file: !12582, line: 96, type: !12396)
!12623 = !DILocalVariable(name: "key", scope: !12619, file: !12582, line: 102, type: !32)
!12624 = !DILocalVariable(name: "thread", scope: !12619, file: !12582, line: 103, type: !12440)
!12625 = !DILocation(line: 0, scope: !12619)
!12626 = !DILocation(line: 55, column: 2, scope: !12587, inlinedAt: !12627)
!12627 = distinct !DILocation(line: 102, column: 21, scope: !12619)
!12628 = !DILocation(line: 0, scope: !12587, inlinedAt: !12627)
!12629 = !DILocation(line: 104, column: 4, scope: !12619)
!12630 = !DILocation(line: 109, column: 2, scope: !12631)
!12631 = distinct !DILexicalBlock(scope: !12632, file: !12582, line: 109, column: 2)
!12632 = distinct !DILexicalBlock(scope: !12633, file: !12582, line: 109, column: 2)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !12582, line: 109, column: 2)
!12634 = distinct !DILexicalBlock(scope: !12619, file: !12582, line: 109, column: 2)
!12635 = !DILocation(line: 119, column: 11, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12619, file: !12582, line: 119, column: 6)
!12637 = !DILocation(line: 119, column: 20, scope: !12636)
!12638 = !DILocalVariable(name: "esf", arg: 1, scope: !12639, file: !7474, line: 71, type: !12396)
!12639 = distinct !DISubprogram(name: "arch_is_in_nested_exception", scope: !7474, file: !7474, line: 71, type: !12640, scopeLine: 72, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12642)
!12640 = !DISubroutineType(types: !12641)
!12641 = !{!347, !12396}
!12642 = !{!12638}
!12643 = !DILocation(line: 0, scope: !12639, inlinedAt: !12644)
!12644 = distinct !DILocation(line: 119, column: 23, scope: !12636)
!12645 = !DILocation(line: 73, column: 21, scope: !12639, inlinedAt: !12644)
!12646 = !DILocation(line: 73, column: 26, scope: !12639, inlinedAt: !12644)
!12647 = !DILocation(line: 73, column: 9, scope: !12639, inlinedAt: !12644)
!12648 = !DILocation(line: 119, column: 6, scope: !12619)
!12649 = !DILocation(line: 120, column: 3, scope: !12650)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !12582, line: 120, column: 3)
!12651 = distinct !DILexicalBlock(scope: !12652, file: !12582, line: 120, column: 3)
!12652 = distinct !DILexicalBlock(scope: !12653, file: !12582, line: 120, column: 3)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !12582, line: 120, column: 3)
!12654 = distinct !DILexicalBlock(scope: !12636, file: !12582, line: 119, column: 57)
!12655 = !DILocation(line: 121, column: 2, scope: !12654)
!12656 = !DILocation(line: 124, column: 2, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12658, file: !12582, line: 124, column: 2)
!12658 = distinct !DILexicalBlock(scope: !12659, file: !12582, line: 124, column: 2)
!12659 = distinct !DILexicalBlock(scope: !12660, file: !12582, line: 124, column: 2)
!12660 = distinct !DILexicalBlock(scope: !12619, file: !12582, line: 124, column: 2)
!12661 = !DILocation(line: 131, column: 2, scope: !12619)
!12662 = !DILocation(line: 0, scope: !12639, inlinedAt: !12663)
!12663 = distinct !DILocation(line: 163, column: 24, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !12582, line: 163, column: 7)
!12665 = distinct !DILexicalBlock(scope: !12666, file: !12582, line: 160, column: 9)
!12666 = distinct !DILexicalBlock(scope: !12619, file: !12582, line: 146, column: 6)
!12667 = !DILocation(line: 73, column: 21, scope: !12639, inlinedAt: !12663)
!12668 = !DILocation(line: 73, column: 26, scope: !12639, inlinedAt: !12663)
!12669 = !DILocation(line: 73, column: 9, scope: !12639, inlinedAt: !12663)
!12670 = !DILocation(line: 163, column: 7, scope: !12665)
!12671 = !DILocalVariable(name: "key", arg: 1, scope: !12672, file: !6101, line: 84, type: !32)
!12672 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12673)
!12673 = !{!12671}
!12674 = !DILocation(line: 0, scope: !12672, inlinedAt: !12675)
!12675 = distinct !DILocation(line: 171, column: 4, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12664, file: !12582, line: 163, column: 58)
!12677 = !DILocation(line: 95, column: 2, scope: !12672, inlinedAt: !12675)
!12678 = !{i64 2245536}
!12679 = !DILocation(line: 172, column: 4, scope: !12676)
!12680 = !DILocation(line: 163, column: 21, scope: !12664)
!12681 = !DILocation(line: 178, column: 15, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12683, file: !12582, line: 178, column: 8)
!12683 = distinct !DILexicalBlock(scope: !12664, file: !12582, line: 174, column: 10)
!12684 = !DILocation(line: 0, scope: !12672, inlinedAt: !12685)
!12685 = distinct !DILocation(line: 179, column: 5, scope: !12686)
!12686 = distinct !DILexicalBlock(scope: !12682, file: !12582, line: 178, column: 38)
!12687 = !DILocation(line: 0, scope: !12672, inlinedAt: !12688)
!12688 = distinct !DILocation(line: 186, column: 2, scope: !12619)
!12689 = !DILocation(line: 178, column: 8, scope: !12683)
!12690 = !DILocation(line: 189, column: 3, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12692, file: !12582, line: 188, column: 41)
!12692 = distinct !DILexicalBlock(scope: !12619, file: !12582, line: 188, column: 6)
!12693 = !DILocation(line: 191, column: 1, scope: !12619)
!12694 = distinct !DISubprogram(name: "k_current_get", scope: !118, file: !118, line: 530, type: !12695, scopeLine: 531, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !2026)
!12695 = !DISubroutineType(types: !12696)
!12696 = !{!12697}
!12697 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !12440)
!12698 = !DILocation(line: 535, column: 9, scope: !12694)
!12699 = !DILocation(line: 535, column: 2, scope: !12694)
!12700 = distinct !DISubprogram(name: "reason_to_str", scope: !12582, file: !12582, line: 62, type: !12701, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12703)
!12701 = !DISubroutineType(types: !12702)
!12702 = !{!279, !32}
!12703 = !{!12704}
!12704 = !DILocalVariable(name: "reason", arg: 1, scope: !12700, file: !12582, line: 62, type: !32)
!12705 = !DILocation(line: 0, scope: !12700)
!12706 = !DILocation(line: 64, column: 2, scope: !12700)
!12707 = !DILocation(line: 0, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12700, file: !12582, line: 64, column: 18)
!12709 = !DILocation(line: 78, column: 1, scope: !12700)
!12710 = distinct !DISubprogram(name: "thread_name_get", scope: !12582, file: !12582, line: 51, type: !12711, scopeLine: 52, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12713)
!12711 = !DISubroutineType(types: !12712)
!12712 = !{!279, !12440}
!12713 = !{!12714, !12715}
!12714 = !DILocalVariable(name: "thread", arg: 1, scope: !12710, file: !12582, line: 51, type: !12440)
!12715 = !DILocalVariable(name: "thread_name", scope: !12710, file: !12582, line: 53, type: !279)
!12716 = !DILocation(line: 0, scope: !12710)
!12717 = !DILocation(line: 53, column: 36, scope: !12710)
!12718 = !DILocation(line: 53, column: 28, scope: !12710)
!12719 = !DILocation(line: 53, column: 47, scope: !12710)
!12720 = !DILocation(line: 55, column: 19, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12710, file: !12582, line: 55, column: 6)
!12722 = !DILocation(line: 55, column: 28, scope: !12721)
!12723 = !DILocation(line: 55, column: 32, scope: !12721)
!12724 = !DILocation(line: 55, column: 47, scope: !12721)
!12725 = !DILocation(line: 55, column: 6, scope: !12710)
!12726 = !DILocation(line: 57, column: 2, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12721, file: !12582, line: 55, column: 57)
!12728 = !DILocation(line: 59, column: 2, scope: !12710)
!12729 = distinct !DISubprogram(name: "k_thread_abort", scope: !3231, file: !3231, line: 188, type: !12730, scopeLine: 189, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !12732)
!12730 = !DISubroutineType(types: !12731)
!12731 = !{null, !12697}
!12732 = !{!12733}
!12733 = !DILocalVariable(name: "thread", arg: 1, scope: !12729, file: !3231, line: 188, type: !12697)
!12734 = !DILocation(line: 0, scope: !12729)
!12735 = !DILocation(line: 197, column: 2, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12729, file: !3231, line: 197, column: 2)
!12737 = !{i64 2154750091}
!12738 = !DILocation(line: 198, column: 2, scope: !12729)
!12739 = !DILocation(line: 199, column: 1, scope: !12729)
!12740 = distinct !DISubprogram(name: "z_current_get", scope: !3231, file: !3231, line: 173, type: !12695, scopeLine: 174, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3052, retainedNodes: !2026)
!12741 = !DILocation(line: 180, column: 2, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12740, file: !3231, line: 180, column: 2)
!12743 = !{i64 2154750023}
!12744 = !DILocation(line: 181, column: 9, scope: !12740)
!12745 = !DILocation(line: 181, column: 2, scope: !12740)
!12746 = distinct !DISubprogram(name: "z_early_memset", scope: !1825, file: !1825, line: 108, type: !12747, scopeLine: 109, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12749)
!12747 = !DISubroutineType(types: !12748)
!12748 = !{null, !107, !109, !232}
!12749 = !{!12750, !12751, !12752}
!12750 = !DILocalVariable(name: "dst", arg: 1, scope: !12746, file: !1825, line: 108, type: !107)
!12751 = !DILocalVariable(name: "c", arg: 2, scope: !12746, file: !1825, line: 108, type: !109)
!12752 = !DILocalVariable(name: "n", arg: 3, scope: !12746, file: !1825, line: 108, type: !232)
!12753 = !DILocation(line: 0, scope: !12746)
!12754 = !DILocation(line: 110, column: 9, scope: !12746)
!12755 = !DILocation(line: 111, column: 1, scope: !12746)
!12756 = distinct !DISubprogram(name: "z_early_memcpy", scope: !1825, file: !1825, line: 121, type: !12757, scopeLine: 122, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12759)
!12757 = !DISubroutineType(types: !12758)
!12758 = !{null, !107, !13, !232}
!12759 = !{!12760, !12761, !12762}
!12760 = !DILocalVariable(name: "dst", arg: 1, scope: !12756, file: !1825, line: 121, type: !107)
!12761 = !DILocalVariable(name: "src", arg: 2, scope: !12756, file: !1825, line: 121, type: !13)
!12762 = !DILocalVariable(name: "n", arg: 3, scope: !12756, file: !1825, line: 121, type: !232)
!12763 = !DILocation(line: 0, scope: !12756)
!12764 = !DILocation(line: 123, column: 9, scope: !12756)
!12765 = !DILocation(line: 124, column: 1, scope: !12756)
!12766 = distinct !DISubprogram(name: "z_bss_zero", scope: !1825, file: !1825, line: 132, type: !3089, scopeLine: 133, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !2026)
!12767 = !DILocation(line: 143, column: 2, scope: !12766)
!12768 = !DILocation(line: 168, column: 1, scope: !12766)
!12769 = distinct !DISubprogram(name: "z_init_cpu", scope: !1825, file: !1825, line: 372, type: !8362, scopeLine: 373, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12770)
!12770 = !{!12771}
!12771 = !DILocalVariable(name: "id", arg: 1, scope: !12769, file: !1825, line: 372, type: !109)
!12772 = !DILocation(line: 0, scope: !12769)
!12773 = !DILocation(line: 374, column: 2, scope: !12769)
!12774 = !DILocation(line: 375, column: 34, scope: !12769)
!12775 = !DILocation(line: 375, column: 19, scope: !12769)
!12776 = !DILocation(line: 375, column: 31, scope: !12769)
!12777 = !DILocation(line: 376, column: 24, scope: !12769)
!12778 = !DILocation(line: 376, column: 19, scope: !12769)
!12779 = !DILocation(line: 376, column: 22, scope: !12769)
!12780 = !DILocation(line: 378, column: 26, scope: !12769)
!12781 = !DILocation(line: 378, column: 4, scope: !12769)
!12782 = !DILocation(line: 378, column: 50, scope: !12769)
!12783 = !DILocation(line: 377, column: 19, scope: !12769)
!12784 = !DILocation(line: 377, column: 29, scope: !12769)
!12785 = !DILocation(line: 384, column: 1, scope: !12769)
!12786 = distinct !DISubprogram(name: "init_idle_thread", scope: !1825, file: !1825, line: 343, type: !8362, scopeLine: 344, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12787)
!12787 = !{!12788, !12789, !12790, !12793}
!12788 = !DILocalVariable(name: "i", arg: 1, scope: !12786, file: !1825, line: 343, type: !109)
!12789 = !DILocalVariable(name: "thread", scope: !12786, file: !1825, line: 345, type: !1917)
!12790 = !DILocalVariable(name: "stack", scope: !12786, file: !1825, line: 346, type: !12791)
!12791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12792, size: 32)
!12792 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3356, line: 44, baseType: !2035)
!12793 = !DILocalVariable(name: "tname", scope: !12786, file: !1825, line: 354, type: !285)
!12794 = !DILocation(line: 0, scope: !12786)
!12795 = !DILocation(line: 345, column: 29, scope: !12786)
!12796 = !DILocation(line: 346, column: 28, scope: !12786)
!12797 = !DILocation(line: 362, column: 37, scope: !12786)
!12798 = !DILocation(line: 362, column: 36, scope: !12786)
!12799 = !DILocation(line: 361, column: 2, scope: !12786)
!12800 = !DILocation(line: 365, column: 2, scope: !12786)
!12801 = !DILocation(line: 370, column: 1, scope: !12786)
!12802 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !12803, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12805)
!12803 = !DISubroutineType(types: !12804)
!12804 = !{!285, !12791}
!12805 = !{!12806}
!12806 = !DILocalVariable(name: "sym", arg: 1, scope: !12802, file: !145, line: 331, type: !12791)
!12807 = !DILocation(line: 0, scope: !12802)
!12808 = !DILocation(line: 333, column: 21, scope: !12802)
!12809 = !DILocation(line: 333, column: 2, scope: !12802)
!12810 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12811, file: !12811, line: 155, type: !12812, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12814)
!12811 = !DIFile(filename: "zephyr/kernel/include/ksched.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12812 = !DISubroutineType(types: !12813)
!12813 = !{null, !1917}
!12814 = !{!12815}
!12815 = !DILocalVariable(name: "thread", arg: 1, scope: !12810, file: !12811, line: 155, type: !1917)
!12816 = !DILocation(line: 0, scope: !12810)
!12817 = !DILocation(line: 157, column: 15, scope: !12810)
!12818 = !DILocation(line: 157, column: 28, scope: !12810)
!12819 = !DILocation(line: 158, column: 1, scope: !12810)
!12820 = distinct !DISubprogram(name: "z_cstart", scope: !1825, file: !1825, line: 501, type: !3089, scopeLine: 502, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12821)
!12821 = !{!12822}
!12822 = !DILocalVariable(name: "dummy_thread", scope: !12820, file: !1825, line: 518, type: !1918)
!12823 = !DILocation(line: 507, column: 2, scope: !12820)
!12824 = !DILocation(line: 43, column: 14, scope: !12825, inlinedAt: !12829)
!12825 = distinct !DISubprogram(name: "z_arm_interrupt_stack_setup", scope: !12826, file: !12826, line: 40, type: !3089, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12827)
!12826 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/cortex_m/stack.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12827 = !{!12828}
!12828 = !DILocalVariable(name: "msp", scope: !12825, file: !12826, line: 42, type: !110)
!12829 = distinct !DILocation(line: 44, column: 2, scope: !12830, inlinedAt: !12832)
!12830 = distinct !DISubprogram(name: "arch_kernel_init", scope: !12831, file: !12831, line: 42, type: !3089, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !2026)
!12831 = !DIFile(filename: "zephyr/arch/arm/include/aarch32/kernel_arch_func.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12832 = distinct !DILocation(line: 510, column: 2, scope: !12820)
!12833 = !DILocation(line: 43, column: 3, scope: !12825, inlinedAt: !12829)
!12834 = !DILocation(line: 43, column: 60, scope: !12825, inlinedAt: !12829)
!12835 = !DILocation(line: 0, scope: !12825, inlinedAt: !12829)
!12836 = !DILocalVariable(name: "topOfMainStack", arg: 1, scope: !12837, file: !6422, line: 1153, type: !110)
!12837 = distinct !DISubprogram(name: "__set_MSP", scope: !6422, file: !6422, line: 1153, type: !6519, scopeLine: 1154, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12838)
!12838 = !{!12836}
!12839 = !DILocation(line: 0, scope: !12837, inlinedAt: !12840)
!12840 = distinct !DILocation(line: 46, column: 2, scope: !12825, inlinedAt: !12829)
!12841 = !DILocation(line: 1155, column: 3, scope: !12837, inlinedAt: !12840)
!12842 = !{i64 3519095}
!12843 = !DILocation(line: 62, column: 11, scope: !12825, inlinedAt: !12829)
!12844 = !DILocation(line: 102, column: 2, scope: !12845, inlinedAt: !12846)
!12845 = distinct !DISubprogram(name: "z_arm_exc_setup", scope: !7474, file: !7474, line: 97, type: !3089, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !2026)
!12846 = distinct !DILocation(line: 45, column: 2, scope: !12830, inlinedAt: !12832)
!12847 = !DILocation(line: 108, column: 2, scope: !12845, inlinedAt: !12846)
!12848 = !DILocation(line: 112, column: 2, scope: !12845, inlinedAt: !12846)
!12849 = !DILocation(line: 113, column: 2, scope: !12845, inlinedAt: !12846)
!12850 = !DILocation(line: 114, column: 2, scope: !12845, inlinedAt: !12846)
!12851 = !DILocation(line: 116, column: 2, scope: !12845, inlinedAt: !12846)
!12852 = !DILocation(line: 123, column: 13, scope: !12845, inlinedAt: !12846)
!12853 = !DILocation(line: 46, column: 2, scope: !12830, inlinedAt: !12832)
!12854 = !DILocation(line: 47, column: 2, scope: !12830, inlinedAt: !12832)
!12855 = !DILocation(line: 174, column: 12, scope: !12856, inlinedAt: !12857)
!12856 = distinct !DISubprogram(name: "z_arm_clear_faults", scope: !7474, file: !7474, line: 169, type: !3089, scopeLine: 170, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !2026)
!12857 = distinct !DILocation(line: 48, column: 2, scope: !12830, inlinedAt: !12832)
!12858 = !DILocation(line: 179, column: 12, scope: !12856, inlinedAt: !12857)
!12859 = !DILocation(line: 50, column: 2, scope: !12830, inlinedAt: !12832)
!12860 = !DILocation(line: 57, column: 2, scope: !12830, inlinedAt: !12832)
!12861 = !DILocation(line: 518, column: 2, scope: !12820)
!12862 = !DILocation(line: 518, column: 18, scope: !12820)
!12863 = !DILocation(line: 520, column: 2, scope: !12820)
!12864 = !DILocation(line: 523, column: 2, scope: !12820)
!12865 = !DILocation(line: 526, column: 2, scope: !12820)
!12866 = !DILocation(line: 527, column: 2, scope: !12820)
!12867 = !DILocation(line: 543, column: 24, scope: !12820)
!12868 = !DILocation(line: 543, column: 2, scope: !12820)
!12869 = !DILocation(line: 0, scope: !2058)
!12870 = !DILocation(line: 246, column: 15, scope: !2076)
!12871 = !DILocation(line: 246, column: 36, scope: !2075)
!12872 = !DILocation(line: 246, column: 2, scope: !2076)
!12873 = !DILocation(line: 247, column: 37, scope: !2074)
!12874 = !DILocation(line: 0, scope: !2074)
!12875 = !DILocation(line: 248, column: 19, scope: !2074)
!12876 = !DILocation(line: 248, column: 12, scope: !2074)
!12877 = !DILocation(line: 250, column: 11, scope: !12878)
!12878 = distinct !DILexicalBlock(scope: !2074, file: !1825, line: 250, column: 7)
!12879 = !DILocation(line: 250, column: 7, scope: !2074)
!12880 = !DILocation(line: 254, column: 11, scope: !12881)
!12881 = distinct !DILexicalBlock(scope: !12882, file: !1825, line: 254, column: 8)
!12882 = distinct !DILexicalBlock(scope: !12878, file: !1825, line: 250, column: 20)
!12883 = !DILocation(line: 254, column: 8, scope: !12882)
!12884 = !DILocation(line: 255, column: 9, scope: !12885)
!12885 = distinct !DILexicalBlock(scope: !12881, file: !1825, line: 254, column: 17)
!12886 = !DILocation(line: 258, column: 9, scope: !12885)
!12887 = !DILocation(line: 261, column: 28, scope: !12885)
!12888 = !DILocation(line: 261, column: 10, scope: !12885)
!12889 = !DILocation(line: 261, column: 17, scope: !12885)
!12890 = !DILocation(line: 261, column: 26, scope: !12885)
!12891 = !DILocation(line: 262, column: 4, scope: !12885)
!12892 = !DILocation(line: 263, column: 9, scope: !12882)
!12893 = !DILocation(line: 263, column: 16, scope: !12882)
!12894 = !DILocation(line: 263, column: 28, scope: !12882)
!12895 = !DILocation(line: 264, column: 3, scope: !12882)
!12896 = !DILocation(line: 246, column: 60, scope: !2075)
!12897 = distinct !{!12897, !12872, !12898}
!12898 = !DILocation(line: 265, column: 2, scope: !2076)
!12899 = !DILocation(line: 266, column: 1, scope: !2058)
!12900 = distinct !DISubprogram(name: "__NVIC_SetPriority", scope: !535, file: !535, line: 1814, type: !6462, scopeLine: 1815, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12901)
!12901 = !{!12902, !12903}
!12902 = !DILocalVariable(name: "IRQn", arg: 1, scope: !12900, file: !535, line: 1814, type: !791)
!12903 = !DILocalVariable(name: "priority", arg: 2, scope: !12900, file: !535, line: 1814, type: !110)
!12904 = !DILocation(line: 0, scope: !12900)
!12905 = !DILocation(line: 1822, column: 48, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12907, file: !535, line: 1821, column: 3)
!12907 = distinct !DILexicalBlock(scope: !12900, file: !535, line: 1816, column: 7)
!12908 = !DILocation(line: 1822, column: 32, scope: !12906)
!12909 = !DILocation(line: 1822, column: 40, scope: !12906)
!12910 = !DILocation(line: 1822, column: 5, scope: !12906)
!12911 = !DILocation(line: 1822, column: 46, scope: !12906)
!12912 = !DILocation(line: 1824, column: 1, scope: !12900)
!12913 = !DISubprogram(name: "z_arm_cpu_idle_init", scope: !12831, file: !12831, line: 32, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!12914 = distinct !DISubprogram(name: "z_dummy_thread_init", scope: !12915, file: !12915, line: 215, type: !12812, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12916)
!12915 = !DIFile(filename: "zephyr/kernel/include/kswap.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!12916 = !{!12917}
!12917 = !DILocalVariable(name: "dummy_thread", arg: 1, scope: !12914, file: !12915, line: 215, type: !1917)
!12918 = !DILocation(line: 0, scope: !12914)
!12919 = !DILocation(line: 217, column: 21, scope: !12914)
!12920 = !DILocation(line: 217, column: 34, scope: !12914)
!12921 = !DILocation(line: 221, column: 21, scope: !12914)
!12922 = !DILocation(line: 221, column: 34, scope: !12914)
!12923 = !DILocation(line: 223, column: 27, scope: !12914)
!12924 = !DILocation(line: 223, column: 33, scope: !12914)
!12925 = !DILocation(line: 224, column: 27, scope: !12914)
!12926 = !DILocation(line: 224, column: 32, scope: !12914)
!12927 = !DILocation(line: 232, column: 16, scope: !12914)
!12928 = !DILocation(line: 232, column: 30, scope: !12914)
!12929 = !DILocation(line: 239, column: 24, scope: !12914)
!12930 = !DILocation(line: 240, column: 1, scope: !12914)
!12931 = distinct !DISubprogram(name: "prepare_multithreading", scope: !1825, file: !1825, line: 399, type: !12932, scopeLine: 400, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12934)
!12932 = !DISubroutineType(types: !12933)
!12933 = !{!285}
!12934 = !{!12935}
!12935 = !DILocalVariable(name: "stack_ptr", scope: !12931, file: !1825, line: 401, type: !285)
!12936 = !DILocation(line: 404, column: 2, scope: !12931)
!12937 = !DILocation(line: 416, column: 24, scope: !12931)
!12938 = !DILocation(line: 418, column: 14, scope: !12931)
!12939 = !DILocation(line: 0, scope: !12931)
!12940 = !DILocation(line: 423, column: 2, scope: !12931)
!12941 = !DILocation(line: 424, column: 2, scope: !12931)
!12942 = !DILocation(line: 426, column: 2, scope: !12931)
!12943 = !DILocation(line: 428, column: 2, scope: !12931)
!12944 = distinct !DISubprogram(name: "switch_to_main_thread", scope: !1825, file: !1825, line: 432, type: !12945, scopeLine: 433, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12947)
!12945 = !DISubroutineType(types: !12946)
!12946 = !{null, !285}
!12947 = !{!12948}
!12948 = !DILocalVariable(name: "stack_ptr", arg: 1, scope: !12944, file: !1825, line: 432, type: !285)
!12949 = !DILocation(line: 0, scope: !12944)
!12950 = !DILocation(line: 435, column: 2, scope: !12944)
!12951 = !DILocation(line: 445, column: 2, scope: !12944)
!12952 = distinct !DISubprogram(name: "bg_thread_main", scope: !1825, file: !1825, line: 277, type: !3201, scopeLine: 278, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1821, retainedNodes: !12953)
!12953 = !{!12954, !12955, !12956}
!12954 = !DILocalVariable(name: "unused1", arg: 1, scope: !12952, file: !1825, line: 277, type: !107)
!12955 = !DILocalVariable(name: "unused2", arg: 2, scope: !12952, file: !1825, line: 277, type: !107)
!12956 = !DILocalVariable(name: "unused3", arg: 3, scope: !12952, file: !1825, line: 277, type: !107)
!12957 = !DILocation(line: 0, scope: !12952)
!12958 = !DILocation(line: 291, column: 20, scope: !12952)
!12959 = !DILocation(line: 293, column: 2, scope: !12952)
!12960 = !DILocation(line: 297, column: 2, scope: !12952)
!12961 = !DILocation(line: 305, column: 2, scope: !12952)
!12962 = !DILocation(line: 307, column: 2, scope: !12952)
!12963 = !DILocation(line: 330, column: 8, scope: !12952)
!12964 = !DILocation(line: 333, column: 34, scope: !12952)
!12965 = !DILocation(line: 339, column: 1, scope: !12952)
!12966 = distinct !DISubprogram(name: "k_thread_foreach", scope: !2087, file: !2087, line: 45, type: !12967, scopeLine: 46, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !12975)
!12967 = !DISubroutineType(types: !12968)
!12968 = !{null, !12969, !107}
!12969 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_user_cb_t", file: !118, line: 103, baseType: !12970)
!12970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12971, size: 32)
!12971 = !DISubroutineType(types: !12972)
!12972 = !{null, !12973, !107}
!12973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12974, size: 32)
!12974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2092)
!12975 = !{!12976, !12977}
!12976 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12966, file: !2087, line: 45, type: !12969)
!12977 = !DILocalVariable(name: "user_data", arg: 2, scope: !12966, file: !2087, line: 45, type: !107)
!12978 = !DILocation(line: 0, scope: !12966)
!12979 = !DILocation(line: 71, column: 1, scope: !12966)
!12980 = distinct !DISubprogram(name: "k_thread_foreach_unlocked", scope: !2087, file: !2087, line: 73, type: !12967, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !12981)
!12981 = !{!12982, !12983}
!12982 = !DILocalVariable(name: "user_cb", arg: 1, scope: !12980, file: !2087, line: 73, type: !12969)
!12983 = !DILocalVariable(name: "user_data", arg: 2, scope: !12980, file: !2087, line: 73, type: !107)
!12984 = !DILocation(line: 0, scope: !12980)
!12985 = !DILocation(line: 95, column: 1, scope: !12980)
!12986 = distinct !DISubprogram(name: "k_is_in_isr", scope: !2087, file: !2087, line: 97, type: !7475, scopeLine: 98, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !2026)
!12987 = !DILocation(line: 1031, column: 3, scope: !12988, inlinedAt: !12991)
!12988 = distinct !DISubprogram(name: "__get_IPSR", scope: !6422, file: !6422, line: 1027, type: !6509, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !12989)
!12989 = !{!12990}
!12990 = !DILocalVariable(name: "result", scope: !12988, file: !6422, line: 1029, type: !110)
!12991 = distinct !DILocation(line: 48, column: 10, scope: !12992, inlinedAt: !12993)
!12992 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7474, file: !7474, line: 46, type: !7475, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !2026)
!12993 = distinct !DILocation(line: 99, column: 9, scope: !12986)
!12994 = !{i64 3524746}
!12995 = !DILocation(line: 0, scope: !12988, inlinedAt: !12991)
!12996 = !DILocation(line: 48, column: 9, scope: !12992, inlinedAt: !12993)
!12997 = !DILocation(line: 99, column: 2, scope: !12986)
!12998 = distinct !DISubprogram(name: "z_thread_essential_set", scope: !2087, file: !2087, line: 106, type: !3089, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !2026)
!12999 = !DILocation(line: 108, column: 2, scope: !12998)
!13000 = !DILocation(line: 108, column: 17, scope: !12998)
!13001 = !DILocation(line: 108, column: 30, scope: !12998)
!13002 = !DILocation(line: 109, column: 1, scope: !12998)
!13003 = distinct !DISubprogram(name: "z_thread_essential_clear", scope: !2087, file: !2087, line: 116, type: !3089, scopeLine: 117, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !2026)
!13004 = !DILocation(line: 118, column: 2, scope: !13003)
!13005 = !DILocation(line: 118, column: 17, scope: !13003)
!13006 = !DILocation(line: 118, column: 30, scope: !13003)
!13007 = !DILocation(line: 119, column: 1, scope: !13003)
!13008 = distinct !DISubprogram(name: "z_is_thread_essential", scope: !2087, file: !2087, line: 126, type: !7475, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !2026)
!13009 = !DILocation(line: 128, column: 10, scope: !13008)
!13010 = !DILocation(line: 128, column: 25, scope: !13008)
!13011 = !DILocation(line: 128, column: 38, scope: !13008)
!13012 = !DILocation(line: 128, column: 53, scope: !13008)
!13013 = !DILocation(line: 128, column: 2, scope: !13008)
!13014 = distinct !DISubprogram(name: "z_impl_k_thread_name_set", scope: !2087, file: !2087, line: 187, type: !13015, scopeLine: 188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13017)
!13015 = !DISubroutineType(types: !13016)
!13016 = !{!109, !2091, !279}
!13017 = !{!13018, !13019}
!13018 = !DILocalVariable(name: "thread", arg: 1, scope: !13014, file: !2087, line: 187, type: !2091)
!13019 = !DILocalVariable(name: "value", arg: 2, scope: !13014, file: !2087, line: 187, type: !279)
!13020 = !DILocation(line: 0, scope: !13014)
!13021 = !DILocation(line: 190, column: 13, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13014, file: !2087, line: 190, column: 6)
!13023 = !DILocation(line: 190, column: 6, scope: !13014)
!13024 = !DILocation(line: 194, column: 10, scope: !13014)
!13025 = !DILocation(line: 194, column: 2, scope: !13014)
!13026 = !DILocation(line: 195, column: 2, scope: !13014)
!13027 = !DILocation(line: 195, column: 47, scope: !13014)
!13028 = !DILocation(line: 199, column: 2, scope: !13014)
!13029 = distinct !DISubprogram(name: "k_thread_name_get", scope: !2087, file: !2087, line: 238, type: !13030, scopeLine: 239, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13032)
!13030 = !DISubroutineType(types: !13031)
!13031 = !{!279, !2091}
!13032 = !{!13033}
!13033 = !DILocalVariable(name: "thread", arg: 1, scope: !13029, file: !2087, line: 238, type: !2091)
!13034 = !DILocation(line: 0, scope: !13029)
!13035 = !DILocation(line: 241, column: 23, scope: !13029)
!13036 = !DILocation(line: 241, column: 2, scope: !13029)
!13037 = distinct !DISubprogram(name: "z_impl_k_thread_name_copy", scope: !2087, file: !2087, line: 248, type: !13038, scopeLine: 249, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13040)
!13038 = !DISubroutineType(types: !13039)
!13039 = !{!109, !2090, !285, !232}
!13040 = !{!13041, !13042, !13043}
!13041 = !DILocalVariable(name: "thread", arg: 1, scope: !13037, file: !2087, line: 248, type: !2090)
!13042 = !DILocalVariable(name: "buf", arg: 2, scope: !13037, file: !2087, line: 248, type: !285)
!13043 = !DILocalVariable(name: "size", arg: 3, scope: !13037, file: !2087, line: 248, type: !232)
!13044 = !DILocation(line: 0, scope: !13037)
!13045 = !DILocation(line: 251, column: 15, scope: !13037)
!13046 = !DILocation(line: 251, column: 2, scope: !13037)
!13047 = !DILocation(line: 252, column: 2, scope: !13037)
!13048 = !DILocation(line: 0, scope: !2086)
!13049 = !DILocation(line: 281, column: 11, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !2086, file: !2087, line: 281, column: 6)
!13051 = !DILocation(line: 281, column: 20, scope: !13050)
!13052 = !DILocation(line: 275, column: 45, scope: !2086)
!13053 = !DILocation(line: 285, column: 10, scope: !2086)
!13054 = !DILocation(line: 0, scope: !2210)
!13055 = !DILocation(line: 293, column: 39, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !2210, file: !2087, line: 293, column: 2)
!13057 = !DILocation(line: 293, column: 2, scope: !2210)
!13058 = !DILocation(line: 273, column: 14, scope: !2086)
!13059 = !DILocation(line: 309, column: 2, scope: !2086)
!13060 = !DILocation(line: 309, column: 11, scope: !2086)
!13061 = !DILocation(line: 311, column: 2, scope: !2086)
!13062 = !DILocation(line: 293, column: 26, scope: !13056)
!13063 = !DILocation(line: 294, column: 9, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !13056, file: !2087, line: 293, column: 54)
!13065 = !DILocation(line: 295, column: 21, scope: !13066)
!13066 = distinct !DILexicalBlock(scope: !13064, file: !2087, line: 295, column: 7)
!13067 = !DILocation(line: 295, column: 28, scope: !13066)
!13068 = !DILocation(line: 295, column: 7, scope: !13064)
!13069 = !DILocation(line: 299, column: 25, scope: !13064)
!13070 = !DILocation(line: 299, column: 41, scope: !13064)
!13071 = !DILocation(line: 300, column: 7, scope: !13064)
!13072 = !DILocation(line: 300, column: 26, scope: !13064)
!13073 = !DILocation(line: 299, column: 10, scope: !13064)
!13074 = !DILocation(line: 299, column: 7, scope: !13064)
!13075 = !DILocation(line: 302, column: 16, scope: !13064)
!13076 = !DILocation(line: 304, column: 20, scope: !13077)
!13077 = distinct !DILexicalBlock(scope: !13064, file: !2087, line: 304, column: 7)
!13078 = !DILocation(line: 304, column: 7, scope: !13064)
!13079 = !DILocation(line: 305, column: 26, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13077, file: !2087, line: 304, column: 26)
!13081 = !DILocation(line: 305, column: 42, scope: !13080)
!13082 = !DILocation(line: 305, column: 11, scope: !13080)
!13083 = !DILocation(line: 305, column: 8, scope: !13080)
!13084 = !DILocation(line: 306, column: 3, scope: !13080)
!13085 = !DILocation(line: 293, column: 50, scope: !13056)
!13086 = !DILocation(line: 312, column: 1, scope: !2086)
!13087 = distinct !DISubprogram(name: "copy_bytes", scope: !2087, file: !2087, line: 261, type: !13088, scopeLine: 262, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13090)
!13088 = !DISubroutineType(types: !13089)
!13089 = !{!232, !285, !232, !279, !232}
!13090 = !{!13091, !13092, !13093, !13094, !13095}
!13091 = !DILocalVariable(name: "dest", arg: 1, scope: !13087, file: !2087, line: 261, type: !285)
!13092 = !DILocalVariable(name: "dest_size", arg: 2, scope: !13087, file: !2087, line: 261, type: !232)
!13093 = !DILocalVariable(name: "src", arg: 3, scope: !13087, file: !2087, line: 261, type: !279)
!13094 = !DILocalVariable(name: "src_size", arg: 4, scope: !13087, file: !2087, line: 261, type: !232)
!13095 = !DILocalVariable(name: "bytes_to_copy", scope: !13087, file: !2087, line: 263, type: !232)
!13096 = !DILocation(line: 0, scope: !13087)
!13097 = !DILocation(line: 265, column: 18, scope: !13087)
!13098 = !DILocation(line: 266, column: 2, scope: !13087)
!13099 = !DILocation(line: 268, column: 2, scope: !13087)
!13100 = distinct !DISubprogram(name: "z_impl_k_thread_start", scope: !2087, file: !2087, line: 383, type: !13101, scopeLine: 384, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13103)
!13101 = !DISubroutineType(types: !13102)
!13102 = !{null, !2091}
!13103 = !{!13104}
!13104 = !DILocalVariable(name: "thread", arg: 1, scope: !13100, file: !2087, line: 383, type: !2091)
!13105 = !DILocation(line: 0, scope: !13100)
!13106 = !DILocation(line: 387, column: 2, scope: !13100)
!13107 = !DILocation(line: 388, column: 1, scope: !13100)
!13108 = distinct !DISubprogram(name: "z_setup_new_thread", scope: !2087, file: !2087, line: 528, type: !13109, scopeLine: 533, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13116)
!13109 = !DISubroutineType(types: !13110)
!13110 = !{!285, !2091, !13111, !232, !3357, !107, !107, !107, !109, !110, !279}
!13111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13112, size: 32)
!13112 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !3356, line: 44, baseType: !13113)
!13113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !145, line: 47, size: 8, elements: !13114)
!13114 = !{!13115}
!13115 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13113, file: !145, line: 48, baseType: !148, size: 8)
!13116 = !{!13117, !13118, !13119, !13120, !13121, !13122, !13123, !13124, !13125, !13126, !13127}
!13117 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13108, file: !2087, line: 528, type: !2091)
!13118 = !DILocalVariable(name: "stack", arg: 2, scope: !13108, file: !2087, line: 529, type: !13111)
!13119 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13108, file: !2087, line: 529, type: !232)
!13120 = !DILocalVariable(name: "entry", arg: 4, scope: !13108, file: !2087, line: 530, type: !3357)
!13121 = !DILocalVariable(name: "p1", arg: 5, scope: !13108, file: !2087, line: 531, type: !107)
!13122 = !DILocalVariable(name: "p2", arg: 6, scope: !13108, file: !2087, line: 531, type: !107)
!13123 = !DILocalVariable(name: "p3", arg: 7, scope: !13108, file: !2087, line: 531, type: !107)
!13124 = !DILocalVariable(name: "prio", arg: 8, scope: !13108, file: !2087, line: 532, type: !109)
!13125 = !DILocalVariable(name: "options", arg: 9, scope: !13108, file: !2087, line: 532, type: !110)
!13126 = !DILocalVariable(name: "name", arg: 10, scope: !13108, file: !2087, line: 532, type: !279)
!13127 = !DILocalVariable(name: "stack_ptr", scope: !13108, file: !2087, line: 534, type: !285)
!13128 = !DILocation(line: 0, scope: !13108)
!13129 = !DILocation(line: 536, column: 2, scope: !13130)
!13130 = distinct !DILexicalBlock(scope: !13131, file: !2087, line: 536, column: 2)
!13131 = distinct !DILexicalBlock(scope: !13132, file: !2087, line: 536, column: 2)
!13132 = distinct !DILexicalBlock(scope: !13108, file: !2087, line: 536, column: 2)
!13133 = !DILocation(line: 536, column: 2, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13130, file: !2087, line: 536, column: 2)
!13135 = !DILocation(line: 550, column: 28, scope: !13108)
!13136 = !DILocation(line: 550, column: 2, scope: !13108)
!13137 = !DILocation(line: 553, column: 34, scope: !13108)
!13138 = !DILocation(line: 553, column: 2, scope: !13108)
!13139 = !DILocation(line: 554, column: 14, scope: !13108)
!13140 = !DILocation(line: 564, column: 2, scope: !13108)
!13141 = !DILocation(line: 567, column: 14, scope: !13108)
!13142 = !DILocation(line: 567, column: 24, scope: !13108)
!13143 = !DILocation(line: 594, column: 11, scope: !13144)
!13144 = distinct !DILexicalBlock(scope: !13108, file: !2087, line: 594, column: 6)
!13145 = !DILocation(line: 0, scope: !13144)
!13146 = !DILocation(line: 594, column: 6, scope: !13108)
!13147 = !DILocation(line: 595, column: 3, scope: !13148)
!13148 = distinct !DILexicalBlock(scope: !13144, file: !2087, line: 594, column: 20)
!13149 = !DILocation(line: 598, column: 3, scope: !13148)
!13150 = !DILocation(line: 598, column: 52, scope: !13148)
!13151 = !DILocation(line: 599, column: 2, scope: !13148)
!13152 = !DILocation(line: 600, column: 23, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13144, file: !2087, line: 599, column: 9)
!13154 = !DILocation(line: 612, column: 7, scope: !13155)
!13155 = distinct !DILexicalBlock(scope: !13108, file: !2087, line: 612, column: 6)
!13156 = !DILocation(line: 612, column: 6, scope: !13108)
!13157 = !DILocation(line: 627, column: 40, scope: !13108)
!13158 = !DILocation(line: 637, column: 2, scope: !13108)
!13159 = !DILocation(line: 613, column: 15, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13155, file: !2087, line: 612, column: 17)
!13161 = !DILocation(line: 613, column: 29, scope: !13160)
!13162 = !DILocation(line: 638, column: 1, scope: !13108)
!13163 = distinct !DISubprogram(name: "z_is_idle_thread_entry", scope: !12811, file: !12811, line: 78, type: !13164, scopeLine: 79, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13166)
!13164 = !DISubroutineType(types: !13165)
!13165 = !{!347, !107}
!13166 = !{!13167}
!13167 = !DILocalVariable(name: "entry_point", arg: 1, scope: !13163, file: !12811, line: 78, type: !107)
!13168 = !DILocation(line: 0, scope: !13163)
!13169 = !DILocation(line: 80, column: 21, scope: !13163)
!13170 = !DILocation(line: 80, column: 2, scope: !13163)
!13171 = distinct !DISubprogram(name: "z_waitq_init", scope: !13172, file: !13172, line: 47, type: !13173, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13175)
!13172 = !DIFile(filename: "zephyr/include/zephyr/wait_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13173 = !DISubroutineType(types: !13174)
!13174 = !{null, !2122}
!13175 = !{!13176}
!13176 = !DILocalVariable(name: "w", arg: 1, scope: !13171, file: !13172, line: 47, type: !2122)
!13177 = !DILocation(line: 0, scope: !13171)
!13178 = !DILocation(line: 49, column: 21, scope: !13171)
!13179 = !DILocation(line: 49, column: 2, scope: !13171)
!13180 = !DILocation(line: 50, column: 1, scope: !13171)
!13181 = distinct !DISubprogram(name: "z_init_thread_base", scope: !2087, file: !2087, line: 791, type: !13182, scopeLine: 793, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13185)
!13182 = !DISubroutineType(types: !13183)
!13183 = !{null, !13184, !109, !110, !32}
!13184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 32)
!13185 = !{!13186, !13187, !13188, !13189}
!13186 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13181, file: !2087, line: 791, type: !13184)
!13187 = !DILocalVariable(name: "priority", arg: 2, scope: !13181, file: !2087, line: 791, type: !109)
!13188 = !DILocalVariable(name: "initial_state", arg: 3, scope: !13181, file: !2087, line: 792, type: !110)
!13189 = !DILocalVariable(name: "options", arg: 4, scope: !13181, file: !2087, line: 792, type: !32)
!13190 = !DILocation(line: 0, scope: !13181)
!13191 = !DILocation(line: 795, column: 15, scope: !13181)
!13192 = !DILocation(line: 795, column: 25, scope: !13181)
!13193 = !DILocation(line: 796, column: 30, scope: !13181)
!13194 = !DILocation(line: 796, column: 15, scope: !13181)
!13195 = !DILocation(line: 796, column: 28, scope: !13181)
!13196 = !DILocation(line: 797, column: 30, scope: !13181)
!13197 = !DILocation(line: 797, column: 15, scope: !13181)
!13198 = !DILocation(line: 797, column: 28, scope: !13181)
!13199 = !DILocation(line: 799, column: 22, scope: !13181)
!13200 = !DILocation(line: 799, column: 15, scope: !13181)
!13201 = !DILocation(line: 799, column: 20, scope: !13181)
!13202 = !DILocation(line: 801, column: 15, scope: !13181)
!13203 = !DILocation(line: 801, column: 28, scope: !13181)
!13204 = !DILocation(line: 814, column: 2, scope: !13181)
!13205 = !DILocation(line: 815, column: 1, scope: !13181)
!13206 = distinct !DISubprogram(name: "setup_thread_stack", scope: !2087, file: !2087, line: 449, type: !13207, scopeLine: 451, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13209)
!13207 = !DISubroutineType(types: !13208)
!13208 = !{!285, !2091, !13111, !232}
!13209 = !{!13210, !13211, !13212, !13213, !13214, !13215, !13216, !13217}
!13210 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13206, file: !2087, line: 449, type: !2091)
!13211 = !DILocalVariable(name: "stack", arg: 2, scope: !13206, file: !2087, line: 450, type: !13111)
!13212 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13206, file: !2087, line: 450, type: !232)
!13213 = !DILocalVariable(name: "stack_obj_size", scope: !13206, file: !2087, line: 452, type: !232)
!13214 = !DILocalVariable(name: "stack_buf_size", scope: !13206, file: !2087, line: 452, type: !232)
!13215 = !DILocalVariable(name: "stack_ptr", scope: !13206, file: !2087, line: 453, type: !285)
!13216 = !DILocalVariable(name: "stack_buf_start", scope: !13206, file: !2087, line: 453, type: !285)
!13217 = !DILocalVariable(name: "delta", scope: !13206, file: !2087, line: 454, type: !232)
!13218 = !DILocation(line: 0, scope: !13206)
!13219 = !DILocation(line: 465, column: 20, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13206, file: !2087, line: 463, column: 2)
!13221 = !DILocation(line: 466, column: 21, scope: !13220)
!13222 = !DILocation(line: 473, column: 28, scope: !13206)
!13223 = !DILocation(line: 514, column: 33, scope: !13206)
!13224 = !DILocation(line: 514, column: 25, scope: !13206)
!13225 = !DILocation(line: 514, column: 31, scope: !13206)
!13226 = !DILocation(line: 515, column: 25, scope: !13206)
!13227 = !DILocation(line: 515, column: 30, scope: !13206)
!13228 = !DILocation(line: 516, column: 25, scope: !13206)
!13229 = !DILocation(line: 516, column: 31, scope: !13206)
!13230 = !DILocation(line: 520, column: 2, scope: !13206)
!13231 = distinct !DISubprogram(name: "Z_KERNEL_STACK_BUFFER", scope: !145, file: !145, line: 331, type: !13232, scopeLine: 332, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13234)
!13232 = !DISubroutineType(types: !13233)
!13233 = !{!285, !13111}
!13234 = !{!13235}
!13235 = !DILocalVariable(name: "sym", arg: 1, scope: !13231, file: !145, line: 331, type: !13111)
!13236 = !DILocation(line: 0, scope: !13231)
!13237 = !DILocation(line: 333, column: 21, scope: !13231)
!13238 = !DILocation(line: 333, column: 2, scope: !13231)
!13239 = distinct !DISubprogram(name: "z_init_thread_timeout", scope: !13240, file: !13240, line: 40, type: !13241, scopeLine: 41, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13243)
!13240 = !DIFile(filename: "zephyr/include/zephyr/timeout_q.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13241 = !DISubroutineType(types: !13242)
!13242 = !{null, !13184}
!13243 = !{!13244}
!13244 = !DILocalVariable(name: "thread_base", arg: 1, scope: !13239, file: !13240, line: 40, type: !13184)
!13245 = !DILocation(line: 0, scope: !13239)
!13246 = !DILocation(line: 42, column: 31, scope: !13239)
!13247 = !DILocation(line: 42, column: 2, scope: !13239)
!13248 = !DILocation(line: 43, column: 1, scope: !13239)
!13249 = distinct !DISubprogram(name: "z_init_timeout", scope: !13240, file: !13240, line: 25, type: !2148, scopeLine: 26, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13250)
!13250 = !{!13251}
!13251 = !DILocalVariable(name: "to", arg: 1, scope: !13249, file: !13240, line: 25, type: !2150)
!13252 = !DILocation(line: 0, scope: !13249)
!13253 = !DILocation(line: 27, column: 22, scope: !13249)
!13254 = !DILocation(line: 27, column: 2, scope: !13249)
!13255 = !DILocation(line: 28, column: 1, scope: !13249)
!13256 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !13257, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13259)
!13257 = !DISubroutineType(types: !13258)
!13258 = !{null, !2197}
!13259 = !{!13260}
!13260 = !DILocalVariable(name: "node", arg: 1, scope: !13256, file: !127, line: 211, type: !2197)
!13261 = !DILocation(line: 0, scope: !13256)
!13262 = !DILocation(line: 213, column: 8, scope: !13256)
!13263 = !DILocation(line: 213, column: 13, scope: !13256)
!13264 = !DILocation(line: 214, column: 8, scope: !13256)
!13265 = !DILocation(line: 214, column: 13, scope: !13256)
!13266 = !DILocation(line: 215, column: 1, scope: !13256)
!13267 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13268, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13271)
!13268 = !DISubroutineType(types: !13269)
!13269 = !{null, !13270}
!13270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 32)
!13271 = !{!13272}
!13272 = !DILocalVariable(name: "list", arg: 1, scope: !13267, file: !127, line: 197, type: !13270)
!13273 = !DILocation(line: 0, scope: !13267)
!13274 = !DILocation(line: 199, column: 8, scope: !13267)
!13275 = !DILocation(line: 199, column: 13, scope: !13267)
!13276 = !DILocation(line: 200, column: 8, scope: !13267)
!13277 = !DILocation(line: 200, column: 13, scope: !13267)
!13278 = !DILocation(line: 201, column: 1, scope: !13267)
!13279 = distinct !DISubprogram(name: "z_impl_k_thread_create", scope: !2087, file: !2087, line: 641, type: !13280, scopeLine: 646, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13286)
!13280 = !DISubroutineType(types: !13281)
!13281 = !{!2090, !2091, !13111, !232, !3357, !107, !107, !107, !109, !110, !13282}
!13282 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13283)
!13283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13284)
!13284 = !{!13285}
!13285 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13283, file: !104, line: 66, baseType: !103, size: 64)
!13286 = !{!13287, !13288, !13289, !13290, !13291, !13292, !13293, !13294, !13295, !13296}
!13287 = !DILocalVariable(name: "new_thread", arg: 1, scope: !13279, file: !2087, line: 641, type: !2091)
!13288 = !DILocalVariable(name: "stack", arg: 2, scope: !13279, file: !2087, line: 642, type: !13111)
!13289 = !DILocalVariable(name: "stack_size", arg: 3, scope: !13279, file: !2087, line: 643, type: !232)
!13290 = !DILocalVariable(name: "entry", arg: 4, scope: !13279, file: !2087, line: 643, type: !3357)
!13291 = !DILocalVariable(name: "p1", arg: 5, scope: !13279, file: !2087, line: 644, type: !107)
!13292 = !DILocalVariable(name: "p2", arg: 6, scope: !13279, file: !2087, line: 644, type: !107)
!13293 = !DILocalVariable(name: "p3", arg: 7, scope: !13279, file: !2087, line: 644, type: !107)
!13294 = !DILocalVariable(name: "prio", arg: 8, scope: !13279, file: !2087, line: 645, type: !109)
!13295 = !DILocalVariable(name: "options", arg: 9, scope: !13279, file: !2087, line: 645, type: !110)
!13296 = !DILocalVariable(name: "delay", arg: 10, scope: !13279, file: !2087, line: 645, type: !13282)
!13297 = !DILocation(line: 0, scope: !13279)
!13298 = !DILocation(line: 1031, column: 3, scope: !12988, inlinedAt: !13299)
!13299 = distinct !DILocation(line: 48, column: 10, scope: !12992, inlinedAt: !13300)
!13300 = distinct !DILocation(line: 647, column: 2, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13302, file: !2087, line: 647, column: 2)
!13302 = distinct !DILexicalBlock(scope: !13279, file: !2087, line: 647, column: 2)
!13303 = !DILocation(line: 0, scope: !12988, inlinedAt: !13299)
!13304 = !DILocation(line: 48, column: 9, scope: !12992, inlinedAt: !13300)
!13305 = !DILocation(line: 647, column: 2, scope: !13302)
!13306 = !DILocation(line: 647, column: 2, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13301, file: !2087, line: 647, column: 2)
!13308 = !DILocation(line: 649, column: 2, scope: !13279)
!13309 = !DILocation(line: 652, column: 7, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13279, file: !2087, line: 652, column: 6)
!13311 = !DILocation(line: 652, column: 6, scope: !13279)
!13312 = !DILocation(line: 653, column: 3, scope: !13313)
!13313 = distinct !DILexicalBlock(scope: !13310, file: !2087, line: 652, column: 39)
!13314 = !DILocation(line: 654, column: 2, scope: !13313)
!13315 = !DILocation(line: 656, column: 2, scope: !13279)
!13316 = distinct !DISubprogram(name: "schedule_new_thread", scope: !2087, file: !2087, line: 401, type: !13317, scopeLine: 402, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13319)
!13317 = !DISubroutineType(types: !13318)
!13318 = !{null, !2091, !13282}
!13319 = !{!13320, !13321}
!13320 = !DILocalVariable(name: "thread", arg: 1, scope: !13316, file: !2087, line: 401, type: !2091)
!13321 = !DILocalVariable(name: "delay", arg: 2, scope: !13316, file: !2087, line: 401, type: !13282)
!13322 = !DILocation(line: 0, scope: !13316)
!13323 = !DILocation(line: 404, column: 6, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13316, file: !2087, line: 404, column: 6)
!13325 = !DILocation(line: 404, column: 6, scope: !13316)
!13326 = !DILocation(line: 405, column: 3, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13324, file: !2087, line: 404, column: 38)
!13328 = !DILocation(line: 406, column: 2, scope: !13327)
!13329 = !DILocation(line: 407, column: 3, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13324, file: !2087, line: 406, column: 9)
!13331 = !DILocation(line: 413, column: 1, scope: !13316)
!13332 = distinct !DISubprogram(name: "k_thread_start", scope: !3231, file: !3231, line: 205, type: !13333, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13335)
!13333 = !DISubroutineType(types: !13334)
!13334 = !{null, !2090}
!13335 = !{!13336}
!13336 = !DILocalVariable(name: "thread", arg: 1, scope: !13332, file: !3231, line: 205, type: !2090)
!13337 = !DILocation(line: 0, scope: !13332)
!13338 = !DILocation(line: 214, column: 2, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13332, file: !3231, line: 214, column: 2)
!13340 = !{i64 2154775315}
!13341 = !DILocation(line: 215, column: 2, scope: !13332)
!13342 = !DILocation(line: 216, column: 1, scope: !13332)
!13343 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13240, file: !13240, line: 47, type: !13317, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13344)
!13344 = !{!13345, !13346}
!13345 = !DILocalVariable(name: "thread", arg: 1, scope: !13343, file: !13240, line: 47, type: !2091)
!13346 = !DILocalVariable(name: "ticks", arg: 2, scope: !13343, file: !13240, line: 47, type: !13282)
!13347 = !DILocation(line: 0, scope: !13343)
!13348 = !DILocation(line: 49, column: 30, scope: !13343)
!13349 = !DILocation(line: 49, column: 2, scope: !13343)
!13350 = !DILocation(line: 50, column: 1, scope: !13343)
!13351 = distinct !DISubprogram(name: "z_init_static_threads", scope: !2087, file: !2087, line: 748, type: !3089, scopeLine: 749, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13352)
!13352 = !{!13353, !13371}
!13353 = !DILocalVariable(name: "thread_data", scope: !13354, file: !2087, line: 750, type: !13355)
!13354 = distinct !DILexicalBlock(scope: !13351, file: !2087, line: 750, column: 2)
!13355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13356, size: 32)
!13356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !118, line: 620, size: 384, elements: !13357)
!13357 = !{!13358, !13359, !13360, !13361, !13362, !13363, !13364, !13365, !13366, !13367, !13368, !13370}
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !13356, file: !118, line: 621, baseType: !2091, size: 32)
!13359 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !13356, file: !118, line: 622, baseType: !13111, size: 32, offset: 32)
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !13356, file: !118, line: 623, baseType: !32, size: 32, offset: 64)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !13356, file: !118, line: 624, baseType: !3357, size: 32, offset: 96)
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !13356, file: !118, line: 625, baseType: !107, size: 32, offset: 128)
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !13356, file: !118, line: 626, baseType: !107, size: 32, offset: 160)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !13356, file: !118, line: 627, baseType: !107, size: 32, offset: 192)
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !13356, file: !118, line: 628, baseType: !109, size: 32, offset: 224)
!13366 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !13356, file: !118, line: 629, baseType: !110, size: 32, offset: 256)
!13367 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !13356, file: !118, line: 630, baseType: !765, size: 32, offset: 288)
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !13356, file: !118, line: 631, baseType: !13369, size: 32, offset: 320)
!13369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3089, size: 32)
!13370 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !13356, file: !118, line: 632, baseType: !279, size: 32, offset: 352)
!13371 = !DILocalVariable(name: "thread_data", scope: !13372, file: !2087, line: 781, type: !13355)
!13372 = distinct !DILexicalBlock(scope: !13351, file: !2087, line: 781, column: 2)
!13373 = !DILocation(line: 0, scope: !13354)
!13374 = !DILocation(line: 750, column: 2, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13376, file: !2087, line: 750, column: 2)
!13376 = distinct !DILexicalBlock(scope: !13377, file: !2087, line: 750, column: 2)
!13377 = distinct !DILexicalBlock(scope: !13354, file: !2087, line: 750, column: 2)
!13378 = !DILocation(line: 750, column: 2, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13380, file: !2087, line: 750, column: 2)
!13380 = distinct !DILexicalBlock(scope: !13375, file: !2087, line: 750, column: 2)
!13381 = !DILocation(line: 750, column: 2, scope: !13376)
!13382 = !DILocation(line: 750, column: 2, scope: !13354)
!13383 = !DILocation(line: 780, column: 2, scope: !13351)
!13384 = !DILocation(line: 0, scope: !13372)
!13385 = !DILocation(line: 781, column: 2, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13387, file: !2087, line: 781, column: 2)
!13387 = distinct !DILexicalBlock(scope: !13388, file: !2087, line: 781, column: 2)
!13388 = distinct !DILexicalBlock(scope: !13372, file: !2087, line: 781, column: 2)
!13389 = !DILocation(line: 752, column: 17, scope: !13390)
!13390 = distinct !DILexicalBlock(scope: !13377, file: !2087, line: 750, column: 38)
!13391 = !DILocation(line: 753, column: 17, scope: !13390)
!13392 = !DILocation(line: 754, column: 17, scope: !13390)
!13393 = !DILocation(line: 755, column: 17, scope: !13390)
!13394 = !DILocation(line: 756, column: 17, scope: !13390)
!13395 = !DILocation(line: 757, column: 17, scope: !13390)
!13396 = !DILocation(line: 758, column: 17, scope: !13390)
!13397 = !DILocation(line: 759, column: 17, scope: !13390)
!13398 = !DILocation(line: 760, column: 17, scope: !13390)
!13399 = !DILocation(line: 761, column: 17, scope: !13390)
!13400 = !DILocation(line: 751, column: 3, scope: !13390)
!13401 = !DILocation(line: 763, column: 16, scope: !13390)
!13402 = !DILocation(line: 763, column: 29, scope: !13390)
!13403 = !DILocation(line: 763, column: 39, scope: !13390)
!13404 = !DILocation(line: 750, column: 2, scope: !13377)
!13405 = !DILocation(line: 750, column: 2, scope: !13380)
!13406 = distinct !{!13406, !13382, !13407}
!13407 = !DILocation(line: 764, column: 2, scope: !13354)
!13408 = !DILocation(line: 781, column: 2, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13410, file: !2087, line: 781, column: 2)
!13410 = distinct !DILexicalBlock(scope: !13386, file: !2087, line: 781, column: 2)
!13411 = !DILocation(line: 781, column: 2, scope: !13387)
!13412 = !DILocation(line: 781, column: 2, scope: !13372)
!13413 = !DILocation(line: 787, column: 2, scope: !13351)
!13414 = !DILocation(line: 788, column: 1, scope: !13351)
!13415 = !DILocation(line: 782, column: 20, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13417, file: !2087, line: 782, column: 7)
!13417 = distinct !DILexicalBlock(scope: !13388, file: !2087, line: 781, column: 38)
!13418 = !DILocation(line: 782, column: 31, scope: !13416)
!13419 = !DILocation(line: 782, column: 7, scope: !13417)
!13420 = !DILocation(line: 783, column: 37, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13416, file: !2087, line: 782, column: 51)
!13422 = !DILocation(line: 784, column: 10, scope: !13421)
!13423 = !DILocation(line: 783, column: 4, scope: !13421)
!13424 = !DILocation(line: 785, column: 3, scope: !13421)
!13425 = !DILocation(line: 781, column: 2, scope: !13388)
!13426 = !DILocation(line: 781, column: 2, scope: !13410)
!13427 = distinct !{!13427, !13412, !13428}
!13428 = !DILocation(line: 786, column: 2, scope: !13372)
!13429 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !3272, file: !3272, line: 403, type: !3273, scopeLine: 404, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13430)
!13430 = !{!13431}
!13431 = !DILocalVariable(name: "t", arg: 1, scope: !13429, file: !3272, line: 403, type: !111)
!13432 = !DILocation(line: 0, scope: !13429)
!13433 = !DILocalVariable(name: "t", arg: 1, scope: !13434, file: !3272, line: 102, type: !111)
!13434 = distinct !DISubprogram(name: "z_tmcvt", scope: !3272, file: !3272, line: 102, type: !3280, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13435)
!13435 = !{!13433, !13436, !13437, !13438, !13439, !13440, !13441, !13442, !13443, !13444, !13445}
!13436 = !DILocalVariable(name: "from_hz", arg: 2, scope: !13434, file: !3272, line: 102, type: !110)
!13437 = !DILocalVariable(name: "to_hz", arg: 3, scope: !13434, file: !3272, line: 103, type: !110)
!13438 = !DILocalVariable(name: "const_hz", arg: 4, scope: !13434, file: !3272, line: 103, type: !347)
!13439 = !DILocalVariable(name: "result32", arg: 5, scope: !13434, file: !3272, line: 104, type: !347)
!13440 = !DILocalVariable(name: "round_up", arg: 6, scope: !13434, file: !3272, line: 104, type: !347)
!13441 = !DILocalVariable(name: "round_off", arg: 7, scope: !13434, file: !3272, line: 105, type: !347)
!13442 = !DILocalVariable(name: "mul_ratio", scope: !13434, file: !3272, line: 107, type: !347)
!13443 = !DILocalVariable(name: "div_ratio", scope: !13434, file: !3272, line: 109, type: !347)
!13444 = !DILocalVariable(name: "off", scope: !13434, file: !3272, line: 116, type: !111)
!13445 = !DILocalVariable(name: "rdivisor", scope: !13446, file: !3272, line: 119, type: !110)
!13446 = distinct !DILexicalBlock(scope: !13447, file: !3272, line: 118, column: 18)
!13447 = distinct !DILexicalBlock(scope: !13434, file: !3272, line: 118, column: 6)
!13448 = !DILocation(line: 0, scope: !13434, inlinedAt: !13449)
!13449 = distinct !DILocation(line: 406, column: 9, scope: !13429)
!13450 = !DILocation(line: 145, column: 13, scope: !13451, inlinedAt: !13449)
!13451 = distinct !DILexicalBlock(scope: !13452, file: !3272, line: 144, column: 10)
!13452 = distinct !DILexicalBlock(scope: !13453, file: !3272, line: 142, column: 7)
!13453 = distinct !DILexicalBlock(scope: !13454, file: !3272, line: 141, column: 24)
!13454 = distinct !DILexicalBlock(scope: !13455, file: !3272, line: 141, column: 13)
!13455 = distinct !DILexicalBlock(scope: !13434, file: !3272, line: 134, column: 6)
!13456 = !DILocation(line: 406, column: 2, scope: !13429)
!13457 = distinct !DISubprogram(name: "k_thread_user_mode_enter", scope: !2087, file: !2087, line: 817, type: !4483, scopeLine: 819, flags: DIFlagPrototyped | DIFlagNoReturn | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13458)
!13458 = !{!13459, !13460, !13461, !13462}
!13459 = !DILocalVariable(name: "entry", arg: 1, scope: !13457, file: !2087, line: 817, type: !3357)
!13460 = !DILocalVariable(name: "p1", arg: 2, scope: !13457, file: !2087, line: 818, type: !107)
!13461 = !DILocalVariable(name: "p2", arg: 3, scope: !13457, file: !2087, line: 818, type: !107)
!13462 = !DILocalVariable(name: "p3", arg: 4, scope: !13457, file: !2087, line: 818, type: !107)
!13463 = !DILocation(line: 0, scope: !13457)
!13464 = !DILocation(line: 822, column: 2, scope: !13457)
!13465 = !DILocation(line: 822, column: 17, scope: !13457)
!13466 = !DILocation(line: 822, column: 30, scope: !13457)
!13467 = !DILocation(line: 823, column: 2, scope: !13457)
!13468 = !DILocation(line: 845, column: 2, scope: !13457)
!13469 = distinct !DISubprogram(name: "z_spin_lock_valid", scope: !2087, file: !2087, line: 853, type: !13470, scopeLine: 854, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13473)
!13470 = !DISubroutineType(types: !13471)
!13471 = !{!347, !13472}
!13472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 32)
!13473 = !{!13474, !13475}
!13474 = !DILocalVariable(name: "l", arg: 1, scope: !13469, file: !2087, line: 853, type: !13472)
!13475 = !DILocalVariable(name: "thread_cpu", scope: !13469, file: !2087, line: 855, type: !22)
!13476 = !DILocation(line: 0, scope: !13469)
!13477 = !DILocation(line: 855, column: 28, scope: !13469)
!13478 = !DILocation(line: 857, column: 17, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13469, file: !2087, line: 857, column: 6)
!13480 = !DILocation(line: 857, column: 6, scope: !13469)
!13481 = !DILocation(line: 858, column: 19, scope: !13482)
!13482 = distinct !DILexicalBlock(scope: !13483, file: !2087, line: 858, column: 7)
!13483 = distinct !DILexicalBlock(scope: !13479, file: !2087, line: 857, column: 24)
!13484 = !DILocation(line: 858, column: 42, scope: !13482)
!13485 = !DILocation(line: 858, column: 28, scope: !13482)
!13486 = !DILocation(line: 858, column: 25, scope: !13482)
!13487 = !DILocation(line: 858, column: 7, scope: !13483)
!13488 = !DILocation(line: 862, column: 2, scope: !13469)
!13489 = !DILocation(line: 863, column: 1, scope: !13469)
!13490 = distinct !DISubprogram(name: "z_spin_unlock_valid", scope: !2087, file: !2087, line: 865, type: !13470, scopeLine: 866, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13491)
!13491 = !{!13492}
!13492 = !DILocalVariable(name: "l", arg: 1, scope: !13490, file: !2087, line: 865, type: !13472)
!13493 = !DILocation(line: 0, scope: !13490)
!13494 = !DILocation(line: 867, column: 9, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13490, file: !2087, line: 867, column: 6)
!13496 = !DILocation(line: 867, column: 38, scope: !13495)
!13497 = !DILocation(line: 867, column: 24, scope: !13495)
!13498 = !DILocation(line: 867, column: 54, scope: !13495)
!13499 = !DILocation(line: 867, column: 43, scope: !13495)
!13500 = !DILocation(line: 867, column: 41, scope: !13495)
!13501 = !DILocation(line: 867, column: 20, scope: !13495)
!13502 = !DILocation(line: 867, column: 6, scope: !13490)
!13503 = !DILocation(line: 870, column: 16, scope: !13490)
!13504 = !DILocation(line: 871, column: 2, scope: !13490)
!13505 = !DILocation(line: 872, column: 1, scope: !13490)
!13506 = distinct !DISubprogram(name: "z_spin_lock_set_owner", scope: !2087, file: !2087, line: 874, type: !13507, scopeLine: 875, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13509)
!13507 = !DISubroutineType(types: !13508)
!13508 = !{null, !13472}
!13509 = !{!13510}
!13510 = !DILocalVariable(name: "l", arg: 1, scope: !13506, file: !2087, line: 874, type: !13472)
!13511 = !DILocation(line: 0, scope: !13506)
!13512 = !DILocation(line: 876, column: 32, scope: !13506)
!13513 = !DILocation(line: 876, column: 18, scope: !13506)
!13514 = !DILocation(line: 876, column: 48, scope: !13506)
!13515 = !DILocation(line: 876, column: 37, scope: !13506)
!13516 = !DILocation(line: 876, column: 35, scope: !13506)
!13517 = !DILocation(line: 876, column: 5, scope: !13506)
!13518 = !DILocation(line: 876, column: 16, scope: !13506)
!13519 = !DILocation(line: 877, column: 1, scope: !13506)
!13520 = distinct !DISubprogram(name: "z_impl_k_float_disable", scope: !2087, file: !2087, line: 888, type: !13521, scopeLine: 889, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13523)
!13521 = !DISubroutineType(types: !13522)
!13522 = !{!109, !2091}
!13523 = !{!13524}
!13524 = !DILocalVariable(name: "thread", arg: 1, scope: !13520, file: !2087, line: 888, type: !2091)
!13525 = !DILocation(line: 0, scope: !13520)
!13526 = !DILocation(line: 893, column: 2, scope: !13520)
!13527 = distinct !DISubprogram(name: "z_impl_k_float_enable", scope: !2087, file: !2087, line: 897, type: !13528, scopeLine: 898, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13530)
!13528 = !DISubroutineType(types: !13529)
!13529 = !{!109, !2091, !32}
!13530 = !{!13531, !13532}
!13531 = !DILocalVariable(name: "thread", arg: 1, scope: !13527, file: !2087, line: 897, type: !2091)
!13532 = !DILocalVariable(name: "options", arg: 2, scope: !13527, file: !2087, line: 897, type: !32)
!13533 = !DILocation(line: 0, scope: !13527)
!13534 = !DILocation(line: 902, column: 2, scope: !13527)
!13535 = distinct !DISubprogram(name: "k_thread_runtime_stats_get", scope: !2087, file: !2087, line: 1072, type: !13536, scopeLine: 1074, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13541)
!13536 = !DISubroutineType(types: !13537)
!13537 = !{!109, !2090, !13538}
!13538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13539, size: 32)
!13539 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_runtime_stats_t", file: !156, line: 234, baseType: !13540)
!13540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread_runtime_stats", file: !156, line: 192, elements: !2026)
!13541 = !{!13542, !13543}
!13542 = !DILocalVariable(name: "thread", arg: 1, scope: !13535, file: !2087, line: 1072, type: !2090)
!13543 = !DILocalVariable(name: "stats", arg: 2, scope: !13535, file: !2087, line: 1073, type: !13538)
!13544 = !DILocation(line: 0, scope: !13535)
!13545 = !DILocation(line: 1075, column: 14, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13535, file: !2087, line: 1075, column: 6)
!13547 = !DILocation(line: 1075, column: 23, scope: !13546)
!13548 = !DILocation(line: 1086, column: 1, scope: !13535)
!13549 = distinct !DISubprogram(name: "k_thread_runtime_stats_all_get", scope: !2087, file: !2087, line: 1088, type: !13550, scopeLine: 1089, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2194, retainedNodes: !13552)
!13550 = !DISubroutineType(types: !13551)
!13551 = !{!109, !13538}
!13552 = !{!13553}
!13553 = !DILocalVariable(name: "stats", arg: 1, scope: !13549, file: !2087, line: 1088, type: !13538)
!13554 = !DILocation(line: 0, scope: !13549)
!13555 = !DILocation(line: 1094, column: 12, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13549, file: !2087, line: 1094, column: 6)
!13557 = !DILocation(line: 1120, column: 1, scope: !13549)
!13558 = distinct !DISubprogram(name: "z_pm_save_idle_exit", scope: !13559, file: !13559, line: 20, type: !3089, scopeLine: 21, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !2026)
!13559 = !DIFile(filename: "zephyr/kernel/idle.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!13560 = !DILocation(line: 30, column: 2, scope: !13558)
!13561 = !DILocation(line: 31, column: 1, scope: !13558)
!13562 = distinct !DISubprogram(name: "idle", scope: !13559, file: !13559, line: 33, type: !3201, scopeLine: 34, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !13563)
!13563 = !{!13564, !13565, !13566}
!13564 = !DILocalVariable(name: "unused1", arg: 1, scope: !13562, file: !13559, line: 33, type: !107)
!13565 = !DILocalVariable(name: "unused2", arg: 2, scope: !13562, file: !13559, line: 33, type: !107)
!13566 = !DILocalVariable(name: "unused3", arg: 3, scope: !13562, file: !13559, line: 33, type: !107)
!13567 = !DILocation(line: 0, scope: !13562)
!13568 = !DILocation(line: 39, column: 2, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13570, file: !13559, line: 39, column: 2)
!13570 = distinct !DILexicalBlock(scope: !13562, file: !13559, line: 39, column: 2)
!13571 = !DILocation(line: 39, column: 2, scope: !13570)
!13572 = !DILocation(line: 39, column: 2, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13569, file: !13559, line: 39, column: 2)
!13574 = !DILocation(line: 55, column: 2, scope: !13575, inlinedAt: !13579)
!13575 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !13576)
!13576 = !{!13577, !13578}
!13577 = !DILocalVariable(name: "key", scope: !13575, file: !6101, line: 44, type: !32)
!13578 = !DILocalVariable(name: "tmp", scope: !13575, file: !6101, line: 53, type: !32)
!13579 = distinct !DILocation(line: 62, column: 10, scope: !13580)
!13580 = distinct !DILexicalBlock(scope: !13562, file: !13559, line: 41, column: 15)
!13581 = !{i64 2243061}
!13582 = !DILocation(line: 0, scope: !13575, inlinedAt: !13579)
!13583 = !DILocation(line: 86, column: 3, scope: !13580)
!13584 = !DILocation(line: 41, column: 2, scope: !13562)
!13585 = distinct !{!13585, !13584, !13586}
!13586 = !DILocation(line: 105, column: 2, scope: !13562)
!13587 = distinct !DISubprogram(name: "k_cpu_idle", scope: !118, file: !118, line: 5627, type: !3089, scopeLine: 5628, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !3070, retainedNodes: !2026)
!13588 = !DILocation(line: 5629, column: 2, scope: !13587)
!13589 = !DILocation(line: 5630, column: 1, scope: !13587)
!13590 = !DISubprogram(name: "arch_cpu_idle", scope: !3356, file: !3356, line: 167, type: !3089, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!13591 = distinct !DISubprogram(name: "z_impl_k_mutex_init", scope: !2322, file: !2322, line: 49, type: !13592, scopeLine: 50, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13601)
!13592 = !DISubroutineType(types: !13593)
!13593 = !{!109, !13594}
!13594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13595, size: 32)
!13595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !13596)
!13596 = !{!13597, !13598, !13599, !13600}
!13597 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !13595, file: !118, line: 2722, baseType: !2250, size: 64)
!13598 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !13595, file: !118, line: 2724, baseType: !2232, size: 32, offset: 64)
!13599 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !13595, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!13600 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !13595, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!13601 = !{!13602}
!13602 = !DILocalVariable(name: "mutex", arg: 1, scope: !13591, file: !2322, line: 49, type: !13594)
!13603 = !DILocation(line: 0, scope: !13591)
!13604 = !DILocation(line: 51, column: 9, scope: !13591)
!13605 = !DILocation(line: 51, column: 15, scope: !13591)
!13606 = !DILocation(line: 52, column: 9, scope: !13591)
!13607 = !DILocation(line: 52, column: 20, scope: !13591)
!13608 = !DILocation(line: 54, column: 23, scope: !13591)
!13609 = !DILocation(line: 54, column: 2, scope: !13591)
!13610 = !DILocation(line: 60, column: 2, scope: !13591)
!13611 = distinct !DISubprogram(name: "z_waitq_init", scope: !13172, file: !13172, line: 47, type: !13612, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13614)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{null, !2249}
!13614 = !{!13615}
!13615 = !DILocalVariable(name: "w", arg: 1, scope: !13611, file: !13172, line: 47, type: !2249)
!13616 = !DILocation(line: 0, scope: !13611)
!13617 = !DILocation(line: 49, column: 21, scope: !13611)
!13618 = !DILocation(line: 49, column: 2, scope: !13611)
!13619 = !DILocation(line: 50, column: 1, scope: !13611)
!13620 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !13621, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13624)
!13621 = !DISubroutineType(types: !13622)
!13622 = !{null, !13623}
!13623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!13624 = !{!13625}
!13625 = !DILocalVariable(name: "list", arg: 1, scope: !13620, file: !127, line: 197, type: !13623)
!13626 = !DILocation(line: 0, scope: !13620)
!13627 = !DILocation(line: 199, column: 8, scope: !13620)
!13628 = !DILocation(line: 199, column: 13, scope: !13620)
!13629 = !DILocation(line: 200, column: 8, scope: !13620)
!13630 = !DILocation(line: 200, column: 13, scope: !13620)
!13631 = !DILocation(line: 201, column: 1, scope: !13620)
!13632 = distinct !DISubprogram(name: "z_impl_k_mutex_lock", scope: !2322, file: !2322, line: 95, type: !13633, scopeLine: 96, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13639)
!13633 = !DISubroutineType(types: !13634)
!13634 = !{!109, !13594, !13635}
!13635 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !13636)
!13636 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !13637)
!13637 = !{!13638}
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !13636, file: !104, line: 66, baseType: !103, size: 64)
!13639 = !{!13640, !13641, !13642, !13643, !13648, !13649, !13650}
!13640 = !DILocalVariable(name: "mutex", arg: 1, scope: !13632, file: !2322, line: 95, type: !13594)
!13641 = !DILocalVariable(name: "timeout", arg: 2, scope: !13632, file: !2322, line: 95, type: !13635)
!13642 = !DILocalVariable(name: "new_prio", scope: !13632, file: !2322, line: 97, type: !109)
!13643 = !DILocalVariable(name: "key", scope: !13632, file: !2322, line: 98, type: !13644)
!13644 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !13645)
!13645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !13646)
!13646 = !{!13647}
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13645, file: !251, line: 33, baseType: !109, size: 32)
!13648 = !DILocalVariable(name: "resched", scope: !13632, file: !2322, line: 99, type: !347)
!13649 = !DILocalVariable(name: "got_mutex", scope: !13632, file: !2322, line: 146, type: !109)
!13650 = !DILocalVariable(name: "waiter", scope: !13651, file: !2322, line: 169, type: !2232)
!13651 = distinct !DILexicalBlock(scope: !13652, file: !2322, line: 168, column: 36)
!13652 = distinct !DILexicalBlock(scope: !13632, file: !2322, line: 168, column: 6)
!13653 = !DILocation(line: 0, scope: !13632)
!13654 = !DILocation(line: 1031, column: 3, scope: !13655, inlinedAt: !13658)
!13655 = distinct !DISubprogram(name: "__get_IPSR", scope: !6422, file: !6422, line: 1027, type: !6509, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13656)
!13656 = !{!13657}
!13657 = !DILocalVariable(name: "result", scope: !13655, file: !6422, line: 1029, type: !110)
!13658 = distinct !DILocation(line: 48, column: 10, scope: !13659, inlinedAt: !13660)
!13659 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7474, file: !7474, line: 46, type: !7475, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !2026)
!13660 = distinct !DILocation(line: 101, column: 2, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13662, file: !2322, line: 101, column: 2)
!13662 = distinct !DILexicalBlock(scope: !13632, file: !2322, line: 101, column: 2)
!13663 = !{i64 3502340}
!13664 = !DILocation(line: 0, scope: !13655, inlinedAt: !13658)
!13665 = !DILocation(line: 48, column: 9, scope: !13659, inlinedAt: !13660)
!13666 = !DILocation(line: 101, column: 2, scope: !13662)
!13667 = !DILocation(line: 101, column: 2, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13661, file: !2322, line: 101, column: 2)
!13669 = !DILocalVariable(name: "l", arg: 1, scope: !13670, file: !251, line: 136, type: !13673)
!13670 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !13671, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13674)
!13671 = !DISubroutineType(types: !13672)
!13672 = !{!13644, !13673}
!13673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 32)
!13674 = !{!13669, !13675}
!13675 = !DILocalVariable(name: "k", scope: !13670, file: !251, line: 139, type: !13644)
!13676 = !DILocation(line: 0, scope: !13670, inlinedAt: !13677)
!13677 = distinct !DILocation(line: 105, column: 8, scope: !13632)
!13678 = !DILocation(line: 55, column: 2, scope: !13679, inlinedAt: !13683)
!13679 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13680)
!13680 = !{!13681, !13682}
!13681 = !DILocalVariable(name: "key", scope: !13679, file: !6101, line: 44, type: !32)
!13682 = !DILocalVariable(name: "tmp", scope: !13679, file: !6101, line: 53, type: !32)
!13683 = distinct !DILocation(line: 145, column: 10, scope: !13670, inlinedAt: !13677)
!13684 = !{i64 2247469}
!13685 = !DILocation(line: 0, scope: !13679, inlinedAt: !13683)
!13686 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !13677)
!13687 = distinct !DILexicalBlock(scope: !13688, file: !251, line: 148, column: 2)
!13688 = distinct !DILexicalBlock(scope: !13670, file: !251, line: 148, column: 2)
!13689 = !DILocation(line: 148, column: 2, scope: !13688, inlinedAt: !13677)
!13690 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !13677)
!13691 = distinct !DILexicalBlock(scope: !13687, file: !251, line: 148, column: 2)
!13692 = !DILocation(line: 160, column: 2, scope: !13670, inlinedAt: !13677)
!13693 = !DILocation(line: 107, column: 6, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13632, file: !2322, line: 107, column: 6)
!13695 = !DILocation(line: 107, column: 6, scope: !13632)
!13696 = !{!"branch_weights", i32 2000, i32 1}
!13697 = !DILocation(line: 110, column: 6, scope: !13698)
!13698 = distinct !DILexicalBlock(scope: !13694, file: !2322, line: 107, column: 71)
!13699 = !DILocation(line: 110, column: 21, scope: !13698)
!13700 = !DILocation(line: 109, column: 28, scope: !13698)
!13701 = !DILocation(line: 111, column: 13, scope: !13698)
!13702 = !DILocation(line: 114, column: 18, scope: !13698)
!13703 = !DILocation(line: 109, column: 10, scope: !13698)
!13704 = !DILocation(line: 109, column: 26, scope: !13698)
!13705 = !DILocation(line: 113, column: 20, scope: !13698)
!13706 = !DILocation(line: 114, column: 10, scope: !13698)
!13707 = !DILocation(line: 114, column: 16, scope: !13698)
!13708 = !DILocalVariable(name: "key", arg: 2, scope: !13709, file: !251, line: 190, type: !13644)
!13709 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !13710, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13712)
!13710 = !DISubroutineType(types: !13711)
!13711 = !{null, !13673, !13644}
!13712 = !{!13713, !13708}
!13713 = !DILocalVariable(name: "l", arg: 1, scope: !13709, file: !251, line: 189, type: !13673)
!13714 = !DILocation(line: 0, scope: !13709, inlinedAt: !13715)
!13715 = distinct !DILocation(line: 120, column: 3, scope: !13698)
!13716 = !DILocation(line: 194, column: 2, scope: !13717, inlinedAt: !13715)
!13717 = distinct !DILexicalBlock(scope: !13718, file: !251, line: 194, column: 2)
!13718 = distinct !DILexicalBlock(scope: !13709, file: !251, line: 194, column: 2)
!13719 = !DILocation(line: 194, column: 2, scope: !13718, inlinedAt: !13715)
!13720 = !DILocation(line: 194, column: 2, scope: !13721, inlinedAt: !13715)
!13721 = distinct !DILexicalBlock(scope: !13717, file: !251, line: 194, column: 2)
!13722 = !DILocalVariable(name: "key", arg: 1, scope: !13723, file: !6101, line: 84, type: !32)
!13723 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13724)
!13724 = !{!13722}
!13725 = !DILocation(line: 0, scope: !13723, inlinedAt: !13726)
!13726 = distinct !DILocation(line: 215, column: 2, scope: !13709, inlinedAt: !13715)
!13727 = !DILocation(line: 95, column: 2, scope: !13723, inlinedAt: !13726)
!13728 = !{i64 2248286}
!13729 = !DILocation(line: 124, column: 3, scope: !13698)
!13730 = !DILocation(line: 127, column: 6, scope: !13731)
!13731 = distinct !DILexicalBlock(scope: !13632, file: !2322, line: 127, column: 6)
!13732 = !DILocation(line: 127, column: 6, scope: !13632)
!13733 = !{!"branch_weights", i32 1, i32 2000}
!13734 = !DILocation(line: 0, scope: !13709, inlinedAt: !13735)
!13735 = distinct !DILocation(line: 128, column: 3, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13731, file: !2322, line: 127, column: 50)
!13737 = !DILocation(line: 194, column: 2, scope: !13717, inlinedAt: !13735)
!13738 = !DILocation(line: 194, column: 2, scope: !13718, inlinedAt: !13735)
!13739 = !DILocation(line: 194, column: 2, scope: !13721, inlinedAt: !13735)
!13740 = !DILocation(line: 0, scope: !13723, inlinedAt: !13741)
!13741 = distinct !DILocation(line: 215, column: 2, scope: !13709, inlinedAt: !13735)
!13742 = !DILocation(line: 95, column: 2, scope: !13723, inlinedAt: !13741)
!13743 = !DILocation(line: 132, column: 3, scope: !13736)
!13744 = !DILocation(line: 137, column: 53, scope: !13632)
!13745 = !DILocation(line: 137, column: 38, scope: !13632)
!13746 = !DILocation(line: 138, column: 29, scope: !13632)
!13747 = !DILocation(line: 138, column: 10, scope: !13632)
!13748 = !DILocation(line: 137, column: 13, scope: !13632)
!13749 = !DILocation(line: 142, column: 6, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13632, file: !2322, line: 142, column: 6)
!13751 = !DILocation(line: 142, column: 6, scope: !13632)
!13752 = !DILocation(line: 143, column: 13, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13750, file: !2322, line: 142, column: 59)
!13754 = !DILocation(line: 144, column: 2, scope: !13753)
!13755 = !DILocation(line: 146, column: 50, scope: !13632)
!13756 = !DILocation(line: 146, column: 18, scope: !13632)
!13757 = !DILocation(line: 153, column: 16, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13632, file: !2322, line: 153, column: 6)
!13759 = !DILocation(line: 153, column: 6, scope: !13632)
!13760 = !DILocation(line: 0, scope: !13670, inlinedAt: !13761)
!13761 = distinct !DILocation(line: 162, column: 8, scope: !13632)
!13762 = !DILocation(line: 55, column: 2, scope: !13679, inlinedAt: !13763)
!13763 = distinct !DILocation(line: 145, column: 10, scope: !13670, inlinedAt: !13761)
!13764 = !DILocation(line: 0, scope: !13679, inlinedAt: !13763)
!13765 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !13761)
!13766 = !DILocation(line: 148, column: 2, scope: !13688, inlinedAt: !13761)
!13767 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !13761)
!13768 = !DILocation(line: 160, column: 2, scope: !13670, inlinedAt: !13761)
!13769 = !DILocation(line: 168, column: 6, scope: !13652)
!13770 = !DILocation(line: 168, column: 6, scope: !13632)
!13771 = !DILocation(line: 169, column: 29, scope: !13651)
!13772 = !DILocation(line: 0, scope: !13651)
!13773 = !DILocation(line: 171, column: 22, scope: !13651)
!13774 = !DILocation(line: 171, column: 14, scope: !13651)
!13775 = !DILocation(line: 172, column: 42, scope: !13651)
!13776 = !DILocation(line: 172, column: 29, scope: !13651)
!13777 = !DILocation(line: 172, column: 55, scope: !13651)
!13778 = !DILocation(line: 172, column: 4, scope: !13651)
!13779 = !DILocation(line: 173, column: 11, scope: !13651)
!13780 = !DILocation(line: 177, column: 13, scope: !13651)
!13781 = !DILocation(line: 177, column: 48, scope: !13651)
!13782 = !DILocation(line: 180, column: 6, scope: !13632)
!13783 = !DILocation(line: 181, column: 3, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13785, file: !2322, line: 180, column: 15)
!13785 = distinct !DILexicalBlock(scope: !13632, file: !2322, line: 180, column: 6)
!13786 = !DILocation(line: 182, column: 2, scope: !13784)
!13787 = !DILocation(line: 0, scope: !13709, inlinedAt: !13788)
!13788 = distinct !DILocation(line: 183, column: 3, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13785, file: !2322, line: 182, column: 9)
!13790 = !DILocation(line: 194, column: 2, scope: !13717, inlinedAt: !13788)
!13791 = !DILocation(line: 194, column: 2, scope: !13718, inlinedAt: !13788)
!13792 = !DILocation(line: 194, column: 2, scope: !13721, inlinedAt: !13788)
!13793 = !DILocation(line: 0, scope: !13723, inlinedAt: !13794)
!13794 = distinct !DILocation(line: 215, column: 2, scope: !13709, inlinedAt: !13788)
!13795 = !DILocation(line: 95, column: 2, scope: !13723, inlinedAt: !13794)
!13796 = !DILocation(line: 189, column: 1, scope: !13632)
!13797 = distinct !DISubprogram(name: "new_prio_for_inheritance", scope: !2322, file: !2322, line: 72, type: !13798, scopeLine: 73, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13800)
!13798 = !DISubroutineType(types: !13799)
!13799 = !{!765, !765, !765}
!13800 = !{!13801, !13802, !13803}
!13801 = !DILocalVariable(name: "target", arg: 1, scope: !13797, file: !2322, line: 72, type: !765)
!13802 = !DILocalVariable(name: "limit", arg: 2, scope: !13797, file: !2322, line: 72, type: !765)
!13803 = !DILocalVariable(name: "new_prio", scope: !13797, file: !2322, line: 74, type: !109)
!13804 = !DILocation(line: 0, scope: !13797)
!13805 = !DILocation(line: 74, column: 17, scope: !13797)
!13806 = !DILocation(line: 76, column: 13, scope: !13797)
!13807 = !DILocation(line: 78, column: 2, scope: !13797)
!13808 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12811, file: !12811, line: 211, type: !13809, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13811)
!13809 = !DISubroutineType(types: !13810)
!13810 = !{!347, !109, !109}
!13811 = !{!13812, !13813}
!13812 = !DILocalVariable(name: "prio", arg: 1, scope: !13808, file: !12811, line: 211, type: !109)
!13813 = !DILocalVariable(name: "test_prio", arg: 2, scope: !13808, file: !12811, line: 211, type: !109)
!13814 = !DILocation(line: 0, scope: !13808)
!13815 = !DILocation(line: 213, column: 9, scope: !13808)
!13816 = !DILocation(line: 213, column: 2, scope: !13808)
!13817 = distinct !DISubprogram(name: "adjust_owner_prio", scope: !2322, file: !2322, line: 81, type: !13818, scopeLine: 82, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13820)
!13818 = !DISubroutineType(types: !13819)
!13819 = !{!347, !13594, !765}
!13820 = !{!13821, !13822}
!13821 = !DILocalVariable(name: "mutex", arg: 1, scope: !13817, file: !2322, line: 81, type: !13594)
!13822 = !DILocalVariable(name: "new_prio", arg: 2, scope: !13817, file: !2322, line: 81, type: !765)
!13823 = !DILocation(line: 0, scope: !13817)
!13824 = !DILocation(line: 83, column: 13, scope: !13825)
!13825 = distinct !DILexicalBlock(scope: !13817, file: !2322, line: 83, column: 6)
!13826 = !DILocation(line: 83, column: 25, scope: !13825)
!13827 = !DILocation(line: 83, column: 6, scope: !13825)
!13828 = !DILocation(line: 83, column: 30, scope: !13825)
!13829 = !DILocation(line: 83, column: 6, scope: !13817)
!13830 = !DILocation(line: 90, column: 10, scope: !13831)
!13831 = distinct !DILexicalBlock(scope: !13825, file: !2322, line: 83, column: 43)
!13832 = !DILocation(line: 90, column: 3, scope: !13831)
!13833 = !DILocation(line: 93, column: 1, scope: !13817)
!13834 = distinct !DISubprogram(name: "z_waitq_head", scope: !13172, file: !13172, line: 52, type: !13835, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13837)
!13835 = !DISubroutineType(types: !13836)
!13836 = !{!2232, !2249}
!13837 = !{!13838}
!13838 = !DILocalVariable(name: "w", arg: 1, scope: !13834, file: !13172, line: 52, type: !2249)
!13839 = !DILocation(line: 0, scope: !13834)
!13840 = !DILocation(line: 54, column: 52, scope: !13834)
!13841 = !DILocation(line: 54, column: 28, scope: !13834)
!13842 = !DILocation(line: 54, column: 9, scope: !13834)
!13843 = !DILocation(line: 54, column: 2, scope: !13834)
!13844 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !13845, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13847)
!13845 = !DISubroutineType(types: !13846)
!13846 = !{!2217, !13623}
!13847 = !{!13848}
!13848 = !DILocalVariable(name: "list", arg: 1, scope: !13844, file: !127, line: 294, type: !13623)
!13849 = !DILocation(line: 0, scope: !13844)
!13850 = !DILocation(line: 296, column: 9, scope: !13844)
!13851 = !DILocation(line: 296, column: 49, scope: !13844)
!13852 = !DILocation(line: 296, column: 2, scope: !13844)
!13853 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !13854, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13856)
!13854 = !DISubroutineType(types: !13855)
!13855 = !{!347, !13623}
!13856 = !{!13857}
!13857 = !DILocalVariable(name: "list", arg: 1, scope: !13853, file: !127, line: 266, type: !13623)
!13858 = !DILocation(line: 0, scope: !13853)
!13859 = !DILocation(line: 268, column: 15, scope: !13853)
!13860 = !DILocation(line: 268, column: 20, scope: !13853)
!13861 = !DILocation(line: 268, column: 2, scope: !13853)
!13862 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12811, file: !12811, line: 206, type: !13809, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13863)
!13863 = !{!13864, !13865}
!13864 = !DILocalVariable(name: "prio1", arg: 1, scope: !13862, file: !12811, line: 206, type: !109)
!13865 = !DILocalVariable(name: "prio2", arg: 2, scope: !13862, file: !12811, line: 206, type: !109)
!13866 = !DILocation(line: 0, scope: !13862)
!13867 = !DILocation(line: 208, column: 15, scope: !13862)
!13868 = !DILocation(line: 208, column: 2, scope: !13862)
!13869 = distinct !DISubprogram(name: "z_get_new_prio_with_ceiling", scope: !12811, file: !12811, line: 186, type: !303, scopeLine: 187, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13870)
!13870 = !{!13871}
!13871 = !DILocalVariable(name: "prio", arg: 1, scope: !13869, file: !12811, line: 186, type: !109)
!13872 = !DILocation(line: 0, scope: !13869)
!13873 = !DILocation(line: 188, column: 9, scope: !13869)
!13874 = !DILocation(line: 188, column: 2, scope: !13869)
!13875 = distinct !DISubprogram(name: "z_is_under_prio_ceiling", scope: !12811, file: !12811, line: 181, type: !13876, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13878)
!13876 = !DISubroutineType(types: !13877)
!13877 = !{!347, !109}
!13878 = !{!13879}
!13879 = !DILocalVariable(name: "prio", arg: 1, scope: !13875, file: !12811, line: 181, type: !109)
!13880 = !DILocation(line: 0, scope: !13875)
!13881 = !DILocation(line: 183, column: 14, scope: !13875)
!13882 = !DILocation(line: 183, column: 2, scope: !13875)
!13883 = distinct !DISubprogram(name: "z_impl_k_mutex_unlock", scope: !2322, file: !2322, line: 201, type: !13592, scopeLine: 202, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13884)
!13884 = !{!13885, !13886, !13887, !13888}
!13885 = !DILocalVariable(name: "mutex", arg: 1, scope: !13883, file: !2322, line: 201, type: !13594)
!13886 = !DILocalVariable(name: "new_owner", scope: !13883, file: !2322, line: 203, type: !2232)
!13887 = !DILocalVariable(name: "key", scope: !13883, file: !2322, line: 242, type: !13644)
!13888 = !DILabel(scope: !13883, name: "k_mutex_unlock_return", file: !2322, line: 270)
!13889 = !DILocation(line: 0, scope: !13883)
!13890 = !DILocation(line: 1031, column: 3, scope: !13655, inlinedAt: !13891)
!13891 = distinct !DILocation(line: 48, column: 10, scope: !13659, inlinedAt: !13892)
!13892 = distinct !DILocation(line: 205, column: 2, scope: !13893)
!13893 = distinct !DILexicalBlock(scope: !13894, file: !2322, line: 205, column: 2)
!13894 = distinct !DILexicalBlock(scope: !13883, file: !2322, line: 205, column: 2)
!13895 = !DILocation(line: 0, scope: !13655, inlinedAt: !13891)
!13896 = !DILocation(line: 48, column: 9, scope: !13659, inlinedAt: !13892)
!13897 = !DILocation(line: 205, column: 2, scope: !13894)
!13898 = !DILocation(line: 205, column: 2, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13893, file: !2322, line: 205, column: 2)
!13900 = !DILocation(line: 209, column: 2, scope: !13901)
!13901 = distinct !DILexicalBlock(scope: !13883, file: !2322, line: 209, column: 2)
!13902 = !DILocation(line: 209, column: 2, scope: !13883)
!13903 = !DILocation(line: 217, column: 2, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13883, file: !2322, line: 217, column: 2)
!13905 = !DILocation(line: 217, column: 2, scope: !13883)
!13906 = !DILocation(line: 229, column: 2, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13908, file: !2322, line: 229, column: 2)
!13908 = distinct !DILexicalBlock(scope: !13883, file: !2322, line: 229, column: 2)
!13909 = !DILocation(line: 229, column: 2, scope: !13908)
!13910 = !DILocation(line: 229, column: 2, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13907, file: !2322, line: 229, column: 2)
!13912 = !DILocation(line: 238, column: 20, scope: !13913)
!13913 = distinct !DILexicalBlock(scope: !13914, file: !2322, line: 237, column: 30)
!13914 = distinct !DILexicalBlock(scope: !13883, file: !2322, line: 237, column: 6)
!13915 = !DILocation(line: 239, column: 3, scope: !13913)
!13916 = !DILocation(line: 0, scope: !13670, inlinedAt: !13917)
!13917 = distinct !DILocation(line: 242, column: 25, scope: !13883)
!13918 = !DILocation(line: 55, column: 2, scope: !13679, inlinedAt: !13919)
!13919 = distinct !DILocation(line: 145, column: 10, scope: !13670, inlinedAt: !13917)
!13920 = !DILocation(line: 0, scope: !13679, inlinedAt: !13919)
!13921 = !DILocation(line: 148, column: 2, scope: !13687, inlinedAt: !13917)
!13922 = !DILocation(line: 148, column: 2, scope: !13688, inlinedAt: !13917)
!13923 = !DILocation(line: 148, column: 2, scope: !13691, inlinedAt: !13917)
!13924 = !DILocation(line: 160, column: 2, scope: !13670, inlinedAt: !13917)
!13925 = !DILocation(line: 244, column: 34, scope: !13883)
!13926 = !DILocation(line: 244, column: 2, scope: !13883)
!13927 = !DILocation(line: 247, column: 44, scope: !13883)
!13928 = !DILocation(line: 247, column: 14, scope: !13883)
!13929 = !DILocation(line: 249, column: 15, scope: !13883)
!13930 = !DILocation(line: 254, column: 16, scope: !13931)
!13931 = distinct !DILexicalBlock(scope: !13883, file: !2322, line: 254, column: 6)
!13932 = !DILocation(line: 254, column: 6, scope: !13883)
!13933 = !DILocation(line: 260, column: 44, scope: !13934)
!13934 = distinct !DILexicalBlock(scope: !13931, file: !2322, line: 254, column: 25)
!13935 = !DILocation(line: 260, column: 28, scope: !13934)
!13936 = !DILocation(line: 260, column: 26, scope: !13934)
!13937 = !DILocalVariable(name: "thread", arg: 1, scope: !13938, file: !12831, line: 65, type: !2232)
!13938 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12831, file: !12831, line: 65, type: !13939, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !13941)
!13939 = !DISubroutineType(types: !13940)
!13940 = !{null, !2232, !32}
!13941 = !{!13937, !13942}
!13942 = !DILocalVariable(name: "value", arg: 2, scope: !13938, file: !12831, line: 65, type: !32)
!13943 = !DILocation(line: 0, scope: !13938, inlinedAt: !13944)
!13944 = distinct !DILocation(line: 261, column: 3, scope: !13934)
!13945 = !DILocation(line: 67, column: 15, scope: !13938, inlinedAt: !13944)
!13946 = !DILocation(line: 67, column: 33, scope: !13938, inlinedAt: !13944)
!13947 = !DILocation(line: 262, column: 3, scope: !13934)
!13948 = !DILocation(line: 263, column: 3, scope: !13934)
!13949 = !DILocation(line: 264, column: 2, scope: !13934)
!13950 = !DILocation(line: 265, column: 21, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13931, file: !2322, line: 264, column: 9)
!13952 = !DILocation(line: 0, scope: !13709, inlinedAt: !13953)
!13953 = distinct !DILocation(line: 266, column: 3, scope: !13951)
!13954 = !DILocation(line: 194, column: 2, scope: !13717, inlinedAt: !13953)
!13955 = !DILocation(line: 194, column: 2, scope: !13718, inlinedAt: !13953)
!13956 = !DILocation(line: 194, column: 2, scope: !13721, inlinedAt: !13953)
!13957 = !DILocation(line: 0, scope: !13723, inlinedAt: !13958)
!13958 = distinct !DILocation(line: 215, column: 2, scope: !13709, inlinedAt: !13953)
!13959 = !DILocation(line: 95, column: 2, scope: !13723, inlinedAt: !13958)
!13960 = !DILocation(line: 274, column: 1, scope: !13883)
!13961 = distinct !DISubprogram(name: "z_sched_prio_cmp", scope: !2436, file: !2436, line: 93, type: !13962, scopeLine: 95, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !13964)
!13962 = !DISubroutineType(types: !13963)
!13963 = !{!765, !2328, !2328}
!13964 = !{!13965, !13966, !13967, !13968}
!13965 = !DILocalVariable(name: "thread_1", arg: 1, scope: !13961, file: !2436, line: 93, type: !2328)
!13966 = !DILocalVariable(name: "thread_2", arg: 2, scope: !13961, file: !2436, line: 94, type: !2328)
!13967 = !DILocalVariable(name: "b1", scope: !13961, file: !2436, line: 97, type: !765)
!13968 = !DILocalVariable(name: "b2", scope: !13961, file: !2436, line: 98, type: !765)
!13969 = !DILocation(line: 0, scope: !13961)
!13970 = !DILocation(line: 97, column: 30, scope: !13961)
!13971 = !DILocation(line: 98, column: 30, scope: !13961)
!13972 = !DILocation(line: 100, column: 9, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13961, file: !2436, line: 100, column: 6)
!13974 = !DILocation(line: 100, column: 6, scope: !13961)
!13975 = !DILocation(line: 125, column: 1, scope: !13961)
!13976 = distinct !DISubprogram(name: "z_reset_time_slice", scope: !2436, file: !2436, line: 428, type: !13977, scopeLine: 429, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !13979)
!13977 = !DISubroutineType(types: !13978)
!13978 = !{null, !2328}
!13979 = !{!13980}
!13980 = !DILocalVariable(name: "curr", arg: 1, scope: !13976, file: !2436, line: 428, type: !2328)
!13981 = !DILocation(line: 0, scope: !13976)
!13982 = !DILocation(line: 434, column: 6, scope: !13983)
!13983 = distinct !DILexicalBlock(scope: !13976, file: !2436, line: 434, column: 6)
!13984 = !DILocation(line: 434, column: 23, scope: !13983)
!13985 = !DILocation(line: 434, column: 6, scope: !13976)
!13986 = !DILocation(line: 435, column: 50, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13983, file: !2436, line: 434, column: 29)
!13988 = !DILocation(line: 435, column: 48, scope: !13987)
!13989 = !DILocation(line: 435, column: 29, scope: !13987)
!13990 = !DILocation(line: 436, column: 24, scope: !13987)
!13991 = !DILocation(line: 436, column: 3, scope: !13987)
!13992 = !DILocation(line: 437, column: 2, scope: !13987)
!13993 = !DILocation(line: 438, column: 1, scope: !13976)
!13994 = distinct !DISubprogram(name: "slice_time", scope: !2436, file: !2436, line: 407, type: !13995, scopeLine: 408, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !13997)
!13995 = !DISubroutineType(types: !13996)
!13996 = !{!109, !2328}
!13997 = !{!13998, !13999}
!13998 = !DILocalVariable(name: "curr", arg: 1, scope: !13994, file: !2436, line: 407, type: !2328)
!13999 = !DILocalVariable(name: "ret", scope: !13994, file: !2436, line: 409, type: !109)
!14000 = !DILocation(line: 0, scope: !13994)
!14001 = !DILocation(line: 409, column: 12, scope: !13994)
!14002 = !DILocation(line: 416, column: 2, scope: !13994)
!14003 = distinct !DISubprogram(name: "k_sched_time_slice_set", scope: !2436, file: !2436, line: 440, type: !14004, scopeLine: 441, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14006)
!14004 = !DISubroutineType(types: !14005)
!14005 = !{null, !765, !109}
!14006 = !{!14007, !14008, !14009, !14015}
!14007 = !DILocalVariable(name: "slice", arg: 1, scope: !14003, file: !2436, line: 440, type: !765)
!14008 = !DILocalVariable(name: "prio", arg: 2, scope: !14003, file: !2436, line: 440, type: !109)
!14009 = !DILocalVariable(name: "__i", scope: !14010, file: !2436, line: 442, type: !14011)
!14010 = distinct !DILexicalBlock(scope: !14003, file: !2436, line: 442, column: 2)
!14011 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !14012)
!14012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !14013)
!14013 = !{!14014}
!14014 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !14012, file: !251, line: 33, baseType: !109, size: 32)
!14015 = !DILocalVariable(name: "__key", scope: !14010, file: !2436, line: 442, type: !14011)
!14016 = !DILocation(line: 0, scope: !14003)
!14017 = !DILocation(line: 0, scope: !14010)
!14018 = !DILocalVariable(name: "l", arg: 1, scope: !14019, file: !251, line: 136, type: !14022)
!14019 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !14020, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14023)
!14020 = !DISubroutineType(types: !14021)
!14021 = !{!14011, !14022}
!14022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 32)
!14023 = !{!14018, !14024}
!14024 = !DILocalVariable(name: "k", scope: !14019, file: !251, line: 139, type: !14011)
!14025 = !DILocation(line: 0, scope: !14019, inlinedAt: !14026)
!14026 = distinct !DILocation(line: 442, column: 2, scope: !14010)
!14027 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14032)
!14028 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14029)
!14029 = !{!14030, !14031}
!14030 = !DILocalVariable(name: "key", scope: !14028, file: !6101, line: 44, type: !32)
!14031 = !DILocalVariable(name: "tmp", scope: !14028, file: !6101, line: 53, type: !32)
!14032 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !14026)
!14033 = !{i64 2287032}
!14034 = !DILocation(line: 0, scope: !14028, inlinedAt: !14032)
!14035 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14026)
!14036 = distinct !DILexicalBlock(scope: !14037, file: !251, line: 148, column: 2)
!14037 = distinct !DILexicalBlock(scope: !14019, file: !251, line: 148, column: 2)
!14038 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14026)
!14039 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14026)
!14040 = distinct !DILexicalBlock(scope: !14036, file: !251, line: 148, column: 2)
!14041 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !14026)
!14042 = !DILocation(line: 443, column: 29, scope: !14043)
!14043 = distinct !DILexicalBlock(scope: !14044, file: !2436, line: 442, column: 26)
!14044 = distinct !DILexicalBlock(scope: !14010, file: !2436, line: 442, column: 2)
!14045 = !DILocation(line: 444, column: 17, scope: !14043)
!14046 = !DILocation(line: 445, column: 51, scope: !14047)
!14047 = distinct !DILexicalBlock(scope: !14043, file: !2436, line: 445, column: 7)
!14048 = !DILocation(line: 445, column: 7, scope: !14043)
!14049 = !DILocation(line: 0, scope: !14043)
!14050 = !DILocation(line: 451, column: 18, scope: !14043)
!14051 = !DILocation(line: 452, column: 3, scope: !14043)
!14052 = !DILocalVariable(name: "key", arg: 2, scope: !14053, file: !251, line: 190, type: !14011)
!14053 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !14054, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14056)
!14054 = !DISubroutineType(types: !14055)
!14055 = !{null, !14022, !14011}
!14056 = !{!14057, !14052}
!14057 = !DILocalVariable(name: "l", arg: 1, scope: !14053, file: !251, line: 189, type: !14022)
!14058 = !DILocation(line: 0, scope: !14053, inlinedAt: !14059)
!14059 = distinct !DILocation(line: 442, column: 2, scope: !14044)
!14060 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14059)
!14061 = distinct !DILexicalBlock(scope: !14062, file: !251, line: 194, column: 2)
!14062 = distinct !DILexicalBlock(scope: !14053, file: !251, line: 194, column: 2)
!14063 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14059)
!14064 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14059)
!14065 = distinct !DILexicalBlock(scope: !14061, file: !251, line: 194, column: 2)
!14066 = !DILocalVariable(name: "key", arg: 1, scope: !14067, file: !6101, line: 84, type: !32)
!14067 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14068)
!14068 = !{!14066}
!14069 = !DILocation(line: 0, scope: !14067, inlinedAt: !14070)
!14070 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14059)
!14071 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14070)
!14072 = !{i64 2287849}
!14073 = !DILocation(line: 454, column: 1, scope: !14003)
!14074 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil32", scope: !3272, file: !3272, line: 389, type: !7709, scopeLine: 390, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14075)
!14075 = !{!14076}
!14076 = !DILocalVariable(name: "t", arg: 1, scope: !14074, file: !3272, line: 389, type: !110)
!14077 = !DILocation(line: 0, scope: !14074)
!14078 = !DILocalVariable(name: "t", arg: 1, scope: !14079, file: !3272, line: 102, type: !111)
!14079 = distinct !DISubprogram(name: "z_tmcvt", scope: !3272, file: !3272, line: 102, type: !3280, scopeLine: 106, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14080)
!14080 = !{!14078, !14081, !14082, !14083, !14084, !14085, !14086, !14087, !14088, !14089, !14090}
!14081 = !DILocalVariable(name: "from_hz", arg: 2, scope: !14079, file: !3272, line: 102, type: !110)
!14082 = !DILocalVariable(name: "to_hz", arg: 3, scope: !14079, file: !3272, line: 103, type: !110)
!14083 = !DILocalVariable(name: "const_hz", arg: 4, scope: !14079, file: !3272, line: 103, type: !347)
!14084 = !DILocalVariable(name: "result32", arg: 5, scope: !14079, file: !3272, line: 104, type: !347)
!14085 = !DILocalVariable(name: "round_up", arg: 6, scope: !14079, file: !3272, line: 104, type: !347)
!14086 = !DILocalVariable(name: "round_off", arg: 7, scope: !14079, file: !3272, line: 105, type: !347)
!14087 = !DILocalVariable(name: "mul_ratio", scope: !14079, file: !3272, line: 107, type: !347)
!14088 = !DILocalVariable(name: "div_ratio", scope: !14079, file: !3272, line: 109, type: !347)
!14089 = !DILocalVariable(name: "off", scope: !14079, file: !3272, line: 116, type: !111)
!14090 = !DILocalVariable(name: "rdivisor", scope: !14091, file: !3272, line: 119, type: !110)
!14091 = distinct !DILexicalBlock(scope: !14092, file: !3272, line: 118, column: 18)
!14092 = distinct !DILexicalBlock(scope: !14079, file: !3272, line: 118, column: 6)
!14093 = !DILocation(line: 0, scope: !14079, inlinedAt: !14094)
!14094 = distinct !DILocation(line: 392, column: 9, scope: !14074)
!14095 = !DILocation(line: 143, column: 25, scope: !14096, inlinedAt: !14094)
!14096 = distinct !DILexicalBlock(scope: !14097, file: !3272, line: 142, column: 17)
!14097 = distinct !DILexicalBlock(scope: !14098, file: !3272, line: 142, column: 7)
!14098 = distinct !DILexicalBlock(scope: !14099, file: !3272, line: 141, column: 24)
!14099 = distinct !DILexicalBlock(scope: !14100, file: !3272, line: 141, column: 13)
!14100 = distinct !DILexicalBlock(scope: !14079, file: !3272, line: 134, column: 6)
!14101 = !DILocation(line: 392, column: 2, scope: !14074)
!14102 = distinct !DISubprogram(name: "z_time_slice", scope: !2436, file: !2436, line: 502, type: !8362, scopeLine: 503, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14103)
!14103 = !{!14104, !14105}
!14104 = !DILocalVariable(name: "ticks", arg: 1, scope: !14102, file: !2436, line: 502, type: !109)
!14105 = !DILocalVariable(name: "key", scope: !14102, file: !2436, line: 511, type: !14011)
!14106 = !DILocation(line: 0, scope: !14102)
!14107 = !DILocation(line: 0, scope: !14019, inlinedAt: !14108)
!14108 = distinct !DILocation(line: 511, column: 25, scope: !14102)
!14109 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14110)
!14110 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !14108)
!14111 = !DILocation(line: 0, scope: !14028, inlinedAt: !14110)
!14112 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14108)
!14113 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14108)
!14114 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14108)
!14115 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !14108)
!14116 = !DILocation(line: 514, column: 6, scope: !14117)
!14117 = distinct !DILexicalBlock(scope: !14102, file: !2436, line: 514, column: 6)
!14118 = !DILocation(line: 514, column: 25, scope: !14117)
!14119 = !DILocation(line: 514, column: 22, scope: !14117)
!14120 = !DILocation(line: 514, column: 6, scope: !14102)
!14121 = !DILocation(line: 515, column: 3, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14117, file: !2436, line: 514, column: 35)
!14123 = !DILocation(line: 0, scope: !14053, inlinedAt: !14124)
!14124 = distinct !DILocation(line: 516, column: 3, scope: !14122)
!14125 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14124)
!14126 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14124)
!14127 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14124)
!14128 = !DILocation(line: 0, scope: !14067, inlinedAt: !14129)
!14129 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14124)
!14130 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14129)
!14131 = !DILocation(line: 517, column: 3, scope: !14122)
!14132 = !DILocation(line: 519, column: 18, scope: !14102)
!14133 = !DILocation(line: 522, column: 6, scope: !14134)
!14134 = distinct !DILexicalBlock(scope: !14102, file: !2436, line: 522, column: 6)
!14135 = !DILocation(line: 522, column: 27, scope: !14134)
!14136 = !DILocation(line: 522, column: 30, scope: !14134)
!14137 = !DILocation(line: 522, column: 6, scope: !14102)
!14138 = !DILocation(line: 523, column: 30, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14140, file: !2436, line: 523, column: 7)
!14140 = distinct !DILexicalBlock(scope: !14134, file: !2436, line: 522, column: 51)
!14141 = !DILocation(line: 523, column: 13, scope: !14139)
!14142 = !DILocation(line: 523, column: 7, scope: !14140)
!14143 = !DILocation(line: 530, column: 10, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14139, file: !2436, line: 523, column: 43)
!14145 = !DILocation(line: 531, column: 3, scope: !14144)
!14146 = !DILocation(line: 532, column: 30, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14139, file: !2436, line: 531, column: 10)
!14148 = !DILocation(line: 535, column: 29, scope: !14149)
!14149 = distinct !DILexicalBlock(scope: !14134, file: !2436, line: 534, column: 9)
!14150 = !DILocation(line: 0, scope: !14053, inlinedAt: !14151)
!14151 = distinct !DILocation(line: 537, column: 2, scope: !14102)
!14152 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14151)
!14153 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14151)
!14154 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14151)
!14155 = !DILocation(line: 0, scope: !14067, inlinedAt: !14156)
!14156 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14151)
!14157 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14156)
!14158 = !DILocation(line: 538, column: 1, scope: !14102)
!14159 = distinct !DISubprogram(name: "sliceable", scope: !2436, file: !2436, line: 468, type: !14160, scopeLine: 469, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14162)
!14160 = !DISubroutineType(types: !14161)
!14161 = !{!347, !2328}
!14162 = !{!14163, !14164}
!14163 = !DILocalVariable(name: "thread", arg: 1, scope: !14159, file: !2436, line: 468, type: !2328)
!14164 = !DILocalVariable(name: "ret", scope: !14159, file: !2436, line: 470, type: !347)
!14165 = !DILocation(line: 0, scope: !14159)
!14166 = !DILocation(line: 470, column: 13, scope: !14159)
!14167 = !DILocation(line: 471, column: 3, scope: !14159)
!14168 = !DILocation(line: 471, column: 7, scope: !14159)
!14169 = !DILocation(line: 472, column: 3, scope: !14159)
!14170 = !DILocation(line: 472, column: 37, scope: !14159)
!14171 = !DILocation(line: 472, column: 24, scope: !14159)
!14172 = !DILocation(line: 472, column: 43, scope: !14159)
!14173 = !DILocation(line: 472, column: 7, scope: !14159)
!14174 = !DILocation(line: 473, column: 3, scope: !14159)
!14175 = !DILocation(line: 473, column: 7, scope: !14159)
!14176 = !DILocation(line: 473, column: 6, scope: !14159)
!14177 = !DILocation(line: 479, column: 2, scope: !14159)
!14178 = distinct !DISubprogram(name: "slice_expired_locked", scope: !2436, file: !2436, line: 482, type: !14179, scopeLine: 483, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14181)
!14179 = !DISubroutineType(types: !14180)
!14180 = !{!14011, !14011}
!14181 = !{!14182, !14183}
!14182 = !DILocalVariable(name: "sched_lock_key", arg: 1, scope: !14178, file: !2436, line: 482, type: !14011)
!14183 = !DILocalVariable(name: "curr", scope: !14178, file: !2436, line: 484, type: !2328)
!14184 = !DILocation(line: 0, scope: !14178)
!14185 = !DILocation(line: 484, column: 26, scope: !14178)
!14186 = !DILocation(line: 493, column: 7, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14178, file: !2436, line: 493, column: 6)
!14188 = !DILocation(line: 493, column: 6, scope: !14178)
!14189 = !DILocation(line: 494, column: 3, scope: !14190)
!14190 = distinct !DILexicalBlock(scope: !14187, file: !2436, line: 493, column: 49)
!14191 = !DILocation(line: 495, column: 2, scope: !14190)
!14192 = !DILocation(line: 496, column: 2, scope: !14178)
!14193 = !DILocation(line: 499, column: 1, scope: !14178)
!14194 = distinct !DISubprogram(name: "z_is_thread_prevented_from_running", scope: !12811, file: !12811, line: 106, type: !14160, scopeLine: 107, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14195)
!14195 = !{!14196, !14197}
!14196 = !DILocalVariable(name: "thread", arg: 1, scope: !14194, file: !12811, line: 106, type: !2328)
!14197 = !DILocalVariable(name: "state", scope: !14194, file: !12811, line: 108, type: !178)
!14198 = !DILocation(line: 0, scope: !14194)
!14199 = !DILocation(line: 108, column: 31, scope: !14194)
!14200 = !DILocation(line: 110, column: 16, scope: !14194)
!14201 = !DILocation(line: 111, column: 41, scope: !14194)
!14202 = !DILocation(line: 110, column: 2, scope: !14194)
!14203 = distinct !DISubprogram(name: "move_thread_to_end_of_prio_q", scope: !2436, file: !2436, line: 393, type: !13977, scopeLine: 394, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14204)
!14204 = !{!14205}
!14205 = !DILocalVariable(name: "thread", arg: 1, scope: !14203, file: !2436, line: 393, type: !2328)
!14206 = !DILocation(line: 0, scope: !14203)
!14207 = !DILocation(line: 395, column: 6, scope: !14208)
!14208 = distinct !DILexicalBlock(scope: !14203, file: !2436, line: 395, column: 6)
!14209 = !DILocation(line: 395, column: 6, scope: !14203)
!14210 = !DILocalVariable(name: "thread", arg: 1, scope: !14211, file: !2436, line: 264, type: !2328)
!14211 = distinct !DISubprogram(name: "dequeue_thread", scope: !2436, file: !2436, line: 264, type: !13977, scopeLine: 265, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14212)
!14212 = !{!14210}
!14213 = !DILocation(line: 0, scope: !14211, inlinedAt: !14214)
!14214 = distinct !DILocation(line: 396, column: 3, scope: !14215)
!14215 = distinct !DILexicalBlock(scope: !14208, file: !2436, line: 395, column: 34)
!14216 = !DILocation(line: 266, column: 15, scope: !14211, inlinedAt: !14214)
!14217 = !DILocation(line: 266, column: 28, scope: !14211, inlinedAt: !14214)
!14218 = !DILocalVariable(name: "thread", arg: 1, scope: !14219, file: !2436, line: 232, type: !2328)
!14219 = distinct !DISubprogram(name: "runq_remove", scope: !2436, file: !2436, line: 232, type: !13977, scopeLine: 233, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14220)
!14220 = !{!14218}
!14221 = !DILocation(line: 0, scope: !14219, inlinedAt: !14222)
!14222 = distinct !DILocation(line: 268, column: 3, scope: !14223, inlinedAt: !14214)
!14223 = distinct !DILexicalBlock(scope: !14224, file: !2436, line: 267, column: 35)
!14224 = distinct !DILexicalBlock(scope: !14211, file: !2436, line: 267, column: 6)
!14225 = !DILocation(line: 234, column: 2, scope: !14219, inlinedAt: !14222)
!14226 = !DILocation(line: 397, column: 2, scope: !14215)
!14227 = !DILocalVariable(name: "thread", arg: 1, scope: !14228, file: !2436, line: 250, type: !2328)
!14228 = distinct !DISubprogram(name: "queue_thread", scope: !2436, file: !2436, line: 250, type: !13977, scopeLine: 251, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14229)
!14229 = !{!14227}
!14230 = !DILocation(line: 0, scope: !14228, inlinedAt: !14231)
!14231 = distinct !DILocation(line: 398, column: 2, scope: !14203)
!14232 = !DILocation(line: 252, column: 15, scope: !14228, inlinedAt: !14231)
!14233 = !DILocation(line: 252, column: 28, scope: !14228, inlinedAt: !14231)
!14234 = !DILocalVariable(name: "thread", arg: 1, scope: !14235, file: !2436, line: 227, type: !2328)
!14235 = distinct !DISubprogram(name: "runq_add", scope: !2436, file: !2436, line: 227, type: !13977, scopeLine: 228, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14236)
!14236 = !{!14234}
!14237 = !DILocation(line: 0, scope: !14235, inlinedAt: !14238)
!14238 = distinct !DILocation(line: 254, column: 3, scope: !14239, inlinedAt: !14231)
!14239 = distinct !DILexicalBlock(scope: !14240, file: !2436, line: 253, column: 35)
!14240 = distinct !DILexicalBlock(scope: !14228, file: !2436, line: 253, column: 6)
!14241 = !DILocalVariable(name: "pq", arg: 1, scope: !14242, file: !2436, line: 181, type: !14245)
!14242 = distinct !DISubprogram(name: "z_priq_dumb_add", scope: !2436, file: !2436, line: 181, type: !14243, scopeLine: 183, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14246)
!14243 = !DISubroutineType(types: !14244)
!14244 = !{null, !14245, !2328}
!14245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 32)
!14246 = !{!14241, !14247, !14248}
!14247 = !DILocalVariable(name: "thread", arg: 2, scope: !14242, file: !2436, line: 182, type: !2328)
!14248 = !DILocalVariable(name: "t", scope: !14242, file: !2436, line: 184, type: !2328)
!14249 = !DILocation(line: 0, scope: !14242, inlinedAt: !14250)
!14250 = distinct !DILocation(line: 229, column: 2, scope: !14235, inlinedAt: !14238)
!14251 = !DILocation(line: 186, column: 2, scope: !14252, inlinedAt: !14250)
!14252 = distinct !DILexicalBlock(scope: !14253, file: !2436, line: 186, column: 2)
!14253 = distinct !DILexicalBlock(scope: !14242, file: !2436, line: 186, column: 2)
!14254 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !14250)
!14255 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !14250)
!14256 = distinct !DILexicalBlock(scope: !14252, file: !2436, line: 186, column: 2)
!14257 = !DILocation(line: 188, column: 2, scope: !14258, inlinedAt: !14250)
!14258 = distinct !DILexicalBlock(scope: !14242, file: !2436, line: 188, column: 2)
!14259 = !DILocation(line: 188, column: 2, scope: !14260, inlinedAt: !14250)
!14260 = distinct !DILexicalBlock(scope: !14258, file: !2436, line: 188, column: 2)
!14261 = !DILocation(line: 0, scope: !14258, inlinedAt: !14250)
!14262 = !DILocation(line: 189, column: 7, scope: !14263, inlinedAt: !14250)
!14263 = distinct !DILexicalBlock(scope: !14264, file: !2436, line: 189, column: 7)
!14264 = distinct !DILexicalBlock(scope: !14260, file: !2436, line: 188, column: 56)
!14265 = !DILocation(line: 189, column: 35, scope: !14263, inlinedAt: !14250)
!14266 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !14250)
!14267 = !DILocation(line: 191, column: 21, scope: !14268, inlinedAt: !14250)
!14268 = distinct !DILexicalBlock(scope: !14263, file: !2436, line: 189, column: 40)
!14269 = !DILocation(line: 190, column: 4, scope: !14268, inlinedAt: !14250)
!14270 = !DILocation(line: 192, column: 4, scope: !14268, inlinedAt: !14250)
!14271 = distinct !{!14271, !14257, !14272}
!14272 = !DILocation(line: 194, column: 2, scope: !14258, inlinedAt: !14250)
!14273 = !DILocation(line: 196, column: 37, scope: !14242, inlinedAt: !14250)
!14274 = !DILocation(line: 196, column: 2, scope: !14242, inlinedAt: !14250)
!14275 = !DILocation(line: 197, column: 1, scope: !14242, inlinedAt: !14250)
!14276 = !DILocation(line: 399, column: 25, scope: !14203)
!14277 = !DILocation(line: 399, column: 22, scope: !14203)
!14278 = !DILocation(line: 399, column: 2, scope: !14203)
!14279 = !DILocation(line: 400, column: 1, scope: !14203)
!14280 = distinct !DISubprogram(name: "z_is_thread_queued", scope: !12811, file: !12811, line: 136, type: !14160, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14281)
!14281 = !{!14282}
!14282 = !DILocalVariable(name: "thread", arg: 1, scope: !14280, file: !12811, line: 136, type: !2328)
!14283 = !DILocation(line: 0, scope: !14280)
!14284 = !DILocation(line: 138, column: 9, scope: !14280)
!14285 = !DILocation(line: 138, column: 2, scope: !14280)
!14286 = distinct !DISubprogram(name: "z_priq_dumb_remove", scope: !2436, file: !2436, line: 1137, type: !14243, scopeLine: 1138, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14287)
!14287 = !{!14288, !14289}
!14288 = !DILocalVariable(name: "pq", arg: 1, scope: !14286, file: !2436, line: 1137, type: !14245)
!14289 = !DILocalVariable(name: "thread", arg: 2, scope: !14286, file: !2436, line: 1137, type: !2328)
!14290 = !DILocation(line: 0, scope: !14286)
!14291 = !DILocation(line: 1139, column: 2, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14293, file: !2436, line: 1139, column: 2)
!14293 = distinct !DILexicalBlock(scope: !14286, file: !2436, line: 1139, column: 2)
!14294 = !DILocation(line: 1139, column: 2, scope: !14293)
!14295 = !DILocation(line: 1139, column: 2, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14292, file: !2436, line: 1139, column: 2)
!14297 = !DILocation(line: 1141, column: 33, scope: !14286)
!14298 = !DILocation(line: 1141, column: 2, scope: !14286)
!14299 = !DILocation(line: 1142, column: 1, scope: !14286)
!14300 = distinct !DISubprogram(name: "z_is_idle_thread_object", scope: !12811, file: !12811, line: 83, type: !14160, scopeLine: 84, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14301)
!14301 = !{!14302}
!14302 = !DILocalVariable(name: "thread", arg: 1, scope: !14300, file: !12811, line: 83, type: !2328)
!14303 = !DILocation(line: 0, scope: !14300)
!14304 = !DILocation(line: 89, column: 16, scope: !14300)
!14305 = !DILocation(line: 89, column: 2, scope: !14300)
!14306 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !14307, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14309)
!14307 = !DISubroutineType(types: !14308)
!14308 = !{!2432, !14245}
!14309 = !{!14310}
!14310 = !DILocalVariable(name: "list", arg: 1, scope: !14306, file: !127, line: 294, type: !14245)
!14311 = !DILocation(line: 0, scope: !14306)
!14312 = !DILocation(line: 296, column: 9, scope: !14306)
!14313 = !DILocation(line: 296, column: 49, scope: !14306)
!14314 = !DILocation(line: 296, column: 2, scope: !14306)
!14315 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !14316, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14318)
!14316 = !DISubroutineType(types: !14317)
!14317 = !{null, !2432, !2432}
!14318 = !{!14319, !14320, !14321}
!14319 = !DILocalVariable(name: "successor", arg: 1, scope: !14315, file: !127, line: 443, type: !2432)
!14320 = !DILocalVariable(name: "node", arg: 2, scope: !14315, file: !127, line: 443, type: !2432)
!14321 = !DILocalVariable(name: "prev", scope: !14315, file: !127, line: 445, type: !14322)
!14322 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2432)
!14323 = !DILocation(line: 0, scope: !14315)
!14324 = !DILocation(line: 445, column: 39, scope: !14315)
!14325 = !DILocation(line: 447, column: 8, scope: !14315)
!14326 = !DILocation(line: 447, column: 13, scope: !14315)
!14327 = !DILocation(line: 448, column: 8, scope: !14315)
!14328 = !DILocation(line: 448, column: 13, scope: !14315)
!14329 = !DILocation(line: 449, column: 8, scope: !14315)
!14330 = !DILocation(line: 449, column: 13, scope: !14315)
!14331 = !DILocation(line: 450, column: 18, scope: !14315)
!14332 = !DILocation(line: 451, column: 1, scope: !14315)
!14333 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !14334, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14336)
!14334 = !DISubroutineType(types: !14335)
!14335 = !{!2432, !14245, !2432}
!14336 = !{!14337, !14338}
!14337 = !DILocalVariable(name: "list", arg: 1, scope: !14333, file: !127, line: 341, type: !14245)
!14338 = !DILocalVariable(name: "node", arg: 2, scope: !14333, file: !127, line: 342, type: !2432)
!14339 = !DILocation(line: 0, scope: !14333)
!14340 = !DILocation(line: 344, column: 15, scope: !14333)
!14341 = !DILocation(line: 344, column: 9, scope: !14333)
!14342 = !DILocation(line: 344, column: 26, scope: !14333)
!14343 = !DILocation(line: 344, column: 2, scope: !14333)
!14344 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !14345, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14347)
!14345 = !DISubroutineType(types: !14346)
!14346 = !{null, !14245, !2432}
!14347 = !{!14348, !14349, !14350}
!14348 = !DILocalVariable(name: "list", arg: 1, scope: !14344, file: !127, line: 404, type: !14245)
!14349 = !DILocalVariable(name: "node", arg: 2, scope: !14344, file: !127, line: 404, type: !2432)
!14350 = !DILocalVariable(name: "tail", scope: !14344, file: !127, line: 406, type: !14322)
!14351 = !DILocation(line: 0, scope: !14344)
!14352 = !DILocation(line: 406, column: 34, scope: !14344)
!14353 = !DILocation(line: 408, column: 8, scope: !14344)
!14354 = !DILocation(line: 408, column: 13, scope: !14344)
!14355 = !DILocation(line: 409, column: 8, scope: !14344)
!14356 = !DILocation(line: 409, column: 13, scope: !14344)
!14357 = !DILocation(line: 411, column: 8, scope: !14344)
!14358 = !DILocation(line: 411, column: 13, scope: !14344)
!14359 = !DILocation(line: 412, column: 13, scope: !14344)
!14360 = !DILocation(line: 413, column: 1, scope: !14344)
!14361 = distinct !DISubprogram(name: "update_cache", scope: !2436, file: !2436, line: 559, type: !8362, scopeLine: 560, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14362)
!14362 = !{!14363, !14364}
!14363 = !DILocalVariable(name: "preempt_ok", arg: 1, scope: !14361, file: !2436, line: 559, type: !109)
!14364 = !DILocalVariable(name: "thread", scope: !14361, file: !2436, line: 562, type: !2328)
!14365 = !DILocation(line: 0, scope: !14361)
!14366 = !DILocation(line: 239, column: 9, scope: !14367, inlinedAt: !14370)
!14367 = distinct !DISubprogram(name: "runq_best", scope: !2436, file: !2436, line: 237, type: !14368, scopeLine: 238, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!14368 = !DISubroutineType(types: !14369)
!14369 = !{!2328}
!14370 = distinct !DILocation(line: 314, column: 28, scope: !14371, inlinedAt: !14374)
!14371 = distinct !DISubprogram(name: "next_up", scope: !2436, file: !2436, line: 312, type: !14368, scopeLine: 313, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14372)
!14372 = !{!14373}
!14373 = !DILocalVariable(name: "thread", scope: !14371, file: !2436, line: 314, type: !2328)
!14374 = distinct !DILocation(line: 562, column: 28, scope: !14361)
!14375 = !DILocation(line: 0, scope: !14371, inlinedAt: !14374)
!14376 = !DILocation(line: 340, column: 17, scope: !14371, inlinedAt: !14374)
!14377 = !DILocation(line: 340, column: 9, scope: !14371, inlinedAt: !14374)
!14378 = !DILocalVariable(name: "thread", arg: 1, scope: !14379, file: !2436, line: 127, type: !2328)
!14379 = distinct !DISubprogram(name: "should_preempt", scope: !2436, file: !2436, line: 127, type: !14380, scopeLine: 129, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14382)
!14380 = !DISubroutineType(types: !14381)
!14381 = !{!347, !2328, !109}
!14382 = !{!14378, !14383}
!14383 = !DILocalVariable(name: "preempt_ok", arg: 2, scope: !14379, file: !2436, line: 128, type: !109)
!14384 = !DILocation(line: 0, scope: !14379, inlinedAt: !14385)
!14385 = distinct !DILocation(line: 564, column: 6, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14361, file: !2436, line: 564, column: 6)
!14387 = !DILocation(line: 133, column: 17, scope: !14388, inlinedAt: !14385)
!14388 = distinct !DILexicalBlock(scope: !14379, file: !2436, line: 133, column: 6)
!14389 = !DILocation(line: 0, scope: !14386)
!14390 = !DILocation(line: 133, column: 6, scope: !14379, inlinedAt: !14385)
!14391 = !DILocation(line: 137, column: 2, scope: !14392, inlinedAt: !14385)
!14392 = distinct !DILexicalBlock(scope: !14393, file: !2436, line: 137, column: 2)
!14393 = distinct !DILexicalBlock(scope: !14379, file: !2436, line: 137, column: 2)
!14394 = !DILocation(line: 137, column: 2, scope: !14393, inlinedAt: !14385)
!14395 = !DILocation(line: 137, column: 2, scope: !14396, inlinedAt: !14385)
!14396 = distinct !DILexicalBlock(scope: !14392, file: !2436, line: 137, column: 2)
!14397 = !DILocation(line: 140, column: 6, scope: !14398, inlinedAt: !14385)
!14398 = distinct !DILexicalBlock(scope: !14379, file: !2436, line: 140, column: 6)
!14399 = !DILocation(line: 140, column: 6, scope: !14379, inlinedAt: !14385)
!14400 = !DILocation(line: 150, column: 9, scope: !14401, inlinedAt: !14385)
!14401 = distinct !DILexicalBlock(scope: !14379, file: !2436, line: 149, column: 6)
!14402 = !DILocation(line: 149, column: 6, scope: !14379, inlinedAt: !14385)
!14403 = !DILocation(line: 157, column: 6, scope: !14404, inlinedAt: !14385)
!14404 = distinct !DILexicalBlock(scope: !14379, file: !2436, line: 157, column: 6)
!14405 = !DILocation(line: 564, column: 6, scope: !14361)
!14406 = !DILocation(line: 566, column: 14, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14408, file: !2436, line: 566, column: 7)
!14408 = distinct !DILexicalBlock(scope: !14386, file: !2436, line: 564, column: 42)
!14409 = !DILocation(line: 566, column: 7, scope: !14408)
!14410 = !DILocation(line: 567, column: 4, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14407, file: !2436, line: 566, column: 27)
!14412 = !DILocation(line: 568, column: 3, scope: !14411)
!14413 = !DILocation(line: 585, column: 1, scope: !14361)
!14414 = distinct !DISubprogram(name: "z_priq_dumb_best", scope: !2436, file: !2436, line: 1144, type: !14415, scopeLine: 1145, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14417)
!14415 = !DISubroutineType(types: !14416)
!14416 = !{!2328, !14245}
!14417 = !{!14418, !14419, !14420}
!14418 = !DILocalVariable(name: "pq", arg: 1, scope: !14414, file: !2436, line: 1144, type: !14245)
!14419 = !DILocalVariable(name: "thread", scope: !14414, file: !2436, line: 1146, type: !2328)
!14420 = !DILocalVariable(name: "n", scope: !14414, file: !2436, line: 1147, type: !2432)
!14421 = !DILocation(line: 0, scope: !14414)
!14422 = !DILocation(line: 1147, column: 19, scope: !14414)
!14423 = !DILocation(line: 1152, column: 2, scope: !14414)
!14424 = distinct !DISubprogram(name: "z_is_thread_timeout_active", scope: !12811, file: !12811, line: 115, type: !14160, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14425)
!14425 = !{!14426}
!14426 = !DILocalVariable(name: "thread", arg: 1, scope: !14424, file: !12811, line: 115, type: !2328)
!14427 = !DILocation(line: 0, scope: !14424)
!14428 = !DILocation(line: 117, column: 46, scope: !14424)
!14429 = !DILocation(line: 117, column: 10, scope: !14424)
!14430 = !DILocation(line: 117, column: 9, scope: !14424)
!14431 = !DILocation(line: 117, column: 2, scope: !14424)
!14432 = distinct !DISubprogram(name: "is_preempt", scope: !2436, file: !2436, line: 62, type: !13995, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14433)
!14433 = !{!14434}
!14434 = !DILocalVariable(name: "thread", arg: 1, scope: !14432, file: !2436, line: 62, type: !2328)
!14435 = !DILocation(line: 0, scope: !14432)
!14436 = !DILocation(line: 65, column: 22, scope: !14432)
!14437 = !DILocation(line: 65, column: 30, scope: !14432)
!14438 = !DILocation(line: 65, column: 2, scope: !14432)
!14439 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13240, file: !13240, line: 35, type: !14440, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14444)
!14440 = !DISubroutineType(types: !14441)
!14441 = !{!347, !14442}
!14442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14443, size: 32)
!14443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2379)
!14444 = !{!14445}
!14445 = !DILocalVariable(name: "to", arg: 1, scope: !14439, file: !13240, line: 35, type: !14442)
!14446 = !DILocation(line: 0, scope: !14439)
!14447 = !DILocation(line: 37, column: 35, scope: !14439)
!14448 = !DILocation(line: 37, column: 10, scope: !14439)
!14449 = !DILocation(line: 37, column: 9, scope: !14439)
!14450 = !DILocation(line: 37, column: 2, scope: !14439)
!14451 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !14452, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14456)
!14452 = !DISubroutineType(types: !14453)
!14453 = !{!347, !14454}
!14454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14455, size: 32)
!14455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2338)
!14456 = !{!14457}
!14457 = !DILocalVariable(name: "node", arg: 1, scope: !14451, file: !127, line: 225, type: !14454)
!14458 = !DILocation(line: 0, scope: !14451)
!14459 = !DILocation(line: 227, column: 15, scope: !14451)
!14460 = !DILocation(line: 227, column: 20, scope: !14451)
!14461 = !DILocation(line: 227, column: 2, scope: !14451)
!14462 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !14334, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14463)
!14463 = !{!14464, !14465}
!14464 = !DILocalVariable(name: "list", arg: 1, scope: !14462, file: !127, line: 325, type: !14245)
!14465 = !DILocalVariable(name: "node", arg: 2, scope: !14462, file: !127, line: 326, type: !2432)
!14466 = !DILocation(line: 0, scope: !14462)
!14467 = !DILocation(line: 328, column: 24, scope: !14462)
!14468 = !DILocation(line: 328, column: 15, scope: !14462)
!14469 = !DILocation(line: 328, column: 9, scope: !14462)
!14470 = !DILocation(line: 328, column: 45, scope: !14462)
!14471 = !DILocation(line: 328, column: 2, scope: !14462)
!14472 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !14473, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14475)
!14473 = !DISubroutineType(types: !14474)
!14474 = !{!347, !14245}
!14475 = !{!14476}
!14476 = !DILocalVariable(name: "list", arg: 1, scope: !14472, file: !127, line: 266, type: !14245)
!14477 = !DILocation(line: 0, scope: !14472)
!14478 = !DILocation(line: 268, column: 15, scope: !14472)
!14479 = !DILocation(line: 268, column: 20, scope: !14472)
!14480 = !DILocation(line: 268, column: 2, scope: !14472)
!14481 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !14482, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14484)
!14482 = !DISubroutineType(types: !14483)
!14483 = !{null, !2432}
!14484 = !{!14485, !14486, !14487}
!14485 = !DILocalVariable(name: "node", arg: 1, scope: !14481, file: !127, line: 496, type: !2432)
!14486 = !DILocalVariable(name: "prev", scope: !14481, file: !127, line: 498, type: !14322)
!14487 = !DILocalVariable(name: "next", scope: !14481, file: !127, line: 499, type: !14322)
!14488 = !DILocation(line: 0, scope: !14481)
!14489 = !DILocation(line: 498, column: 34, scope: !14481)
!14490 = !DILocation(line: 499, column: 34, scope: !14481)
!14491 = !DILocation(line: 501, column: 8, scope: !14481)
!14492 = !DILocation(line: 501, column: 13, scope: !14481)
!14493 = !DILocation(line: 502, column: 8, scope: !14481)
!14494 = !DILocation(line: 502, column: 13, scope: !14481)
!14495 = !DILocation(line: 503, column: 2, scope: !14481)
!14496 = !DILocation(line: 504, column: 1, scope: !14481)
!14497 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !14482, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14498)
!14498 = !{!14499}
!14499 = !DILocalVariable(name: "node", arg: 1, scope: !14497, file: !127, line: 211, type: !2432)
!14500 = !DILocation(line: 0, scope: !14497)
!14501 = !DILocation(line: 213, column: 8, scope: !14497)
!14502 = !DILocation(line: 213, column: 13, scope: !14497)
!14503 = !DILocation(line: 214, column: 8, scope: !14497)
!14504 = !DILocation(line: 214, column: 13, scope: !14497)
!14505 = !DILocation(line: 215, column: 1, scope: !14497)
!14506 = distinct !DISubprogram(name: "z_is_thread_state_set", scope: !12811, file: !12811, line: 131, type: !14507, scopeLine: 132, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14509)
!14507 = !DISubroutineType(types: !14508)
!14508 = !{!347, !2328, !110}
!14509 = !{!14510, !14511}
!14510 = !DILocalVariable(name: "thread", arg: 1, scope: !14506, file: !12811, line: 131, type: !2328)
!14511 = !DILocalVariable(name: "state", arg: 2, scope: !14506, file: !12811, line: 131, type: !110)
!14512 = !DILocation(line: 0, scope: !14506)
!14513 = !DILocation(line: 133, column: 23, scope: !14506)
!14514 = !DILocation(line: 133, column: 10, scope: !14506)
!14515 = !DILocation(line: 133, column: 36, scope: !14506)
!14516 = !DILocation(line: 133, column: 45, scope: !14506)
!14517 = !DILocation(line: 133, column: 2, scope: !14506)
!14518 = distinct !DISubprogram(name: "z_is_prio_higher", scope: !12811, file: !12811, line: 211, type: !13809, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14519)
!14519 = !{!14520, !14521}
!14520 = !DILocalVariable(name: "prio", arg: 1, scope: !14518, file: !12811, line: 211, type: !109)
!14521 = !DILocalVariable(name: "test_prio", arg: 2, scope: !14518, file: !12811, line: 211, type: !109)
!14522 = !DILocation(line: 0, scope: !14518)
!14523 = !DILocation(line: 213, column: 9, scope: !14518)
!14524 = !DILocation(line: 213, column: 2, scope: !14518)
!14525 = distinct !DISubprogram(name: "z_is_prio1_higher_than_prio2", scope: !12811, file: !12811, line: 206, type: !13809, scopeLine: 207, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14526)
!14526 = !{!14527, !14528}
!14527 = !DILocalVariable(name: "prio1", arg: 1, scope: !14525, file: !12811, line: 206, type: !109)
!14528 = !DILocalVariable(name: "prio2", arg: 2, scope: !14525, file: !12811, line: 206, type: !109)
!14529 = !DILocation(line: 0, scope: !14525)
!14530 = !DILocation(line: 208, column: 15, scope: !14525)
!14531 = !DILocation(line: 208, column: 2, scope: !14525)
!14532 = distinct !DISubprogram(name: "z_ready_thread", scope: !2436, file: !2436, line: 635, type: !13977, scopeLine: 636, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14533)
!14533 = !{!14534, !14535, !14537}
!14534 = !DILocalVariable(name: "thread", arg: 1, scope: !14532, file: !2436, line: 635, type: !2328)
!14535 = !DILocalVariable(name: "__i", scope: !14536, file: !2436, line: 637, type: !14011)
!14536 = distinct !DILexicalBlock(scope: !14532, file: !2436, line: 637, column: 2)
!14537 = !DILocalVariable(name: "__key", scope: !14536, file: !2436, line: 637, type: !14011)
!14538 = !DILocation(line: 0, scope: !14532)
!14539 = !DILocation(line: 0, scope: !14536)
!14540 = !DILocation(line: 0, scope: !14019, inlinedAt: !14541)
!14541 = distinct !DILocation(line: 637, column: 2, scope: !14536)
!14542 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14543)
!14543 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !14541)
!14544 = !DILocation(line: 0, scope: !14028, inlinedAt: !14543)
!14545 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14541)
!14546 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14541)
!14547 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14541)
!14548 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !14541)
!14549 = !DILocation(line: 639, column: 4, scope: !14550)
!14550 = distinct !DILexicalBlock(scope: !14551, file: !2436, line: 638, column: 41)
!14551 = distinct !DILexicalBlock(scope: !14552, file: !2436, line: 638, column: 7)
!14552 = distinct !DILexicalBlock(scope: !14553, file: !2436, line: 637, column: 26)
!14553 = distinct !DILexicalBlock(scope: !14536, file: !2436, line: 637, column: 2)
!14554 = !DILocation(line: 0, scope: !14053, inlinedAt: !14555)
!14555 = distinct !DILocation(line: 637, column: 2, scope: !14553)
!14556 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14555)
!14557 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14555)
!14558 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14555)
!14559 = !DILocation(line: 0, scope: !14067, inlinedAt: !14560)
!14560 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14555)
!14561 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14560)
!14562 = !DILocation(line: 642, column: 1, scope: !14532)
!14563 = distinct !DISubprogram(name: "ready_thread", scope: !2436, file: !2436, line: 617, type: !13977, scopeLine: 618, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14564)
!14564 = !{!14565}
!14565 = !DILocalVariable(name: "thread", arg: 1, scope: !14563, file: !2436, line: 617, type: !2328)
!14566 = !DILocation(line: 0, scope: !14563)
!14567 = !DILocation(line: 626, column: 7, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14563, file: !2436, line: 626, column: 6)
!14569 = !DILocation(line: 626, column: 34, scope: !14568)
!14570 = !DILocation(line: 626, column: 37, scope: !14568)
!14571 = !DILocation(line: 626, column: 6, scope: !14563)
!14572 = !DILocation(line: 0, scope: !14228, inlinedAt: !14573)
!14573 = distinct !DILocation(line: 629, column: 3, scope: !14574)
!14574 = distinct !DILexicalBlock(scope: !14568, file: !2436, line: 626, column: 64)
!14575 = !DILocation(line: 252, column: 15, scope: !14228, inlinedAt: !14573)
!14576 = !DILocation(line: 252, column: 28, scope: !14228, inlinedAt: !14573)
!14577 = !DILocation(line: 0, scope: !14235, inlinedAt: !14578)
!14578 = distinct !DILocation(line: 254, column: 3, scope: !14239, inlinedAt: !14573)
!14579 = !DILocation(line: 0, scope: !14242, inlinedAt: !14580)
!14580 = distinct !DILocation(line: 229, column: 2, scope: !14235, inlinedAt: !14578)
!14581 = !DILocation(line: 186, column: 2, scope: !14252, inlinedAt: !14580)
!14582 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !14580)
!14583 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !14580)
!14584 = !DILocation(line: 188, column: 2, scope: !14258, inlinedAt: !14580)
!14585 = !DILocation(line: 188, column: 2, scope: !14260, inlinedAt: !14580)
!14586 = !DILocation(line: 0, scope: !14258, inlinedAt: !14580)
!14587 = !DILocation(line: 189, column: 7, scope: !14263, inlinedAt: !14580)
!14588 = !DILocation(line: 189, column: 35, scope: !14263, inlinedAt: !14580)
!14589 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !14580)
!14590 = !DILocation(line: 191, column: 21, scope: !14268, inlinedAt: !14580)
!14591 = !DILocation(line: 190, column: 4, scope: !14268, inlinedAt: !14580)
!14592 = !DILocation(line: 192, column: 4, scope: !14268, inlinedAt: !14580)
!14593 = distinct !{!14593, !14584, !14594}
!14594 = !DILocation(line: 194, column: 2, scope: !14258, inlinedAt: !14580)
!14595 = !DILocation(line: 196, column: 37, scope: !14242, inlinedAt: !14580)
!14596 = !DILocation(line: 196, column: 2, scope: !14242, inlinedAt: !14580)
!14597 = !DILocation(line: 197, column: 1, scope: !14242, inlinedAt: !14580)
!14598 = !DILocation(line: 630, column: 3, scope: !14574)
!14599 = !DILocation(line: 632, column: 2, scope: !14574)
!14600 = !DILocation(line: 633, column: 1, scope: !14563)
!14601 = distinct !DISubprogram(name: "z_is_thread_ready", scope: !12811, file: !12811, line: 120, type: !14160, scopeLine: 121, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14602)
!14602 = !{!14603}
!14603 = !DILocalVariable(name: "thread", arg: 1, scope: !14601, file: !12811, line: 120, type: !2328)
!14604 = !DILocation(line: 0, scope: !14601)
!14605 = !DILocation(line: 122, column: 12, scope: !14601)
!14606 = !DILocation(line: 122, column: 62, scope: !14601)
!14607 = !DILocation(line: 123, column: 4, scope: !14601)
!14608 = !DILocation(line: 122, column: 2, scope: !14601)
!14609 = distinct !DISubprogram(name: "z_move_thread_to_end_of_prio_q", scope: !2436, file: !2436, line: 644, type: !13977, scopeLine: 645, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14610)
!14610 = !{!14611, !14612, !14614}
!14611 = !DILocalVariable(name: "thread", arg: 1, scope: !14609, file: !2436, line: 644, type: !2328)
!14612 = !DILocalVariable(name: "__i", scope: !14613, file: !2436, line: 646, type: !14011)
!14613 = distinct !DILexicalBlock(scope: !14609, file: !2436, line: 646, column: 2)
!14614 = !DILocalVariable(name: "__key", scope: !14613, file: !2436, line: 646, type: !14011)
!14615 = !DILocation(line: 0, scope: !14609)
!14616 = !DILocation(line: 0, scope: !14613)
!14617 = !DILocation(line: 0, scope: !14019, inlinedAt: !14618)
!14618 = distinct !DILocation(line: 646, column: 2, scope: !14613)
!14619 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14620)
!14620 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !14618)
!14621 = !DILocation(line: 0, scope: !14028, inlinedAt: !14620)
!14622 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14618)
!14623 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14618)
!14624 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14618)
!14625 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !14618)
!14626 = !DILocation(line: 647, column: 3, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14628, file: !2436, line: 646, column: 26)
!14628 = distinct !DILexicalBlock(scope: !14613, file: !2436, line: 646, column: 2)
!14629 = !DILocation(line: 0, scope: !14053, inlinedAt: !14630)
!14630 = distinct !DILocation(line: 646, column: 2, scope: !14628)
!14631 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14630)
!14632 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14630)
!14633 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14630)
!14634 = !DILocation(line: 0, scope: !14067, inlinedAt: !14635)
!14635 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14630)
!14636 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14635)
!14637 = !DILocation(line: 649, column: 1, scope: !14609)
!14638 = distinct !DISubprogram(name: "z_sched_start", scope: !2436, file: !2436, line: 651, type: !13977, scopeLine: 652, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14639)
!14639 = !{!14640, !14641}
!14640 = !DILocalVariable(name: "thread", arg: 1, scope: !14638, file: !2436, line: 651, type: !2328)
!14641 = !DILocalVariable(name: "key", scope: !14638, file: !2436, line: 653, type: !14011)
!14642 = !DILocation(line: 0, scope: !14638)
!14643 = !DILocation(line: 0, scope: !14019, inlinedAt: !14644)
!14644 = distinct !DILocation(line: 653, column: 25, scope: !14638)
!14645 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14646)
!14646 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !14644)
!14647 = !DILocation(line: 0, scope: !14028, inlinedAt: !14646)
!14648 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14644)
!14649 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14644)
!14650 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14644)
!14651 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !14644)
!14652 = !DILocation(line: 655, column: 6, scope: !14653)
!14653 = distinct !DILexicalBlock(scope: !14638, file: !2436, line: 655, column: 6)
!14654 = !DILocation(line: 655, column: 6, scope: !14638)
!14655 = !DILocation(line: 0, scope: !14053, inlinedAt: !14656)
!14656 = distinct !DILocation(line: 656, column: 3, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14653, file: !2436, line: 655, column: 36)
!14658 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14656)
!14659 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14656)
!14660 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14656)
!14661 = !DILocation(line: 0, scope: !14067, inlinedAt: !14662)
!14662 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14656)
!14663 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14662)
!14664 = !DILocation(line: 657, column: 3, scope: !14657)
!14665 = !DILocation(line: 660, column: 2, scope: !14638)
!14666 = !DILocation(line: 661, column: 2, scope: !14638)
!14667 = !DILocation(line: 662, column: 2, scope: !14638)
!14668 = !DILocation(line: 663, column: 1, scope: !14638)
!14669 = distinct !DISubprogram(name: "z_has_thread_started", scope: !12811, file: !12811, line: 126, type: !14160, scopeLine: 127, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14670)
!14670 = !{!14671}
!14671 = !DILocalVariable(name: "thread", arg: 1, scope: !14669, file: !12811, line: 126, type: !2328)
!14672 = !DILocation(line: 0, scope: !14669)
!14673 = !DILocation(line: 128, column: 23, scope: !14669)
!14674 = !DILocation(line: 128, column: 36, scope: !14669)
!14675 = !DILocation(line: 128, column: 56, scope: !14669)
!14676 = !DILocation(line: 128, column: 2, scope: !14669)
!14677 = distinct !DISubprogram(name: "z_mark_thread_as_started", scope: !12811, file: !12811, line: 155, type: !13977, scopeLine: 156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14678)
!14678 = !{!14679}
!14679 = !DILocalVariable(name: "thread", arg: 1, scope: !14677, file: !12811, line: 155, type: !2328)
!14680 = !DILocation(line: 0, scope: !14677)
!14681 = !DILocation(line: 157, column: 15, scope: !14677)
!14682 = !DILocation(line: 157, column: 28, scope: !14677)
!14683 = !DILocation(line: 158, column: 1, scope: !14677)
!14684 = distinct !DISubprogram(name: "z_reschedule", scope: !2436, file: !2436, line: 967, type: !14054, scopeLine: 968, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14685)
!14685 = !{!14686, !14687}
!14686 = !DILocalVariable(name: "lock", arg: 1, scope: !14684, file: !2436, line: 967, type: !14022)
!14687 = !DILocalVariable(name: "key", arg: 2, scope: !14684, file: !2436, line: 967, type: !14011)
!14688 = !DILocation(line: 0, scope: !14684)
!14689 = !DILocation(line: 969, column: 6, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14684, file: !2436, line: 969, column: 6)
!14691 = !DILocation(line: 969, column: 23, scope: !14690)
!14692 = !DILocation(line: 969, column: 26, scope: !14690)
!14693 = !DILocation(line: 969, column: 6, scope: !14684)
!14694 = !DILocalVariable(name: "key", arg: 2, scope: !14695, file: !12915, line: 193, type: !14011)
!14695 = distinct !DISubprogram(name: "z_swap", scope: !12915, file: !12915, line: 193, type: !14696, scopeLine: 194, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14698)
!14696 = !DISubroutineType(types: !14697)
!14697 = !{!109, !14022, !14011}
!14698 = !{!14699, !14694}
!14699 = !DILocalVariable(name: "lock", arg: 1, scope: !14695, file: !12915, line: 193, type: !14022)
!14700 = !DILocation(line: 0, scope: !14695, inlinedAt: !14701)
!14701 = distinct !DILocation(line: 970, column: 3, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14690, file: !2436, line: 969, column: 39)
!14703 = !DILocalVariable(name: "l", arg: 1, scope: !14704, file: !251, line: 221, type: !14022)
!14704 = distinct !DISubprogram(name: "k_spin_release", scope: !251, file: !251, line: 221, type: !14705, scopeLine: 222, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14707)
!14705 = !DISubroutineType(types: !14706)
!14706 = !{null, !14022}
!14707 = !{!14703}
!14708 = !DILocation(line: 0, scope: !14704, inlinedAt: !14709)
!14709 = distinct !DILocation(line: 195, column: 2, scope: !14695, inlinedAt: !14701)
!14710 = !DILocation(line: 225, column: 2, scope: !14711, inlinedAt: !14709)
!14711 = distinct !DILexicalBlock(scope: !14712, file: !251, line: 225, column: 2)
!14712 = distinct !DILexicalBlock(scope: !14704, file: !251, line: 225, column: 2)
!14713 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !14709)
!14714 = !DILocation(line: 225, column: 2, scope: !14715, inlinedAt: !14709)
!14715 = distinct !DILexicalBlock(scope: !14711, file: !251, line: 225, column: 2)
!14716 = !DILocation(line: 196, column: 9, scope: !14695, inlinedAt: !14701)
!14717 = !DILocation(line: 971, column: 2, scope: !14702)
!14718 = !DILocation(line: 0, scope: !14053, inlinedAt: !14719)
!14719 = distinct !DILocation(line: 972, column: 3, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14690, file: !2436, line: 971, column: 9)
!14721 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14719)
!14722 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14719)
!14723 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14719)
!14724 = !DILocation(line: 0, scope: !14067, inlinedAt: !14725)
!14725 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14719)
!14726 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14725)
!14727 = !DILocation(line: 975, column: 1, scope: !14684)
!14728 = distinct !DISubprogram(name: "resched", scope: !2436, file: !2436, line: 940, type: !14729, scopeLine: 941, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14731)
!14729 = !DISubroutineType(types: !14730)
!14730 = !{!347, !110}
!14731 = !{!14732}
!14732 = !DILocalVariable(name: "key", arg: 1, scope: !14728, file: !2436, line: 940, type: !110)
!14733 = !DILocation(line: 0, scope: !14728)
!14734 = !DILocalVariable(name: "key", arg: 1, scope: !14735, file: !6101, line: 112, type: !32)
!14735 = distinct !DISubprogram(name: "arch_irq_unlocked", scope: !6101, file: !6101, line: 112, type: !14736, scopeLine: 113, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14738)
!14736 = !DISubroutineType(types: !14737)
!14737 = !{!347, !32}
!14738 = !{!14734}
!14739 = !DILocation(line: 0, scope: !14735, inlinedAt: !14740)
!14740 = distinct !DILocation(line: 946, column: 9, scope: !14728)
!14741 = !DILocation(line: 115, column: 13, scope: !14735, inlinedAt: !14740)
!14742 = !DILocation(line: 946, column: 32, scope: !14728)
!14743 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !14747)
!14744 = distinct !DISubprogram(name: "__get_IPSR", scope: !6422, file: !6422, line: 1027, type: !6509, scopeLine: 1028, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14745)
!14745 = !{!14746}
!14746 = !DILocalVariable(name: "result", scope: !14744, file: !6422, line: 1029, type: !110)
!14747 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !14749)
!14748 = distinct !DISubprogram(name: "arch_is_in_isr", scope: !7474, file: !7474, line: 46, type: !7475, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!14749 = distinct !DILocation(line: 946, column: 36, scope: !14728)
!14750 = !{i64 3541903}
!14751 = !DILocation(line: 0, scope: !14744, inlinedAt: !14747)
!14752 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !14749)
!14753 = !DILocation(line: 946, column: 2, scope: !14728)
!14754 = distinct !DISubprogram(name: "need_swap", scope: !2436, file: !2436, line: 953, type: !7475, scopeLine: 954, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14755)
!14755 = !{!14756}
!14756 = !DILocalVariable(name: "new_thread", scope: !14754, file: !2436, line: 959, type: !2328)
!14757 = !DILocation(line: 962, column: 31, scope: !14754)
!14758 = !DILocation(line: 0, scope: !14754)
!14759 = !DILocation(line: 963, column: 23, scope: !14754)
!14760 = !DILocation(line: 963, column: 20, scope: !14754)
!14761 = !DILocation(line: 963, column: 2, scope: !14754)
!14762 = distinct !DISubprogram(name: "z_swap_irqlock", scope: !12915, file: !12915, line: 181, type: !6432, scopeLine: 182, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14763)
!14763 = !{!14764, !14765}
!14764 = !DILocalVariable(name: "key", arg: 1, scope: !14762, file: !12915, line: 181, type: !32)
!14765 = !DILocalVariable(name: "ret", scope: !14762, file: !12915, line: 183, type: !109)
!14766 = !DILocation(line: 0, scope: !14762)
!14767 = !DILocation(line: 185, column: 8, scope: !14762)
!14768 = !DILocation(line: 186, column: 2, scope: !14762)
!14769 = distinct !DISubprogram(name: "z_impl_k_thread_suspend", scope: !2436, file: !2436, line: 665, type: !13977, scopeLine: 666, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14770)
!14770 = !{!14771, !14772, !14774}
!14771 = !DILocalVariable(name: "thread", arg: 1, scope: !14769, file: !2436, line: 665, type: !2328)
!14772 = !DILocalVariable(name: "__i", scope: !14773, file: !2436, line: 671, type: !14011)
!14773 = distinct !DILexicalBlock(scope: !14769, file: !2436, line: 671, column: 2)
!14774 = !DILocalVariable(name: "__key", scope: !14773, file: !2436, line: 671, type: !14011)
!14775 = !DILocation(line: 0, scope: !14769)
!14776 = !DILocation(line: 669, column: 8, scope: !14769)
!14777 = !DILocation(line: 0, scope: !14773)
!14778 = !DILocation(line: 0, scope: !14019, inlinedAt: !14779)
!14779 = distinct !DILocation(line: 671, column: 2, scope: !14773)
!14780 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14781)
!14781 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !14779)
!14782 = !DILocation(line: 0, scope: !14028, inlinedAt: !14781)
!14783 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14779)
!14784 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14779)
!14785 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14779)
!14786 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !14779)
!14787 = !DILocation(line: 672, column: 7, scope: !14788)
!14788 = distinct !DILexicalBlock(scope: !14789, file: !2436, line: 672, column: 7)
!14789 = distinct !DILexicalBlock(scope: !14790, file: !2436, line: 671, column: 26)
!14790 = distinct !DILexicalBlock(scope: !14773, file: !2436, line: 671, column: 2)
!14791 = !DILocation(line: 672, column: 7, scope: !14789)
!14792 = !DILocation(line: 0, scope: !14211, inlinedAt: !14793)
!14793 = distinct !DILocation(line: 673, column: 4, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14788, file: !2436, line: 672, column: 35)
!14795 = !DILocation(line: 266, column: 15, scope: !14211, inlinedAt: !14793)
!14796 = !DILocation(line: 266, column: 28, scope: !14211, inlinedAt: !14793)
!14797 = !DILocation(line: 0, scope: !14219, inlinedAt: !14798)
!14798 = distinct !DILocation(line: 268, column: 3, scope: !14223, inlinedAt: !14793)
!14799 = !DILocation(line: 234, column: 2, scope: !14219, inlinedAt: !14798)
!14800 = !DILocation(line: 674, column: 3, scope: !14794)
!14801 = !DILocation(line: 675, column: 3, scope: !14789)
!14802 = !DILocation(line: 676, column: 26, scope: !14789)
!14803 = !DILocation(line: 676, column: 23, scope: !14789)
!14804 = !DILocation(line: 676, column: 3, scope: !14789)
!14805 = !DILocation(line: 0, scope: !14053, inlinedAt: !14806)
!14806 = distinct !DILocation(line: 671, column: 2, scope: !14790)
!14807 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14806)
!14808 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14806)
!14809 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14806)
!14810 = !DILocation(line: 0, scope: !14067, inlinedAt: !14811)
!14811 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14806)
!14812 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14811)
!14813 = !DILocation(line: 679, column: 16, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14769, file: !2436, line: 679, column: 6)
!14815 = !DILocation(line: 679, column: 13, scope: !14814)
!14816 = !DILocation(line: 679, column: 6, scope: !14769)
!14817 = !DILocation(line: 680, column: 3, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14814, file: !2436, line: 679, column: 26)
!14819 = !DILocation(line: 681, column: 2, scope: !14818)
!14820 = !DILocation(line: 684, column: 1, scope: !14769)
!14821 = distinct !DISubprogram(name: "z_abort_thread_timeout", scope: !13240, file: !13240, line: 52, type: !13995, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14822)
!14822 = !{!14823}
!14823 = !DILocalVariable(name: "thread", arg: 1, scope: !14821, file: !13240, line: 52, type: !2328)
!14824 = !DILocation(line: 0, scope: !14821)
!14825 = !DILocation(line: 54, column: 39, scope: !14821)
!14826 = !DILocation(line: 54, column: 9, scope: !14821)
!14827 = !DILocation(line: 54, column: 2, scope: !14821)
!14828 = distinct !DISubprogram(name: "z_mark_thread_as_suspended", scope: !12811, file: !12811, line: 141, type: !13977, scopeLine: 142, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14829)
!14829 = !{!14830}
!14830 = !DILocalVariable(name: "thread", arg: 1, scope: !14828, file: !12811, line: 141, type: !2328)
!14831 = !DILocation(line: 0, scope: !14828)
!14832 = !DILocation(line: 143, column: 15, scope: !14828)
!14833 = !DILocation(line: 143, column: 28, scope: !14828)
!14834 = !DILocation(line: 146, column: 1, scope: !14828)
!14835 = distinct !DISubprogram(name: "z_reschedule_unlocked", scope: !12811, file: !12811, line: 73, type: !3089, scopeLine: 74, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!14836 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14837)
!14837 = distinct !DILocation(line: 75, column: 30, scope: !14835)
!14838 = !DILocation(line: 0, scope: !14028, inlinedAt: !14837)
!14839 = !DILocation(line: 75, column: 9, scope: !14835)
!14840 = !DILocation(line: 76, column: 1, scope: !14835)
!14841 = distinct !DISubprogram(name: "z_reschedule_irqlock", scope: !2436, file: !2436, line: 977, type: !6519, scopeLine: 978, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14842)
!14842 = !{!14843}
!14843 = !DILocalVariable(name: "key", arg: 1, scope: !14841, file: !2436, line: 977, type: !110)
!14844 = !DILocation(line: 0, scope: !14841)
!14845 = !DILocation(line: 979, column: 6, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14841, file: !2436, line: 979, column: 6)
!14847 = !DILocation(line: 979, column: 6, scope: !14841)
!14848 = !DILocation(line: 980, column: 3, scope: !14849)
!14849 = distinct !DILexicalBlock(scope: !14846, file: !2436, line: 979, column: 20)
!14850 = !DILocation(line: 981, column: 2, scope: !14849)
!14851 = !DILocation(line: 0, scope: !14067, inlinedAt: !14852)
!14852 = distinct !DILocation(line: 982, column: 3, scope: !14853)
!14853 = distinct !DILexicalBlock(scope: !14846, file: !2436, line: 981, column: 9)
!14854 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14852)
!14855 = !DILocation(line: 985, column: 1, scope: !14841)
!14856 = distinct !DISubprogram(name: "z_impl_k_thread_resume", scope: !2436, file: !2436, line: 695, type: !13977, scopeLine: 696, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14857)
!14857 = !{!14858, !14859}
!14858 = !DILocalVariable(name: "thread", arg: 1, scope: !14856, file: !2436, line: 695, type: !2328)
!14859 = !DILocalVariable(name: "key", scope: !14856, file: !2436, line: 699, type: !14011)
!14860 = !DILocation(line: 0, scope: !14856)
!14861 = !DILocation(line: 0, scope: !14019, inlinedAt: !14862)
!14862 = distinct !DILocation(line: 699, column: 25, scope: !14856)
!14863 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14864)
!14864 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !14862)
!14865 = !DILocation(line: 0, scope: !14028, inlinedAt: !14864)
!14866 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14862)
!14867 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14862)
!14868 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14862)
!14869 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !14862)
!14870 = !DILocation(line: 702, column: 7, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14856, file: !2436, line: 702, column: 6)
!14872 = !DILocation(line: 702, column: 6, scope: !14856)
!14873 = !DILocation(line: 0, scope: !14053, inlinedAt: !14874)
!14874 = distinct !DILocation(line: 703, column: 3, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14871, file: !2436, line: 702, column: 38)
!14876 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14874)
!14877 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14874)
!14878 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14874)
!14879 = !DILocation(line: 0, scope: !14067, inlinedAt: !14880)
!14880 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14874)
!14881 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14880)
!14882 = !DILocation(line: 704, column: 3, scope: !14875)
!14883 = !DILocation(line: 707, column: 2, scope: !14856)
!14884 = !DILocation(line: 708, column: 2, scope: !14856)
!14885 = !DILocation(line: 710, column: 2, scope: !14856)
!14886 = !DILocation(line: 713, column: 1, scope: !14856)
!14887 = distinct !DISubprogram(name: "z_is_thread_suspended", scope: !12811, file: !12811, line: 96, type: !14160, scopeLine: 97, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14888)
!14888 = !{!14889}
!14889 = !DILocalVariable(name: "thread", arg: 1, scope: !14887, file: !12811, line: 96, type: !2328)
!14890 = !DILocation(line: 0, scope: !14887)
!14891 = !DILocation(line: 98, column: 23, scope: !14887)
!14892 = !DILocation(line: 98, column: 36, scope: !14887)
!14893 = !DILocation(line: 98, column: 57, scope: !14887)
!14894 = !DILocation(line: 98, column: 2, scope: !14887)
!14895 = distinct !DISubprogram(name: "z_mark_thread_as_not_suspended", scope: !12811, file: !12811, line: 148, type: !13977, scopeLine: 149, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14896)
!14896 = !{!14897}
!14897 = !DILocalVariable(name: "thread", arg: 1, scope: !14895, file: !12811, line: 148, type: !2328)
!14898 = !DILocation(line: 0, scope: !14895)
!14899 = !DILocation(line: 150, column: 15, scope: !14895)
!14900 = !DILocation(line: 150, column: 28, scope: !14895)
!14901 = !DILocation(line: 153, column: 1, scope: !14895)
!14902 = distinct !DISubprogram(name: "z_pend_thread", scope: !2436, file: !2436, line: 770, type: !14903, scopeLine: 772, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14909)
!14903 = !DISubroutineType(types: !14904)
!14904 = !{null, !2328, !2359, !14905}
!14905 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !14906)
!14906 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !14907)
!14907 = !{!14908}
!14908 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !14906, file: !104, line: 66, baseType: !103, size: 64)
!14909 = !{!14910, !14911, !14912, !14913, !14915}
!14910 = !DILocalVariable(name: "thread", arg: 1, scope: !14902, file: !2436, line: 770, type: !2328)
!14911 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14902, file: !2436, line: 770, type: !2359)
!14912 = !DILocalVariable(name: "timeout", arg: 3, scope: !14902, file: !2436, line: 771, type: !14905)
!14913 = !DILocalVariable(name: "__i", scope: !14914, file: !2436, line: 774, type: !14011)
!14914 = distinct !DILexicalBlock(scope: !14902, file: !2436, line: 774, column: 2)
!14915 = !DILocalVariable(name: "__key", scope: !14914, file: !2436, line: 774, type: !14011)
!14916 = !DILocation(line: 0, scope: !14902)
!14917 = !DILocation(line: 773, column: 2, scope: !14918)
!14918 = distinct !DILexicalBlock(scope: !14919, file: !2436, line: 773, column: 2)
!14919 = distinct !DILexicalBlock(scope: !14902, file: !2436, line: 773, column: 2)
!14920 = !DILocation(line: 773, column: 2, scope: !14919)
!14921 = !DILocation(line: 773, column: 2, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14918, file: !2436, line: 773, column: 2)
!14923 = !DILocation(line: 0, scope: !14914)
!14924 = !DILocation(line: 0, scope: !14019, inlinedAt: !14925)
!14925 = distinct !DILocation(line: 774, column: 2, scope: !14914)
!14926 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !14927)
!14927 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !14925)
!14928 = !DILocation(line: 0, scope: !14028, inlinedAt: !14927)
!14929 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !14925)
!14930 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !14925)
!14931 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !14925)
!14932 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !14925)
!14933 = !DILocation(line: 775, column: 3, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !2436, line: 774, column: 26)
!14935 = distinct !DILexicalBlock(scope: !14914, file: !2436, line: 774, column: 2)
!14936 = !DILocation(line: 0, scope: !14053, inlinedAt: !14937)
!14937 = distinct !DILocation(line: 774, column: 2, scope: !14935)
!14938 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !14937)
!14939 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !14937)
!14940 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !14937)
!14941 = !DILocation(line: 0, scope: !14067, inlinedAt: !14942)
!14942 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !14937)
!14943 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !14942)
!14944 = !DILocation(line: 777, column: 1, scope: !14902)
!14945 = distinct !DISubprogram(name: "is_thread_dummy", scope: !2436, file: !2436, line: 79, type: !14160, scopeLine: 80, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14946)
!14946 = !{!14947}
!14947 = !DILocalVariable(name: "thread", arg: 1, scope: !14945, file: !2436, line: 79, type: !2328)
!14948 = !DILocation(line: 0, scope: !14945)
!14949 = !DILocation(line: 81, column: 23, scope: !14945)
!14950 = !DILocation(line: 81, column: 36, scope: !14945)
!14951 = !DILocation(line: 81, column: 53, scope: !14945)
!14952 = !DILocation(line: 81, column: 2, scope: !14945)
!14953 = distinct !DISubprogram(name: "pend_locked", scope: !2436, file: !2436, line: 760, type: !14903, scopeLine: 762, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14954)
!14954 = !{!14955, !14956, !14957}
!14955 = !DILocalVariable(name: "thread", arg: 1, scope: !14953, file: !2436, line: 760, type: !2328)
!14956 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14953, file: !2436, line: 760, type: !2359)
!14957 = !DILocalVariable(name: "timeout", arg: 3, scope: !14953, file: !2436, line: 761, type: !14905)
!14958 = !DILocation(line: 0, scope: !14953)
!14959 = !DILocation(line: 766, column: 2, scope: !14953)
!14960 = !DILocation(line: 767, column: 2, scope: !14953)
!14961 = !DILocation(line: 768, column: 1, scope: !14953)
!14962 = distinct !DISubprogram(name: "add_to_waitq_locked", scope: !2436, file: !2436, line: 740, type: !14963, scopeLine: 741, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !14965)
!14963 = !DISubroutineType(types: !14964)
!14964 = !{null, !2328, !2359}
!14965 = !{!14966, !14967}
!14966 = !DILocalVariable(name: "thread", arg: 1, scope: !14962, file: !2436, line: 740, type: !2328)
!14967 = !DILocalVariable(name: "wait_q", arg: 2, scope: !14962, file: !2436, line: 740, type: !2359)
!14968 = !DILocation(line: 0, scope: !14962)
!14969 = !DILocation(line: 742, column: 2, scope: !14962)
!14970 = !DILocation(line: 743, column: 2, scope: !14962)
!14971 = !DILocation(line: 747, column: 13, scope: !14972)
!14972 = distinct !DILexicalBlock(scope: !14962, file: !2436, line: 747, column: 6)
!14973 = !DILocation(line: 747, column: 6, scope: !14962)
!14974 = !DILocation(line: 748, column: 16, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14972, file: !2436, line: 747, column: 22)
!14976 = !DILocation(line: 748, column: 26, scope: !14975)
!14977 = !DILocation(line: 749, column: 28, scope: !14975)
!14978 = !DILocation(line: 0, scope: !14242, inlinedAt: !14979)
!14979 = distinct !DILocation(line: 749, column: 3, scope: !14975)
!14980 = !DILocation(line: 186, column: 2, scope: !14252, inlinedAt: !14979)
!14981 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !14979)
!14982 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !14979)
!14983 = !DILocation(line: 188, column: 2, scope: !14258, inlinedAt: !14979)
!14984 = !DILocation(line: 188, column: 2, scope: !14260, inlinedAt: !14979)
!14985 = !DILocation(line: 0, scope: !14258, inlinedAt: !14979)
!14986 = !DILocation(line: 189, column: 7, scope: !14263, inlinedAt: !14979)
!14987 = !DILocation(line: 189, column: 35, scope: !14263, inlinedAt: !14979)
!14988 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !14979)
!14989 = !DILocation(line: 191, column: 21, scope: !14268, inlinedAt: !14979)
!14990 = !DILocation(line: 190, column: 4, scope: !14268, inlinedAt: !14979)
!14991 = !DILocation(line: 192, column: 4, scope: !14268, inlinedAt: !14979)
!14992 = distinct !{!14992, !14983, !14993}
!14993 = !DILocation(line: 194, column: 2, scope: !14258, inlinedAt: !14979)
!14994 = !DILocation(line: 196, column: 37, scope: !14242, inlinedAt: !14979)
!14995 = !DILocation(line: 196, column: 2, scope: !14242, inlinedAt: !14979)
!14996 = !DILocation(line: 197, column: 1, scope: !14242, inlinedAt: !14979)
!14997 = !DILocation(line: 751, column: 1, scope: !14962)
!14998 = distinct !DISubprogram(name: "add_thread_timeout", scope: !2436, file: !2436, line: 753, type: !14999, scopeLine: 754, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15001)
!14999 = !DISubroutineType(types: !15000)
!15000 = !{null, !2328, !14905}
!15001 = !{!15002, !15003}
!15002 = !DILocalVariable(name: "thread", arg: 1, scope: !14998, file: !2436, line: 753, type: !2328)
!15003 = !DILocalVariable(name: "timeout", arg: 2, scope: !14998, file: !2436, line: 753, type: !14905)
!15004 = !DILocation(line: 0, scope: !14998)
!15005 = !DILocation(line: 755, column: 7, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !14998, file: !2436, line: 755, column: 6)
!15007 = !DILocation(line: 755, column: 6, scope: !14998)
!15008 = !DILocation(line: 756, column: 3, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !15006, file: !2436, line: 755, column: 41)
!15010 = !DILocation(line: 757, column: 2, scope: !15009)
!15011 = !DILocation(line: 758, column: 1, scope: !14998)
!15012 = distinct !DISubprogram(name: "z_add_thread_timeout", scope: !13240, file: !13240, line: 47, type: !14999, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15013)
!15013 = !{!15014, !15015}
!15014 = !DILocalVariable(name: "thread", arg: 1, scope: !15012, file: !13240, line: 47, type: !2328)
!15015 = !DILocalVariable(name: "ticks", arg: 2, scope: !15012, file: !13240, line: 47, type: !14905)
!15016 = !DILocation(line: 0, scope: !15012)
!15017 = !DILocation(line: 49, column: 30, scope: !15012)
!15018 = !DILocation(line: 49, column: 2, scope: !15012)
!15019 = !DILocation(line: 50, column: 1, scope: !15012)
!15020 = distinct !DISubprogram(name: "z_thread_timeout", scope: !2436, file: !2436, line: 795, type: !2385, scopeLine: 796, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15021)
!15021 = !{!15022, !15023, !15024, !15026, !15027}
!15022 = !DILocalVariable(name: "timeout", arg: 1, scope: !15020, file: !2436, line: 795, type: !2387)
!15023 = !DILocalVariable(name: "thread", scope: !15020, file: !2436, line: 797, type: !2328)
!15024 = !DILocalVariable(name: "__i", scope: !15025, file: !2436, line: 800, type: !14011)
!15025 = distinct !DILexicalBlock(scope: !15020, file: !2436, line: 800, column: 2)
!15026 = !DILocalVariable(name: "__key", scope: !15025, file: !2436, line: 800, type: !14011)
!15027 = !DILocalVariable(name: "killed", scope: !15028, file: !2436, line: 801, type: !347)
!15028 = distinct !DILexicalBlock(scope: !15029, file: !2436, line: 800, column: 26)
!15029 = distinct !DILexicalBlock(scope: !15025, file: !2436, line: 800, column: 2)
!15030 = !DILocation(line: 0, scope: !15020)
!15031 = !DILocation(line: 797, column: 28, scope: !15020)
!15032 = !DILocation(line: 0, scope: !15025)
!15033 = !DILocation(line: 0, scope: !14019, inlinedAt: !15034)
!15034 = distinct !DILocation(line: 800, column: 2, scope: !15025)
!15035 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15036)
!15036 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15034)
!15037 = !DILocation(line: 0, scope: !14028, inlinedAt: !15036)
!15038 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15034)
!15039 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15034)
!15040 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15034)
!15041 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15034)
!15042 = !DILocation(line: 801, column: 27, scope: !15028)
!15043 = !DILocation(line: 801, column: 32, scope: !15028)
!15044 = !DILocation(line: 801, column: 61, scope: !15028)
!15045 = !DILocation(line: 0, scope: !15028)
!15046 = !DILocation(line: 804, column: 7, scope: !15028)
!15047 = !DILocation(line: 805, column: 21, scope: !15048)
!15048 = distinct !DILexicalBlock(scope: !15049, file: !2436, line: 805, column: 8)
!15049 = distinct !DILexicalBlock(scope: !15050, file: !2436, line: 804, column: 16)
!15050 = distinct !DILexicalBlock(scope: !15028, file: !2436, line: 804, column: 7)
!15051 = !DILocation(line: 805, column: 31, scope: !15048)
!15052 = !DILocation(line: 805, column: 8, scope: !15049)
!15053 = !DILocation(line: 806, column: 5, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !15048, file: !2436, line: 805, column: 40)
!15055 = !DILocation(line: 807, column: 4, scope: !15054)
!15056 = !DILocation(line: 808, column: 4, scope: !15049)
!15057 = !DILocation(line: 809, column: 4, scope: !15049)
!15058 = !DILocation(line: 810, column: 4, scope: !15049)
!15059 = !DILocation(line: 811, column: 3, scope: !15049)
!15060 = !DILocation(line: 0, scope: !14053, inlinedAt: !15061)
!15061 = distinct !DILocation(line: 800, column: 2, scope: !15029)
!15062 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15061)
!15063 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15061)
!15064 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15061)
!15065 = !DILocation(line: 0, scope: !14067, inlinedAt: !15066)
!15066 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15061)
!15067 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15066)
!15068 = !DILocation(line: 813, column: 1, scope: !15020)
!15069 = distinct !DISubprogram(name: "unpend_thread_no_timeout", scope: !2436, file: !2436, line: 779, type: !13977, scopeLine: 780, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15070)
!15070 = !{!15071}
!15071 = !DILocalVariable(name: "thread", arg: 1, scope: !15069, file: !2436, line: 779, type: !2328)
!15072 = !DILocation(line: 0, scope: !15069)
!15073 = !DILocation(line: 781, column: 21, scope: !15069)
!15074 = !DILocation(line: 781, column: 2, scope: !15069)
!15075 = !DILocation(line: 782, column: 2, scope: !15069)
!15076 = !DILocation(line: 783, column: 15, scope: !15069)
!15077 = !DILocation(line: 783, column: 25, scope: !15069)
!15078 = !DILocation(line: 784, column: 1, scope: !15069)
!15079 = distinct !DISubprogram(name: "pended_on_thread", scope: !2436, file: !2436, line: 724, type: !15080, scopeLine: 725, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15082)
!15080 = !DISubroutineType(types: !15081)
!15081 = !{!2359, !2328}
!15082 = !{!15083}
!15083 = !DILocalVariable(name: "thread", arg: 1, scope: !15079, file: !2436, line: 724, type: !2328)
!15084 = !DILocation(line: 0, scope: !15079)
!15085 = !DILocation(line: 726, column: 2, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15087, file: !2436, line: 726, column: 2)
!15087 = distinct !DILexicalBlock(scope: !15079, file: !2436, line: 726, column: 2)
!15088 = !DILocation(line: 726, column: 2, scope: !15087)
!15089 = !DILocation(line: 726, column: 2, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15086, file: !2436, line: 726, column: 2)
!15091 = !DILocation(line: 728, column: 2, scope: !15079)
!15092 = distinct !DISubprogram(name: "z_mark_thread_as_not_pending", scope: !12811, file: !12811, line: 165, type: !13977, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15093)
!15093 = !{!15094}
!15094 = !DILocalVariable(name: "thread", arg: 1, scope: !15092, file: !12811, line: 165, type: !2328)
!15095 = !DILocation(line: 0, scope: !15092)
!15096 = !DILocation(line: 167, column: 15, scope: !15092)
!15097 = !DILocation(line: 167, column: 28, scope: !15092)
!15098 = !DILocation(line: 168, column: 1, scope: !15092)
!15099 = distinct !DISubprogram(name: "unready_thread", scope: !2436, file: !2436, line: 731, type: !13977, scopeLine: 732, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15100)
!15100 = !{!15101}
!15101 = !DILocalVariable(name: "thread", arg: 1, scope: !15099, file: !2436, line: 731, type: !2328)
!15102 = !DILocation(line: 0, scope: !15099)
!15103 = !DILocation(line: 733, column: 6, scope: !15104)
!15104 = distinct !DILexicalBlock(scope: !15099, file: !2436, line: 733, column: 6)
!15105 = !DILocation(line: 733, column: 6, scope: !15099)
!15106 = !DILocation(line: 0, scope: !14211, inlinedAt: !15107)
!15107 = distinct !DILocation(line: 734, column: 3, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15104, file: !2436, line: 733, column: 34)
!15109 = !DILocation(line: 266, column: 15, scope: !14211, inlinedAt: !15107)
!15110 = !DILocation(line: 266, column: 28, scope: !14211, inlinedAt: !15107)
!15111 = !DILocation(line: 0, scope: !14219, inlinedAt: !15112)
!15112 = distinct !DILocation(line: 268, column: 3, scope: !14223, inlinedAt: !15107)
!15113 = !DILocation(line: 234, column: 2, scope: !14219, inlinedAt: !15112)
!15114 = !DILocation(line: 735, column: 2, scope: !15108)
!15115 = !DILocation(line: 736, column: 25, scope: !15099)
!15116 = !DILocation(line: 736, column: 22, scope: !15099)
!15117 = !DILocation(line: 736, column: 2, scope: !15099)
!15118 = !DILocation(line: 737, column: 1, scope: !15099)
!15119 = distinct !DISubprogram(name: "z_mark_thread_as_pending", scope: !12811, file: !12811, line: 160, type: !13977, scopeLine: 161, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15120)
!15120 = !{!15121}
!15121 = !DILocalVariable(name: "thread", arg: 1, scope: !15119, file: !12811, line: 160, type: !2328)
!15122 = !DILocation(line: 0, scope: !15119)
!15123 = !DILocation(line: 162, column: 15, scope: !15119)
!15124 = !DILocation(line: 162, column: 28, scope: !15119)
!15125 = !DILocation(line: 163, column: 1, scope: !15119)
!15126 = distinct !DISubprogram(name: "z_unpend_thread_no_timeout", scope: !2436, file: !2436, line: 786, type: !13977, scopeLine: 787, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15127)
!15127 = !{!15128, !15129, !15131}
!15128 = !DILocalVariable(name: "thread", arg: 1, scope: !15126, file: !2436, line: 786, type: !2328)
!15129 = !DILocalVariable(name: "__i", scope: !15130, file: !2436, line: 788, type: !14011)
!15130 = distinct !DILexicalBlock(scope: !15126, file: !2436, line: 788, column: 2)
!15131 = !DILocalVariable(name: "__key", scope: !15130, file: !2436, line: 788, type: !14011)
!15132 = !DILocation(line: 0, scope: !15126)
!15133 = !DILocation(line: 0, scope: !15130)
!15134 = !DILocation(line: 0, scope: !14019, inlinedAt: !15135)
!15135 = distinct !DILocation(line: 788, column: 2, scope: !15130)
!15136 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15137)
!15137 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15135)
!15138 = !DILocation(line: 0, scope: !14028, inlinedAt: !15137)
!15139 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15135)
!15140 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15135)
!15141 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15135)
!15142 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15135)
!15143 = !DILocation(line: 789, column: 3, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15145, file: !2436, line: 788, column: 26)
!15145 = distinct !DILexicalBlock(scope: !15130, file: !2436, line: 788, column: 2)
!15146 = !DILocation(line: 0, scope: !14053, inlinedAt: !15147)
!15147 = distinct !DILocation(line: 788, column: 2, scope: !15145)
!15148 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15147)
!15149 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15147)
!15150 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15147)
!15151 = !DILocation(line: 0, scope: !14067, inlinedAt: !15152)
!15152 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15147)
!15153 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15152)
!15154 = !DILocation(line: 791, column: 1, scope: !15126)
!15155 = distinct !DISubprogram(name: "z_pend_curr_irqlock", scope: !2436, file: !2436, line: 816, type: !15156, scopeLine: 817, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15158)
!15156 = !DISubroutineType(types: !15157)
!15157 = !{!109, !110, !2359, !14905}
!15158 = !{!15159, !15160, !15161, !15162, !15163, !15165}
!15159 = !DILocalVariable(name: "key", arg: 1, scope: !15155, file: !2436, line: 816, type: !110)
!15160 = !DILocalVariable(name: "wait_q", arg: 2, scope: !15155, file: !2436, line: 816, type: !2359)
!15161 = !DILocalVariable(name: "timeout", arg: 3, scope: !15155, file: !2436, line: 816, type: !14905)
!15162 = !DILocalVariable(name: "ret", scope: !15155, file: !2436, line: 828, type: !109)
!15163 = !DILocalVariable(name: "__i", scope: !15164, file: !2436, line: 829, type: !14011)
!15164 = distinct !DILexicalBlock(scope: !15155, file: !2436, line: 829, column: 2)
!15165 = !DILocalVariable(name: "__key", scope: !15164, file: !2436, line: 829, type: !14011)
!15166 = !DILocation(line: 0, scope: !15155)
!15167 = !DILocation(line: 823, column: 14, scope: !15155)
!15168 = !DILocation(line: 823, column: 2, scope: !15155)
!15169 = !DILocation(line: 826, column: 20, scope: !15155)
!15170 = !DILocation(line: 826, column: 18, scope: !15155)
!15171 = !DILocation(line: 828, column: 12, scope: !15155)
!15172 = !DILocation(line: 0, scope: !15164)
!15173 = !DILocation(line: 0, scope: !14019, inlinedAt: !15174)
!15174 = distinct !DILocation(line: 829, column: 2, scope: !15164)
!15175 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15176)
!15176 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15174)
!15177 = !DILocation(line: 0, scope: !14028, inlinedAt: !15176)
!15178 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15174)
!15179 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15174)
!15180 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15174)
!15181 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15174)
!15182 = !DILocation(line: 830, column: 7, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15184, file: !2436, line: 830, column: 7)
!15184 = distinct !DILexicalBlock(scope: !15185, file: !2436, line: 829, column: 26)
!15185 = distinct !DILexicalBlock(scope: !15164, file: !2436, line: 829, column: 2)
!15186 = !DILocation(line: 830, column: 26, scope: !15183)
!15187 = !DILocation(line: 830, column: 23, scope: !15183)
!15188 = !DILocation(line: 830, column: 7, scope: !15184)
!15189 = !DILocation(line: 831, column: 20, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15183, file: !2436, line: 830, column: 36)
!15191 = !DILocation(line: 832, column: 3, scope: !15190)
!15192 = !DILocation(line: 0, scope: !14053, inlinedAt: !15193)
!15193 = distinct !DILocation(line: 829, column: 2, scope: !15185)
!15194 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15193)
!15195 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15193)
!15196 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15193)
!15197 = !DILocation(line: 0, scope: !14067, inlinedAt: !15198)
!15198 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15193)
!15199 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15198)
!15200 = !DILocation(line: 834, column: 2, scope: !15155)
!15201 = distinct !DISubprogram(name: "z_pend_curr", scope: !2436, file: !2436, line: 840, type: !15202, scopeLine: 842, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15204)
!15202 = !DISubroutineType(types: !15203)
!15203 = !{!109, !14022, !14011, !2359, !14905}
!15204 = !{!15205, !15206, !15207, !15208}
!15205 = !DILocalVariable(name: "lock", arg: 1, scope: !15201, file: !2436, line: 840, type: !14022)
!15206 = !DILocalVariable(name: "key", arg: 2, scope: !15201, file: !2436, line: 840, type: !14011)
!15207 = !DILocalVariable(name: "wait_q", arg: 3, scope: !15201, file: !2436, line: 841, type: !2359)
!15208 = !DILocalVariable(name: "timeout", arg: 4, scope: !15201, file: !2436, line: 841, type: !14905)
!15209 = !DILocation(line: 0, scope: !15201)
!15210 = !DILocation(line: 844, column: 20, scope: !15201)
!15211 = !DILocation(line: 844, column: 18, scope: !15201)
!15212 = !DILocation(line: 846, column: 2, scope: !15213)
!15213 = distinct !DILexicalBlock(scope: !15214, file: !2436, line: 846, column: 2)
!15214 = distinct !DILexicalBlock(scope: !15201, file: !2436, line: 846, column: 2)
!15215 = !DILocation(line: 846, column: 2, scope: !15214)
!15216 = !DILocation(line: 846, column: 2, scope: !15217)
!15217 = distinct !DILexicalBlock(scope: !15213, file: !2436, line: 846, column: 2)
!15218 = !DILocation(line: 0, scope: !14019, inlinedAt: !15219)
!15219 = distinct !DILocation(line: 856, column: 9, scope: !15201)
!15220 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15221)
!15221 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15219)
!15222 = !DILocation(line: 0, scope: !14028, inlinedAt: !15221)
!15223 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15219)
!15224 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15219)
!15225 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15219)
!15226 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15219)
!15227 = !DILocation(line: 857, column: 14, scope: !15201)
!15228 = !DILocation(line: 857, column: 2, scope: !15201)
!15229 = !DILocation(line: 0, scope: !14704, inlinedAt: !15230)
!15230 = distinct !DILocation(line: 858, column: 2, scope: !15201)
!15231 = !DILocation(line: 225, column: 2, scope: !14711, inlinedAt: !15230)
!15232 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !15230)
!15233 = !DILocation(line: 225, column: 2, scope: !14715, inlinedAt: !15230)
!15234 = !DILocation(line: 0, scope: !14695, inlinedAt: !15235)
!15235 = distinct !DILocation(line: 859, column: 9, scope: !15201)
!15236 = !DILocation(line: 0, scope: !14704, inlinedAt: !15237)
!15237 = distinct !DILocation(line: 195, column: 2, scope: !14695, inlinedAt: !15235)
!15238 = !DILocation(line: 225, column: 2, scope: !14711, inlinedAt: !15237)
!15239 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !15237)
!15240 = !DILocation(line: 225, column: 2, scope: !14715, inlinedAt: !15237)
!15241 = !DILocation(line: 196, column: 9, scope: !14695, inlinedAt: !15235)
!15242 = !DILocation(line: 859, column: 2, scope: !15201)
!15243 = distinct !DISubprogram(name: "z_unpend1_no_timeout", scope: !2436, file: !2436, line: 862, type: !15244, scopeLine: 863, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15246)
!15244 = !DISubroutineType(types: !15245)
!15245 = !{!2328, !2359}
!15246 = !{!15247, !15248, !15249, !15251}
!15247 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15243, file: !2436, line: 862, type: !2359)
!15248 = !DILocalVariable(name: "thread", scope: !15243, file: !2436, line: 864, type: !2328)
!15249 = !DILocalVariable(name: "__i", scope: !15250, file: !2436, line: 866, type: !14011)
!15250 = distinct !DILexicalBlock(scope: !15243, file: !2436, line: 866, column: 2)
!15251 = !DILocalVariable(name: "__key", scope: !15250, file: !2436, line: 866, type: !14011)
!15252 = !DILocation(line: 0, scope: !15243)
!15253 = !DILocation(line: 0, scope: !15250)
!15254 = !DILocation(line: 0, scope: !14019, inlinedAt: !15255)
!15255 = distinct !DILocation(line: 866, column: 2, scope: !15250)
!15256 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15257)
!15257 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15255)
!15258 = !DILocation(line: 0, scope: !14028, inlinedAt: !15257)
!15259 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15255)
!15260 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15255)
!15261 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15255)
!15262 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15255)
!15263 = !DILocation(line: 867, column: 12, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15265, file: !2436, line: 866, column: 26)
!15265 = distinct !DILexicalBlock(scope: !15250, file: !2436, line: 866, column: 2)
!15266 = !DILocation(line: 869, column: 14, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15264, file: !2436, line: 869, column: 7)
!15268 = !DILocation(line: 869, column: 7, scope: !15264)
!15269 = !DILocation(line: 870, column: 4, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15267, file: !2436, line: 869, column: 23)
!15271 = !DILocation(line: 871, column: 3, scope: !15270)
!15272 = !DILocation(line: 0, scope: !14053, inlinedAt: !15273)
!15273 = distinct !DILocation(line: 866, column: 2, scope: !15265)
!15274 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15273)
!15275 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15273)
!15276 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15273)
!15277 = !DILocation(line: 0, scope: !14067, inlinedAt: !15278)
!15278 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15273)
!15279 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15278)
!15280 = !DILocation(line: 874, column: 2, scope: !15243)
!15281 = distinct !DISubprogram(name: "z_unpend_first_thread", scope: !2436, file: !2436, line: 877, type: !15244, scopeLine: 878, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15282)
!15282 = !{!15283, !15284, !15285, !15287}
!15283 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15281, file: !2436, line: 877, type: !2359)
!15284 = !DILocalVariable(name: "thread", scope: !15281, file: !2436, line: 879, type: !2328)
!15285 = !DILocalVariable(name: "__i", scope: !15286, file: !2436, line: 881, type: !14011)
!15286 = distinct !DILexicalBlock(scope: !15281, file: !2436, line: 881, column: 2)
!15287 = !DILocalVariable(name: "__key", scope: !15286, file: !2436, line: 881, type: !14011)
!15288 = !DILocation(line: 0, scope: !15281)
!15289 = !DILocation(line: 0, scope: !15286)
!15290 = !DILocation(line: 0, scope: !14019, inlinedAt: !15291)
!15291 = distinct !DILocation(line: 881, column: 2, scope: !15286)
!15292 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15293)
!15293 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15291)
!15294 = !DILocation(line: 0, scope: !14028, inlinedAt: !15293)
!15295 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15291)
!15296 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15291)
!15297 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15291)
!15298 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15291)
!15299 = !DILocation(line: 882, column: 12, scope: !15300)
!15300 = distinct !DILexicalBlock(scope: !15301, file: !2436, line: 881, column: 26)
!15301 = distinct !DILexicalBlock(scope: !15286, file: !2436, line: 881, column: 2)
!15302 = !DILocation(line: 884, column: 14, scope: !15303)
!15303 = distinct !DILexicalBlock(scope: !15300, file: !2436, line: 884, column: 7)
!15304 = !DILocation(line: 884, column: 7, scope: !15300)
!15305 = !DILocation(line: 885, column: 4, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15303, file: !2436, line: 884, column: 23)
!15307 = !DILocation(line: 886, column: 10, scope: !15306)
!15308 = !DILocation(line: 887, column: 3, scope: !15306)
!15309 = !DILocation(line: 0, scope: !14053, inlinedAt: !15310)
!15310 = distinct !DILocation(line: 881, column: 2, scope: !15301)
!15311 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15310)
!15312 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15310)
!15313 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15310)
!15314 = !DILocation(line: 0, scope: !14067, inlinedAt: !15315)
!15315 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15310)
!15316 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15315)
!15317 = !DILocation(line: 890, column: 2, scope: !15281)
!15318 = distinct !DISubprogram(name: "z_unpend_thread", scope: !2436, file: !2436, line: 893, type: !13977, scopeLine: 894, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15319)
!15319 = !{!15320}
!15320 = !DILocalVariable(name: "thread", arg: 1, scope: !15318, file: !2436, line: 893, type: !2328)
!15321 = !DILocation(line: 0, scope: !15318)
!15322 = !DILocation(line: 0, scope: !15126, inlinedAt: !15323)
!15323 = distinct !DILocation(line: 895, column: 2, scope: !15318)
!15324 = !DILocation(line: 0, scope: !15130, inlinedAt: !15323)
!15325 = !DILocation(line: 0, scope: !14019, inlinedAt: !15326)
!15326 = distinct !DILocation(line: 788, column: 2, scope: !15130, inlinedAt: !15323)
!15327 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15328)
!15328 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15326)
!15329 = !DILocation(line: 0, scope: !14028, inlinedAt: !15328)
!15330 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15326)
!15331 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15326)
!15332 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15326)
!15333 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15326)
!15334 = !DILocation(line: 789, column: 3, scope: !15144, inlinedAt: !15323)
!15335 = !DILocation(line: 0, scope: !14053, inlinedAt: !15336)
!15336 = distinct !DILocation(line: 788, column: 2, scope: !15145, inlinedAt: !15323)
!15337 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15336)
!15338 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15336)
!15339 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15336)
!15340 = !DILocation(line: 0, scope: !14067, inlinedAt: !15341)
!15341 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15336)
!15342 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15341)
!15343 = !DILocation(line: 896, column: 8, scope: !15318)
!15344 = !DILocation(line: 897, column: 1, scope: !15318)
!15345 = distinct !DISubprogram(name: "z_set_prio", scope: !2436, file: !2436, line: 902, type: !14380, scopeLine: 903, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15346)
!15346 = !{!15347, !15348, !15349, !15350, !15352}
!15347 = !DILocalVariable(name: "thread", arg: 1, scope: !15345, file: !2436, line: 902, type: !2328)
!15348 = !DILocalVariable(name: "prio", arg: 2, scope: !15345, file: !2436, line: 902, type: !109)
!15349 = !DILocalVariable(name: "need_sched", scope: !15345, file: !2436, line: 904, type: !347)
!15350 = !DILocalVariable(name: "__i", scope: !15351, file: !2436, line: 906, type: !14011)
!15351 = distinct !DILexicalBlock(scope: !15345, file: !2436, line: 906, column: 2)
!15352 = !DILocalVariable(name: "__key", scope: !15351, file: !2436, line: 906, type: !14011)
!15353 = !DILocation(line: 0, scope: !15345)
!15354 = !DILocation(line: 0, scope: !15351)
!15355 = !DILocation(line: 0, scope: !14019, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 906, column: 2, scope: !15351)
!15357 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15356)
!15359 = !DILocation(line: 0, scope: !14028, inlinedAt: !15358)
!15360 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15356)
!15361 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15356)
!15362 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15356)
!15363 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15356)
!15364 = !DILocation(line: 907, column: 16, scope: !15365)
!15365 = distinct !DILexicalBlock(scope: !15366, file: !2436, line: 906, column: 26)
!15366 = distinct !DILexicalBlock(scope: !15351, file: !2436, line: 906, column: 2)
!15367 = !DILocation(line: 909, column: 7, scope: !15365)
!15368 = !DILocation(line: 0, scope: !14211, inlinedAt: !15369)
!15369 = distinct !DILocation(line: 912, column: 5, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15371, file: !2436, line: 911, column: 63)
!15371 = distinct !DILexicalBlock(scope: !15372, file: !2436, line: 911, column: 8)
!15372 = distinct !DILexicalBlock(scope: !15373, file: !2436, line: 909, column: 19)
!15373 = distinct !DILexicalBlock(scope: !15365, file: !2436, line: 909, column: 7)
!15374 = !DILocation(line: 266, column: 28, scope: !14211, inlinedAt: !15369)
!15375 = !DILocation(line: 0, scope: !14219, inlinedAt: !15376)
!15376 = distinct !DILocation(line: 268, column: 3, scope: !14223, inlinedAt: !15369)
!15377 = !DILocation(line: 234, column: 2, scope: !14219, inlinedAt: !15376)
!15378 = !DILocation(line: 913, column: 23, scope: !15370)
!15379 = !DILocation(line: 0, scope: !14228, inlinedAt: !15380)
!15380 = distinct !DILocation(line: 914, column: 5, scope: !15370)
!15381 = !DILocation(line: 252, column: 28, scope: !14228, inlinedAt: !15380)
!15382 = !DILocation(line: 0, scope: !14235, inlinedAt: !15383)
!15383 = distinct !DILocation(line: 254, column: 3, scope: !14239, inlinedAt: !15380)
!15384 = !DILocation(line: 0, scope: !14242, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 229, column: 2, scope: !14235, inlinedAt: !15383)
!15386 = !DILocation(line: 186, column: 2, scope: !14252, inlinedAt: !15385)
!15387 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !15385)
!15388 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !15385)
!15389 = !DILocation(line: 188, column: 2, scope: !14258, inlinedAt: !15385)
!15390 = !DILocation(line: 188, column: 2, scope: !14260, inlinedAt: !15385)
!15391 = !DILocation(line: 0, scope: !14258, inlinedAt: !15385)
!15392 = !DILocation(line: 189, column: 7, scope: !14263, inlinedAt: !15385)
!15393 = !DILocation(line: 189, column: 35, scope: !14263, inlinedAt: !15385)
!15394 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !15385)
!15395 = !DILocation(line: 190, column: 4, scope: !14268, inlinedAt: !15385)
!15396 = !DILocation(line: 192, column: 4, scope: !14268, inlinedAt: !15385)
!15397 = distinct !{!15397, !15389, !15398}
!15398 = !DILocation(line: 194, column: 2, scope: !14258, inlinedAt: !15385)
!15399 = !DILocation(line: 196, column: 2, scope: !14242, inlinedAt: !15385)
!15400 = !DILocation(line: 197, column: 1, scope: !14242, inlinedAt: !15385)
!15401 = !DILocation(line: 918, column: 4, scope: !15372)
!15402 = !DILocation(line: 919, column: 3, scope: !15372)
!15403 = !DILocation(line: 920, column: 22, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15373, file: !2436, line: 919, column: 10)
!15405 = !DILocation(line: 0, scope: !14053, inlinedAt: !15406)
!15406 = distinct !DILocation(line: 906, column: 2, scope: !15366)
!15407 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15406)
!15408 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15406)
!15409 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15406)
!15410 = !DILocation(line: 0, scope: !14067, inlinedAt: !15411)
!15411 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15406)
!15412 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15411)
!15413 = !DILocation(line: 926, column: 2, scope: !15345)
!15414 = distinct !DISubprogram(name: "z_thread_priority_set", scope: !2436, file: !2436, line: 929, type: !15415, scopeLine: 930, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15417)
!15415 = !DISubroutineType(types: !15416)
!15416 = !{null, !2328, !109}
!15417 = !{!15418, !15419, !15420}
!15418 = !DILocalVariable(name: "thread", arg: 1, scope: !15414, file: !2436, line: 929, type: !2328)
!15419 = !DILocalVariable(name: "prio", arg: 2, scope: !15414, file: !2436, line: 929, type: !109)
!15420 = !DILocalVariable(name: "need_sched", scope: !15414, file: !2436, line: 931, type: !347)
!15421 = !DILocation(line: 0, scope: !15414)
!15422 = !DILocation(line: 931, column: 20, scope: !15414)
!15423 = !DILocation(line: 935, column: 17, scope: !15424)
!15424 = distinct !DILexicalBlock(scope: !15414, file: !2436, line: 935, column: 6)
!15425 = !DILocation(line: 935, column: 20, scope: !15424)
!15426 = !DILocation(line: 935, column: 35, scope: !15424)
!15427 = !DILocation(line: 935, column: 48, scope: !15424)
!15428 = !DILocation(line: 935, column: 6, scope: !15414)
!15429 = !DILocation(line: 936, column: 3, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15424, file: !2436, line: 935, column: 55)
!15431 = !DILocation(line: 937, column: 2, scope: !15430)
!15432 = !DILocation(line: 938, column: 1, scope: !15414)
!15433 = distinct !DISubprogram(name: "k_sched_lock", scope: !2436, file: !2436, line: 987, type: !3089, scopeLine: 988, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15434)
!15434 = !{!15435, !15437}
!15435 = !DILocalVariable(name: "__i", scope: !15436, file: !2436, line: 989, type: !14011)
!15436 = distinct !DILexicalBlock(scope: !15433, file: !2436, line: 989, column: 2)
!15437 = !DILocalVariable(name: "__key", scope: !15436, file: !2436, line: 989, type: !14011)
!15438 = !DILocation(line: 0, scope: !15436)
!15439 = !DILocation(line: 0, scope: !14019, inlinedAt: !15440)
!15440 = distinct !DILocation(line: 989, column: 2, scope: !15436)
!15441 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15442)
!15442 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15440)
!15443 = !DILocation(line: 0, scope: !14028, inlinedAt: !15442)
!15444 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15440)
!15445 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15440)
!15446 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15440)
!15447 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15440)
!15448 = !DILocation(line: 992, column: 3, scope: !15449)
!15449 = distinct !DILexicalBlock(scope: !15450, file: !2436, line: 989, column: 26)
!15450 = distinct !DILexicalBlock(scope: !15436, file: !2436, line: 989, column: 2)
!15451 = !DILocation(line: 0, scope: !14053, inlinedAt: !15452)
!15452 = distinct !DILocation(line: 989, column: 2, scope: !15450)
!15453 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15452)
!15454 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15452)
!15455 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15452)
!15456 = !DILocation(line: 0, scope: !14067, inlinedAt: !15457)
!15457 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15452)
!15458 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15457)
!15459 = !DILocation(line: 994, column: 1, scope: !15433)
!15460 = distinct !DISubprogram(name: "z_sched_lock", scope: !12811, file: !12811, line: 251, type: !3089, scopeLine: 252, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!15461 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !15462)
!15462 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !15463)
!15463 = distinct !DILocation(line: 253, column: 2, scope: !15464)
!15464 = distinct !DILexicalBlock(scope: !15465, file: !12811, line: 253, column: 2)
!15465 = distinct !DILexicalBlock(scope: !15460, file: !12811, line: 253, column: 2)
!15466 = !DILocation(line: 0, scope: !14744, inlinedAt: !15462)
!15467 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !15463)
!15468 = !DILocation(line: 253, column: 2, scope: !15465)
!15469 = !DILocation(line: 253, column: 2, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15464, file: !12811, line: 253, column: 2)
!15471 = !DILocation(line: 254, column: 2, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15473, file: !12811, line: 254, column: 2)
!15473 = distinct !DILexicalBlock(scope: !15460, file: !12811, line: 254, column: 2)
!15474 = !DILocation(line: 254, column: 2, scope: !15473)
!15475 = !DILocation(line: 254, column: 2, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15472, file: !12811, line: 254, column: 2)
!15477 = !DILocation(line: 256, column: 2, scope: !15460)
!15478 = !DILocation(line: 258, column: 2, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15460, file: !12811, line: 258, column: 2)
!15480 = !{i64 2154876722}
!15481 = !DILocation(line: 259, column: 1, scope: !15460)
!15482 = distinct !DISubprogram(name: "k_sched_unlock", scope: !2436, file: !2436, line: 996, type: !3089, scopeLine: 997, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15483)
!15483 = !{!15484, !15486}
!15484 = !DILocalVariable(name: "__i", scope: !15485, file: !2436, line: 998, type: !14011)
!15485 = distinct !DILexicalBlock(scope: !15482, file: !2436, line: 998, column: 2)
!15486 = !DILocalVariable(name: "__key", scope: !15485, file: !2436, line: 998, type: !14011)
!15487 = !DILocation(line: 0, scope: !15485)
!15488 = !DILocation(line: 0, scope: !14019, inlinedAt: !15489)
!15489 = distinct !DILocation(line: 998, column: 2, scope: !15485)
!15490 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15491)
!15491 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15489)
!15492 = !DILocation(line: 0, scope: !14028, inlinedAt: !15491)
!15493 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15489)
!15494 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15489)
!15495 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15489)
!15496 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15489)
!15497 = !DILocation(line: 999, column: 3, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15499, file: !2436, line: 999, column: 3)
!15499 = distinct !DILexicalBlock(scope: !15500, file: !2436, line: 999, column: 3)
!15500 = distinct !DILexicalBlock(scope: !15501, file: !2436, line: 998, column: 26)
!15501 = distinct !DILexicalBlock(scope: !15485, file: !2436, line: 998, column: 2)
!15502 = !DILocation(line: 999, column: 3, scope: !15499)
!15503 = !DILocation(line: 999, column: 3, scope: !15504)
!15504 = distinct !DILexicalBlock(scope: !15498, file: !2436, line: 999, column: 3)
!15505 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !15506)
!15506 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !15507)
!15507 = distinct !DILocation(line: 1000, column: 3, scope: !15508)
!15508 = distinct !DILexicalBlock(scope: !15509, file: !2436, line: 1000, column: 3)
!15509 = distinct !DILexicalBlock(scope: !15500, file: !2436, line: 1000, column: 3)
!15510 = !DILocation(line: 0, scope: !14744, inlinedAt: !15506)
!15511 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !15507)
!15512 = !DILocation(line: 1000, column: 3, scope: !15509)
!15513 = !DILocation(line: 1000, column: 3, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15508, file: !2436, line: 1000, column: 3)
!15515 = !DILocation(line: 1002, column: 5, scope: !15500)
!15516 = !DILocation(line: 1002, column: 20, scope: !15500)
!15517 = !DILocation(line: 1002, column: 3, scope: !15500)
!15518 = !DILocation(line: 1003, column: 3, scope: !15500)
!15519 = !DILocation(line: 0, scope: !14053, inlinedAt: !15520)
!15520 = distinct !DILocation(line: 998, column: 2, scope: !15501)
!15521 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !15520)
!15522 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !15520)
!15523 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !15520)
!15524 = !DILocation(line: 0, scope: !14067, inlinedAt: !15525)
!15525 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !15520)
!15526 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !15525)
!15527 = !DILocation(line: 1011, column: 2, scope: !15482)
!15528 = !DILocation(line: 1012, column: 1, scope: !15482)
!15529 = distinct !DISubprogram(name: "z_swap_next_thread", scope: !2436, file: !2436, line: 1014, type: !14368, scopeLine: 1015, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!15530 = !DILocation(line: 1028, column: 25, scope: !15529)
!15531 = !DILocation(line: 1028, column: 2, scope: !15529)
!15532 = distinct !DISubprogram(name: "z_priq_rb_lessthan", scope: !2436, file: !2436, line: 1155, type: !15533, scopeLine: 1156, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15535)
!15533 = !DISubroutineType(types: !15534)
!15534 = !{!347, !2357, !2357}
!15535 = !{!15536, !15537, !15538, !15539, !15540}
!15536 = !DILocalVariable(name: "a", arg: 1, scope: !15532, file: !2436, line: 1155, type: !2357)
!15537 = !DILocalVariable(name: "b", arg: 2, scope: !15532, file: !2436, line: 1155, type: !2357)
!15538 = !DILocalVariable(name: "thread_a", scope: !15532, file: !2436, line: 1157, type: !2328)
!15539 = !DILocalVariable(name: "thread_b", scope: !15532, file: !2436, line: 1157, type: !2328)
!15540 = !DILocalVariable(name: "cmp", scope: !15532, file: !2436, line: 1158, type: !765)
!15541 = !DILocation(line: 0, scope: !15532)
!15542 = !DILocation(line: 1160, column: 13, scope: !15532)
!15543 = !DILocation(line: 1161, column: 13, scope: !15532)
!15544 = !DILocation(line: 1163, column: 8, scope: !15532)
!15545 = !DILocation(line: 1165, column: 10, scope: !15546)
!15546 = distinct !DILexicalBlock(scope: !15532, file: !2436, line: 1165, column: 6)
!15547 = !DILocation(line: 1165, column: 6, scope: !15532)
!15548 = !DILocation(line: 1167, column: 17, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15546, file: !2436, line: 1167, column: 13)
!15550 = !DILocation(line: 1167, column: 13, scope: !15546)
!15551 = !DILocation(line: 1170, column: 25, scope: !15552)
!15552 = distinct !DILexicalBlock(scope: !15549, file: !2436, line: 1169, column: 9)
!15553 = !DILocation(line: 1170, column: 52, scope: !15552)
!15554 = !DILocation(line: 1170, column: 35, scope: !15552)
!15555 = !DILocation(line: 1170, column: 3, scope: !15552)
!15556 = !DILocation(line: 0, scope: !15546)
!15557 = !DILocation(line: 1173, column: 1, scope: !15532)
!15558 = distinct !DISubprogram(name: "z_priq_rb_add", scope: !2436, file: !2436, line: 1175, type: !15559, scopeLine: 1176, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15574)
!15559 = !DISubroutineType(types: !15560)
!15560 = !{null, !15561, !2328}
!15561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15562, size: 32)
!15562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_rb", file: !15563, line: 37, size: 128, elements: !15564)
!15563 = !DIFile(filename: "zephyr/include/zephyr/kernel/sched_priq.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!15564 = !{!15565, !15573}
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !15562, file: !15563, line: 38, baseType: !15566, size: 96)
!15566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbtree", file: !168, line: 83, size: 96, elements: !15567)
!15567 = !{!15568, !15569, !15572}
!15568 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !15566, file: !168, line: 84, baseType: !2357, size: 32)
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "lessthan_fn", scope: !15566, file: !168, line: 85, baseType: !15570, size: 32, offset: 32)
!15570 = !DIDerivedType(tag: DW_TAG_typedef, name: "rb_lessthan_t", file: !168, line: 81, baseType: !15571)
!15571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15533, size: 32)
!15572 = !DIDerivedType(tag: DW_TAG_member, name: "max_depth", scope: !15566, file: !168, line: 86, baseType: !109, size: 32, offset: 64)
!15573 = !DIDerivedType(tag: DW_TAG_member, name: "next_order_key", scope: !15562, file: !15563, line: 39, baseType: !109, size: 32, offset: 96)
!15574 = !{!15575, !15576, !15577, !15578, !15587}
!15575 = !DILocalVariable(name: "pq", arg: 1, scope: !15558, file: !2436, line: 1175, type: !15561)
!15576 = !DILocalVariable(name: "thread", arg: 2, scope: !15558, file: !2436, line: 1175, type: !2328)
!15577 = !DILocalVariable(name: "t", scope: !15558, file: !2436, line: 1177, type: !2328)
!15578 = !DILocalVariable(name: "__f", scope: !15579, file: !2436, line: 1190, type: !15582)
!15579 = distinct !DILexicalBlock(scope: !15580, file: !2436, line: 1190, column: 3)
!15580 = distinct !DILexicalBlock(scope: !15581, file: !2436, line: 1189, column: 27)
!15581 = distinct !DILexicalBlock(scope: !15558, file: !2436, line: 1189, column: 6)
!15582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rb_foreach", file: !168, line: 155, size: 96, elements: !15583)
!15583 = !{!15584, !15585, !15586}
!15584 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !15582, file: !168, line: 156, baseType: !2431, size: 32)
!15585 = !DIDerivedType(tag: DW_TAG_member, name: "is_left", scope: !15582, file: !168, line: 157, baseType: !286, size: 32, offset: 32)
!15586 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !15582, file: !168, line: 158, baseType: !765, size: 32, offset: 64)
!15587 = !DILocalVariable(name: "n", scope: !15588, file: !2436, line: 1190, type: !2357)
!15588 = distinct !DILexicalBlock(scope: !15589, file: !2436, line: 1190, column: 3)
!15589 = distinct !DILexicalBlock(scope: !15579, file: !2436, line: 1190, column: 3)
!15590 = !DILocation(line: 0, scope: !15558)
!15591 = !DILocation(line: 1179, column: 2, scope: !15592)
!15592 = distinct !DILexicalBlock(scope: !15593, file: !2436, line: 1179, column: 2)
!15593 = distinct !DILexicalBlock(scope: !15558, file: !2436, line: 1179, column: 2)
!15594 = !DILocation(line: 1179, column: 2, scope: !15593)
!15595 = !DILocation(line: 1179, column: 2, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15592, file: !2436, line: 1179, column: 2)
!15597 = !DILocation(line: 1181, column: 31, scope: !15558)
!15598 = !DILocation(line: 1181, column: 45, scope: !15558)
!15599 = !DILocation(line: 1181, column: 15, scope: !15558)
!15600 = !DILocation(line: 1181, column: 25, scope: !15558)
!15601 = !DILocation(line: 1189, column: 11, scope: !15581)
!15602 = !DILocation(line: 1189, column: 7, scope: !15581)
!15603 = !DILocation(line: 1189, column: 6, scope: !15558)
!15604 = !DILocation(line: 1190, column: 3, scope: !15579)
!15605 = !DILocation(line: 1190, column: 3, scope: !15588)
!15606 = !DILocation(line: 0, scope: !15588)
!15607 = !DILocation(line: 1190, column: 3, scope: !15589)
!15608 = !DILocation(line: 1193, column: 2, scope: !15580)
!15609 = !DILocation(line: 1191, column: 42, scope: !15610)
!15610 = distinct !DILexicalBlock(scope: !15589, file: !2436, line: 1190, column: 54)
!15611 = !DILocation(line: 1191, column: 12, scope: !15610)
!15612 = !DILocation(line: 1191, column: 22, scope: !15610)
!15613 = distinct !{!15613, !15604, !15614}
!15614 = !DILocation(line: 1192, column: 3, scope: !15579)
!15615 = !DILocation(line: 1195, column: 17, scope: !15558)
!15616 = !DILocation(line: 1195, column: 37, scope: !15558)
!15617 = !DILocation(line: 1195, column: 2, scope: !15558)
!15618 = !DILocation(line: 1196, column: 1, scope: !15558)
!15619 = !DISubprogram(name: "z_rb_foreach_next", scope: !168, file: !168, line: 176, type: !15620, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!15620 = !DISubroutineType(types: !15621)
!15621 = !{!2357, !15622, !15623}
!15622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15566, size: 32)
!15623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15582, size: 32)
!15624 = !DISubprogram(name: "rb_insert", scope: !168, file: !168, line: 105, type: !15625, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!15625 = !DISubroutineType(types: !15626)
!15626 = !{null, !15622, !2357}
!15627 = distinct !DISubprogram(name: "z_priq_rb_remove", scope: !2436, file: !2436, line: 1198, type: !15559, scopeLine: 1199, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15628)
!15628 = !{!15629, !15630}
!15629 = !DILocalVariable(name: "pq", arg: 1, scope: !15627, file: !2436, line: 1198, type: !15561)
!15630 = !DILocalVariable(name: "thread", arg: 2, scope: !15627, file: !2436, line: 1198, type: !2328)
!15631 = !DILocation(line: 0, scope: !15627)
!15632 = !DILocation(line: 1200, column: 2, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15634, file: !2436, line: 1200, column: 2)
!15634 = distinct !DILexicalBlock(scope: !15627, file: !2436, line: 1200, column: 2)
!15635 = !DILocation(line: 1200, column: 2, scope: !15634)
!15636 = !DILocation(line: 1200, column: 2, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15633, file: !2436, line: 1200, column: 2)
!15638 = !DILocation(line: 1202, column: 17, scope: !15627)
!15639 = !DILocation(line: 1202, column: 37, scope: !15627)
!15640 = !DILocation(line: 1202, column: 2, scope: !15627)
!15641 = !DILocation(line: 1204, column: 16, scope: !15642)
!15642 = distinct !DILexicalBlock(scope: !15627, file: !2436, line: 1204, column: 6)
!15643 = !DILocation(line: 1204, column: 7, scope: !15642)
!15644 = !DILocation(line: 1204, column: 6, scope: !15627)
!15645 = !DILocation(line: 1205, column: 7, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15642, file: !2436, line: 1204, column: 22)
!15647 = !DILocation(line: 1205, column: 22, scope: !15646)
!15648 = !DILocation(line: 1206, column: 2, scope: !15646)
!15649 = !DILocation(line: 1207, column: 1, scope: !15627)
!15650 = !DISubprogram(name: "rb_remove", scope: !168, file: !168, line: 110, type: !15625, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!15651 = distinct !DISubprogram(name: "z_priq_rb_best", scope: !2436, file: !2436, line: 1209, type: !15652, scopeLine: 1210, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15654)
!15652 = !DISubroutineType(types: !15653)
!15653 = !{!2328, !15561}
!15654 = !{!15655, !15656, !15657}
!15655 = !DILocalVariable(name: "pq", arg: 1, scope: !15651, file: !2436, line: 1209, type: !15561)
!15656 = !DILocalVariable(name: "thread", scope: !15651, file: !2436, line: 1211, type: !2328)
!15657 = !DILocalVariable(name: "n", scope: !15651, file: !2436, line: 1212, type: !2357)
!15658 = !DILocation(line: 0, scope: !15651)
!15659 = !DILocation(line: 1212, column: 37, scope: !15651)
!15660 = !DILocation(line: 1212, column: 21, scope: !15651)
!15661 = !DILocation(line: 1217, column: 2, scope: !15651)
!15662 = distinct !DISubprogram(name: "rb_get_min", scope: !168, file: !168, line: 115, type: !15663, scopeLine: 116, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15665)
!15663 = !DISubroutineType(types: !15664)
!15664 = !{!2357, !15622}
!15665 = !{!15666}
!15666 = !DILocalVariable(name: "tree", arg: 1, scope: !15662, file: !168, line: 115, type: !15622)
!15667 = !DILocation(line: 0, scope: !15662)
!15668 = !DILocation(line: 117, column: 9, scope: !15662)
!15669 = !DILocation(line: 117, column: 2, scope: !15662)
!15670 = !DISubprogram(name: "z_rb_get_minmax", scope: !168, file: !168, line: 100, type: !15671, flags: DIFlagPrototyped, spFlags: DISPFlagOptimized, retainedNodes: !2026)
!15671 = !DISubroutineType(types: !15672)
!15672 = !{!2357, !15622, !178}
!15673 = distinct !DISubprogram(name: "z_priq_mq_best", scope: !2436, file: !2436, line: 1246, type: !15674, scopeLine: 1247, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15682)
!15674 = !DISubroutineType(types: !15675)
!15675 = !{!2328, !15676}
!15676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15677, size: 32)
!15677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_priq_mq", file: !15563, line: 53, size: 2080, elements: !15678)
!15678 = !{!15679, !15681}
!15679 = !DIDerivedType(tag: DW_TAG_member, name: "queues", scope: !15677, file: !15563, line: 54, baseType: !15680, size: 2048)
!15680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2364, size: 2048, elements: !224)
!15681 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !15677, file: !15563, line: 55, baseType: !32, size: 32, offset: 2048)
!15682 = !{!15683, !15684, !15685, !15686}
!15683 = !DILocalVariable(name: "pq", arg: 1, scope: !15673, file: !2436, line: 1246, type: !15676)
!15684 = !DILocalVariable(name: "thread", scope: !15673, file: !2436, line: 1252, type: !2328)
!15685 = !DILocalVariable(name: "l", scope: !15673, file: !2436, line: 1253, type: !14245)
!15686 = !DILocalVariable(name: "n", scope: !15673, file: !2436, line: 1254, type: !2432)
!15687 = !DILocation(line: 0, scope: !15673)
!15688 = !DILocation(line: 1248, column: 11, scope: !15689)
!15689 = distinct !DILexicalBlock(scope: !15673, file: !2436, line: 1248, column: 6)
!15690 = !DILocation(line: 1248, column: 7, scope: !15689)
!15691 = !DILocation(line: 1248, column: 6, scope: !15673)
!15692 = !DILocation(line: 1253, column: 31, scope: !15673)
!15693 = !DILocation(line: 1253, column: 20, scope: !15673)
!15694 = !DILocation(line: 1254, column: 19, scope: !15673)
!15695 = !DILocation(line: 1260, column: 1, scope: !15673)
!15696 = distinct !DISubprogram(name: "z_unpend_all", scope: !2436, file: !2436, line: 1262, type: !15697, scopeLine: 1263, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15699)
!15697 = !DISubroutineType(types: !15698)
!15698 = !{!109, !2359}
!15699 = !{!15700, !15701, !15702}
!15700 = !DILocalVariable(name: "wait_q", arg: 1, scope: !15696, file: !2436, line: 1262, type: !2359)
!15701 = !DILocalVariable(name: "need_sched", scope: !15696, file: !2436, line: 1264, type: !109)
!15702 = !DILocalVariable(name: "thread", scope: !15696, file: !2436, line: 1265, type: !2328)
!15703 = !DILocation(line: 0, scope: !15696)
!15704 = !DILocation(line: 1267, column: 19, scope: !15696)
!15705 = !DILocation(line: 1267, column: 41, scope: !15696)
!15706 = !DILocation(line: 1267, column: 2, scope: !15696)
!15707 = !DILocation(line: 1268, column: 3, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15696, file: !2436, line: 1267, column: 50)
!15709 = !DILocation(line: 1269, column: 3, scope: !15708)
!15710 = distinct !{!15710, !15706, !15711}
!15711 = !DILocation(line: 1271, column: 2, scope: !15696)
!15712 = !DILocation(line: 1273, column: 2, scope: !15696)
!15713 = distinct !DISubprogram(name: "z_waitq_head", scope: !13172, file: !13172, line: 52, type: !15244, scopeLine: 53, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15714)
!15714 = !{!15715}
!15715 = !DILocalVariable(name: "w", arg: 1, scope: !15713, file: !13172, line: 52, type: !2359)
!15716 = !DILocation(line: 0, scope: !15713)
!15717 = !DILocation(line: 54, column: 52, scope: !15713)
!15718 = !DILocation(line: 54, column: 28, scope: !15713)
!15719 = !DILocation(line: 54, column: 9, scope: !15713)
!15720 = !DILocation(line: 54, column: 2, scope: !15713)
!15721 = distinct !DISubprogram(name: "init_ready_q", scope: !2436, file: !2436, line: 1276, type: !15722, scopeLine: 1277, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15729)
!15722 = !DISubroutineType(types: !15723)
!15723 = !{null, !15724}
!15724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15725, size: 32)
!15725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ready_q", file: !122, line: 83, size: 96, elements: !15726)
!15726 = !{!15727, !15728}
!15727 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15725, file: !122, line: 86, baseType: !2328, size: 32)
!15728 = !DIDerivedType(tag: DW_TAG_member, name: "runq", scope: !15725, file: !122, line: 90, baseType: !2364, size: 64, offset: 32)
!15729 = !{!15730}
!15730 = !DILocalVariable(name: "rq", arg: 1, scope: !15721, file: !2436, line: 1276, type: !15724)
!15731 = !DILocation(line: 0, scope: !15721)
!15732 = !DILocation(line: 1289, column: 22, scope: !15721)
!15733 = !DILocation(line: 1289, column: 2, scope: !15721)
!15734 = !DILocation(line: 1291, column: 1, scope: !15721)
!15735 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !15736, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15738)
!15736 = !DISubroutineType(types: !15737)
!15737 = !{null, !14245}
!15738 = !{!15739}
!15739 = !DILocalVariable(name: "list", arg: 1, scope: !15735, file: !127, line: 197, type: !14245)
!15740 = !DILocation(line: 0, scope: !15735)
!15741 = !DILocation(line: 199, column: 8, scope: !15735)
!15742 = !DILocation(line: 199, column: 13, scope: !15735)
!15743 = !DILocation(line: 200, column: 8, scope: !15735)
!15744 = !DILocation(line: 200, column: 13, scope: !15735)
!15745 = !DILocation(line: 201, column: 1, scope: !15735)
!15746 = distinct !DISubprogram(name: "z_sched_init", scope: !2436, file: !2436, line: 1293, type: !3089, scopeLine: 1294, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!15747 = !DILocation(line: 1302, column: 2, scope: !15746)
!15748 = !DILocation(line: 1306, column: 2, scope: !15746)
!15749 = !DILocation(line: 1309, column: 1, scope: !15746)
!15750 = distinct !DISubprogram(name: "z_impl_k_thread_priority_get", scope: !2436, file: !2436, line: 1311, type: !15751, scopeLine: 1312, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15754)
!15751 = !DISubroutineType(types: !15752)
!15752 = !{!109, !15753}
!15753 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !156, line: 347, baseType: !2328)
!15754 = !{!15755}
!15755 = !DILocalVariable(name: "thread", arg: 1, scope: !15750, file: !2436, line: 1311, type: !15753)
!15756 = !DILocation(line: 0, scope: !15750)
!15757 = !DILocation(line: 1313, column: 22, scope: !15750)
!15758 = !DILocation(line: 1313, column: 9, scope: !15750)
!15759 = !DILocation(line: 1313, column: 2, scope: !15750)
!15760 = distinct !DISubprogram(name: "z_impl_k_thread_priority_set", scope: !2436, file: !2436, line: 1325, type: !15761, scopeLine: 1326, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15763)
!15761 = !DISubroutineType(types: !15762)
!15762 = !{null, !15753, !109}
!15763 = !{!15764, !15765, !15766}
!15764 = !DILocalVariable(name: "thread", arg: 1, scope: !15760, file: !2436, line: 1325, type: !15753)
!15765 = !DILocalVariable(name: "prio", arg: 2, scope: !15760, file: !2436, line: 1325, type: !109)
!15766 = !DILocalVariable(name: "th", scope: !15760, file: !2436, line: 1334, type: !2328)
!15767 = !DILocation(line: 0, scope: !15760)
!15768 = !DILocation(line: 1331, column: 2, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15770, file: !2436, line: 1331, column: 2)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !2436, line: 1331, column: 2)
!15771 = distinct !DILexicalBlock(scope: !15760, file: !2436, line: 1331, column: 2)
!15772 = !DILocation(line: 1331, column: 2, scope: !15773)
!15773 = distinct !DILexicalBlock(scope: !15769, file: !2436, line: 1331, column: 2)
!15774 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !15775)
!15775 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !15776)
!15776 = distinct !DILocation(line: 1332, column: 2, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15778, file: !2436, line: 1332, column: 2)
!15778 = distinct !DILexicalBlock(scope: !15760, file: !2436, line: 1332, column: 2)
!15779 = !DILocation(line: 0, scope: !14744, inlinedAt: !15775)
!15780 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !15776)
!15781 = !DILocation(line: 1332, column: 2, scope: !15778)
!15782 = !DILocation(line: 1332, column: 2, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !15777, file: !2436, line: 1332, column: 2)
!15784 = !DILocation(line: 1336, column: 2, scope: !15760)
!15785 = !DILocation(line: 1337, column: 1, scope: !15760)
!15786 = distinct !DISubprogram(name: "k_can_yield", scope: !2436, file: !2436, line: 1384, type: !7475, scopeLine: 1385, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!15787 = !DILocation(line: 1386, column: 11, scope: !15786)
!15788 = !DILocation(line: 1386, column: 29, scope: !15786)
!15789 = !DILocation(line: 1386, column: 32, scope: !15786)
!15790 = !DILocation(line: 1386, column: 46, scope: !15786)
!15791 = !DILocation(line: 1387, column: 28, scope: !15786)
!15792 = !DILocation(line: 1387, column: 4, scope: !15786)
!15793 = !DILocation(line: 1386, column: 2, scope: !15786)
!15794 = distinct !DISubprogram(name: "k_is_pre_kernel", scope: !118, file: !118, line: 989, type: !7475, scopeLine: 990, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!15795 = !DILocation(line: 993, column: 10, scope: !15794)
!15796 = !DILocation(line: 993, column: 2, scope: !15794)
!15797 = distinct !DISubprogram(name: "z_impl_k_yield", scope: !2436, file: !2436, line: 1390, type: !3089, scopeLine: 1391, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15798)
!15798 = !{!15799}
!15799 = !DILocalVariable(name: "key", scope: !15797, file: !2436, line: 1396, type: !14011)
!15800 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !15801)
!15801 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !15802)
!15802 = distinct !DILocation(line: 1392, column: 2, scope: !15803)
!15803 = distinct !DILexicalBlock(scope: !15804, file: !2436, line: 1392, column: 2)
!15804 = distinct !DILexicalBlock(scope: !15797, file: !2436, line: 1392, column: 2)
!15805 = !DILocation(line: 0, scope: !14744, inlinedAt: !15801)
!15806 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !15802)
!15807 = !DILocation(line: 1392, column: 2, scope: !15804)
!15808 = !DILocation(line: 1392, column: 2, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15803, file: !2436, line: 1392, column: 2)
!15810 = !DILocation(line: 0, scope: !14019, inlinedAt: !15811)
!15811 = distinct !DILocation(line: 1396, column: 25, scope: !15797)
!15812 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15813)
!15813 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15811)
!15814 = !DILocation(line: 0, scope: !14028, inlinedAt: !15813)
!15815 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15811)
!15816 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15811)
!15817 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15811)
!15818 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15811)
!15819 = !DILocation(line: 0, scope: !15797)
!15820 = !DILocation(line: 1400, column: 18, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15822, file: !2436, line: 1399, column: 36)
!15822 = distinct !DILexicalBlock(scope: !15797, file: !2436, line: 1398, column: 6)
!15823 = !DILocation(line: 0, scope: !14211, inlinedAt: !15824)
!15824 = distinct !DILocation(line: 1400, column: 3, scope: !15821)
!15825 = !DILocation(line: 266, column: 15, scope: !14211, inlinedAt: !15824)
!15826 = !DILocation(line: 266, column: 28, scope: !14211, inlinedAt: !15824)
!15827 = !DILocation(line: 0, scope: !14219, inlinedAt: !15828)
!15828 = distinct !DILocation(line: 268, column: 3, scope: !14223, inlinedAt: !15824)
!15829 = !DILocation(line: 234, column: 2, scope: !14219, inlinedAt: !15828)
!15830 = !DILocation(line: 1402, column: 15, scope: !15797)
!15831 = !DILocation(line: 0, scope: !14228, inlinedAt: !15832)
!15832 = distinct !DILocation(line: 1402, column: 2, scope: !15797)
!15833 = !DILocation(line: 252, column: 15, scope: !14228, inlinedAt: !15832)
!15834 = !DILocation(line: 252, column: 28, scope: !14228, inlinedAt: !15832)
!15835 = !DILocation(line: 0, scope: !14235, inlinedAt: !15836)
!15836 = distinct !DILocation(line: 254, column: 3, scope: !14239, inlinedAt: !15832)
!15837 = !DILocation(line: 0, scope: !14242, inlinedAt: !15838)
!15838 = distinct !DILocation(line: 229, column: 2, scope: !14235, inlinedAt: !15836)
!15839 = !DILocation(line: 186, column: 2, scope: !14252, inlinedAt: !15838)
!15840 = !DILocation(line: 186, column: 2, scope: !14253, inlinedAt: !15838)
!15841 = !DILocation(line: 186, column: 2, scope: !14256, inlinedAt: !15838)
!15842 = !DILocation(line: 188, column: 2, scope: !14258, inlinedAt: !15838)
!15843 = !DILocation(line: 188, column: 2, scope: !14260, inlinedAt: !15838)
!15844 = !DILocation(line: 0, scope: !14258, inlinedAt: !15838)
!15845 = !DILocation(line: 189, column: 7, scope: !14263, inlinedAt: !15838)
!15846 = !DILocation(line: 189, column: 35, scope: !14263, inlinedAt: !15838)
!15847 = !DILocation(line: 189, column: 7, scope: !14264, inlinedAt: !15838)
!15848 = !DILocation(line: 191, column: 21, scope: !14268, inlinedAt: !15838)
!15849 = !DILocation(line: 190, column: 4, scope: !14268, inlinedAt: !15838)
!15850 = !DILocation(line: 192, column: 4, scope: !14268, inlinedAt: !15838)
!15851 = distinct !{!15851, !15842, !15852}
!15852 = !DILocation(line: 194, column: 2, scope: !14258, inlinedAt: !15838)
!15853 = !DILocation(line: 196, column: 37, scope: !14242, inlinedAt: !15838)
!15854 = !DILocation(line: 196, column: 2, scope: !14242, inlinedAt: !15838)
!15855 = !DILocation(line: 197, column: 1, scope: !14242, inlinedAt: !15838)
!15856 = !DILocation(line: 1403, column: 2, scope: !15797)
!15857 = !DILocation(line: 0, scope: !14695, inlinedAt: !15858)
!15858 = distinct !DILocation(line: 1404, column: 2, scope: !15797)
!15859 = !DILocation(line: 0, scope: !14704, inlinedAt: !15860)
!15860 = distinct !DILocation(line: 195, column: 2, scope: !14695, inlinedAt: !15858)
!15861 = !DILocation(line: 225, column: 2, scope: !14711, inlinedAt: !15860)
!15862 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !15860)
!15863 = !DILocation(line: 225, column: 2, scope: !14715, inlinedAt: !15860)
!15864 = !DILocation(line: 196, column: 9, scope: !14695, inlinedAt: !15858)
!15865 = !DILocation(line: 1405, column: 1, scope: !15797)
!15866 = distinct !DISubprogram(name: "z_impl_k_sleep", scope: !2436, file: !2436, line: 1459, type: !15867, scopeLine: 1460, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15869)
!15867 = !DISubroutineType(types: !15868)
!15868 = !{!765, !14905}
!15869 = !{!15870, !15871, !15872}
!15870 = !DILocalVariable(name: "timeout", arg: 1, scope: !15866, file: !2436, line: 1459, type: !14905)
!15871 = !DILocalVariable(name: "ticks", scope: !15866, file: !2436, line: 1461, type: !103)
!15872 = !DILocalVariable(name: "ret", scope: !15866, file: !2436, line: 1480, type: !765)
!15873 = !DILocation(line: 0, scope: !15866)
!15874 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !15875)
!15875 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !15876)
!15876 = distinct !DILocation(line: 1463, column: 2, scope: !15877)
!15877 = distinct !DILexicalBlock(scope: !15878, file: !2436, line: 1463, column: 2)
!15878 = distinct !DILexicalBlock(scope: !15866, file: !2436, line: 1463, column: 2)
!15879 = !DILocation(line: 0, scope: !14744, inlinedAt: !15875)
!15880 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !15876)
!15881 = !DILocation(line: 1463, column: 2, scope: !15878)
!15882 = !DILocation(line: 1463, column: 2, scope: !15883)
!15883 = distinct !DILexicalBlock(scope: !15877, file: !2436, line: 1463, column: 2)
!15884 = !DILocation(line: 1468, column: 6, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15866, file: !2436, line: 1468, column: 6)
!15886 = !DILocation(line: 1468, column: 6, scope: !15866)
!15887 = !DILocation(line: 1469, column: 20, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15885, file: !2436, line: 1468, column: 40)
!15889 = !DILocation(line: 1469, column: 3, scope: !15888)
!15890 = !DILocation(line: 1473, column: 3, scope: !15888)
!15891 = !DILocation(line: 1478, column: 10, scope: !15866)
!15892 = !DILocation(line: 1480, column: 16, scope: !15866)
!15893 = !DILocation(line: 1485, column: 1, scope: !15866)
!15894 = distinct !DISubprogram(name: "k_thread_suspend", scope: !3231, file: !3231, line: 310, type: !15895, scopeLine: 311, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15897)
!15895 = !DISubroutineType(types: !15896)
!15896 = !{null, !15753}
!15897 = !{!15898}
!15898 = !DILocalVariable(name: "thread", arg: 1, scope: !15894, file: !3231, line: 310, type: !15753)
!15899 = !DILocation(line: 0, scope: !15894)
!15900 = !DILocation(line: 319, column: 2, scope: !15901)
!15901 = distinct !DILexicalBlock(scope: !15894, file: !3231, line: 319, column: 2)
!15902 = !{i64 2154792880}
!15903 = !DILocation(line: 320, column: 2, scope: !15894)
!15904 = !DILocation(line: 321, column: 1, scope: !15894)
!15905 = distinct !DISubprogram(name: "z_tick_sleep", scope: !2436, file: !2436, line: 1415, type: !15906, scopeLine: 1416, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15908)
!15906 = !DISubroutineType(types: !15907)
!15907 = !{!765, !103}
!15908 = !{!15909, !15910, !15911, !15912}
!15909 = !DILocalVariable(name: "ticks", arg: 1, scope: !15905, file: !2436, line: 1415, type: !103)
!15910 = !DILocalVariable(name: "expected_wakeup_ticks", scope: !15905, file: !2436, line: 1418, type: !110)
!15911 = !DILocalVariable(name: "timeout", scope: !15905, file: !2436, line: 1430, type: !14905)
!15912 = !DILocalVariable(name: "key", scope: !15905, file: !2436, line: 1437, type: !14011)
!15913 = !DILocation(line: 0, scope: !15905)
!15914 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !15915)
!15915 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !15916)
!15916 = distinct !DILocation(line: 1420, column: 2, scope: !15917)
!15917 = distinct !DILexicalBlock(scope: !15918, file: !2436, line: 1420, column: 2)
!15918 = distinct !DILexicalBlock(scope: !15905, file: !2436, line: 1420, column: 2)
!15919 = !DILocation(line: 0, scope: !14744, inlinedAt: !15915)
!15920 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !15916)
!15921 = !DILocation(line: 1420, column: 2, scope: !15918)
!15922 = !DILocation(line: 1420, column: 2, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15917, file: !2436, line: 1420, column: 2)
!15924 = !DILocation(line: 1425, column: 12, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15905, file: !2436, line: 1425, column: 6)
!15926 = !DILocation(line: 1425, column: 6, scope: !15905)
!15927 = !DILocation(line: 1426, column: 3, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15925, file: !2436, line: 1425, column: 18)
!15929 = !DILocation(line: 1427, column: 3, scope: !15928)
!15930 = !DILocation(line: 1431, column: 24, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15905, file: !2436, line: 1431, column: 6)
!15932 = !DILocation(line: 1431, column: 6, scope: !15905)
!15933 = !DILocation(line: 1432, column: 35, scope: !15934)
!15934 = distinct !DILexicalBlock(scope: !15931, file: !2436, line: 1431, column: 30)
!15935 = !DILocation(line: 1432, column: 27, scope: !15934)
!15936 = !DILocation(line: 1433, column: 2, scope: !15934)
!15937 = !DILocation(line: 1434, column: 27, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15931, file: !2436, line: 1433, column: 9)
!15939 = !DILocation(line: 0, scope: !15931)
!15940 = !DILocation(line: 0, scope: !14019, inlinedAt: !15941)
!15941 = distinct !DILocation(line: 1437, column: 25, scope: !15905)
!15942 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !15943)
!15943 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !15941)
!15944 = !DILocation(line: 0, scope: !14028, inlinedAt: !15943)
!15945 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !15941)
!15946 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !15941)
!15947 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !15941)
!15948 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !15941)
!15949 = !DILocation(line: 1440, column: 20, scope: !15905)
!15950 = !DILocation(line: 1440, column: 18, scope: !15905)
!15951 = !DILocation(line: 1442, column: 2, scope: !15905)
!15952 = !DILocation(line: 1443, column: 23, scope: !15905)
!15953 = !DILocation(line: 1443, column: 2, scope: !15905)
!15954 = !DILocation(line: 1444, column: 29, scope: !15905)
!15955 = !DILocation(line: 1444, column: 2, scope: !15905)
!15956 = !DILocation(line: 0, scope: !14695, inlinedAt: !15957)
!15957 = distinct !DILocation(line: 1446, column: 8, scope: !15905)
!15958 = !DILocation(line: 0, scope: !14704, inlinedAt: !15959)
!15959 = distinct !DILocation(line: 195, column: 2, scope: !14695, inlinedAt: !15957)
!15960 = !DILocation(line: 225, column: 2, scope: !14711, inlinedAt: !15959)
!15961 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !15959)
!15962 = !DILocation(line: 225, column: 2, scope: !14715, inlinedAt: !15959)
!15963 = !DILocation(line: 196, column: 9, scope: !14695, inlinedAt: !15957)
!15964 = !DILocation(line: 1448, column: 2, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15966, file: !2436, line: 1448, column: 2)
!15966 = distinct !DILexicalBlock(scope: !15905, file: !2436, line: 1448, column: 2)
!15967 = !DILocation(line: 1448, column: 2, scope: !15966)
!15968 = !DILocation(line: 1448, column: 2, scope: !15969)
!15969 = distinct !DILexicalBlock(scope: !15965, file: !2436, line: 1448, column: 2)
!15970 = !DILocation(line: 1450, column: 10, scope: !15905)
!15971 = !DILocation(line: 1450, column: 45, scope: !15905)
!15972 = !DILocation(line: 1450, column: 43, scope: !15905)
!15973 = !DILocation(line: 1451, column: 6, scope: !15905)
!15974 = !DILocation(line: 1457, column: 1, scope: !15905)
!15975 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !3272, file: !3272, line: 1103, type: !3273, scopeLine: 1104, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15976)
!15976 = !{!15977}
!15977 = !DILocalVariable(name: "t", arg: 1, scope: !15975, file: !3272, line: 1103, type: !111)
!15978 = !DILocation(line: 0, scope: !15975)
!15979 = !DILocation(line: 0, scope: !14079, inlinedAt: !15980)
!15980 = distinct !DILocation(line: 1106, column: 9, scope: !15975)
!15981 = !DILocation(line: 139, column: 13, scope: !15982, inlinedAt: !15980)
!15982 = distinct !DILexicalBlock(scope: !15983, file: !3272, line: 138, column: 10)
!15983 = distinct !DILexicalBlock(scope: !15984, file: !3272, line: 136, column: 7)
!15984 = distinct !DILexicalBlock(scope: !14100, file: !3272, line: 134, column: 17)
!15985 = !DILocation(line: 1106, column: 2, scope: !15975)
!15986 = distinct !DISubprogram(name: "k_yield", scope: !3231, file: !3231, line: 140, type: !3089, scopeLine: 141, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!15987 = !DILocation(line: 148, column: 2, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15986, file: !3231, line: 148, column: 2)
!15989 = !{i64 2154792200}
!15990 = !DILocation(line: 149, column: 2, scope: !15986)
!15991 = !DILocation(line: 150, column: 1, scope: !15986)
!15992 = distinct !DISubprogram(name: "z_impl_k_usleep", scope: !2436, file: !2436, line: 1495, type: !15993, scopeLine: 1496, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !15995)
!15993 = !DISubroutineType(types: !15994)
!15994 = !{!765, !109}
!15995 = !{!15996, !15997}
!15996 = !DILocalVariable(name: "us", arg: 1, scope: !15992, file: !2436, line: 1495, type: !109)
!15997 = !DILocalVariable(name: "ticks", scope: !15992, file: !2436, line: 1497, type: !765)
!15998 = !DILocation(line: 0, scope: !15992)
!15999 = !DILocation(line: 1501, column: 31, scope: !15992)
!16000 = !DILocation(line: 1501, column: 10, scope: !15992)
!16001 = !DILocation(line: 1502, column: 23, scope: !15992)
!16002 = !DILocation(line: 1502, column: 10, scope: !15992)
!16003 = !DILocation(line: 1506, column: 31, scope: !15992)
!16004 = !DILocation(line: 1506, column: 9, scope: !15992)
!16005 = !DILocation(line: 1506, column: 2, scope: !15992)
!16006 = distinct !DISubprogram(name: "k_us_to_ticks_ceil64", scope: !3272, file: !3272, line: 571, type: !3273, scopeLine: 572, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16007)
!16007 = !{!16008}
!16008 = !DILocalVariable(name: "t", arg: 1, scope: !16006, file: !3272, line: 571, type: !111)
!16009 = !DILocation(line: 0, scope: !16006)
!16010 = !DILocation(line: 0, scope: !14079, inlinedAt: !16011)
!16011 = distinct !DILocation(line: 574, column: 9, scope: !16006)
!16012 = !DILocation(line: 135, column: 5, scope: !15984, inlinedAt: !16011)
!16013 = !DILocation(line: 139, column: 13, scope: !15982, inlinedAt: !16011)
!16014 = !DILocation(line: 574, column: 2, scope: !16006)
!16015 = distinct !DISubprogram(name: "k_ticks_to_us_floor64", scope: !3272, file: !3272, line: 1187, type: !3273, scopeLine: 1188, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16016)
!16016 = !{!16017}
!16017 = !DILocalVariable(name: "t", arg: 1, scope: !16015, file: !3272, line: 1187, type: !111)
!16018 = !DILocation(line: 0, scope: !16015)
!16019 = !DILocation(line: 0, scope: !14079, inlinedAt: !16020)
!16020 = distinct !DILocation(line: 1190, column: 9, scope: !16015)
!16021 = !DILocation(line: 145, column: 13, scope: !16022, inlinedAt: !16020)
!16022 = distinct !DILexicalBlock(scope: !14097, file: !3272, line: 144, column: 10)
!16023 = !DILocation(line: 1190, column: 2, scope: !16015)
!16024 = distinct !DISubprogram(name: "z_impl_k_wakeup", scope: !2436, file: !2436, line: 1517, type: !15895, scopeLine: 1518, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16025)
!16025 = !{!16026}
!16026 = !DILocalVariable(name: "thread", arg: 1, scope: !16024, file: !2436, line: 1517, type: !15753)
!16027 = !DILocation(line: 0, scope: !16024)
!16028 = !DILocation(line: 1521, column: 6, scope: !16029)
!16029 = distinct !DILexicalBlock(scope: !16024, file: !2436, line: 1521, column: 6)
!16030 = !DILocation(line: 1521, column: 6, scope: !16024)
!16031 = !DILocation(line: 1525, column: 6, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !16024, file: !2436, line: 1525, column: 6)
!16033 = !DILocation(line: 1525, column: 37, scope: !16032)
!16034 = !DILocation(line: 1525, column: 6, scope: !16024)
!16035 = !DILocation(line: 1527, column: 20, scope: !16036)
!16036 = distinct !DILexicalBlock(scope: !16037, file: !2436, line: 1527, column: 7)
!16037 = distinct !DILexicalBlock(scope: !16032, file: !2436, line: 1525, column: 42)
!16038 = !DILocation(line: 1527, column: 33, scope: !16036)
!16039 = !DILocation(line: 1527, column: 7, scope: !16037)
!16040 = !DILocation(line: 1532, column: 2, scope: !16024)
!16041 = !DILocation(line: 1533, column: 2, scope: !16024)
!16042 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !16043)
!16043 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 1537, column: 7, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16024, file: !2436, line: 1537, column: 6)
!16046 = !DILocation(line: 0, scope: !14744, inlinedAt: !16043)
!16047 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !16044)
!16048 = !DILocation(line: 1537, column: 6, scope: !16024)
!16049 = !DILocation(line: 1538, column: 3, scope: !16050)
!16050 = distinct !DILexicalBlock(scope: !16045, file: !2436, line: 1537, column: 25)
!16051 = !DILocation(line: 1539, column: 2, scope: !16050)
!16052 = !DILocation(line: 1540, column: 1, scope: !16024)
!16053 = distinct !DISubprogram(name: "z_is_thread_pending", scope: !12811, file: !12811, line: 101, type: !14160, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16054)
!16054 = !{!16055}
!16055 = !DILocalVariable(name: "thread", arg: 1, scope: !16053, file: !12811, line: 101, type: !2328)
!16056 = !DILocation(line: 0, scope: !16053)
!16057 = !DILocation(line: 103, column: 23, scope: !16053)
!16058 = !DILocation(line: 103, column: 36, scope: !16053)
!16059 = !DILocation(line: 103, column: 55, scope: !16053)
!16060 = !DILocation(line: 103, column: 2, scope: !16053)
!16061 = distinct !DISubprogram(name: "z_impl_z_current_get", scope: !2436, file: !2436, line: 1567, type: !16062, scopeLine: 1568, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16064)
!16062 = !DISubroutineType(types: !16063)
!16063 = !{!15753}
!16064 = !{!16065}
!16065 = !DILocalVariable(name: "ret", scope: !16061, file: !2436, line: 1577, type: !15753)
!16066 = !DILocation(line: 1577, column: 30, scope: !16061)
!16067 = !DILocation(line: 0, scope: !16061)
!16068 = !DILocation(line: 1582, column: 2, scope: !16061)
!16069 = distinct !DISubprogram(name: "z_impl_k_is_preempt_thread", scope: !2436, file: !2436, line: 1593, type: !7778, scopeLine: 1594, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !2026)
!16070 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !16071)
!16071 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !16072)
!16072 = distinct !DILocation(line: 1595, column: 10, scope: !16069)
!16073 = !DILocation(line: 0, scope: !14744, inlinedAt: !16071)
!16074 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !16072)
!16075 = !DILocation(line: 1595, column: 27, scope: !16069)
!16076 = !DILocation(line: 1595, column: 41, scope: !16069)
!16077 = !DILocation(line: 1595, column: 30, scope: !16069)
!16078 = !DILocation(line: 1595, column: 2, scope: !16069)
!16079 = distinct !DISubprogram(name: "z_thread_abort", scope: !2436, file: !2436, line: 1725, type: !13977, scopeLine: 1726, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16080)
!16080 = !{!16081, !16082}
!16081 = !DILocalVariable(name: "thread", arg: 1, scope: !16079, file: !2436, line: 1725, type: !2328)
!16082 = !DILocalVariable(name: "key", scope: !16079, file: !2436, line: 1727, type: !14011)
!16083 = !DILocation(line: 0, scope: !16079)
!16084 = !DILocation(line: 0, scope: !14019, inlinedAt: !16085)
!16085 = distinct !DILocation(line: 1727, column: 25, scope: !16079)
!16086 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !16087)
!16087 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !16085)
!16088 = !DILocation(line: 0, scope: !14028, inlinedAt: !16087)
!16089 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !16085)
!16090 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !16085)
!16091 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !16085)
!16092 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !16085)
!16093 = !DILocation(line: 1729, column: 20, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16079, file: !2436, line: 1729, column: 6)
!16095 = !DILocation(line: 1729, column: 33, scope: !16094)
!16096 = !DILocation(line: 1729, column: 48, scope: !16094)
!16097 = !DILocation(line: 1729, column: 6, scope: !16079)
!16098 = !DILocation(line: 0, scope: !14053, inlinedAt: !16099)
!16099 = distinct !DILocation(line: 1730, column: 3, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16094, file: !2436, line: 1729, column: 54)
!16101 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !16099)
!16102 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16099)
!16103 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16099)
!16104 = !DILocation(line: 0, scope: !14067, inlinedAt: !16105)
!16105 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !16099)
!16106 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !16105)
!16107 = !DILocation(line: 1731, column: 3, scope: !16108)
!16108 = distinct !DILexicalBlock(scope: !16109, file: !2436, line: 1731, column: 3)
!16109 = distinct !DILexicalBlock(scope: !16110, file: !2436, line: 1731, column: 3)
!16110 = distinct !DILexicalBlock(scope: !16100, file: !2436, line: 1731, column: 3)
!16111 = !DILocation(line: 1736, column: 20, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16079, file: !2436, line: 1736, column: 6)
!16113 = !DILocation(line: 1736, column: 33, scope: !16112)
!16114 = !DILocation(line: 1736, column: 49, scope: !16112)
!16115 = !DILocation(line: 1736, column: 6, scope: !16079)
!16116 = !DILocation(line: 0, scope: !14053, inlinedAt: !16117)
!16117 = distinct !DILocation(line: 1737, column: 3, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16112, file: !2436, line: 1736, column: 56)
!16119 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !16117)
!16120 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16117)
!16121 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16117)
!16122 = !DILocation(line: 0, scope: !14067, inlinedAt: !16123)
!16123 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !16117)
!16124 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !16123)
!16125 = !DILocation(line: 1738, column: 3, scope: !16118)
!16126 = !DILocation(line: 1775, column: 2, scope: !16079)
!16127 = !DILocation(line: 1776, column: 16, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16079, file: !2436, line: 1776, column: 6)
!16129 = !DILocation(line: 1776, column: 13, scope: !16128)
!16130 = !DILocation(line: 1776, column: 25, scope: !16128)
!16131 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !16132)
!16132 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !16133)
!16133 = distinct !DILocation(line: 1776, column: 29, scope: !16128)
!16134 = !DILocation(line: 0, scope: !14744, inlinedAt: !16132)
!16135 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !16133)
!16136 = !DILocation(line: 1776, column: 6, scope: !16079)
!16137 = !DILocation(line: 0, scope: !14695, inlinedAt: !16138)
!16138 = distinct !DILocation(line: 1777, column: 3, scope: !16139)
!16139 = distinct !DILexicalBlock(scope: !16128, file: !2436, line: 1776, column: 47)
!16140 = !DILocation(line: 0, scope: !14704, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 195, column: 2, scope: !14695, inlinedAt: !16138)
!16142 = !DILocation(line: 225, column: 2, scope: !14711, inlinedAt: !16141)
!16143 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !16141)
!16144 = !DILocation(line: 225, column: 2, scope: !14715, inlinedAt: !16141)
!16145 = !DILocation(line: 196, column: 9, scope: !14695, inlinedAt: !16138)
!16146 = !DILocation(line: 1778, column: 3, scope: !16147)
!16147 = distinct !DILexicalBlock(scope: !16148, file: !2436, line: 1778, column: 3)
!16148 = distinct !DILexicalBlock(scope: !16149, file: !2436, line: 1778, column: 3)
!16149 = distinct !DILexicalBlock(scope: !16139, file: !2436, line: 1778, column: 3)
!16150 = !DILocation(line: 0, scope: !14053, inlinedAt: !16151)
!16151 = distinct !DILocation(line: 1780, column: 2, scope: !16079)
!16152 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !16151)
!16153 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16151)
!16154 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16151)
!16155 = !DILocation(line: 0, scope: !14067, inlinedAt: !16156)
!16156 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !16151)
!16157 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !16156)
!16158 = !DILocation(line: 1781, column: 1, scope: !16079)
!16159 = distinct !DISubprogram(name: "end_thread", scope: !2436, file: !2436, line: 1690, type: !13977, scopeLine: 1691, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16160)
!16160 = !{!16161}
!16161 = !DILocalVariable(name: "thread", arg: 1, scope: !16159, file: !2436, line: 1690, type: !2328)
!16162 = !DILocation(line: 0, scope: !16159)
!16163 = !DILocation(line: 1695, column: 20, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16159, file: !2436, line: 1695, column: 6)
!16165 = !DILocation(line: 1695, column: 33, scope: !16164)
!16166 = !DILocation(line: 1695, column: 49, scope: !16164)
!16167 = !DILocation(line: 1695, column: 6, scope: !16159)
!16168 = !DILocation(line: 1697, column: 29, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16164, file: !2436, line: 1695, column: 56)
!16170 = !DILocation(line: 1698, column: 7, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16169, file: !2436, line: 1698, column: 7)
!16172 = !DILocation(line: 1698, column: 7, scope: !16169)
!16173 = !DILocation(line: 0, scope: !14211, inlinedAt: !16174)
!16174 = distinct !DILocation(line: 1699, column: 4, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16171, file: !2436, line: 1698, column: 35)
!16176 = !DILocation(line: 266, column: 28, scope: !14211, inlinedAt: !16174)
!16177 = !DILocation(line: 0, scope: !14219, inlinedAt: !16178)
!16178 = distinct !DILocation(line: 268, column: 3, scope: !14223, inlinedAt: !16174)
!16179 = !DILocation(line: 234, column: 2, scope: !14219, inlinedAt: !16178)
!16180 = !DILocation(line: 1700, column: 3, scope: !16175)
!16181 = !DILocation(line: 1701, column: 20, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16169, file: !2436, line: 1701, column: 7)
!16183 = !DILocation(line: 1701, column: 30, scope: !16182)
!16184 = !DILocation(line: 1701, column: 7, scope: !16169)
!16185 = !DILocation(line: 1702, column: 4, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16182, file: !2436, line: 1701, column: 39)
!16187 = !DILocation(line: 1703, column: 3, scope: !16186)
!16188 = !DILocation(line: 1704, column: 9, scope: !16169)
!16189 = !DILocation(line: 1705, column: 23, scope: !16169)
!16190 = !DILocation(line: 1705, column: 3, scope: !16169)
!16191 = !DILocation(line: 1706, column: 3, scope: !16169)
!16192 = !DILocation(line: 1722, column: 2, scope: !16169)
!16193 = !DILocation(line: 1723, column: 1, scope: !16159)
!16194 = distinct !DISubprogram(name: "unpend_all", scope: !2436, file: !2436, line: 1674, type: !16195, scopeLine: 1675, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16197)
!16195 = !DISubroutineType(types: !16196)
!16196 = !{null, !2359}
!16197 = !{!16198, !16199}
!16198 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16194, file: !2436, line: 1674, type: !2359)
!16199 = !DILocalVariable(name: "thread", scope: !16194, file: !2436, line: 1676, type: !2328)
!16200 = !DILocation(line: 0, scope: !16194)
!16201 = !DILocation(line: 1678, column: 19, scope: !16194)
!16202 = !DILocation(line: 1678, column: 41, scope: !16194)
!16203 = !DILocation(line: 1678, column: 2, scope: !16194)
!16204 = !DILocation(line: 1679, column: 3, scope: !16205)
!16205 = distinct !DILexicalBlock(scope: !16194, file: !2436, line: 1678, column: 50)
!16206 = !DILocation(line: 1680, column: 9, scope: !16205)
!16207 = !DILocalVariable(name: "thread", arg: 1, scope: !16208, file: !12831, line: 65, type: !2328)
!16208 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12831, file: !12831, line: 65, type: !16209, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16211)
!16209 = !DISubroutineType(types: !16210)
!16210 = !{null, !2328, !32}
!16211 = !{!16207, !16212}
!16212 = !DILocalVariable(name: "value", arg: 2, scope: !16208, file: !12831, line: 65, type: !32)
!16213 = !DILocation(line: 0, scope: !16208, inlinedAt: !16214)
!16214 = distinct !DILocation(line: 1681, column: 3, scope: !16205)
!16215 = !DILocation(line: 67, column: 15, scope: !16208, inlinedAt: !16214)
!16216 = !DILocation(line: 67, column: 33, scope: !16208, inlinedAt: !16214)
!16217 = !DILocation(line: 1682, column: 3, scope: !16205)
!16218 = distinct !{!16218, !16203, !16219}
!16219 = !DILocation(line: 1683, column: 2, scope: !16194)
!16220 = !DILocation(line: 1684, column: 1, scope: !16194)
!16221 = distinct !DISubprogram(name: "z_impl_k_thread_join", scope: !2436, file: !2436, line: 1794, type: !16222, scopeLine: 1795, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16224)
!16222 = !DISubroutineType(types: !16223)
!16223 = !{!109, !2328, !14905}
!16224 = !{!16225, !16226, !16227, !16228}
!16225 = !DILocalVariable(name: "thread", arg: 1, scope: !16221, file: !2436, line: 1794, type: !2328)
!16226 = !DILocalVariable(name: "timeout", arg: 2, scope: !16221, file: !2436, line: 1794, type: !14905)
!16227 = !DILocalVariable(name: "key", scope: !16221, file: !2436, line: 1796, type: !14011)
!16228 = !DILocalVariable(name: "ret", scope: !16221, file: !2436, line: 1797, type: !109)
!16229 = !DILocation(line: 0, scope: !16221)
!16230 = !DILocation(line: 0, scope: !14019, inlinedAt: !16231)
!16231 = distinct !DILocation(line: 1796, column: 25, scope: !16221)
!16232 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !16233)
!16233 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !16231)
!16234 = !DILocation(line: 0, scope: !14028, inlinedAt: !16233)
!16235 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !16231)
!16236 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !16231)
!16237 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !16231)
!16238 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !16231)
!16239 = !DILocation(line: 1801, column: 20, scope: !16240)
!16240 = distinct !DILexicalBlock(scope: !16221, file: !2436, line: 1801, column: 6)
!16241 = !DILocation(line: 1801, column: 33, scope: !16240)
!16242 = !DILocation(line: 1801, column: 49, scope: !16240)
!16243 = !DILocation(line: 1801, column: 6, scope: !16221)
!16244 = !DILocation(line: 1803, column: 13, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16240, file: !2436, line: 1803, column: 13)
!16246 = !DILocation(line: 1803, column: 13, scope: !16240)
!16247 = !DILocation(line: 1805, column: 24, scope: !16248)
!16248 = distinct !DILexicalBlock(scope: !16245, file: !2436, line: 1805, column: 13)
!16249 = !DILocation(line: 1805, column: 21, scope: !16248)
!16250 = !DILocation(line: 1805, column: 34, scope: !16248)
!16251 = !DILocation(line: 1806, column: 20, scope: !16248)
!16252 = !DILocation(line: 1806, column: 44, scope: !16248)
!16253 = !DILocation(line: 1806, column: 30, scope: !16248)
!16254 = !DILocation(line: 1805, column: 13, scope: !16245)
!16255 = !DILocation(line: 1031, column: 3, scope: !14744, inlinedAt: !16256)
!16256 = distinct !DILocation(line: 48, column: 10, scope: !14748, inlinedAt: !16257)
!16257 = distinct !DILocation(line: 1809, column: 3, scope: !16258)
!16258 = distinct !DILexicalBlock(scope: !16259, file: !2436, line: 1809, column: 3)
!16259 = distinct !DILexicalBlock(scope: !16260, file: !2436, line: 1809, column: 3)
!16260 = distinct !DILexicalBlock(scope: !16248, file: !2436, line: 1808, column: 9)
!16261 = !DILocation(line: 0, scope: !14744, inlinedAt: !16256)
!16262 = !DILocation(line: 48, column: 9, scope: !14748, inlinedAt: !16257)
!16263 = !DILocation(line: 1809, column: 3, scope: !16259)
!16264 = !DILocation(line: 1809, column: 3, scope: !16265)
!16265 = distinct !DILexicalBlock(scope: !16258, file: !2436, line: 1809, column: 3)
!16266 = !DILocation(line: 1810, column: 23, scope: !16260)
!16267 = !DILocation(line: 1810, column: 42, scope: !16260)
!16268 = !DILocation(line: 1810, column: 3, scope: !16260)
!16269 = !DILocation(line: 1811, column: 22, scope: !16260)
!16270 = !DILocation(line: 1811, column: 3, scope: !16260)
!16271 = !DILocation(line: 0, scope: !14695, inlinedAt: !16272)
!16272 = distinct !DILocation(line: 1814, column: 9, scope: !16260)
!16273 = !DILocation(line: 0, scope: !14704, inlinedAt: !16274)
!16274 = distinct !DILocation(line: 195, column: 2, scope: !14695, inlinedAt: !16272)
!16275 = !DILocation(line: 225, column: 2, scope: !14711, inlinedAt: !16274)
!16276 = !DILocation(line: 225, column: 2, scope: !14712, inlinedAt: !16274)
!16277 = !DILocation(line: 225, column: 2, scope: !14715, inlinedAt: !16274)
!16278 = !DILocation(line: 196, column: 9, scope: !14695, inlinedAt: !16272)
!16279 = !DILocation(line: 1817, column: 3, scope: !16260)
!16280 = !DILocation(line: 0, scope: !16240)
!16281 = !DILocation(line: 0, scope: !14053, inlinedAt: !16282)
!16282 = distinct !DILocation(line: 1822, column: 2, scope: !16221)
!16283 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !16282)
!16284 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16282)
!16285 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16282)
!16286 = !DILocation(line: 0, scope: !14067, inlinedAt: !16287)
!16287 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !16282)
!16288 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !16287)
!16289 = !DILocation(line: 1823, column: 2, scope: !16221)
!16290 = !DILocation(line: 1824, column: 1, scope: !16221)
!16291 = distinct !DISubprogram(name: "z_sched_wake", scope: !2436, file: !2436, line: 1882, type: !16292, scopeLine: 1883, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16294)
!16292 = !DISubroutineType(types: !16293)
!16293 = !{!347, !2359, !109, !107}
!16294 = !{!16295, !16296, !16297, !16298, !16299, !16300, !16302}
!16295 = !DILocalVariable(name: "wait_q", arg: 1, scope: !16291, file: !2436, line: 1882, type: !2359)
!16296 = !DILocalVariable(name: "swap_retval", arg: 2, scope: !16291, file: !2436, line: 1882, type: !109)
!16297 = !DILocalVariable(name: "swap_data", arg: 3, scope: !16291, file: !2436, line: 1882, type: !107)
!16298 = !DILocalVariable(name: "thread", scope: !16291, file: !2436, line: 1884, type: !2328)
!16299 = !DILocalVariable(name: "ret", scope: !16291, file: !2436, line: 1885, type: !347)
!16300 = !DILocalVariable(name: "__i", scope: !16301, file: !2436, line: 1887, type: !14011)
!16301 = distinct !DILexicalBlock(scope: !16291, file: !2436, line: 1887, column: 2)
!16302 = !DILocalVariable(name: "__key", scope: !16301, file: !2436, line: 1887, type: !14011)
!16303 = !DILocation(line: 0, scope: !16291)
!16304 = !DILocation(line: 0, scope: !16301)
!16305 = !DILocation(line: 0, scope: !14019, inlinedAt: !16306)
!16306 = distinct !DILocation(line: 1887, column: 2, scope: !16301)
!16307 = !DILocation(line: 55, column: 2, scope: !14028, inlinedAt: !16308)
!16308 = distinct !DILocation(line: 145, column: 10, scope: !14019, inlinedAt: !16306)
!16309 = !DILocation(line: 0, scope: !14028, inlinedAt: !16308)
!16310 = !DILocation(line: 148, column: 2, scope: !14036, inlinedAt: !16306)
!16311 = !DILocation(line: 148, column: 2, scope: !14037, inlinedAt: !16306)
!16312 = !DILocation(line: 148, column: 2, scope: !14040, inlinedAt: !16306)
!16313 = !DILocation(line: 160, column: 2, scope: !14019, inlinedAt: !16306)
!16314 = !DILocation(line: 1888, column: 12, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16316, file: !2436, line: 1887, column: 26)
!16316 = distinct !DILexicalBlock(scope: !16301, file: !2436, line: 1887, column: 2)
!16317 = !DILocation(line: 1890, column: 14, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16315, file: !2436, line: 1890, column: 7)
!16319 = !DILocation(line: 1890, column: 7, scope: !16315)
!16320 = !DILocalVariable(name: "thread", arg: 1, scope: !16321, file: !16322, line: 134, type: !2328)
!16321 = distinct !DISubprogram(name: "z_thread_return_value_set_with_data", scope: !16322, file: !16322, line: 134, type: !16323, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16325)
!16322 = !DIFile(filename: "zephyr/kernel/include/kernel_internal.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16323 = !DISubroutineType(types: !16324)
!16324 = !{null, !2328, !32, !107}
!16325 = !{!16320, !16326, !16327}
!16326 = !DILocalVariable(name: "value", arg: 2, scope: !16321, file: !16322, line: 135, type: !32)
!16327 = !DILocalVariable(name: "data", arg: 3, scope: !16321, file: !16322, line: 136, type: !107)
!16328 = !DILocation(line: 0, scope: !16321, inlinedAt: !16329)
!16329 = distinct !DILocation(line: 1891, column: 4, scope: !16330)
!16330 = distinct !DILexicalBlock(scope: !16318, file: !2436, line: 1890, column: 23)
!16331 = !DILocation(line: 0, scope: !16208, inlinedAt: !16332)
!16332 = distinct !DILocation(line: 138, column: 2, scope: !16321, inlinedAt: !16329)
!16333 = !DILocation(line: 67, column: 15, scope: !16208, inlinedAt: !16332)
!16334 = !DILocation(line: 67, column: 33, scope: !16208, inlinedAt: !16332)
!16335 = !DILocation(line: 139, column: 15, scope: !16321, inlinedAt: !16329)
!16336 = !DILocation(line: 139, column: 25, scope: !16321, inlinedAt: !16329)
!16337 = !DILocation(line: 1894, column: 4, scope: !16330)
!16338 = !DILocation(line: 1895, column: 10, scope: !16330)
!16339 = !DILocation(line: 1896, column: 4, scope: !16330)
!16340 = !DILocation(line: 1898, column: 3, scope: !16330)
!16341 = !DILocation(line: 0, scope: !14053, inlinedAt: !16342)
!16342 = distinct !DILocation(line: 1887, column: 2, scope: !16316)
!16343 = !DILocation(line: 194, column: 2, scope: !14061, inlinedAt: !16342)
!16344 = !DILocation(line: 194, column: 2, scope: !14062, inlinedAt: !16342)
!16345 = !DILocation(line: 194, column: 2, scope: !14065, inlinedAt: !16342)
!16346 = !DILocation(line: 0, scope: !14067, inlinedAt: !16347)
!16347 = distinct !DILocation(line: 215, column: 2, scope: !14053, inlinedAt: !16342)
!16348 = !DILocation(line: 95, column: 2, scope: !14067, inlinedAt: !16347)
!16349 = !DILocation(line: 1901, column: 2, scope: !16291)
!16350 = distinct !DISubprogram(name: "z_sched_wait", scope: !2436, file: !2436, line: 1904, type: !16351, scopeLine: 1906, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2325, retainedNodes: !16354)
!16351 = !DISubroutineType(types: !16352)
!16352 = !{!109, !14022, !14011, !2359, !14905, !16353}
!16353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!16354 = !{!16355, !16356, !16357, !16358, !16359, !16360}
!16355 = !DILocalVariable(name: "lock", arg: 1, scope: !16350, file: !2436, line: 1904, type: !14022)
!16356 = !DILocalVariable(name: "key", arg: 2, scope: !16350, file: !2436, line: 1904, type: !14011)
!16357 = !DILocalVariable(name: "wait_q", arg: 3, scope: !16350, file: !2436, line: 1905, type: !2359)
!16358 = !DILocalVariable(name: "timeout", arg: 4, scope: !16350, file: !2436, line: 1905, type: !14905)
!16359 = !DILocalVariable(name: "data", arg: 5, scope: !16350, file: !2436, line: 1905, type: !16353)
!16360 = !DILocalVariable(name: "ret", scope: !16350, file: !2436, line: 1907, type: !109)
!16361 = !DILocation(line: 0, scope: !16350)
!16362 = !DILocation(line: 1907, column: 12, scope: !16350)
!16363 = !DILocation(line: 1909, column: 11, scope: !16364)
!16364 = distinct !DILexicalBlock(scope: !16350, file: !2436, line: 1909, column: 6)
!16365 = !DILocation(line: 1909, column: 6, scope: !16350)
!16366 = !DILocation(line: 1910, column: 11, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16364, file: !2436, line: 1909, column: 20)
!16368 = !DILocation(line: 1910, column: 26, scope: !16367)
!16369 = !DILocation(line: 1910, column: 9, scope: !16367)
!16370 = !DILocation(line: 1911, column: 2, scope: !16367)
!16371 = !DILocation(line: 1912, column: 2, scope: !16350)
!16372 = distinct !DISubprogram(name: "z_impl_k_condvar_init", scope: !2462, file: !2462, line: 16, type: !16373, scopeLine: 17, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16384)
!16373 = !DISubroutineType(types: !16374)
!16374 = !{!109, !16375}
!16375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16376, size: 32)
!16376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_condvar", file: !118, line: 2828, size: 64, elements: !16377)
!16377 = !{!16378}
!16378 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16376, file: !118, line: 2829, baseType: !16379, size: 64)
!16379 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !122, line: 233, baseType: !16380)
!16380 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 231, size: 64, elements: !16381)
!16381 = !{!16382}
!16382 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !16380, file: !122, line: 232, baseType: !16383, size: 64)
!16383 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !127, line: 48, baseType: !2448)
!16384 = !{!16385}
!16385 = !DILocalVariable(name: "condvar", arg: 1, scope: !16372, file: !2462, line: 16, type: !16375)
!16386 = !DILocation(line: 0, scope: !16372)
!16387 = !DILocation(line: 18, column: 25, scope: !16372)
!16388 = !DILocation(line: 18, column: 2, scope: !16372)
!16389 = !DILocation(line: 23, column: 2, scope: !16372)
!16390 = distinct !DISubprogram(name: "z_waitq_init", scope: !13172, file: !13172, line: 47, type: !16391, scopeLine: 48, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16394)
!16391 = !DISubroutineType(types: !16392)
!16392 = !{null, !16393}
!16393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16379, size: 32)
!16394 = !{!16395}
!16395 = !DILocalVariable(name: "w", arg: 1, scope: !16390, file: !13172, line: 47, type: !16393)
!16396 = !DILocation(line: 0, scope: !16390)
!16397 = !DILocation(line: 49, column: 21, scope: !16390)
!16398 = !DILocation(line: 49, column: 2, scope: !16390)
!16399 = !DILocation(line: 50, column: 1, scope: !16390)
!16400 = distinct !DISubprogram(name: "sys_dlist_init", scope: !127, file: !127, line: 197, type: !16401, scopeLine: 198, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16404)
!16401 = !DISubroutineType(types: !16402)
!16402 = !{null, !16403}
!16403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16383, size: 32)
!16404 = !{!16405}
!16405 = !DILocalVariable(name: "list", arg: 1, scope: !16400, file: !127, line: 197, type: !16403)
!16406 = !DILocation(line: 0, scope: !16400)
!16407 = !DILocation(line: 199, column: 8, scope: !16400)
!16408 = !DILocation(line: 199, column: 13, scope: !16400)
!16409 = !DILocation(line: 200, column: 8, scope: !16400)
!16410 = !DILocation(line: 200, column: 13, scope: !16400)
!16411 = !DILocation(line: 201, column: 1, scope: !16400)
!16412 = distinct !DISubprogram(name: "z_impl_k_condvar_signal", scope: !2462, file: !2462, line: 35, type: !16373, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16413)
!16413 = !{!16414, !16415, !16420}
!16414 = !DILocalVariable(name: "condvar", arg: 1, scope: !16412, file: !2462, line: 35, type: !16375)
!16415 = !DILocalVariable(name: "key", scope: !16412, file: !2462, line: 37, type: !16416)
!16416 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !16417)
!16417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !16418)
!16418 = !{!16419}
!16419 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16417, file: !251, line: 33, baseType: !109, size: 32)
!16420 = !DILocalVariable(name: "thread", scope: !16412, file: !2462, line: 41, type: !16421)
!16421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16422, size: 32)
!16422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !156, line: 245, size: 1280, elements: !16423)
!16423 = !{!16424, !16462, !16474, !16475, !16476, !16477, !16478, !16484, !16496}
!16424 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !16422, file: !156, line: 247, baseType: !16425, size: 384)
!16425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !156, line: 57, size: 384, elements: !16426)
!16426 = !{!16427, !16437, !16438, !16439, !16440, !16449, !16450, !16451}
!16427 = !DIDerivedType(tag: DW_TAG_member, scope: !16425, file: !156, line: 60, baseType: !16428, size: 64)
!16428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16425, file: !156, line: 60, size: 64, elements: !16429)
!16429 = !{!16430, !16431}
!16430 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !16428, file: !156, line: 61, baseType: !2447, size: 64)
!16431 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !16428, file: !156, line: 62, baseType: !16432, size: 64)
!16432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !168, line: 49, size: 64, elements: !16433)
!16433 = !{!16434}
!16434 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !16432, file: !168, line: 50, baseType: !16435, size: 64)
!16435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16436, size: 64, elements: !173)
!16436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16432, size: 32)
!16437 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !16425, file: !156, line: 68, baseType: !16393, size: 32, offset: 64)
!16438 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !16425, file: !156, line: 71, baseType: !178, size: 8, offset: 96)
!16439 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !16425, file: !156, line: 74, baseType: !178, size: 8, offset: 104)
!16440 = !DIDerivedType(tag: DW_TAG_member, scope: !16425, file: !156, line: 90, baseType: !16441, size: 16, offset: 112)
!16441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !16425, file: !156, line: 90, size: 16, elements: !16442)
!16442 = !{!16443, !16448}
!16443 = !DIDerivedType(tag: DW_TAG_member, scope: !16441, file: !156, line: 91, baseType: !16444, size: 16)
!16444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !16441, file: !156, line: 91, size: 16, elements: !16445)
!16445 = !{!16446, !16447}
!16446 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !16444, file: !156, line: 96, baseType: !188, size: 8)
!16447 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !16444, file: !156, line: 97, baseType: !178, size: 8, offset: 8)
!16448 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !16441, file: !156, line: 100, baseType: !192, size: 16)
!16449 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !16425, file: !156, line: 107, baseType: !110, size: 32, offset: 128)
!16450 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !16425, file: !156, line: 127, baseType: !107, size: 32, offset: 160)
!16451 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !16425, file: !156, line: 131, baseType: !16452, size: 192, offset: 192)
!16452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !122, line: 244, size: 192, elements: !16453)
!16453 = !{!16454, !16455, !16461}
!16454 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !16452, file: !122, line: 245, baseType: !2447, size: 64)
!16455 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !16452, file: !122, line: 246, baseType: !16456, size: 32, offset: 64)
!16456 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !122, line: 242, baseType: !16457)
!16457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16458, size: 32)
!16458 = !DISubroutineType(types: !16459)
!16459 = !{null, !16460}
!16460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16452, size: 32)
!16461 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !16452, file: !122, line: 249, baseType: !105, size: 64, offset: 128)
!16462 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !16422, file: !156, line: 250, baseType: !16463, size: 288, offset: 384)
!16463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !209, line: 25, size: 288, elements: !16464)
!16464 = !{!16465, !16466, !16467, !16468, !16469, !16470, !16471, !16472, !16473}
!16465 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !16463, file: !209, line: 26, baseType: !110, size: 32)
!16466 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !16463, file: !209, line: 27, baseType: !110, size: 32, offset: 32)
!16467 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !16463, file: !209, line: 28, baseType: !110, size: 32, offset: 64)
!16468 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !16463, file: !209, line: 29, baseType: !110, size: 32, offset: 96)
!16469 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !16463, file: !209, line: 30, baseType: !110, size: 32, offset: 128)
!16470 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !16463, file: !209, line: 31, baseType: !110, size: 32, offset: 160)
!16471 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !16463, file: !209, line: 32, baseType: !110, size: 32, offset: 192)
!16472 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !16463, file: !209, line: 33, baseType: !110, size: 32, offset: 224)
!16473 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !16463, file: !209, line: 34, baseType: !110, size: 32, offset: 256)
!16474 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !16422, file: !156, line: 253, baseType: !107, size: 32, offset: 672)
!16475 = !DIDerivedType(tag: DW_TAG_member, name: "join_queue", scope: !16422, file: !156, line: 256, baseType: !16379, size: 64, offset: 704)
!16476 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !16422, file: !156, line: 279, baseType: !223, size: 256, offset: 768)
!16477 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !16422, file: !156, line: 294, baseType: !109, size: 32, offset: 1024)
!16478 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !16422, file: !156, line: 300, baseType: !16479, size: 96, offset: 1056)
!16479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !156, line: 149, size: 96, elements: !16480)
!16480 = !{!16481, !16482, !16483}
!16481 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !16479, file: !156, line: 153, baseType: !22, size: 32)
!16482 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16479, file: !156, line: 162, baseType: !232, size: 32, offset: 32)
!16483 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !16479, file: !156, line: 168, baseType: !232, size: 32, offset: 64)
!16484 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !16422, file: !156, line: 325, baseType: !16485, size: 32, offset: 1152)
!16485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16486, size: 32)
!16486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !118, line: 5073, size: 192, elements: !16487)
!16487 = !{!16488, !16494, !16495}
!16488 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16486, file: !118, line: 5074, baseType: !16489, size: 96)
!16489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !241, line: 56, size: 96, elements: !16490)
!16490 = !{!16491, !16492, !16493}
!16491 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !16489, file: !241, line: 57, baseType: !244, size: 32)
!16492 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !16489, file: !241, line: 58, baseType: !107, size: 32, offset: 32)
!16493 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !16489, file: !241, line: 59, baseType: !232, size: 32, offset: 64)
!16494 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16486, file: !118, line: 5075, baseType: !16379, size: 64, offset: 96)
!16495 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !16486, file: !118, line: 5076, baseType: !2463, size: 32, offset: 160)
!16496 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !16422, file: !156, line: 343, baseType: !16497, size: 64, offset: 1184)
!16497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !209, line: 60, size: 64, elements: !16498)
!16498 = !{!16499, !16500}
!16499 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !16497, file: !209, line: 63, baseType: !110, size: 32)
!16500 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !16497, file: !209, line: 66, baseType: !110, size: 32, offset: 32)
!16501 = !DILocation(line: 0, scope: !16412)
!16502 = !DILocalVariable(name: "l", arg: 1, scope: !16503, file: !251, line: 136, type: !16506)
!16503 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !16504, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16507)
!16504 = !DISubroutineType(types: !16505)
!16505 = !{!16416, !16506}
!16506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2463, size: 32)
!16507 = !{!16502, !16508}
!16508 = !DILocalVariable(name: "k", scope: !16503, file: !251, line: 139, type: !16416)
!16509 = !DILocation(line: 0, scope: !16503, inlinedAt: !16510)
!16510 = distinct !DILocation(line: 37, column: 25, scope: !16412)
!16511 = !DILocation(line: 55, column: 2, scope: !16512, inlinedAt: !16516)
!16512 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16513)
!16513 = !{!16514, !16515}
!16514 = !DILocalVariable(name: "key", scope: !16512, file: !6101, line: 44, type: !32)
!16515 = !DILocalVariable(name: "tmp", scope: !16512, file: !6101, line: 53, type: !32)
!16516 = distinct !DILocation(line: 145, column: 10, scope: !16503, inlinedAt: !16510)
!16517 = !{i64 2242968}
!16518 = !DILocation(line: 0, scope: !16512, inlinedAt: !16516)
!16519 = !DILocation(line: 148, column: 2, scope: !16520, inlinedAt: !16510)
!16520 = distinct !DILexicalBlock(scope: !16521, file: !251, line: 148, column: 2)
!16521 = distinct !DILexicalBlock(scope: !16503, file: !251, line: 148, column: 2)
!16522 = !DILocation(line: 148, column: 2, scope: !16521, inlinedAt: !16510)
!16523 = !DILocation(line: 148, column: 2, scope: !16524, inlinedAt: !16510)
!16524 = distinct !DILexicalBlock(scope: !16520, file: !251, line: 148, column: 2)
!16525 = !DILocation(line: 160, column: 2, scope: !16503, inlinedAt: !16510)
!16526 = !DILocation(line: 41, column: 60, scope: !16412)
!16527 = !DILocation(line: 41, column: 28, scope: !16412)
!16528 = !DILocation(line: 43, column: 13, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16412, file: !2462, line: 43, column: 6)
!16530 = !DILocation(line: 43, column: 6, scope: !16412)
!16531 = !DILocalVariable(name: "thread", arg: 1, scope: !16532, file: !12831, line: 65, type: !16421)
!16532 = distinct !DISubprogram(name: "arch_thread_return_value_set", scope: !12831, file: !12831, line: 65, type: !16533, scopeLine: 66, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16535)
!16533 = !DISubroutineType(types: !16534)
!16534 = !{null, !16421, !32}
!16535 = !{!16531, !16536}
!16536 = !DILocalVariable(name: "value", arg: 2, scope: !16532, file: !12831, line: 65, type: !32)
!16537 = !DILocation(line: 0, scope: !16532, inlinedAt: !16538)
!16538 = distinct !DILocation(line: 46, column: 3, scope: !16539)
!16539 = distinct !DILexicalBlock(scope: !16529, file: !2462, line: 43, column: 22)
!16540 = !DILocation(line: 67, column: 15, scope: !16532, inlinedAt: !16538)
!16541 = !DILocation(line: 67, column: 33, scope: !16532, inlinedAt: !16538)
!16542 = !DILocation(line: 47, column: 3, scope: !16539)
!16543 = !DILocation(line: 48, column: 3, scope: !16539)
!16544 = !DILocation(line: 49, column: 2, scope: !16539)
!16545 = !DILocalVariable(name: "key", arg: 2, scope: !16546, file: !251, line: 190, type: !16416)
!16546 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !16547, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16549)
!16547 = !DISubroutineType(types: !16548)
!16548 = !{null, !16506, !16416}
!16549 = !{!16550, !16545}
!16550 = !DILocalVariable(name: "l", arg: 1, scope: !16546, file: !251, line: 189, type: !16506)
!16551 = !DILocation(line: 0, scope: !16546, inlinedAt: !16552)
!16552 = distinct !DILocation(line: 50, column: 3, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16529, file: !2462, line: 49, column: 9)
!16554 = !DILocation(line: 194, column: 2, scope: !16555, inlinedAt: !16552)
!16555 = distinct !DILexicalBlock(scope: !16556, file: !251, line: 194, column: 2)
!16556 = distinct !DILexicalBlock(scope: !16546, file: !251, line: 194, column: 2)
!16557 = !DILocation(line: 194, column: 2, scope: !16556, inlinedAt: !16552)
!16558 = !DILocation(line: 194, column: 2, scope: !16559, inlinedAt: !16552)
!16559 = distinct !DILexicalBlock(scope: !16555, file: !251, line: 194, column: 2)
!16560 = !DILocalVariable(name: "key", arg: 1, scope: !16561, file: !6101, line: 84, type: !32)
!16561 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16562)
!16562 = !{!16560}
!16563 = !DILocation(line: 0, scope: !16561, inlinedAt: !16564)
!16564 = distinct !DILocation(line: 215, column: 2, scope: !16546, inlinedAt: !16552)
!16565 = !DILocation(line: 95, column: 2, scope: !16561, inlinedAt: !16564)
!16566 = !{i64 2243785}
!16567 = !DILocation(line: 55, column: 2, scope: !16412)
!16568 = distinct !DISubprogram(name: "z_impl_k_condvar_broadcast", scope: !2462, file: !2462, line: 67, type: !16373, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16569)
!16569 = !{!16570, !16571, !16572, !16573}
!16570 = !DILocalVariable(name: "condvar", arg: 1, scope: !16568, file: !2462, line: 67, type: !16375)
!16571 = !DILocalVariable(name: "pending_thread", scope: !16568, file: !2462, line: 69, type: !16421)
!16572 = !DILocalVariable(name: "key", scope: !16568, file: !2462, line: 70, type: !16416)
!16573 = !DILocalVariable(name: "woken", scope: !16568, file: !2462, line: 71, type: !109)
!16574 = !DILocation(line: 0, scope: !16568)
!16575 = !DILocation(line: 0, scope: !16503, inlinedAt: !16576)
!16576 = distinct !DILocation(line: 73, column: 8, scope: !16568)
!16577 = !DILocation(line: 55, column: 2, scope: !16512, inlinedAt: !16578)
!16578 = distinct !DILocation(line: 145, column: 10, scope: !16503, inlinedAt: !16576)
!16579 = !DILocation(line: 0, scope: !16512, inlinedAt: !16578)
!16580 = !DILocation(line: 148, column: 2, scope: !16520, inlinedAt: !16576)
!16581 = !DILocation(line: 148, column: 2, scope: !16521, inlinedAt: !16576)
!16582 = !DILocation(line: 148, column: 2, scope: !16524, inlinedAt: !16576)
!16583 = !DILocation(line: 160, column: 2, scope: !16503, inlinedAt: !16576)
!16584 = !DILocation(line: 78, column: 27, scope: !16568)
!16585 = !DILocation(line: 78, column: 68, scope: !16568)
!16586 = !DILocation(line: 78, column: 2, scope: !16568)
!16587 = !DILocation(line: 80, column: 8, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16568, file: !2462, line: 79, column: 15)
!16589 = !DILocation(line: 0, scope: !16532, inlinedAt: !16590)
!16590 = distinct !DILocation(line: 81, column: 3, scope: !16588)
!16591 = !DILocation(line: 67, column: 15, scope: !16532, inlinedAt: !16590)
!16592 = !DILocation(line: 67, column: 33, scope: !16532, inlinedAt: !16590)
!16593 = !DILocation(line: 82, column: 3, scope: !16588)
!16594 = distinct !{!16594, !16586, !16595}
!16595 = !DILocation(line: 83, column: 2, scope: !16568)
!16596 = !DILocation(line: 87, column: 2, scope: !16568)
!16597 = !DILocation(line: 89, column: 2, scope: !16568)
!16598 = distinct !DISubprogram(name: "z_impl_k_condvar_wait", scope: !2462, file: !2462, line: 100, type: !16599, scopeLine: 102, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16612)
!16599 = !DISubroutineType(types: !16600)
!16600 = !{!109, !16375, !16601, !16608}
!16601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16602, size: 32)
!16602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !118, line: 2720, size: 160, elements: !16603)
!16603 = !{!16604, !16605, !16606, !16607}
!16604 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !16602, file: !118, line: 2722, baseType: !16379, size: 64)
!16605 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !16602, file: !118, line: 2724, baseType: !16421, size: 32, offset: 64)
!16606 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !16602, file: !118, line: 2727, baseType: !110, size: 32, offset: 96)
!16607 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !16602, file: !118, line: 2730, baseType: !109, size: 32, offset: 128)
!16608 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16609)
!16609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16610)
!16610 = !{!16611}
!16611 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16609, file: !104, line: 66, baseType: !103, size: 64)
!16612 = !{!16613, !16614, !16615, !16616, !16617}
!16613 = !DILocalVariable(name: "condvar", arg: 1, scope: !16598, file: !2462, line: 100, type: !16375)
!16614 = !DILocalVariable(name: "mutex", arg: 2, scope: !16598, file: !2462, line: 100, type: !16601)
!16615 = !DILocalVariable(name: "timeout", arg: 3, scope: !16598, file: !2462, line: 101, type: !16608)
!16616 = !DILocalVariable(name: "key", scope: !16598, file: !2462, line: 103, type: !16416)
!16617 = !DILocalVariable(name: "ret", scope: !16598, file: !2462, line: 104, type: !109)
!16618 = !DILocation(line: 0, scope: !16598)
!16619 = !DILocation(line: 0, scope: !16503, inlinedAt: !16620)
!16620 = distinct !DILocation(line: 108, column: 8, scope: !16598)
!16621 = !DILocation(line: 55, column: 2, scope: !16512, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 145, column: 10, scope: !16503, inlinedAt: !16620)
!16623 = !DILocation(line: 0, scope: !16512, inlinedAt: !16622)
!16624 = !DILocation(line: 148, column: 2, scope: !16520, inlinedAt: !16620)
!16625 = !DILocation(line: 148, column: 2, scope: !16521, inlinedAt: !16620)
!16626 = !DILocation(line: 148, column: 2, scope: !16524, inlinedAt: !16620)
!16627 = !DILocation(line: 160, column: 2, scope: !16503, inlinedAt: !16620)
!16628 = !DILocation(line: 109, column: 2, scope: !16598)
!16629 = !DILocation(line: 111, column: 42, scope: !16598)
!16630 = !DILocation(line: 111, column: 8, scope: !16598)
!16631 = !DILocation(line: 112, column: 2, scope: !16598)
!16632 = !DILocation(line: 116, column: 2, scope: !16598)
!16633 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !3231, file: !3231, line: 944, type: !16634, scopeLine: 945, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16636)
!16634 = !DISubroutineType(types: !16635)
!16635 = !{!109, !16601}
!16636 = !{!16637}
!16637 = !DILocalVariable(name: "mutex", arg: 1, scope: !16633, file: !3231, line: 944, type: !16601)
!16638 = !DILocation(line: 0, scope: !16633)
!16639 = !DILocation(line: 952, column: 2, scope: !16640)
!16640 = distinct !DILexicalBlock(scope: !16633, file: !3231, line: 952, column: 2)
!16641 = !{i64 2154751368}
!16642 = !DILocation(line: 953, column: 9, scope: !16633)
!16643 = !DILocation(line: 953, column: 2, scope: !16633)
!16644 = distinct !DISubprogram(name: "k_mutex_lock", scope: !3231, file: !3231, line: 927, type: !16645, scopeLine: 928, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2443, retainedNodes: !16647)
!16645 = !DISubroutineType(types: !16646)
!16646 = !{!109, !16601, !16608}
!16647 = !{!16648, !16649}
!16648 = !DILocalVariable(name: "mutex", arg: 1, scope: !16644, file: !3231, line: 927, type: !16601)
!16649 = !DILocalVariable(name: "timeout", arg: 2, scope: !16644, file: !3231, line: 927, type: !16608)
!16650 = !DILocation(line: 0, scope: !16644)
!16651 = !DILocation(line: 936, column: 2, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16644, file: !3231, line: 936, column: 2)
!16653 = !{i64 2154751300}
!16654 = !DILocation(line: 937, column: 9, scope: !16644)
!16655 = !DILocation(line: 937, column: 2, scope: !16644)
!16656 = distinct !DISubprogram(name: "z_data_copy", scope: !16657, file: !16657, line: 22, type: !3089, scopeLine: 23, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3072, retainedNodes: !2026)
!16657 = !DIFile(filename: "zephyr/kernel/xip.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!16658 = !DILocation(line: 24, column: 2, scope: !16656)
!16659 = !DILocation(line: 27, column: 2, scope: !16656)
!16660 = !DILocation(line: 71, column: 1, scope: !16656)
!16661 = distinct !DISubprogram(name: "z_add_timeout", scope: !2498, file: !2498, line: 88, type: !16662, scopeLine: 90, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16668)
!16662 = !DISubroutineType(types: !16663)
!16663 = !{null, !2471, !2490, !16664}
!16664 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !104, line: 67, baseType: !16665)
!16665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !104, line: 65, size: 64, elements: !16666)
!16666 = !{!16667}
!16667 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !16665, file: !104, line: 66, baseType: !103, size: 64)
!16668 = !{!16669, !16670, !16671, !16672, !16678, !16679, !16682, !16685}
!16669 = !DILocalVariable(name: "to", arg: 1, scope: !16661, file: !2498, line: 88, type: !2471)
!16670 = !DILocalVariable(name: "fn", arg: 2, scope: !16661, file: !2498, line: 88, type: !2490)
!16671 = !DILocalVariable(name: "timeout", arg: 3, scope: !16661, file: !2498, line: 89, type: !16664)
!16672 = !DILocalVariable(name: "__i", scope: !16673, file: !2498, line: 102, type: !16674)
!16673 = distinct !DILexicalBlock(scope: !16661, file: !2498, line: 102, column: 2)
!16674 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_spinlock_key_t", file: !251, line: 106, baseType: !16675)
!16675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_spinlock_key", file: !251, line: 32, size: 32, elements: !16676)
!16676 = !{!16677}
!16677 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !16675, file: !251, line: 33, baseType: !109, size: 32)
!16678 = !DILocalVariable(name: "__key", scope: !16673, file: !2498, line: 102, type: !16674)
!16679 = !DILocalVariable(name: "t", scope: !16680, file: !2498, line: 103, type: !2471)
!16680 = distinct !DILexicalBlock(scope: !16681, file: !2498, line: 102, column: 24)
!16681 = distinct !DILexicalBlock(scope: !16673, file: !2498, line: 102, column: 2)
!16682 = !DILocalVariable(name: "ticks", scope: !16683, file: !2498, line: 107, type: !103)
!16683 = distinct !DILexicalBlock(scope: !16684, file: !2498, line: 106, column: 39)
!16684 = distinct !DILexicalBlock(scope: !16680, file: !2498, line: 105, column: 7)
!16685 = !DILocalVariable(name: "next_time", scope: !16686, file: !2498, line: 137, type: !765)
!16686 = distinct !DILexicalBlock(scope: !16687, file: !2498, line: 127, column: 22)
!16687 = distinct !DILexicalBlock(scope: !16680, file: !2498, line: 127, column: 7)
!16688 = !DILocation(line: 0, scope: !16661)
!16689 = !DILocation(line: 91, column: 6, scope: !16690)
!16690 = distinct !DILexicalBlock(scope: !16661, file: !2498, line: 91, column: 6)
!16691 = !DILocation(line: 91, column: 6, scope: !16661)
!16692 = !DILocation(line: 99, column: 2, scope: !16693)
!16693 = distinct !DILexicalBlock(scope: !16694, file: !2498, line: 99, column: 2)
!16694 = distinct !DILexicalBlock(scope: !16661, file: !2498, line: 99, column: 2)
!16695 = !DILocation(line: 99, column: 2, scope: !16694)
!16696 = !DILocation(line: 99, column: 2, scope: !16697)
!16697 = distinct !DILexicalBlock(scope: !16693, file: !2498, line: 99, column: 2)
!16698 = !DILocation(line: 100, column: 6, scope: !16661)
!16699 = !DILocation(line: 100, column: 9, scope: !16661)
!16700 = !DILocation(line: 0, scope: !16673)
!16701 = !DILocalVariable(name: "l", arg: 1, scope: !16702, file: !251, line: 136, type: !16705)
!16702 = distinct !DISubprogram(name: "k_spin_lock", scope: !251, file: !251, line: 136, type: !16703, scopeLine: 137, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16706)
!16703 = !DISubroutineType(types: !16704)
!16704 = !{!16674, !16705}
!16705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 32)
!16706 = !{!16701, !16707}
!16707 = !DILocalVariable(name: "k", scope: !16702, file: !251, line: 139, type: !16674)
!16708 = !DILocation(line: 0, scope: !16702, inlinedAt: !16709)
!16709 = distinct !DILocation(line: 102, column: 2, scope: !16673)
!16710 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !16715)
!16711 = distinct !DISubprogram(name: "arch_irq_lock", scope: !6101, file: !6101, line: 42, type: !6102, scopeLine: 43, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16712)
!16712 = !{!16713, !16714}
!16713 = !DILocalVariable(name: "key", scope: !16711, file: !6101, line: 44, type: !32)
!16714 = !DILocalVariable(name: "tmp", scope: !16711, file: !6101, line: 53, type: !32)
!16715 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !16709)
!16716 = !{i64 2248574}
!16717 = !DILocation(line: 0, scope: !16711, inlinedAt: !16715)
!16718 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !16709)
!16719 = distinct !DILexicalBlock(scope: !16720, file: !251, line: 148, column: 2)
!16720 = distinct !DILexicalBlock(scope: !16702, file: !251, line: 148, column: 2)
!16721 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !16709)
!16722 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !16709)
!16723 = distinct !DILexicalBlock(scope: !16719, file: !251, line: 148, column: 2)
!16724 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !16709)
!16725 = !DILocation(line: 106, column: 33, scope: !16684)
!16726 = !DILocation(line: 105, column: 7, scope: !16680)
!16727 = !DILocation(line: 107, column: 50, scope: !16683)
!16728 = !DILocation(line: 107, column: 48, scope: !16683)
!16729 = !DILocation(line: 0, scope: !16683)
!16730 = !DILocation(line: 109, column: 17, scope: !16683)
!16731 = !DILocation(line: 110, column: 3, scope: !16683)
!16732 = !DILocation(line: 111, column: 31, scope: !16733)
!16733 = distinct !DILexicalBlock(scope: !16684, file: !2498, line: 110, column: 10)
!16734 = !DILocation(line: 111, column: 37, scope: !16733)
!16735 = !DILocation(line: 111, column: 35, scope: !16733)
!16736 = !DILocation(line: 0, scope: !16684)
!16737 = !DILocation(line: 109, column: 8, scope: !16683)
!16738 = !DILocation(line: 109, column: 15, scope: !16683)
!16739 = !DILocation(line: 114, column: 12, scope: !16740)
!16740 = distinct !DILexicalBlock(scope: !16680, file: !2498, line: 114, column: 3)
!16741 = !DILocation(line: 0, scope: !16680)
!16742 = !DILocation(line: 114, column: 3, scope: !16740)
!16743 = !DILocation(line: 115, column: 24, scope: !16744)
!16744 = distinct !DILexicalBlock(scope: !16745, file: !2498, line: 115, column: 8)
!16745 = distinct !DILexicalBlock(scope: !16746, file: !2498, line: 114, column: 45)
!16746 = distinct !DILexicalBlock(scope: !16740, file: !2498, line: 114, column: 3)
!16747 = !DILocation(line: 115, column: 11, scope: !16744)
!16748 = !DILocation(line: 115, column: 18, scope: !16744)
!16749 = !DILocation(line: 115, column: 8, scope: !16745)
!16750 = !DILocation(line: 116, column: 15, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16744, file: !2498, line: 115, column: 32)
!16752 = !DILocation(line: 117, column: 26, scope: !16751)
!16753 = !DILocation(line: 117, column: 5, scope: !16751)
!16754 = !DILocation(line: 123, column: 7, scope: !16680)
!16755 = !DILocation(line: 120, column: 15, scope: !16745)
!16756 = !DILocation(line: 114, column: 36, scope: !16746)
!16757 = distinct !{!16757, !16742, !16758}
!16758 = !DILocation(line: 121, column: 3, scope: !16740)
!16759 = !DILocation(line: 124, column: 4, scope: !16760)
!16760 = distinct !DILexicalBlock(scope: !16761, file: !2498, line: 123, column: 18)
!16761 = distinct !DILexicalBlock(scope: !16680, file: !2498, line: 123, column: 7)
!16762 = !DILocation(line: 125, column: 3, scope: !16760)
!16763 = !DILocation(line: 127, column: 13, scope: !16687)
!16764 = !DILocation(line: 127, column: 10, scope: !16687)
!16765 = !DILocation(line: 127, column: 7, scope: !16680)
!16766 = !DILocation(line: 137, column: 24, scope: !16686)
!16767 = !DILocation(line: 0, scope: !16686)
!16768 = !DILocation(line: 139, column: 18, scope: !16769)
!16769 = distinct !DILexicalBlock(scope: !16686, file: !2498, line: 139, column: 8)
!16770 = !DILocation(line: 139, column: 23, scope: !16769)
!16771 = !DILocation(line: 141, column: 5, scope: !16772)
!16772 = distinct !DILexicalBlock(scope: !16769, file: !2498, line: 140, column: 48)
!16773 = !DILocation(line: 142, column: 4, scope: !16772)
!16774 = !DILocalVariable(name: "key", arg: 2, scope: !16775, file: !251, line: 190, type: !16674)
!16775 = distinct !DISubprogram(name: "k_spin_unlock", scope: !251, file: !251, line: 189, type: !16776, scopeLine: 191, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16778)
!16776 = !DISubroutineType(types: !16777)
!16777 = !{null, !16705, !16674}
!16778 = !{!16779, !16774}
!16779 = !DILocalVariable(name: "l", arg: 1, scope: !16775, file: !251, line: 189, type: !16705)
!16780 = !DILocation(line: 0, scope: !16775, inlinedAt: !16781)
!16781 = distinct !DILocation(line: 102, column: 2, scope: !16681)
!16782 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !16781)
!16783 = distinct !DILexicalBlock(scope: !16784, file: !251, line: 194, column: 2)
!16784 = distinct !DILexicalBlock(scope: !16775, file: !251, line: 194, column: 2)
!16785 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !16781)
!16786 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !16781)
!16787 = distinct !DILexicalBlock(scope: !16783, file: !251, line: 194, column: 2)
!16788 = !DILocalVariable(name: "key", arg: 1, scope: !16789, file: !6101, line: 84, type: !32)
!16789 = distinct !DISubprogram(name: "arch_irq_unlock", scope: !6101, file: !6101, line: 84, type: !6112, scopeLine: 85, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16790)
!16790 = !{!16788}
!16791 = !DILocation(line: 0, scope: !16789, inlinedAt: !16792)
!16792 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !16781)
!16793 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !16792)
!16794 = !{i64 2249391}
!16795 = !DILocation(line: 148, column: 1, scope: !16661)
!16796 = distinct !DISubprogram(name: "sys_dnode_is_linked", scope: !127, file: !127, line: 225, type: !16797, scopeLine: 226, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16801)
!16797 = !DISubroutineType(types: !16798)
!16798 = !{!347, !16799}
!16799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16800, size: 32)
!16800 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2475)
!16801 = !{!16802}
!16802 = !DILocalVariable(name: "node", arg: 1, scope: !16796, file: !127, line: 225, type: !16799)
!16803 = !DILocation(line: 0, scope: !16796)
!16804 = !DILocation(line: 227, column: 15, scope: !16796)
!16805 = !DILocation(line: 227, column: 20, scope: !16796)
!16806 = !DILocation(line: 227, column: 2, scope: !16796)
!16807 = distinct !DISubprogram(name: "elapsed", scope: !2498, file: !2498, line: 62, type: !16808, scopeLine: 63, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2026)
!16808 = !DISubroutineType(types: !16809)
!16809 = !{!765}
!16810 = !DILocation(line: 64, column: 9, scope: !16807)
!16811 = !DILocation(line: 64, column: 28, scope: !16807)
!16812 = !DILocation(line: 64, column: 35, scope: !16807)
!16813 = !DILocation(line: 64, column: 2, scope: !16807)
!16814 = distinct !DISubprogram(name: "first", scope: !2498, file: !2498, line: 39, type: !16815, scopeLine: 40, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16817)
!16815 = !DISubroutineType(types: !16816)
!16816 = !{!2471}
!16817 = !{!16818}
!16818 = !DILocalVariable(name: "t", scope: !16814, file: !2498, line: 41, type: !16819)
!16819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2475, size: 32)
!16820 = !DILocation(line: 41, column: 19, scope: !16814)
!16821 = !DILocation(line: 0, scope: !16814)
!16822 = !DILocation(line: 43, column: 9, scope: !16814)
!16823 = !DILocation(line: 43, column: 2, scope: !16814)
!16824 = distinct !DISubprogram(name: "sys_dlist_insert", scope: !127, file: !127, line: 443, type: !16825, scopeLine: 444, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16827)
!16825 = !DISubroutineType(types: !16826)
!16826 = !{null, !16819, !16819}
!16827 = !{!16828, !16829, !16830}
!16828 = !DILocalVariable(name: "successor", arg: 1, scope: !16824, file: !127, line: 443, type: !16819)
!16829 = !DILocalVariable(name: "node", arg: 2, scope: !16824, file: !127, line: 443, type: !16819)
!16830 = !DILocalVariable(name: "prev", scope: !16824, file: !127, line: 445, type: !16831)
!16831 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16819)
!16832 = !DILocation(line: 0, scope: !16824)
!16833 = !DILocation(line: 445, column: 39, scope: !16824)
!16834 = !DILocation(line: 447, column: 8, scope: !16824)
!16835 = !DILocation(line: 447, column: 13, scope: !16824)
!16836 = !DILocation(line: 448, column: 8, scope: !16824)
!16837 = !DILocation(line: 448, column: 13, scope: !16824)
!16838 = !DILocation(line: 449, column: 8, scope: !16824)
!16839 = !DILocation(line: 449, column: 13, scope: !16824)
!16840 = !DILocation(line: 450, column: 18, scope: !16824)
!16841 = !DILocation(line: 451, column: 1, scope: !16824)
!16842 = distinct !DISubprogram(name: "next", scope: !2498, file: !2498, line: 46, type: !16843, scopeLine: 47, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16845)
!16843 = !DISubroutineType(types: !16844)
!16844 = !{!2471, !2471}
!16845 = !{!16846, !16847}
!16846 = !DILocalVariable(name: "t", arg: 1, scope: !16842, file: !2498, line: 46, type: !2471)
!16847 = !DILocalVariable(name: "n", scope: !16842, file: !2498, line: 48, type: !16819)
!16848 = !DILocation(line: 0, scope: !16842)
!16849 = !DILocation(line: 48, column: 58, scope: !16842)
!16850 = !DILocation(line: 48, column: 19, scope: !16842)
!16851 = !DILocation(line: 50, column: 9, scope: !16842)
!16852 = !DILocation(line: 50, column: 2, scope: !16842)
!16853 = distinct !DISubprogram(name: "sys_dlist_append", scope: !127, file: !127, line: 404, type: !16854, scopeLine: 405, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16857)
!16854 = !DISubroutineType(types: !16855)
!16855 = !{null, !16856, !16819}
!16856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 32)
!16857 = !{!16858, !16859, !16860}
!16858 = !DILocalVariable(name: "list", arg: 1, scope: !16853, file: !127, line: 404, type: !16856)
!16859 = !DILocalVariable(name: "node", arg: 2, scope: !16853, file: !127, line: 404, type: !16819)
!16860 = !DILocalVariable(name: "tail", scope: !16853, file: !127, line: 406, type: !16831)
!16861 = !DILocation(line: 0, scope: !16853)
!16862 = !DILocation(line: 406, column: 34, scope: !16853)
!16863 = !DILocation(line: 408, column: 8, scope: !16853)
!16864 = !DILocation(line: 408, column: 13, scope: !16853)
!16865 = !DILocation(line: 409, column: 8, scope: !16853)
!16866 = !DILocation(line: 409, column: 13, scope: !16853)
!16867 = !DILocation(line: 411, column: 8, scope: !16853)
!16868 = !DILocation(line: 411, column: 13, scope: !16853)
!16869 = !DILocation(line: 412, column: 13, scope: !16853)
!16870 = !DILocation(line: 413, column: 1, scope: !16853)
!16871 = distinct !DISubprogram(name: "next_timeout", scope: !2498, file: !2498, line: 67, type: !16808, scopeLine: 68, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16872)
!16872 = !{!16873, !16874, !16875}
!16873 = !DILocalVariable(name: "to", scope: !16871, file: !2498, line: 69, type: !2471)
!16874 = !DILocalVariable(name: "ticks_elapsed", scope: !16871, file: !2498, line: 70, type: !765)
!16875 = !DILocalVariable(name: "ret", scope: !16871, file: !2498, line: 71, type: !765)
!16876 = !DILocation(line: 69, column: 24, scope: !16871)
!16877 = !DILocation(line: 0, scope: !16871)
!16878 = !DILocation(line: 70, column: 26, scope: !16871)
!16879 = !DILocation(line: 73, column: 10, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16871, file: !2498, line: 73, column: 6)
!16881 = !DILocation(line: 73, column: 19, scope: !16880)
!16882 = !DILocation(line: 74, column: 21, scope: !16880)
!16883 = !DILocation(line: 74, column: 30, scope: !16880)
!16884 = !DILocation(line: 74, column: 28, scope: !16880)
!16885 = !DILocation(line: 74, column: 45, scope: !16880)
!16886 = !DILocation(line: 73, column: 6, scope: !16871)
!16887 = !DILocation(line: 77, column: 9, scope: !16888)
!16888 = distinct !DILexicalBlock(scope: !16880, file: !2498, line: 76, column: 9)
!16889 = !DILocation(line: 0, scope: !16880)
!16890 = !DILocation(line: 81, column: 20, scope: !16891)
!16891 = distinct !DILexicalBlock(scope: !16871, file: !2498, line: 81, column: 6)
!16892 = !DILocation(line: 81, column: 6, scope: !16891)
!16893 = !DILocation(line: 81, column: 32, scope: !16891)
!16894 = !DILocation(line: 85, column: 2, scope: !16871)
!16895 = distinct !DISubprogram(name: "sys_dlist_peek_next", scope: !127, file: !127, line: 341, type: !16896, scopeLine: 343, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16898)
!16896 = !DISubroutineType(types: !16897)
!16897 = !{!16819, !16856, !16819}
!16898 = !{!16899, !16900}
!16899 = !DILocalVariable(name: "list", arg: 1, scope: !16895, file: !127, line: 341, type: !16856)
!16900 = !DILocalVariable(name: "node", arg: 2, scope: !16895, file: !127, line: 342, type: !16819)
!16901 = !DILocation(line: 0, scope: !16895)
!16902 = !DILocation(line: 344, column: 15, scope: !16895)
!16903 = !DILocation(line: 344, column: 9, scope: !16895)
!16904 = !DILocation(line: 344, column: 26, scope: !16895)
!16905 = !DILocation(line: 344, column: 2, scope: !16895)
!16906 = distinct !DISubprogram(name: "sys_dlist_peek_next_no_check", scope: !127, file: !127, line: 325, type: !16896, scopeLine: 327, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16907)
!16907 = !{!16908, !16909}
!16908 = !DILocalVariable(name: "list", arg: 1, scope: !16906, file: !127, line: 325, type: !16856)
!16909 = !DILocalVariable(name: "node", arg: 2, scope: !16906, file: !127, line: 326, type: !16819)
!16910 = !DILocation(line: 0, scope: !16906)
!16911 = !DILocation(line: 328, column: 24, scope: !16906)
!16912 = !DILocation(line: 328, column: 15, scope: !16906)
!16913 = !DILocation(line: 328, column: 9, scope: !16906)
!16914 = !DILocation(line: 328, column: 45, scope: !16906)
!16915 = !DILocation(line: 328, column: 2, scope: !16906)
!16916 = distinct !DISubprogram(name: "sys_dlist_peek_head", scope: !127, file: !127, line: 294, type: !16917, scopeLine: 295, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16919)
!16917 = !DISubroutineType(types: !16918)
!16918 = !{!16819, !16856}
!16919 = !{!16920}
!16920 = !DILocalVariable(name: "list", arg: 1, scope: !16916, file: !127, line: 294, type: !16856)
!16921 = !DILocation(line: 0, scope: !16916)
!16922 = !DILocation(line: 296, column: 9, scope: !16916)
!16923 = !DILocation(line: 296, column: 2, scope: !16916)
!16924 = distinct !DISubprogram(name: "sys_dlist_is_empty", scope: !127, file: !127, line: 266, type: !16925, scopeLine: 267, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16927)
!16925 = !DISubroutineType(types: !16926)
!16926 = !{!347, !16856}
!16927 = !{!16928}
!16928 = !DILocalVariable(name: "list", arg: 1, scope: !16924, file: !127, line: 266, type: !16856)
!16929 = !DILocation(line: 0, scope: !16924)
!16930 = !DILocation(line: 268, column: 15, scope: !16924)
!16931 = !DILocation(line: 268, column: 20, scope: !16924)
!16932 = !DILocation(line: 268, column: 2, scope: !16924)
!16933 = distinct !DISubprogram(name: "z_abort_timeout", scope: !2498, file: !2498, line: 150, type: !16934, scopeLine: 151, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16936)
!16934 = !DISubroutineType(types: !16935)
!16935 = !{!109, !2471}
!16936 = !{!16937, !16938, !16939, !16941}
!16937 = !DILocalVariable(name: "to", arg: 1, scope: !16933, file: !2498, line: 150, type: !2471)
!16938 = !DILocalVariable(name: "ret", scope: !16933, file: !2498, line: 152, type: !109)
!16939 = !DILocalVariable(name: "__i", scope: !16940, file: !2498, line: 154, type: !16674)
!16940 = distinct !DILexicalBlock(scope: !16933, file: !2498, line: 154, column: 2)
!16941 = !DILocalVariable(name: "__key", scope: !16940, file: !2498, line: 154, type: !16674)
!16942 = !DILocation(line: 0, scope: !16933)
!16943 = !DILocation(line: 0, scope: !16940)
!16944 = !DILocation(line: 0, scope: !16702, inlinedAt: !16945)
!16945 = distinct !DILocation(line: 154, column: 2, scope: !16940)
!16946 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !16947)
!16947 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !16945)
!16948 = !DILocation(line: 0, scope: !16711, inlinedAt: !16947)
!16949 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !16945)
!16950 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !16945)
!16951 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !16945)
!16952 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !16945)
!16953 = !DILocation(line: 155, column: 7, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16955, file: !2498, line: 155, column: 7)
!16955 = distinct !DILexicalBlock(scope: !16956, file: !2498, line: 154, column: 24)
!16956 = distinct !DILexicalBlock(scope: !16940, file: !2498, line: 154, column: 2)
!16957 = !DILocation(line: 155, column: 7, scope: !16955)
!16958 = !DILocation(line: 156, column: 4, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16954, file: !2498, line: 155, column: 39)
!16960 = !DILocation(line: 158, column: 3, scope: !16959)
!16961 = !DILocation(line: 0, scope: !16775, inlinedAt: !16962)
!16962 = distinct !DILocation(line: 154, column: 2, scope: !16956)
!16963 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !16962)
!16964 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !16962)
!16965 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !16962)
!16966 = !DILocation(line: 0, scope: !16789, inlinedAt: !16967)
!16967 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !16962)
!16968 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !16967)
!16969 = !DILocation(line: 161, column: 2, scope: !16933)
!16970 = distinct !DISubprogram(name: "remove_timeout", scope: !2498, file: !2498, line: 53, type: !2492, scopeLine: 54, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16971)
!16971 = !{!16972}
!16972 = !DILocalVariable(name: "t", arg: 1, scope: !16970, file: !2498, line: 53, type: !2471)
!16973 = !DILocation(line: 0, scope: !16970)
!16974 = !DILocation(line: 55, column: 6, scope: !16975)
!16975 = distinct !DILexicalBlock(scope: !16970, file: !2498, line: 55, column: 6)
!16976 = !DILocation(line: 55, column: 14, scope: !16975)
!16977 = !DILocation(line: 55, column: 6, scope: !16970)
!16978 = !DILocation(line: 56, column: 25, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16975, file: !2498, line: 55, column: 23)
!16980 = !DILocation(line: 56, column: 12, scope: !16979)
!16981 = !DILocation(line: 56, column: 19, scope: !16979)
!16982 = !DILocation(line: 57, column: 2, scope: !16979)
!16983 = !DILocation(line: 59, column: 23, scope: !16970)
!16984 = !DILocation(line: 59, column: 2, scope: !16970)
!16985 = !DILocation(line: 60, column: 1, scope: !16970)
!16986 = distinct !DISubprogram(name: "sys_dlist_remove", scope: !127, file: !127, line: 496, type: !16987, scopeLine: 497, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !16989)
!16987 = !DISubroutineType(types: !16988)
!16988 = !{null, !16819}
!16989 = !{!16990, !16991, !16992}
!16990 = !DILocalVariable(name: "node", arg: 1, scope: !16986, file: !127, line: 496, type: !16819)
!16991 = !DILocalVariable(name: "prev", scope: !16986, file: !127, line: 498, type: !16831)
!16992 = !DILocalVariable(name: "next", scope: !16986, file: !127, line: 499, type: !16831)
!16993 = !DILocation(line: 0, scope: !16986)
!16994 = !DILocation(line: 498, column: 34, scope: !16986)
!16995 = !DILocation(line: 499, column: 34, scope: !16986)
!16996 = !DILocation(line: 501, column: 8, scope: !16986)
!16997 = !DILocation(line: 501, column: 13, scope: !16986)
!16998 = !DILocation(line: 502, column: 8, scope: !16986)
!16999 = !DILocation(line: 502, column: 13, scope: !16986)
!17000 = !DILocation(line: 503, column: 2, scope: !16986)
!17001 = !DILocation(line: 504, column: 1, scope: !16986)
!17002 = distinct !DISubprogram(name: "sys_dnode_init", scope: !127, file: !127, line: 211, type: !16987, scopeLine: 212, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17003)
!17003 = !{!17004}
!17004 = !DILocalVariable(name: "node", arg: 1, scope: !17002, file: !127, line: 211, type: !16819)
!17005 = !DILocation(line: 0, scope: !17002)
!17006 = !DILocation(line: 213, column: 8, scope: !17002)
!17007 = !DILocation(line: 213, column: 13, scope: !17002)
!17008 = !DILocation(line: 214, column: 8, scope: !17002)
!17009 = !DILocation(line: 214, column: 13, scope: !17002)
!17010 = !DILocation(line: 215, column: 1, scope: !17002)
!17011 = distinct !DISubprogram(name: "z_timeout_remaining", scope: !2498, file: !2498, line: 183, type: !17012, scopeLine: 184, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17016)
!17012 = !DISubroutineType(types: !17013)
!17013 = !{!103, !17014}
!17014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17015, size: 32)
!17015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2472)
!17016 = !{!17017, !17018, !17019, !17021}
!17017 = !DILocalVariable(name: "timeout", arg: 1, scope: !17011, file: !2498, line: 183, type: !17014)
!17018 = !DILocalVariable(name: "ticks", scope: !17011, file: !2498, line: 185, type: !103)
!17019 = !DILocalVariable(name: "__i", scope: !17020, file: !2498, line: 187, type: !16674)
!17020 = distinct !DILexicalBlock(scope: !17011, file: !2498, line: 187, column: 2)
!17021 = !DILocalVariable(name: "__key", scope: !17020, file: !2498, line: 187, type: !16674)
!17022 = !DILocation(line: 0, scope: !17011)
!17023 = !DILocation(line: 0, scope: !17020)
!17024 = !DILocation(line: 0, scope: !16702, inlinedAt: !17025)
!17025 = distinct !DILocation(line: 187, column: 2, scope: !17020)
!17026 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !17027)
!17027 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !17025)
!17028 = !DILocation(line: 0, scope: !16711, inlinedAt: !17027)
!17029 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !17025)
!17030 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17025)
!17031 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !17025)
!17032 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !17025)
!17033 = !DILocation(line: 188, column: 11, scope: !17034)
!17034 = distinct !DILexicalBlock(scope: !17035, file: !2498, line: 187, column: 24)
!17035 = distinct !DILexicalBlock(scope: !17020, file: !2498, line: 187, column: 2)
!17036 = !DILocation(line: 0, scope: !16775, inlinedAt: !17037)
!17037 = distinct !DILocation(line: 187, column: 2, scope: !17035)
!17038 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !17037)
!17039 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17037)
!17040 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !17037)
!17041 = !DILocation(line: 0, scope: !16789, inlinedAt: !17042)
!17042 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !17037)
!17043 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !17042)
!17044 = !DILocation(line: 191, column: 2, scope: !17011)
!17045 = distinct !DISubprogram(name: "timeout_rem", scope: !2498, file: !2498, line: 165, type: !17012, scopeLine: 166, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17046)
!17046 = !{!17047, !17048, !17049}
!17047 = !DILocalVariable(name: "timeout", arg: 1, scope: !17045, file: !2498, line: 165, type: !17014)
!17048 = !DILocalVariable(name: "ticks", scope: !17045, file: !2498, line: 167, type: !103)
!17049 = !DILocalVariable(name: "t", scope: !17050, file: !2498, line: 173, type: !2471)
!17050 = distinct !DILexicalBlock(scope: !17045, file: !2498, line: 173, column: 2)
!17051 = !DILocation(line: 0, scope: !17045)
!17052 = !DILocation(line: 169, column: 6, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17045, file: !2498, line: 169, column: 6)
!17054 = !DILocation(line: 169, column: 6, scope: !17045)
!17055 = !DILocation(line: 173, column: 28, scope: !17050)
!17056 = !DILocation(line: 0, scope: !17050)
!17057 = !DILocation(line: 173, column: 39, scope: !17058)
!17058 = distinct !DILexicalBlock(scope: !17050, file: !2498, line: 173, column: 2)
!17059 = !DILocation(line: 173, column: 2, scope: !17050)
!17060 = !DILocation(line: 174, column: 15, scope: !17061)
!17061 = distinct !DILexicalBlock(scope: !17058, file: !2498, line: 173, column: 61)
!17062 = !DILocation(line: 174, column: 9, scope: !17061)
!17063 = !DILocation(line: 175, column: 15, scope: !17064)
!17064 = distinct !DILexicalBlock(scope: !17061, file: !2498, line: 175, column: 7)
!17065 = !DILocation(line: 175, column: 7, scope: !17061)
!17066 = !DILocation(line: 173, column: 52, scope: !17058)
!17067 = distinct !{!17067, !17059, !17068}
!17068 = !DILocation(line: 178, column: 2, scope: !17050)
!17069 = !DILocation(line: 180, column: 17, scope: !17045)
!17070 = !DILocation(line: 180, column: 15, scope: !17045)
!17071 = !DILocation(line: 180, column: 2, scope: !17045)
!17072 = !DILocation(line: 181, column: 1, scope: !17045)
!17073 = distinct !DISubprogram(name: "z_is_inactive_timeout", scope: !13240, file: !13240, line: 35, type: !17074, scopeLine: 36, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17076)
!17074 = !DISubroutineType(types: !17075)
!17075 = !{!347, !17014}
!17076 = !{!17077}
!17077 = !DILocalVariable(name: "to", arg: 1, scope: !17073, file: !13240, line: 35, type: !17014)
!17078 = !DILocation(line: 0, scope: !17073)
!17079 = !DILocation(line: 37, column: 35, scope: !17073)
!17080 = !DILocation(line: 37, column: 10, scope: !17073)
!17081 = !DILocation(line: 37, column: 9, scope: !17073)
!17082 = !DILocation(line: 37, column: 2, scope: !17073)
!17083 = distinct !DISubprogram(name: "z_timeout_expires", scope: !2498, file: !2498, line: 194, type: !17012, scopeLine: 195, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17084)
!17084 = !{!17085, !17086, !17087, !17089}
!17085 = !DILocalVariable(name: "timeout", arg: 1, scope: !17083, file: !2498, line: 194, type: !17014)
!17086 = !DILocalVariable(name: "ticks", scope: !17083, file: !2498, line: 196, type: !103)
!17087 = !DILocalVariable(name: "__i", scope: !17088, file: !2498, line: 198, type: !16674)
!17088 = distinct !DILexicalBlock(scope: !17083, file: !2498, line: 198, column: 2)
!17089 = !DILocalVariable(name: "__key", scope: !17088, file: !2498, line: 198, type: !16674)
!17090 = !DILocation(line: 0, scope: !17083)
!17091 = !DILocation(line: 0, scope: !17088)
!17092 = !DILocation(line: 0, scope: !16702, inlinedAt: !17093)
!17093 = distinct !DILocation(line: 198, column: 2, scope: !17088)
!17094 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !17095)
!17095 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !17093)
!17096 = !DILocation(line: 0, scope: !16711, inlinedAt: !17095)
!17097 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !17093)
!17098 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17093)
!17099 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !17093)
!17100 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !17093)
!17101 = !DILocation(line: 199, column: 11, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17103, file: !2498, line: 198, column: 24)
!17103 = distinct !DILexicalBlock(scope: !17088, file: !2498, line: 198, column: 2)
!17104 = !DILocation(line: 199, column: 23, scope: !17102)
!17105 = !DILocation(line: 0, scope: !16775, inlinedAt: !17106)
!17106 = distinct !DILocation(line: 198, column: 2, scope: !17103)
!17107 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !17106)
!17108 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17106)
!17109 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !17106)
!17110 = !DILocation(line: 0, scope: !16789, inlinedAt: !17111)
!17111 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !17106)
!17112 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !17111)
!17113 = !DILocation(line: 199, column: 21, scope: !17102)
!17114 = !DILocation(line: 202, column: 2, scope: !17083)
!17115 = distinct !DISubprogram(name: "z_get_next_timeout_expiry", scope: !2498, file: !2498, line: 205, type: !16808, scopeLine: 206, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17116)
!17116 = !{!17117, !17118, !17120}
!17117 = !DILocalVariable(name: "ret", scope: !17115, file: !2498, line: 207, type: !765)
!17118 = !DILocalVariable(name: "__i", scope: !17119, file: !2498, line: 209, type: !16674)
!17119 = distinct !DILexicalBlock(scope: !17115, file: !2498, line: 209, column: 2)
!17120 = !DILocalVariable(name: "__key", scope: !17119, file: !2498, line: 209, type: !16674)
!17121 = !DILocation(line: 0, scope: !17115)
!17122 = !DILocation(line: 0, scope: !17119)
!17123 = !DILocation(line: 0, scope: !16702, inlinedAt: !17124)
!17124 = distinct !DILocation(line: 209, column: 2, scope: !17119)
!17125 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !17126)
!17126 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !17124)
!17127 = !DILocation(line: 0, scope: !16711, inlinedAt: !17126)
!17128 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !17124)
!17129 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17124)
!17130 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !17124)
!17131 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !17124)
!17132 = !DILocation(line: 210, column: 9, scope: !17133)
!17133 = distinct !DILexicalBlock(scope: !17134, file: !2498, line: 209, column: 24)
!17134 = distinct !DILexicalBlock(scope: !17119, file: !2498, line: 209, column: 2)
!17135 = !DILocation(line: 0, scope: !16775, inlinedAt: !17136)
!17136 = distinct !DILocation(line: 209, column: 2, scope: !17134)
!17137 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !17136)
!17138 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17136)
!17139 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !17136)
!17140 = !DILocation(line: 0, scope: !16789, inlinedAt: !17141)
!17141 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !17136)
!17142 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !17141)
!17143 = !DILocation(line: 212, column: 2, scope: !17115)
!17144 = distinct !DISubprogram(name: "z_set_timeout_expiry", scope: !2498, file: !2498, line: 215, type: !10735, scopeLine: 216, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17145)
!17145 = !{!17146, !17147, !17148, !17150, !17151, !17154, !17155}
!17146 = !DILocalVariable(name: "ticks", arg: 1, scope: !17144, file: !2498, line: 215, type: !765)
!17147 = !DILocalVariable(name: "is_idle", arg: 2, scope: !17144, file: !2498, line: 215, type: !347)
!17148 = !DILocalVariable(name: "__i", scope: !17149, file: !2498, line: 217, type: !16674)
!17149 = distinct !DILexicalBlock(scope: !17144, file: !2498, line: 217, column: 2)
!17150 = !DILocalVariable(name: "__key", scope: !17149, file: !2498, line: 217, type: !16674)
!17151 = !DILocalVariable(name: "next_to", scope: !17152, file: !2498, line: 218, type: !109)
!17152 = distinct !DILexicalBlock(scope: !17153, file: !2498, line: 217, column: 24)
!17153 = distinct !DILexicalBlock(scope: !17149, file: !2498, line: 217, column: 2)
!17154 = !DILocalVariable(name: "sooner", scope: !17152, file: !2498, line: 219, type: !347)
!17155 = !DILocalVariable(name: "imminent", scope: !17152, file: !2498, line: 221, type: !347)
!17156 = !DILocation(line: 0, scope: !17144)
!17157 = !DILocation(line: 0, scope: !17149)
!17158 = !DILocation(line: 0, scope: !16702, inlinedAt: !17159)
!17159 = distinct !DILocation(line: 217, column: 2, scope: !17149)
!17160 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !17161)
!17161 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !17159)
!17162 = !DILocation(line: 0, scope: !16711, inlinedAt: !17161)
!17163 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !17159)
!17164 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17159)
!17165 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !17159)
!17166 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !17159)
!17167 = !DILocation(line: 218, column: 17, scope: !17152)
!17168 = !DILocation(line: 0, scope: !17152)
!17169 = !DILocation(line: 221, column: 27, scope: !17152)
!17170 = !DILocation(line: 233, column: 17, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17152, file: !2498, line: 233, column: 7)
!17172 = !DILocation(line: 234, column: 26, scope: !17173)
!17173 = distinct !DILexicalBlock(scope: !17171, file: !2498, line: 233, column: 56)
!17174 = !DILocation(line: 234, column: 4, scope: !17173)
!17175 = !DILocation(line: 235, column: 3, scope: !17173)
!17176 = !DILocation(line: 0, scope: !16775, inlinedAt: !17177)
!17177 = distinct !DILocation(line: 217, column: 2, scope: !17153)
!17178 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !17177)
!17179 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17177)
!17180 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !17177)
!17181 = !DILocation(line: 0, scope: !16789, inlinedAt: !17182)
!17182 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !17177)
!17183 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !17182)
!17184 = !DILocation(line: 237, column: 1, scope: !17144)
!17185 = distinct !DISubprogram(name: "sys_clock_announce", scope: !2498, file: !2498, line: 239, type: !17186, scopeLine: 240, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17188)
!17186 = !DISubroutineType(types: !17187)
!17187 = !{null, !765}
!17188 = !{!17189, !17190, !17191, !17193}
!17189 = !DILocalVariable(name: "ticks", arg: 1, scope: !17185, file: !2498, line: 239, type: !765)
!17190 = !DILocalVariable(name: "key", scope: !17185, file: !2498, line: 245, type: !16674)
!17191 = !DILocalVariable(name: "t", scope: !17192, file: !2498, line: 262, type: !2471)
!17192 = distinct !DILexicalBlock(scope: !17185, file: !2498, line: 261, column: 67)
!17193 = !DILocalVariable(name: "dt", scope: !17192, file: !2498, line: 263, type: !109)
!17194 = !DILocation(line: 0, scope: !17185)
!17195 = !DILocation(line: 242, column: 2, scope: !17185)
!17196 = !DILocation(line: 0, scope: !16702, inlinedAt: !17197)
!17197 = distinct !DILocation(line: 245, column: 25, scope: !17185)
!17198 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !17199)
!17199 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !17197)
!17200 = !DILocation(line: 0, scope: !16711, inlinedAt: !17199)
!17201 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !17197)
!17202 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17197)
!17203 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !17197)
!17204 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !17197)
!17205 = !DILocation(line: 261, column: 9, scope: !17185)
!17206 = !DILocation(line: 261, column: 17, scope: !17185)
!17207 = !DILocation(line: 261, column: 25, scope: !17185)
!17208 = !DILocation(line: 261, column: 37, scope: !17185)
!17209 = !DILocation(line: 261, column: 47, scope: !17185)
!17210 = !DILocation(line: 261, column: 44, scope: !17185)
!17211 = !DILocation(line: 261, column: 2, scope: !17185)
!17212 = !DILocation(line: 0, scope: !17192)
!17213 = !DILocation(line: 263, column: 12, scope: !17192)
!17214 = !DILocation(line: 265, column: 16, scope: !17192)
!17215 = !DILocation(line: 265, column: 13, scope: !17192)
!17216 = !DILocation(line: 266, column: 13, scope: !17192)
!17217 = !DILocation(line: 267, column: 3, scope: !17192)
!17218 = !DILocation(line: 0, scope: !16775, inlinedAt: !17219)
!17219 = distinct !DILocation(line: 269, column: 3, scope: !17192)
!17220 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !17219)
!17221 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17219)
!17222 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !17219)
!17223 = !DILocation(line: 0, scope: !16789, inlinedAt: !17224)
!17224 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !17219)
!17225 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !17224)
!17226 = !DILocation(line: 270, column: 6, scope: !17192)
!17227 = !DILocation(line: 270, column: 3, scope: !17192)
!17228 = !DILocation(line: 0, scope: !16702, inlinedAt: !17229)
!17229 = distinct !DILocation(line: 271, column: 9, scope: !17192)
!17230 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !17231)
!17231 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !17229)
!17232 = !DILocation(line: 0, scope: !16711, inlinedAt: !17231)
!17233 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !17229)
!17234 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17229)
!17235 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !17229)
!17236 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !17229)
!17237 = !DILocation(line: 272, column: 22, scope: !17192)
!17238 = distinct !{!17238, !17211, !17239}
!17239 = !DILocation(line: 273, column: 2, scope: !17185)
!17240 = !DILocation(line: 276, column: 19, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17242, file: !2498, line: 275, column: 23)
!17242 = distinct !DILexicalBlock(scope: !17185, file: !2498, line: 275, column: 6)
!17243 = !DILocation(line: 277, column: 2, scope: !17241)
!17244 = !DILocation(line: 279, column: 15, scope: !17185)
!17245 = !DILocation(line: 279, column: 12, scope: !17185)
!17246 = !DILocation(line: 280, column: 21, scope: !17185)
!17247 = !DILocation(line: 282, column: 24, scope: !17185)
!17248 = !DILocation(line: 282, column: 2, scope: !17185)
!17249 = !DILocation(line: 0, scope: !16775, inlinedAt: !17250)
!17250 = distinct !DILocation(line: 284, column: 2, scope: !17185)
!17251 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !17250)
!17252 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17250)
!17253 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !17250)
!17254 = !DILocation(line: 0, scope: !16789, inlinedAt: !17255)
!17255 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !17250)
!17256 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !17255)
!17257 = !DILocation(line: 285, column: 1, scope: !17185)
!17258 = distinct !DISubprogram(name: "sys_clock_tick_get", scope: !2498, file: !2498, line: 287, type: !17259, scopeLine: 288, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17261)
!17259 = !DISubroutineType(types: !17260)
!17260 = !{!105}
!17261 = !{!17262, !17263, !17265}
!17262 = !DILocalVariable(name: "t", scope: !17258, file: !2498, line: 289, type: !111)
!17263 = !DILocalVariable(name: "__i", scope: !17264, file: !2498, line: 291, type: !16674)
!17264 = distinct !DILexicalBlock(scope: !17258, file: !2498, line: 291, column: 2)
!17265 = !DILocalVariable(name: "__key", scope: !17264, file: !2498, line: 291, type: !16674)
!17266 = !DILocation(line: 0, scope: !17258)
!17267 = !DILocation(line: 0, scope: !17264)
!17268 = !DILocation(line: 0, scope: !16702, inlinedAt: !17269)
!17269 = distinct !DILocation(line: 291, column: 2, scope: !17264)
!17270 = !DILocation(line: 55, column: 2, scope: !16711, inlinedAt: !17271)
!17271 = distinct !DILocation(line: 145, column: 10, scope: !16702, inlinedAt: !17269)
!17272 = !DILocation(line: 0, scope: !16711, inlinedAt: !17271)
!17273 = !DILocation(line: 148, column: 2, scope: !16719, inlinedAt: !17269)
!17274 = !DILocation(line: 148, column: 2, scope: !16720, inlinedAt: !17269)
!17275 = !DILocation(line: 148, column: 2, scope: !16723, inlinedAt: !17269)
!17276 = !DILocation(line: 160, column: 2, scope: !16702, inlinedAt: !17269)
!17277 = !DILocation(line: 292, column: 7, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17279, file: !2498, line: 291, column: 24)
!17279 = distinct !DILexicalBlock(scope: !17264, file: !2498, line: 291, column: 2)
!17280 = !DILocation(line: 292, column: 19, scope: !17278)
!17281 = !DILocation(line: 0, scope: !16775, inlinedAt: !17282)
!17282 = distinct !DILocation(line: 291, column: 2, scope: !17279)
!17283 = !DILocation(line: 194, column: 2, scope: !16783, inlinedAt: !17282)
!17284 = !DILocation(line: 194, column: 2, scope: !16784, inlinedAt: !17282)
!17285 = !DILocation(line: 194, column: 2, scope: !16787, inlinedAt: !17282)
!17286 = !DILocation(line: 0, scope: !16789, inlinedAt: !17287)
!17287 = distinct !DILocation(line: 215, column: 2, scope: !16775, inlinedAt: !17282)
!17288 = !DILocation(line: 95, column: 2, scope: !16789, inlinedAt: !17287)
!17289 = !DILocation(line: 292, column: 17, scope: !17278)
!17290 = !DILocation(line: 294, column: 2, scope: !17258)
!17291 = distinct !DISubprogram(name: "sys_clock_tick_get_32", scope: !2498, file: !2498, line: 297, type: !6509, scopeLine: 298, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2026)
!17292 = !DILocation(line: 300, column: 19, scope: !17291)
!17293 = !DILocation(line: 300, column: 9, scope: !17291)
!17294 = !DILocation(line: 300, column: 2, scope: !17291)
!17295 = distinct !DISubprogram(name: "z_impl_k_uptime_ticks", scope: !2498, file: !2498, line: 306, type: !17259, scopeLine: 307, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2026)
!17296 = !DILocation(line: 308, column: 9, scope: !17295)
!17297 = !DILocation(line: 308, column: 2, scope: !17295)
!17298 = distinct !DISubprogram(name: "z_impl_k_busy_wait", scope: !2498, file: !2498, line: 319, type: !6519, scopeLine: 320, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17299)
!17299 = !{!17300, !17301, !17302, !17303}
!17300 = !DILocalVariable(name: "usec_to_wait", arg: 1, scope: !17298, file: !2498, line: 319, type: !110)
!17301 = !DILocalVariable(name: "start_cycles", scope: !17298, file: !2498, line: 328, type: !110)
!17302 = !DILocalVariable(name: "cycles_to_wait", scope: !17298, file: !2498, line: 331, type: !110)
!17303 = !DILocalVariable(name: "current_cycles", scope: !17304, file: !2498, line: 338, type: !110)
!17304 = distinct !DILexicalBlock(scope: !17305, file: !2498, line: 337, column: 11)
!17305 = distinct !DILexicalBlock(scope: !17306, file: !2498, line: 337, column: 2)
!17306 = distinct !DILexicalBlock(scope: !17298, file: !2498, line: 337, column: 2)
!17307 = !DILocation(line: 0, scope: !17298)
!17308 = !DILocation(line: 322, column: 19, scope: !17309)
!17309 = distinct !DILexicalBlock(scope: !17298, file: !2498, line: 322, column: 6)
!17310 = !DILocation(line: 322, column: 6, scope: !17298)
!17311 = !DILocation(line: 328, column: 26, scope: !17298)
!17312 = !DILocation(line: 333, column: 43, scope: !17298)
!17313 = !DILocation(line: 337, column: 2, scope: !17298)
!17314 = !DILocation(line: 338, column: 29, scope: !17304)
!17315 = !DILocation(line: 0, scope: !17304)
!17316 = !DILocation(line: 341, column: 23, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17304, file: !2498, line: 341, column: 7)
!17318 = !DILocation(line: 341, column: 39, scope: !17317)
!17319 = !DILocation(line: 349, column: 1, scope: !17298)
!17320 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !118, file: !118, line: 1675, type: !6509, scopeLine: 1676, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2026)
!17321 = !DILocation(line: 1677, column: 9, scope: !17320)
!17322 = !DILocation(line: 1677, column: 2, scope: !17320)
!17323 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !17324, file: !17324, line: 24, type: !6509, scopeLine: 25, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !2026)
!17324 = !DIFile(filename: "zephyr/include/zephyr/arch/arm/aarch32/misc.h", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17325 = !DILocation(line: 26, column: 9, scope: !17323)
!17326 = !DILocation(line: 26, column: 2, scope: !17323)
!17327 = distinct !DISubprogram(name: "sys_clock_timeout_end_calc", scope: !2498, file: !2498, line: 364, type: !17328, scopeLine: 365, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2468, retainedNodes: !17330)
!17328 = !DISubroutineType(types: !17329)
!17329 = !{!111, !16664}
!17330 = !{!17331, !17332}
!17331 = !DILocalVariable(name: "timeout", arg: 1, scope: !17327, file: !2498, line: 364, type: !16664)
!17332 = !DILocalVariable(name: "dt", scope: !17327, file: !2498, line: 366, type: !103)
!17333 = !DILocation(line: 0, scope: !17327)
!17334 = !DILocation(line: 368, column: 6, scope: !17327)
!17335 = !DILocation(line: 371, column: 10, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17337, file: !2498, line: 370, column: 47)
!17337 = distinct !DILexicalBlock(scope: !17338, file: !2498, line: 370, column: 13)
!17338 = distinct !DILexicalBlock(scope: !17327, file: !2498, line: 368, column: 6)
!17339 = !DILocation(line: 371, column: 3, scope: !17336)
!17340 = !DILocation(line: 376, column: 58, scope: !17341)
!17341 = distinct !DILexicalBlock(scope: !17342, file: !2498, line: 376, column: 7)
!17342 = distinct !DILexicalBlock(scope: !17337, file: !2498, line: 372, column: 9)
!17343 = !DILocation(line: 376, column: 7, scope: !17342)
!17344 = !DILocation(line: 376, column: 43, scope: !17341)
!17345 = !DILocation(line: 377, column: 4, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17341, file: !2498, line: 376, column: 64)
!17347 = !DILocation(line: 379, column: 10, scope: !17342)
!17348 = !DILocation(line: 379, column: 33, scope: !17342)
!17349 = !DILocation(line: 379, column: 31, scope: !17342)
!17350 = !DILocation(line: 379, column: 3, scope: !17342)
!17351 = !DILocation(line: 0, scope: !17338)
!17352 = !DILocation(line: 381, column: 1, scope: !17327)
!17353 = distinct !DISubprogram(name: "boot_banner", scope: !17354, file: !17354, line: 26, type: !3089, scopeLine: 27, flags: DIFlagPrototyped | DIFlagAllCallsDescribed, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !3075, retainedNodes: !2026)
!17354 = !DIFile(filename: "zephyr/kernel/banner.c", directory: "/home/mjshen/RTOSExploration/zephyrproject")
!17355 = !DILocation(line: 34, column: 2, scope: !17353)
!17356 = !DILocation(line: 36, column: 1, scope: !17353)
